// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180419

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Azure Active Directory Application
type AzureActiveDirectoryApp struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey string `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId string `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId string `pulumi:"tenantId"`
}

// AzureActiveDirectoryAppInput is an input type that accepts AzureActiveDirectoryAppArgs and AzureActiveDirectoryAppOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppInput` via:
//
//          AzureActiveDirectoryAppArgs{...}
type AzureActiveDirectoryAppInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput
	ToAzureActiveDirectoryAppOutputWithContext(context.Context) AzureActiveDirectoryAppOutput
}

// Azure Active Directory Application
type AzureActiveDirectoryAppArgs struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey pulumi.StringInput `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureActiveDirectoryAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryApp)(nil)).Elem()
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput {
	return i.ToAzureActiveDirectoryAppOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppOutputWithContext(ctx context.Context) AzureActiveDirectoryAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppOutput)
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return i.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppArgs) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppOutput).ToAzureActiveDirectoryAppPtrOutputWithContext(ctx)
}

// AzureActiveDirectoryAppPtrInput is an input type that accepts AzureActiveDirectoryAppArgs, AzureActiveDirectoryAppPtr and AzureActiveDirectoryAppPtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppPtrInput` via:
//
//          AzureActiveDirectoryAppArgs{...}
//
//  or:
//
//          nil
type AzureActiveDirectoryAppPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput
	ToAzureActiveDirectoryAppPtrOutputWithContext(context.Context) AzureActiveDirectoryAppPtrOutput
}

type azureActiveDirectoryAppPtrType AzureActiveDirectoryAppArgs

func AzureActiveDirectoryAppPtr(v *AzureActiveDirectoryAppArgs) AzureActiveDirectoryAppPtrInput {
	return (*azureActiveDirectoryAppPtrType)(v)
}

func (*azureActiveDirectoryAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryApp)(nil)).Elem()
}

func (i *azureActiveDirectoryAppPtrType) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return i.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryAppPtrType) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppPtrOutput)
}

// Azure Active Directory Application
type AzureActiveDirectoryAppOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryApp)(nil)).Elem()
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppOutput() AzureActiveDirectoryAppOutput {
	return o
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppOutputWithContext(ctx context.Context) AzureActiveDirectoryAppOutput {
	return o
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return o.ToAzureActiveDirectoryAppPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryAppOutput) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) *AzureActiveDirectoryApp {
		return &v
	}).(AzureActiveDirectoryAppPtrOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.AppKey }).(pulumi.StringOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryApp) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureActiveDirectoryAppPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryApp)(nil)).Elem()
}

func (o AzureActiveDirectoryAppPtrOutput) ToAzureActiveDirectoryAppPtrOutput() AzureActiveDirectoryAppPtrOutput {
	return o
}

func (o AzureActiveDirectoryAppPtrOutput) ToAzureActiveDirectoryAppPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppPtrOutput {
	return o
}

func (o AzureActiveDirectoryAppPtrOutput) Elem() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) AzureActiveDirectoryApp { return *v }).(AzureActiveDirectoryAppOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppPtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.AppKey
	}).(pulumi.StringPtrOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryApp) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory Application
type AzureActiveDirectoryAppInvokeResponse struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey string `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId string `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId string `pulumi:"tenantId"`
}

// AzureActiveDirectoryAppInvokeResponseInput is an input type that accepts AzureActiveDirectoryAppInvokeResponseArgs and AzureActiveDirectoryAppInvokeResponseOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppInvokeResponseInput` via:
//
//          AzureActiveDirectoryAppInvokeResponseArgs{...}
type AzureActiveDirectoryAppInvokeResponseInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppInvokeResponseOutput() AzureActiveDirectoryAppInvokeResponseOutput
	ToAzureActiveDirectoryAppInvokeResponseOutputWithContext(context.Context) AzureActiveDirectoryAppInvokeResponseOutput
}

// Azure Active Directory Application
type AzureActiveDirectoryAppInvokeResponseArgs struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey pulumi.StringInput `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureActiveDirectoryAppInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppInvokeResponse)(nil)).Elem()
}

func (i AzureActiveDirectoryAppInvokeResponseArgs) ToAzureActiveDirectoryAppInvokeResponseOutput() AzureActiveDirectoryAppInvokeResponseOutput {
	return i.ToAzureActiveDirectoryAppInvokeResponseOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppInvokeResponseArgs) ToAzureActiveDirectoryAppInvokeResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppInvokeResponseOutput)
}

func (i AzureActiveDirectoryAppInvokeResponseArgs) ToAzureActiveDirectoryAppInvokeResponsePtrOutput() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppInvokeResponseArgs) ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppInvokeResponseOutput).ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(ctx)
}

// AzureActiveDirectoryAppInvokeResponsePtrInput is an input type that accepts AzureActiveDirectoryAppInvokeResponseArgs, AzureActiveDirectoryAppInvokeResponsePtr and AzureActiveDirectoryAppInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppInvokeResponsePtrInput` via:
//
//          AzureActiveDirectoryAppInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AzureActiveDirectoryAppInvokeResponsePtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppInvokeResponsePtrOutput() AzureActiveDirectoryAppInvokeResponsePtrOutput
	ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(context.Context) AzureActiveDirectoryAppInvokeResponsePtrOutput
}

type azureActiveDirectoryAppInvokeResponsePtrType AzureActiveDirectoryAppInvokeResponseArgs

func AzureActiveDirectoryAppInvokeResponsePtr(v *AzureActiveDirectoryAppInvokeResponseArgs) AzureActiveDirectoryAppInvokeResponsePtrInput {
	return (*azureActiveDirectoryAppInvokeResponsePtrType)(v)
}

func (*azureActiveDirectoryAppInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppInvokeResponse)(nil)).Elem()
}

func (i *azureActiveDirectoryAppInvokeResponsePtrType) ToAzureActiveDirectoryAppInvokeResponsePtrOutput() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryAppInvokeResponsePtrType) ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppInvokeResponsePtrOutput)
}

// Azure Active Directory Application
type AzureActiveDirectoryAppInvokeResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppInvokeResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppInvokeResponseOutput) ToAzureActiveDirectoryAppInvokeResponseOutput() AzureActiveDirectoryAppInvokeResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppInvokeResponseOutput) ToAzureActiveDirectoryAppInvokeResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppInvokeResponseOutput) ToAzureActiveDirectoryAppInvokeResponsePtrOutput() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o.ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryAppInvokeResponseOutput) ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppInvokeResponse) *AzureActiveDirectoryAppInvokeResponse {
		return &v
	}).(AzureActiveDirectoryAppInvokeResponsePtrOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppInvokeResponseOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppInvokeResponse) string { return v.AppKey }).(pulumi.StringOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppInvokeResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppInvokeResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppInvokeResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppInvokeResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureActiveDirectoryAppInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppInvokeResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) ToAzureActiveDirectoryAppInvokeResponsePtrOutput() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) ToAzureActiveDirectoryAppInvokeResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) Elem() AzureActiveDirectoryAppInvokeResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppInvokeResponse) AzureActiveDirectoryAppInvokeResponse { return *v }).(AzureActiveDirectoryAppInvokeResponseOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppKey
	}).(pulumi.StringPtrOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppInvokeResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory Application
type AzureActiveDirectoryAppResponse struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey string `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId string `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId string `pulumi:"tenantId"`
}

// AzureActiveDirectoryAppResponseInput is an input type that accepts AzureActiveDirectoryAppResponseArgs and AzureActiveDirectoryAppResponseOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppResponseInput` via:
//
//          AzureActiveDirectoryAppResponseArgs{...}
type AzureActiveDirectoryAppResponseInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput
	ToAzureActiveDirectoryAppResponseOutputWithContext(context.Context) AzureActiveDirectoryAppResponseOutput
}

// Azure Active Directory Application
type AzureActiveDirectoryAppResponseArgs struct {
	// Key used to authenticate to the Azure Active Directory Application
	AppKey pulumi.StringInput `pulumi:"appKey"`
	// Application ID of the Azure Active Directory Application
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// Tenant id of the customer
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AzureActiveDirectoryAppResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput {
	return i.ToAzureActiveDirectoryAppResponseOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponseOutput)
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryAppResponseArgs) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponseOutput).ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx)
}

// AzureActiveDirectoryAppResponsePtrInput is an input type that accepts AzureActiveDirectoryAppResponseArgs, AzureActiveDirectoryAppResponsePtr and AzureActiveDirectoryAppResponsePtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryAppResponsePtrInput` via:
//
//          AzureActiveDirectoryAppResponseArgs{...}
//
//  or:
//
//          nil
type AzureActiveDirectoryAppResponsePtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput
	ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Context) AzureActiveDirectoryAppResponsePtrOutput
}

type azureActiveDirectoryAppResponsePtrType AzureActiveDirectoryAppResponseArgs

func AzureActiveDirectoryAppResponsePtr(v *AzureActiveDirectoryAppResponseArgs) AzureActiveDirectoryAppResponsePtrInput {
	return (*azureActiveDirectoryAppResponsePtrType)(v)
}

func (*azureActiveDirectoryAppResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (i *azureActiveDirectoryAppResponsePtrType) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return i.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryAppResponsePtrType) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryAppResponsePtrOutput)
}

// Azure Active Directory Application
type AzureActiveDirectoryAppResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponseOutput() AzureActiveDirectoryAppResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponseOutput {
	return o
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ToAzureActiveDirectoryAppResponsePtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryAppResponseOutput) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) *AzureActiveDirectoryAppResponse {
		return &v
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppResponseOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.AppKey }).(pulumi.StringOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppResponseOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureActiveDirectoryAppResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

type AzureActiveDirectoryAppResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryAppResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryAppResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryAppResponsePtrOutput) ToAzureActiveDirectoryAppResponsePtrOutput() AzureActiveDirectoryAppResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppResponsePtrOutput) ToAzureActiveDirectoryAppResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryAppResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryAppResponsePtrOutput) Elem() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) AzureActiveDirectoryAppResponse { return *v }).(AzureActiveDirectoryAppResponseOutput)
}

// Key used to authenticate to the Azure Active Directory Application
func (o AzureActiveDirectoryAppResponsePtrOutput) AppKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AppKey
	}).(pulumi.StringPtrOutput)
}

// Application ID of the Azure Active Directory Application
func (o AzureActiveDirectoryAppResponsePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// Tenant id of the customer
func (o AzureActiveDirectoryAppResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryAppResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Information of the backup file
type BackupFileInfoInvokeResponse struct {
	// Sequence number of the backup file in the backup set
	FamilySequenceNumber *int `pulumi:"familySequenceNumber"`
	// Location of the backup file in shared folder
	FileLocation *string `pulumi:"fileLocation"`
	// Status of the backup file during migration
	Status *string `pulumi:"status"`
}

// BackupFileInfoInvokeResponseInput is an input type that accepts BackupFileInfoInvokeResponseArgs and BackupFileInfoInvokeResponseOutput values.
// You can construct a concrete instance of `BackupFileInfoInvokeResponseInput` via:
//
//          BackupFileInfoInvokeResponseArgs{...}
type BackupFileInfoInvokeResponseInput interface {
	pulumi.Input

	ToBackupFileInfoInvokeResponseOutput() BackupFileInfoInvokeResponseOutput
	ToBackupFileInfoInvokeResponseOutputWithContext(context.Context) BackupFileInfoInvokeResponseOutput
}

// Information of the backup file
type BackupFileInfoInvokeResponseArgs struct {
	// Sequence number of the backup file in the backup set
	FamilySequenceNumber pulumi.IntPtrInput `pulumi:"familySequenceNumber"`
	// Location of the backup file in shared folder
	FileLocation pulumi.StringPtrInput `pulumi:"fileLocation"`
	// Status of the backup file during migration
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BackupFileInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoInvokeResponse)(nil)).Elem()
}

func (i BackupFileInfoInvokeResponseArgs) ToBackupFileInfoInvokeResponseOutput() BackupFileInfoInvokeResponseOutput {
	return i.ToBackupFileInfoInvokeResponseOutputWithContext(context.Background())
}

func (i BackupFileInfoInvokeResponseArgs) ToBackupFileInfoInvokeResponseOutputWithContext(ctx context.Context) BackupFileInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoInvokeResponseOutput)
}

// BackupFileInfoInvokeResponseArrayInput is an input type that accepts BackupFileInfoInvokeResponseArray and BackupFileInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BackupFileInfoInvokeResponseArrayInput` via:
//
//          BackupFileInfoInvokeResponseArray{ BackupFileInfoInvokeResponseArgs{...} }
type BackupFileInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToBackupFileInfoInvokeResponseArrayOutput() BackupFileInfoInvokeResponseArrayOutput
	ToBackupFileInfoInvokeResponseArrayOutputWithContext(context.Context) BackupFileInfoInvokeResponseArrayOutput
}

type BackupFileInfoInvokeResponseArray []BackupFileInfoInvokeResponseInput

func (BackupFileInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoInvokeResponse)(nil)).Elem()
}

func (i BackupFileInfoInvokeResponseArray) ToBackupFileInfoInvokeResponseArrayOutput() BackupFileInfoInvokeResponseArrayOutput {
	return i.ToBackupFileInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BackupFileInfoInvokeResponseArray) ToBackupFileInfoInvokeResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoInvokeResponseArrayOutput)
}

// Information of the backup file
type BackupFileInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (BackupFileInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoInvokeResponse)(nil)).Elem()
}

func (o BackupFileInfoInvokeResponseOutput) ToBackupFileInfoInvokeResponseOutput() BackupFileInfoInvokeResponseOutput {
	return o
}

func (o BackupFileInfoInvokeResponseOutput) ToBackupFileInfoInvokeResponseOutputWithContext(ctx context.Context) BackupFileInfoInvokeResponseOutput {
	return o
}

// Sequence number of the backup file in the backup set
func (o BackupFileInfoInvokeResponseOutput) FamilySequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupFileInfoInvokeResponse) *int { return v.FamilySequenceNumber }).(pulumi.IntPtrOutput)
}

// Location of the backup file in shared folder
func (o BackupFileInfoInvokeResponseOutput) FileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoInvokeResponse) *string { return v.FileLocation }).(pulumi.StringPtrOutput)
}

// Status of the backup file during migration
func (o BackupFileInfoInvokeResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoInvokeResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BackupFileInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupFileInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoInvokeResponse)(nil)).Elem()
}

func (o BackupFileInfoInvokeResponseArrayOutput) ToBackupFileInfoInvokeResponseArrayOutput() BackupFileInfoInvokeResponseArrayOutput {
	return o
}

func (o BackupFileInfoInvokeResponseArrayOutput) ToBackupFileInfoInvokeResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoInvokeResponseArrayOutput {
	return o
}

func (o BackupFileInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) BackupFileInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupFileInfoInvokeResponse {
		return vs[0].([]BackupFileInfoInvokeResponse)[vs[1].(int)]
	}).(BackupFileInfoInvokeResponseOutput)
}

// Information of the backup file
type BackupFileInfoResponse struct {
	// Sequence number of the backup file in the backup set
	FamilySequenceNumber *int `pulumi:"familySequenceNumber"`
	// Location of the backup file in shared folder
	FileLocation *string `pulumi:"fileLocation"`
	// Status of the backup file during migration
	Status *string `pulumi:"status"`
}

// BackupFileInfoResponseInput is an input type that accepts BackupFileInfoResponseArgs and BackupFileInfoResponseOutput values.
// You can construct a concrete instance of `BackupFileInfoResponseInput` via:
//
//          BackupFileInfoResponseArgs{...}
type BackupFileInfoResponseInput interface {
	pulumi.Input

	ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput
	ToBackupFileInfoResponseOutputWithContext(context.Context) BackupFileInfoResponseOutput
}

// Information of the backup file
type BackupFileInfoResponseArgs struct {
	// Sequence number of the backup file in the backup set
	FamilySequenceNumber pulumi.IntPtrInput `pulumi:"familySequenceNumber"`
	// Location of the backup file in shared folder
	FileLocation pulumi.StringPtrInput `pulumi:"fileLocation"`
	// Status of the backup file during migration
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (BackupFileInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoResponse)(nil)).Elem()
}

func (i BackupFileInfoResponseArgs) ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput {
	return i.ToBackupFileInfoResponseOutputWithContext(context.Background())
}

func (i BackupFileInfoResponseArgs) ToBackupFileInfoResponseOutputWithContext(ctx context.Context) BackupFileInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoResponseOutput)
}

// BackupFileInfoResponseArrayInput is an input type that accepts BackupFileInfoResponseArray and BackupFileInfoResponseArrayOutput values.
// You can construct a concrete instance of `BackupFileInfoResponseArrayInput` via:
//
//          BackupFileInfoResponseArray{ BackupFileInfoResponseArgs{...} }
type BackupFileInfoResponseArrayInput interface {
	pulumi.Input

	ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput
	ToBackupFileInfoResponseArrayOutputWithContext(context.Context) BackupFileInfoResponseArrayOutput
}

type BackupFileInfoResponseArray []BackupFileInfoResponseInput

func (BackupFileInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoResponse)(nil)).Elem()
}

func (i BackupFileInfoResponseArray) ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput {
	return i.ToBackupFileInfoResponseArrayOutputWithContext(context.Background())
}

func (i BackupFileInfoResponseArray) ToBackupFileInfoResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupFileInfoResponseArrayOutput)
}

// Information of the backup file
type BackupFileInfoResponseOutput struct{ *pulumi.OutputState }

func (BackupFileInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupFileInfoResponse)(nil)).Elem()
}

func (o BackupFileInfoResponseOutput) ToBackupFileInfoResponseOutput() BackupFileInfoResponseOutput {
	return o
}

func (o BackupFileInfoResponseOutput) ToBackupFileInfoResponseOutputWithContext(ctx context.Context) BackupFileInfoResponseOutput {
	return o
}

// Sequence number of the backup file in the backup set
func (o BackupFileInfoResponseOutput) FamilySequenceNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *int { return v.FamilySequenceNumber }).(pulumi.IntPtrOutput)
}

// Location of the backup file in shared folder
func (o BackupFileInfoResponseOutput) FileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *string { return v.FileLocation }).(pulumi.StringPtrOutput)
}

// Status of the backup file during migration
func (o BackupFileInfoResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupFileInfoResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type BackupFileInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupFileInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupFileInfoResponse)(nil)).Elem()
}

func (o BackupFileInfoResponseArrayOutput) ToBackupFileInfoResponseArrayOutput() BackupFileInfoResponseArrayOutput {
	return o
}

func (o BackupFileInfoResponseArrayOutput) ToBackupFileInfoResponseArrayOutputWithContext(ctx context.Context) BackupFileInfoResponseArrayOutput {
	return o
}

func (o BackupFileInfoResponseArrayOutput) Index(i pulumi.IntInput) BackupFileInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupFileInfoResponse {
		return vs[0].([]BackupFileInfoResponse)[vs[1].(int)]
	}).(BackupFileInfoResponseOutput)
}

// Information of backup set
type BackupSetInfoInvokeResponse struct {
	// Date and time that the backup operation finished
	BackupFinishedDate *string `pulumi:"backupFinishedDate"`
	// Id for the set of backup files
	BackupSetId *string `pulumi:"backupSetId"`
	// Date and time that the backup operation began
	BackupStartDate *string `pulumi:"backupStartDate"`
	// Enum of the different backup types
	BackupType *string `pulumi:"backupType"`
	// Name of the database to which the backup set belongs
	DatabaseName *string `pulumi:"databaseName"`
	// First log sequence number of the backup file
	FirstLsn *string `pulumi:"firstLsn"`
	// Whether the backup set is restored or not
	IsBackupRestored *bool `pulumi:"isBackupRestored"`
	// Last log sequence number of the backup file
	LastLsn *string `pulumi:"lastLsn"`
	// Last modified time of the backup file in share location
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// List of files in the backup set
	ListOfBackupFiles []BackupFileInfoInvokeResponse `pulumi:"listOfBackupFiles"`
}

// BackupSetInfoInvokeResponseInput is an input type that accepts BackupSetInfoInvokeResponseArgs and BackupSetInfoInvokeResponseOutput values.
// You can construct a concrete instance of `BackupSetInfoInvokeResponseInput` via:
//
//          BackupSetInfoInvokeResponseArgs{...}
type BackupSetInfoInvokeResponseInput interface {
	pulumi.Input

	ToBackupSetInfoInvokeResponseOutput() BackupSetInfoInvokeResponseOutput
	ToBackupSetInfoInvokeResponseOutputWithContext(context.Context) BackupSetInfoInvokeResponseOutput
}

// Information of backup set
type BackupSetInfoInvokeResponseArgs struct {
	// Date and time that the backup operation finished
	BackupFinishedDate pulumi.StringPtrInput `pulumi:"backupFinishedDate"`
	// Id for the set of backup files
	BackupSetId pulumi.StringPtrInput `pulumi:"backupSetId"`
	// Date and time that the backup operation began
	BackupStartDate pulumi.StringPtrInput `pulumi:"backupStartDate"`
	// Enum of the different backup types
	BackupType pulumi.StringPtrInput `pulumi:"backupType"`
	// Name of the database to which the backup set belongs
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// First log sequence number of the backup file
	FirstLsn pulumi.StringPtrInput `pulumi:"firstLsn"`
	// Whether the backup set is restored or not
	IsBackupRestored pulumi.BoolPtrInput `pulumi:"isBackupRestored"`
	// Last log sequence number of the backup file
	LastLsn pulumi.StringPtrInput `pulumi:"lastLsn"`
	// Last modified time of the backup file in share location
	LastModifiedTime pulumi.StringPtrInput `pulumi:"lastModifiedTime"`
	// List of files in the backup set
	ListOfBackupFiles BackupFileInfoInvokeResponseArrayInput `pulumi:"listOfBackupFiles"`
}

func (BackupSetInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoInvokeResponse)(nil)).Elem()
}

func (i BackupSetInfoInvokeResponseArgs) ToBackupSetInfoInvokeResponseOutput() BackupSetInfoInvokeResponseOutput {
	return i.ToBackupSetInfoInvokeResponseOutputWithContext(context.Background())
}

func (i BackupSetInfoInvokeResponseArgs) ToBackupSetInfoInvokeResponseOutputWithContext(ctx context.Context) BackupSetInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoInvokeResponseOutput)
}

// BackupSetInfoInvokeResponseArrayInput is an input type that accepts BackupSetInfoInvokeResponseArray and BackupSetInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BackupSetInfoInvokeResponseArrayInput` via:
//
//          BackupSetInfoInvokeResponseArray{ BackupSetInfoInvokeResponseArgs{...} }
type BackupSetInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToBackupSetInfoInvokeResponseArrayOutput() BackupSetInfoInvokeResponseArrayOutput
	ToBackupSetInfoInvokeResponseArrayOutputWithContext(context.Context) BackupSetInfoInvokeResponseArrayOutput
}

type BackupSetInfoInvokeResponseArray []BackupSetInfoInvokeResponseInput

func (BackupSetInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoInvokeResponse)(nil)).Elem()
}

func (i BackupSetInfoInvokeResponseArray) ToBackupSetInfoInvokeResponseArrayOutput() BackupSetInfoInvokeResponseArrayOutput {
	return i.ToBackupSetInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BackupSetInfoInvokeResponseArray) ToBackupSetInfoInvokeResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoInvokeResponseArrayOutput)
}

// Information of backup set
type BackupSetInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (BackupSetInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoInvokeResponse)(nil)).Elem()
}

func (o BackupSetInfoInvokeResponseOutput) ToBackupSetInfoInvokeResponseOutput() BackupSetInfoInvokeResponseOutput {
	return o
}

func (o BackupSetInfoInvokeResponseOutput) ToBackupSetInfoInvokeResponseOutputWithContext(ctx context.Context) BackupSetInfoInvokeResponseOutput {
	return o
}

// Date and time that the backup operation finished
func (o BackupSetInfoInvokeResponseOutput) BackupFinishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.BackupFinishedDate }).(pulumi.StringPtrOutput)
}

// Id for the set of backup files
func (o BackupSetInfoInvokeResponseOutput) BackupSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.BackupSetId }).(pulumi.StringPtrOutput)
}

// Date and time that the backup operation began
func (o BackupSetInfoInvokeResponseOutput) BackupStartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.BackupStartDate }).(pulumi.StringPtrOutput)
}

// Enum of the different backup types
func (o BackupSetInfoInvokeResponseOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.BackupType }).(pulumi.StringPtrOutput)
}

// Name of the database to which the backup set belongs
func (o BackupSetInfoInvokeResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// First log sequence number of the backup file
func (o BackupSetInfoInvokeResponseOutput) FirstLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.FirstLsn }).(pulumi.StringPtrOutput)
}

// Whether the backup set is restored or not
func (o BackupSetInfoInvokeResponseOutput) IsBackupRestored() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *bool { return v.IsBackupRestored }).(pulumi.BoolPtrOutput)
}

// Last log sequence number of the backup file
func (o BackupSetInfoInvokeResponseOutput) LastLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.LastLsn }).(pulumi.StringPtrOutput)
}

// Last modified time of the backup file in share location
func (o BackupSetInfoInvokeResponseOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// List of files in the backup set
func (o BackupSetInfoInvokeResponseOutput) ListOfBackupFiles() BackupFileInfoInvokeResponseArrayOutput {
	return o.ApplyT(func(v BackupSetInfoInvokeResponse) []BackupFileInfoInvokeResponse { return v.ListOfBackupFiles }).(BackupFileInfoInvokeResponseArrayOutput)
}

type BackupSetInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupSetInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoInvokeResponse)(nil)).Elem()
}

func (o BackupSetInfoInvokeResponseArrayOutput) ToBackupSetInfoInvokeResponseArrayOutput() BackupSetInfoInvokeResponseArrayOutput {
	return o
}

func (o BackupSetInfoInvokeResponseArrayOutput) ToBackupSetInfoInvokeResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoInvokeResponseArrayOutput {
	return o
}

func (o BackupSetInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) BackupSetInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupSetInfoInvokeResponse {
		return vs[0].([]BackupSetInfoInvokeResponse)[vs[1].(int)]
	}).(BackupSetInfoInvokeResponseOutput)
}

// Information of backup set
type BackupSetInfoResponse struct {
	// Date and time that the backup operation finished
	BackupFinishedDate *string `pulumi:"backupFinishedDate"`
	// Id for the set of backup files
	BackupSetId *string `pulumi:"backupSetId"`
	// Date and time that the backup operation began
	BackupStartDate *string `pulumi:"backupStartDate"`
	// Enum of the different backup types
	BackupType *string `pulumi:"backupType"`
	// Name of the database to which the backup set belongs
	DatabaseName *string `pulumi:"databaseName"`
	// First log sequence number of the backup file
	FirstLsn *string `pulumi:"firstLsn"`
	// Whether the backup set is restored or not
	IsBackupRestored *bool `pulumi:"isBackupRestored"`
	// Last log sequence number of the backup file
	LastLsn *string `pulumi:"lastLsn"`
	// Last modified time of the backup file in share location
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// List of files in the backup set
	ListOfBackupFiles []BackupFileInfoResponse `pulumi:"listOfBackupFiles"`
}

// BackupSetInfoResponseInput is an input type that accepts BackupSetInfoResponseArgs and BackupSetInfoResponseOutput values.
// You can construct a concrete instance of `BackupSetInfoResponseInput` via:
//
//          BackupSetInfoResponseArgs{...}
type BackupSetInfoResponseInput interface {
	pulumi.Input

	ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput
	ToBackupSetInfoResponseOutputWithContext(context.Context) BackupSetInfoResponseOutput
}

// Information of backup set
type BackupSetInfoResponseArgs struct {
	// Date and time that the backup operation finished
	BackupFinishedDate pulumi.StringPtrInput `pulumi:"backupFinishedDate"`
	// Id for the set of backup files
	BackupSetId pulumi.StringPtrInput `pulumi:"backupSetId"`
	// Date and time that the backup operation began
	BackupStartDate pulumi.StringPtrInput `pulumi:"backupStartDate"`
	// Enum of the different backup types
	BackupType pulumi.StringPtrInput `pulumi:"backupType"`
	// Name of the database to which the backup set belongs
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// First log sequence number of the backup file
	FirstLsn pulumi.StringPtrInput `pulumi:"firstLsn"`
	// Whether the backup set is restored or not
	IsBackupRestored pulumi.BoolPtrInput `pulumi:"isBackupRestored"`
	// Last log sequence number of the backup file
	LastLsn pulumi.StringPtrInput `pulumi:"lastLsn"`
	// Last modified time of the backup file in share location
	LastModifiedTime pulumi.StringPtrInput `pulumi:"lastModifiedTime"`
	// List of files in the backup set
	ListOfBackupFiles BackupFileInfoResponseArrayInput `pulumi:"listOfBackupFiles"`
}

func (BackupSetInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoResponse)(nil)).Elem()
}

func (i BackupSetInfoResponseArgs) ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput {
	return i.ToBackupSetInfoResponseOutputWithContext(context.Background())
}

func (i BackupSetInfoResponseArgs) ToBackupSetInfoResponseOutputWithContext(ctx context.Context) BackupSetInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoResponseOutput)
}

// BackupSetInfoResponseArrayInput is an input type that accepts BackupSetInfoResponseArray and BackupSetInfoResponseArrayOutput values.
// You can construct a concrete instance of `BackupSetInfoResponseArrayInput` via:
//
//          BackupSetInfoResponseArray{ BackupSetInfoResponseArgs{...} }
type BackupSetInfoResponseArrayInput interface {
	pulumi.Input

	ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput
	ToBackupSetInfoResponseArrayOutputWithContext(context.Context) BackupSetInfoResponseArrayOutput
}

type BackupSetInfoResponseArray []BackupSetInfoResponseInput

func (BackupSetInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoResponse)(nil)).Elem()
}

func (i BackupSetInfoResponseArray) ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput {
	return i.ToBackupSetInfoResponseArrayOutputWithContext(context.Background())
}

func (i BackupSetInfoResponseArray) ToBackupSetInfoResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSetInfoResponseArrayOutput)
}

// Information of backup set
type BackupSetInfoResponseOutput struct{ *pulumi.OutputState }

func (BackupSetInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSetInfoResponse)(nil)).Elem()
}

func (o BackupSetInfoResponseOutput) ToBackupSetInfoResponseOutput() BackupSetInfoResponseOutput {
	return o
}

func (o BackupSetInfoResponseOutput) ToBackupSetInfoResponseOutputWithContext(ctx context.Context) BackupSetInfoResponseOutput {
	return o
}

// Date and time that the backup operation finished
func (o BackupSetInfoResponseOutput) BackupFinishedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupFinishedDate }).(pulumi.StringPtrOutput)
}

// Id for the set of backup files
func (o BackupSetInfoResponseOutput) BackupSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupSetId }).(pulumi.StringPtrOutput)
}

// Date and time that the backup operation began
func (o BackupSetInfoResponseOutput) BackupStartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupStartDate }).(pulumi.StringPtrOutput)
}

// Enum of the different backup types
func (o BackupSetInfoResponseOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.BackupType }).(pulumi.StringPtrOutput)
}

// Name of the database to which the backup set belongs
func (o BackupSetInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// First log sequence number of the backup file
func (o BackupSetInfoResponseOutput) FirstLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.FirstLsn }).(pulumi.StringPtrOutput)
}

// Whether the backup set is restored or not
func (o BackupSetInfoResponseOutput) IsBackupRestored() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *bool { return v.IsBackupRestored }).(pulumi.BoolPtrOutput)
}

// Last log sequence number of the backup file
func (o BackupSetInfoResponseOutput) LastLsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.LastLsn }).(pulumi.StringPtrOutput)
}

// Last modified time of the backup file in share location
func (o BackupSetInfoResponseOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// List of files in the backup set
func (o BackupSetInfoResponseOutput) ListOfBackupFiles() BackupFileInfoResponseArrayOutput {
	return o.ApplyT(func(v BackupSetInfoResponse) []BackupFileInfoResponse { return v.ListOfBackupFiles }).(BackupFileInfoResponseArrayOutput)
}

type BackupSetInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupSetInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSetInfoResponse)(nil)).Elem()
}

func (o BackupSetInfoResponseArrayOutput) ToBackupSetInfoResponseArrayOutput() BackupSetInfoResponseArrayOutput {
	return o
}

func (o BackupSetInfoResponseArrayOutput) ToBackupSetInfoResponseArrayOutputWithContext(ctx context.Context) BackupSetInfoResponseArrayOutput {
	return o
}

func (o BackupSetInfoResponseArrayOutput) Index(i pulumi.IntInput) BackupSetInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupSetInfoResponse {
		return vs[0].([]BackupSetInfoResponse)[vs[1].(int)]
	}).(BackupSetInfoResponseOutput)
}

// Blob container storage information.
type BlobShare struct {
	// SAS URI of Azure Storage Account Container.
	SasUri string `pulumi:"sasUri"`
}

// BlobShareInput is an input type that accepts BlobShareArgs and BlobShareOutput values.
// You can construct a concrete instance of `BlobShareInput` via:
//
//          BlobShareArgs{...}
type BlobShareInput interface {
	pulumi.Input

	ToBlobShareOutput() BlobShareOutput
	ToBlobShareOutputWithContext(context.Context) BlobShareOutput
}

// Blob container storage information.
type BlobShareArgs struct {
	// SAS URI of Azure Storage Account Container.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
}

func (BlobShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShare)(nil)).Elem()
}

func (i BlobShareArgs) ToBlobShareOutput() BlobShareOutput {
	return i.ToBlobShareOutputWithContext(context.Background())
}

func (i BlobShareArgs) ToBlobShareOutputWithContext(ctx context.Context) BlobShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareOutput)
}

func (i BlobShareArgs) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return i.ToBlobSharePtrOutputWithContext(context.Background())
}

func (i BlobShareArgs) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareOutput).ToBlobSharePtrOutputWithContext(ctx)
}

// BlobSharePtrInput is an input type that accepts BlobShareArgs, BlobSharePtr and BlobSharePtrOutput values.
// You can construct a concrete instance of `BlobSharePtrInput` via:
//
//          BlobShareArgs{...}
//
//  or:
//
//          nil
type BlobSharePtrInput interface {
	pulumi.Input

	ToBlobSharePtrOutput() BlobSharePtrOutput
	ToBlobSharePtrOutputWithContext(context.Context) BlobSharePtrOutput
}

type blobSharePtrType BlobShareArgs

func BlobSharePtr(v *BlobShareArgs) BlobSharePtrInput {
	return (*blobSharePtrType)(v)
}

func (*blobSharePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShare)(nil)).Elem()
}

func (i *blobSharePtrType) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return i.ToBlobSharePtrOutputWithContext(context.Background())
}

func (i *blobSharePtrType) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobSharePtrOutput)
}

// Blob container storage information.
type BlobShareOutput struct{ *pulumi.OutputState }

func (BlobShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShare)(nil)).Elem()
}

func (o BlobShareOutput) ToBlobShareOutput() BlobShareOutput {
	return o
}

func (o BlobShareOutput) ToBlobShareOutputWithContext(ctx context.Context) BlobShareOutput {
	return o
}

func (o BlobShareOutput) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return o.ToBlobSharePtrOutputWithContext(context.Background())
}

func (o BlobShareOutput) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return o.ApplyT(func(v BlobShare) *BlobShare {
		return &v
	}).(BlobSharePtrOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobShareOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobShare) string { return v.SasUri }).(pulumi.StringOutput)
}

type BlobSharePtrOutput struct{ *pulumi.OutputState }

func (BlobSharePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShare)(nil)).Elem()
}

func (o BlobSharePtrOutput) ToBlobSharePtrOutput() BlobSharePtrOutput {
	return o
}

func (o BlobSharePtrOutput) ToBlobSharePtrOutputWithContext(ctx context.Context) BlobSharePtrOutput {
	return o
}

func (o BlobSharePtrOutput) Elem() BlobShareOutput {
	return o.ApplyT(func(v *BlobShare) BlobShare { return *v }).(BlobShareOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobSharePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobShare) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

// Blob container storage information.
type BlobShareInvokeResponse struct {
	// SAS URI of Azure Storage Account Container.
	SasUri string `pulumi:"sasUri"`
}

// BlobShareInvokeResponseInput is an input type that accepts BlobShareInvokeResponseArgs and BlobShareInvokeResponseOutput values.
// You can construct a concrete instance of `BlobShareInvokeResponseInput` via:
//
//          BlobShareInvokeResponseArgs{...}
type BlobShareInvokeResponseInput interface {
	pulumi.Input

	ToBlobShareInvokeResponseOutput() BlobShareInvokeResponseOutput
	ToBlobShareInvokeResponseOutputWithContext(context.Context) BlobShareInvokeResponseOutput
}

// Blob container storage information.
type BlobShareInvokeResponseArgs struct {
	// SAS URI of Azure Storage Account Container.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
}

func (BlobShareInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareInvokeResponse)(nil)).Elem()
}

func (i BlobShareInvokeResponseArgs) ToBlobShareInvokeResponseOutput() BlobShareInvokeResponseOutput {
	return i.ToBlobShareInvokeResponseOutputWithContext(context.Background())
}

func (i BlobShareInvokeResponseArgs) ToBlobShareInvokeResponseOutputWithContext(ctx context.Context) BlobShareInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareInvokeResponseOutput)
}

func (i BlobShareInvokeResponseArgs) ToBlobShareInvokeResponsePtrOutput() BlobShareInvokeResponsePtrOutput {
	return i.ToBlobShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BlobShareInvokeResponseArgs) ToBlobShareInvokeResponsePtrOutputWithContext(ctx context.Context) BlobShareInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareInvokeResponseOutput).ToBlobShareInvokeResponsePtrOutputWithContext(ctx)
}

// BlobShareInvokeResponsePtrInput is an input type that accepts BlobShareInvokeResponseArgs, BlobShareInvokeResponsePtr and BlobShareInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BlobShareInvokeResponsePtrInput` via:
//
//          BlobShareInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BlobShareInvokeResponsePtrInput interface {
	pulumi.Input

	ToBlobShareInvokeResponsePtrOutput() BlobShareInvokeResponsePtrOutput
	ToBlobShareInvokeResponsePtrOutputWithContext(context.Context) BlobShareInvokeResponsePtrOutput
}

type blobShareInvokeResponsePtrType BlobShareInvokeResponseArgs

func BlobShareInvokeResponsePtr(v *BlobShareInvokeResponseArgs) BlobShareInvokeResponsePtrInput {
	return (*blobShareInvokeResponsePtrType)(v)
}

func (*blobShareInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareInvokeResponse)(nil)).Elem()
}

func (i *blobShareInvokeResponsePtrType) ToBlobShareInvokeResponsePtrOutput() BlobShareInvokeResponsePtrOutput {
	return i.ToBlobShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *blobShareInvokeResponsePtrType) ToBlobShareInvokeResponsePtrOutputWithContext(ctx context.Context) BlobShareInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareInvokeResponsePtrOutput)
}

// Blob container storage information.
type BlobShareInvokeResponseOutput struct{ *pulumi.OutputState }

func (BlobShareInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareInvokeResponse)(nil)).Elem()
}

func (o BlobShareInvokeResponseOutput) ToBlobShareInvokeResponseOutput() BlobShareInvokeResponseOutput {
	return o
}

func (o BlobShareInvokeResponseOutput) ToBlobShareInvokeResponseOutputWithContext(ctx context.Context) BlobShareInvokeResponseOutput {
	return o
}

func (o BlobShareInvokeResponseOutput) ToBlobShareInvokeResponsePtrOutput() BlobShareInvokeResponsePtrOutput {
	return o.ToBlobShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BlobShareInvokeResponseOutput) ToBlobShareInvokeResponsePtrOutputWithContext(ctx context.Context) BlobShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v BlobShareInvokeResponse) *BlobShareInvokeResponse {
		return &v
	}).(BlobShareInvokeResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobShareInvokeResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobShareInvokeResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

type BlobShareInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobShareInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareInvokeResponse)(nil)).Elem()
}

func (o BlobShareInvokeResponsePtrOutput) ToBlobShareInvokeResponsePtrOutput() BlobShareInvokeResponsePtrOutput {
	return o
}

func (o BlobShareInvokeResponsePtrOutput) ToBlobShareInvokeResponsePtrOutputWithContext(ctx context.Context) BlobShareInvokeResponsePtrOutput {
	return o
}

func (o BlobShareInvokeResponsePtrOutput) Elem() BlobShareInvokeResponseOutput {
	return o.ApplyT(func(v *BlobShareInvokeResponse) BlobShareInvokeResponse { return *v }).(BlobShareInvokeResponseOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobShareInvokeResponsePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobShareInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

// Blob container storage information.
type BlobShareResponse struct {
	// SAS URI of Azure Storage Account Container.
	SasUri string `pulumi:"sasUri"`
}

// BlobShareResponseInput is an input type that accepts BlobShareResponseArgs and BlobShareResponseOutput values.
// You can construct a concrete instance of `BlobShareResponseInput` via:
//
//          BlobShareResponseArgs{...}
type BlobShareResponseInput interface {
	pulumi.Input

	ToBlobShareResponseOutput() BlobShareResponseOutput
	ToBlobShareResponseOutputWithContext(context.Context) BlobShareResponseOutput
}

// Blob container storage information.
type BlobShareResponseArgs struct {
	// SAS URI of Azure Storage Account Container.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
}

func (BlobShareResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareResponse)(nil)).Elem()
}

func (i BlobShareResponseArgs) ToBlobShareResponseOutput() BlobShareResponseOutput {
	return i.ToBlobShareResponseOutputWithContext(context.Background())
}

func (i BlobShareResponseArgs) ToBlobShareResponseOutputWithContext(ctx context.Context) BlobShareResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponseOutput)
}

func (i BlobShareResponseArgs) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return i.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (i BlobShareResponseArgs) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponseOutput).ToBlobShareResponsePtrOutputWithContext(ctx)
}

// BlobShareResponsePtrInput is an input type that accepts BlobShareResponseArgs, BlobShareResponsePtr and BlobShareResponsePtrOutput values.
// You can construct a concrete instance of `BlobShareResponsePtrInput` via:
//
//          BlobShareResponseArgs{...}
//
//  or:
//
//          nil
type BlobShareResponsePtrInput interface {
	pulumi.Input

	ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput
	ToBlobShareResponsePtrOutputWithContext(context.Context) BlobShareResponsePtrOutput
}

type blobShareResponsePtrType BlobShareResponseArgs

func BlobShareResponsePtr(v *BlobShareResponseArgs) BlobShareResponsePtrInput {
	return (*blobShareResponsePtrType)(v)
}

func (*blobShareResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareResponse)(nil)).Elem()
}

func (i *blobShareResponsePtrType) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return i.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (i *blobShareResponsePtrType) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobShareResponsePtrOutput)
}

// Blob container storage information.
type BlobShareResponseOutput struct{ *pulumi.OutputState }

func (BlobShareResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobShareResponse)(nil)).Elem()
}

func (o BlobShareResponseOutput) ToBlobShareResponseOutput() BlobShareResponseOutput {
	return o
}

func (o BlobShareResponseOutput) ToBlobShareResponseOutputWithContext(ctx context.Context) BlobShareResponseOutput {
	return o
}

func (o BlobShareResponseOutput) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return o.ToBlobShareResponsePtrOutputWithContext(context.Background())
}

func (o BlobShareResponseOutput) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return o.ApplyT(func(v BlobShareResponse) *BlobShareResponse {
		return &v
	}).(BlobShareResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobShareResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v BlobShareResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

type BlobShareResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobShareResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobShareResponse)(nil)).Elem()
}

func (o BlobShareResponsePtrOutput) ToBlobShareResponsePtrOutput() BlobShareResponsePtrOutput {
	return o
}

func (o BlobShareResponsePtrOutput) ToBlobShareResponsePtrOutputWithContext(ctx context.Context) BlobShareResponsePtrOutput {
	return o
}

func (o BlobShareResponsePtrOutput) Elem() BlobShareResponseOutput {
	return o.ApplyT(func(v *BlobShareResponse) BlobShareResponse { return *v }).(BlobShareResponseOutput)
}

// SAS URI of Azure Storage Account Container.
func (o BlobShareResponsePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobShareResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInput struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfo `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourcePostgreSqlSyncTaskInputInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputArgs and ConnectToSourcePostgreSqlSyncTaskInputOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputArgs{...}
type ConnectToSourcePostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput
	ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourcePostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputOutput)
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputArgs) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputOutput).ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}

// ConnectToSourcePostgreSqlSyncTaskInputPtrInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputArgs, ConnectToSourcePostgreSqlSyncTaskInputPtr and ConnectToSourcePostgreSqlSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputPtrInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToSourcePostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput
	ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput
}

type connectToSourcePostgreSqlSyncTaskInputPtrType ConnectToSourcePostgreSqlSyncTaskInputArgs

func ConnectToSourcePostgreSqlSyncTaskInputPtr(v *ConnectToSourcePostgreSqlSyncTaskInputArgs) ConnectToSourcePostgreSqlSyncTaskInputPtrInput {
	return (*connectToSourcePostgreSqlSyncTaskInputPtrType)(v)
}

func (*connectToSourcePostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *connectToSourcePostgreSqlSyncTaskInputPtrType) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToSourcePostgreSqlSyncTaskInputPtrType) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputOutput() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInput) *ConnectToSourcePostgreSqlSyncTaskInput {
		return &v
	}).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInput) PostgreSqlConnectionInfo { return v.SourceConnectionInfo }).(PostgreSqlConnectionInfoOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutput() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) Elem() ConnectToSourcePostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInput) ConnectToSourcePostgreSqlSyncTaskInput { return *v }).(ConnectToSourcePostgreSqlSyncTaskInputOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs and ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput)
}

func (i ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput).ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs, ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtr and ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput
	ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput
}

type connectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrType ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs

func ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtr(v *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseArgs) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrInput {
	return (*connectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrType)(v)
}

func (*connectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse) *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse {
		return &v
	}).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse) PostgreSqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput) Elem() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse) ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse {
		return *v
	}).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputResponse struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourcePostgreSqlSyncTaskInputResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputResponseArgs and ConnectToSourcePostgreSqlSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputResponseArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput)
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput).ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskInputResponseArgs, ConnectToSourcePostgreSqlSyncTaskInputResponsePtr and ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput
	ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput
}

type connectToSourcePostgreSqlSyncTaskInputResponsePtrType ConnectToSourcePostgreSqlSyncTaskInputResponseArgs

func ConnectToSourcePostgreSqlSyncTaskInputResponsePtr(v *ConnectToSourcePostgreSqlSyncTaskInputResponseArgs) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput {
	return (*connectToSourcePostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourcePostgreSqlSyncTaskInputResponsePtrType) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutput() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInputResponse) *ConnectToSourcePostgreSqlSyncTaskInputResponse {
		return &v
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourcePostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) Elem() ConnectToSourcePostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputResponse) ConnectToSourcePostgreSqlSyncTaskInputResponse {
		return *v
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourcePostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse struct {
	// List of databases on source server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Version of the source server
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs and ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs struct {
	// List of databases on source server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Version of the source server
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput)
}

// ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray and ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray{ ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArgs{...} }
type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput
}

type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray []ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseInput

func (ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

// List of databases on source server
func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Source server brand version
func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Version of the source server
func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse {
		return vs[0].([]ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputResponse struct {
	// List of databases on source server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Version of the source server
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToSourcePostgreSqlSyncTaskOutputResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs and ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskOutputResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs struct {
	// List of databases on source server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Version of the source server
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput)
}

// ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskOutputResponseArray and ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskOutputResponseArray{ ConnectToSourcePostgreSqlSyncTaskOutputResponseArgs{...} }
type ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput
	ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseArray []ConnectToSourcePostgreSqlSyncTaskOutputResponseInput

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskOutputResponseArray) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to PostgreSQL and source server requirements
type ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return o
}

// List of databases on source server
func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Source server brand version
func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

// Version of the source server
func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToSourcePostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToSourcePostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ConnectToSourcePostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskProperties struct {
	// Task input
	Input *ConnectToSourcePostgreSqlSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourcePostgreSqlSyncTaskPropertiesInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskPropertiesArgs and ConnectToSourcePostgreSqlSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskPropertiesInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskPropertiesArgs{...}
type ConnectToSourcePostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput
	ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesArgs struct {
	// Task input
	Input ConnectToSourcePostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskPropertiesOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) Input() ConnectToSourcePostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskProperties) *ConnectToSourcePostgreSqlSyncTaskInput {
		return v.Input
	}).(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToSource.PostgreSql.Sync'.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs and ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) Input() ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) *ConnectToSourcePostgreSqlSyncTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) Output() ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) []ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.PostgreSql.Sync'.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourcePostgreSqlSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToSourcePostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourcePostgreSqlSyncTaskPropertiesResponseInput is an input type that accepts ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs and ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToSourcePostgreSqlSyncTaskPropertiesResponseInput` via:
//
//          ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs{...}
type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput
	ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourcePostgreSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.PostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourcePostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
type ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourcePostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput() ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Input() ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) *ConnectToSourcePostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) Output() ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) []ConnectToSourcePostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.PostgreSql.Sync'.
func (o ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourcePostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskProperties struct {
	// Task input
	Input *ConnectToSourceSqlServerTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerSyncTaskPropertiesInput is an input type that accepts ConnectToSourceSqlServerSyncTaskPropertiesArgs and ConnectToSourceSqlServerSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerSyncTaskPropertiesInput` via:
//
//          ConnectToSourceSqlServerSyncTaskPropertiesArgs{...}
type ConnectToSourceSqlServerSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput
	ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesArgs struct {
	// Task input
	Input ConnectToSourceSqlServerTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesArgs) ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return i.ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesArgs) ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerSyncTaskPropertiesOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) ToConnectToSourceSqlServerSyncTaskPropertiesOutput() ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) ToConnectToSourceSqlServerSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) Input() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskProperties) *ConnectToSourceSqlServerTaskInput { return v.Input }).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer.Sync'.
func (o ConnectToSourceSqlServerSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourceSqlServerTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs and ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs{...}
type ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput
	ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) Input() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) *ConnectToSourceSqlServerTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer.Sync'.
func (o ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourceSqlServerTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerSyncTaskPropertiesResponseInput is an input type that accepts ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs and ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerSyncTaskPropertiesResponseInput` via:
//
//          ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs{...}
type ConnectToSourceSqlServerSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput
	ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourceSqlServerTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return i.ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerSyncTaskPropertiesResponseArgs) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to SQL Server and source server requirements for online migration
type ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutput() ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) ToConnectToSourceSqlServerSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Input() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer.Sync'.
func (o ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInput struct {
	// Permission group for validations
	CheckPermissionsGroup *string `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs *bool `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins *bool `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourceSqlServerTaskInputInput is an input type that accepts ConnectToSourceSqlServerTaskInputArgs and ConnectToSourceSqlServerTaskInputOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputInput` via:
//
//          ConnectToSourceSqlServerTaskInputArgs{...}
type ConnectToSourceSqlServerTaskInputInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput
	ToConnectToSourceSqlServerTaskInputOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputOutput
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputArgs struct {
	// Permission group for validations
	CheckPermissionsGroup pulumi.StringPtrInput `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs pulumi.BoolPtrInput `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins pulumi.BoolPtrInput `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourceSqlServerTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput {
	return i.ToConnectToSourceSqlServerTaskInputOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputOutput)
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputArgs) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputOutput).ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx)
}

// ConnectToSourceSqlServerTaskInputPtrInput is an input type that accepts ConnectToSourceSqlServerTaskInputArgs, ConnectToSourceSqlServerTaskInputPtr and ConnectToSourceSqlServerTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputPtrInput` via:
//
//          ConnectToSourceSqlServerTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToSourceSqlServerTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput
	ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputPtrOutput
}

type connectToSourceSqlServerTaskInputPtrType ConnectToSourceSqlServerTaskInputArgs

func ConnectToSourceSqlServerTaskInputPtr(v *ConnectToSourceSqlServerTaskInputArgs) ConnectToSourceSqlServerTaskInputPtrInput {
	return (*connectToSourceSqlServerTaskInputPtrType)(v)
}

func (*connectToSourceSqlServerTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (i *connectToSourceSqlServerTaskInputPtrType) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToSourceSqlServerTaskInputPtrType) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputOutput() ConnectToSourceSqlServerTaskInputOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToSourceSqlServerTaskInputOutput) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *ConnectToSourceSqlServerTaskInput {
		return &v
	}).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *string { return v.CheckPermissionsGroup }).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToSourceSqlServerTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInput)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) ToConnectToSourceSqlServerTaskInputPtrOutput() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) ToConnectToSourceSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputPtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputPtrOutput) Elem() ConnectToSourceSqlServerTaskInputOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) ConnectToSourceSqlServerTaskInput { return *v }).(ConnectToSourceSqlServerTaskInputOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputPtrOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *string {
		if v == nil {
			return nil
		}
		return v.CheckPermissionsGroup
	}).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputPtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputInvokeResponse struct {
	// Permission group for validations
	CheckPermissionsGroup *string `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs *bool `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins *bool `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourceSqlServerTaskInputInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskInputInvokeResponseArgs and ConnectToSourceSqlServerTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskInputInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputInvokeResponseOutput() ConnectToSourceSqlServerTaskInputInvokeResponseOutput
	ToConnectToSourceSqlServerTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputInvokeResponseArgs struct {
	// Permission group for validations
	CheckPermissionsGroup pulumi.StringPtrInput `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs pulumi.BoolPtrInput `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins pulumi.BoolPtrInput `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ToConnectToSourceSqlServerTaskInputInvokeResponseOutput() ConnectToSourceSqlServerTaskInputInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ToConnectToSourceSqlServerTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputInvokeResponseOutput)
}

func (i ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputInvokeResponseOutput).ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToSourceSqlServerTaskInputInvokeResponseArgs, ConnectToSourceSqlServerTaskInputInvokeResponsePtr and ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToSourceSqlServerTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput
	ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput
}

type connectToSourceSqlServerTaskInputInvokeResponsePtrType ConnectToSourceSqlServerTaskInputInvokeResponseArgs

func ConnectToSourceSqlServerTaskInputInvokeResponsePtr(v *ConnectToSourceSqlServerTaskInputInvokeResponseArgs) ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput {
	return (*connectToSourceSqlServerTaskInputInvokeResponsePtrType)(v)
}

func (*connectToSourceSqlServerTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToSourceSqlServerTaskInputInvokeResponsePtrType) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourceSqlServerTaskInputInvokeResponsePtrType) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) ToConnectToSourceSqlServerTaskInputInvokeResponseOutput() ConnectToSourceSqlServerTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) ToConnectToSourceSqlServerTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputInvokeResponse) *ConnectToSourceSqlServerTaskInputInvokeResponse {
		return &v
	}).(ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputInvokeResponse) *string { return v.CheckPermissionsGroup }).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputInvokeResponse) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputInvokeResponse) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) ToConnectToSourceSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) Elem() ConnectToSourceSqlServerTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputInvokeResponse) ConnectToSourceSqlServerTaskInputInvokeResponse {
		return *v
	}).(ConnectToSourceSqlServerTaskInputInvokeResponseOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CheckPermissionsGroup
	}).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputResponse struct {
	// Permission group for validations
	CheckPermissionsGroup *string `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs *bool `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins *bool `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
}

// ConnectToSourceSqlServerTaskInputResponseInput is an input type that accepts ConnectToSourceSqlServerTaskInputResponseArgs and ConnectToSourceSqlServerTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputResponseInput` via:
//
//          ConnectToSourceSqlServerTaskInputResponseArgs{...}
type ConnectToSourceSqlServerTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput
	ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputResponseOutput
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputResponseArgs struct {
	// Permission group for validations
	CheckPermissionsGroup pulumi.StringPtrInput `pulumi:"checkPermissionsGroup"`
	// Flag for whether to collect agent jobs from source server.
	CollectAgentJobs pulumi.BoolPtrInput `pulumi:"collectAgentJobs"`
	// Flag for whether to collect logins from source server.
	CollectLogins pulumi.BoolPtrInput `pulumi:"collectLogins"`
	// Connection information for Source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
}

func (ConnectToSourceSqlServerTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponseOutput)
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskInputResponseArgs) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponseOutput).ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToSourceSqlServerTaskInputResponsePtrInput is an input type that accepts ConnectToSourceSqlServerTaskInputResponseArgs, ConnectToSourceSqlServerTaskInputResponsePtr and ConnectToSourceSqlServerTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskInputResponsePtrInput` via:
//
//          ConnectToSourceSqlServerTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToSourceSqlServerTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput
	ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput
}

type connectToSourceSqlServerTaskInputResponsePtrType ConnectToSourceSqlServerTaskInputResponseArgs

func ConnectToSourceSqlServerTaskInputResponsePtr(v *ConnectToSourceSqlServerTaskInputResponseArgs) ConnectToSourceSqlServerTaskInputResponsePtrInput {
	return (*connectToSourceSqlServerTaskInputResponsePtrType)(v)
}

func (*connectToSourceSqlServerTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (i *connectToSourceSqlServerTaskInputResponsePtrType) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return i.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToSourceSqlServerTaskInputResponsePtrType) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponseOutput() ConnectToSourceSqlServerTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToSourceSqlServerTaskInputResponseOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return &v
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputResponseOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *string { return v.CheckPermissionsGroup }).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectAgentJobs }).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputResponseOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) *bool { return v.CollectLogins }).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ConnectToSourceSqlServerTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToSourceSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutput() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) ToConnectToSourceSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) Elem() ConnectToSourceSqlServerTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) ConnectToSourceSqlServerTaskInputResponse {
		return *v
	}).(ConnectToSourceSqlServerTaskInputResponseOutput)
}

// Permission group for validations
func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CheckPermissionsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.CheckPermissionsGroup
	}).(pulumi.StringPtrOutput)
}

// Flag for whether to collect agent jobs from source server.
func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectAgentJobs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectAgentJobs
	}).(pulumi.BoolPtrOutput)
}

// Flag for whether to collect logins from source server.
func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) CollectLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CollectLogins
	}).(pulumi.BoolPtrOutput)
}

// Connection information for Source SQL Server
func (o ConnectToSourceSqlServerTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToSourceSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse struct {
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the original AgentJob.
	IsEnabled bool `pulumi:"isEnabled"`
	// The type of AgentJob.
	JobCategory string `pulumi:"jobCategory"`
	// The owner of the AgentJob
	JobOwner string `pulumi:"jobOwner"`
	// UTC Date and time when the AgentJob was last executed.
	LastExecutedOn string `pulumi:"lastExecutedOn"`
	// Information about eligibility of agent job for migration.
	MigrationEligibility MigrationEligibilityInfoInvokeResponse `pulumi:"migrationEligibility"`
	// AgentJob name
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'AgentJobLevelOutput'.
	ResultType string `pulumi:"resultType"`
}

// ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs and ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput
	ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs struct {
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the original AgentJob.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The type of AgentJob.
	JobCategory pulumi.StringInput `pulumi:"jobCategory"`
	// The owner of the AgentJob
	JobOwner pulumi.StringInput `pulumi:"jobOwner"`
	// UTC Date and time when the AgentJob was last executed.
	LastExecutedOn pulumi.StringInput `pulumi:"lastExecutedOn"`
	// Information about eligibility of agent job for migration.
	MigrationEligibility MigrationEligibilityInfoInvokeResponseInput `pulumi:"migrationEligibility"`
	// AgentJob name
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'AgentJobLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput)
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput {
	return o
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the original AgentJob.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The type of AgentJob.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) JobCategory() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.JobCategory }).(pulumi.StringOutput)
}

// The owner of the AgentJob
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) JobOwner() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.JobOwner }).(pulumi.StringOutput)
}

// UTC Date and time when the AgentJob was last executed.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) LastExecutedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.LastExecutedOn }).(pulumi.StringOutput)
}

// Information about eligibility of agent job for migration.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) MigrationEligibility() MigrationEligibilityInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) MigrationEligibilityInfoInvokeResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoInvokeResponseOutput)
}

// AgentJob name
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'AgentJobLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse struct {
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the original AgentJob.
	IsEnabled bool `pulumi:"isEnabled"`
	// The type of AgentJob.
	JobCategory string `pulumi:"jobCategory"`
	// The owner of the AgentJob
	JobOwner string `pulumi:"jobOwner"`
	// UTC Date and time when the AgentJob was last executed.
	LastExecutedOn string `pulumi:"lastExecutedOn"`
	// Information about eligibility of agent job for migration.
	MigrationEligibility MigrationEligibilityInfoResponse `pulumi:"migrationEligibility"`
	// AgentJob name
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'AgentJobLevelOutput'.
	ResultType string `pulumi:"resultType"`
}

// ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs and ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs struct {
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the original AgentJob.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The type of AgentJob.
	JobCategory pulumi.StringInput `pulumi:"jobCategory"`
	// The owner of the AgentJob
	JobOwner pulumi.StringInput `pulumi:"jobOwner"`
	// UTC Date and time when the AgentJob was last executed.
	LastExecutedOn pulumi.StringInput `pulumi:"lastExecutedOn"`
	// Information about eligibility of agent job for migration.
	MigrationEligibility MigrationEligibilityInfoResponseInput `pulumi:"migrationEligibility"`
	// AgentJob name
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'AgentJobLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput)
}

// AgentJob level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput() ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput {
	return o
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the original AgentJob.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The type of AgentJob.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) JobCategory() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.JobCategory }).(pulumi.StringOutput)
}

// The owner of the AgentJob
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) JobOwner() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.JobOwner }).(pulumi.StringOutput)
}

// UTC Date and time when the AgentJob was last executed.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) LastExecutedOn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.LastExecutedOn }).(pulumi.StringOutput)
}

// Information about eligibility of agent job for migration.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) MigrationEligibility() MigrationEligibilityInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) MigrationEligibilityInfoResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoResponseOutput)
}

// AgentJob name
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'AgentJobLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputAgentJobLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse struct {
	// SQL Server compatibility level of database
	CompatibilityLevel string `pulumi:"compatibilityLevel"`
	// The list of database files
	DatabaseFiles []DatabaseFileInfoInvokeResponse `pulumi:"databaseFiles"`
	// State of the database
	DatabaseState string `pulumi:"databaseState"`
	// Result identifier
	Id string `pulumi:"id"`
	// Database name
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Size of the file in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
}

// ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs and ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput
	ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// SQL Server compatibility level of database
	CompatibilityLevel pulumi.StringInput `pulumi:"compatibilityLevel"`
	// The list of database files
	DatabaseFiles DatabaseFileInfoInvokeResponseArrayInput `pulumi:"databaseFiles"`
	// State of the database
	DatabaseState pulumi.StringInput `pulumi:"databaseState"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Database name
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Size of the file in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
}

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput)
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// SQL Server compatibility level of database
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) CompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) string {
		return v.CompatibilityLevel
	}).(pulumi.StringOutput)
}

// The list of database files
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseFiles() DatabaseFileInfoInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) []DatabaseFileInfoInvokeResponse {
		return v.DatabaseFiles
	}).(DatabaseFileInfoInvokeResponseArrayOutput)
}

// State of the database
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseState() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) string { return v.DatabaseState }).(pulumi.StringOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Database name
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'DatabaseLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Size of the file in megabytes
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse struct {
	// SQL Server compatibility level of database
	CompatibilityLevel string `pulumi:"compatibilityLevel"`
	// The list of database files
	DatabaseFiles []DatabaseFileInfoResponse `pulumi:"databaseFiles"`
	// State of the database
	DatabaseState string `pulumi:"databaseState"`
	// Result identifier
	Id string `pulumi:"id"`
	// Database name
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Size of the file in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
}

// ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs and ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs struct {
	// SQL Server compatibility level of database
	CompatibilityLevel pulumi.StringInput `pulumi:"compatibilityLevel"`
	// The list of database files
	DatabaseFiles DatabaseFileInfoResponseArrayInput `pulumi:"databaseFiles"`
	// State of the database
	DatabaseState pulumi.StringInput `pulumi:"databaseState"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Database name
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Size of the file in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
}

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput)
}

// Database level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput() ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput {
	return o
}

// SQL Server compatibility level of database
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) CompatibilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.CompatibilityLevel }).(pulumi.StringOutput)
}

// The list of database files
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) DatabaseFiles() DatabaseFileInfoResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) []DatabaseFileInfoResponse {
		return v.DatabaseFiles
	}).(DatabaseFileInfoResponseArrayOutput)
}

// State of the database
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) DatabaseState() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.DatabaseState }).(pulumi.StringOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Database name
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'DatabaseLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Size of the file in megabytes
func (o ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputDatabaseLevelResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse struct {
	// The default database for the login.
	DefaultDatabase string `pulumi:"defaultDatabase"`
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the login.
	IsEnabled bool `pulumi:"isEnabled"`
	// The type of login.
	LoginType string `pulumi:"loginType"`
	// Information about eligibility of login for migration.
	MigrationEligibility MigrationEligibilityInfoInvokeResponse `pulumi:"migrationEligibility"`
	// Login name.
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'LoginLevelOutput'.
	ResultType string `pulumi:"resultType"`
}

// ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs and ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput
	ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs struct {
	// The default database for the login.
	DefaultDatabase pulumi.StringInput `pulumi:"defaultDatabase"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the login.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The type of login.
	LoginType pulumi.StringInput `pulumi:"loginType"`
	// Information about eligibility of login for migration.
	MigrationEligibility MigrationEligibilityInfoInvokeResponseInput `pulumi:"migrationEligibility"`
	// Login name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'LoginLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput)
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput {
	return o
}

// The default database for the login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) DefaultDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) string { return v.DefaultDatabase }).(pulumi.StringOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The type of login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) LoginType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) string { return v.LoginType }).(pulumi.StringOutput)
}

// Information about eligibility of login for migration.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) MigrationEligibility() MigrationEligibilityInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) MigrationEligibilityInfoInvokeResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoInvokeResponseOutput)
}

// Login name.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'LoginLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelResponse struct {
	// The default database for the login.
	DefaultDatabase string `pulumi:"defaultDatabase"`
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the login.
	IsEnabled bool `pulumi:"isEnabled"`
	// The type of login.
	LoginType string `pulumi:"loginType"`
	// Information about eligibility of login for migration.
	MigrationEligibility MigrationEligibilityInfoResponse `pulumi:"migrationEligibility"`
	// Login name.
	Name string `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'LoginLevelOutput'.
	ResultType string `pulumi:"resultType"`
}

// ConnectToSourceSqlServerTaskOutputLoginLevelResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs and ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputLoginLevelResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputLoginLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs struct {
	// The default database for the login.
	DefaultDatabase pulumi.StringInput `pulumi:"defaultDatabase"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the login.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The type of login.
	LoginType pulumi.StringInput `pulumi:"loginType"`
	// Information about eligibility of login for migration.
	MigrationEligibility MigrationEligibilityInfoResponseInput `pulumi:"migrationEligibility"`
	// Login name.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of result - database level or task level
	// Expected value is 'LoginLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputLoginLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput)
}

// Login level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputLoginLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput() ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput {
	return o
}

// The default database for the login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) DefaultDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.DefaultDatabase }).(pulumi.StringOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The type of login.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) LoginType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.LoginType }).(pulumi.StringOutput)
}

// Information about eligibility of login for migration.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) MigrationEligibility() MigrationEligibilityInfoResponseOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) MigrationEligibilityInfoResponse {
		return v.MigrationEligibility
	}).(MigrationEligibilityInfoResponseOutput)
}

// Login name.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Type of result - database level or task level
// Expected value is 'LoginLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputLoginLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse struct {
	// Source agent jobs as a map from agent job name to id.
	AgentJobs map[string]string `pulumi:"agentJobs"`
	// Source databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Source logins as a map from login name to login id.
	Logins map[string]string `pulumi:"logins"`
	// Type of result - database level or task level
	// Expected value is 'TaskLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs and ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput
	ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs struct {
	// Source agent jobs as a map from agent job name to id.
	AgentJobs pulumi.StringMapInput `pulumi:"agentJobs"`
	// Source databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Source logins as a map from login name to login id.
	Logins pulumi.StringMapInput `pulumi:"logins"`
	// Type of result - database level or task level
	// Expected value is 'TaskLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput)
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput {
	return o
}

// Source agent jobs as a map from agent job name to id.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) map[string]string {
		return v.AgentJobs
	}).(pulumi.StringMapOutput)
}

// Source databases as a map from database name to database id
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) map[string]string {
		return v.Databases
	}).(pulumi.StringMapOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Source logins as a map from login name to login id.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

// Type of result - database level or task level
// Expected value is 'TaskLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server version
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelResponse struct {
	// Source agent jobs as a map from agent job name to id.
	AgentJobs map[string]string `pulumi:"agentJobs"`
	// Source databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Source logins as a map from login name to login id.
	Logins map[string]string `pulumi:"logins"`
	// Type of result - database level or task level
	// Expected value is 'TaskLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToSourceSqlServerTaskOutputTaskLevelResponseInput is an input type that accepts ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs and ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskOutputTaskLevelResponseInput` via:
//
//          ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs{...}
type ConnectToSourceSqlServerTaskOutputTaskLevelResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput
	ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs struct {
	// Source agent jobs as a map from agent job name to id.
	AgentJobs pulumi.StringMapInput `pulumi:"agentJobs"`
	// Source databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Source logins as a map from login name to login id.
	Logins pulumi.StringMapInput `pulumi:"logins"`
	// Type of result - database level or task level
	// Expected value is 'TaskLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return i.ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskOutputTaskLevelResponseArgs) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput)
}

// Task level output for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskOutputTaskLevelResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput() ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ToConnectToSourceSqlServerTaskOutputTaskLevelResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput {
	return o
}

// Source agent jobs as a map from agent job name to id.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.AgentJobs }).(pulumi.StringMapOutput)
}

// Source databases as a map from database name to database id
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

// Result identifier
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Source logins as a map from login name to login id.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

// Type of result - database level or task level
// Expected value is 'TaskLevelOutput'.
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.SourceServerBrandVersion }).(pulumi.StringOutput)
}

// Source server version
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskOutputTaskLevelResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskProperties struct {
	// Task input
	Input *ConnectToSourceSqlServerTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerTaskPropertiesInput is an input type that accepts ConnectToSourceSqlServerTaskPropertiesArgs and ConnectToSourceSqlServerTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskPropertiesInput` via:
//
//          ConnectToSourceSqlServerTaskPropertiesArgs{...}
type ConnectToSourceSqlServerTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput
	ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(context.Context) ConnectToSourceSqlServerTaskPropertiesOutput
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesArgs struct {
	// Task input
	Input ConnectToSourceSqlServerTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskProperties)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskPropertiesArgs) ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput {
	return i.ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskPropertiesArgs) ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskPropertiesOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskProperties)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) ToConnectToSourceSqlServerTaskPropertiesOutput() ConnectToSourceSqlServerTaskPropertiesOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesOutput) ToConnectToSourceSqlServerTaskPropertiesOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToSourceSqlServerTaskPropertiesOutput) Input() ConnectToSourceSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskProperties) *ConnectToSourceSqlServerTaskInput { return v.Input }).(ConnectToSourceSqlServerTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer'.
func (o ConnectToSourceSqlServerTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourceSqlServerTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs and ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs{...}
type ConnectToSourceSqlServerTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput
	ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourceSqlServerTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs) ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskPropertiesInvokeResponseArgs) ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput() ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) ToConnectToSourceSqlServerTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) Input() ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) *ConnectToSourceSqlServerTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer'.
func (o ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToSourceSqlServerTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToSourceSqlServerTaskPropertiesResponseInput is an input type that accepts ConnectToSourceSqlServerTaskPropertiesResponseArgs and ConnectToSourceSqlServerTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToSourceSqlServerTaskPropertiesResponseInput` via:
//
//          ConnectToSourceSqlServerTaskPropertiesResponseArgs{...}
type ConnectToSourceSqlServerTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput
	ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToSourceSqlServerTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToSource.SqlServer'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToSourceSqlServerTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToSourceSqlServerTaskPropertiesResponseArgs) ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return i.ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToSourceSqlServerTaskPropertiesResponseArgs) ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToSourceSqlServerTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to SQL Server and also validates source server requirements
type ConnectToSourceSqlServerTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToSourceSqlServerTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToSourceSqlServerTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) ToConnectToSourceSqlServerTaskPropertiesResponseOutput() ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) ToConnectToSourceSqlServerTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToSourceSqlServerTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Input() ConnectToSourceSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) *ConnectToSourceSqlServerTaskInputResponse {
		return v.Input
	}).(ConnectToSourceSqlServerTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToSource.SqlServer'.
func (o ConnectToSourceSqlServerTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToSourceSqlServerTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInput struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForMySqlTaskInputInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputArgs and ConnectToTargetAzureDbForMySqlTaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputArgs{...}
type ConnectToTargetAzureDbForMySqlTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput
	ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputArgs struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForMySqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputOutput)
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputArgs) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputOutput).ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForMySqlTaskInputPtrInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputArgs, ConnectToTargetAzureDbForMySqlTaskInputPtr and ConnectToTargetAzureDbForMySqlTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputPtrInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForMySqlTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput
	ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput
}

type connectToTargetAzureDbForMySqlTaskInputPtrType ConnectToTargetAzureDbForMySqlTaskInputArgs

func ConnectToTargetAzureDbForMySqlTaskInputPtr(v *ConnectToTargetAzureDbForMySqlTaskInputArgs) ConnectToTargetAzureDbForMySqlTaskInputPtrInput {
	return (*connectToTargetAzureDbForMySqlTaskInputPtrType)(v)
}

func (*connectToTargetAzureDbForMySqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (i *connectToTargetAzureDbForMySqlTaskInputPtrType) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForMySqlTaskInputPtrType) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputOutput() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInput) *ConnectToTargetAzureDbForMySqlTaskInput {
		return &v
	}).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) SourceConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInput) MySqlConnectionInfo { return v.SourceConnectionInfo }).(MySqlConnectionInfoOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputOutput) TargetConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInput) MySqlConnectionInfo { return v.TargetConnectionInfo }).(MySqlConnectionInfoOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutput() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) Elem() ConnectToTargetAzureDbForMySqlTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) ConnectToTargetAzureDbForMySqlTaskInput { return *v }).(ConnectToTargetAzureDbForMySqlTaskInputOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) SourceConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputPtrOutput) TargetConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs and ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput)
}

func (i ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput).ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs, ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtr and ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput
	ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput
}

type connectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrType ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs

func ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtr(v *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseArgs) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrInput {
	return (*connectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) SourceConnectionInfo() MySqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) MySqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoInvokeResponseOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput) TargetConnectionInfo() MySqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) MySqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) *MySqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse) *MySqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputResponse struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForMySqlTaskInputResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputResponseArgs and ConnectToTargetAzureDbForMySqlTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputResponseArgs struct {
	// Connection information for source MySQL server
	SourceConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL server
	TargetConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput)
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput).ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskInputResponseArgs, ConnectToTargetAzureDbForMySqlTaskInputResponsePtr and ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput
	ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput
}

type connectToTargetAzureDbForMySqlTaskInputResponsePtrType ConnectToTargetAzureDbForMySqlTaskInputResponseArgs

func ConnectToTargetAzureDbForMySqlTaskInputResponsePtr(v *ConnectToTargetAzureDbForMySqlTaskInputResponseArgs) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput {
	return (*connectToTargetAzureDbForMySqlTaskInputResponsePtrType)(v)
}

func (*connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForMySqlTaskInputResponsePtrType) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutput() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputResponse) *ConnectToTargetAzureDbForMySqlTaskInputResponse {
		return &v
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) SourceConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputResponse) MySqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputResponseOutput) TargetConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskInputResponse) MySqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

type ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForMySqlTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) Elem() ConnectToTargetAzureDbForMySqlTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) ConnectToTargetAzureDbForMySqlTaskInputResponse {
		return *v
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput)
}

// Connection information for source MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

// Connection information for target Azure Database for MySQL server
func (o ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForMySqlTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse struct {
	// List of databases on target server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Version of the target server
	ServerVersion string `pulumi:"serverVersion"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs and ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs struct {
	// List of databases on target server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Version of the target server
	ServerVersion pulumi.StringInput `pulumi:"serverVersion"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput)
}

// ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray and ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray{ ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArgs{...} }
type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput
}

type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray []ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseInput

func (ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput {
	return o
}

// List of databases on target server
func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) ServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse) string { return v.ServerVersion }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse {
		return vs[0].([]ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputResponse struct {
	// List of databases on target server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Version of the target server
	ServerVersion string `pulumi:"serverVersion"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToTargetAzureDbForMySqlTaskOutputResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs and ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskOutputResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs struct {
	// List of databases on target server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Version of the target server
	ServerVersion pulumi.StringInput `pulumi:"serverVersion"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput)
}

// ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskOutputResponseArray and ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskOutputResponseArray{ ConnectToTargetAzureDbForMySqlTaskOutputResponseArgs{...} }
type ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput
	ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseArray []ConnectToTargetAzureDbForMySqlTaskOutputResponseInput

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskOutputResponseArray) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return o
}

// List of databases on target server
func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.ServerVersion }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForMySqlTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForMySqlTaskOutputResponse {
		return vs[0].([]ConnectToTargetAzureDbForMySqlTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskProperties struct {
	// Task input
	Input *ConnectToTargetAzureDbForMySqlTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForMySqlTaskPropertiesInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskPropertiesArgs and ConnectToTargetAzureDbForMySqlTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskPropertiesInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskPropertiesArgs{...}
type ConnectToTargetAzureDbForMySqlTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput
	ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetAzureDbForMySqlTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskPropertiesOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) Input() ConnectToTargetAzureDbForMySqlTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskProperties) *ConnectToTargetAzureDbForMySqlTaskInput {
		return v.Input
	}).(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForMySql'.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs and ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) Input() ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) *ConnectToTargetAzureDbForMySqlTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) Output() ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) []ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForMySql'.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetAzureDbForMySqlTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetAzureDbForMySqlTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForMySqlTaskPropertiesResponseInput is an input type that accepts ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs and ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForMySqlTaskPropertiesResponseInput` via:
//
//          ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs{...}
type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput
	ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetAzureDbForMySqlTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForMySql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return i.ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForMySqlTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to Azure Database for MySQL and target server requirements
type ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForMySqlTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput() ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Input() ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) *ConnectToTargetAzureDbForMySqlTaskInputResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) Output() ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) []ConnectToTargetAzureDbForMySqlTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForMySql'.
func (o ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForMySqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInput struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput).ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs, ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtr and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput
}

type connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs

func ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtr(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputArgs) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput {
	return (*connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType)(v)
}

func (*connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputPtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		return &v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) Elem() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		return *v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput)
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput).ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs, ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtr and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput
}

type connectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs

func ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtr(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput {
	return (*connectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) PostgreSqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) PostgreSqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs struct {
	// Connection information for source PostgreSQL server
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL server
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput).ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs, ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtr and ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
}

type connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs

func ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtr(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseArgs) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput {
	return (*connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		return &v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) Elem() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		return *v
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

// Connection information for source PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Connection information for target Azure Database for PostgreSQL server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse struct {
	// List of databases on target server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs struct {
	// List of databases on target server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput)
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray and ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray{ ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArgs{...} }
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseInput

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

// List of databases on target server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse {
		return vs[0].([]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse struct {
	// List of databases on target server
	Databases []string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors associated with the task
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs struct {
	// List of databases on target server
	Databases pulumi.StringArrayInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors associated with the task
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray and ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray{ ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArgs{...} }
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseInput

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArray) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to Azure Database for PostgreSQL and target server requirements
type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return o
}

// List of databases on target server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) Databases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) []string { return v.Databases }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Validation errors associated with the task
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse {
		return vs[0].([]ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties struct {
	// Task input
	Input *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
		return v.Input
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Input() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Output() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseInput is an input type that accepts ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs and ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseInput` via:
//
//          ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs{...}
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
type ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) *ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureDbForPostgreSql.Sync'.
func (o ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInput struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlDbTaskInputInput is an input type that accepts ConnectToTargetSqlDbTaskInputArgs and ConnectToTargetSqlDbTaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputInput` via:
//
//          ConnectToTargetSqlDbTaskInputArgs{...}
type ConnectToTargetSqlDbTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput
	ToConnectToTargetSqlDbTaskInputOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputOutput
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputArgs struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlDbTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput {
	return i.ToConnectToTargetSqlDbTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputOutput)
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputArgs) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputOutput).ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetSqlDbTaskInputPtrInput is an input type that accepts ConnectToTargetSqlDbTaskInputArgs, ConnectToTargetSqlDbTaskInputPtr and ConnectToTargetSqlDbTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputPtrInput` via:
//
//          ConnectToTargetSqlDbTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlDbTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput
	ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputPtrOutput
}

type connectToTargetSqlDbTaskInputPtrType ConnectToTargetSqlDbTaskInputArgs

func ConnectToTargetSqlDbTaskInputPtr(v *ConnectToTargetSqlDbTaskInputArgs) ConnectToTargetSqlDbTaskInputPtrInput {
	return (*connectToTargetSqlDbTaskInputPtrType)(v)
}

func (*connectToTargetSqlDbTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlDbTaskInputPtrType) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlDbTaskInputPtrType) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputOutput() ConnectToTargetSqlDbTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlDbTaskInputOutput) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInput) *ConnectToTargetSqlDbTaskInput {
		return &v
	}).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToTargetSqlDbTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) ToConnectToTargetSqlDbTaskInputPtrOutput() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) ToConnectToTargetSqlDbTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputPtrOutput) Elem() ConnectToTargetSqlDbTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInput) ConnectToTargetSqlDbTaskInput { return *v }).(ConnectToTargetSqlDbTaskInputOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputInvokeResponse struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlDbTaskInputInvokeResponseInput is an input type that accepts ConnectToTargetSqlDbTaskInputInvokeResponseArgs and ConnectToTargetSqlDbTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputInvokeResponseInput` via:
//
//          ConnectToTargetSqlDbTaskInputInvokeResponseArgs{...}
type ConnectToTargetSqlDbTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputInvokeResponseOutput() ConnectToTargetSqlDbTaskInputInvokeResponseOutput
	ToConnectToTargetSqlDbTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputInvokeResponseArgs struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ToConnectToTargetSqlDbTaskInputInvokeResponseOutput() ConnectToTargetSqlDbTaskInputInvokeResponseOutput {
	return i.ToConnectToTargetSqlDbTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ToConnectToTargetSqlDbTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputInvokeResponseOutput)
}

func (i ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputInvokeResponseOutput).ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlDbTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetSqlDbTaskInputInvokeResponseArgs, ConnectToTargetSqlDbTaskInputInvokeResponsePtr and ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetSqlDbTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlDbTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput
	ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput
}

type connectToTargetSqlDbTaskInputInvokeResponsePtrType ConnectToTargetSqlDbTaskInputInvokeResponseArgs

func ConnectToTargetSqlDbTaskInputInvokeResponsePtr(v *ConnectToTargetSqlDbTaskInputInvokeResponseArgs) ConnectToTargetSqlDbTaskInputInvokeResponsePtrInput {
	return (*connectToTargetSqlDbTaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetSqlDbTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetSqlDbTaskInputInvokeResponsePtrType) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlDbTaskInputInvokeResponsePtrType) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponseOutput) ToConnectToTargetSqlDbTaskInputInvokeResponseOutput() ConnectToTargetSqlDbTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponseOutput) ToConnectToTargetSqlDbTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponseOutput) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponseOutput) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInputInvokeResponse) *ConnectToTargetSqlDbTaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetSqlDbTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputInvokeResponse) ConnectToTargetSqlDbTaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetSqlDbTaskInputInvokeResponseOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputResponse struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlDbTaskInputResponseInput is an input type that accepts ConnectToTargetSqlDbTaskInputResponseArgs and ConnectToTargetSqlDbTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputResponseInput` via:
//
//          ConnectToTargetSqlDbTaskInputResponseArgs{...}
type ConnectToTargetSqlDbTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput
	ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputResponseOutput
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputResponseArgs struct {
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlDbTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponseOutput)
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskInputResponseArgs) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponseOutput).ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlDbTaskInputResponsePtrInput is an input type that accepts ConnectToTargetSqlDbTaskInputResponseArgs, ConnectToTargetSqlDbTaskInputResponsePtr and ConnectToTargetSqlDbTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskInputResponsePtrInput` via:
//
//          ConnectToTargetSqlDbTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlDbTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput
	ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput
}

type connectToTargetSqlDbTaskInputResponsePtrType ConnectToTargetSqlDbTaskInputResponseArgs

func ConnectToTargetSqlDbTaskInputResponsePtr(v *ConnectToTargetSqlDbTaskInputResponseArgs) ConnectToTargetSqlDbTaskInputResponsePtrInput {
	return (*connectToTargetSqlDbTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlDbTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlDbTaskInputResponsePtrType) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlDbTaskInputResponsePtrType) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponseOutput() ConnectToTargetSqlDbTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlDbTaskInputResponseOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInputResponse) *ConnectToTargetSqlDbTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlDbTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlDbTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutput() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) ToConnectToTargetSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlDbTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputResponse) ConnectToTargetSqlDbTaskInputResponse { return *v }).(ConnectToTargetSqlDbTaskInputResponseOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlDbTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputInvokeResponse struct {
	// Source databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// ConnectToTargetSqlDbTaskOutputInvokeResponseInput is an input type that accepts ConnectToTargetSqlDbTaskOutputInvokeResponseArgs and ConnectToTargetSqlDbTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskOutputInvokeResponseInput` via:
//
//          ConnectToTargetSqlDbTaskOutputInvokeResponseArgs{...}
type ConnectToTargetSqlDbTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputInvokeResponseOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseOutput
	ToConnectToTargetSqlDbTaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputInvokeResponseArgs struct {
	// Source databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (ConnectToTargetSqlDbTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputInvokeResponseArgs) ToConnectToTargetSqlDbTaskOutputInvokeResponseOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseOutput {
	return i.ToConnectToTargetSqlDbTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputInvokeResponseArgs) ToConnectToTargetSqlDbTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputInvokeResponseOutput)
}

// ConnectToTargetSqlDbTaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToTargetSqlDbTaskOutputInvokeResponseArray and ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToTargetSqlDbTaskOutputInvokeResponseArray{ ConnectToTargetSqlDbTaskOutputInvokeResponseArgs{...} }
type ConnectToTargetSqlDbTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput
	ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput
}

type ConnectToTargetSqlDbTaskOutputInvokeResponseArray []ConnectToTargetSqlDbTaskOutputInvokeResponseInput

func (ConnectToTargetSqlDbTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputInvokeResponseArray) ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputInvokeResponseArray) ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) ToConnectToTargetSqlDbTaskOutputInvokeResponseOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) ToConnectToTargetSqlDbTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseOutput {
	return o
}

// Source databases as a map from database name to database id
func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputInvokeResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

// Result identifier
func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputInvokeResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetSqlDbTaskOutputInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputInvokeResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlDbTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlDbTaskOutputInvokeResponse {
		return vs[0].([]ConnectToTargetSqlDbTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlDbTaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputResponse struct {
	// Source databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Result identifier
	Id string `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// ConnectToTargetSqlDbTaskOutputResponseInput is an input type that accepts ConnectToTargetSqlDbTaskOutputResponseArgs and ConnectToTargetSqlDbTaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskOutputResponseInput` via:
//
//          ConnectToTargetSqlDbTaskOutputResponseArgs{...}
type ConnectToTargetSqlDbTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput
	ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputResponseArgs struct {
	// Source databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Version of the target server
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (ConnectToTargetSqlDbTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputResponseArgs) ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput {
	return i.ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputResponseArgs) ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputResponseOutput)
}

// ConnectToTargetSqlDbTaskOutputResponseArrayInput is an input type that accepts ConnectToTargetSqlDbTaskOutputResponseArray and ConnectToTargetSqlDbTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskOutputResponseArrayInput` via:
//
//          ConnectToTargetSqlDbTaskOutputResponseArray{ ConnectToTargetSqlDbTaskOutputResponseArgs{...} }
type ConnectToTargetSqlDbTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput
	ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput
}

type ConnectToTargetSqlDbTaskOutputResponseArray []ConnectToTargetSqlDbTaskOutputResponseInput

func (ConnectToTargetSqlDbTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskOutputResponseArray) ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskOutputResponseArray) ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) ToConnectToTargetSqlDbTaskOutputResponseOutput() ConnectToTargetSqlDbTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseOutput) ToConnectToTargetSqlDbTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return o
}

// Source databases as a map from database name to database id
func (o ConnectToTargetSqlDbTaskOutputResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

// Result identifier
func (o ConnectToTargetSqlDbTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Target server brand version
func (o ConnectToTargetSqlDbTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Version of the target server
func (o ConnectToTargetSqlDbTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type ConnectToTargetSqlDbTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlDbTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputResponseArrayOutput() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) ToConnectToTargetSqlDbTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlDbTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlDbTaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlDbTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlDbTaskOutputResponseOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskProperties struct {
	// Task input
	Input *ConnectToTargetSqlDbTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlDbTaskPropertiesInput is an input type that accepts ConnectToTargetSqlDbTaskPropertiesArgs and ConnectToTargetSqlDbTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskPropertiesInput` via:
//
//          ConnectToTargetSqlDbTaskPropertiesArgs{...}
type ConnectToTargetSqlDbTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput
	ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlDbTaskPropertiesOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetSqlDbTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskPropertiesArgs) ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput {
	return i.ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskPropertiesArgs) ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskPropertiesOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) ToConnectToTargetSqlDbTaskPropertiesOutput() ConnectToTargetSqlDbTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesOutput) ToConnectToTargetSqlDbTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetSqlDbTaskPropertiesOutput) Input() ConnectToTargetSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskProperties) *ConnectToTargetSqlDbTaskInput { return v.Input }).(ConnectToTargetSqlDbTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb'.
func (o ConnectToTargetSqlDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlDbTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlDbTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlDbTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs and ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetSqlDbTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput
	ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlDbTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlDbTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlDbTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) Input() ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) *ConnectToTargetSqlDbTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) Output() ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) []ConnectToTargetSqlDbTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb'.
func (o ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlDbTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlDbTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlDbTaskPropertiesResponseInput is an input type that accepts ConnectToTargetSqlDbTaskPropertiesResponseArgs and ConnectToTargetSqlDbTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlDbTaskPropertiesResponseInput` via:
//
//          ConnectToTargetSqlDbTaskPropertiesResponseArgs{...}
type ConnectToTargetSqlDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput
	ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlDbTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlDbTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlDbTaskPropertiesResponseArgs) ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlDbTaskPropertiesResponseArgs) ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlDbTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements
type ConnectToTargetSqlDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) ToConnectToTargetSqlDbTaskPropertiesResponseOutput() ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) ToConnectToTargetSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlDbTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Input() ConnectToTargetSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) *ConnectToTargetSqlDbTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlDbTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) Output() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) []ConnectToTargetSqlDbTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb'.
func (o ConnectToTargetSqlDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInput struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryApp `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMISyncTaskInputInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputArgs and ConnectToTargetSqlMISyncTaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputArgs{...}
type ConnectToTargetSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput
	ToConnectToTargetSqlMISyncTaskInputOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInput `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputOutput)
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputArgs) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputOutput).ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMISyncTaskInputPtrInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputArgs, ConnectToTargetSqlMISyncTaskInputPtr and ConnectToTargetSqlMISyncTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputPtrInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput
	ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput
}

type connectToTargetSqlMISyncTaskInputPtrType ConnectToTargetSqlMISyncTaskInputArgs

func ConnectToTargetSqlMISyncTaskInputPtr(v *ConnectToTargetSqlMISyncTaskInputArgs) ConnectToTargetSqlMISyncTaskInputPtrInput {
	return (*connectToTargetSqlMISyncTaskInputPtrType)(v)
}

func (*connectToTargetSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlMISyncTaskInputPtrType) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMISyncTaskInputPtrType) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputOutput() ConnectToTargetSqlMISyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMISyncTaskInputOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInput) *ConnectToTargetSqlMISyncTaskInput {
		return &v
	}).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInput) MiSqlConnectionInfo { return v.TargetConnectionInfo }).(MiSqlConnectionInfoOutput)
}

type ConnectToTargetSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutput() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) ToConnectToTargetSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) Elem() ConnectToTargetSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) ConnectToTargetSqlMISyncTaskInput { return *v }).(ConnectToTargetSqlMISyncTaskInputOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputInvokeResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponse `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMISyncTaskInputInvokeResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs and ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputInvokeResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs{...}
type ConnectToTargetSqlMISyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput
	ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponseInput `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput)
}

func (i ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput).ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs, ConnectToTargetSqlMISyncTaskInputInvokeResponsePtr and ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput
	ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput
}

type connectToTargetSqlMISyncTaskInputInvokeResponsePtrType ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs

func ConnectToTargetSqlMISyncTaskInputInvokeResponsePtr(v *ConnectToTargetSqlMISyncTaskInputInvokeResponseArgs) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrInput {
	return (*connectToTargetSqlMISyncTaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetSqlMISyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMISyncTaskInputInvokeResponsePtrType) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMISyncTaskInputInvokeResponsePtrType) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputInvokeResponse) *ConnectToTargetSqlMISyncTaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) AzureApp() AzureActiveDirectoryAppInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputInvokeResponse) AzureActiveDirectoryAppInvokeResponse {
		return v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponseOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputInvokeResponse) MiSqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputInvokeResponse) ConnectToTargetSqlMISyncTaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) AzureApp() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputInvokeResponse) *AzureActiveDirectoryAppInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponsePtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputInvokeResponse) *MiSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponse `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMISyncTaskInputResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputResponseArgs and ConnectToTargetSqlMISyncTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputResponseArgs{...}
type ConnectToTargetSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput
	ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponseInput `pulumi:"azureApp"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponseOutput)
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskInputResponseArgs) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponseOutput).ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMISyncTaskInputResponsePtrInput is an input type that accepts ConnectToTargetSqlMISyncTaskInputResponseArgs, ConnectToTargetSqlMISyncTaskInputResponsePtr and ConnectToTargetSqlMISyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskInputResponsePtrInput` via:
//
//          ConnectToTargetSqlMISyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput
	ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput
}

type connectToTargetSqlMISyncTaskInputResponsePtrType ConnectToTargetSqlMISyncTaskInputResponseArgs

func ConnectToTargetSqlMISyncTaskInputResponsePtr(v *ConnectToTargetSqlMISyncTaskInputResponseArgs) ConnectToTargetSqlMISyncTaskInputResponsePtrInput {
	return (*connectToTargetSqlMISyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMISyncTaskInputResponsePtrType) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMISyncTaskInputResponsePtrType) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
type ConnectToTargetSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponseOutput() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputResponse) *ConnectToTargetSqlMISyncTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse { return v.AzureApp }).(AzureActiveDirectoryAppResponseOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutput() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) ToConnectToTargetSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) ConnectToTargetSqlMISyncTaskInputResponse {
		return *v
	}).(ConnectToTargetSqlMISyncTaskInputResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ConnectToTargetSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputInvokeResponse struct {
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToTargetSqlMISyncTaskOutputInvokeResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs and ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskOutputInvokeResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs{...}
type ConnectToTargetSqlMISyncTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput
	ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs struct {
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput)
}

// ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray and ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray{ ConnectToTargetSqlMISyncTaskOutputInvokeResponseArgs{...} }
type ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput
	ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput
}

type ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray []ConnectToTargetSqlMISyncTaskOutputInvokeResponseInput

func (ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputInvokeResponseArray) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput {
	return o
}

// Target server brand version
func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputInvokeResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Target server version
func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputInvokeResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMISyncTaskOutputInvokeResponse {
		return vs[0].([]ConnectToTargetSqlMISyncTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputResponse struct {
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToTargetSqlMISyncTaskOutputResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskOutputResponseArgs and ConnectToTargetSqlMISyncTaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskOutputResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskOutputResponseArgs{...}
type ConnectToTargetSqlMISyncTaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput
	ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputResponseArgs struct {
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMISyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArgs) ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArgs) ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputResponseOutput)
}

// ConnectToTargetSqlMISyncTaskOutputResponseArrayInput is an input type that accepts ConnectToTargetSqlMISyncTaskOutputResponseArray and ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskOutputResponseArrayInput` via:
//
//          ConnectToTargetSqlMISyncTaskOutputResponseArray{ ConnectToTargetSqlMISyncTaskOutputResponseArgs{...} }
type ConnectToTargetSqlMISyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput
	ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput
}

type ConnectToTargetSqlMISyncTaskOutputResponseArray []ConnectToTargetSqlMISyncTaskOutputResponseInput

func (ConnectToTargetSqlMISyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArray) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskOutputResponseArray) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMISyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ToConnectToTargetSqlMISyncTaskOutputResponseOutput() ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ToConnectToTargetSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return o
}

// Target server brand version
func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Target server version
func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToTargetSqlMISyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutput() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) ToConnectToTargetSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMISyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMISyncTaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlMISyncTaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMISyncTaskOutputResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskProperties struct {
	// Task input
	Input *ConnectToTargetSqlMISyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMISyncTaskPropertiesInput is an input type that accepts ConnectToTargetSqlMISyncTaskPropertiesArgs and ConnectToTargetSqlMISyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskPropertiesInput` via:
//
//          ConnectToTargetSqlMISyncTaskPropertiesArgs{...}
type ConnectToTargetSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput
	ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetSqlMISyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskPropertiesArgs) ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return i.ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskPropertiesArgs) ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskPropertiesOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) ToConnectToTargetSqlMISyncTaskPropertiesOutput() ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) ToConnectToTargetSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) Input() ConnectToTargetSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskProperties) *ConnectToTargetSqlMISyncTaskInput { return v.Input }).(ConnectToTargetSqlMISyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
func (o ConnectToTargetSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlMISyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlMISyncTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs and ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput
	ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) Input() ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) *ConnectToTargetSqlMISyncTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) Output() ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) []ConnectToTargetSqlMISyncTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
func (o ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlMISyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlMISyncTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMISyncTaskPropertiesResponseInput is an input type that accepts ConnectToTargetSqlMISyncTaskPropertiesResponseArgs and ConnectToTargetSqlMISyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMISyncTaskPropertiesResponseInput` via:
//
//          ConnectToTargetSqlMISyncTaskPropertiesResponseArgs{...}
type ConnectToTargetSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput
	ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlMISyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlMISyncTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMISyncTaskPropertiesResponseArgs) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMISyncTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutput() ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) ToConnectToTargetSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMISyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Input() ConnectToTargetSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) *ConnectToTargetSqlMISyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) Output() ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) []ConnectToTargetSqlMISyncTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI.Sync.LRS'.
func (o ConnectToTargetSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInput struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMITaskInputInput is an input type that accepts ConnectToTargetSqlMITaskInputArgs and ConnectToTargetSqlMITaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputInput` via:
//
//          ConnectToTargetSqlMITaskInputArgs{...}
type ConnectToTargetSqlMITaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput
	ToConnectToTargetSqlMITaskInputOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputArgs struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput {
	return i.ToConnectToTargetSqlMITaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputOutput)
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return i.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputArgs) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputOutput).ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMITaskInputPtrInput is an input type that accepts ConnectToTargetSqlMITaskInputArgs, ConnectToTargetSqlMITaskInputPtr and ConnectToTargetSqlMITaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputPtrInput` via:
//
//          ConnectToTargetSqlMITaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput
	ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputPtrOutput
}

type connectToTargetSqlMITaskInputPtrType ConnectToTargetSqlMITaskInputArgs

func ConnectToTargetSqlMITaskInputPtr(v *ConnectToTargetSqlMITaskInputArgs) ConnectToTargetSqlMITaskInputPtrInput {
	return (*connectToTargetSqlMITaskInputPtrType)(v)
}

func (*connectToTargetSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlMITaskInputPtrType) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return i.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMITaskInputPtrType) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputPtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputOutput() ConnectToTargetSqlMITaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ToConnectToTargetSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMITaskInputOutput) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) *ConnectToTargetSqlMITaskInput {
		return &v
	}).(ConnectToTargetSqlMITaskInputPtrOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToTargetSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) ToConnectToTargetSqlMITaskInputPtrOutput() ConnectToTargetSqlMITaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) ToConnectToTargetSqlMITaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputPtrOutput) Elem() ConnectToTargetSqlMITaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) ConnectToTargetSqlMITaskInput { return *v }).(ConnectToTargetSqlMITaskInputOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputInvokeResponse struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMITaskInputInvokeResponseInput is an input type that accepts ConnectToTargetSqlMITaskInputInvokeResponseArgs and ConnectToTargetSqlMITaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputInvokeResponseInput` via:
//
//          ConnectToTargetSqlMITaskInputInvokeResponseArgs{...}
type ConnectToTargetSqlMITaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputInvokeResponseOutput() ConnectToTargetSqlMITaskInputInvokeResponseOutput
	ToConnectToTargetSqlMITaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputInvokeResponseOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputInvokeResponseArgs struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMITaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskInputInvokeResponseArgs) ToConnectToTargetSqlMITaskInputInvokeResponseOutput() ConnectToTargetSqlMITaskInputInvokeResponseOutput {
	return i.ToConnectToTargetSqlMITaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputInvokeResponseArgs) ToConnectToTargetSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputInvokeResponseOutput)
}

func (i ConnectToTargetSqlMITaskInputInvokeResponseArgs) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputInvokeResponseArgs) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputInvokeResponseOutput).ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMITaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetSqlMITaskInputInvokeResponseArgs, ConnectToTargetSqlMITaskInputInvokeResponsePtr and ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetSqlMITaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMITaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput
	ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput
}

type connectToTargetSqlMITaskInputInvokeResponsePtrType ConnectToTargetSqlMITaskInputInvokeResponseArgs

func ConnectToTargetSqlMITaskInputInvokeResponsePtr(v *ConnectToTargetSqlMITaskInputInvokeResponseArgs) ConnectToTargetSqlMITaskInputInvokeResponsePtrInput {
	return (*connectToTargetSqlMITaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetSqlMITaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMITaskInputInvokeResponsePtrType) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMITaskInputInvokeResponsePtrType) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputInvokeResponseOutput) ToConnectToTargetSqlMITaskInputInvokeResponseOutput() ConnectToTargetSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputInvokeResponseOutput) ToConnectToTargetSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputInvokeResponseOutput) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMITaskInputInvokeResponseOutput) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputInvokeResponse) *ConnectToTargetSqlMITaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutput() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetSqlMITaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputInvokeResponse) ConnectToTargetSqlMITaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetSqlMITaskInputInvokeResponseOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputResponse struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlMITaskInputResponseInput is an input type that accepts ConnectToTargetSqlMITaskInputResponseArgs and ConnectToTargetSqlMITaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputResponseInput` via:
//
//          ConnectToTargetSqlMITaskInputResponseArgs{...}
type ConnectToTargetSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput
	ToConnectToTargetSqlMITaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputResponseOutput
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputResponseArgs struct {
	// Connection information for target SQL Server
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput {
	return i.ToConnectToTargetSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponseOutput)
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskInputResponseArgs) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponseOutput).ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlMITaskInputResponsePtrInput is an input type that accepts ConnectToTargetSqlMITaskInputResponseArgs, ConnectToTargetSqlMITaskInputResponsePtr and ConnectToTargetSqlMITaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskInputResponsePtrInput` via:
//
//          ConnectToTargetSqlMITaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput
	ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput
}

type connectToTargetSqlMITaskInputResponsePtrType ConnectToTargetSqlMITaskInputResponseArgs

func ConnectToTargetSqlMITaskInputResponsePtr(v *ConnectToTargetSqlMITaskInputResponseArgs) ConnectToTargetSqlMITaskInputResponsePtrInput {
	return (*connectToTargetSqlMITaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlMITaskInputResponsePtrType) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlMITaskInputResponsePtrType) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponseOutput() ConnectToTargetSqlMITaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlMITaskInputResponseOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) *ConnectToTargetSqlMITaskInputResponse {
		return &v
	}).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlMITaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutput() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) ToConnectToTargetSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) Elem() ConnectToTargetSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) ConnectToTargetSqlMITaskInputResponse { return *v }).(ConnectToTargetSqlMITaskInputResponseOutput)
}

// Connection information for target SQL Server
func (o ConnectToTargetSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputInvokeResponse struct {
	// List of agent jobs on the target server.
	AgentJobs []string `pulumi:"agentJobs"`
	// Result identifier
	Id string `pulumi:"id"`
	// List of logins on the target server.
	Logins []string `pulumi:"logins"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ConnectToTargetSqlMITaskOutputInvokeResponseInput is an input type that accepts ConnectToTargetSqlMITaskOutputInvokeResponseArgs and ConnectToTargetSqlMITaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskOutputInvokeResponseInput` via:
//
//          ConnectToTargetSqlMITaskOutputInvokeResponseArgs{...}
type ConnectToTargetSqlMITaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputInvokeResponseOutput() ConnectToTargetSqlMITaskOutputInvokeResponseOutput
	ToConnectToTargetSqlMITaskOutputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseOutput
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputInvokeResponseArgs struct {
	// List of agent jobs on the target server.
	AgentJobs pulumi.StringArrayInput `pulumi:"agentJobs"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// List of logins on the target server.
	Logins pulumi.StringArrayInput `pulumi:"logins"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMITaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputInvokeResponseArgs) ToConnectToTargetSqlMITaskOutputInvokeResponseOutput() ConnectToTargetSqlMITaskOutputInvokeResponseOutput {
	return i.ToConnectToTargetSqlMITaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputInvokeResponseArgs) ToConnectToTargetSqlMITaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputInvokeResponseOutput)
}

// ConnectToTargetSqlMITaskOutputInvokeResponseArrayInput is an input type that accepts ConnectToTargetSqlMITaskOutputInvokeResponseArray and ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskOutputInvokeResponseArrayInput` via:
//
//          ConnectToTargetSqlMITaskOutputInvokeResponseArray{ ConnectToTargetSqlMITaskOutputInvokeResponseArgs{...} }
type ConnectToTargetSqlMITaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput
	ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput
}

type ConnectToTargetSqlMITaskOutputInvokeResponseArray []ConnectToTargetSqlMITaskOutputInvokeResponseInput

func (ConnectToTargetSqlMITaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputInvokeResponseArray) ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput {
	return i.ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputInvokeResponseArray) ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) ToConnectToTargetSqlMITaskOutputInvokeResponseOutput() ConnectToTargetSqlMITaskOutputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) ToConnectToTargetSqlMITaskOutputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseOutput {
	return o
}

// List of agent jobs on the target server.
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) AgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) []string { return v.AgentJobs }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// List of logins on the target server.
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) Logins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) []string { return v.Logins }).(pulumi.StringArrayOutput)
}

// Target server brand version
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Target server version
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToTargetSqlMITaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput() ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput) ToConnectToTargetSqlMITaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMITaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMITaskOutputInvokeResponse {
		return vs[0].([]ConnectToTargetSqlMITaskOutputInvokeResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMITaskOutputInvokeResponseOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputResponse struct {
	// List of agent jobs on the target server.
	AgentJobs []string `pulumi:"agentJobs"`
	// Result identifier
	Id string `pulumi:"id"`
	// List of logins on the target server.
	Logins []string `pulumi:"logins"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ConnectToTargetSqlMITaskOutputResponseInput is an input type that accepts ConnectToTargetSqlMITaskOutputResponseArgs and ConnectToTargetSqlMITaskOutputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskOutputResponseInput` via:
//
//          ConnectToTargetSqlMITaskOutputResponseArgs{...}
type ConnectToTargetSqlMITaskOutputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput
	ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputResponseOutput
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputResponseArgs struct {
	// List of agent jobs on the target server.
	AgentJobs pulumi.StringArrayInput `pulumi:"agentJobs"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// List of logins on the target server.
	Logins pulumi.StringArrayInput `pulumi:"logins"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ConnectToTargetSqlMITaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputResponseArgs) ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput {
	return i.ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputResponseArgs) ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputResponseOutput)
}

// ConnectToTargetSqlMITaskOutputResponseArrayInput is an input type that accepts ConnectToTargetSqlMITaskOutputResponseArray and ConnectToTargetSqlMITaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskOutputResponseArrayInput` via:
//
//          ConnectToTargetSqlMITaskOutputResponseArray{ ConnectToTargetSqlMITaskOutputResponseArgs{...} }
type ConnectToTargetSqlMITaskOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput
	ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput
}

type ConnectToTargetSqlMITaskOutputResponseArray []ConnectToTargetSqlMITaskOutputResponseInput

func (ConnectToTargetSqlMITaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskOutputResponseArray) ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return i.ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskOutputResponseArray) ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskOutputResponseArrayOutput)
}

// Output for the task that validates connection to Azure SQL Database Managed Instance.
type ConnectToTargetSqlMITaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) ToConnectToTargetSqlMITaskOutputResponseOutput() ConnectToTargetSqlMITaskOutputResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseOutput) ToConnectToTargetSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseOutput {
	return o
}

// List of agent jobs on the target server.
func (o ConnectToTargetSqlMITaskOutputResponseOutput) AgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []string { return v.AgentJobs }).(pulumi.StringArrayOutput)
}

// Result identifier
func (o ConnectToTargetSqlMITaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// List of logins on the target server.
func (o ConnectToTargetSqlMITaskOutputResponseOutput) Logins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []string { return v.Logins }).(pulumi.StringArrayOutput)
}

// Target server brand version
func (o ConnectToTargetSqlMITaskOutputResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.TargetServerBrandVersion }).(pulumi.StringOutput)
}

// Target server version
func (o ConnectToTargetSqlMITaskOutputResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Validation errors
func (o ConnectToTargetSqlMITaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ConnectToTargetSqlMITaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectToTargetSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) ToConnectToTargetSqlMITaskOutputResponseArrayOutput() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) ToConnectToTargetSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ConnectToTargetSqlMITaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectToTargetSqlMITaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectToTargetSqlMITaskOutputResponse {
		return vs[0].([]ConnectToTargetSqlMITaskOutputResponse)[vs[1].(int)]
	}).(ConnectToTargetSqlMITaskOutputResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskProperties struct {
	// Task input
	Input *ConnectToTargetSqlMITaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMITaskPropertiesInput is an input type that accepts ConnectToTargetSqlMITaskPropertiesArgs and ConnectToTargetSqlMITaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskPropertiesInput` via:
//
//          ConnectToTargetSqlMITaskPropertiesArgs{...}
type ConnectToTargetSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput
	ToConnectToTargetSqlMITaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlMITaskPropertiesOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetSqlMITaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskPropertiesArgs) ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput {
	return i.ToConnectToTargetSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskPropertiesArgs) ToConnectToTargetSqlMITaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskPropertiesOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) ToConnectToTargetSqlMITaskPropertiesOutput() ConnectToTargetSqlMITaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesOutput) ToConnectToTargetSqlMITaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetSqlMITaskPropertiesOutput) Input() ConnectToTargetSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskProperties) *ConnectToTargetSqlMITaskInput { return v.Input }).(ConnectToTargetSqlMITaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
func (o ConnectToTargetSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlMITaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlMITaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMITaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs and ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetSqlMITaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput
	ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlMITaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlMITaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutput() ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) Input() ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) *ConnectToTargetSqlMITaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) Output() ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) []ConnectToTargetSqlMITaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
func (o ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlMITaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlMITaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlMITaskPropertiesResponseInput is an input type that accepts ConnectToTargetSqlMITaskPropertiesResponseArgs and ConnectToTargetSqlMITaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlMITaskPropertiesResponseInput` via:
//
//          ConnectToTargetSqlMITaskPropertiesResponseArgs{...}
type ConnectToTargetSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput
	ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlMITaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlMITaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlMITaskPropertiesResponseArgs) ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlMITaskPropertiesResponseArgs) ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlMITaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to Azure SQL Database Managed Instance
type ConnectToTargetSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) ToConnectToTargetSqlMITaskPropertiesResponseOutput() ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) ToConnectToTargetSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlMITaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Input() ConnectToTargetSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) *ConnectToTargetSqlMITaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlMITaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) Output() ConnectToTargetSqlMITaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) []ConnectToTargetSqlMITaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlMITaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.AzureSqlDbMI'.
func (o ConnectToTargetSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInput struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlSqlDbSyncTaskInputInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputArgs and ConnectToTargetSqlSqlDbSyncTaskInputOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskInputInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputArgs struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlSqlDbSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputOutput)
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputArgs) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputOutput).ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx)
}

// ConnectToTargetSqlSqlDbSyncTaskInputPtrInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputArgs, ConnectToTargetSqlSqlDbSyncTaskInputPtr and ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputPtrInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlSqlDbSyncTaskInputPtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput
}

type connectToTargetSqlSqlDbSyncTaskInputPtrType ConnectToTargetSqlSqlDbSyncTaskInputArgs

func ConnectToTargetSqlSqlDbSyncTaskInputPtr(v *ConnectToTargetSqlSqlDbSyncTaskInputArgs) ConnectToTargetSqlSqlDbSyncTaskInputPtrInput {
	return (*connectToTargetSqlSqlDbSyncTaskInputPtrType)(v)
}

func (*connectToTargetSqlSqlDbSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (i *connectToTargetSqlSqlDbSyncTaskInputPtrType) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlSqlDbSyncTaskInputPtrType) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputOutput() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInput) *ConnectToTargetSqlSqlDbSyncTaskInput {
		return &v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInput)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) Elem() ConnectToTargetSqlSqlDbSyncTaskInputOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) ConnectToTargetSqlSqlDbSyncTaskInput { return *v }).(ConnectToTargetSqlSqlDbSyncTaskInputOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs and ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput)
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput).ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs, ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtr and ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput
}

type connectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrType ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs

func ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtr(v *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseArgs) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrInput {
	return (*connectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrType)(v)
}

func (*connectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *connectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse {
		return &v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) Elem() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse {
		return *v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputResponse struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ConnectToTargetSqlSqlDbSyncTaskInputResponseInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs and ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputResponseInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskInputResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs struct {
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target SQL DB
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput)
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput).ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs, ConnectToTargetSqlSqlDbSyncTaskInputResponsePtr and ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput
	ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput
}

type connectToTargetSqlSqlDbSyncTaskInputResponsePtrType ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs

func ConnectToTargetSqlSqlDbSyncTaskInputResponsePtr(v *ConnectToTargetSqlSqlDbSyncTaskInputResponseArgs) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput {
	return (*connectToTargetSqlSqlDbSyncTaskInputResponsePtrType)(v)
}

func (*connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i *connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *connectToTargetSqlSqlDbSyncTaskInputResponsePtrType) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

// Input for the task that validates connection to Azure SQL DB and target server requirements
type ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputResponse) *ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		return &v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectToTargetSqlSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) ToConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) Elem() ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		return *v
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput)
}

// Connection information for source SQL Server
func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Connection information for target SQL DB
func (o ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ConnectToTargetSqlSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskProperties struct {
	// Task input
	Input *ConnectToTargetSqlSqlDbSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlSqlDbSyncTaskPropertiesInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs and ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskPropertiesInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput
	ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs struct {
	// Task input
	Input ConnectToTargetSqlSqlDbSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) Input() ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskProperties) *ConnectToTargetSqlSqlDbSyncTaskInput {
		return v.Input
	}).(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb.Sync'.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlDbTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs and ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlDbTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) Input() ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) *ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponse {
		return v.Input
	}).(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) Output() ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) []ConnectToTargetSqlDbTaskOutputInvokeResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb.Sync'.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ConnectToTargetSqlSqlDbSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ConnectToTargetSqlDbTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseInput is an input type that accepts ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs and ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseInput` via:
//
//          ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs{...}
type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput
	ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ConnectToTargetSqlDbTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ConnectToTarget.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseArgs) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput)
}

// Properties for the task that validates connection to SQL DB and target server requirements for online migration
type ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput() ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) ToConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Input() ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) *ConnectToTargetSqlSqlDbSyncTaskInputResponse {
		return v.Input
	}).(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) Output() ConnectToTargetSqlDbTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) []ConnectToTargetSqlDbTaskOutputResponse {
		return v.Output
	}).(ConnectToTargetSqlDbTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ConnectToTarget.SqlDb.Sync'.
func (o ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectToTargetSqlSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultInvokeResponse struct {
	// List of failed table names of source and target pair
	FailedObjects map[string]string `pulumi:"failedObjects"`
	// List of errors that happened while performing data integrity validation
	ValidationErrors ValidationErrorInvokeResponse `pulumi:"validationErrors"`
}

// DataIntegrityValidationResultInvokeResponseInput is an input type that accepts DataIntegrityValidationResultInvokeResponseArgs and DataIntegrityValidationResultInvokeResponseOutput values.
// You can construct a concrete instance of `DataIntegrityValidationResultInvokeResponseInput` via:
//
//          DataIntegrityValidationResultInvokeResponseArgs{...}
type DataIntegrityValidationResultInvokeResponseInput interface {
	pulumi.Input

	ToDataIntegrityValidationResultInvokeResponseOutput() DataIntegrityValidationResultInvokeResponseOutput
	ToDataIntegrityValidationResultInvokeResponseOutputWithContext(context.Context) DataIntegrityValidationResultInvokeResponseOutput
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultInvokeResponseArgs struct {
	// List of failed table names of source and target pair
	FailedObjects pulumi.StringMapInput `pulumi:"failedObjects"`
	// List of errors that happened while performing data integrity validation
	ValidationErrors ValidationErrorInvokeResponseInput `pulumi:"validationErrors"`
}

func (DataIntegrityValidationResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrityValidationResultInvokeResponse)(nil)).Elem()
}

func (i DataIntegrityValidationResultInvokeResponseArgs) ToDataIntegrityValidationResultInvokeResponseOutput() DataIntegrityValidationResultInvokeResponseOutput {
	return i.ToDataIntegrityValidationResultInvokeResponseOutputWithContext(context.Background())
}

func (i DataIntegrityValidationResultInvokeResponseArgs) ToDataIntegrityValidationResultInvokeResponseOutputWithContext(ctx context.Context) DataIntegrityValidationResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrityValidationResultInvokeResponseOutput)
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataIntegrityValidationResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrityValidationResultInvokeResponse)(nil)).Elem()
}

func (o DataIntegrityValidationResultInvokeResponseOutput) ToDataIntegrityValidationResultInvokeResponseOutput() DataIntegrityValidationResultInvokeResponseOutput {
	return o
}

func (o DataIntegrityValidationResultInvokeResponseOutput) ToDataIntegrityValidationResultInvokeResponseOutputWithContext(ctx context.Context) DataIntegrityValidationResultInvokeResponseOutput {
	return o
}

// List of failed table names of source and target pair
func (o DataIntegrityValidationResultInvokeResponseOutput) FailedObjects() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataIntegrityValidationResultInvokeResponse) map[string]string { return v.FailedObjects }).(pulumi.StringMapOutput)
}

// List of errors that happened while performing data integrity validation
func (o DataIntegrityValidationResultInvokeResponseOutput) ValidationErrors() ValidationErrorInvokeResponseOutput {
	return o.ApplyT(func(v DataIntegrityValidationResultInvokeResponse) ValidationErrorInvokeResponse {
		return v.ValidationErrors
	}).(ValidationErrorInvokeResponseOutput)
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultResponse struct {
	// List of failed table names of source and target pair
	FailedObjects map[string]string `pulumi:"failedObjects"`
	// List of errors that happened while performing data integrity validation
	ValidationErrors ValidationErrorResponse `pulumi:"validationErrors"`
}

// DataIntegrityValidationResultResponseInput is an input type that accepts DataIntegrityValidationResultResponseArgs and DataIntegrityValidationResultResponseOutput values.
// You can construct a concrete instance of `DataIntegrityValidationResultResponseInput` via:
//
//          DataIntegrityValidationResultResponseArgs{...}
type DataIntegrityValidationResultResponseInput interface {
	pulumi.Input

	ToDataIntegrityValidationResultResponseOutput() DataIntegrityValidationResultResponseOutput
	ToDataIntegrityValidationResultResponseOutputWithContext(context.Context) DataIntegrityValidationResultResponseOutput
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultResponseArgs struct {
	// List of failed table names of source and target pair
	FailedObjects pulumi.StringMapInput `pulumi:"failedObjects"`
	// List of errors that happened while performing data integrity validation
	ValidationErrors ValidationErrorResponseInput `pulumi:"validationErrors"`
}

func (DataIntegrityValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrityValidationResultResponse)(nil)).Elem()
}

func (i DataIntegrityValidationResultResponseArgs) ToDataIntegrityValidationResultResponseOutput() DataIntegrityValidationResultResponseOutput {
	return i.ToDataIntegrityValidationResultResponseOutputWithContext(context.Background())
}

func (i DataIntegrityValidationResultResponseArgs) ToDataIntegrityValidationResultResponseOutputWithContext(ctx context.Context) DataIntegrityValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataIntegrityValidationResultResponseOutput)
}

// Results for checksum based Data Integrity validation results
type DataIntegrityValidationResultResponseOutput struct{ *pulumi.OutputState }

func (DataIntegrityValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataIntegrityValidationResultResponse)(nil)).Elem()
}

func (o DataIntegrityValidationResultResponseOutput) ToDataIntegrityValidationResultResponseOutput() DataIntegrityValidationResultResponseOutput {
	return o
}

func (o DataIntegrityValidationResultResponseOutput) ToDataIntegrityValidationResultResponseOutputWithContext(ctx context.Context) DataIntegrityValidationResultResponseOutput {
	return o
}

// List of failed table names of source and target pair
func (o DataIntegrityValidationResultResponseOutput) FailedObjects() pulumi.StringMapOutput {
	return o.ApplyT(func(v DataIntegrityValidationResultResponse) map[string]string { return v.FailedObjects }).(pulumi.StringMapOutput)
}

// List of errors that happened while performing data integrity validation
func (o DataIntegrityValidationResultResponseOutput) ValidationErrors() ValidationErrorResponseOutput {
	return o.ApplyT(func(v DataIntegrityValidationResultResponse) ValidationErrorResponse { return v.ValidationErrors }).(ValidationErrorResponseOutput)
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	Name string `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// DataItemMigrationSummaryResultInvokeResponseInput is an input type that accepts DataItemMigrationSummaryResultInvokeResponseArgs and DataItemMigrationSummaryResultInvokeResponseOutput values.
// You can construct a concrete instance of `DataItemMigrationSummaryResultInvokeResponseInput` via:
//
//          DataItemMigrationSummaryResultInvokeResponseArgs{...}
type DataItemMigrationSummaryResultInvokeResponseInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultInvokeResponseOutput() DataItemMigrationSummaryResultInvokeResponseOutput
	ToDataItemMigrationSummaryResultInvokeResponseOutputWithContext(context.Context) DataItemMigrationSummaryResultInvokeResponseOutput
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (DataItemMigrationSummaryResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultInvokeResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultInvokeResponseArgs) ToDataItemMigrationSummaryResultInvokeResponseOutput() DataItemMigrationSummaryResultInvokeResponseOutput {
	return i.ToDataItemMigrationSummaryResultInvokeResponseOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultInvokeResponseArgs) ToDataItemMigrationSummaryResultInvokeResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultInvokeResponseOutput)
}

// DataItemMigrationSummaryResultInvokeResponseMapInput is an input type that accepts DataItemMigrationSummaryResultInvokeResponseMap and DataItemMigrationSummaryResultInvokeResponseMapOutput values.
// You can construct a concrete instance of `DataItemMigrationSummaryResultInvokeResponseMapInput` via:
//
//          DataItemMigrationSummaryResultInvokeResponseMap{ "key": DataItemMigrationSummaryResultInvokeResponseArgs{...} }
type DataItemMigrationSummaryResultInvokeResponseMapInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultInvokeResponseMapOutput() DataItemMigrationSummaryResultInvokeResponseMapOutput
	ToDataItemMigrationSummaryResultInvokeResponseMapOutputWithContext(context.Context) DataItemMigrationSummaryResultInvokeResponseMapOutput
}

type DataItemMigrationSummaryResultInvokeResponseMap map[string]DataItemMigrationSummaryResultInvokeResponseInput

func (DataItemMigrationSummaryResultInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultInvokeResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultInvokeResponseMap) ToDataItemMigrationSummaryResultInvokeResponseMapOutput() DataItemMigrationSummaryResultInvokeResponseMapOutput {
	return i.ToDataItemMigrationSummaryResultInvokeResponseMapOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultInvokeResponseMap) ToDataItemMigrationSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultInvokeResponseMapOutput)
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultInvokeResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultInvokeResponseOutput) ToDataItemMigrationSummaryResultInvokeResponseOutput() DataItemMigrationSummaryResultInvokeResponseOutput {
	return o
}

func (o DataItemMigrationSummaryResultInvokeResponseOutput) ToDataItemMigrationSummaryResultInvokeResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultInvokeResponseOutput {
	return o
}

// Migration end time
func (o DataItemMigrationSummaryResultInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o DataItemMigrationSummaryResultInvokeResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o DataItemMigrationSummaryResultInvokeResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o DataItemMigrationSummaryResultInvokeResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o DataItemMigrationSummaryResultInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o DataItemMigrationSummaryResultInvokeResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Migration start time
func (o DataItemMigrationSummaryResultInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o DataItemMigrationSummaryResultInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o DataItemMigrationSummaryResultInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DataItemMigrationSummaryResultInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultInvokeResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultInvokeResponseMapOutput) ToDataItemMigrationSummaryResultInvokeResponseMapOutput() DataItemMigrationSummaryResultInvokeResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultInvokeResponseMapOutput) ToDataItemMigrationSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultInvokeResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) DataItemMigrationSummaryResultInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataItemMigrationSummaryResultInvokeResponse {
		return vs[0].(map[string]DataItemMigrationSummaryResultInvokeResponse)[vs[1].(string)]
	}).(DataItemMigrationSummaryResultInvokeResponseOutput)
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	Name string `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// DataItemMigrationSummaryResultResponseInput is an input type that accepts DataItemMigrationSummaryResultResponseArgs and DataItemMigrationSummaryResultResponseOutput values.
// You can construct a concrete instance of `DataItemMigrationSummaryResultResponseInput` via:
//
//          DataItemMigrationSummaryResultResponseArgs{...}
type DataItemMigrationSummaryResultResponseInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput
	ToDataItemMigrationSummaryResultResponseOutputWithContext(context.Context) DataItemMigrationSummaryResultResponseOutput
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (DataItemMigrationSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultResponseArgs) ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput {
	return i.ToDataItemMigrationSummaryResultResponseOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultResponseArgs) ToDataItemMigrationSummaryResultResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultResponseOutput)
}

// DataItemMigrationSummaryResultResponseMapInput is an input type that accepts DataItemMigrationSummaryResultResponseMap and DataItemMigrationSummaryResultResponseMapOutput values.
// You can construct a concrete instance of `DataItemMigrationSummaryResultResponseMapInput` via:
//
//          DataItemMigrationSummaryResultResponseMap{ "key": DataItemMigrationSummaryResultResponseArgs{...} }
type DataItemMigrationSummaryResultResponseMapInput interface {
	pulumi.Input

	ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput
	ToDataItemMigrationSummaryResultResponseMapOutputWithContext(context.Context) DataItemMigrationSummaryResultResponseMapOutput
}

type DataItemMigrationSummaryResultResponseMap map[string]DataItemMigrationSummaryResultResponseInput

func (DataItemMigrationSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (i DataItemMigrationSummaryResultResponseMap) ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput {
	return i.ToDataItemMigrationSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i DataItemMigrationSummaryResultResponseMap) ToDataItemMigrationSummaryResultResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataItemMigrationSummaryResultResponseMapOutput)
}

// Basic summary of a data item migration
type DataItemMigrationSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultResponseOutput) ToDataItemMigrationSummaryResultResponseOutput() DataItemMigrationSummaryResultResponseOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseOutput) ToDataItemMigrationSummaryResultResponseOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseOutput {
	return o
}

// Migration end time
func (o DataItemMigrationSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o DataItemMigrationSummaryResultResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o DataItemMigrationSummaryResultResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o DataItemMigrationSummaryResultResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o DataItemMigrationSummaryResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o DataItemMigrationSummaryResultResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Migration start time
func (o DataItemMigrationSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o DataItemMigrationSummaryResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o DataItemMigrationSummaryResultResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DataItemMigrationSummaryResultResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DataItemMigrationSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (DataItemMigrationSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataItemMigrationSummaryResultResponse)(nil)).Elem()
}

func (o DataItemMigrationSummaryResultResponseMapOutput) ToDataItemMigrationSummaryResultResponseMapOutput() DataItemMigrationSummaryResultResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseMapOutput) ToDataItemMigrationSummaryResultResponseMapOutputWithContext(ctx context.Context) DataItemMigrationSummaryResultResponseMapOutput {
	return o
}

func (o DataItemMigrationSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) DataItemMigrationSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataItemMigrationSummaryResultResponse {
		return vs[0].(map[string]DataItemMigrationSummaryResultResponse)[vs[1].(string)]
	}).(DataItemMigrationSummaryResultResponseOutput)
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoInvokeResponse struct {
	// The list of backup files for the current database.
	BackupFiles []string `pulumi:"backupFiles"`
	// Date and time when the backup operation finished.
	BackupFinishDate string `pulumi:"backupFinishDate"`
	// Backup Type.
	BackupType string `pulumi:"backupType"`
	// Database name.
	DatabaseName string `pulumi:"databaseName"`
	// Number of files in the backup set.
	FamilyCount int `pulumi:"familyCount"`
	// Whether the backup set is compressed
	IsCompressed bool `pulumi:"isCompressed"`
	// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
	IsDamaged bool `pulumi:"isDamaged"`
	// Position of current database backup in the file.
	Position int `pulumi:"position"`
}

// DatabaseBackupInfoInvokeResponseInput is an input type that accepts DatabaseBackupInfoInvokeResponseArgs and DatabaseBackupInfoInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupInfoInvokeResponseInput` via:
//
//          DatabaseBackupInfoInvokeResponseArgs{...}
type DatabaseBackupInfoInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseBackupInfoInvokeResponseOutput() DatabaseBackupInfoInvokeResponseOutput
	ToDatabaseBackupInfoInvokeResponseOutputWithContext(context.Context) DatabaseBackupInfoInvokeResponseOutput
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoInvokeResponseArgs struct {
	// The list of backup files for the current database.
	BackupFiles pulumi.StringArrayInput `pulumi:"backupFiles"`
	// Date and time when the backup operation finished.
	BackupFinishDate pulumi.StringInput `pulumi:"backupFinishDate"`
	// Backup Type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Number of files in the backup set.
	FamilyCount pulumi.IntInput `pulumi:"familyCount"`
	// Whether the backup set is compressed
	IsCompressed pulumi.BoolInput `pulumi:"isCompressed"`
	// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
	IsDamaged pulumi.BoolInput `pulumi:"isDamaged"`
	// Position of current database backup in the file.
	Position pulumi.IntInput `pulumi:"position"`
}

func (DatabaseBackupInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoInvokeResponse)(nil)).Elem()
}

func (i DatabaseBackupInfoInvokeResponseArgs) ToDatabaseBackupInfoInvokeResponseOutput() DatabaseBackupInfoInvokeResponseOutput {
	return i.ToDatabaseBackupInfoInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoInvokeResponseArgs) ToDatabaseBackupInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoInvokeResponseOutput)
}

func (i DatabaseBackupInfoInvokeResponseArgs) ToDatabaseBackupInfoInvokeResponsePtrOutput() DatabaseBackupInfoInvokeResponsePtrOutput {
	return i.ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoInvokeResponseArgs) ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoInvokeResponseOutput).ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(ctx)
}

// DatabaseBackupInfoInvokeResponsePtrInput is an input type that accepts DatabaseBackupInfoInvokeResponseArgs, DatabaseBackupInfoInvokeResponsePtr and DatabaseBackupInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `DatabaseBackupInfoInvokeResponsePtrInput` via:
//
//          DatabaseBackupInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type DatabaseBackupInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToDatabaseBackupInfoInvokeResponsePtrOutput() DatabaseBackupInfoInvokeResponsePtrOutput
	ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(context.Context) DatabaseBackupInfoInvokeResponsePtrOutput
}

type databaseBackupInfoInvokeResponsePtrType DatabaseBackupInfoInvokeResponseArgs

func DatabaseBackupInfoInvokeResponsePtr(v *DatabaseBackupInfoInvokeResponseArgs) DatabaseBackupInfoInvokeResponsePtrInput {
	return (*databaseBackupInfoInvokeResponsePtrType)(v)
}

func (*databaseBackupInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoInvokeResponse)(nil)).Elem()
}

func (i *databaseBackupInfoInvokeResponsePtrType) ToDatabaseBackupInfoInvokeResponsePtrOutput() DatabaseBackupInfoInvokeResponsePtrOutput {
	return i.ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *databaseBackupInfoInvokeResponsePtrType) ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoInvokeResponsePtrOutput)
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoInvokeResponseOutput) ToDatabaseBackupInfoInvokeResponseOutput() DatabaseBackupInfoInvokeResponseOutput {
	return o
}

func (o DatabaseBackupInfoInvokeResponseOutput) ToDatabaseBackupInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponseOutput {
	return o
}

func (o DatabaseBackupInfoInvokeResponseOutput) ToDatabaseBackupInfoInvokeResponsePtrOutput() DatabaseBackupInfoInvokeResponsePtrOutput {
	return o.ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o DatabaseBackupInfoInvokeResponseOutput) ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) *DatabaseBackupInfoInvokeResponse {
		return &v
	}).(DatabaseBackupInfoInvokeResponsePtrOutput)
}

// The list of backup files for the current database.
func (o DatabaseBackupInfoInvokeResponseOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) []string { return v.BackupFiles }).(pulumi.StringArrayOutput)
}

// Date and time when the backup operation finished.
func (o DatabaseBackupInfoInvokeResponseOutput) BackupFinishDate() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) string { return v.BackupFinishDate }).(pulumi.StringOutput)
}

// Backup Type.
func (o DatabaseBackupInfoInvokeResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

// Database name.
func (o DatabaseBackupInfoInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Number of files in the backup set.
func (o DatabaseBackupInfoInvokeResponseOutput) FamilyCount() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) int { return v.FamilyCount }).(pulumi.IntOutput)
}

// Whether the backup set is compressed
func (o DatabaseBackupInfoInvokeResponseOutput) IsCompressed() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) bool { return v.IsCompressed }).(pulumi.BoolOutput)
}

// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
func (o DatabaseBackupInfoInvokeResponseOutput) IsDamaged() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) bool { return v.IsDamaged }).(pulumi.BoolOutput)
}

// Position of current database backup in the file.
func (o DatabaseBackupInfoInvokeResponseOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoInvokeResponse) int { return v.Position }).(pulumi.IntOutput)
}

type DatabaseBackupInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoInvokeResponsePtrOutput) ToDatabaseBackupInfoInvokeResponsePtrOutput() DatabaseBackupInfoInvokeResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoInvokeResponsePtrOutput) ToDatabaseBackupInfoInvokeResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoInvokeResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoInvokeResponsePtrOutput) Elem() DatabaseBackupInfoInvokeResponseOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) DatabaseBackupInfoInvokeResponse { return *v }).(DatabaseBackupInfoInvokeResponseOutput)
}

// The list of backup files for the current database.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupFiles
	}).(pulumi.StringArrayOutput)
}

// Date and time when the backup operation finished.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) BackupFinishDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupFinishDate
	}).(pulumi.StringPtrOutput)
}

// Backup Type.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// Database name.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Number of files in the backup set.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) FamilyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FamilyCount
	}).(pulumi.IntPtrOutput)
}

// Whether the backup set is compressed
func (o DatabaseBackupInfoInvokeResponsePtrOutput) IsCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsCompressed
	}).(pulumi.BoolPtrOutput)
}

// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) IsDamaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDamaged
	}).(pulumi.BoolPtrOutput)
}

// Position of current database backup in the file.
func (o DatabaseBackupInfoInvokeResponsePtrOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.IntPtrOutput)
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoResponse struct {
	// The list of backup files for the current database.
	BackupFiles []string `pulumi:"backupFiles"`
	// Date and time when the backup operation finished.
	BackupFinishDate string `pulumi:"backupFinishDate"`
	// Backup Type.
	BackupType string `pulumi:"backupType"`
	// Database name.
	DatabaseName string `pulumi:"databaseName"`
	// Number of files in the backup set.
	FamilyCount int `pulumi:"familyCount"`
	// Whether the backup set is compressed
	IsCompressed bool `pulumi:"isCompressed"`
	// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
	IsDamaged bool `pulumi:"isDamaged"`
	// Position of current database backup in the file.
	Position int `pulumi:"position"`
}

// DatabaseBackupInfoResponseInput is an input type that accepts DatabaseBackupInfoResponseArgs and DatabaseBackupInfoResponseOutput values.
// You can construct a concrete instance of `DatabaseBackupInfoResponseInput` via:
//
//          DatabaseBackupInfoResponseArgs{...}
type DatabaseBackupInfoResponseInput interface {
	pulumi.Input

	ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput
	ToDatabaseBackupInfoResponseOutputWithContext(context.Context) DatabaseBackupInfoResponseOutput
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoResponseArgs struct {
	// The list of backup files for the current database.
	BackupFiles pulumi.StringArrayInput `pulumi:"backupFiles"`
	// Date and time when the backup operation finished.
	BackupFinishDate pulumi.StringInput `pulumi:"backupFinishDate"`
	// Backup Type.
	BackupType pulumi.StringInput `pulumi:"backupType"`
	// Database name.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Number of files in the backup set.
	FamilyCount pulumi.IntInput `pulumi:"familyCount"`
	// Whether the backup set is compressed
	IsCompressed pulumi.BoolInput `pulumi:"isCompressed"`
	// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
	IsDamaged pulumi.BoolInput `pulumi:"isDamaged"`
	// Position of current database backup in the file.
	Position pulumi.IntInput `pulumi:"position"`
}

func (DatabaseBackupInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoResponse)(nil)).Elem()
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput {
	return i.ToDatabaseBackupInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponseOutput)
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return i.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (i DatabaseBackupInfoResponseArgs) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponseOutput).ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx)
}

// DatabaseBackupInfoResponsePtrInput is an input type that accepts DatabaseBackupInfoResponseArgs, DatabaseBackupInfoResponsePtr and DatabaseBackupInfoResponsePtrOutput values.
// You can construct a concrete instance of `DatabaseBackupInfoResponsePtrInput` via:
//
//          DatabaseBackupInfoResponseArgs{...}
//
//  or:
//
//          nil
type DatabaseBackupInfoResponsePtrInput interface {
	pulumi.Input

	ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput
	ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Context) DatabaseBackupInfoResponsePtrOutput
}

type databaseBackupInfoResponsePtrType DatabaseBackupInfoResponseArgs

func DatabaseBackupInfoResponsePtr(v *DatabaseBackupInfoResponseArgs) DatabaseBackupInfoResponsePtrInput {
	return (*databaseBackupInfoResponsePtrType)(v)
}

func (*databaseBackupInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoResponse)(nil)).Elem()
}

func (i *databaseBackupInfoResponsePtrType) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return i.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (i *databaseBackupInfoResponsePtrType) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupInfoResponsePtrOutput)
}

// Information about backup files when existing backup mode is used.
type DatabaseBackupInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupInfoResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponseOutput() DatabaseBackupInfoResponseOutput {
	return o
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponseOutputWithContext(ctx context.Context) DatabaseBackupInfoResponseOutput {
	return o
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return o.ToDatabaseBackupInfoResponsePtrOutputWithContext(context.Background())
}

func (o DatabaseBackupInfoResponseOutput) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) *DatabaseBackupInfoResponse {
		return &v
	}).(DatabaseBackupInfoResponsePtrOutput)
}

// The list of backup files for the current database.
func (o DatabaseBackupInfoResponseOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) []string { return v.BackupFiles }).(pulumi.StringArrayOutput)
}

// Date and time when the backup operation finished.
func (o DatabaseBackupInfoResponseOutput) BackupFinishDate() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.BackupFinishDate }).(pulumi.StringOutput)
}

// Backup Type.
func (o DatabaseBackupInfoResponseOutput) BackupType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.BackupType }).(pulumi.StringOutput)
}

// Database name.
func (o DatabaseBackupInfoResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Number of files in the backup set.
func (o DatabaseBackupInfoResponseOutput) FamilyCount() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) int { return v.FamilyCount }).(pulumi.IntOutput)
}

// Whether the backup set is compressed
func (o DatabaseBackupInfoResponseOutput) IsCompressed() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) bool { return v.IsCompressed }).(pulumi.BoolOutput)
}

// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
func (o DatabaseBackupInfoResponseOutput) IsDamaged() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) bool { return v.IsDamaged }).(pulumi.BoolOutput)
}

// Position of current database backup in the file.
func (o DatabaseBackupInfoResponseOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v DatabaseBackupInfoResponse) int { return v.Position }).(pulumi.IntOutput)
}

type DatabaseBackupInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (DatabaseBackupInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackupInfoResponse)(nil)).Elem()
}

func (o DatabaseBackupInfoResponsePtrOutput) ToDatabaseBackupInfoResponsePtrOutput() DatabaseBackupInfoResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoResponsePtrOutput) ToDatabaseBackupInfoResponsePtrOutputWithContext(ctx context.Context) DatabaseBackupInfoResponsePtrOutput {
	return o
}

func (o DatabaseBackupInfoResponsePtrOutput) Elem() DatabaseBackupInfoResponseOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) DatabaseBackupInfoResponse { return *v }).(DatabaseBackupInfoResponseOutput)
}

// The list of backup files for the current database.
func (o DatabaseBackupInfoResponsePtrOutput) BackupFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) []string {
		if v == nil {
			return nil
		}
		return v.BackupFiles
	}).(pulumi.StringArrayOutput)
}

// Date and time when the backup operation finished.
func (o DatabaseBackupInfoResponsePtrOutput) BackupFinishDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupFinishDate
	}).(pulumi.StringPtrOutput)
}

// Backup Type.
func (o DatabaseBackupInfoResponsePtrOutput) BackupType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.BackupType
	}).(pulumi.StringPtrOutput)
}

// Database name.
func (o DatabaseBackupInfoResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Number of files in the backup set.
func (o DatabaseBackupInfoResponsePtrOutput) FamilyCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FamilyCount
	}).(pulumi.IntPtrOutput)
}

// Whether the backup set is compressed
func (o DatabaseBackupInfoResponsePtrOutput) IsCompressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsCompressed
	}).(pulumi.BoolPtrOutput)
}

// Database was damaged when backed up, but the backup operation was requested to continue despite errors.
func (o DatabaseBackupInfoResponsePtrOutput) IsDamaged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsDamaged
	}).(pulumi.BoolPtrOutput)
}

// Position of current database backup in the file.
func (o DatabaseBackupInfoResponsePtrOutput) Position() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseBackupInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.IntPtrOutput)
}

// Database file specific information
type DatabaseFileInfoInvokeResponse struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// Database file type
	FileType *string `pulumi:"fileType"`
	// Unique identifier for database file
	Id *string `pulumi:"id"`
	// Logical name of the file
	LogicalName *string `pulumi:"logicalName"`
	// Operating-system full path of the file
	PhysicalFullName *string `pulumi:"physicalFullName"`
	// Suggested full path of the file for restoring
	RestoreFullName *string `pulumi:"restoreFullName"`
	// Size of the file in megabytes
	SizeMB *float64 `pulumi:"sizeMB"`
}

// DatabaseFileInfoInvokeResponseInput is an input type that accepts DatabaseFileInfoInvokeResponseArgs and DatabaseFileInfoInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseFileInfoInvokeResponseInput` via:
//
//          DatabaseFileInfoInvokeResponseArgs{...}
type DatabaseFileInfoInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseFileInfoInvokeResponseOutput() DatabaseFileInfoInvokeResponseOutput
	ToDatabaseFileInfoInvokeResponseOutputWithContext(context.Context) DatabaseFileInfoInvokeResponseOutput
}

// Database file specific information
type DatabaseFileInfoInvokeResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Database file type
	FileType pulumi.StringPtrInput `pulumi:"fileType"`
	// Unique identifier for database file
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Logical name of the file
	LogicalName pulumi.StringPtrInput `pulumi:"logicalName"`
	// Operating-system full path of the file
	PhysicalFullName pulumi.StringPtrInput `pulumi:"physicalFullName"`
	// Suggested full path of the file for restoring
	RestoreFullName pulumi.StringPtrInput `pulumi:"restoreFullName"`
	// Size of the file in megabytes
	SizeMB pulumi.Float64PtrInput `pulumi:"sizeMB"`
}

func (DatabaseFileInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoInvokeResponse)(nil)).Elem()
}

func (i DatabaseFileInfoInvokeResponseArgs) ToDatabaseFileInfoInvokeResponseOutput() DatabaseFileInfoInvokeResponseOutput {
	return i.ToDatabaseFileInfoInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseFileInfoInvokeResponseArgs) ToDatabaseFileInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseFileInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoInvokeResponseOutput)
}

// DatabaseFileInfoInvokeResponseArrayInput is an input type that accepts DatabaseFileInfoInvokeResponseArray and DatabaseFileInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseFileInfoInvokeResponseArrayInput` via:
//
//          DatabaseFileInfoInvokeResponseArray{ DatabaseFileInfoInvokeResponseArgs{...} }
type DatabaseFileInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatabaseFileInfoInvokeResponseArrayOutput() DatabaseFileInfoInvokeResponseArrayOutput
	ToDatabaseFileInfoInvokeResponseArrayOutputWithContext(context.Context) DatabaseFileInfoInvokeResponseArrayOutput
}

type DatabaseFileInfoInvokeResponseArray []DatabaseFileInfoInvokeResponseInput

func (DatabaseFileInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoInvokeResponse)(nil)).Elem()
}

func (i DatabaseFileInfoInvokeResponseArray) ToDatabaseFileInfoInvokeResponseArrayOutput() DatabaseFileInfoInvokeResponseArrayOutput {
	return i.ToDatabaseFileInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseFileInfoInvokeResponseArray) ToDatabaseFileInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoInvokeResponseArrayOutput)
}

// Database file specific information
type DatabaseFileInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseFileInfoInvokeResponseOutput) ToDatabaseFileInfoInvokeResponseOutput() DatabaseFileInfoInvokeResponseOutput {
	return o
}

func (o DatabaseFileInfoInvokeResponseOutput) ToDatabaseFileInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseFileInfoInvokeResponseOutput {
	return o
}

// Name of the database
func (o DatabaseFileInfoInvokeResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Database file type
func (o DatabaseFileInfoInvokeResponseOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

// Unique identifier for database file
func (o DatabaseFileInfoInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Logical name of the file
func (o DatabaseFileInfoInvokeResponseOutput) LogicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.LogicalName }).(pulumi.StringPtrOutput)
}

// Operating-system full path of the file
func (o DatabaseFileInfoInvokeResponseOutput) PhysicalFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.PhysicalFullName }).(pulumi.StringPtrOutput)
}

// Suggested full path of the file for restoring
func (o DatabaseFileInfoInvokeResponseOutput) RestoreFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *string { return v.RestoreFullName }).(pulumi.StringPtrOutput)
}

// Size of the file in megabytes
func (o DatabaseFileInfoInvokeResponseOutput) SizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoInvokeResponse) *float64 { return v.SizeMB }).(pulumi.Float64PtrOutput)
}

type DatabaseFileInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseFileInfoInvokeResponseArrayOutput) ToDatabaseFileInfoInvokeResponseArrayOutput() DatabaseFileInfoInvokeResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoInvokeResponseArrayOutput) ToDatabaseFileInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoInvokeResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatabaseFileInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseFileInfoInvokeResponse {
		return vs[0].([]DatabaseFileInfoInvokeResponse)[vs[1].(int)]
	}).(DatabaseFileInfoInvokeResponseOutput)
}

// Database file specific information
type DatabaseFileInfoResponse struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// Database file type
	FileType *string `pulumi:"fileType"`
	// Unique identifier for database file
	Id *string `pulumi:"id"`
	// Logical name of the file
	LogicalName *string `pulumi:"logicalName"`
	// Operating-system full path of the file
	PhysicalFullName *string `pulumi:"physicalFullName"`
	// Suggested full path of the file for restoring
	RestoreFullName *string `pulumi:"restoreFullName"`
	// Size of the file in megabytes
	SizeMB *float64 `pulumi:"sizeMB"`
}

// DatabaseFileInfoResponseInput is an input type that accepts DatabaseFileInfoResponseArgs and DatabaseFileInfoResponseOutput values.
// You can construct a concrete instance of `DatabaseFileInfoResponseInput` via:
//
//          DatabaseFileInfoResponseArgs{...}
type DatabaseFileInfoResponseInput interface {
	pulumi.Input

	ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput
	ToDatabaseFileInfoResponseOutputWithContext(context.Context) DatabaseFileInfoResponseOutput
}

// Database file specific information
type DatabaseFileInfoResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Database file type
	FileType pulumi.StringPtrInput `pulumi:"fileType"`
	// Unique identifier for database file
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Logical name of the file
	LogicalName pulumi.StringPtrInput `pulumi:"logicalName"`
	// Operating-system full path of the file
	PhysicalFullName pulumi.StringPtrInput `pulumi:"physicalFullName"`
	// Suggested full path of the file for restoring
	RestoreFullName pulumi.StringPtrInput `pulumi:"restoreFullName"`
	// Size of the file in megabytes
	SizeMB pulumi.Float64PtrInput `pulumi:"sizeMB"`
}

func (DatabaseFileInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoResponse)(nil)).Elem()
}

func (i DatabaseFileInfoResponseArgs) ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput {
	return i.ToDatabaseFileInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseFileInfoResponseArgs) ToDatabaseFileInfoResponseOutputWithContext(ctx context.Context) DatabaseFileInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoResponseOutput)
}

// DatabaseFileInfoResponseArrayInput is an input type that accepts DatabaseFileInfoResponseArray and DatabaseFileInfoResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseFileInfoResponseArrayInput` via:
//
//          DatabaseFileInfoResponseArray{ DatabaseFileInfoResponseArgs{...} }
type DatabaseFileInfoResponseArrayInput interface {
	pulumi.Input

	ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput
	ToDatabaseFileInfoResponseArrayOutputWithContext(context.Context) DatabaseFileInfoResponseArrayOutput
}

type DatabaseFileInfoResponseArray []DatabaseFileInfoResponseInput

func (DatabaseFileInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoResponse)(nil)).Elem()
}

func (i DatabaseFileInfoResponseArray) ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput {
	return i.ToDatabaseFileInfoResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseFileInfoResponseArray) ToDatabaseFileInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFileInfoResponseArrayOutput)
}

// Database file specific information
type DatabaseFileInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFileInfoResponse)(nil)).Elem()
}

func (o DatabaseFileInfoResponseOutput) ToDatabaseFileInfoResponseOutput() DatabaseFileInfoResponseOutput {
	return o
}

func (o DatabaseFileInfoResponseOutput) ToDatabaseFileInfoResponseOutputWithContext(ctx context.Context) DatabaseFileInfoResponseOutput {
	return o
}

// Name of the database
func (o DatabaseFileInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Database file type
func (o DatabaseFileInfoResponseOutput) FileType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.FileType }).(pulumi.StringPtrOutput)
}

// Unique identifier for database file
func (o DatabaseFileInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Logical name of the file
func (o DatabaseFileInfoResponseOutput) LogicalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.LogicalName }).(pulumi.StringPtrOutput)
}

// Operating-system full path of the file
func (o DatabaseFileInfoResponseOutput) PhysicalFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.PhysicalFullName }).(pulumi.StringPtrOutput)
}

// Suggested full path of the file for restoring
func (o DatabaseFileInfoResponseOutput) RestoreFullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *string { return v.RestoreFullName }).(pulumi.StringPtrOutput)
}

// Size of the file in megabytes
func (o DatabaseFileInfoResponseOutput) SizeMB() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseFileInfoResponse) *float64 { return v.SizeMB }).(pulumi.Float64PtrOutput)
}

type DatabaseFileInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseFileInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFileInfoResponse)(nil)).Elem()
}

func (o DatabaseFileInfoResponseArrayOutput) ToDatabaseFileInfoResponseArrayOutput() DatabaseFileInfoResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoResponseArrayOutput) ToDatabaseFileInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseFileInfoResponseArrayOutput {
	return o
}

func (o DatabaseFileInfoResponseArrayOutput) Index(i pulumi.IntInput) DatabaseFileInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseFileInfoResponse {
		return vs[0].([]DatabaseFileInfoResponse)[vs[1].(int)]
	}).(DatabaseFileInfoResponseOutput)
}

// Project Database Details
type DatabaseInfo struct {
	// Name of the database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}

// DatabaseInfoInput is an input type that accepts DatabaseInfoArgs and DatabaseInfoOutput values.
// You can construct a concrete instance of `DatabaseInfoInput` via:
//
//          DatabaseInfoArgs{...}
type DatabaseInfoInput interface {
	pulumi.Input

	ToDatabaseInfoOutput() DatabaseInfoOutput
	ToDatabaseInfoOutputWithContext(context.Context) DatabaseInfoOutput
}

// Project Database Details
type DatabaseInfoArgs struct {
	// Name of the database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (DatabaseInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfo)(nil)).Elem()
}

func (i DatabaseInfoArgs) ToDatabaseInfoOutput() DatabaseInfoOutput {
	return i.ToDatabaseInfoOutputWithContext(context.Background())
}

func (i DatabaseInfoArgs) ToDatabaseInfoOutputWithContext(ctx context.Context) DatabaseInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoOutput)
}

// DatabaseInfoArrayInput is an input type that accepts DatabaseInfoArray and DatabaseInfoArrayOutput values.
// You can construct a concrete instance of `DatabaseInfoArrayInput` via:
//
//          DatabaseInfoArray{ DatabaseInfoArgs{...} }
type DatabaseInfoArrayInput interface {
	pulumi.Input

	ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput
	ToDatabaseInfoArrayOutputWithContext(context.Context) DatabaseInfoArrayOutput
}

type DatabaseInfoArray []DatabaseInfoInput

func (DatabaseInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfo)(nil)).Elem()
}

func (i DatabaseInfoArray) ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput {
	return i.ToDatabaseInfoArrayOutputWithContext(context.Background())
}

func (i DatabaseInfoArray) ToDatabaseInfoArrayOutputWithContext(ctx context.Context) DatabaseInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoArrayOutput)
}

// Project Database Details
type DatabaseInfoOutput struct{ *pulumi.OutputState }

func (DatabaseInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfo)(nil)).Elem()
}

func (o DatabaseInfoOutput) ToDatabaseInfoOutput() DatabaseInfoOutput {
	return o
}

func (o DatabaseInfoOutput) ToDatabaseInfoOutputWithContext(ctx context.Context) DatabaseInfoOutput {
	return o
}

// Name of the database
func (o DatabaseInfoOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInfo) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type DatabaseInfoArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfo)(nil)).Elem()
}

func (o DatabaseInfoArrayOutput) ToDatabaseInfoArrayOutput() DatabaseInfoArrayOutput {
	return o
}

func (o DatabaseInfoArrayOutput) ToDatabaseInfoArrayOutputWithContext(ctx context.Context) DatabaseInfoArrayOutput {
	return o
}

func (o DatabaseInfoArrayOutput) Index(i pulumi.IntInput) DatabaseInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInfo {
		return vs[0].([]DatabaseInfo)[vs[1].(int)]
	}).(DatabaseInfoOutput)
}

// Project Database Details
type DatabaseInfoInvokeResponse struct {
	// Name of the database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}

// DatabaseInfoInvokeResponseInput is an input type that accepts DatabaseInfoInvokeResponseArgs and DatabaseInfoInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseInfoInvokeResponseInput` via:
//
//          DatabaseInfoInvokeResponseArgs{...}
type DatabaseInfoInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseInfoInvokeResponseOutput() DatabaseInfoInvokeResponseOutput
	ToDatabaseInfoInvokeResponseOutputWithContext(context.Context) DatabaseInfoInvokeResponseOutput
}

// Project Database Details
type DatabaseInfoInvokeResponseArgs struct {
	// Name of the database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (DatabaseInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoInvokeResponse)(nil)).Elem()
}

func (i DatabaseInfoInvokeResponseArgs) ToDatabaseInfoInvokeResponseOutput() DatabaseInfoInvokeResponseOutput {
	return i.ToDatabaseInfoInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseInfoInvokeResponseArgs) ToDatabaseInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoInvokeResponseOutput)
}

// DatabaseInfoInvokeResponseArrayInput is an input type that accepts DatabaseInfoInvokeResponseArray and DatabaseInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseInfoInvokeResponseArrayInput` via:
//
//          DatabaseInfoInvokeResponseArray{ DatabaseInfoInvokeResponseArgs{...} }
type DatabaseInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatabaseInfoInvokeResponseArrayOutput() DatabaseInfoInvokeResponseArrayOutput
	ToDatabaseInfoInvokeResponseArrayOutputWithContext(context.Context) DatabaseInfoInvokeResponseArrayOutput
}

type DatabaseInfoInvokeResponseArray []DatabaseInfoInvokeResponseInput

func (DatabaseInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoInvokeResponse)(nil)).Elem()
}

func (i DatabaseInfoInvokeResponseArray) ToDatabaseInfoInvokeResponseArrayOutput() DatabaseInfoInvokeResponseArrayOutput {
	return i.ToDatabaseInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseInfoInvokeResponseArray) ToDatabaseInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoInvokeResponseArrayOutput)
}

// Project Database Details
type DatabaseInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseInfoInvokeResponseOutput) ToDatabaseInfoInvokeResponseOutput() DatabaseInfoInvokeResponseOutput {
	return o
}

func (o DatabaseInfoInvokeResponseOutput) ToDatabaseInfoInvokeResponseOutputWithContext(ctx context.Context) DatabaseInfoInvokeResponseOutput {
	return o
}

// Name of the database
func (o DatabaseInfoInvokeResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInfoInvokeResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type DatabaseInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoInvokeResponse)(nil)).Elem()
}

func (o DatabaseInfoInvokeResponseArrayOutput) ToDatabaseInfoInvokeResponseArrayOutput() DatabaseInfoInvokeResponseArrayOutput {
	return o
}

func (o DatabaseInfoInvokeResponseArrayOutput) ToDatabaseInfoInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoInvokeResponseArrayOutput {
	return o
}

func (o DatabaseInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatabaseInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInfoInvokeResponse {
		return vs[0].([]DatabaseInfoInvokeResponse)[vs[1].(int)]
	}).(DatabaseInfoInvokeResponseOutput)
}

// Project Database Details
type DatabaseInfoResponse struct {
	// Name of the database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}

// DatabaseInfoResponseInput is an input type that accepts DatabaseInfoResponseArgs and DatabaseInfoResponseOutput values.
// You can construct a concrete instance of `DatabaseInfoResponseInput` via:
//
//          DatabaseInfoResponseArgs{...}
type DatabaseInfoResponseInput interface {
	pulumi.Input

	ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput
	ToDatabaseInfoResponseOutputWithContext(context.Context) DatabaseInfoResponseOutput
}

// Project Database Details
type DatabaseInfoResponseArgs struct {
	// Name of the database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (DatabaseInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoResponse)(nil)).Elem()
}

func (i DatabaseInfoResponseArgs) ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput {
	return i.ToDatabaseInfoResponseOutputWithContext(context.Background())
}

func (i DatabaseInfoResponseArgs) ToDatabaseInfoResponseOutputWithContext(ctx context.Context) DatabaseInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoResponseOutput)
}

// DatabaseInfoResponseArrayInput is an input type that accepts DatabaseInfoResponseArray and DatabaseInfoResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseInfoResponseArrayInput` via:
//
//          DatabaseInfoResponseArray{ DatabaseInfoResponseArgs{...} }
type DatabaseInfoResponseArrayInput interface {
	pulumi.Input

	ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput
	ToDatabaseInfoResponseArrayOutputWithContext(context.Context) DatabaseInfoResponseArrayOutput
}

type DatabaseInfoResponseArray []DatabaseInfoResponseInput

func (DatabaseInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoResponse)(nil)).Elem()
}

func (i DatabaseInfoResponseArray) ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput {
	return i.ToDatabaseInfoResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseInfoResponseArray) ToDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInfoResponseArrayOutput)
}

// Project Database Details
type DatabaseInfoResponseOutput struct{ *pulumi.OutputState }

func (DatabaseInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInfoResponse)(nil)).Elem()
}

func (o DatabaseInfoResponseOutput) ToDatabaseInfoResponseOutput() DatabaseInfoResponseOutput {
	return o
}

func (o DatabaseInfoResponseOutput) ToDatabaseInfoResponseOutputWithContext(ctx context.Context) DatabaseInfoResponseOutput {
	return o
}

// Name of the database
func (o DatabaseInfoResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInfoResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type DatabaseInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInfoResponse)(nil)).Elem()
}

func (o DatabaseInfoResponseArrayOutput) ToDatabaseInfoResponseArrayOutput() DatabaseInfoResponseArrayOutput {
	return o
}

func (o DatabaseInfoResponseArrayOutput) ToDatabaseInfoResponseArrayOutputWithContext(ctx context.Context) DatabaseInfoResponseArrayOutput {
	return o
}

func (o DatabaseInfoResponseArrayOutput) Index(i pulumi.IntInput) DatabaseInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInfoResponse {
		return vs[0].([]DatabaseInfoResponse)[vs[1].(int)]
	}).(DatabaseInfoResponseOutput)
}

// Summary of database results in the migration
type DatabaseSummaryResultInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	Name string `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Size of the database in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// DatabaseSummaryResultInvokeResponseInput is an input type that accepts DatabaseSummaryResultInvokeResponseArgs and DatabaseSummaryResultInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseSummaryResultInvokeResponseInput` via:
//
//          DatabaseSummaryResultInvokeResponseArgs{...}
type DatabaseSummaryResultInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseSummaryResultInvokeResponseOutput() DatabaseSummaryResultInvokeResponseOutput
	ToDatabaseSummaryResultInvokeResponseOutputWithContext(context.Context) DatabaseSummaryResultInvokeResponseOutput
}

// Summary of database results in the migration
type DatabaseSummaryResultInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Size of the database in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (DatabaseSummaryResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultInvokeResponseArgs) ToDatabaseSummaryResultInvokeResponseOutput() DatabaseSummaryResultInvokeResponseOutput {
	return i.ToDatabaseSummaryResultInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultInvokeResponseArgs) ToDatabaseSummaryResultInvokeResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultInvokeResponseOutput)
}

// DatabaseSummaryResultInvokeResponseMapInput is an input type that accepts DatabaseSummaryResultInvokeResponseMap and DatabaseSummaryResultInvokeResponseMapOutput values.
// You can construct a concrete instance of `DatabaseSummaryResultInvokeResponseMapInput` via:
//
//          DatabaseSummaryResultInvokeResponseMap{ "key": DatabaseSummaryResultInvokeResponseArgs{...} }
type DatabaseSummaryResultInvokeResponseMapInput interface {
	pulumi.Input

	ToDatabaseSummaryResultInvokeResponseMapOutput() DatabaseSummaryResultInvokeResponseMapOutput
	ToDatabaseSummaryResultInvokeResponseMapOutputWithContext(context.Context) DatabaseSummaryResultInvokeResponseMapOutput
}

type DatabaseSummaryResultInvokeResponseMap map[string]DatabaseSummaryResultInvokeResponseInput

func (DatabaseSummaryResultInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultInvokeResponseMap) ToDatabaseSummaryResultInvokeResponseMapOutput() DatabaseSummaryResultInvokeResponseMapOutput {
	return i.ToDatabaseSummaryResultInvokeResponseMapOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultInvokeResponseMap) ToDatabaseSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultInvokeResponseMapOutput)
}

// Summary of database results in the migration
type DatabaseSummaryResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultInvokeResponseOutput) ToDatabaseSummaryResultInvokeResponseOutput() DatabaseSummaryResultInvokeResponseOutput {
	return o
}

func (o DatabaseSummaryResultInvokeResponseOutput) ToDatabaseSummaryResultInvokeResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultInvokeResponseOutput {
	return o
}

// Migration end time
func (o DatabaseSummaryResultInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o DatabaseSummaryResultInvokeResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o DatabaseSummaryResultInvokeResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o DatabaseSummaryResultInvokeResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o DatabaseSummaryResultInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o DatabaseSummaryResultInvokeResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Size of the database in megabytes
func (o DatabaseSummaryResultInvokeResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Migration start time
func (o DatabaseSummaryResultInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o DatabaseSummaryResultInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o DatabaseSummaryResultInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DatabaseSummaryResultInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultInvokeResponseMapOutput) ToDatabaseSummaryResultInvokeResponseMapOutput() DatabaseSummaryResultInvokeResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultInvokeResponseMapOutput) ToDatabaseSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultInvokeResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) DatabaseSummaryResultInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseSummaryResultInvokeResponse {
		return vs[0].(map[string]DatabaseSummaryResultInvokeResponse)[vs[1].(string)]
	}).(DatabaseSummaryResultInvokeResponseOutput)
}

// Summary of database results in the migration
type DatabaseSummaryResultResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	Name string `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Size of the database in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// DatabaseSummaryResultResponseInput is an input type that accepts DatabaseSummaryResultResponseArgs and DatabaseSummaryResultResponseOutput values.
// You can construct a concrete instance of `DatabaseSummaryResultResponseInput` via:
//
//          DatabaseSummaryResultResponseArgs{...}
type DatabaseSummaryResultResponseInput interface {
	pulumi.Input

	ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput
	ToDatabaseSummaryResultResponseOutputWithContext(context.Context) DatabaseSummaryResultResponseOutput
}

// Summary of database results in the migration
type DatabaseSummaryResultResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Size of the database in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (DatabaseSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultResponseArgs) ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput {
	return i.ToDatabaseSummaryResultResponseOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultResponseArgs) ToDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultResponseOutput)
}

// DatabaseSummaryResultResponseMapInput is an input type that accepts DatabaseSummaryResultResponseMap and DatabaseSummaryResultResponseMapOutput values.
// You can construct a concrete instance of `DatabaseSummaryResultResponseMapInput` via:
//
//          DatabaseSummaryResultResponseMap{ "key": DatabaseSummaryResultResponseArgs{...} }
type DatabaseSummaryResultResponseMapInput interface {
	pulumi.Input

	ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput
	ToDatabaseSummaryResultResponseMapOutputWithContext(context.Context) DatabaseSummaryResultResponseMapOutput
}

type DatabaseSummaryResultResponseMap map[string]DatabaseSummaryResultResponseInput

func (DatabaseSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultResponse)(nil)).Elem()
}

func (i DatabaseSummaryResultResponseMap) ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput {
	return i.ToDatabaseSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i DatabaseSummaryResultResponseMap) ToDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseSummaryResultResponseMapOutput)
}

// Summary of database results in the migration
type DatabaseSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseSummaryResultResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultResponseOutput) ToDatabaseSummaryResultResponseOutput() DatabaseSummaryResultResponseOutput {
	return o
}

func (o DatabaseSummaryResultResponseOutput) ToDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseOutput {
	return o
}

// Migration end time
func (o DatabaseSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o DatabaseSummaryResultResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o DatabaseSummaryResultResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o DatabaseSummaryResultResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o DatabaseSummaryResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o DatabaseSummaryResultResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Size of the database in megabytes
func (o DatabaseSummaryResultResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Migration start time
func (o DatabaseSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o DatabaseSummaryResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o DatabaseSummaryResultResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseSummaryResultResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type DatabaseSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (DatabaseSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DatabaseSummaryResultResponse)(nil)).Elem()
}

func (o DatabaseSummaryResultResponseMapOutput) ToDatabaseSummaryResultResponseMapOutput() DatabaseSummaryResultResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultResponseMapOutput) ToDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) DatabaseSummaryResultResponseMapOutput {
	return o
}

func (o DatabaseSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) DatabaseSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DatabaseSummaryResultResponse {
		return vs[0].(map[string]DatabaseSummaryResultResponse)[vs[1].(string)]
	}).(DatabaseSummaryResultResponseOutput)
}

// Table properties
type DatabaseTableInvokeResponse struct {
	// Indicates whether table is empty or not
	HasRows bool `pulumi:"hasRows"`
	// Schema-qualified name of the table
	Name string `pulumi:"name"`
}

// DatabaseTableInvokeResponseInput is an input type that accepts DatabaseTableInvokeResponseArgs and DatabaseTableInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseTableInvokeResponseInput` via:
//
//          DatabaseTableInvokeResponseArgs{...}
type DatabaseTableInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseTableInvokeResponseOutput() DatabaseTableInvokeResponseOutput
	ToDatabaseTableInvokeResponseOutputWithContext(context.Context) DatabaseTableInvokeResponseOutput
}

// Table properties
type DatabaseTableInvokeResponseArgs struct {
	// Indicates whether table is empty or not
	HasRows pulumi.BoolInput `pulumi:"hasRows"`
	// Schema-qualified name of the table
	Name pulumi.StringInput `pulumi:"name"`
}

func (DatabaseTableInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableInvokeResponse)(nil)).Elem()
}

func (i DatabaseTableInvokeResponseArgs) ToDatabaseTableInvokeResponseOutput() DatabaseTableInvokeResponseOutput {
	return i.ToDatabaseTableInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseTableInvokeResponseArgs) ToDatabaseTableInvokeResponseOutputWithContext(ctx context.Context) DatabaseTableInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableInvokeResponseOutput)
}

// DatabaseTableInvokeResponseArrayInput is an input type that accepts DatabaseTableInvokeResponseArray and DatabaseTableInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseTableInvokeResponseArrayInput` via:
//
//          DatabaseTableInvokeResponseArray{ DatabaseTableInvokeResponseArgs{...} }
type DatabaseTableInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatabaseTableInvokeResponseArrayOutput() DatabaseTableInvokeResponseArrayOutput
	ToDatabaseTableInvokeResponseArrayOutputWithContext(context.Context) DatabaseTableInvokeResponseArrayOutput
}

type DatabaseTableInvokeResponseArray []DatabaseTableInvokeResponseInput

func (DatabaseTableInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableInvokeResponse)(nil)).Elem()
}

func (i DatabaseTableInvokeResponseArray) ToDatabaseTableInvokeResponseArrayOutput() DatabaseTableInvokeResponseArrayOutput {
	return i.ToDatabaseTableInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseTableInvokeResponseArray) ToDatabaseTableInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseTableInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableInvokeResponseArrayOutput)
}

// Table properties
type DatabaseTableInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseTableInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableInvokeResponse)(nil)).Elem()
}

func (o DatabaseTableInvokeResponseOutput) ToDatabaseTableInvokeResponseOutput() DatabaseTableInvokeResponseOutput {
	return o
}

func (o DatabaseTableInvokeResponseOutput) ToDatabaseTableInvokeResponseOutputWithContext(ctx context.Context) DatabaseTableInvokeResponseOutput {
	return o
}

// Indicates whether table is empty or not
func (o DatabaseTableInvokeResponseOutput) HasRows() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseTableInvokeResponse) bool { return v.HasRows }).(pulumi.BoolOutput)
}

// Schema-qualified name of the table
func (o DatabaseTableInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseTableInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DatabaseTableInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseTableInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableInvokeResponse)(nil)).Elem()
}

func (o DatabaseTableInvokeResponseArrayOutput) ToDatabaseTableInvokeResponseArrayOutput() DatabaseTableInvokeResponseArrayOutput {
	return o
}

func (o DatabaseTableInvokeResponseArrayOutput) ToDatabaseTableInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseTableInvokeResponseArrayOutput {
	return o
}

func (o DatabaseTableInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatabaseTableInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseTableInvokeResponse {
		return vs[0].([]DatabaseTableInvokeResponse)[vs[1].(int)]
	}).(DatabaseTableInvokeResponseOutput)
}

// Table properties
type DatabaseTableResponse struct {
	// Indicates whether table is empty or not
	HasRows bool `pulumi:"hasRows"`
	// Schema-qualified name of the table
	Name string `pulumi:"name"`
}

// DatabaseTableResponseInput is an input type that accepts DatabaseTableResponseArgs and DatabaseTableResponseOutput values.
// You can construct a concrete instance of `DatabaseTableResponseInput` via:
//
//          DatabaseTableResponseArgs{...}
type DatabaseTableResponseInput interface {
	pulumi.Input

	ToDatabaseTableResponseOutput() DatabaseTableResponseOutput
	ToDatabaseTableResponseOutputWithContext(context.Context) DatabaseTableResponseOutput
}

// Table properties
type DatabaseTableResponseArgs struct {
	// Indicates whether table is empty or not
	HasRows pulumi.BoolInput `pulumi:"hasRows"`
	// Schema-qualified name of the table
	Name pulumi.StringInput `pulumi:"name"`
}

func (DatabaseTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableResponse)(nil)).Elem()
}

func (i DatabaseTableResponseArgs) ToDatabaseTableResponseOutput() DatabaseTableResponseOutput {
	return i.ToDatabaseTableResponseOutputWithContext(context.Background())
}

func (i DatabaseTableResponseArgs) ToDatabaseTableResponseOutputWithContext(ctx context.Context) DatabaseTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableResponseOutput)
}

// DatabaseTableResponseArrayInput is an input type that accepts DatabaseTableResponseArray and DatabaseTableResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseTableResponseArrayInput` via:
//
//          DatabaseTableResponseArray{ DatabaseTableResponseArgs{...} }
type DatabaseTableResponseArrayInput interface {
	pulumi.Input

	ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput
	ToDatabaseTableResponseArrayOutputWithContext(context.Context) DatabaseTableResponseArrayOutput
}

type DatabaseTableResponseArray []DatabaseTableResponseInput

func (DatabaseTableResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableResponse)(nil)).Elem()
}

func (i DatabaseTableResponseArray) ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput {
	return i.ToDatabaseTableResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseTableResponseArray) ToDatabaseTableResponseArrayOutputWithContext(ctx context.Context) DatabaseTableResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseTableResponseArrayOutput)
}

// Table properties
type DatabaseTableResponseOutput struct{ *pulumi.OutputState }

func (DatabaseTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseTableResponse)(nil)).Elem()
}

func (o DatabaseTableResponseOutput) ToDatabaseTableResponseOutput() DatabaseTableResponseOutput {
	return o
}

func (o DatabaseTableResponseOutput) ToDatabaseTableResponseOutputWithContext(ctx context.Context) DatabaseTableResponseOutput {
	return o
}

// Indicates whether table is empty or not
func (o DatabaseTableResponseOutput) HasRows() pulumi.BoolOutput {
	return o.ApplyT(func(v DatabaseTableResponse) bool { return v.HasRows }).(pulumi.BoolOutput)
}

// Schema-qualified name of the table
func (o DatabaseTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

type DatabaseTableResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseTableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseTableResponse)(nil)).Elem()
}

func (o DatabaseTableResponseArrayOutput) ToDatabaseTableResponseArrayOutput() DatabaseTableResponseArrayOutput {
	return o
}

func (o DatabaseTableResponseArrayOutput) ToDatabaseTableResponseArrayOutputWithContext(ctx context.Context) DatabaseTableResponseArrayOutput {
	return o
}

func (o DatabaseTableResponseArrayOutput) Index(i pulumi.IntInput) DatabaseTableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseTableResponse {
		return vs[0].([]DatabaseTableResponse)[vs[1].(int)]
	}).(DatabaseTableResponseOutput)
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsInvokeResponse struct {
	// CPU Time in millisecond(s) for the query execution
	CpuTimeMs float64 `pulumi:"cpuTimeMs"`
	// Time taken in millisecond(s) for executing the query
	ElapsedTimeMs float64 `pulumi:"elapsedTimeMs"`
	// No. of query executions
	ExecutionCount float64 `pulumi:"executionCount"`
	// Indicates whether the query resulted in an error
	HasErrors bool `pulumi:"hasErrors"`
	// List of sql Errors
	SqlErrors []string `pulumi:"sqlErrors"`
	// Dictionary of sql query execution wait types and the respective statistics
	WaitStats map[string]WaitStatisticsInvokeResponse `pulumi:"waitStats"`
}

// ExecutionStatisticsInvokeResponseInput is an input type that accepts ExecutionStatisticsInvokeResponseArgs and ExecutionStatisticsInvokeResponseOutput values.
// You can construct a concrete instance of `ExecutionStatisticsInvokeResponseInput` via:
//
//          ExecutionStatisticsInvokeResponseArgs{...}
type ExecutionStatisticsInvokeResponseInput interface {
	pulumi.Input

	ToExecutionStatisticsInvokeResponseOutput() ExecutionStatisticsInvokeResponseOutput
	ToExecutionStatisticsInvokeResponseOutputWithContext(context.Context) ExecutionStatisticsInvokeResponseOutput
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsInvokeResponseArgs struct {
	// CPU Time in millisecond(s) for the query execution
	CpuTimeMs pulumi.Float64Input `pulumi:"cpuTimeMs"`
	// Time taken in millisecond(s) for executing the query
	ElapsedTimeMs pulumi.Float64Input `pulumi:"elapsedTimeMs"`
	// No. of query executions
	ExecutionCount pulumi.Float64Input `pulumi:"executionCount"`
	// Indicates whether the query resulted in an error
	HasErrors pulumi.BoolInput `pulumi:"hasErrors"`
	// List of sql Errors
	SqlErrors pulumi.StringArrayInput `pulumi:"sqlErrors"`
	// Dictionary of sql query execution wait types and the respective statistics
	WaitStats WaitStatisticsInvokeResponseMapInput `pulumi:"waitStats"`
}

func (ExecutionStatisticsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionStatisticsInvokeResponse)(nil)).Elem()
}

func (i ExecutionStatisticsInvokeResponseArgs) ToExecutionStatisticsInvokeResponseOutput() ExecutionStatisticsInvokeResponseOutput {
	return i.ToExecutionStatisticsInvokeResponseOutputWithContext(context.Background())
}

func (i ExecutionStatisticsInvokeResponseArgs) ToExecutionStatisticsInvokeResponseOutputWithContext(ctx context.Context) ExecutionStatisticsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionStatisticsInvokeResponseOutput)
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExecutionStatisticsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionStatisticsInvokeResponse)(nil)).Elem()
}

func (o ExecutionStatisticsInvokeResponseOutput) ToExecutionStatisticsInvokeResponseOutput() ExecutionStatisticsInvokeResponseOutput {
	return o
}

func (o ExecutionStatisticsInvokeResponseOutput) ToExecutionStatisticsInvokeResponseOutputWithContext(ctx context.Context) ExecutionStatisticsInvokeResponseOutput {
	return o
}

// CPU Time in millisecond(s) for the query execution
func (o ExecutionStatisticsInvokeResponseOutput) CpuTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) float64 { return v.CpuTimeMs }).(pulumi.Float64Output)
}

// Time taken in millisecond(s) for executing the query
func (o ExecutionStatisticsInvokeResponseOutput) ElapsedTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) float64 { return v.ElapsedTimeMs }).(pulumi.Float64Output)
}

// No. of query executions
func (o ExecutionStatisticsInvokeResponseOutput) ExecutionCount() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) float64 { return v.ExecutionCount }).(pulumi.Float64Output)
}

// Indicates whether the query resulted in an error
func (o ExecutionStatisticsInvokeResponseOutput) HasErrors() pulumi.BoolOutput {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) bool { return v.HasErrors }).(pulumi.BoolOutput)
}

// List of sql Errors
func (o ExecutionStatisticsInvokeResponseOutput) SqlErrors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) []string { return v.SqlErrors }).(pulumi.StringArrayOutput)
}

// Dictionary of sql query execution wait types and the respective statistics
func (o ExecutionStatisticsInvokeResponseOutput) WaitStats() WaitStatisticsInvokeResponseMapOutput {
	return o.ApplyT(func(v ExecutionStatisticsInvokeResponse) map[string]WaitStatisticsInvokeResponse { return v.WaitStats }).(WaitStatisticsInvokeResponseMapOutput)
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsResponse struct {
	// CPU Time in millisecond(s) for the query execution
	CpuTimeMs float64 `pulumi:"cpuTimeMs"`
	// Time taken in millisecond(s) for executing the query
	ElapsedTimeMs float64 `pulumi:"elapsedTimeMs"`
	// No. of query executions
	ExecutionCount float64 `pulumi:"executionCount"`
	// Indicates whether the query resulted in an error
	HasErrors bool `pulumi:"hasErrors"`
	// List of sql Errors
	SqlErrors []string `pulumi:"sqlErrors"`
	// Dictionary of sql query execution wait types and the respective statistics
	WaitStats map[string]WaitStatisticsResponse `pulumi:"waitStats"`
}

// ExecutionStatisticsResponseInput is an input type that accepts ExecutionStatisticsResponseArgs and ExecutionStatisticsResponseOutput values.
// You can construct a concrete instance of `ExecutionStatisticsResponseInput` via:
//
//          ExecutionStatisticsResponseArgs{...}
type ExecutionStatisticsResponseInput interface {
	pulumi.Input

	ToExecutionStatisticsResponseOutput() ExecutionStatisticsResponseOutput
	ToExecutionStatisticsResponseOutputWithContext(context.Context) ExecutionStatisticsResponseOutput
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsResponseArgs struct {
	// CPU Time in millisecond(s) for the query execution
	CpuTimeMs pulumi.Float64Input `pulumi:"cpuTimeMs"`
	// Time taken in millisecond(s) for executing the query
	ElapsedTimeMs pulumi.Float64Input `pulumi:"elapsedTimeMs"`
	// No. of query executions
	ExecutionCount pulumi.Float64Input `pulumi:"executionCount"`
	// Indicates whether the query resulted in an error
	HasErrors pulumi.BoolInput `pulumi:"hasErrors"`
	// List of sql Errors
	SqlErrors pulumi.StringArrayInput `pulumi:"sqlErrors"`
	// Dictionary of sql query execution wait types and the respective statistics
	WaitStats WaitStatisticsResponseMapInput `pulumi:"waitStats"`
}

func (ExecutionStatisticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionStatisticsResponse)(nil)).Elem()
}

func (i ExecutionStatisticsResponseArgs) ToExecutionStatisticsResponseOutput() ExecutionStatisticsResponseOutput {
	return i.ToExecutionStatisticsResponseOutputWithContext(context.Background())
}

func (i ExecutionStatisticsResponseArgs) ToExecutionStatisticsResponseOutputWithContext(ctx context.Context) ExecutionStatisticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExecutionStatisticsResponseOutput)
}

// Description about the errors happen while performing migration validation
type ExecutionStatisticsResponseOutput struct{ *pulumi.OutputState }

func (ExecutionStatisticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExecutionStatisticsResponse)(nil)).Elem()
}

func (o ExecutionStatisticsResponseOutput) ToExecutionStatisticsResponseOutput() ExecutionStatisticsResponseOutput {
	return o
}

func (o ExecutionStatisticsResponseOutput) ToExecutionStatisticsResponseOutputWithContext(ctx context.Context) ExecutionStatisticsResponseOutput {
	return o
}

// CPU Time in millisecond(s) for the query execution
func (o ExecutionStatisticsResponseOutput) CpuTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsResponse) float64 { return v.CpuTimeMs }).(pulumi.Float64Output)
}

// Time taken in millisecond(s) for executing the query
func (o ExecutionStatisticsResponseOutput) ElapsedTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsResponse) float64 { return v.ElapsedTimeMs }).(pulumi.Float64Output)
}

// No. of query executions
func (o ExecutionStatisticsResponseOutput) ExecutionCount() pulumi.Float64Output {
	return o.ApplyT(func(v ExecutionStatisticsResponse) float64 { return v.ExecutionCount }).(pulumi.Float64Output)
}

// Indicates whether the query resulted in an error
func (o ExecutionStatisticsResponseOutput) HasErrors() pulumi.BoolOutput {
	return o.ApplyT(func(v ExecutionStatisticsResponse) bool { return v.HasErrors }).(pulumi.BoolOutput)
}

// List of sql Errors
func (o ExecutionStatisticsResponseOutput) SqlErrors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExecutionStatisticsResponse) []string { return v.SqlErrors }).(pulumi.StringArrayOutput)
}

// Dictionary of sql query execution wait types and the respective statistics
func (o ExecutionStatisticsResponseOutput) WaitStats() WaitStatisticsResponseMapOutput {
	return o.ApplyT(func(v ExecutionStatisticsResponse) map[string]WaitStatisticsResponse { return v.WaitStats }).(WaitStatisticsResponseMapOutput)
}

// File share information with Path, Username, and Password.
type FileShare struct {
	// Password credential used to connect to the share location.
	Password *string `pulumi:"password"`
	// The folder path for this share.
	Path string `pulumi:"path"`
	// User name credential to connect to the share location
	UserName *string `pulumi:"userName"`
}

// FileShareInput is an input type that accepts FileShareArgs and FileShareOutput values.
// You can construct a concrete instance of `FileShareInput` via:
//
//          FileShareArgs{...}
type FileShareInput interface {
	pulumi.Input

	ToFileShareOutput() FileShareOutput
	ToFileShareOutputWithContext(context.Context) FileShareOutput
}

// File share information with Path, Username, and Password.
type FileShareArgs struct {
	// Password credential used to connect to the share location.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The folder path for this share.
	Path pulumi.StringInput `pulumi:"path"`
	// User name credential to connect to the share location
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (FileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShare)(nil)).Elem()
}

func (i FileShareArgs) ToFileShareOutput() FileShareOutput {
	return i.ToFileShareOutputWithContext(context.Background())
}

func (i FileShareArgs) ToFileShareOutputWithContext(ctx context.Context) FileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareOutput)
}

func (i FileShareArgs) ToFileSharePtrOutput() FileSharePtrOutput {
	return i.ToFileSharePtrOutputWithContext(context.Background())
}

func (i FileShareArgs) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareOutput).ToFileSharePtrOutputWithContext(ctx)
}

// FileSharePtrInput is an input type that accepts FileShareArgs, FileSharePtr and FileSharePtrOutput values.
// You can construct a concrete instance of `FileSharePtrInput` via:
//
//          FileShareArgs{...}
//
//  or:
//
//          nil
type FileSharePtrInput interface {
	pulumi.Input

	ToFileSharePtrOutput() FileSharePtrOutput
	ToFileSharePtrOutputWithContext(context.Context) FileSharePtrOutput
}

type fileSharePtrType FileShareArgs

func FileSharePtr(v *FileShareArgs) FileSharePtrInput {
	return (*fileSharePtrType)(v)
}

func (*fileSharePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShare)(nil)).Elem()
}

func (i *fileSharePtrType) ToFileSharePtrOutput() FileSharePtrOutput {
	return i.ToFileSharePtrOutputWithContext(context.Background())
}

func (i *fileSharePtrType) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSharePtrOutput)
}

// File share information with Path, Username, and Password.
type FileShareOutput struct{ *pulumi.OutputState }

func (FileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShare)(nil)).Elem()
}

func (o FileShareOutput) ToFileShareOutput() FileShareOutput {
	return o
}

func (o FileShareOutput) ToFileShareOutputWithContext(ctx context.Context) FileShareOutput {
	return o
}

func (o FileShareOutput) ToFileSharePtrOutput() FileSharePtrOutput {
	return o.ToFileSharePtrOutputWithContext(context.Background())
}

func (o FileShareOutput) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return o.ApplyT(func(v FileShare) *FileShare {
		return &v
	}).(FileSharePtrOutput)
}

// Password credential used to connect to the share location.
func (o FileShareOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShare) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileShareOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileShare) string { return v.Path }).(pulumi.StringOutput)
}

// User name credential to connect to the share location
func (o FileShareOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShare) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type FileSharePtrOutput struct{ *pulumi.OutputState }

func (FileSharePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShare)(nil)).Elem()
}

func (o FileSharePtrOutput) ToFileSharePtrOutput() FileSharePtrOutput {
	return o
}

func (o FileSharePtrOutput) ToFileSharePtrOutputWithContext(ctx context.Context) FileSharePtrOutput {
	return o
}

func (o FileSharePtrOutput) Elem() FileShareOutput {
	return o.ApplyT(func(v *FileShare) FileShare { return *v }).(FileShareOutput)
}

// Password credential used to connect to the share location.
func (o FileSharePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileSharePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// User name credential to connect to the share location
func (o FileSharePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShare) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// File share information with Path, Username, and Password.
type FileShareInvokeResponse struct {
	// Password credential used to connect to the share location.
	Password *string `pulumi:"password"`
	// The folder path for this share.
	Path string `pulumi:"path"`
	// User name credential to connect to the share location
	UserName *string `pulumi:"userName"`
}

// FileShareInvokeResponseInput is an input type that accepts FileShareInvokeResponseArgs and FileShareInvokeResponseOutput values.
// You can construct a concrete instance of `FileShareInvokeResponseInput` via:
//
//          FileShareInvokeResponseArgs{...}
type FileShareInvokeResponseInput interface {
	pulumi.Input

	ToFileShareInvokeResponseOutput() FileShareInvokeResponseOutput
	ToFileShareInvokeResponseOutputWithContext(context.Context) FileShareInvokeResponseOutput
}

// File share information with Path, Username, and Password.
type FileShareInvokeResponseArgs struct {
	// Password credential used to connect to the share location.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The folder path for this share.
	Path pulumi.StringInput `pulumi:"path"`
	// User name credential to connect to the share location
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (FileShareInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareInvokeResponse)(nil)).Elem()
}

func (i FileShareInvokeResponseArgs) ToFileShareInvokeResponseOutput() FileShareInvokeResponseOutput {
	return i.ToFileShareInvokeResponseOutputWithContext(context.Background())
}

func (i FileShareInvokeResponseArgs) ToFileShareInvokeResponseOutputWithContext(ctx context.Context) FileShareInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareInvokeResponseOutput)
}

func (i FileShareInvokeResponseArgs) ToFileShareInvokeResponsePtrOutput() FileShareInvokeResponsePtrOutput {
	return i.ToFileShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FileShareInvokeResponseArgs) ToFileShareInvokeResponsePtrOutputWithContext(ctx context.Context) FileShareInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareInvokeResponseOutput).ToFileShareInvokeResponsePtrOutputWithContext(ctx)
}

// FileShareInvokeResponsePtrInput is an input type that accepts FileShareInvokeResponseArgs, FileShareInvokeResponsePtr and FileShareInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FileShareInvokeResponsePtrInput` via:
//
//          FileShareInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FileShareInvokeResponsePtrInput interface {
	pulumi.Input

	ToFileShareInvokeResponsePtrOutput() FileShareInvokeResponsePtrOutput
	ToFileShareInvokeResponsePtrOutputWithContext(context.Context) FileShareInvokeResponsePtrOutput
}

type fileShareInvokeResponsePtrType FileShareInvokeResponseArgs

func FileShareInvokeResponsePtr(v *FileShareInvokeResponseArgs) FileShareInvokeResponsePtrInput {
	return (*fileShareInvokeResponsePtrType)(v)
}

func (*fileShareInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareInvokeResponse)(nil)).Elem()
}

func (i *fileShareInvokeResponsePtrType) ToFileShareInvokeResponsePtrOutput() FileShareInvokeResponsePtrOutput {
	return i.ToFileShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *fileShareInvokeResponsePtrType) ToFileShareInvokeResponsePtrOutputWithContext(ctx context.Context) FileShareInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareInvokeResponsePtrOutput)
}

// File share information with Path, Username, and Password.
type FileShareInvokeResponseOutput struct{ *pulumi.OutputState }

func (FileShareInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareInvokeResponse)(nil)).Elem()
}

func (o FileShareInvokeResponseOutput) ToFileShareInvokeResponseOutput() FileShareInvokeResponseOutput {
	return o
}

func (o FileShareInvokeResponseOutput) ToFileShareInvokeResponseOutputWithContext(ctx context.Context) FileShareInvokeResponseOutput {
	return o
}

func (o FileShareInvokeResponseOutput) ToFileShareInvokeResponsePtrOutput() FileShareInvokeResponsePtrOutput {
	return o.ToFileShareInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FileShareInvokeResponseOutput) ToFileShareInvokeResponsePtrOutputWithContext(ctx context.Context) FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v FileShareInvokeResponse) *FileShareInvokeResponse {
		return &v
	}).(FileShareInvokeResponsePtrOutput)
}

// Password credential used to connect to the share location.
func (o FileShareInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileShareInvokeResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareInvokeResponse) string { return v.Path }).(pulumi.StringOutput)
}

// User name credential to connect to the share location
func (o FileShareInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type FileShareInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FileShareInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareInvokeResponse)(nil)).Elem()
}

func (o FileShareInvokeResponsePtrOutput) ToFileShareInvokeResponsePtrOutput() FileShareInvokeResponsePtrOutput {
	return o
}

func (o FileShareInvokeResponsePtrOutput) ToFileShareInvokeResponsePtrOutputWithContext(ctx context.Context) FileShareInvokeResponsePtrOutput {
	return o
}

func (o FileShareInvokeResponsePtrOutput) Elem() FileShareInvokeResponseOutput {
	return o.ApplyT(func(v *FileShareInvokeResponse) FileShareInvokeResponse { return *v }).(FileShareInvokeResponseOutput)
}

// Password credential used to connect to the share location.
func (o FileShareInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileShareInvokeResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// User name credential to connect to the share location
func (o FileShareInvokeResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// File share information with Path, Username, and Password.
type FileShareResponse struct {
	// Password credential used to connect to the share location.
	Password *string `pulumi:"password"`
	// The folder path for this share.
	Path string `pulumi:"path"`
	// User name credential to connect to the share location
	UserName *string `pulumi:"userName"`
}

// FileShareResponseInput is an input type that accepts FileShareResponseArgs and FileShareResponseOutput values.
// You can construct a concrete instance of `FileShareResponseInput` via:
//
//          FileShareResponseArgs{...}
type FileShareResponseInput interface {
	pulumi.Input

	ToFileShareResponseOutput() FileShareResponseOutput
	ToFileShareResponseOutputWithContext(context.Context) FileShareResponseOutput
}

// File share information with Path, Username, and Password.
type FileShareResponseArgs struct {
	// Password credential used to connect to the share location.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The folder path for this share.
	Path pulumi.StringInput `pulumi:"path"`
	// User name credential to connect to the share location
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (FileShareResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareResponse)(nil)).Elem()
}

func (i FileShareResponseArgs) ToFileShareResponseOutput() FileShareResponseOutput {
	return i.ToFileShareResponseOutputWithContext(context.Background())
}

func (i FileShareResponseArgs) ToFileShareResponseOutputWithContext(ctx context.Context) FileShareResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponseOutput)
}

func (i FileShareResponseArgs) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return i.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (i FileShareResponseArgs) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponseOutput).ToFileShareResponsePtrOutputWithContext(ctx)
}

// FileShareResponsePtrInput is an input type that accepts FileShareResponseArgs, FileShareResponsePtr and FileShareResponsePtrOutput values.
// You can construct a concrete instance of `FileShareResponsePtrInput` via:
//
//          FileShareResponseArgs{...}
//
//  or:
//
//          nil
type FileShareResponsePtrInput interface {
	pulumi.Input

	ToFileShareResponsePtrOutput() FileShareResponsePtrOutput
	ToFileShareResponsePtrOutputWithContext(context.Context) FileShareResponsePtrOutput
}

type fileShareResponsePtrType FileShareResponseArgs

func FileShareResponsePtr(v *FileShareResponseArgs) FileShareResponsePtrInput {
	return (*fileShareResponsePtrType)(v)
}

func (*fileShareResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareResponse)(nil)).Elem()
}

func (i *fileShareResponsePtrType) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return i.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (i *fileShareResponsePtrType) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileShareResponsePtrOutput)
}

// File share information with Path, Username, and Password.
type FileShareResponseOutput struct{ *pulumi.OutputState }

func (FileShareResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileShareResponse)(nil)).Elem()
}

func (o FileShareResponseOutput) ToFileShareResponseOutput() FileShareResponseOutput {
	return o
}

func (o FileShareResponseOutput) ToFileShareResponseOutputWithContext(ctx context.Context) FileShareResponseOutput {
	return o
}

func (o FileShareResponseOutput) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return o.ToFileShareResponsePtrOutputWithContext(context.Background())
}

func (o FileShareResponseOutput) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return o.ApplyT(func(v FileShareResponse) *FileShareResponse {
		return &v
	}).(FileShareResponsePtrOutput)
}

// Password credential used to connect to the share location.
func (o FileShareResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileShareResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v FileShareResponse) string { return v.Path }).(pulumi.StringOutput)
}

// User name credential to connect to the share location
func (o FileShareResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileShareResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type FileShareResponsePtrOutput struct{ *pulumi.OutputState }

func (FileShareResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileShareResponse)(nil)).Elem()
}

func (o FileShareResponsePtrOutput) ToFileShareResponsePtrOutput() FileShareResponsePtrOutput {
	return o
}

func (o FileShareResponsePtrOutput) ToFileShareResponsePtrOutputWithContext(ctx context.Context) FileShareResponsePtrOutput {
	return o
}

func (o FileShareResponsePtrOutput) Elem() FileShareResponseOutput {
	return o.ApplyT(func(v *FileShareResponse) FileShareResponse { return *v }).(FileShareResponseOutput)
}

// Password credential used to connect to the share location.
func (o FileShareResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The folder path for this share.
func (o FileShareResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// User name credential to connect to the share location
func (o FileShareResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileShareResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInput struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShare `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfo `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates []SelectedCertificateInput `pulumi:"selectedCertificates"`
}

// GetTdeCertificatesSqlTaskInputInput is an input type that accepts GetTdeCertificatesSqlTaskInputArgs and GetTdeCertificatesSqlTaskInputOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputInput` via:
//
//          GetTdeCertificatesSqlTaskInputArgs{...}
type GetTdeCertificatesSqlTaskInputInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput
	ToGetTdeCertificatesSqlTaskInputOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputOutput
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputArgs struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShareInput `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInput `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates SelectedCertificateInputArrayInput `pulumi:"selectedCertificates"`
}

func (GetTdeCertificatesSqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput {
	return i.ToGetTdeCertificatesSqlTaskInputOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputOutput)
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputArgs) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputOutput).ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx)
}

// GetTdeCertificatesSqlTaskInputPtrInput is an input type that accepts GetTdeCertificatesSqlTaskInputArgs, GetTdeCertificatesSqlTaskInputPtr and GetTdeCertificatesSqlTaskInputPtrOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputPtrInput` via:
//
//          GetTdeCertificatesSqlTaskInputArgs{...}
//
//  or:
//
//          nil
type GetTdeCertificatesSqlTaskInputPtrInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput
	ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputPtrOutput
}

type getTdeCertificatesSqlTaskInputPtrType GetTdeCertificatesSqlTaskInputArgs

func GetTdeCertificatesSqlTaskInputPtr(v *GetTdeCertificatesSqlTaskInputArgs) GetTdeCertificatesSqlTaskInputPtrInput {
	return (*getTdeCertificatesSqlTaskInputPtrType)(v)
}

func (*getTdeCertificatesSqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (i *getTdeCertificatesSqlTaskInputPtrType) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *getTdeCertificatesSqlTaskInputPtrType) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputOutput() GetTdeCertificatesSqlTaskInputOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (o GetTdeCertificatesSqlTaskInputOutput) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) *GetTdeCertificatesSqlTaskInput {
		return &v
	}).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputOutput) BackupFileShare() FileShareOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) FileShare { return v.BackupFileShare }).(FileShareOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputOutput) ConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) SqlConnectionInfo { return v.ConnectionInfo }).(SqlConnectionInfoOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputOutput) SelectedCertificates() SelectedCertificateInputArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInput) []SelectedCertificateInput { return v.SelectedCertificates }).(SelectedCertificateInputArrayOutput)
}

type GetTdeCertificatesSqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInput)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) ToGetTdeCertificatesSqlTaskInputPtrOutput() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) ToGetTdeCertificatesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputPtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputPtrOutput) Elem() GetTdeCertificatesSqlTaskInputOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) GetTdeCertificatesSqlTaskInput { return *v }).(GetTdeCertificatesSqlTaskInputOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return &v.BackupFileShare
	}).(FileSharePtrOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputPtrOutput) ConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputPtrOutput) SelectedCertificates() SelectedCertificateInputArrayOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInput) []SelectedCertificateInput {
		if v == nil {
			return nil
		}
		return v.SelectedCertificates
	}).(SelectedCertificateInputArrayOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputInvokeResponse struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates []SelectedCertificateInputInvokeResponse `pulumi:"selectedCertificates"`
}

// GetTdeCertificatesSqlTaskInputInvokeResponseInput is an input type that accepts GetTdeCertificatesSqlTaskInputInvokeResponseArgs and GetTdeCertificatesSqlTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputInvokeResponseInput` via:
//
//          GetTdeCertificatesSqlTaskInputInvokeResponseArgs{...}
type GetTdeCertificatesSqlTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputInvokeResponseOutput() GetTdeCertificatesSqlTaskInputInvokeResponseOutput
	ToGetTdeCertificatesSqlTaskInputInvokeResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputInvokeResponseOutput
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputInvokeResponseArgs struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShareInvokeResponseInput `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates SelectedCertificateInputInvokeResponseArrayInput `pulumi:"selectedCertificates"`
}

func (GetTdeCertificatesSqlTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskInputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskInputInvokeResponseOutput() GetTdeCertificatesSqlTaskInputInvokeResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputInvokeResponseOutput)
}

func (i GetTdeCertificatesSqlTaskInputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputInvokeResponseOutput).ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// GetTdeCertificatesSqlTaskInputInvokeResponsePtrInput is an input type that accepts GetTdeCertificatesSqlTaskInputInvokeResponseArgs, GetTdeCertificatesSqlTaskInputInvokeResponsePtr and GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputInvokeResponsePtrInput` via:
//
//          GetTdeCertificatesSqlTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type GetTdeCertificatesSqlTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput
	ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput
}

type getTdeCertificatesSqlTaskInputInvokeResponsePtrType GetTdeCertificatesSqlTaskInputInvokeResponseArgs

func GetTdeCertificatesSqlTaskInputInvokeResponsePtr(v *GetTdeCertificatesSqlTaskInputInvokeResponseArgs) GetTdeCertificatesSqlTaskInputInvokeResponsePtrInput {
	return (*getTdeCertificatesSqlTaskInputInvokeResponsePtrType)(v)
}

func (*getTdeCertificatesSqlTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i *getTdeCertificatesSqlTaskInputInvokeResponsePtrType) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *getTdeCertificatesSqlTaskInputInvokeResponsePtrType) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponseOutput() GetTdeCertificatesSqlTaskInputInvokeResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return o.ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputInvokeResponse) *GetTdeCertificatesSqlTaskInputInvokeResponse {
		return &v
	}).(GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputInvokeResponse) FileShareInvokeResponse { return v.BackupFileShare }).(FileShareInvokeResponseOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) ConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.ConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputInvokeResponseOutput) SelectedCertificates() SelectedCertificateInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputInvokeResponse) []SelectedCertificateInputInvokeResponse {
		return v.SelectedCertificates
	}).(SelectedCertificateInputInvokeResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) Elem() GetTdeCertificatesSqlTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputInvokeResponse) GetTdeCertificatesSqlTaskInputInvokeResponse {
		return *v
	}).(GetTdeCertificatesSqlTaskInputInvokeResponseOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputInvokeResponse) *FileShareInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) ConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput) SelectedCertificates() SelectedCertificateInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputInvokeResponse) []SelectedCertificateInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedCertificates
	}).(SelectedCertificateInputInvokeResponseArrayOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputResponse struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShareResponse `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoResponse `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates []SelectedCertificateInputResponse `pulumi:"selectedCertificates"`
}

// GetTdeCertificatesSqlTaskInputResponseInput is an input type that accepts GetTdeCertificatesSqlTaskInputResponseArgs and GetTdeCertificatesSqlTaskInputResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputResponseInput` via:
//
//          GetTdeCertificatesSqlTaskInputResponseArgs{...}
type GetTdeCertificatesSqlTaskInputResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput
	ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputResponseOutput
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputResponseArgs struct {
	// Backup file share information for file share to be used for temporarily storing files.
	BackupFileShare FileShareResponseInput `pulumi:"backupFileShare"`
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoResponseInput `pulumi:"connectionInfo"`
	// List containing certificate names and corresponding password to use for encrypting the exported certificate.
	SelectedCertificates SelectedCertificateInputResponseArrayInput `pulumi:"selectedCertificates"`
}

func (GetTdeCertificatesSqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponseOutput)
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskInputResponseArgs) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponseOutput).ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx)
}

// GetTdeCertificatesSqlTaskInputResponsePtrInput is an input type that accepts GetTdeCertificatesSqlTaskInputResponseArgs, GetTdeCertificatesSqlTaskInputResponsePtr and GetTdeCertificatesSqlTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskInputResponsePtrInput` via:
//
//          GetTdeCertificatesSqlTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type GetTdeCertificatesSqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput
	ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput
}

type getTdeCertificatesSqlTaskInputResponsePtrType GetTdeCertificatesSqlTaskInputResponseArgs

func GetTdeCertificatesSqlTaskInputResponsePtr(v *GetTdeCertificatesSqlTaskInputResponseArgs) GetTdeCertificatesSqlTaskInputResponsePtrInput {
	return (*getTdeCertificatesSqlTaskInputResponsePtrType)(v)
}

func (*getTdeCertificatesSqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (i *getTdeCertificatesSqlTaskInputResponsePtrType) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return i.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getTdeCertificatesSqlTaskInputResponsePtrType) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

// Input for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponseOutput() GetTdeCertificatesSqlTaskInputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetTdeCertificatesSqlTaskInputResponseOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) *GetTdeCertificatesSqlTaskInputResponse {
		return &v
	}).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputResponseOutput) BackupFileShare() FileShareResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) FileShareResponse { return v.BackupFileShare }).(FileShareResponseOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputResponseOutput) ConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) SqlConnectionInfoResponse { return v.ConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputResponseOutput) SelectedCertificates() SelectedCertificateInputResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskInputResponse) []SelectedCertificateInputResponse {
		return v.SelectedCertificates
	}).(SelectedCertificateInputResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTdeCertificatesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutput() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ToGetTdeCertificatesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) Elem() GetTdeCertificatesSqlTaskInputResponseOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) GetTdeCertificatesSqlTaskInputResponse { return *v }).(GetTdeCertificatesSqlTaskInputResponseOutput)
}

// Backup file share information for file share to be used for temporarily storing files.
func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Connection information for SQL Server
func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) ConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// List containing certificate names and corresponding password to use for encrypting the exported certificate.
func (o GetTdeCertificatesSqlTaskInputResponsePtrOutput) SelectedCertificates() SelectedCertificateInputResponseArrayOutput {
	return o.ApplyT(func(v *GetTdeCertificatesSqlTaskInputResponse) []SelectedCertificateInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedCertificates
	}).(SelectedCertificateInputResponseArrayOutput)
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputInvokeResponse struct {
	// Mapping from certificate name to base 64 encoded format.
	Base64EncodedCertificates map[string][]string `pulumi:"base64EncodedCertificates"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// GetTdeCertificatesSqlTaskOutputInvokeResponseInput is an input type that accepts GetTdeCertificatesSqlTaskOutputInvokeResponseArgs and GetTdeCertificatesSqlTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskOutputInvokeResponseInput` via:
//
//          GetTdeCertificatesSqlTaskOutputInvokeResponseArgs{...}
type GetTdeCertificatesSqlTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseOutput
	ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseOutput
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputInvokeResponseArgs struct {
	// Mapping from certificate name to base 64 encoded format.
	Base64EncodedCertificates pulumi.StringArrayMapInput `pulumi:"base64EncodedCertificates"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (GetTdeCertificatesSqlTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputInvokeResponseArgs) ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputInvokeResponseOutput)
}

// GetTdeCertificatesSqlTaskOutputInvokeResponseArrayInput is an input type that accepts GetTdeCertificatesSqlTaskOutputInvokeResponseArray and GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskOutputInvokeResponseArrayInput` via:
//
//          GetTdeCertificatesSqlTaskOutputInvokeResponseArray{ GetTdeCertificatesSqlTaskOutputInvokeResponseArgs{...} }
type GetTdeCertificatesSqlTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput
	ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput
}

type GetTdeCertificatesSqlTaskOutputInvokeResponseArray []GetTdeCertificatesSqlTaskOutputInvokeResponseInput

func (GetTdeCertificatesSqlTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputInvokeResponseArray) ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputInvokeResponseArray) ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput)
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputInvokeResponseOutput) ToGetTdeCertificatesSqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseOutput {
	return o
}

// Mapping from certificate name to base 64 encoded format.
func (o GetTdeCertificatesSqlTaskOutputInvokeResponseOutput) Base64EncodedCertificates() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputInvokeResponse) map[string][]string {
		return v.Base64EncodedCertificates
	}).(pulumi.StringArrayMapOutput)
}

// Validation errors
func (o GetTdeCertificatesSqlTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput() GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) GetTdeCertificatesSqlTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTdeCertificatesSqlTaskOutputInvokeResponse {
		return vs[0].([]GetTdeCertificatesSqlTaskOutputInvokeResponse)[vs[1].(int)]
	}).(GetTdeCertificatesSqlTaskOutputInvokeResponseOutput)
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputResponse struct {
	// Mapping from certificate name to base 64 encoded format.
	Base64EncodedCertificates map[string][]string `pulumi:"base64EncodedCertificates"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// GetTdeCertificatesSqlTaskOutputResponseInput is an input type that accepts GetTdeCertificatesSqlTaskOutputResponseArgs and GetTdeCertificatesSqlTaskOutputResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskOutputResponseInput` via:
//
//          GetTdeCertificatesSqlTaskOutputResponseArgs{...}
type GetTdeCertificatesSqlTaskOutputResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput
	ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputResponseArgs struct {
	// Mapping from certificate name to base 64 encoded format.
	Base64EncodedCertificates pulumi.StringArrayMapInput `pulumi:"base64EncodedCertificates"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetTdeCertificatesSqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputResponseArgs) ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputResponseArgs) ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputResponseOutput)
}

// GetTdeCertificatesSqlTaskOutputResponseArrayInput is an input type that accepts GetTdeCertificatesSqlTaskOutputResponseArray and GetTdeCertificatesSqlTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskOutputResponseArrayInput` via:
//
//          GetTdeCertificatesSqlTaskOutputResponseArray{ GetTdeCertificatesSqlTaskOutputResponseArgs{...} }
type GetTdeCertificatesSqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput
	ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput
}

type GetTdeCertificatesSqlTaskOutputResponseArray []GetTdeCertificatesSqlTaskOutputResponseInput

func (GetTdeCertificatesSqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskOutputResponseArray) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return i.ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskOutputResponseArray) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskOutputResponseArrayOutput)
}

// Output of the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ToGetTdeCertificatesSqlTaskOutputResponseOutput() GetTdeCertificatesSqlTaskOutputResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ToGetTdeCertificatesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return o
}

// Mapping from certificate name to base 64 encoded format.
func (o GetTdeCertificatesSqlTaskOutputResponseOutput) Base64EncodedCertificates() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputResponse) map[string][]string {
		return v.Base64EncodedCertificates
	}).(pulumi.StringArrayMapOutput)
}

// Validation errors
func (o GetTdeCertificatesSqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type GetTdeCertificatesSqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTdeCertificatesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutput() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) ToGetTdeCertificatesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetTdeCertificatesSqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTdeCertificatesSqlTaskOutputResponse {
		return vs[0].([]GetTdeCertificatesSqlTaskOutputResponse)[vs[1].(int)]
	}).(GetTdeCertificatesSqlTaskOutputResponseOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskProperties struct {
	// Task input
	Input *GetTdeCertificatesSqlTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetTdeCertificatesSqlTaskPropertiesInput is an input type that accepts GetTdeCertificatesSqlTaskPropertiesArgs and GetTdeCertificatesSqlTaskPropertiesOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskPropertiesInput` via:
//
//          GetTdeCertificatesSqlTaskPropertiesArgs{...}
type GetTdeCertificatesSqlTaskPropertiesInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput
	ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(context.Context) GetTdeCertificatesSqlTaskPropertiesOutput
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesArgs struct {
	// Task input
	Input GetTdeCertificatesSqlTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetTdeCertificatesSqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskProperties)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskPropertiesArgs) ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput {
	return i.ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskPropertiesArgs) ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskPropertiesOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskProperties)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) ToGetTdeCertificatesSqlTaskPropertiesOutput() GetTdeCertificatesSqlTaskPropertiesOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesOutput) ToGetTdeCertificatesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesOutput {
	return o
}

// Task input
func (o GetTdeCertificatesSqlTaskPropertiesOutput) Input() GetTdeCertificatesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskProperties) *GetTdeCertificatesSqlTaskInput { return v.Input }).(GetTdeCertificatesSqlTaskInputPtrOutput)
}

// Task type.
// Expected value is 'GetTDECertificates.Sql'.
func (o GetTdeCertificatesSqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *GetTdeCertificatesSqlTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetTdeCertificatesSqlTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetTdeCertificatesSqlTaskPropertiesInvokeResponseInput is an input type that accepts GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs and GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskPropertiesInvokeResponseInput` via:
//
//          GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs{...}
type GetTdeCertificatesSqlTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput() GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput
	ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetTdeCertificatesSqlTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetTdeCertificatesSqlTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput() GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskPropertiesInvokeResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput() GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) Input() GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) *GetTdeCertificatesSqlTaskInputInvokeResponse {
		return v.Input
	}).(GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) Output() GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) []GetTdeCertificatesSqlTaskOutputInvokeResponse {
		return v.Output
	}).(GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetTDECertificates.Sql'.
func (o GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *GetTdeCertificatesSqlTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetTdeCertificatesSqlTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetTdeCertificatesSqlTaskPropertiesResponseInput is an input type that accepts GetTdeCertificatesSqlTaskPropertiesResponseArgs and GetTdeCertificatesSqlTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `GetTdeCertificatesSqlTaskPropertiesResponseInput` via:
//
//          GetTdeCertificatesSqlTaskPropertiesResponseArgs{...}
type GetTdeCertificatesSqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput
	ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetTdeCertificatesSqlTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetTdeCertificatesSqlTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetTDECertificates.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetTdeCertificatesSqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (i GetTdeCertificatesSqlTaskPropertiesResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return i.ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetTdeCertificatesSqlTaskPropertiesResponseArgs) ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTdeCertificatesSqlTaskPropertiesResponseOutput)
}

// Properties for the task that gets TDE certificates in Base64 encoded format.
type GetTdeCertificatesSqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetTdeCertificatesSqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTdeCertificatesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesResponseOutput() GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) ToGetTdeCertificatesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetTdeCertificatesSqlTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Input() GetTdeCertificatesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) *GetTdeCertificatesSqlTaskInputResponse {
		return v.Input
	}).(GetTdeCertificatesSqlTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) Output() GetTdeCertificatesSqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) []GetTdeCertificatesSqlTaskOutputResponse {
		return v.Output
	}).(GetTdeCertificatesSqlTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetTDECertificates.Sql'.
func (o GetTdeCertificatesSqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTdeCertificatesSqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInput struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases []string `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases []string `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// GetUserTablesSqlSyncTaskInputInput is an input type that accepts GetUserTablesSqlSyncTaskInputArgs and GetUserTablesSqlSyncTaskInputOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputInput` via:
//
//          GetUserTablesSqlSyncTaskInputArgs{...}
type GetUserTablesSqlSyncTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput
	ToGetUserTablesSqlSyncTaskInputOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputArgs struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases pulumi.StringArrayInput `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases pulumi.StringArrayInput `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (GetUserTablesSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput {
	return i.ToGetUserTablesSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputOutput)
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputArgs) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputOutput).ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx)
}

// GetUserTablesSqlSyncTaskInputPtrInput is an input type that accepts GetUserTablesSqlSyncTaskInputArgs, GetUserTablesSqlSyncTaskInputPtr and GetUserTablesSqlSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputPtrInput` via:
//
//          GetUserTablesSqlSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput
	ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputPtrOutput
}

type getUserTablesSqlSyncTaskInputPtrType GetUserTablesSqlSyncTaskInputArgs

func GetUserTablesSqlSyncTaskInputPtr(v *GetUserTablesSqlSyncTaskInputArgs) GetUserTablesSqlSyncTaskInputPtrInput {
	return (*getUserTablesSqlSyncTaskInputPtrType)(v)
}

func (*getUserTablesSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (i *getUserTablesSqlSyncTaskInputPtrType) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlSyncTaskInputPtrType) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputOutput() GetUserTablesSqlSyncTaskInputOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlSyncTaskInputOutput) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) *GetUserTablesSqlSyncTaskInput {
		return &v
	}).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) []string { return v.SelectedSourceDatabases }).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) []string { return v.SelectedTargetDatabases }).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type GetUserTablesSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) ToGetUserTablesSqlSyncTaskInputPtrOutput() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) ToGetUserTablesSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputPtrOutput) Elem() GetUserTablesSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) GetUserTablesSqlSyncTaskInput { return *v }).(GetUserTablesSqlSyncTaskInputOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputPtrOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceDatabases
	}).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputPtrOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedTargetDatabases
	}).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputInvokeResponse struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases []string `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases []string `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// GetUserTablesSqlSyncTaskInputInvokeResponseInput is an input type that accepts GetUserTablesSqlSyncTaskInputInvokeResponseArgs and GetUserTablesSqlSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputInvokeResponseInput` via:
//
//          GetUserTablesSqlSyncTaskInputInvokeResponseArgs{...}
type GetUserTablesSqlSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputInvokeResponseOutput() GetUserTablesSqlSyncTaskInputInvokeResponseOutput
	ToGetUserTablesSqlSyncTaskInputInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputInvokeResponseOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputInvokeResponseArgs struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases pulumi.StringArrayInput `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases pulumi.StringArrayInput `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (GetUserTablesSqlSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskInputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskInputInvokeResponseOutput() GetUserTablesSqlSyncTaskInputInvokeResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputInvokeResponseOutput)
}

func (i GetUserTablesSqlSyncTaskInputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputInvokeResponseOutput).ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// GetUserTablesSqlSyncTaskInputInvokeResponsePtrInput is an input type that accepts GetUserTablesSqlSyncTaskInputInvokeResponseArgs, GetUserTablesSqlSyncTaskInputInvokeResponsePtr and GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputInvokeResponsePtrInput` via:
//
//          GetUserTablesSqlSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput
	ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput
}

type getUserTablesSqlSyncTaskInputInvokeResponsePtrType GetUserTablesSqlSyncTaskInputInvokeResponseArgs

func GetUserTablesSqlSyncTaskInputInvokeResponsePtr(v *GetUserTablesSqlSyncTaskInputInvokeResponseArgs) GetUserTablesSqlSyncTaskInputInvokeResponsePtrInput {
	return (*getUserTablesSqlSyncTaskInputInvokeResponsePtrType)(v)
}

func (*getUserTablesSqlSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *getUserTablesSqlSyncTaskInputInvokeResponsePtrType) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlSyncTaskInputInvokeResponsePtrType) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponseOutput() GetUserTablesSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputInvokeResponse) *GetUserTablesSqlSyncTaskInputInvokeResponse {
		return &v
	}).(GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputInvokeResponse) []string { return v.SelectedSourceDatabases }).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputInvokeResponse) []string { return v.SelectedTargetDatabases }).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) Elem() GetUserTablesSqlSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputInvokeResponse) GetUserTablesSqlSyncTaskInputInvokeResponse {
		return *v
	}).(GetUserTablesSqlSyncTaskInputInvokeResponseOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceDatabases
	}).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedTargetDatabases
	}).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputResponse struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases []string `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases []string `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// GetUserTablesSqlSyncTaskInputResponseInput is an input type that accepts GetUserTablesSqlSyncTaskInputResponseArgs and GetUserTablesSqlSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputResponseInput` via:
//
//          GetUserTablesSqlSyncTaskInputResponseArgs{...}
type GetUserTablesSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput
	ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputResponseOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputResponseArgs struct {
	// List of source database names to collect tables for
	SelectedSourceDatabases pulumi.StringArrayInput `pulumi:"selectedSourceDatabases"`
	// List of target database names to collect tables for
	SelectedTargetDatabases pulumi.StringArrayInput `pulumi:"selectedTargetDatabases"`
	// Connection information for SQL Server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for SQL DB
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (GetUserTablesSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponseOutput)
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskInputResponseArgs) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponseOutput).ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// GetUserTablesSqlSyncTaskInputResponsePtrInput is an input type that accepts GetUserTablesSqlSyncTaskInputResponseArgs, GetUserTablesSqlSyncTaskInputResponsePtr and GetUserTablesSqlSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskInputResponsePtrInput` via:
//
//          GetUserTablesSqlSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput
	ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput
}

type getUserTablesSqlSyncTaskInputResponsePtrType GetUserTablesSqlSyncTaskInputResponseArgs

func GetUserTablesSqlSyncTaskInputResponsePtr(v *GetUserTablesSqlSyncTaskInputResponseArgs) GetUserTablesSqlSyncTaskInputResponsePtrInput {
	return (*getUserTablesSqlSyncTaskInputResponsePtrType)(v)
}

func (*getUserTablesSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesSqlSyncTaskInputResponsePtrType) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlSyncTaskInputResponsePtrType) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponseOutput() GetUserTablesSqlSyncTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlSyncTaskInputResponseOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) *GetUserTablesSqlSyncTaskInputResponse {
		return &v
	}).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputResponseOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) []string { return v.SelectedSourceDatabases }).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputResponseOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) []string { return v.SelectedTargetDatabases }).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) SqlConnectionInfoResponse { return v.SourceConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskInputResponse) SqlConnectionInfoResponse { return v.TargetConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

type GetUserTablesSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutput() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) ToGetUserTablesSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) Elem() GetUserTablesSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) GetUserTablesSqlSyncTaskInputResponse { return *v }).(GetUserTablesSqlSyncTaskInputResponseOutput)
}

// List of source database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SelectedSourceDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedSourceDatabases
	}).(pulumi.StringArrayOutput)
}

// List of target database names to collect tables for
func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SelectedTargetDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedTargetDatabases
	}).(pulumi.StringArrayOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Connection information for SQL DB
func (o GetUserTablesSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputInvokeResponse struct {
	// Mapping from database name to list of source tables
	DatabasesToSourceTables map[string][]DatabaseTableInvokeResponse `pulumi:"databasesToSourceTables"`
	// Mapping from database name to list of target tables
	DatabasesToTargetTables map[string][]DatabaseTableInvokeResponse `pulumi:"databasesToTargetTables"`
	// Mapping from database name to list of validation errors
	TableValidationErrors map[string][]string `pulumi:"tableValidationErrors"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// GetUserTablesSqlSyncTaskOutputInvokeResponseInput is an input type that accepts GetUserTablesSqlSyncTaskOutputInvokeResponseArgs and GetUserTablesSqlSyncTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskOutputInvokeResponseInput` via:
//
//          GetUserTablesSqlSyncTaskOutputInvokeResponseArgs{...}
type GetUserTablesSqlSyncTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseOutput
	ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseOutput
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputInvokeResponseArgs struct {
	// Mapping from database name to list of source tables
	DatabasesToSourceTables DatabaseTableInvokeResponseArrayMapInput `pulumi:"databasesToSourceTables"`
	// Mapping from database name to list of target tables
	DatabasesToTargetTables DatabaseTableInvokeResponseArrayMapInput `pulumi:"databasesToTargetTables"`
	// Mapping from database name to list of validation errors
	TableValidationErrors pulumi.StringArrayMapInput `pulumi:"tableValidationErrors"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlSyncTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputInvokeResponseArgs) ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputInvokeResponseOutput)
}

// GetUserTablesSqlSyncTaskOutputInvokeResponseArrayInput is an input type that accepts GetUserTablesSqlSyncTaskOutputInvokeResponseArray and GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskOutputInvokeResponseArrayInput` via:
//
//          GetUserTablesSqlSyncTaskOutputInvokeResponseArray{ GetUserTablesSqlSyncTaskOutputInvokeResponseArgs{...} }
type GetUserTablesSqlSyncTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput
	ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput
}

type GetUserTablesSqlSyncTaskOutputInvokeResponseArray []GetUserTablesSqlSyncTaskOutputInvokeResponseInput

func (GetUserTablesSqlSyncTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputInvokeResponseArray) ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputInvokeResponseArray) ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) ToGetUserTablesSqlSyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseOutput {
	return o
}

// Mapping from database name to list of source tables
func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) DatabasesToSourceTables() DatabaseTableInvokeResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputInvokeResponse) map[string][]DatabaseTableInvokeResponse {
		return v.DatabasesToSourceTables
	}).(DatabaseTableInvokeResponseArrayMapOutput)
}

// Mapping from database name to list of target tables
func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) DatabasesToTargetTables() DatabaseTableInvokeResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputInvokeResponse) map[string][]DatabaseTableInvokeResponse {
		return v.DatabasesToTargetTables
	}).(DatabaseTableInvokeResponseArrayMapOutput)
}

// Mapping from database name to list of validation errors
func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) TableValidationErrors() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputInvokeResponse) map[string][]string {
		return v.TableValidationErrors
	}).(pulumi.StringArrayMapOutput)
}

// Validation errors
func (o GetUserTablesSqlSyncTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlSyncTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlSyncTaskOutputInvokeResponse {
		return vs[0].([]GetUserTablesSqlSyncTaskOutputInvokeResponse)[vs[1].(int)]
	}).(GetUserTablesSqlSyncTaskOutputInvokeResponseOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputResponse struct {
	// Mapping from database name to list of source tables
	DatabasesToSourceTables map[string][]DatabaseTableResponse `pulumi:"databasesToSourceTables"`
	// Mapping from database name to list of target tables
	DatabasesToTargetTables map[string][]DatabaseTableResponse `pulumi:"databasesToTargetTables"`
	// Mapping from database name to list of validation errors
	TableValidationErrors map[string][]string `pulumi:"tableValidationErrors"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// GetUserTablesSqlSyncTaskOutputResponseInput is an input type that accepts GetUserTablesSqlSyncTaskOutputResponseArgs and GetUserTablesSqlSyncTaskOutputResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskOutputResponseInput` via:
//
//          GetUserTablesSqlSyncTaskOutputResponseArgs{...}
type GetUserTablesSqlSyncTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput
	ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputResponseArgs struct {
	// Mapping from database name to list of source tables
	DatabasesToSourceTables DatabaseTableResponseArrayMapInput `pulumi:"databasesToSourceTables"`
	// Mapping from database name to list of target tables
	DatabasesToTargetTables DatabaseTableResponseArrayMapInput `pulumi:"databasesToTargetTables"`
	// Mapping from database name to list of validation errors
	TableValidationErrors pulumi.StringArrayMapInput `pulumi:"tableValidationErrors"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlSyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputResponseArgs) ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputResponseArgs) ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputResponseOutput)
}

// GetUserTablesSqlSyncTaskOutputResponseArrayInput is an input type that accepts GetUserTablesSqlSyncTaskOutputResponseArray and GetUserTablesSqlSyncTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskOutputResponseArrayInput` via:
//
//          GetUserTablesSqlSyncTaskOutputResponseArray{ GetUserTablesSqlSyncTaskOutputResponseArgs{...} }
type GetUserTablesSqlSyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput
	ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput
}

type GetUserTablesSqlSyncTaskOutputResponseArray []GetUserTablesSqlSyncTaskOutputResponseInput

func (GetUserTablesSqlSyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskOutputResponseArray) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskOutputResponseArray) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskOutputResponseArrayOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ToGetUserTablesSqlSyncTaskOutputResponseOutput() GetUserTablesSqlSyncTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ToGetUserTablesSqlSyncTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return o
}

// Mapping from database name to list of source tables
func (o GetUserTablesSqlSyncTaskOutputResponseOutput) DatabasesToSourceTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToSourceTables
	}).(DatabaseTableResponseArrayMapOutput)
}

// Mapping from database name to list of target tables
func (o GetUserTablesSqlSyncTaskOutputResponseOutput) DatabasesToTargetTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToTargetTables
	}).(DatabaseTableResponseArrayMapOutput)
}

// Mapping from database name to list of validation errors
func (o GetUserTablesSqlSyncTaskOutputResponseOutput) TableValidationErrors() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) map[string][]string { return v.TableValidationErrors }).(pulumi.StringArrayMapOutput)
}

// Validation errors
func (o GetUserTablesSqlSyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesSqlSyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlSyncTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutput() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) ToGetUserTablesSqlSyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlSyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlSyncTaskOutputResponse {
		return vs[0].([]GetUserTablesSqlSyncTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesSqlSyncTaskOutputResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskProperties struct {
	// Task input
	Input *GetUserTablesSqlSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlSyncTaskPropertiesInput is an input type that accepts GetUserTablesSqlSyncTaskPropertiesArgs and GetUserTablesSqlSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskPropertiesInput` via:
//
//          GetUserTablesSqlSyncTaskPropertiesArgs{...}
type GetUserTablesSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput
	ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(context.Context) GetUserTablesSqlSyncTaskPropertiesOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesArgs struct {
	// Task input
	Input GetUserTablesSqlSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskProperties)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskPropertiesArgs) ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput {
	return i.ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskPropertiesArgs) ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskPropertiesOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskProperties)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) ToGetUserTablesSqlSyncTaskPropertiesOutput() GetUserTablesSqlSyncTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesOutput) ToGetUserTablesSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o GetUserTablesSqlSyncTaskPropertiesOutput) Input() GetUserTablesSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskProperties) *GetUserTablesSqlSyncTaskInput { return v.Input }).(GetUserTablesSqlSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
func (o GetUserTablesSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *GetUserTablesSqlSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetUserTablesSqlSyncTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlSyncTaskPropertiesInvokeResponseInput is an input type that accepts GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs and GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskPropertiesInvokeResponseInput` via:
//
//          GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs{...}
type GetUserTablesSqlSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput() GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput
	ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetUserTablesSqlSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetUserTablesSqlSyncTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput() GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskPropertiesInvokeResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput() GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) Input() GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) *GetUserTablesSqlSyncTaskInputInvokeResponse {
		return v.Input
	}).(GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) Output() GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) []GetUserTablesSqlSyncTaskOutputInvokeResponse {
		return v.Output
	}).(GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
func (o GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *GetUserTablesSqlSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetUserTablesSqlSyncTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlSyncTaskPropertiesResponseInput is an input type that accepts GetUserTablesSqlSyncTaskPropertiesResponseArgs and GetUserTablesSqlSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlSyncTaskPropertiesResponseInput` via:
//
//          GetUserTablesSqlSyncTaskPropertiesResponseArgs{...}
type GetUserTablesSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput
	ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetUserTablesSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetUserTablesSqlSyncTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesSqlSyncTaskPropertiesResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return i.ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlSyncTaskPropertiesResponseArgs) ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlSyncTaskPropertiesResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesResponseOutput() GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) ToGetUserTablesSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Input() GetUserTablesSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) *GetUserTablesSqlSyncTaskInputResponse {
		return v.Input
	}).(GetUserTablesSqlSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) Output() GetUserTablesSqlSyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) []GetUserTablesSqlSyncTaskOutputResponse {
		return v.Output
	}).(GetUserTablesSqlSyncTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetUserTables.AzureSqlDb.Sync'.
func (o GetUserTablesSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInput struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfo `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases []string `pulumi:"selectedDatabases"`
}

// GetUserTablesSqlTaskInputInput is an input type that accepts GetUserTablesSqlTaskInputArgs and GetUserTablesSqlTaskInputOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputInput` via:
//
//          GetUserTablesSqlTaskInputArgs{...}
type GetUserTablesSqlTaskInputInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput
	ToGetUserTablesSqlTaskInputOutputWithContext(context.Context) GetUserTablesSqlTaskInputOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputArgs struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInput `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases pulumi.StringArrayInput `pulumi:"selectedDatabases"`
}

func (GetUserTablesSqlTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput {
	return i.ToGetUserTablesSqlTaskInputOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputOutput)
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return i.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputArgs) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputOutput).ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx)
}

// GetUserTablesSqlTaskInputPtrInput is an input type that accepts GetUserTablesSqlTaskInputArgs, GetUserTablesSqlTaskInputPtr and GetUserTablesSqlTaskInputPtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputPtrInput` via:
//
//          GetUserTablesSqlTaskInputArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlTaskInputPtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput
	ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Context) GetUserTablesSqlTaskInputPtrOutput
}

type getUserTablesSqlTaskInputPtrType GetUserTablesSqlTaskInputArgs

func GetUserTablesSqlTaskInputPtr(v *GetUserTablesSqlTaskInputArgs) GetUserTablesSqlTaskInputPtrInput {
	return (*getUserTablesSqlTaskInputPtrType)(v)
}

func (*getUserTablesSqlTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (i *getUserTablesSqlTaskInputPtrType) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return i.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlTaskInputPtrType) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputPtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputOutput() GetUserTablesSqlTaskInputOutput {
	return o
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputOutput {
	return o
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return o.ToGetUserTablesSqlTaskInputPtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlTaskInputOutput) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInput) *GetUserTablesSqlTaskInput {
		return &v
	}).(GetUserTablesSqlTaskInputPtrOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputOutput) ConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInput) SqlConnectionInfo { return v.ConnectionInfo }).(SqlConnectionInfoOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInput) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputPtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInput)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputPtrOutput) ToGetUserTablesSqlTaskInputPtrOutput() GetUserTablesSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputPtrOutput) ToGetUserTablesSqlTaskInputPtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputPtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputPtrOutput) Elem() GetUserTablesSqlTaskInputOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) GetUserTablesSqlTaskInput { return *v }).(GetUserTablesSqlTaskInputOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputPtrOutput) ConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputPtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputInvokeResponse struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases []string `pulumi:"selectedDatabases"`
}

// GetUserTablesSqlTaskInputInvokeResponseInput is an input type that accepts GetUserTablesSqlTaskInputInvokeResponseArgs and GetUserTablesSqlTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputInvokeResponseInput` via:
//
//          GetUserTablesSqlTaskInputInvokeResponseArgs{...}
type GetUserTablesSqlTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputInvokeResponseOutput() GetUserTablesSqlTaskInputInvokeResponseOutput
	ToGetUserTablesSqlTaskInputInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlTaskInputInvokeResponseOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputInvokeResponseArgs struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases pulumi.StringArrayInput `pulumi:"selectedDatabases"`
}

func (GetUserTablesSqlTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskInputInvokeResponseArgs) ToGetUserTablesSqlTaskInputInvokeResponseOutput() GetUserTablesSqlTaskInputInvokeResponseOutput {
	return i.ToGetUserTablesSqlTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputInvokeResponseArgs) ToGetUserTablesSqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputInvokeResponseOutput)
}

func (i GetUserTablesSqlTaskInputInvokeResponseArgs) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutput() GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputInvokeResponseArgs) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputInvokeResponseOutput).ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// GetUserTablesSqlTaskInputInvokeResponsePtrInput is an input type that accepts GetUserTablesSqlTaskInputInvokeResponseArgs, GetUserTablesSqlTaskInputInvokeResponsePtr and GetUserTablesSqlTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputInvokeResponsePtrInput` via:
//
//          GetUserTablesSqlTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputInvokeResponsePtrOutput() GetUserTablesSqlTaskInputInvokeResponsePtrOutput
	ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Context) GetUserTablesSqlTaskInputInvokeResponsePtrOutput
}

type getUserTablesSqlTaskInputInvokeResponsePtrType GetUserTablesSqlTaskInputInvokeResponseArgs

func GetUserTablesSqlTaskInputInvokeResponsePtr(v *GetUserTablesSqlTaskInputInvokeResponseArgs) GetUserTablesSqlTaskInputInvokeResponsePtrInput {
	return (*getUserTablesSqlTaskInputInvokeResponsePtrType)(v)
}

func (*getUserTablesSqlTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (i *getUserTablesSqlTaskInputInvokeResponsePtrType) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutput() GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlTaskInputInvokeResponsePtrType) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputInvokeResponsePtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputInvokeResponseOutput) ToGetUserTablesSqlTaskInputInvokeResponseOutput() GetUserTablesSqlTaskInputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputInvokeResponseOutput) ToGetUserTablesSqlTaskInputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputInvokeResponseOutput) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutput() GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return o.ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlTaskInputInvokeResponseOutput) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputInvokeResponse) *GetUserTablesSqlTaskInputInvokeResponse {
		return &v
	}).(GetUserTablesSqlTaskInputInvokeResponsePtrOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputInvokeResponseOutput) ConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.ConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputInvokeResponseOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputInvokeResponse) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputInvokeResponsePtrOutput) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutput() GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputInvokeResponsePtrOutput) ToGetUserTablesSqlTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputInvokeResponsePtrOutput) Elem() GetUserTablesSqlTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputInvokeResponse) GetUserTablesSqlTaskInputInvokeResponse { return *v }).(GetUserTablesSqlTaskInputInvokeResponseOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputInvokeResponsePtrOutput) ConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputInvokeResponsePtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputResponse struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoResponse `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases []string `pulumi:"selectedDatabases"`
}

// GetUserTablesSqlTaskInputResponseInput is an input type that accepts GetUserTablesSqlTaskInputResponseArgs and GetUserTablesSqlTaskInputResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputResponseInput` via:
//
//          GetUserTablesSqlTaskInputResponseArgs{...}
type GetUserTablesSqlTaskInputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput
	ToGetUserTablesSqlTaskInputResponseOutputWithContext(context.Context) GetUserTablesSqlTaskInputResponseOutput
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputResponseArgs struct {
	// Connection information for SQL Server
	ConnectionInfo SqlConnectionInfoResponseInput `pulumi:"connectionInfo"`
	// List of database names to collect tables for
	SelectedDatabases pulumi.StringArrayInput `pulumi:"selectedDatabases"`
}

func (GetUserTablesSqlTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput {
	return i.ToGetUserTablesSqlTaskInputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponseOutput)
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskInputResponseArgs) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponseOutput).ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx)
}

// GetUserTablesSqlTaskInputResponsePtrInput is an input type that accepts GetUserTablesSqlTaskInputResponseArgs, GetUserTablesSqlTaskInputResponsePtr and GetUserTablesSqlTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskInputResponsePtrInput` via:
//
//          GetUserTablesSqlTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type GetUserTablesSqlTaskInputResponsePtrInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput
	ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Context) GetUserTablesSqlTaskInputResponsePtrOutput
}

type getUserTablesSqlTaskInputResponsePtrType GetUserTablesSqlTaskInputResponseArgs

func GetUserTablesSqlTaskInputResponsePtr(v *GetUserTablesSqlTaskInputResponseArgs) GetUserTablesSqlTaskInputResponsePtrInput {
	return (*getUserTablesSqlTaskInputResponsePtrType)(v)
}

func (*getUserTablesSqlTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (i *getUserTablesSqlTaskInputResponsePtrType) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return i.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *getUserTablesSqlTaskInputResponsePtrType) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

// Input for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskInputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponseOutput() GetUserTablesSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o GetUserTablesSqlTaskInputResponseOutput) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputResponse) *GetUserTablesSqlTaskInputResponse {
		return &v
	}).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputResponseOutput) ConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputResponse) SqlConnectionInfoResponse { return v.ConnectionInfo }).(SqlConnectionInfoResponseOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputResponseOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskInputResponse) []string { return v.SelectedDatabases }).(pulumi.StringArrayOutput)
}

type GetUserTablesSqlTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetUserTablesSqlTaskInputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) ToGetUserTablesSqlTaskInputResponsePtrOutput() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) ToGetUserTablesSqlTaskInputResponsePtrOutputWithContext(ctx context.Context) GetUserTablesSqlTaskInputResponsePtrOutput {
	return o
}

func (o GetUserTablesSqlTaskInputResponsePtrOutput) Elem() GetUserTablesSqlTaskInputResponseOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) GetUserTablesSqlTaskInputResponse { return *v }).(GetUserTablesSqlTaskInputResponseOutput)
}

// Connection information for SQL Server
func (o GetUserTablesSqlTaskInputResponsePtrOutput) ConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.ConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// List of database names to collect tables for
func (o GetUserTablesSqlTaskInputResponsePtrOutput) SelectedDatabases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetUserTablesSqlTaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(pulumi.StringArrayOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputInvokeResponse struct {
	// Mapping from database name to list of tables
	DatabasesToTables map[string][]DatabaseTableInvokeResponse `pulumi:"databasesToTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Validation errors
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// GetUserTablesSqlTaskOutputInvokeResponseInput is an input type that accepts GetUserTablesSqlTaskOutputInvokeResponseArgs and GetUserTablesSqlTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskOutputInvokeResponseInput` via:
//
//          GetUserTablesSqlTaskOutputInvokeResponseArgs{...}
type GetUserTablesSqlTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputInvokeResponseOutput() GetUserTablesSqlTaskOutputInvokeResponseOutput
	ToGetUserTablesSqlTaskOutputInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlTaskOutputInvokeResponseOutput
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputInvokeResponseArgs struct {
	// Mapping from database name to list of tables
	DatabasesToTables DatabaseTableInvokeResponseArrayMapInput `pulumi:"databasesToTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Validation errors
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputInvokeResponseArgs) ToGetUserTablesSqlTaskOutputInvokeResponseOutput() GetUserTablesSqlTaskOutputInvokeResponseOutput {
	return i.ToGetUserTablesSqlTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputInvokeResponseArgs) ToGetUserTablesSqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputInvokeResponseOutput)
}

// GetUserTablesSqlTaskOutputInvokeResponseArrayInput is an input type that accepts GetUserTablesSqlTaskOutputInvokeResponseArray and GetUserTablesSqlTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskOutputInvokeResponseArrayInput` via:
//
//          GetUserTablesSqlTaskOutputInvokeResponseArray{ GetUserTablesSqlTaskOutputInvokeResponseArgs{...} }
type GetUserTablesSqlTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlTaskOutputInvokeResponseArrayOutput
	ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutputWithContext(context.Context) GetUserTablesSqlTaskOutputInvokeResponseArrayOutput
}

type GetUserTablesSqlTaskOutputInvokeResponseArray []GetUserTablesSqlTaskOutputInvokeResponseInput

func (GetUserTablesSqlTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputInvokeResponseArray) ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlTaskOutputInvokeResponseArrayOutput {
	return i.ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputInvokeResponseArray) ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputInvokeResponseArrayOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputInvokeResponseOutput) ToGetUserTablesSqlTaskOutputInvokeResponseOutput() GetUserTablesSqlTaskOutputInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputInvokeResponseOutput) ToGetUserTablesSqlTaskOutputInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputInvokeResponseOutput {
	return o
}

// Mapping from database name to list of tables
func (o GetUserTablesSqlTaskOutputInvokeResponseOutput) DatabasesToTables() DatabaseTableInvokeResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputInvokeResponse) map[string][]DatabaseTableInvokeResponse {
		return v.DatabasesToTables
	}).(DatabaseTableInvokeResponseArrayMapOutput)
}

// Result identifier
func (o GetUserTablesSqlTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Validation errors
func (o GetUserTablesSqlTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type GetUserTablesSqlTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputInvokeResponseArrayOutput) ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutput() GetUserTablesSqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputInvokeResponseArrayOutput) ToGetUserTablesSqlTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlTaskOutputInvokeResponse {
		return vs[0].([]GetUserTablesSqlTaskOutputInvokeResponse)[vs[1].(int)]
	}).(GetUserTablesSqlTaskOutputInvokeResponseOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputResponse struct {
	// Mapping from database name to list of tables
	DatabasesToTables map[string][]DatabaseTableResponse `pulumi:"databasesToTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Validation errors
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// GetUserTablesSqlTaskOutputResponseInput is an input type that accepts GetUserTablesSqlTaskOutputResponseArgs and GetUserTablesSqlTaskOutputResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskOutputResponseInput` via:
//
//          GetUserTablesSqlTaskOutputResponseArgs{...}
type GetUserTablesSqlTaskOutputResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput
	ToGetUserTablesSqlTaskOutputResponseOutputWithContext(context.Context) GetUserTablesSqlTaskOutputResponseOutput
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputResponseArgs struct {
	// Mapping from database name to list of tables
	DatabasesToTables DatabaseTableResponseArrayMapInput `pulumi:"databasesToTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Validation errors
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (GetUserTablesSqlTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputResponseArgs) ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput {
	return i.ToGetUserTablesSqlTaskOutputResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputResponseArgs) ToGetUserTablesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputResponseOutput)
}

// GetUserTablesSqlTaskOutputResponseArrayInput is an input type that accepts GetUserTablesSqlTaskOutputResponseArray and GetUserTablesSqlTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskOutputResponseArrayInput` via:
//
//          GetUserTablesSqlTaskOutputResponseArray{ GetUserTablesSqlTaskOutputResponseArgs{...} }
type GetUserTablesSqlTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput
	ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput
}

type GetUserTablesSqlTaskOutputResponseArray []GetUserTablesSqlTaskOutputResponseInput

func (GetUserTablesSqlTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskOutputResponseArray) ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return i.ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskOutputResponseArray) ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskOutputResponseArrayOutput)
}

// Output of the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputResponseOutput) ToGetUserTablesSqlTaskOutputResponseOutput() GetUserTablesSqlTaskOutputResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseOutput) ToGetUserTablesSqlTaskOutputResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseOutput {
	return o
}

// Mapping from database name to list of tables
func (o GetUserTablesSqlTaskOutputResponseOutput) DatabasesToTables() DatabaseTableResponseArrayMapOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) map[string][]DatabaseTableResponse {
		return v.DatabasesToTables
	}).(DatabaseTableResponseArrayMapOutput)
}

// Result identifier
func (o GetUserTablesSqlTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Validation errors
func (o GetUserTablesSqlTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskOutputResponse) []ReportableExceptionResponse { return v.ValidationErrors }).(ReportableExceptionResponseArrayOutput)
}

type GetUserTablesSqlTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserTablesSqlTaskOutputResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) ToGetUserTablesSqlTaskOutputResponseArrayOutput() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) ToGetUserTablesSqlTaskOutputResponseArrayOutputWithContext(ctx context.Context) GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o
}

func (o GetUserTablesSqlTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) GetUserTablesSqlTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserTablesSqlTaskOutputResponse {
		return vs[0].([]GetUserTablesSqlTaskOutputResponse)[vs[1].(int)]
	}).(GetUserTablesSqlTaskOutputResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskProperties struct {
	// Task input
	Input *GetUserTablesSqlTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlTaskPropertiesInput is an input type that accepts GetUserTablesSqlTaskPropertiesArgs and GetUserTablesSqlTaskPropertiesOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskPropertiesInput` via:
//
//          GetUserTablesSqlTaskPropertiesArgs{...}
type GetUserTablesSqlTaskPropertiesInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput
	ToGetUserTablesSqlTaskPropertiesOutputWithContext(context.Context) GetUserTablesSqlTaskPropertiesOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesArgs struct {
	// Task input
	Input GetUserTablesSqlTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskProperties)(nil)).Elem()
}

func (i GetUserTablesSqlTaskPropertiesArgs) ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput {
	return i.ToGetUserTablesSqlTaskPropertiesOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskPropertiesArgs) ToGetUserTablesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskPropertiesOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskProperties)(nil)).Elem()
}

func (o GetUserTablesSqlTaskPropertiesOutput) ToGetUserTablesSqlTaskPropertiesOutput() GetUserTablesSqlTaskPropertiesOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesOutput) ToGetUserTablesSqlTaskPropertiesOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesOutput {
	return o
}

// Task input
func (o GetUserTablesSqlTaskPropertiesOutput) Input() GetUserTablesSqlTaskInputPtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskProperties) *GetUserTablesSqlTaskInput { return v.Input }).(GetUserTablesSqlTaskInputPtrOutput)
}

// Task type.
// Expected value is 'GetUserTables.Sql'.
func (o GetUserTablesSqlTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *GetUserTablesSqlTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetUserTablesSqlTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlTaskPropertiesInvokeResponseInput is an input type that accepts GetUserTablesSqlTaskPropertiesInvokeResponseArgs and GetUserTablesSqlTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskPropertiesInvokeResponseInput` via:
//
//          GetUserTablesSqlTaskPropertiesInvokeResponseArgs{...}
type GetUserTablesSqlTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskPropertiesInvokeResponseOutput() GetUserTablesSqlTaskPropertiesInvokeResponseOutput
	ToGetUserTablesSqlTaskPropertiesInvokeResponseOutputWithContext(context.Context) GetUserTablesSqlTaskPropertiesInvokeResponseOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetUserTablesSqlTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetUserTablesSqlTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskPropertiesInvokeResponseArgs) ToGetUserTablesSqlTaskPropertiesInvokeResponseOutput() GetUserTablesSqlTaskPropertiesInvokeResponseOutput {
	return i.ToGetUserTablesSqlTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskPropertiesInvokeResponseArgs) ToGetUserTablesSqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) ToGetUserTablesSqlTaskPropertiesInvokeResponseOutput() GetUserTablesSqlTaskPropertiesInvokeResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) ToGetUserTablesSqlTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) Input() GetUserTablesSqlTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) *GetUserTablesSqlTaskInputInvokeResponse {
		return v.Input
	}).(GetUserTablesSqlTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) Output() GetUserTablesSqlTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) []GetUserTablesSqlTaskOutputInvokeResponse {
		return v.Output
	}).(GetUserTablesSqlTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetUserTables.Sql'.
func (o GetUserTablesSqlTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *GetUserTablesSqlTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []GetUserTablesSqlTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType string `pulumi:"taskType"`
}

// GetUserTablesSqlTaskPropertiesResponseInput is an input type that accepts GetUserTablesSqlTaskPropertiesResponseArgs and GetUserTablesSqlTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `GetUserTablesSqlTaskPropertiesResponseInput` via:
//
//          GetUserTablesSqlTaskPropertiesResponseArgs{...}
type GetUserTablesSqlTaskPropertiesResponseInput interface {
	pulumi.Input

	ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput
	ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(context.Context) GetUserTablesSqlTaskPropertiesResponseOutput
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input GetUserTablesSqlTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output GetUserTablesSqlTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'GetUserTables.Sql'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (GetUserTablesSqlTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (i GetUserTablesSqlTaskPropertiesResponseArgs) ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput {
	return i.ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i GetUserTablesSqlTaskPropertiesResponseArgs) ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserTablesSqlTaskPropertiesResponseOutput)
}

// Properties for the task that collects user tables for the given list of databases
type GetUserTablesSqlTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (GetUserTablesSqlTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserTablesSqlTaskPropertiesResponse)(nil)).Elem()
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) ToGetUserTablesSqlTaskPropertiesResponseOutput() GetUserTablesSqlTaskPropertiesResponseOutput {
	return o
}

func (o GetUserTablesSqlTaskPropertiesResponseOutput) ToGetUserTablesSqlTaskPropertiesResponseOutputWithContext(ctx context.Context) GetUserTablesSqlTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o GetUserTablesSqlTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o GetUserTablesSqlTaskPropertiesResponseOutput) Input() GetUserTablesSqlTaskInputResponsePtrOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) *GetUserTablesSqlTaskInputResponse { return v.Input }).(GetUserTablesSqlTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesResponseOutput) Output() GetUserTablesSqlTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) []GetUserTablesSqlTaskOutputResponse { return v.Output }).(GetUserTablesSqlTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o GetUserTablesSqlTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'GetUserTables.Sql'.
func (o GetUserTablesSqlTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserTablesSqlTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfo struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId string `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MiSqlConnectionInfoInput is an input type that accepts MiSqlConnectionInfoArgs and MiSqlConnectionInfoOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoInput` via:
//
//          MiSqlConnectionInfoArgs{...}
type MiSqlConnectionInfoInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput
	ToMiSqlConnectionInfoOutputWithContext(context.Context) MiSqlConnectionInfoOutput
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoArgs struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId pulumi.StringInput `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MiSqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfo)(nil)).Elem()
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput {
	return i.ToMiSqlConnectionInfoOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoOutputWithContext(ctx context.Context) MiSqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoOutput)
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return i.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoArgs) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoOutput).ToMiSqlConnectionInfoPtrOutputWithContext(ctx)
}

// MiSqlConnectionInfoPtrInput is an input type that accepts MiSqlConnectionInfoArgs, MiSqlConnectionInfoPtr and MiSqlConnectionInfoPtrOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoPtrInput` via:
//
//          MiSqlConnectionInfoArgs{...}
//
//  or:
//
//          nil
type MiSqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput
	ToMiSqlConnectionInfoPtrOutputWithContext(context.Context) MiSqlConnectionInfoPtrOutput
}

type miSqlConnectionInfoPtrType MiSqlConnectionInfoArgs

func MiSqlConnectionInfoPtr(v *MiSqlConnectionInfoArgs) MiSqlConnectionInfoPtrInput {
	return (*miSqlConnectionInfoPtrType)(v)
}

func (*miSqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfo)(nil)).Elem()
}

func (i *miSqlConnectionInfoPtrType) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return i.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *miSqlConnectionInfoPtrType) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoPtrOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfo)(nil)).Elem()
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoOutput() MiSqlConnectionInfoOutput {
	return o
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoOutputWithContext(ctx context.Context) MiSqlConnectionInfoOutput {
	return o
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return o.ToMiSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o MiSqlConnectionInfoOutput) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) *MiSqlConnectionInfo {
		return &v
	}).(MiSqlConnectionInfoPtrOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoOutput) ManagedInstanceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) string { return v.ManagedInstanceResourceId }).(pulumi.StringOutput)
}

// Password credential.
func (o MiSqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MiSqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfo)(nil)).Elem()
}

func (o MiSqlConnectionInfoPtrOutput) ToMiSqlConnectionInfoPtrOutput() MiSqlConnectionInfoPtrOutput {
	return o
}

func (o MiSqlConnectionInfoPtrOutput) ToMiSqlConnectionInfoPtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoPtrOutput {
	return o
}

func (o MiSqlConnectionInfoPtrOutput) Elem() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) MiSqlConnectionInfo { return *v }).(MiSqlConnectionInfoOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoPtrOutput) ManagedInstanceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedInstanceResourceId
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o MiSqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MiSqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoInvokeResponse struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId string `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MiSqlConnectionInfoInvokeResponseInput is an input type that accepts MiSqlConnectionInfoInvokeResponseArgs and MiSqlConnectionInfoInvokeResponseOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoInvokeResponseInput` via:
//
//          MiSqlConnectionInfoInvokeResponseArgs{...}
type MiSqlConnectionInfoInvokeResponseInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoInvokeResponseOutput() MiSqlConnectionInfoInvokeResponseOutput
	ToMiSqlConnectionInfoInvokeResponseOutputWithContext(context.Context) MiSqlConnectionInfoInvokeResponseOutput
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoInvokeResponseArgs struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId pulumi.StringInput `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MiSqlConnectionInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i MiSqlConnectionInfoInvokeResponseArgs) ToMiSqlConnectionInfoInvokeResponseOutput() MiSqlConnectionInfoInvokeResponseOutput {
	return i.ToMiSqlConnectionInfoInvokeResponseOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoInvokeResponseArgs) ToMiSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoInvokeResponseOutput)
}

func (i MiSqlConnectionInfoInvokeResponseArgs) ToMiSqlConnectionInfoInvokeResponsePtrOutput() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoInvokeResponseArgs) ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoInvokeResponseOutput).ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx)
}

// MiSqlConnectionInfoInvokeResponsePtrInput is an input type that accepts MiSqlConnectionInfoInvokeResponseArgs, MiSqlConnectionInfoInvokeResponsePtr and MiSqlConnectionInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoInvokeResponsePtrInput` via:
//
//          MiSqlConnectionInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MiSqlConnectionInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoInvokeResponsePtrOutput() MiSqlConnectionInfoInvokeResponsePtrOutput
	ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Context) MiSqlConnectionInfoInvokeResponsePtrOutput
}

type miSqlConnectionInfoInvokeResponsePtrType MiSqlConnectionInfoInvokeResponseArgs

func MiSqlConnectionInfoInvokeResponsePtr(v *MiSqlConnectionInfoInvokeResponseArgs) MiSqlConnectionInfoInvokeResponsePtrInput {
	return (*miSqlConnectionInfoInvokeResponsePtrType)(v)
}

func (*miSqlConnectionInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i *miSqlConnectionInfoInvokeResponsePtrType) ToMiSqlConnectionInfoInvokeResponsePtrOutput() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *miSqlConnectionInfoInvokeResponsePtrType) ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoInvokeResponsePtrOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoInvokeResponseOutput) ToMiSqlConnectionInfoInvokeResponseOutput() MiSqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o MiSqlConnectionInfoInvokeResponseOutput) ToMiSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o MiSqlConnectionInfoInvokeResponseOutput) ToMiSqlConnectionInfoInvokeResponsePtrOutput() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MiSqlConnectionInfoInvokeResponseOutput) ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoInvokeResponse) *MiSqlConnectionInfoInvokeResponse {
		return &v
	}).(MiSqlConnectionInfoInvokeResponsePtrOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoInvokeResponseOutput) ManagedInstanceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoInvokeResponse) string { return v.ManagedInstanceResourceId }).(pulumi.StringOutput)
}

// Password credential.
func (o MiSqlConnectionInfoInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MiSqlConnectionInfoInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoInvokeResponsePtrOutput) ToMiSqlConnectionInfoInvokeResponsePtrOutput() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoInvokeResponsePtrOutput) ToMiSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoInvokeResponsePtrOutput) Elem() MiSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoInvokeResponse) MiSqlConnectionInfoInvokeResponse { return *v }).(MiSqlConnectionInfoInvokeResponseOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoInvokeResponsePtrOutput) ManagedInstanceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedInstanceResourceId
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o MiSqlConnectionInfoInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MiSqlConnectionInfoInvokeResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoResponse struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId string `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MiSqlConnectionInfoResponseInput is an input type that accepts MiSqlConnectionInfoResponseArgs and MiSqlConnectionInfoResponseOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoResponseInput` via:
//
//          MiSqlConnectionInfoResponseArgs{...}
type MiSqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput
	ToMiSqlConnectionInfoResponseOutputWithContext(context.Context) MiSqlConnectionInfoResponseOutput
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoResponseArgs struct {
	// Resource id for Azure SQL database Managed instance
	ManagedInstanceResourceId pulumi.StringInput `pulumi:"managedInstanceResourceId"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Type of connection info
	// Expected value is 'MiSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MiSqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput {
	return i.ToMiSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponseOutput)
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return i.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i MiSqlConnectionInfoResponseArgs) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponseOutput).ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}

// MiSqlConnectionInfoResponsePtrInput is an input type that accepts MiSqlConnectionInfoResponseArgs, MiSqlConnectionInfoResponsePtr and MiSqlConnectionInfoResponsePtrOutput values.
// You can construct a concrete instance of `MiSqlConnectionInfoResponsePtrInput` via:
//
//          MiSqlConnectionInfoResponseArgs{...}
//
//  or:
//
//          nil
type MiSqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput
	ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Context) MiSqlConnectionInfoResponsePtrOutput
}

type miSqlConnectionInfoResponsePtrType MiSqlConnectionInfoResponseArgs

func MiSqlConnectionInfoResponsePtr(v *MiSqlConnectionInfoResponseArgs) MiSqlConnectionInfoResponsePtrInput {
	return (*miSqlConnectionInfoResponsePtrType)(v)
}

func (*miSqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (i *miSqlConnectionInfoResponsePtrType) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return i.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *miSqlConnectionInfoResponsePtrType) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MiSqlConnectionInfoResponsePtrOutput)
}

// Properties required to create a connection to Azure SQL database Managed instance
type MiSqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponseOutput() MiSqlConnectionInfoResponseOutput {
	return o
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponseOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponseOutput {
	return o
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return o.ToMiSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o MiSqlConnectionInfoResponseOutput) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) *MiSqlConnectionInfoResponse {
		return &v
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoResponseOutput) ManagedInstanceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) string { return v.ManagedInstanceResourceId }).(pulumi.StringOutput)
}

// Password credential.
func (o MiSqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MiSqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MiSqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MiSqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MiSqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MiSqlConnectionInfoResponse)(nil)).Elem()
}

func (o MiSqlConnectionInfoResponsePtrOutput) ToMiSqlConnectionInfoResponsePtrOutput() MiSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoResponsePtrOutput) ToMiSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MiSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MiSqlConnectionInfoResponsePtrOutput) Elem() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) MiSqlConnectionInfoResponse { return *v }).(MiSqlConnectionInfoResponseOutput)
}

// Resource id for Azure SQL database Managed instance
func (o MiSqlConnectionInfoResponsePtrOutput) ManagedInstanceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedInstanceResourceId
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o MiSqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MiSqlConnectionInfo'.
func (o MiSqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MiSqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MiSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputInvokeResponse struct {
	// Name of managed instance database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}

// MigrateMISyncCompleteCommandInputInvokeResponseInput is an input type that accepts MigrateMISyncCompleteCommandInputInvokeResponseArgs and MigrateMISyncCompleteCommandInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandInputInvokeResponseInput` via:
//
//          MigrateMISyncCompleteCommandInputInvokeResponseArgs{...}
type MigrateMISyncCompleteCommandInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputInvokeResponseOutput() MigrateMISyncCompleteCommandInputInvokeResponseOutput
	ToMigrateMISyncCompleteCommandInputInvokeResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputInvokeResponseOutput
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputInvokeResponseArgs struct {
	// Name of managed instance database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (MigrateMISyncCompleteCommandInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandInputInvokeResponseArgs) ToMigrateMISyncCompleteCommandInputInvokeResponseOutput() MigrateMISyncCompleteCommandInputInvokeResponseOutput {
	return i.ToMigrateMISyncCompleteCommandInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputInvokeResponseArgs) ToMigrateMISyncCompleteCommandInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputInvokeResponseOutput)
}

func (i MigrateMISyncCompleteCommandInputInvokeResponseArgs) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutput() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputInvokeResponseArgs) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputInvokeResponseOutput).ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateMISyncCompleteCommandInputInvokeResponsePtrInput is an input type that accepts MigrateMISyncCompleteCommandInputInvokeResponseArgs, MigrateMISyncCompleteCommandInputInvokeResponsePtr and MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandInputInvokeResponsePtrInput` via:
//
//          MigrateMISyncCompleteCommandInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateMISyncCompleteCommandInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutput() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput
	ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput
}

type migrateMISyncCompleteCommandInputInvokeResponsePtrType MigrateMISyncCompleteCommandInputInvokeResponseArgs

func MigrateMISyncCompleteCommandInputInvokeResponsePtr(v *MigrateMISyncCompleteCommandInputInvokeResponseArgs) MigrateMISyncCompleteCommandInputInvokeResponsePtrInput {
	return (*migrateMISyncCompleteCommandInputInvokeResponsePtrType)(v)
}

func (*migrateMISyncCompleteCommandInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (i *migrateMISyncCompleteCommandInputInvokeResponsePtrType) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutput() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMISyncCompleteCommandInputInvokeResponsePtrType) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputInvokeResponseOutput) ToMigrateMISyncCompleteCommandInputInvokeResponseOutput() MigrateMISyncCompleteCommandInputInvokeResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputInvokeResponseOutput) ToMigrateMISyncCompleteCommandInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputInvokeResponseOutput) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutput() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMISyncCompleteCommandInputInvokeResponseOutput) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandInputInvokeResponse) *MigrateMISyncCompleteCommandInputInvokeResponse {
		return &v
	}).(MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Name of managed instance database
func (o MigrateMISyncCompleteCommandInputInvokeResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandInputInvokeResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutput() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput) ToMigrateMISyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput) Elem() MigrateMISyncCompleteCommandInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputInvokeResponse) MigrateMISyncCompleteCommandInputInvokeResponse {
		return *v
	}).(MigrateMISyncCompleteCommandInputInvokeResponseOutput)
}

// Name of managed instance database
func (o MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputResponse struct {
	// Name of managed instance database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
}

// MigrateMISyncCompleteCommandInputResponseInput is an input type that accepts MigrateMISyncCompleteCommandInputResponseArgs and MigrateMISyncCompleteCommandInputResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandInputResponseInput` via:
//
//          MigrateMISyncCompleteCommandInputResponseArgs{...}
type MigrateMISyncCompleteCommandInputResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput
	ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputResponseOutput
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputResponseArgs struct {
	// Name of managed instance database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
}

func (MigrateMISyncCompleteCommandInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponseOutput)
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandInputResponseArgs) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponseOutput).ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx)
}

// MigrateMISyncCompleteCommandInputResponsePtrInput is an input type that accepts MigrateMISyncCompleteCommandInputResponseArgs, MigrateMISyncCompleteCommandInputResponsePtr and MigrateMISyncCompleteCommandInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandInputResponsePtrInput` via:
//
//          MigrateMISyncCompleteCommandInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateMISyncCompleteCommandInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput
	ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput
}

type migrateMISyncCompleteCommandInputResponsePtrType MigrateMISyncCompleteCommandInputResponseArgs

func MigrateMISyncCompleteCommandInputResponsePtr(v *MigrateMISyncCompleteCommandInputResponseArgs) MigrateMISyncCompleteCommandInputResponsePtrInput {
	return (*migrateMISyncCompleteCommandInputResponsePtrType)(v)
}

func (*migrateMISyncCompleteCommandInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i *migrateMISyncCompleteCommandInputResponsePtrType) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMISyncCompleteCommandInputResponsePtrType) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

// Input for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponseOutput() MigrateMISyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMISyncCompleteCommandInputResponseOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandInputResponse) *MigrateMISyncCompleteCommandInputResponse {
		return &v
	}).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

// Name of managed instance database
func (o MigrateMISyncCompleteCommandInputResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandInputResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

type MigrateMISyncCompleteCommandInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMISyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutput() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) ToMigrateMISyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) Elem() MigrateMISyncCompleteCommandInputResponseOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputResponse) MigrateMISyncCompleteCommandInputResponse {
		return *v
	}).(MigrateMISyncCompleteCommandInputResponseOutput)
}

// Name of managed instance database
func (o MigrateMISyncCompleteCommandInputResponsePtrOutput) SourceDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateMISyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SourceDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputInvokeResponse struct {
	// List of errors that happened during the command execution
	Errors []ReportableExceptionInvokeResponse `pulumi:"errors"`
}

// MigrateMISyncCompleteCommandOutputInvokeResponseInput is an input type that accepts MigrateMISyncCompleteCommandOutputInvokeResponseArgs and MigrateMISyncCompleteCommandOutputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandOutputInvokeResponseInput` via:
//
//          MigrateMISyncCompleteCommandOutputInvokeResponseArgs{...}
type MigrateMISyncCompleteCommandOutputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandOutputInvokeResponseOutput() MigrateMISyncCompleteCommandOutputInvokeResponseOutput
	ToMigrateMISyncCompleteCommandOutputInvokeResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandOutputInvokeResponseOutput
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputInvokeResponseArgs struct {
	// List of errors that happened during the command execution
	Errors ReportableExceptionInvokeResponseArrayInput `pulumi:"errors"`
}

func (MigrateMISyncCompleteCommandOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputInvokeResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandOutputInvokeResponseArgs) ToMigrateMISyncCompleteCommandOutputInvokeResponseOutput() MigrateMISyncCompleteCommandOutputInvokeResponseOutput {
	return i.ToMigrateMISyncCompleteCommandOutputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandOutputInvokeResponseArgs) ToMigrateMISyncCompleteCommandOutputInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandOutputInvokeResponseOutput)
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputInvokeResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandOutputInvokeResponseOutput) ToMigrateMISyncCompleteCommandOutputInvokeResponseOutput() MigrateMISyncCompleteCommandOutputInvokeResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandOutputInvokeResponseOutput) ToMigrateMISyncCompleteCommandOutputInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputInvokeResponseOutput {
	return o
}

// List of errors that happened during the command execution
func (o MigrateMISyncCompleteCommandOutputInvokeResponseOutput) Errors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.Errors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputResponse struct {
	// List of errors that happened during the command execution
	Errors []ReportableExceptionResponse `pulumi:"errors"`
}

// MigrateMISyncCompleteCommandOutputResponseInput is an input type that accepts MigrateMISyncCompleteCommandOutputResponseArgs and MigrateMISyncCompleteCommandOutputResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandOutputResponseInput` via:
//
//          MigrateMISyncCompleteCommandOutputResponseArgs{...}
type MigrateMISyncCompleteCommandOutputResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput
	ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandOutputResponseOutput
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputResponseArgs struct {
	// List of errors that happened during the command execution
	Errors ReportableExceptionResponseArrayInput `pulumi:"errors"`
}

func (MigrateMISyncCompleteCommandOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandOutputResponseArgs) ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput {
	return i.ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandOutputResponseArgs) ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandOutputResponseOutput)
}

// Output for command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandOutputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandOutputResponseOutput) ToMigrateMISyncCompleteCommandOutputResponseOutput() MigrateMISyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandOutputResponseOutput) ToMigrateMISyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandOutputResponseOutput {
	return o
}

// List of errors that happened during the command execution
func (o MigrateMISyncCompleteCommandOutputResponseOutput) Errors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandOutputResponse) []ReportableExceptionResponse { return v.Errors }).(ReportableExceptionResponseArrayOutput)
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesInvokeResponse struct {
	// Command type.
	// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
	CommandType string `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Command input
	Input *MigrateMISyncCompleteCommandInputInvokeResponse `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateMISyncCompleteCommandOutputInvokeResponse `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State string `pulumi:"state"`
}

// MigrateMISyncCompleteCommandPropertiesInvokeResponseInput is an input type that accepts MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs and MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandPropertiesInvokeResponseInput` via:
//
//          MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs{...}
type MigrateMISyncCompleteCommandPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutput() MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput
	ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs struct {
	// Command type.
	// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Command input
	Input MigrateMISyncCompleteCommandInputInvokeResponsePtrInput `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateMISyncCompleteCommandOutputInvokeResponseInput `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs) ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutput() MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput {
	return i.ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandPropertiesInvokeResponseArgs) ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput)
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutput() MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) ToMigrateMISyncCompleteCommandPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput {
	return o
}

// Command type.
// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesInvokeResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Command input
func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) Input() MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesInvokeResponse) *MigrateMISyncCompleteCommandInputInvokeResponse {
		return v.Input
	}).(MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Command output. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) Output() MigrateMISyncCompleteCommandOutputInvokeResponseOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesInvokeResponse) MigrateMISyncCompleteCommandOutputInvokeResponse {
		return v.Output
	}).(MigrateMISyncCompleteCommandOutputInvokeResponseOutput)
}

// The state of the command. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesResponse struct {
	// Command type.
	// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
	CommandType string `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Command input
	Input *MigrateMISyncCompleteCommandInputResponse `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateMISyncCompleteCommandOutputResponse `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State string `pulumi:"state"`
}

// MigrateMISyncCompleteCommandPropertiesResponseInput is an input type that accepts MigrateMISyncCompleteCommandPropertiesResponseArgs and MigrateMISyncCompleteCommandPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateMISyncCompleteCommandPropertiesResponseInput` via:
//
//          MigrateMISyncCompleteCommandPropertiesResponseArgs{...}
type MigrateMISyncCompleteCommandPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput
	ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesResponseArgs struct {
	// Command type.
	// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Command input
	Input MigrateMISyncCompleteCommandInputResponsePtrInput `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateMISyncCompleteCommandOutputResponseInput `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateMISyncCompleteCommandPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (i MigrateMISyncCompleteCommandPropertiesResponseArgs) ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return i.ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateMISyncCompleteCommandPropertiesResponseArgs) ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMISyncCompleteCommandPropertiesResponseOutput)
}

// Properties for the command that completes online migration for an Azure SQL Database Managed Instance.
type MigrateMISyncCompleteCommandPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateMISyncCompleteCommandPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMISyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) ToMigrateMISyncCompleteCommandPropertiesResponseOutput() MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) ToMigrateMISyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateMISyncCompleteCommandPropertiesResponseOutput {
	return o
}

// Command type.
// Expected value is 'Migrate.SqlServer.AzureDbSqlMi.Complete'.
func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Command input
func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Input() MigrateMISyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) *MigrateMISyncCompleteCommandInputResponse {
		return v.Input
	}).(MigrateMISyncCompleteCommandInputResponsePtrOutput)
}

// Command output. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) Output() MigrateMISyncCompleteCommandOutputResponseOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) MigrateMISyncCompleteCommandOutputResponse {
		return v.Output
	}).(MigrateMISyncCompleteCommandOutputResponseOutput)
}

// The state of the command. This is ignored if submitted.
func (o MigrateMISyncCompleteCommandPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMISyncCompleteCommandPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInput struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs and MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs{...}
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput)
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray and MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray{ MigrateMySqlAzureDbForMySqlSyncDatabaseInputArgs{...} }
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInput

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInput) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		return vs[0].([]MigrateMySqlAzureDbForMySqlSyncDatabaseInput)[vs[1].(int)]
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput)
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray and MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray{ MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArgs{...} }
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseInput

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse) *string {
		return v.TargetDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse {
		return vs[0].([]MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse)[vs[1].(int)]
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs and MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput)
}

// MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray and MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray{ MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArgs{...} }
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput
	ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseInput

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArray) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

// Database specific information for MySQL to Azure Database for MySQL migration task inputs
type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) ToMigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		return vs[0].([]MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInput struct {
	// Databases to migrate
	SelectedDatabases []MigrateMySqlAzureDbForMySqlSyncDatabaseInput `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputArgs and MigrateMySqlAzureDbForMySqlSyncTaskInputOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskInputInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput)
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput).ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx)
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputArgs, MigrateMySqlAzureDbForMySqlSyncTaskInputPtr and MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput
}

type migrateMySqlAzureDbForMySqlSyncTaskInputPtrType MigrateMySqlAzureDbForMySqlSyncTaskInputArgs

func MigrateMySqlAzureDbForMySqlSyncTaskInputPtr(v *MigrateMySqlAzureDbForMySqlSyncTaskInputArgs) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput {
	return (*migrateMySqlAzureDbForMySqlSyncTaskInputPtrType)(v)
}

func (*migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputPtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) *MigrateMySqlAzureDbForMySqlSyncTaskInput {
		return &v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) []MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) SourceConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) MySqlConnectionInfo { return v.SourceConnectionInfo }).(MySqlConnectionInfoOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputOutput) TargetConnectionInfo() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInput) MySqlConnectionInfo { return v.TargetConnectionInfo }).(MySqlConnectionInfoOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInput)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) Elem() MigrateMySqlAzureDbForMySqlSyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) MigrateMySqlAzureDbForMySqlSyncTaskInput { return *v }).(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) []MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) SourceConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput) TargetConnectionInfo() MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInput) *MySqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoPtrOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput)
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput).ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs, MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtr and MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput
}

type migrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrType MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs

func MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtr(v *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseArgs) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrInput {
	return (*migrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrType)(v)
}

func (*migrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse {
		return &v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() MySqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) MySqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoInvokeResponseOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() MySqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) MySqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) Elem() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse {
		return *v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) *MySqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse) *MySqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source MySQL
	SourceConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for MySQL
	TargetConnectionInfo MySqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput)
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput).ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs, MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtr and MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput
}

type migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs

func MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtr(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponseArgs) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput {
	return (*migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType)(v)
}

func (*migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrType) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

// Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		return &v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) SourceConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MySqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput) TargetConnectionInfo() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MySqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateMySqlAzureDbForMySqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) Elem() MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		return *v
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput)
}

// Databases to migrate
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) []MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput)
}

// Connection information for source MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

// Connection information for target Azure Database for MySQL
func (o MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse) *MySqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MySqlConnectionInfoResponsePtrOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventInvokeResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventInvokeResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

// Error message
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse) *string {
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) Events() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse) []SyncMigrationDatabaseErrorEventInvokeResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

// Error message
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Number of applied changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.MigrationState
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

// Number of applied changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) ReportableExceptionResponse {
		return v.Error
	}).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Migration end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Source server name
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServer
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

// Target server name
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServer
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

// Migration end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server name
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.SourceServer }).(pulumi.StringOutput)
}

// Source server version
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Target server name
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string { return v.TargetServer }).(pulumi.StringOutput)
}

// Target server version
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse struct {
	// Number of applied deletes
	CdcDeleteCounter string `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter string `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter string `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.StringInput `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.StringInput `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.StringInput `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

// Number of applied deletes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.CdcDeleteCounter
	}).(pulumi.StringOutput)
}

// Number of applied inserts
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcInsertCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.CdcInsertCounter
	}).(pulumi.StringOutput)
}

// Number of applied updates
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.CdcUpdateCounter
	}).(pulumi.StringOutput)
}

// Number of data errors occurred
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Full load end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadEndedOn
	}).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

// Full load start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadStartedOn
	}).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.LastModifiedTime
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of the table
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) string { return v.TableName }).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse struct {
	// Number of applied deletes
	CdcDeleteCounter string `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter string `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter string `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.StringInput `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.StringInput `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.StringInput `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput)
}

type MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

// Number of applied deletes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcDeleteCounter }).(pulumi.StringOutput)
}

// Number of applied inserts
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcInsertCounter }).(pulumi.StringOutput)
}

// Number of applied updates
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.CdcUpdateCounter }).(pulumi.StringOutput)
}

// Number of data errors occurred
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Full load end time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.FullLoadEndedOn }).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

// Full load start time
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.FullLoadStartedOn }).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of the table
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) string { return v.TableName }).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskProperties struct {
	// Task input
	Input *MigrateMySqlAzureDbForMySqlSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs and MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs struct {
	// Task input
	Input MigrateMySqlAzureDbForMySqlSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskProperties)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskProperties)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) Input() MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskProperties) *MigrateMySqlAzureDbForMySqlSyncTaskInput {
		return v.Input
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) Input() MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponse {
		return v.Input
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseInput is an input type that accepts MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs and MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseInput` via:
//
//          MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs{...}
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput
	ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return i.ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseArgs) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput)
}

// Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
type MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput() MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) ToMigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Input() MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) *MigrateMySqlAzureDbForMySqlSyncTaskInputResponse {
		return v.Input
	}).(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.MySql.AzureDbForMySql.Sync'.
func (o MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray{ MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArgs{...} }
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray{ MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArgs{...} }
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse) *string {
		return v.TargetDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse struct {
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs struct {
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray and MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray{ MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArgs{...} }
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseInput

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArray) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

// Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return o
}

// Migration settings which tune the migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.SourceSetting
	}).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) *string {
		return v.TargetDatabaseName
	}).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse) map[string]string {
		return v.TargetSetting
	}).(pulumi.StringMapOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		return vs[0].([]MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput struct {
	// Databases to migrate
	SelectedDatabases []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs struct {
	// Databases to migrate
	SelectedDatabases MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput)
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput).ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs, MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtr and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput
}

type migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs

func MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtr(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputArgs) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput {
	return (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType)(v)
}

func (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		return &v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) SourceConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput) TargetConnectionInfo() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) PostgreSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) Elem() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		return *v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput) *PostgreSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse struct {
	// Databases to migrate
	SelectedDatabases []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput)
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput).ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs, MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtr and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput
}

type migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs

func MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtr(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseArgs) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput {
	return (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType)(v)
}

func (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return &v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) PostgreSqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) PostgreSqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) Elem() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return *v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse struct {
	// Databases to migrate
	SelectedDatabases []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source PostgreSQL
	SourceConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Connection information for target Azure Database for PostgreSQL
	TargetConnectionInfo PostgreSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput).ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs, MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtr and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput
}

type migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs

func MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtr(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseArgs) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput {
	return (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType)(v)
}

func (*migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrType) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		return &v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) PostgreSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) Elem() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		return *v
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput)
}

// Databases to migrate
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SelectedDatabases() MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) []MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput)
}

// Connection information for source PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) SourceConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Connection information for target Azure Database for PostgreSQL
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput) TargetConnectionInfo() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse) *PostgreSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventInvokeResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventInvokeResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

// Error message
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse) *string {
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) Events() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse) []SyncMigrationDatabaseErrorEventInvokeResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

// Error message
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) *string {
		return v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Number of applied changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Migration end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.Latency
	}).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.MigrationState
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

// Number of applied changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Migration end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.Latency
	}).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.MigrationState
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) ReportableExceptionResponse {
		return v.Error
	}).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Migration end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Source server name
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServer
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

// Target server name
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServer
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

// Migration end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Source server name
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServer
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

// Target server name
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServer
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse struct {
	// Number of applied deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

// Number of applied deletes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of applied inserts
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of applied updates
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Number of data errors occurred
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Full load end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadEndedOn
	}).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

// Full load start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadStartedOn
	}).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.LastModifiedTime
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.State
	}).(pulumi.StringOutput)
}

// Name of the table
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse struct {
	// Number of applied deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput)
}

type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput {
	return o
}

// Number of applied deletes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of applied inserts
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of applied updates
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Number of data errors occurred
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// Full load end time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEndedOn
	}).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

// Full load start time
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.FullLoadStartedOn
	}).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.LastModifiedTime
	}).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of the table
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties struct {
	// Task input
	Input *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs struct {
	// Task input
	Input MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) Input() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
		return v.Input
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Input() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponse {
		return v.Input
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) []interface{} {
		return v.Output
	}).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponse) string {
		return v.TaskType
	}).(pulumi.StringOutput)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseInput is an input type that accepts MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs and MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseInput` via:
//
//          MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs{...}
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
	ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return i.ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseArgs) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput)
}

// Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
type MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) ToMigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Input() MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) *MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponse {
		return v.Input
	}).(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync'.
func (o MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInput struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly *bool `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
}

// MigrateSqlServerSqlDbDatabaseInputInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputArgs and MigrateSqlServerSqlDbDatabaseInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputArgs{...}
type MigrateSqlServerSqlDbDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput
	ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputOutput
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputArgs struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly pulumi.BoolPtrInput `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputArgs) ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputArgs) ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputOutput)
}

// MigrateSqlServerSqlDbDatabaseInputArrayInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputArray and MigrateSqlServerSqlDbDatabaseInputArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputArrayInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputArray{ MigrateSqlServerSqlDbDatabaseInputArgs{...} }
type MigrateSqlServerSqlDbDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput
	ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput
}

type MigrateSqlServerSqlDbDatabaseInputArray []MigrateSqlServerSqlDbDatabaseInputInput

func (MigrateSqlServerSqlDbDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputArray) ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputArray) ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) ToMigrateSqlServerSqlDbDatabaseInputOutput() MigrateSqlServerSqlDbDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputOutput) ToMigrateSqlServerSqlDbDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputOutput {
	return o
}

// Whether to set database read only before migration
func (o MigrateSqlServerSqlDbDatabaseInputOutput) MakeSourceDbReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *bool { return v.MakeSourceDbReadOnly }).(pulumi.BoolPtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlDbDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateSqlServerSqlDbDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

type MigrateSqlServerSqlDbDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputArrayOutput() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlDbDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbDatabaseInputOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputInvokeResponse struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly *bool `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
}

// MigrateSqlServerSqlDbDatabaseInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs and MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs{...}
type MigrateSqlServerSqlDbDatabaseInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput
	ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly pulumi.BoolPtrInput `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput)
}

// MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray and MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray{ MigrateSqlServerSqlDbDatabaseInputInvokeResponseArgs{...} }
type MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput
	ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput
}

type MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray []MigrateSqlServerSqlDbDatabaseInputInvokeResponseInput

func (MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput {
	return o
}

// Whether to set database read only before migration
func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) MakeSourceDbReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputInvokeResponse) *bool { return v.MakeSourceDbReadOnly }).(pulumi.BoolPtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputInvokeResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputInvokeResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

type MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbDatabaseInputInvokeResponse {
		return vs[0].([]MigrateSqlServerSqlDbDatabaseInputInvokeResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputResponse struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly *bool `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name *string `pulumi:"name"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
}

// MigrateSqlServerSqlDbDatabaseInputResponseInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputResponseArgs and MigrateSqlServerSqlDbDatabaseInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputResponseInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputResponseArgs{...}
type MigrateSqlServerSqlDbDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput
	ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputResponseArgs struct {
	// Whether to set database read only before migration
	MakeSourceDbReadOnly pulumi.BoolPtrInput `pulumi:"makeSourceDbReadOnly"`
	// Name of the database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Name of target database. Note: Target database will be truncated before starting migration.
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputResponseOutput)
}

// MigrateSqlServerSqlDbDatabaseInputResponseArrayInput is an input type that accepts MigrateSqlServerSqlDbDatabaseInputResponseArray and MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbDatabaseInputResponseArrayInput` via:
//
//          MigrateSqlServerSqlDbDatabaseInputResponseArray{ MigrateSqlServerSqlDbDatabaseInputResponseArgs{...} }
type MigrateSqlServerSqlDbDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlDbDatabaseInputResponseArray []MigrateSqlServerSqlDbDatabaseInputResponseInput

func (MigrateSqlServerSqlDbDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArray) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbDatabaseInputResponseArray) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB migration task inputs
type MigrateSqlServerSqlDbDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseOutput() MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return o
}

// Whether to set database read only before migration
func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) MakeSourceDbReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *bool { return v.MakeSourceDbReadOnly }).(pulumi.BoolPtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Name of target database. Note: Target database will be truncated before starting migration.
func (o MigrateSqlServerSqlDbDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

type MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlDbDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbDatabaseInputResponseOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInput struct {
	// Unique identifier for database
	Id *string `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of database
	Name *string `pulumi:"name"`
	// Schema name to be migrated
	SchemaName *string `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateSqlServerSqlDbSyncDatabaseInputInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputArgs and MigrateSqlServerSqlDbSyncDatabaseInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputArgs{...}
type MigrateSqlServerSqlDbSyncDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputArgs struct {
	// Unique identifier for database
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Schema name to be migrated
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateSqlServerSqlDbSyncDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputOutput)
}

// MigrateSqlServerSqlDbSyncDatabaseInputArrayInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputArray and MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputArrayInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputArray{ MigrateSqlServerSqlDbSyncDatabaseInputArgs{...} }
type MigrateSqlServerSqlDbSyncDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputArray []MigrateSqlServerSqlDbSyncDatabaseInputInput

func (MigrateSqlServerSqlDbSyncDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArray) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputArray) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputOutput() MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return o
}

// Unique identifier for database
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Migration settings which tune the migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

// Name of database
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Schema name to be migrated
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Target database name
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInput) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbSyncDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbSyncDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlDbSyncDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbSyncDatabaseInputOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse struct {
	// Unique identifier for database
	Id *string `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of database
	Name *string `pulumi:"name"`
	// Schema name to be migrated
	SchemaName *string `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs and MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs struct {
	// Unique identifier for database
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Schema name to be migrated
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput)
}

// MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray and MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray{ MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArgs{...} }
type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseInput

func (MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput {
	return o
}

// Unique identifier for database
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Migration settings which tune the migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) map[string]string {
		return v.MigrationSetting
	}).(pulumi.StringMapOutput)
}

// Name of database
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Schema name to be migrated
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Target database name
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse {
		return vs[0].([]MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputResponse struct {
	// Unique identifier for database
	Id *string `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting map[string]string `pulumi:"migrationSetting"`
	// Name of database
	Name *string `pulumi:"name"`
	// Schema name to be migrated
	SchemaName *string `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting map[string]string `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap map[string]string `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName *string `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting map[string]string `pulumi:"targetSetting"`
}

// MigrateSqlServerSqlDbSyncDatabaseInputResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs and MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs{...}
type MigrateSqlServerSqlDbSyncDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs struct {
	// Unique identifier for database
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Migration settings which tune the migration behavior
	MigrationSetting pulumi.StringMapInput `pulumi:"migrationSetting"`
	// Name of database
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Schema name to be migrated
	SchemaName pulumi.StringPtrInput `pulumi:"schemaName"`
	// Source settings to tune source endpoint migration behavior
	SourceSetting pulumi.StringMapInput `pulumi:"sourceSetting"`
	// Mapping of source to target tables
	TableMap pulumi.StringMapInput `pulumi:"tableMap"`
	// Target database name
	TargetDatabaseName pulumi.StringPtrInput `pulumi:"targetDatabaseName"`
	// Target settings to tune target endpoint migration behavior
	TargetSetting pulumi.StringMapInput `pulumi:"targetSetting"`
}

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput)
}

// MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput is an input type that accepts MigrateSqlServerSqlDbSyncDatabaseInputResponseArray and MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput` via:
//
//          MigrateSqlServerSqlDbSyncDatabaseInputResponseArray{ MigrateSqlServerSqlDbSyncDatabaseInputResponseArgs{...} }
type MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseArray []MigrateSqlServerSqlDbSyncDatabaseInputResponseInput

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncDatabaseInputResponseArray) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB sync migration task inputs
type MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return o
}

// Unique identifier for database
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Migration settings which tune the migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) MigrationSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.MigrationSetting }).(pulumi.StringMapOutput)
}

// Name of database
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Schema name to be migrated
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) SchemaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.SchemaName }).(pulumi.StringPtrOutput)
}

// Source settings to tune source endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) SourceSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.SourceSetting }).(pulumi.StringMapOutput)
}

// Mapping of source to target tables
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TableMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.TableMap }).(pulumi.StringMapOutput)
}

// Target database name
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TargetDatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) *string { return v.TargetDatabaseName }).(pulumi.StringPtrOutput)
}

// Target settings to tune target endpoint migration behavior
func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput) TargetSetting() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncDatabaseInputResponse) map[string]string { return v.TargetSetting }).(pulumi.StringMapOutput)
}

type MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlDbSyncDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlDbSyncDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInput struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions *MigrationValidationOptions `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbSyncTaskInputInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputArgs and MigrateSqlServerSqlDbSyncTaskInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputArgs{...}
type MigrateSqlServerSqlDbSyncTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput
	ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions MigrationValidationOptionsPtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbSyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputOutput)
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputArgs) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputOutput).ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbSyncTaskInputPtrInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputArgs, MigrateSqlServerSqlDbSyncTaskInputPtr and MigrateSqlServerSqlDbSyncTaskInputPtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputPtrInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbSyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput
	ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput
}

type migrateSqlServerSqlDbSyncTaskInputPtrType MigrateSqlServerSqlDbSyncTaskInputArgs

func MigrateSqlServerSqlDbSyncTaskInputPtr(v *MigrateSqlServerSqlDbSyncTaskInputArgs) MigrateSqlServerSqlDbSyncTaskInputPtrInput {
	return (*migrateSqlServerSqlDbSyncTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlDbSyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbSyncTaskInputPtrType) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbSyncTaskInputPtrType) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputOutput() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) *MigrateSqlServerSqlDbSyncTaskInput {
		return &v
	}).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInput) *MigrationValidationOptions { return v.ValidationOptions }).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutput() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) Elem() MigrateSqlServerSqlDbSyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) MigrateSqlServerSqlDbSyncTaskInput { return *v }).(MigrateSqlServerSqlDbSyncTaskInputOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputPtrOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInput) *MigrationValidationOptions {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsPtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputInvokeResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions *MigrationValidationOptionsInvokeResponse `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbSyncTaskInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions MigrationValidationOptionsInvokeResponsePtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput)
}

func (i MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput).ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs, MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtr and MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput
	ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput
}

type migrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrType MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs

func MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtr(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponseArgs) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrInput {
	return (*migrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse {
		return &v
	}).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput) ValidationOptions() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) *MigrationValidationOptionsInvokeResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) Elem() MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) MigrateSqlServerSqlDbSyncTaskInputInvokeResponse {
		return *v
	}).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput) ValidationOptions() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse) *MigrationValidationOptionsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions *MigrationValidationOptionsResponse `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbSyncTaskInputResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputResponseArgs and MigrateSqlServerSqlDbSyncTaskInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
	// Validation options
	ValidationOptions MigrationValidationOptionsResponsePtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskInputResponseArgs) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput).ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskInputResponseArgs, MigrateSqlServerSqlDbSyncTaskInputResponsePtr and MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput
}

type migrateSqlServerSqlDbSyncTaskInputResponsePtrType MigrateSqlServerSqlDbSyncTaskInputResponseArgs

func MigrateSqlServerSqlDbSyncTaskInputResponsePtr(v *MigrateSqlServerSqlDbSyncTaskInputResponseArgs) MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlDbSyncTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbSyncTaskInputResponsePtrType) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutput() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrateSqlServerSqlDbSyncTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputResponseOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrationValidationOptionsResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbSyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbSyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlDbSyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) MigrateSqlServerSqlDbSyncTaskInputResponse {
		return *v
	}).(MigrateSqlServerSqlDbSyncTaskInputResponseOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Validation options
func (o MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbSyncTaskInputResponse) *MigrationValidationOptionsResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventInvokeResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventInvokeResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput {
	return o
}

// Error message
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) Events() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse) []SyncMigrationDatabaseErrorEventInvokeResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse struct {
	// Error message
	ErrorMessage *string `pulumi:"errorMessage"`
	// List of error events.
	Events []SyncMigrationDatabaseErrorEventResponse `pulumi:"events"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs struct {
	// Error message
	ErrorMessage pulumi.StringPtrInput `pulumi:"errorMessage"`
	// List of error events.
	Events SyncMigrationDatabaseErrorEventResponseArrayInput `pulumi:"events"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'DatabaseLevelErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput {
	return o
}

// Error message
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) *string { return v.ErrorMessage }).(pulumi.StringPtrOutput)
}

// List of error events.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) Events() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) []SyncMigrationDatabaseErrorEventResponse {
		return v.Events
	}).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelErrorOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Number of applied changes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.AppliedChanges
	}).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcDeleteCounter
	}).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcInsertCounter
	}).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.CdcUpdateCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.IncomingChanges
	}).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse struct {
	// Number of applied changes
	AppliedChanges float64 `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables float64 `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables float64 `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables float64 `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables float64 `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges float64 `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted bool `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency float64 `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs struct {
	// Number of applied changes
	AppliedChanges pulumi.Float64Input `pulumi:"appliedChanges"`
	// Number of cdc deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of cdc inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of cdc updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of tables completed in full load
	FullLoadCompletedTables pulumi.Float64Input `pulumi:"fullLoadCompletedTables"`
	// Number of tables errored in full load
	FullLoadErroredTables pulumi.Float64Input `pulumi:"fullLoadErroredTables"`
	// Number of tables loading in full load
	FullLoadLoadingTables pulumi.Float64Input `pulumi:"fullLoadLoadingTables"`
	// Number of tables queued in full load
	FullLoadQueuedTables pulumi.Float64Input `pulumi:"fullLoadQueuedTables"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of incoming changes
	IncomingChanges pulumi.Float64Input `pulumi:"incomingChanges"`
	// Indicates if initial load (full load) has been completed
	InitializationCompleted pulumi.BoolInput `pulumi:"initializationCompleted"`
	// CDC apply latency
	Latency pulumi.Float64Input `pulumi:"latency"`
	// Migration state that this database is in
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

// Number of applied changes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) AppliedChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.AppliedChanges }).(pulumi.Float64Output)
}

// Number of cdc deletes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcDeleteCounter }).(pulumi.Float64Output)
}

// Number of cdc inserts
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcInsertCounter }).(pulumi.Float64Output)
}

// Number of cdc updates
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.CdcUpdateCounter }).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of tables completed in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadCompletedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadCompletedTables
	}).(pulumi.Float64Output)
}

// Number of tables errored in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadErroredTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadErroredTables
	}).(pulumi.Float64Output)
}

// Number of tables loading in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadLoadingTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadLoadingTables
	}).(pulumi.Float64Output)
}

// Number of tables queued in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) FullLoadQueuedTables() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 {
		return v.FullLoadQueuedTables
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of incoming changes
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) IncomingChanges() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.IncomingChanges }).(pulumi.Float64Output)
}

// Indicates if initial load (full load) has been completed
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) InitializationCompleted() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) bool {
		return v.InitializationCompleted
	}).(pulumi.BoolOutput)
}

// CDC apply latency
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) Latency() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) float64 { return v.Latency }).(pulumi.Float64Output)
}

// Migration state that this database is in
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbSyncTaskOutputErrorResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputErrorResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse struct {
	// Count of databases
	DatabaseCount int `pulumi:"databaseCount"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs struct {
	// Count of databases
	DatabaseCount pulumi.IntInput `pulumi:"databaseCount"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Count of databases
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server name
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.SourceServer }).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Target server name
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string { return v.TargetServer }).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse struct {
	// Count of databases
	DatabaseCount int `pulumi:"databaseCount"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server name
	SourceServer string `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Target server name
	TargetServer string `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs struct {
	// Count of databases
	DatabaseCount pulumi.IntInput `pulumi:"databaseCount"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server name
	SourceServer pulumi.StringInput `pulumi:"sourceServer"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Target server name
	TargetServer pulumi.StringInput `pulumi:"targetServer"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput {
	return o
}

// Count of databases
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server name
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) SourceServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.SourceServer }).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Target server name
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) TargetServer() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.TargetServer }).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse struct {
	// Number of applied deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput {
	return o
}

// Number of applied deletes
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 { return v.CdcDeleteCounter }).(pulumi.Float64Output)
}

// Number of applied inserts
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 { return v.CdcInsertCounter }).(pulumi.Float64Output)
}

// Number of applied updates
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 { return v.CdcUpdateCounter }).(pulumi.Float64Output)
}

// Number of data errors occurred
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.DataErrorsCounter
	}).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Full load end time
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.FullLoadEndedOn }).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string {
		return v.FullLoadEstFinishTime
	}).(pulumi.StringOutput)
}

// Full load start time
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.FullLoadStartedOn }).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.FullLoadTotalRows
	}).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of the table
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) string { return v.TableName }).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponse) float64 {
		return v.TotalChangesApplied
	}).(pulumi.Float64Output)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse struct {
	// Number of applied deletes
	CdcDeleteCounter float64 `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter float64 `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter float64 `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter float64 `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn string `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime string `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn string `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows float64 `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id string `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime string `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current state of the table migration
	State string `pulumi:"state"`
	// Name of the table
	TableName string `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied float64 `pulumi:"totalChangesApplied"`
}

// MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs and MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs struct {
	// Number of applied deletes
	CdcDeleteCounter pulumi.Float64Input `pulumi:"cdcDeleteCounter"`
	// Number of applied inserts
	CdcInsertCounter pulumi.Float64Input `pulumi:"cdcInsertCounter"`
	// Number of applied updates
	CdcUpdateCounter pulumi.Float64Input `pulumi:"cdcUpdateCounter"`
	// Number of data errors occurred
	DataErrorsCounter pulumi.Float64Input `pulumi:"dataErrorsCounter"`
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Full load end time
	FullLoadEndedOn pulumi.StringInput `pulumi:"fullLoadEndedOn"`
	// Estimate to finish full load
	FullLoadEstFinishTime pulumi.StringInput `pulumi:"fullLoadEstFinishTime"`
	// Full load start time
	FullLoadStartedOn pulumi.StringInput `pulumi:"fullLoadStartedOn"`
	// Number of rows applied in full load
	FullLoadTotalRows pulumi.Float64Input `pulumi:"fullLoadTotalRows"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Last modified time on target
	LastModifiedTime pulumi.StringInput `pulumi:"lastModifiedTime"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current state of the table migration
	State pulumi.StringInput `pulumi:"state"`
	// Name of the table
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Total number of applied changes
	TotalChangesApplied pulumi.Float64Input `pulumi:"totalChangesApplied"`
}

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput)
}

type MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput {
	return o
}

// Number of applied deletes
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcDeleteCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcDeleteCounter }).(pulumi.Float64Output)
}

// Number of applied inserts
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcInsertCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcInsertCounter }).(pulumi.Float64Output)
}

// Number of applied updates
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) CdcUpdateCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.CdcUpdateCounter }).(pulumi.Float64Output)
}

// Number of data errors occurred
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) DataErrorsCounter() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.DataErrorsCounter }).(pulumi.Float64Output)
}

// Name of the database
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Full load end time
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadEndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadEndedOn }).(pulumi.StringOutput)
}

// Estimate to finish full load
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadEstFinishTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadEstFinishTime }).(pulumi.StringOutput)
}

// Full load start time
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadStartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.FullLoadStartedOn }).(pulumi.StringOutput)
}

// Number of rows applied in full load
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) FullLoadTotalRows() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.FullLoadTotalRows }).(pulumi.Float64Output)
}

// Result identifier
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Last modified time on target
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current state of the table migration
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Name of the table
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) string { return v.TableName }).(pulumi.StringOutput)
}

// Total number of applied changes
func (o MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput) TotalChangesApplied() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponse) float64 { return v.TotalChangesApplied }).(pulumi.Float64Output)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskProperties struct {
	// Task input
	Input *MigrateSqlServerSqlDbSyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbSyncTaskPropertiesInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskPropertiesArgs and MigrateSqlServerSqlDbSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskPropertiesInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskPropertiesArgs{...}
type MigrateSqlServerSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput
	ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesArgs struct {
	// Task input
	Input MigrateSqlServerSqlDbSyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskPropertiesOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutput() MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) Input() MigrateSqlServerSqlDbSyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskProperties) *MigrateSqlServerSqlDbSyncTaskInput { return v.Input }).(MigrateSqlServerSqlDbSyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs and MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Input() MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) *MigrateSqlServerSqlDbSyncTaskInputInvokeResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlDbSyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbSyncTaskPropertiesResponseInput is an input type that accepts MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs and MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbSyncTaskPropertiesResponseInput` via:
//
//          MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs{...}
type MigrateSqlServerSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlDbSyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
type MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput() MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) *MigrateSqlServerSqlDbSyncTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDb.Sync'.
func (o MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInput struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbDatabaseInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions *MigrationValidationOptions `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbTaskInputInput is an input type that accepts MigrateSqlServerSqlDbTaskInputArgs and MigrateSqlServerSqlDbTaskInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputInput` via:
//
//          MigrateSqlServerSqlDbTaskInputArgs{...}
type MigrateSqlServerSqlDbTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput
	ToMigrateSqlServerSqlDbTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions MigrationValidationOptionsPtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputOutput)
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputArgs) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputOutput).ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbTaskInputPtrInput is an input type that accepts MigrateSqlServerSqlDbTaskInputArgs, MigrateSqlServerSqlDbTaskInputPtr and MigrateSqlServerSqlDbTaskInputPtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputPtrInput` via:
//
//          MigrateSqlServerSqlDbTaskInputArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput
	ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput
}

type migrateSqlServerSqlDbTaskInputPtrType MigrateSqlServerSqlDbTaskInputArgs

func MigrateSqlServerSqlDbTaskInputPtr(v *MigrateSqlServerSqlDbTaskInputArgs) MigrateSqlServerSqlDbTaskInputPtrInput {
	return (*migrateSqlServerSqlDbTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlDbTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbTaskInputPtrType) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbTaskInputPtrType) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputOutput() MigrateSqlServerSqlDbTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbTaskInputOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) *MigrateSqlServerSqlDbTaskInput {
		return &v
	}).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) []MigrateSqlServerSqlDbDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInput) *MigrationValidationOptions { return v.ValidationOptions }).(MigrationValidationOptionsPtrOutput)
}

type MigrateSqlServerSqlDbTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutput() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ToMigrateSqlServerSqlDbTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputPtrOutput) Elem() MigrateSqlServerSqlDbTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) MigrateSqlServerSqlDbTaskInput { return *v }).(MigrateSqlServerSqlDbTaskInputOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) []MigrateSqlServerSqlDbDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputPtrOutput) ValidationOptions() MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInput) *MigrationValidationOptions {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsPtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputInvokeResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions *MigrationValidationOptionsInvokeResponse `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbTaskInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskInputInvokeResponseArgs and MigrateSqlServerSqlDbTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskInputInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbTaskInputInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponseOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputInvokeResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions MigrationValidationOptionsInvokeResponsePtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbTaskInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputInvokeResponseOutput)
}

func (i MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputInvokeResponseOutput).ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbTaskInputInvokeResponsePtrInput is an input type that accepts MigrateSqlServerSqlDbTaskInputInvokeResponseArgs, MigrateSqlServerSqlDbTaskInputInvokeResponsePtr and MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputInvokeResponsePtrInput` via:
//
//          MigrateSqlServerSqlDbTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput
	ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput
}

type migrateSqlServerSqlDbTaskInputInvokeResponsePtrType MigrateSqlServerSqlDbTaskInputInvokeResponseArgs

func MigrateSqlServerSqlDbTaskInputInvokeResponsePtr(v *MigrateSqlServerSqlDbTaskInputInvokeResponseArgs) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrInput {
	return (*migrateSqlServerSqlDbTaskInputInvokeResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutput() MigrateSqlServerSqlDbTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputInvokeResponse) *MigrateSqlServerSqlDbTaskInputInvokeResponse {
		return &v
	}).(MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputInvokeResponse) []MigrateSqlServerSqlDbDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputInvokeResponseOutput) ValidationOptions() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputInvokeResponse) *MigrationValidationOptionsInvokeResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

type MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) Elem() MigrateSqlServerSqlDbTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputInvokeResponse) MigrateSqlServerSqlDbTaskInputInvokeResponse {
		return *v
	}).(MigrateSqlServerSqlDbTaskInputInvokeResponseOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputInvokeResponse) []MigrateSqlServerSqlDbDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput) ValidationOptions() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputInvokeResponse) *MigrationValidationOptionsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions *MigrationValidationOptionsResponse `pulumi:"validationOptions"`
}

// MigrateSqlServerSqlDbTaskInputResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskInputResponseArgs and MigrateSqlServerSqlDbTaskInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskInputResponseArgs{...}
type MigrateSqlServerSqlDbTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput
	ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
	// Options for enabling various post migration validations. Available options,
	//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
	//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
	ValidationOptions MigrationValidationOptionsResponsePtrInput `pulumi:"validationOptions"`
}

func (MigrateSqlServerSqlDbTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskInputResponseArgs) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponseOutput).ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlDbTaskInputResponsePtrInput is an input type that accepts MigrateSqlServerSqlDbTaskInputResponseArgs, MigrateSqlServerSqlDbTaskInputResponsePtr and MigrateSqlServerSqlDbTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskInputResponsePtrInput` via:
//
//          MigrateSqlServerSqlDbTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlDbTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput
}

type migrateSqlServerSqlDbTaskInputResponsePtrType MigrateSqlServerSqlDbTaskInputResponseArgs

func MigrateSqlServerSqlDbTaskInputResponsePtr(v *MigrateSqlServerSqlDbTaskInputResponseArgs) MigrateSqlServerSqlDbTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlDbTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlDbTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlDbTaskInputResponsePtrType) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlDbTaskInputResponsePtrType) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

// Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponseOutput() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) *MigrateSqlServerSqlDbTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) []MigrateSqlServerSqlDbDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputResponseOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskInputResponse) *MigrationValidationOptionsResponse {
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

type MigrateSqlServerSqlDbTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlDbTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutput() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ToMigrateSqlServerSqlDbTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlDbTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) MigrateSqlServerSqlDbTaskInputResponse { return *v }).(MigrateSqlServerSqlDbTaskInputResponseOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) []MigrateSqlServerSqlDbDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Options for enabling various post migration validations. Available options,
//  1.) Data Integrity Check: Performs a checksum based comparison on source and target tables after the migration to ensure the correctness of the data.
//  2.) Schema Validation: Performs a thorough schema comparison between the source and target tables and provides a list of differences between the source and target database, 3.) Query Analysis: Executes a set of queries picked up automatically either from the Query Plan Cache or Query Store and execute them and compares the execution time between the source and target database.
func (o MigrateSqlServerSqlDbTaskInputResponsePtrOutput) ValidationOptions() MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlDbTaskInputResponse) *MigrationValidationOptionsResponse {
		if v == nil {
			return nil
		}
		return v.ValidationOptions
	}).(MigrationValidationOptionsResponsePtrOutput)
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse struct {
	// Name of the item
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of database/object errors.
	ErrorCount float64 `pulumi:"errorCount"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Number of objects
	NumberOfObjects float64 `pulumi:"numberOfObjects"`
	// Number of successfully completed objects
	NumberOfObjectsCompleted float64 `pulumi:"numberOfObjectsCompleted"`
	// Summary of object results in the migration
	ObjectSummary map[string]DataItemMigrationSummaryResultInvokeResponse `pulumi:"objectSummary"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration stage that this database is in
	Stage string `pulumi:"stage"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Name of the item
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of database/object errors.
	ErrorCount pulumi.Float64Input `pulumi:"errorCount"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Number of objects
	NumberOfObjects pulumi.Float64Input `pulumi:"numberOfObjects"`
	// Number of successfully completed objects
	NumberOfObjectsCompleted pulumi.Float64Input `pulumi:"numberOfObjectsCompleted"`
	// Summary of object results in the migration
	ObjectSummary DataItemMigrationSummaryResultInvokeResponseMapInput `pulumi:"objectSummary"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration stage that this database is in
	Stage pulumi.StringInput `pulumi:"stage"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput)
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Name of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of database/object errors.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ErrorCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) float64 { return v.ErrorCount }).(pulumi.Float64Output)
}

// Wildcard string prefix to use for querying all errors of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Number of objects
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) NumberOfObjects() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) float64 { return v.NumberOfObjects }).(pulumi.Float64Output)
}

// Number of successfully completed objects
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) NumberOfObjectsCompleted() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) float64 {
		return v.NumberOfObjectsCompleted
	}).(pulumi.Float64Output)
}

// Summary of object results in the migration
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ObjectSummary() DataItemMigrationSummaryResultInvokeResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) map[string]DataItemMigrationSummaryResultInvokeResponse {
		return v.ObjectSummary
	}).(DataItemMigrationSummaryResultInvokeResponseMapOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration stage that this database is in
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse struct {
	// Name of the item
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Number of database/object errors.
	ErrorCount float64 `pulumi:"errorCount"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Number of objects
	NumberOfObjects float64 `pulumi:"numberOfObjects"`
	// Number of successfully completed objects
	NumberOfObjectsCompleted float64 `pulumi:"numberOfObjectsCompleted"`
	// Summary of object results in the migration
	ObjectSummary map[string]DataItemMigrationSummaryResultResponse `pulumi:"objectSummary"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration stage that this database is in
	Stage string `pulumi:"stage"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs and MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs struct {
	// Name of the item
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Number of database/object errors.
	ErrorCount pulumi.Float64Input `pulumi:"errorCount"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Number of objects
	NumberOfObjects pulumi.Float64Input `pulumi:"numberOfObjects"`
	// Number of successfully completed objects
	NumberOfObjectsCompleted pulumi.Float64Input `pulumi:"numberOfObjectsCompleted"`
	// Summary of object results in the migration
	ObjectSummary DataItemMigrationSummaryResultResponseMapInput `pulumi:"objectSummary"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration stage that this database is in
	Stage pulumi.StringInput `pulumi:"stage"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput)
}

// Database level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput {
	return o
}

// Name of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Number of database/object errors.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ErrorCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 { return v.ErrorCount }).(pulumi.Float64Output)
}

// Wildcard string prefix to use for querying all errors of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Number of objects
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) NumberOfObjects() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 { return v.NumberOfObjects }).(pulumi.Float64Output)
}

// Number of successfully completed objects
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) NumberOfObjectsCompleted() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) float64 {
		return v.NumberOfObjectsCompleted
	}).(pulumi.Float64Output)
}

// Summary of object results in the migration
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ObjectSummary() DataItemMigrationSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) map[string]DataItemMigrationSummaryResultResponse {
		return v.ObjectSummary
	}).(DataItemMigrationSummaryResultResponseMapOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration stage that this database is in
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse struct {
	// Provides data integrity validation result between the source and target tables that are migrated.
	DataIntegrityValidationResult DataIntegrityValidationResultInvokeResponse `pulumi:"dataIntegrityValidationResult"`
	// Validation end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Results of some of the query execution result between source and target database
	QueryAnalysisValidationResult QueryAnalysisValidationResultInvokeResponse `pulumi:"queryAnalysisValidationResult"`
	// Result type
	// Expected value is 'MigrationDatabaseLevelValidationOutput'.
	ResultType string `pulumi:"resultType"`
	// Provides schema comparison result between source and target database
	SchemaValidationResult SchemaComparisonValidationResultInvokeResponse `pulumi:"schemaValidationResult"`
	// Name of the source database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status string `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName string `pulumi:"targetDatabaseName"`
}

// MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs struct {
	// Provides data integrity validation result between the source and target tables that are migrated.
	DataIntegrityValidationResult DataIntegrityValidationResultInvokeResponseInput `pulumi:"dataIntegrityValidationResult"`
	// Validation end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Results of some of the query execution result between source and target database
	QueryAnalysisValidationResult QueryAnalysisValidationResultInvokeResponseInput `pulumi:"queryAnalysisValidationResult"`
	// Result type
	// Expected value is 'MigrationDatabaseLevelValidationOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Provides schema comparison result between source and target database
	SchemaValidationResult SchemaComparisonValidationResultInvokeResponseInput `pulumi:"schemaValidationResult"`
	// Name of the source database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName pulumi.StringInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput)
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput {
	return o
}

// Provides data integrity validation result between the source and target tables that are migrated.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) DataIntegrityValidationResult() DataIntegrityValidationResultInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) DataIntegrityValidationResultInvokeResponse {
		return v.DataIntegrityValidationResult
	}).(DataIntegrityValidationResultInvokeResponseOutput)
}

// Validation end time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.EndedOn
	}).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.MigrationId
	}).(pulumi.StringOutput)
}

// Results of some of the query execution result between source and target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) QueryAnalysisValidationResult() QueryAnalysisValidationResultInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) QueryAnalysisValidationResultInvokeResponse {
		return v.QueryAnalysisValidationResult
	}).(QueryAnalysisValidationResultInvokeResponseOutput)
}

// Result type
// Expected value is 'MigrationDatabaseLevelValidationOutput'.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Provides schema comparison result between source and target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) SchemaValidationResult() SchemaComparisonValidationResultInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) SchemaComparisonValidationResultInvokeResponse {
		return v.SchemaValidationResult
	}).(SchemaComparisonValidationResultInvokeResponseOutput)
}

// Name of the source database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.SourceDatabaseName
	}).(pulumi.StringOutput)
}

// Validation start time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

// Current status of validation at the database level
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.Status
	}).(pulumi.StringOutput)
}

// Name of the target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput) TargetDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponse) string {
		return v.TargetDatabaseName
	}).(pulumi.StringOutput)
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse struct {
	// Provides data integrity validation result between the source and target tables that are migrated.
	DataIntegrityValidationResult DataIntegrityValidationResultResponse `pulumi:"dataIntegrityValidationResult"`
	// Validation end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Results of some of the query execution result between source and target database
	QueryAnalysisValidationResult QueryAnalysisValidationResultResponse `pulumi:"queryAnalysisValidationResult"`
	// Result type
	// Expected value is 'MigrationDatabaseLevelValidationOutput'.
	ResultType string `pulumi:"resultType"`
	// Provides schema comparison result between source and target database
	SchemaValidationResult SchemaComparisonValidationResultResponse `pulumi:"schemaValidationResult"`
	// Name of the source database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status string `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName string `pulumi:"targetDatabaseName"`
}

// MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs and MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs struct {
	// Provides data integrity validation result between the source and target tables that are migrated.
	DataIntegrityValidationResult DataIntegrityValidationResultResponseInput `pulumi:"dataIntegrityValidationResult"`
	// Validation end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Results of some of the query execution result between source and target database
	QueryAnalysisValidationResult QueryAnalysisValidationResultResponseInput `pulumi:"queryAnalysisValidationResult"`
	// Result type
	// Expected value is 'MigrationDatabaseLevelValidationOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Provides schema comparison result between source and target database
	SchemaValidationResult SchemaComparisonValidationResultResponseInput `pulumi:"schemaValidationResult"`
	// Name of the source database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName pulumi.StringInput `pulumi:"targetDatabaseName"`
}

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput)
}

// Database validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput {
	return o
}

// Provides data integrity validation result between the source and target tables that are migrated.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) DataIntegrityValidationResult() DataIntegrityValidationResultResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) DataIntegrityValidationResultResponse {
		return v.DataIntegrityValidationResult
	}).(DataIntegrityValidationResultResponseOutput)
}

// Validation end time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.MigrationId
	}).(pulumi.StringOutput)
}

// Results of some of the query execution result between source and target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) QueryAnalysisValidationResult() QueryAnalysisValidationResultResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) QueryAnalysisValidationResultResponse {
		return v.QueryAnalysisValidationResult
	}).(QueryAnalysisValidationResultResponseOutput)
}

// Result type
// Expected value is 'MigrationDatabaseLevelValidationOutput'.
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.ResultType
	}).(pulumi.StringOutput)
}

// Provides schema comparison result between source and target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) SchemaValidationResult() SchemaComparisonValidationResultResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) SchemaComparisonValidationResultResponse {
		return v.SchemaValidationResult
	}).(SchemaComparisonValidationResultResponseOutput)
}

// Name of the source database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.SourceDatabaseName
	}).(pulumi.StringOutput)
}

// Validation start time
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.StartedOn
	}).(pulumi.StringOutput)
}

// Current status of validation at the database level
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Name of the target database
func (o MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput) TargetDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponse) string {
		return v.TargetDatabaseName
	}).(pulumi.StringOutput)
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput)
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlDbTaskOutputErrorResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputErrorResponseArgs and MigrateSqlServerSqlDbTaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputErrorResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputErrorResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputErrorResponseOutput)
}

// Task errors for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutput() MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlDbTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlDbTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse struct {
	// Summary of database results in the migration
	DatabaseSummary map[string]DatabaseSummaryResultInvokeResponse `pulumi:"databaseSummary"`
	// Selected databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Duration of task execution in seconds.
	DurationInSeconds float64 `pulumi:"durationInSeconds"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Migration Report Result, provides unique url for downloading your migration report.
	MigrationReport MigrationReportResultInvokeResponse `pulumi:"migrationReport"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of migration
	Status string `pulumi:"status"`
	// Migration status message
	StatusMessage string `pulumi:"statusMessage"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs struct {
	// Summary of database results in the migration
	DatabaseSummary DatabaseSummaryResultInvokeResponseMapInput `pulumi:"databaseSummary"`
	// Selected databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Duration of task execution in seconds.
	DurationInSeconds pulumi.Float64Input `pulumi:"durationInSeconds"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Migration Report Result, provides unique url for downloading your migration report.
	MigrationReport MigrationReportResultInvokeResponseInput `pulumi:"migrationReport"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of migration
	Status pulumi.StringInput `pulumi:"status"`
	// Migration status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput)
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Summary of database results in the migration
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) DatabaseSummary() DatabaseSummaryResultInvokeResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) map[string]DatabaseSummaryResultInvokeResponse {
		return v.DatabaseSummary
	}).(DatabaseSummaryResultInvokeResponseMapOutput)
}

// Selected databases as a map from database name to database id
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) map[string]string {
		return v.Databases
	}).(pulumi.StringMapOutput)
}

// Duration of task execution in seconds.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) DurationInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) float64 {
		return v.DurationInSeconds
	}).(pulumi.Float64Output)
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Migration Report Result, provides unique url for downloading your migration report.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) MigrationReport() MigrationReportResultInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) MigrationReportResultInvokeResponse {
		return v.MigrationReport
	}).(MigrationReportResultInvokeResponseOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current status of migration
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Migration status message
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse struct {
	// Summary of database results in the migration
	DatabaseSummary map[string]DatabaseSummaryResultResponse `pulumi:"databaseSummary"`
	// Selected databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Duration of task execution in seconds.
	DurationInSeconds float64 `pulumi:"durationInSeconds"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Migration Report Result, provides unique url for downloading your migration report.
	MigrationReport MigrationReportResultResponse `pulumi:"migrationReport"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of migration
	Status string `pulumi:"status"`
	// Migration status message
	StatusMessage string `pulumi:"statusMessage"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs and MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs struct {
	// Summary of database results in the migration
	DatabaseSummary DatabaseSummaryResultResponseMapInput `pulumi:"databaseSummary"`
	// Selected databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Duration of task execution in seconds.
	DurationInSeconds pulumi.Float64Input `pulumi:"durationInSeconds"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Migration Report Result, provides unique url for downloading your migration report.
	MigrationReport MigrationReportResultResponseInput `pulumi:"migrationReport"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of migration
	Status pulumi.StringInput `pulumi:"status"`
	// Migration status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput)
}

// Migration level result for Sql server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput {
	return o
}

// Summary of database results in the migration
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) DatabaseSummary() DatabaseSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) map[string]DatabaseSummaryResultResponse {
		return v.DatabaseSummary
	}).(DatabaseSummaryResultResponseMapOutput)
}

// Selected databases as a map from database name to database id
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

// Duration of task execution in seconds.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) DurationInSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) float64 { return v.DurationInSeconds }).(pulumi.Float64Output)
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Migration Report Result, provides unique url for downloading your migration report.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) MigrationReport() MigrationReportResultResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) MigrationReportResultResponse {
		return v.MigrationReport
	}).(MigrationReportResultResponseOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current status of migration
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Migration status message
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	ObjectName string `pulumi:"objectName"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	ObjectName pulumi.StringInput `pulumi:"objectName"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput)
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput {
	return o
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.ObjectName }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Result identifier
	Id string `pulumi:"id"`
	// Number of successfully completed items
	ItemsCompletedCount float64 `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount float64 `pulumi:"itemsCount"`
	// Name of the item
	ObjectName string `pulumi:"objectName"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix string `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Status message
	StatusMessage string `pulumi:"statusMessage"`
}

// MigrateSqlServerSqlDbTaskOutputTableLevelResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs and MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputTableLevelResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputTableLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Wildcard string prefix to use for querying all errors of the item
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Number of successfully completed items
	ItemsCompletedCount pulumi.Float64Input `pulumi:"itemsCompletedCount"`
	// Number of items
	ItemsCount pulumi.Float64Input `pulumi:"itemsCount"`
	// Name of the item
	ObjectName pulumi.StringInput `pulumi:"objectName"`
	// Wildcard string prefix to use for querying all sub-tem results of the item
	ResultPrefix pulumi.StringInput `pulumi:"resultPrefix"`
	// Result type
	// Expected value is 'TableLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Status message
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputTableLevelResponseArgs) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput)
}

// Table level result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputTableLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput() MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ToMigrateSqlServerSqlDbTaskOutputTableLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput {
	return o
}

// Migration end time
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all errors of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Number of successfully completed items
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ItemsCompletedCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) float64 { return v.ItemsCompletedCount }).(pulumi.Float64Output)
}

// Number of items
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ItemsCount() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) float64 { return v.ItemsCount }).(pulumi.Float64Output)
}

// Name of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ObjectName }).(pulumi.StringOutput)
}

// Wildcard string prefix to use for querying all sub-tem results of the item
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ResultPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ResultPrefix }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'TableLevelOutput'.
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Status message
func (o MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputTableLevelResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse struct {
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Result type
	// Expected value is 'MigrationValidationOutput'.
	ResultType string `pulumi:"resultType"`
	// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
	Status string `pulumi:"status"`
	// Validation summary results for each database
	SummaryResults map[string]MigrationValidationDatabaseSummaryResultInvokeResponse `pulumi:"summaryResults"`
}

// MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs and MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs struct {
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Result type
	// Expected value is 'MigrationValidationOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
	Status pulumi.StringInput `pulumi:"status"`
	// Validation summary results for each database
	SummaryResults MigrationValidationDatabaseSummaryResultInvokeResponseMapInput `pulumi:"summaryResults"`
}

func (MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput)
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput {
	return o
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationValidationOutput'.
func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Validation summary results for each database
func (o MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput) SummaryResults() MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponse) map[string]MigrationValidationDatabaseSummaryResultInvokeResponse {
		return v.SummaryResults
	}).(MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput)
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultResponse struct {
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Result type
	// Expected value is 'MigrationValidationOutput'.
	ResultType string `pulumi:"resultType"`
	// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
	Status string `pulumi:"status"`
	// Validation summary results for each database
	SummaryResults map[string]MigrationValidationDatabaseSummaryResultResponse `pulumi:"summaryResults"`
}

// MigrateSqlServerSqlDbTaskOutputValidationResultResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs and MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskOutputValidationResultResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs{...}
type MigrateSqlServerSqlDbTaskOutputValidationResultResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput
	ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs struct {
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Result type
	// Expected value is 'MigrationValidationOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
	Status pulumi.StringInput `pulumi:"status"`
	// Validation summary results for each database
	SummaryResults MigrationValidationDatabaseSummaryResultResponseMapInput `pulumi:"summaryResults"`
}

func (MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskOutputValidationResultResponseArgs) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput)
}

// Validation result for Sql Server to Azure Sql DB migration.
type MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskOutputValidationResultResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput() MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ToMigrateSqlServerSqlDbTaskOutputValidationResultResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput {
	return o
}

// Result identifier
func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationValidationOutput'.
func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current status of validation at the migration level. Status from the database validation result status will be aggregated here.
func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Validation summary results for each database
func (o MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput) SummaryResults() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskOutputValidationResultResponse) map[string]MigrationValidationDatabaseSummaryResultResponse {
		return v.SummaryResults
	}).(MigrationValidationDatabaseSummaryResultResponseMapOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskProperties struct {
	// Task input
	Input *MigrateSqlServerSqlDbTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbTaskPropertiesInput is an input type that accepts MigrateSqlServerSqlDbTaskPropertiesArgs and MigrateSqlServerSqlDbTaskPropertiesOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskPropertiesInput` via:
//
//          MigrateSqlServerSqlDbTaskPropertiesArgs{...}
type MigrateSqlServerSqlDbTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput
	ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesArgs struct {
	// Task input
	Input MigrateSqlServerSqlDbTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskPropertiesArgs) ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskPropertiesArgs) ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskPropertiesOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) ToMigrateSqlServerSqlDbTaskPropertiesOutput() MigrateSqlServerSqlDbTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesOutput) ToMigrateSqlServerSqlDbTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesOutput {
	return o
}

// Task input
func (o MigrateSqlServerSqlDbTaskPropertiesOutput) Input() MigrateSqlServerSqlDbTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskProperties) *MigrateSqlServerSqlDbTaskInput { return v.Input }).(MigrateSqlServerSqlDbTaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.SqlDb'.
func (o MigrateSqlServerSqlDbTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlDbTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbTaskPropertiesInvokeResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs and MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskPropertiesInvokeResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs{...}
type MigrateSqlServerSqlDbTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput
	ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlDbTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) Input() MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) *MigrateSqlServerSqlDbTaskInputInvokeResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.SqlDb'.
func (o MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlDbTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlDbTaskPropertiesResponseInput is an input type that accepts MigrateSqlServerSqlDbTaskPropertiesResponseArgs and MigrateSqlServerSqlDbTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlDbTaskPropertiesResponseInput` via:
//
//          MigrateSqlServerSqlDbTaskPropertiesResponseArgs{...}
type MigrateSqlServerSqlDbTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlDbTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.SqlDb'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlDbTaskPropertiesResponseArgs) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlDbTaskPropertiesResponseOutput)
}

// Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
type MigrateSqlServerSqlDbTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlDbTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutput() MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) ToMigrateSqlServerSqlDbTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlDbTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlDbTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) *MigrateSqlServerSqlDbTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlDbTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.SqlDb'.
func (o MigrateSqlServerSqlDbTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlDbTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInput struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths []string `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare *FileShare `pulumi:"backupFileShare"`
	// Name of the database
	Name string `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName string `pulumi:"restoreDatabaseName"`
}

// MigrateSqlServerSqlMIDatabaseInputInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputArgs and MigrateSqlServerSqlMIDatabaseInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputArgs{...}
type MigrateSqlServerSqlMIDatabaseInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput
	ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputOutput
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputArgs struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths pulumi.StringArrayInput `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare FileSharePtrInput `pulumi:"backupFileShare"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName pulumi.StringInput `pulumi:"restoreDatabaseName"`
}

func (MigrateSqlServerSqlMIDatabaseInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputArgs) ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputArgs) ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputOutput)
}

// MigrateSqlServerSqlMIDatabaseInputArrayInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputArray and MigrateSqlServerSqlMIDatabaseInputArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputArrayInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputArray{ MigrateSqlServerSqlMIDatabaseInputArgs{...} }
type MigrateSqlServerSqlMIDatabaseInputArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput
	ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput
}

type MigrateSqlServerSqlMIDatabaseInputArray []MigrateSqlServerSqlMIDatabaseInputInput

func (MigrateSqlServerSqlMIDatabaseInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputArray) ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputArray) ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) ToMigrateSqlServerSqlMIDatabaseInputOutput() MigrateSqlServerSqlMIDatabaseInputOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputOutput) ToMigrateSqlServerSqlMIDatabaseInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputOutput {
	return o
}

// The list of backup files to be used in case of existing backups.
func (o MigrateSqlServerSqlMIDatabaseInputOutput) BackupFilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) []string { return v.BackupFilePaths }).(pulumi.StringArrayOutput)
}

// Backup file share information for backing up this database.
func (o MigrateSqlServerSqlMIDatabaseInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlMIDatabaseInputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the database at destination
func (o MigrateSqlServerSqlMIDatabaseInputOutput) RestoreDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInput) string { return v.RestoreDatabaseName }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInputArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputArrayOutput() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlMIDatabaseInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlMIDatabaseInput {
		return vs[0].([]MigrateSqlServerSqlMIDatabaseInput)[vs[1].(int)]
	}).(MigrateSqlServerSqlMIDatabaseInputOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputInvokeResponse struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths []string `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare *FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Name of the database
	Name string `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName string `pulumi:"restoreDatabaseName"`
}

// MigrateSqlServerSqlMIDatabaseInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs and MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs{...}
type MigrateSqlServerSqlMIDatabaseInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput
	ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths pulumi.StringArrayInput `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare FileShareInvokeResponsePtrInput `pulumi:"backupFileShare"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName pulumi.StringInput `pulumi:"restoreDatabaseName"`
}

func (MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput)
}

// MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray and MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray{ MigrateSqlServerSqlMIDatabaseInputInvokeResponseArgs{...} }
type MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput
	ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput
}

type MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray []MigrateSqlServerSqlMIDatabaseInputInvokeResponseInput

func (MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputInvokeResponseArray) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput {
	return o
}

// The list of backup files to be used in case of existing backups.
func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) BackupFilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputInvokeResponse) []string { return v.BackupFilePaths }).(pulumi.StringArrayOutput)
}

// Backup file share information for backing up this database.
func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputInvokeResponse) *FileShareInvokeResponse {
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the database at destination
func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput) RestoreDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputInvokeResponse) string { return v.RestoreDatabaseName }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		return vs[0].([]MigrateSqlServerSqlMIDatabaseInputInvokeResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputResponse struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths []string `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare *FileShareResponse `pulumi:"backupFileShare"`
	// Name of the database
	Name string `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName string `pulumi:"restoreDatabaseName"`
}

// MigrateSqlServerSqlMIDatabaseInputResponseInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputResponseArgs and MigrateSqlServerSqlMIDatabaseInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputResponseInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputResponseArgs{...}
type MigrateSqlServerSqlMIDatabaseInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput
	ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputResponseArgs struct {
	// The list of backup files to be used in case of existing backups.
	BackupFilePaths pulumi.StringArrayInput `pulumi:"backupFilePaths"`
	// Backup file share information for backing up this database.
	BackupFileShare FileShareResponsePtrInput `pulumi:"backupFileShare"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the database at destination
	RestoreDatabaseName pulumi.StringInput `pulumi:"restoreDatabaseName"`
}

func (MigrateSqlServerSqlMIDatabaseInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArgs) ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputResponseOutput)
}

// MigrateSqlServerSqlMIDatabaseInputResponseArrayInput is an input type that accepts MigrateSqlServerSqlMIDatabaseInputResponseArray and MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMIDatabaseInputResponseArrayInput` via:
//
//          MigrateSqlServerSqlMIDatabaseInputResponseArray{ MigrateSqlServerSqlMIDatabaseInputResponseArgs{...} }
type MigrateSqlServerSqlMIDatabaseInputResponseArrayInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput
	ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput
}

type MigrateSqlServerSqlMIDatabaseInputResponseArray []MigrateSqlServerSqlMIDatabaseInputResponseInput

func (MigrateSqlServerSqlMIDatabaseInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArray) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return i.ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMIDatabaseInputResponseArray) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
type MigrateSqlServerSqlMIDatabaseInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseOutput() MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return o
}

// The list of backup files to be used in case of existing backups.
func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) BackupFilePaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) []string { return v.BackupFilePaths }).(pulumi.StringArrayOutput)
}

// Backup file share information for backing up this database.
func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

// Name of the database
func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the database at destination
func (o MigrateSqlServerSqlMIDatabaseInputResponseOutput) RestoreDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMIDatabaseInputResponse) string { return v.RestoreDatabaseName }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MigrateSqlServerSqlMIDatabaseInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutput() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) ToMigrateSqlServerSqlMIDatabaseInputResponseArrayOutputWithContext(ctx context.Context) MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o
}

func (o MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput) Index(i pulumi.IntInput) MigrateSqlServerSqlMIDatabaseInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MigrateSqlServerSqlMIDatabaseInputResponse {
		return vs[0].([]MigrateSqlServerSqlMIDatabaseInputResponse)[vs[1].(int)]
	}).(MigrateSqlServerSqlMIDatabaseInputResponseOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInput struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryApp `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShare `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMISyncTaskInputInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputArgs and MigrateSqlServerSqlMISyncTaskInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputArgs{...}
type MigrateSqlServerSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput
	ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileSharePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputOutput)
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputArgs) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputOutput).ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMISyncTaskInputPtrInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputArgs, MigrateSqlServerSqlMISyncTaskInputPtr and MigrateSqlServerSqlMISyncTaskInputPtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputPtrInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput
	ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput
}

type migrateSqlServerSqlMISyncTaskInputPtrType MigrateSqlServerSqlMISyncTaskInputArgs

func MigrateSqlServerSqlMISyncTaskInputPtr(v *MigrateSqlServerSqlMISyncTaskInputArgs) MigrateSqlServerSqlMISyncTaskInputPtrInput {
	return (*migrateSqlServerSqlMISyncTaskInputPtrType)(v)
}

func (*migrateSqlServerSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlMISyncTaskInputPtrType) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMISyncTaskInputPtrType) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputOutput() MigrateSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMISyncTaskInputOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) *MigrateSqlServerSqlMISyncTaskInput {
		return &v
	}).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInput) MiSqlConnectionInfo { return v.TargetConnectionInfo }).(MiSqlConnectionInfoOutput)
}

type MigrateSqlServerSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutput() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) ToMigrateSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) Elem() MigrateSqlServerSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) MigrateSqlServerSqlMISyncTaskInput { return *v }).(MigrateSqlServerSqlMISyncTaskInputOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputInvokeResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponse `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMISyncTaskInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs and MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput
	ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponseInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareInvokeResponsePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput)
}

func (i MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput).ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs, MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtr and MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput
	ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput
}

type migrateSqlServerSqlMISyncTaskInputInvokeResponsePtrType MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs

func MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtr(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponseArgs) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrInput {
	return (*migrateSqlServerSqlMISyncTaskInputInvokeResponsePtrType)(v)
}

func (*migrateSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *MigrateSqlServerSqlMISyncTaskInputInvokeResponse {
		return &v
	}).(MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) AzureApp() AzureActiveDirectoryAppInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) AzureActiveDirectoryAppInvokeResponse {
		return v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponseOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *FileShareInvokeResponse {
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputInvokeResponse) MiSqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) Elem() MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) MigrateSqlServerSqlMISyncTaskInputInvokeResponse {
		return *v
	}).(MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) AzureApp() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *AzureActiveDirectoryAppInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *FileShareInvokeResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputInvokeResponse) *MiSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponse `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareResponse `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMISyncTaskInputResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputResponseArgs and MigrateSqlServerSqlMISyncTaskInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput
	ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponseInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareResponsePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponseOutput)
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskInputResponseArgs) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponseOutput).ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMISyncTaskInputResponsePtrInput is an input type that accepts MigrateSqlServerSqlMISyncTaskInputResponseArgs, MigrateSqlServerSqlMISyncTaskInputResponsePtr and MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskInputResponsePtrInput` via:
//
//          MigrateSqlServerSqlMISyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput
	ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput
}

type migrateSqlServerSqlMISyncTaskInputResponsePtrType MigrateSqlServerSqlMISyncTaskInputResponseArgs

func MigrateSqlServerSqlMISyncTaskInputResponsePtr(v *MigrateSqlServerSqlMISyncTaskInputResponseArgs) MigrateSqlServerSqlMISyncTaskInputResponsePtrInput {
	return (*migrateSqlServerSqlMISyncTaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMISyncTaskInputResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMISyncTaskInputResponsePtrType) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type MigrateSqlServerSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponseOutput() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) *MigrateSqlServerSqlMISyncTaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse { return v.AzureApp }).(AzureActiveDirectoryAppResponseOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutput() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) ToMigrateSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) MigrateSqlServerSqlMISyncTaskInputResponse {
		return *v
	}).(MigrateSqlServerSqlMISyncTaskInputResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Connection information for source SQL Server
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Fully qualified resourceId of storage
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse struct {
	// Backup sets that are currently active (Either being uploaded or getting restored)
	ActiveBackupSets []BackupSetInfoInvokeResponse `pulumi:"activeBackupSets"`
	// Name of container created in the Azure Storage account where backups are copied to
	ContainerName string `pulumi:"containerName"`
	// Database migration end time
	EndedOn string `pulumi:"endedOn"`
	// prefix string to use for querying errors for this database
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Details of full backup set
	FullBackupSetInfo BackupSetInfoInvokeResponse `pulumi:"fullBackupSetInfo"`
	// Result identifier
	Id string `pulumi:"id"`
	// Whether full backup has been applied to the target database or not
	IsFullBackupRestored bool `pulumi:"isFullBackupRestored"`
	// Last applied backup set information
	LastRestoredBackupSetInfo BackupSetInfoInvokeResponse `pulumi:"lastRestoredBackupSetInfo"`
	// Current state of database
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Name of the database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Database migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs and MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Backup sets that are currently active (Either being uploaded or getting restored)
	ActiveBackupSets BackupSetInfoInvokeResponseArrayInput `pulumi:"activeBackupSets"`
	// Name of container created in the Azure Storage account where backups are copied to
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Database migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// prefix string to use for querying errors for this database
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Details of full backup set
	FullBackupSetInfo BackupSetInfoInvokeResponseInput `pulumi:"fullBackupSetInfo"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Whether full backup has been applied to the target database or not
	IsFullBackupRestored pulumi.BoolInput `pulumi:"isFullBackupRestored"`
	// Last applied backup set information
	LastRestoredBackupSetInfo BackupSetInfoInvokeResponseInput `pulumi:"lastRestoredBackupSetInfo"`
	// Current state of database
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Name of the database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Database migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Backup sets that are currently active (Either being uploaded or getting restored)
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ActiveBackupSets() BackupSetInfoInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) []BackupSetInfoInvokeResponse {
		return v.ActiveBackupSets
	}).(BackupSetInfoInvokeResponseArrayOutput)
}

// Name of container created in the Azure Storage account where backups are copied to
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Database migration end time
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// prefix string to use for querying errors for this database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Migration exceptions and warnings
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Details of full backup set
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) FullBackupSetInfo() BackupSetInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) BackupSetInfoInvokeResponse {
		return v.FullBackupSetInfo
	}).(BackupSetInfoInvokeResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Whether full backup has been applied to the target database or not
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) IsFullBackupRestored() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) bool {
		return v.IsFullBackupRestored
	}).(pulumi.BoolOutput)
}

// Last applied backup set information
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) LastRestoredBackupSetInfo() BackupSetInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) BackupSetInfoInvokeResponse {
		return v.LastRestoredBackupSetInfo
	}).(BackupSetInfoInvokeResponseOutput)
}

// Current state of database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Name of the database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string {
		return v.SourceDatabaseName
	}).(pulumi.StringOutput)
}

// Database migration start time
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse struct {
	// Backup sets that are currently active (Either being uploaded or getting restored)
	ActiveBackupSets []BackupSetInfoResponse `pulumi:"activeBackupSets"`
	// Name of container created in the Azure Storage account where backups are copied to
	ContainerName string `pulumi:"containerName"`
	// Database migration end time
	EndedOn string `pulumi:"endedOn"`
	// prefix string to use for querying errors for this database
	ErrorPrefix string `pulumi:"errorPrefix"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Details of full backup set
	FullBackupSetInfo BackupSetInfoResponse `pulumi:"fullBackupSetInfo"`
	// Result identifier
	Id string `pulumi:"id"`
	// Whether full backup has been applied to the target database or not
	IsFullBackupRestored bool `pulumi:"isFullBackupRestored"`
	// Last applied backup set information
	LastRestoredBackupSetInfo BackupSetInfoResponse `pulumi:"lastRestoredBackupSetInfo"`
	// Current state of database
	MigrationState string `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Name of the database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Database migration start time
	StartedOn string `pulumi:"startedOn"`
}

// MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs and MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs struct {
	// Backup sets that are currently active (Either being uploaded or getting restored)
	ActiveBackupSets BackupSetInfoResponseArrayInput `pulumi:"activeBackupSets"`
	// Name of container created in the Azure Storage account where backups are copied to
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Database migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// prefix string to use for querying errors for this database
	ErrorPrefix pulumi.StringInput `pulumi:"errorPrefix"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Details of full backup set
	FullBackupSetInfo BackupSetInfoResponseInput `pulumi:"fullBackupSetInfo"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Whether full backup has been applied to the target database or not
	IsFullBackupRestored pulumi.BoolInput `pulumi:"isFullBackupRestored"`
	// Last applied backup set information
	LastRestoredBackupSetInfo BackupSetInfoResponseInput `pulumi:"lastRestoredBackupSetInfo"`
	// Current state of database
	MigrationState pulumi.StringInput `pulumi:"migrationState"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Name of the database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Database migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
}

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput {
	return o
}

// Backup sets that are currently active (Either being uploaded or getting restored)
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ActiveBackupSets() BackupSetInfoResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) []BackupSetInfoResponse {
		return v.ActiveBackupSets
	}).(BackupSetInfoResponseArrayOutput)
}

// Name of container created in the Azure Storage account where backups are copied to
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Database migration end time
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// prefix string to use for querying errors for this database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ErrorPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ErrorPrefix }).(pulumi.StringOutput)
}

// Migration exceptions and warnings
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Details of full backup set
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) FullBackupSetInfo() BackupSetInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) BackupSetInfoResponse {
		return v.FullBackupSetInfo
	}).(BackupSetInfoResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Whether full backup has been applied to the target database or not
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) IsFullBackupRestored() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) bool { return v.IsFullBackupRestored }).(pulumi.BoolOutput)
}

// Last applied backup set information
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) LastRestoredBackupSetInfo() BackupSetInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) BackupSetInfoResponse {
		return v.LastRestoredBackupSetInfo
	}).(BackupSetInfoResponseOutput)
}

// Current state of database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) MigrationState() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.MigrationState }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Name of the database
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

// Database migration start time
func (o MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs and MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlMISyncTaskOutputErrorResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs and MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputErrorResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput() MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse struct {
	// Count of databases
	DatabaseCount int `pulumi:"databaseCount"`
	// Number of database level errors
	DatabaseErrorCount int `pulumi:"databaseErrorCount"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server name
	SourceServerName string `pulumi:"sourceServerName"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server name
	TargetServerName string `pulumi:"targetServerName"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs and MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs struct {
	// Count of databases
	DatabaseCount pulumi.IntInput `pulumi:"databaseCount"`
	// Number of database level errors
	DatabaseErrorCount pulumi.IntInput `pulumi:"databaseErrorCount"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server name
	SourceServerName pulumi.StringInput `pulumi:"sourceServerName"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server name
	TargetServerName pulumi.StringInput `pulumi:"targetServerName"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Count of databases
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

// Number of database level errors
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) DatabaseErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) int {
		return v.DatabaseErrorCount
	}).(pulumi.IntOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server name
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerName
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server name
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerName
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse struct {
	// Count of databases
	DatabaseCount int `pulumi:"databaseCount"`
	// Number of database level errors
	DatabaseErrorCount int `pulumi:"databaseErrorCount"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server name
	SourceServerName string `pulumi:"sourceServerName"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server name
	TargetServerName string `pulumi:"targetServerName"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs and MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs struct {
	// Count of databases
	DatabaseCount pulumi.IntInput `pulumi:"databaseCount"`
	// Number of database level errors
	DatabaseErrorCount pulumi.IntInput `pulumi:"databaseErrorCount"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server name
	SourceServerName pulumi.StringInput `pulumi:"sourceServerName"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server name
	TargetServerName pulumi.StringInput `pulumi:"targetServerName"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput {
	return o
}

// Count of databases
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) DatabaseCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) int { return v.DatabaseCount }).(pulumi.IntOutput)
}

// Number of database level errors
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) DatabaseErrorCount() pulumi.IntOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) int { return v.DatabaseErrorCount }).(pulumi.IntOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server name
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.SourceServerName }).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server name
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.TargetServerName }).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskProperties struct {
	// Task input
	Input *MigrateSqlServerSqlMISyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMISyncTaskPropertiesInput is an input type that accepts MigrateSqlServerSqlMISyncTaskPropertiesArgs and MigrateSqlServerSqlMISyncTaskPropertiesOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskPropertiesInput` via:
//
//          MigrateSqlServerSqlMISyncTaskPropertiesArgs{...}
type MigrateSqlServerSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput
	ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesArgs struct {
	// Task input
	Input MigrateSqlServerSqlMISyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskPropertiesOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesOutput() MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

// Task input
func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) Input() MigrateSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskProperties) *MigrateSqlServerSqlMISyncTaskInput { return v.Input }).(MigrateSqlServerSqlMISyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o MigrateSqlServerSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlMISyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs and MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput
	ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Input() MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) *MigrateSqlServerSqlMISyncTaskInputInvokeResponse {
		return v.Input
	}).(MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlMISyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMISyncTaskPropertiesResponseInput is an input type that accepts MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs and MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMISyncTaskPropertiesResponseInput` via:
//
//          MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs{...}
type MigrateSqlServerSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput
	ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlMISyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMISyncTaskPropertiesResponseArgs) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
type MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutput() MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) ToMigrateSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Input() MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) *MigrateSqlServerSqlMISyncTaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInput struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShare `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShare `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode *string `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs []string `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMITaskInputInput is an input type that accepts MigrateSqlServerSqlMITaskInputArgs and MigrateSqlServerSqlMITaskInputOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputInput` via:
//
//          MigrateSqlServerSqlMITaskInputArgs{...}
type MigrateSqlServerSqlMITaskInputInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput
	ToMigrateSqlServerSqlMITaskInputOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileSharePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs pulumi.StringArrayInput `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput {
	return i.ToMigrateSqlServerSqlMITaskInputOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputOutput)
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputArgs) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputOutput).ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMITaskInputPtrInput is an input type that accepts MigrateSqlServerSqlMITaskInputArgs, MigrateSqlServerSqlMITaskInputPtr and MigrateSqlServerSqlMITaskInputPtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputPtrInput` via:
//
//          MigrateSqlServerSqlMITaskInputArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput
	ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputPtrOutput
}

type migrateSqlServerSqlMITaskInputPtrType MigrateSqlServerSqlMITaskInputArgs

func MigrateSqlServerSqlMITaskInputPtr(v *MigrateSqlServerSqlMITaskInputArgs) MigrateSqlServerSqlMITaskInputPtrInput {
	return (*migrateSqlServerSqlMITaskInputPtrType)(v)
}

func (*migrateSqlServerSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i *migrateSqlServerSqlMITaskInputPtrType) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMITaskInputPtrType) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputOutput() MigrateSqlServerSqlMITaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMITaskInputOutput) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *MigrateSqlServerSqlMITaskInput {
		return &v
	}).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputOutput) BackupBlobShare() BlobShareOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) BlobShare { return v.BackupBlobShare }).(BlobShareOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []string { return v.SelectedAgentJobs }).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type MigrateSqlServerSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) ToMigrateSqlServerSqlMITaskInputPtrOutput() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) ToMigrateSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputPtrOutput) Elem() MigrateSqlServerSqlMITaskInputOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) MigrateSqlServerSqlMITaskInput { return *v }).(MigrateSqlServerSqlMITaskInputOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupBlobShare() BlobSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *BlobShare {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobSharePtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputPtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedAgentJobs
	}).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputPtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputInvokeResponse struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInvokeResponse `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode *string `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs []string `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMITaskInputInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskInputInvokeResponseArgs and MigrateSqlServerSqlMITaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskInputInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputInvokeResponseOutput() MigrateSqlServerSqlMITaskInputInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskInputInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputInvokeResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputInvokeResponseArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInvokeResponseInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareInvokeResponsePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs pulumi.StringArrayInput `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMITaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMITaskInputInvokeResponseOutput() MigrateSqlServerSqlMITaskInputInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputInvokeResponseOutput)
}

func (i MigrateSqlServerSqlMITaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputInvokeResponseArgs) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputInvokeResponseOutput).ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMITaskInputInvokeResponsePtrInput is an input type that accepts MigrateSqlServerSqlMITaskInputInvokeResponseArgs, MigrateSqlServerSqlMITaskInputInvokeResponsePtr and MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputInvokeResponsePtrInput` via:
//
//          MigrateSqlServerSqlMITaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMITaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput
	ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput
}

type migrateSqlServerSqlMITaskInputInvokeResponsePtrType MigrateSqlServerSqlMITaskInputInvokeResponseArgs

func MigrateSqlServerSqlMITaskInputInvokeResponsePtr(v *MigrateSqlServerSqlMITaskInputInvokeResponseArgs) MigrateSqlServerSqlMITaskInputInvokeResponsePtrInput {
	return (*migrateSqlServerSqlMITaskInputInvokeResponsePtrType)(v)
}

func (*migrateSqlServerSqlMITaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMITaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMITaskInputInvokeResponsePtrType) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponseOutput() MigrateSqlServerSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) *MigrateSqlServerSqlMITaskInputInvokeResponse {
		return &v
	}).(MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) BackupBlobShare() BlobShareInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) BlobShareInvokeResponse { return v.BackupBlobShare }).(BlobShareInvokeResponseOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) *FileShareInvokeResponse {
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) []string { return v.SelectedAgentJobs }).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) Elem() MigrateSqlServerSqlMITaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) MigrateSqlServerSqlMITaskInputInvokeResponse {
		return *v
	}).(MigrateSqlServerSqlMITaskInputInvokeResponseOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupBlobShare() BlobShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) *BlobShareInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareInvokeResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) *FileShareInvokeResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedAgentJobs
	}).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputResponse struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareResponse `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareResponse `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode *string `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs []string `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// MigrateSqlServerSqlMITaskInputResponseInput is an input type that accepts MigrateSqlServerSqlMITaskInputResponseArgs and MigrateSqlServerSqlMITaskInputResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputResponseInput` via:
//
//          MigrateSqlServerSqlMITaskInputResponseArgs{...}
type MigrateSqlServerSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput
	ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputResponseArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareResponseInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareResponsePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Agent Jobs to migrate.
	SelectedAgentJobs pulumi.StringArrayInput `pulumi:"selectedAgentJobs"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate.
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (MigrateSqlServerSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponseOutput)
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskInputResponseArgs) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponseOutput).ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx)
}

// MigrateSqlServerSqlMITaskInputResponsePtrInput is an input type that accepts MigrateSqlServerSqlMITaskInputResponseArgs, MigrateSqlServerSqlMITaskInputResponsePtr and MigrateSqlServerSqlMITaskInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskInputResponsePtrInput` via:
//
//          MigrateSqlServerSqlMITaskInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSqlServerSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput
	ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput
}

type migrateSqlServerSqlMITaskInputResponsePtrType MigrateSqlServerSqlMITaskInputResponseArgs

func MigrateSqlServerSqlMITaskInputResponsePtr(v *MigrateSqlServerSqlMITaskInputResponseArgs) MigrateSqlServerSqlMITaskInputResponsePtrInput {
	return (*migrateSqlServerSqlMITaskInputResponsePtrType)(v)
}

func (*migrateSqlServerSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i *migrateSqlServerSqlMITaskInputResponsePtrType) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSqlServerSqlMITaskInputResponsePtrType) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
type MigrateSqlServerSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponseOutput() MigrateSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSqlServerSqlMITaskInputResponseOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *MigrateSqlServerSqlMITaskInputResponse {
		return &v
	}).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupBlobShare() BlobShareResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) BlobShareResponse { return v.BackupBlobShare }).(BlobShareResponseOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *FileShareResponse { return v.BackupFileShare }).(FileShareResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []string { return v.SelectedAgentJobs }).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type MigrateSqlServerSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutput() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) ToMigrateSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) Elem() MigrateSqlServerSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) MigrateSqlServerSqlMITaskInputResponse { return *v }).(MigrateSqlServerSqlMITaskInputResponseOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupBlobShare() BlobShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *BlobShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Agent Jobs to migrate.
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedAgentJobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedAgentJobs
	}).(pulumi.StringArrayOutput)
}

// Databases to migrate
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Logins to migrate.
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to target
func (o MigrateSqlServerSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *MigrateSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration errors and warnings per job
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the original Agent Job.
	IsEnabled bool `pulumi:"isEnabled"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Agent Job name.
	Name string `pulumi:"name"`
	// Result type
	// Expected value is 'AgentJobLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs and MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration errors and warnings per job
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the original Agent Job.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Agent Job name.
	Name pulumi.StringInput `pulumi:"name"`
	// Result type
	// Expected value is 'AgentJobLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput {
	return o
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration errors and warnings per job
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the original Agent Job.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Agent Job name.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'AgentJobLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse struct {
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration errors and warnings per job
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// The state of the original Agent Job.
	IsEnabled bool `pulumi:"isEnabled"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Agent Job name.
	Name string `pulumi:"name"`
	// Result type
	// Expected value is 'AgentJobLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs and MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs struct {
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration errors and warnings per job
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The state of the original Agent Job.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Agent Job name.
	Name pulumi.StringInput `pulumi:"name"`
	// Result type
	// Expected value is 'AgentJobLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput() MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput {
	return o
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration errors and warnings per job
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The state of the original Agent Job.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Agent Job name.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'AgentJobLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputAgentJobLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse struct {
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Size of the database in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
	// Current stage of migration
	Stage string `pulumi:"stage"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs and MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Size of the database in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
	// Current stage of migration
	Stage pulumi.StringInput `pulumi:"stage"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput {
	return o
}

// Name of the database
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Size of the database in megabytes
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Current stage of migration
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse struct {
	// Name of the database
	DatabaseName string `pulumi:"databaseName"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration progress message
	Message string `pulumi:"message"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Size of the database in megabytes
	SizeMB float64 `pulumi:"sizeMB"`
	// Current stage of migration
	Stage string `pulumi:"stage"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs and MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Result type
	// Expected value is 'DatabaseLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Size of the database in megabytes
	SizeMB pulumi.Float64Input `pulumi:"sizeMB"`
	// Current stage of migration
	Stage pulumi.StringInput `pulumi:"stage"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput() MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput {
	return o
}

// Name of the database
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'DatabaseLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Size of the database in megabytes
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) SizeMB() pulumi.Float64Output {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) float64 { return v.SizeMB }).(pulumi.Float64Output)
}

// Current stage of migration
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputDatabaseLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorInvokeResponse struct {
	// Migration error
	Error ReportableExceptionInvokeResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlMITaskOutputErrorInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs and MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputErrorInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputErrorInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput
}

type MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs struct {
	// Migration error
	Error ReportableExceptionInvokeResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputErrorInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) Error() ReportableExceptionInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorInvokeResponse) ReportableExceptionInvokeResponse {
		return v.Error
	}).(ReportableExceptionInvokeResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorResponse struct {
	// Migration error
	Error ReportableExceptionResponse `pulumi:"error"`
	// Result identifier
	Id string `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType string `pulumi:"resultType"`
}

// MigrateSqlServerSqlMITaskOutputErrorResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputErrorResponseArgs and MigrateSqlServerSqlMITaskOutputErrorResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputErrorResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputErrorResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputErrorResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput
	ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput
}

type MigrateSqlServerSqlMITaskOutputErrorResponseArgs struct {
	// Migration error
	Error ReportableExceptionResponseInput `pulumi:"error"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Result type
	// Expected value is 'ErrorOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
}

func (MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputErrorResponseArgs) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputErrorResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputErrorResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputErrorResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutput() MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ToMigrateSqlServerSqlMITaskOutputErrorResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputErrorResponseOutput {
	return o
}

// Migration error
func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) Error() ReportableExceptionResponseOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) ReportableExceptionResponse { return v.Error }).(ReportableExceptionResponseOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'ErrorOutput'.
func (o MigrateSqlServerSqlMITaskOutputErrorResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputErrorResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse struct {
	// Login migration end time
	EndedOn string `pulumi:"endedOn"`
	// Login migration errors and warnings per login
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Login name.
	LoginName string `pulumi:"loginName"`
	// Login migration progress message
	Message string `pulumi:"message"`
	// Result type
	// Expected value is 'LoginLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current stage of login
	Stage string `pulumi:"stage"`
	// Login migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of login
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs and MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs struct {
	// Login migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Login migration errors and warnings per login
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Login name.
	LoginName pulumi.StringInput `pulumi:"loginName"`
	// Login migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Result type
	// Expected value is 'LoginLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current stage of login
	Stage pulumi.StringInput `pulumi:"stage"`
	// Login migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of login
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput {
	return o
}

// Login migration end time
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Login migration errors and warnings per login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Login name.
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) LoginName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.LoginName }).(pulumi.StringOutput)
}

// Login migration progress message
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'LoginLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current stage of login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Login migration start time
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponse struct {
	// Login migration end time
	EndedOn string `pulumi:"endedOn"`
	// Login migration errors and warnings per login
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Login name.
	LoginName string `pulumi:"loginName"`
	// Login migration progress message
	Message string `pulumi:"message"`
	// Result type
	// Expected value is 'LoginLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Current stage of login
	Stage string `pulumi:"stage"`
	// Login migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of login
	State string `pulumi:"state"`
}

// MigrateSqlServerSqlMITaskOutputLoginLevelResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs and MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputLoginLevelResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputLoginLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs struct {
	// Login migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Login migration errors and warnings per login
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Login name.
	LoginName pulumi.StringInput `pulumi:"loginName"`
	// Login migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// Result type
	// Expected value is 'LoginLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Current stage of login
	Stage pulumi.StringInput `pulumi:"stage"`
	// Login migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of login
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputLoginLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputLoginLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput() MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputLoginLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput {
	return o
}

// Login migration end time
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Login migration errors and warnings per login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Login name.
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) LoginName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.LoginName }).(pulumi.StringOutput)
}

// Login migration progress message
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Result type
// Expected value is 'LoginLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Current stage of login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.Stage }).(pulumi.StringOutput)
}

// Login migration start time
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of login
func (o MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputLoginLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse struct {
	// Selected agent jobs as a map from name to id
	AgentJobs map[string]string `pulumi:"agentJobs"`
	// Selected databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Selected logins as a map from name to id
	Logins map[string]string `pulumi:"logins"`
	// Migration progress message
	Message string `pulumi:"message"`
	// List of orphaned users.
	OrphanedUsersInfo []OrphanedUserInfoInvokeResponse `pulumi:"orphanedUsersInfo"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Map of server role migration results.
	ServerRoleResults map[string]StartMigrationScenarioServerRoleResultInvokeResponse `pulumi:"serverRoleResults"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Current status of migration
	Status string `pulumi:"status"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs and MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs struct {
	// Selected agent jobs as a map from name to id
	AgentJobs pulumi.StringMapInput `pulumi:"agentJobs"`
	// Selected databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Selected logins as a map from name to id
	Logins pulumi.StringMapInput `pulumi:"logins"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// List of orphaned users.
	OrphanedUsersInfo OrphanedUserInfoInvokeResponseArrayInput `pulumi:"orphanedUsersInfo"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Map of server role migration results.
	ServerRoleResults StartMigrationScenarioServerRoleResultInvokeResponseMapInput `pulumi:"serverRoleResults"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Current status of migration
	Status pulumi.StringInput `pulumi:"status"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput {
	return o
}

// Selected agent jobs as a map from name to id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) map[string]string {
		return v.AgentJobs
	}).(pulumi.StringMapOutput)
}

// Selected databases as a map from database name to database id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) map[string]string {
		return v.Databases
	}).(pulumi.StringMapOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Selected logins as a map from name to id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// List of orphaned users.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) OrphanedUsersInfo() OrphanedUserInfoInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) []OrphanedUserInfoInvokeResponse {
		return v.OrphanedUsersInfo
	}).(OrphanedUserInfoInvokeResponseArrayOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Map of server role migration results.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) ServerRoleResults() StartMigrationScenarioServerRoleResultInvokeResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) map[string]StartMigrationScenarioServerRoleResultInvokeResponse {
		return v.ServerRoleResults
	}).(StartMigrationScenarioServerRoleResultInvokeResponseMapOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string {
		return v.SourceServerVersion
	}).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Current status of migration
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponse) string {
		return v.TargetServerVersion
	}).(pulumi.StringOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponse struct {
	// Selected agent jobs as a map from name to id
	AgentJobs map[string]string `pulumi:"agentJobs"`
	// Selected databases as a map from database name to database id
	Databases map[string]string `pulumi:"databases"`
	// Migration end time
	EndedOn string `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id string `pulumi:"id"`
	// Selected logins as a map from name to id
	Logins map[string]string `pulumi:"logins"`
	// Migration progress message
	Message string `pulumi:"message"`
	// List of orphaned users.
	OrphanedUsersInfo []OrphanedUserInfoResponse `pulumi:"orphanedUsersInfo"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType string `pulumi:"resultType"`
	// Map of server role migration results.
	ServerRoleResults map[string]StartMigrationScenarioServerRoleResultResponse `pulumi:"serverRoleResults"`
	// Source server brand version
	SourceServerBrandVersion string `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion string `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn string `pulumi:"startedOn"`
	// Current state of migration
	State string `pulumi:"state"`
	// Current status of migration
	Status string `pulumi:"status"`
	// Target server brand version
	TargetServerBrandVersion string `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion string `pulumi:"targetServerVersion"`
}

// MigrateSqlServerSqlMITaskOutputMigrationLevelResponseInput is an input type that accepts MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs and MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskOutputMigrationLevelResponseInput` via:
//
//          MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs{...}
type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput
	ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs struct {
	// Selected agent jobs as a map from name to id
	AgentJobs pulumi.StringMapInput `pulumi:"agentJobs"`
	// Selected databases as a map from database name to database id
	Databases pulumi.StringMapInput `pulumi:"databases"`
	// Migration end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Selected logins as a map from name to id
	Logins pulumi.StringMapInput `pulumi:"logins"`
	// Migration progress message
	Message pulumi.StringInput `pulumi:"message"`
	// List of orphaned users.
	OrphanedUsersInfo OrphanedUserInfoResponseArrayInput `pulumi:"orphanedUsersInfo"`
	// Result type
	// Expected value is 'MigrationLevelOutput'.
	ResultType pulumi.StringInput `pulumi:"resultType"`
	// Map of server role migration results.
	ServerRoleResults StartMigrationScenarioServerRoleResultResponseMapInput `pulumi:"serverRoleResults"`
	// Source server brand version
	SourceServerBrandVersion pulumi.StringInput `pulumi:"sourceServerBrandVersion"`
	// Source server version
	SourceServerVersion pulumi.StringInput `pulumi:"sourceServerVersion"`
	// Migration start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
	// Current status of migration
	Status pulumi.StringInput `pulumi:"status"`
	// Target server brand version
	TargetServerBrandVersion pulumi.StringInput `pulumi:"targetServerBrandVersion"`
	// Target server version
	TargetServerVersion pulumi.StringInput `pulumi:"targetServerVersion"`
}

func (MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskOutputMigrationLevelResponseArgs) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput)
}

type MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskOutputMigrationLevelResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput() MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ToMigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput {
	return o
}

// Selected agent jobs as a map from name to id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) AgentJobs() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.AgentJobs }).(pulumi.StringMapOutput)
}

// Selected databases as a map from database name to database id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Databases() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.Databases }).(pulumi.StringMapOutput)
}

// Migration end time
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Migration exceptions and warnings.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Selected logins as a map from name to id
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Logins() pulumi.StringMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]string { return v.Logins }).(pulumi.StringMapOutput)
}

// Migration progress message
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Message }).(pulumi.StringOutput)
}

// List of orphaned users.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) OrphanedUsersInfo() OrphanedUserInfoResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) []OrphanedUserInfoResponse {
		return v.OrphanedUsersInfo
	}).(OrphanedUserInfoResponseArrayOutput)
}

// Result type
// Expected value is 'MigrationLevelOutput'.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ResultType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.ResultType }).(pulumi.StringOutput)
}

// Map of server role migration results.
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) ServerRoleResults() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) map[string]StartMigrationScenarioServerRoleResultResponse {
		return v.ServerRoleResults
	}).(StartMigrationScenarioServerRoleResultResponseMapOutput)
}

// Source server brand version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) SourceServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string {
		return v.SourceServerBrandVersion
	}).(pulumi.StringOutput)
}

// Source server version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) SourceServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.SourceServerVersion }).(pulumi.StringOutput)
}

// Migration start time
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current state of migration
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.State }).(pulumi.StringOutput)
}

// Current status of migration
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Target server brand version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) TargetServerBrandVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string {
		return v.TargetServerBrandVersion
	}).(pulumi.StringOutput)
}

// Target server version
func (o MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput) TargetServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskOutputMigrationLevelResponse) string { return v.TargetServerVersion }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskProperties struct {
	// Task input
	Input *MigrateSqlServerSqlMITaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMITaskPropertiesInput is an input type that accepts MigrateSqlServerSqlMITaskPropertiesArgs and MigrateSqlServerSqlMITaskPropertiesOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskPropertiesInput` via:
//
//          MigrateSqlServerSqlMITaskPropertiesArgs{...}
type MigrateSqlServerSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput
	ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(context.Context) MigrateSqlServerSqlMITaskPropertiesOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesArgs struct {
	// Task input
	Input MigrateSqlServerSqlMITaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskPropertiesArgs) ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput {
	return i.ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskPropertiesArgs) ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskPropertiesOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) ToMigrateSqlServerSqlMITaskPropertiesOutput() MigrateSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesOutput) ToMigrateSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesOutput {
	return o
}

// Task input
func (o MigrateSqlServerSqlMITaskPropertiesOutput) Input() MigrateSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskProperties) *MigrateSqlServerSqlMITaskInput { return v.Input }).(MigrateSqlServerSqlMITaskInputPtrOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
func (o MigrateSqlServerSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlMITaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMITaskPropertiesInvokeResponseInput is an input type that accepts MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs and MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskPropertiesInvokeResponseInput` via:
//
//          MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs{...}
type MigrateSqlServerSqlMITaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput
	ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlMITaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskPropertiesInvokeResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput() MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) Input() MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) *MigrateSqlServerSqlMITaskInputInvokeResponse {
		return v.Input
	}).(MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
func (o MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *MigrateSqlServerSqlMITaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []interface{} `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// MigrateSqlServerSqlMITaskPropertiesResponseInput is an input type that accepts MigrateSqlServerSqlMITaskPropertiesResponseArgs and MigrateSqlServerSqlMITaskPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateSqlServerSqlMITaskPropertiesResponseInput` via:
//
//          MigrateSqlServerSqlMITaskPropertiesResponseArgs{...}
type MigrateSqlServerSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput
	ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input MigrateSqlServerSqlMITaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output pulumi.ArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (MigrateSqlServerSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i MigrateSqlServerSqlMITaskPropertiesResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return i.ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSqlServerSqlMITaskPropertiesResponseArgs) ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSqlServerSqlMITaskPropertiesResponseOutput)
}

// Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
type MigrateSqlServerSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSqlServerSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesResponseOutput() MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) ToMigrateSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) MigrateSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Task input
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Input() MigrateSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) *MigrateSqlServerSqlMITaskInputResponse {
		return v.Input
	}).(MigrateSqlServerSqlMITaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) Output() pulumi.ArrayOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Output }).(pulumi.ArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'Migrate.SqlServer.AzureSqlDbMI'.
func (o MigrateSqlServerSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSqlServerSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputInvokeResponse struct {
	// Time stamp to complete
	CommitTimeStamp *string `pulumi:"commitTimeStamp"`
	// Name of database
	DatabaseName string `pulumi:"databaseName"`
}

// MigrateSyncCompleteCommandInputInvokeResponseInput is an input type that accepts MigrateSyncCompleteCommandInputInvokeResponseArgs and MigrateSyncCompleteCommandInputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandInputInvokeResponseInput` via:
//
//          MigrateSyncCompleteCommandInputInvokeResponseArgs{...}
type MigrateSyncCompleteCommandInputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputInvokeResponseOutput() MigrateSyncCompleteCommandInputInvokeResponseOutput
	ToMigrateSyncCompleteCommandInputInvokeResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandInputInvokeResponseOutput
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputInvokeResponseArgs struct {
	// Time stamp to complete
	CommitTimeStamp pulumi.StringPtrInput `pulumi:"commitTimeStamp"`
	// Name of database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (MigrateSyncCompleteCommandInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandInputInvokeResponseArgs) ToMigrateSyncCompleteCommandInputInvokeResponseOutput() MigrateSyncCompleteCommandInputInvokeResponseOutput {
	return i.ToMigrateSyncCompleteCommandInputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputInvokeResponseArgs) ToMigrateSyncCompleteCommandInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputInvokeResponseOutput)
}

func (i MigrateSyncCompleteCommandInputInvokeResponseArgs) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutput() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputInvokeResponseArgs) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputInvokeResponseOutput).ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx)
}

// MigrateSyncCompleteCommandInputInvokeResponsePtrInput is an input type that accepts MigrateSyncCompleteCommandInputInvokeResponseArgs, MigrateSyncCompleteCommandInputInvokeResponsePtr and MigrateSyncCompleteCommandInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandInputInvokeResponsePtrInput` via:
//
//          MigrateSyncCompleteCommandInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSyncCompleteCommandInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutput() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput
	ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Context) MigrateSyncCompleteCommandInputInvokeResponsePtrOutput
}

type migrateSyncCompleteCommandInputInvokeResponsePtrType MigrateSyncCompleteCommandInputInvokeResponseArgs

func MigrateSyncCompleteCommandInputInvokeResponsePtr(v *MigrateSyncCompleteCommandInputInvokeResponseArgs) MigrateSyncCompleteCommandInputInvokeResponsePtrInput {
	return (*migrateSyncCompleteCommandInputInvokeResponsePtrType)(v)
}

func (*migrateSyncCompleteCommandInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (i *migrateSyncCompleteCommandInputInvokeResponsePtrType) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutput() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSyncCompleteCommandInputInvokeResponsePtrType) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) ToMigrateSyncCompleteCommandInputInvokeResponseOutput() MigrateSyncCompleteCommandInputInvokeResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) ToMigrateSyncCompleteCommandInputInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutput() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputInvokeResponse) *MigrateSyncCompleteCommandInputInvokeResponse {
		return &v
	}).(MigrateSyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Time stamp to complete
func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputInvokeResponse) *string { return v.CommitTimeStamp }).(pulumi.StringPtrOutput)
}

// Name of database
func (o MigrateSyncCompleteCommandInputInvokeResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputInvokeResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type MigrateSyncCompleteCommandInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputInvokeResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutput() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) ToMigrateSyncCompleteCommandInputInvokeResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) Elem() MigrateSyncCompleteCommandInputInvokeResponseOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputInvokeResponse) MigrateSyncCompleteCommandInputInvokeResponse {
		return *v
	}).(MigrateSyncCompleteCommandInputInvokeResponseOutput)
}

// Time stamp to complete
func (o MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommitTimeStamp
	}).(pulumi.StringPtrOutput)
}

// Name of database
func (o MigrateSyncCompleteCommandInputInvokeResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputResponse struct {
	// Time stamp to complete
	CommitTimeStamp *string `pulumi:"commitTimeStamp"`
	// Name of database
	DatabaseName string `pulumi:"databaseName"`
}

// MigrateSyncCompleteCommandInputResponseInput is an input type that accepts MigrateSyncCompleteCommandInputResponseArgs and MigrateSyncCompleteCommandInputResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandInputResponseInput` via:
//
//          MigrateSyncCompleteCommandInputResponseArgs{...}
type MigrateSyncCompleteCommandInputResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput
	ToMigrateSyncCompleteCommandInputResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandInputResponseOutput
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputResponseArgs struct {
	// Time stamp to complete
	CommitTimeStamp pulumi.StringPtrInput `pulumi:"commitTimeStamp"`
	// Name of database
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (MigrateSyncCompleteCommandInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput {
	return i.ToMigrateSyncCompleteCommandInputResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponseOutput)
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandInputResponseArgs) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponseOutput).ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx)
}

// MigrateSyncCompleteCommandInputResponsePtrInput is an input type that accepts MigrateSyncCompleteCommandInputResponseArgs, MigrateSyncCompleteCommandInputResponsePtr and MigrateSyncCompleteCommandInputResponsePtrOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandInputResponsePtrInput` via:
//
//          MigrateSyncCompleteCommandInputResponseArgs{...}
//
//  or:
//
//          nil
type MigrateSyncCompleteCommandInputResponsePtrInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput
	ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput
}

type migrateSyncCompleteCommandInputResponsePtrType MigrateSyncCompleteCommandInputResponseArgs

func MigrateSyncCompleteCommandInputResponsePtr(v *MigrateSyncCompleteCommandInputResponseArgs) MigrateSyncCompleteCommandInputResponsePtrInput {
	return (*migrateSyncCompleteCommandInputResponsePtrType)(v)
}

func (*migrateSyncCompleteCommandInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (i *migrateSyncCompleteCommandInputResponsePtrType) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return i.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (i *migrateSyncCompleteCommandInputResponsePtrType) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

// Input for command that completes sync migration for a database.
type MigrateSyncCompleteCommandInputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponseOutput() MigrateSyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(context.Background())
}

func (o MigrateSyncCompleteCommandInputResponseOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputResponse) *MigrateSyncCompleteCommandInputResponse {
		return &v
	}).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

// Time stamp to complete
func (o MigrateSyncCompleteCommandInputResponseOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputResponse) *string { return v.CommitTimeStamp }).(pulumi.StringPtrOutput)
}

// Name of database
func (o MigrateSyncCompleteCommandInputResponseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandInputResponse) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type MigrateSyncCompleteCommandInputResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrateSyncCompleteCommandInputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutput() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) ToMigrateSyncCompleteCommandInputResponsePtrOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o
}

func (o MigrateSyncCompleteCommandInputResponsePtrOutput) Elem() MigrateSyncCompleteCommandInputResponseOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) MigrateSyncCompleteCommandInputResponse { return *v }).(MigrateSyncCompleteCommandInputResponseOutput)
}

// Time stamp to complete
func (o MigrateSyncCompleteCommandInputResponsePtrOutput) CommitTimeStamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.CommitTimeStamp
	}).(pulumi.StringPtrOutput)
}

// Name of database
func (o MigrateSyncCompleteCommandInputResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrateSyncCompleteCommandInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputInvokeResponse struct {
	// List of errors that happened during the command execution
	Errors []ReportableExceptionInvokeResponse `pulumi:"errors"`
	// Result identifier
	Id string `pulumi:"id"`
}

// MigrateSyncCompleteCommandOutputInvokeResponseInput is an input type that accepts MigrateSyncCompleteCommandOutputInvokeResponseArgs and MigrateSyncCompleteCommandOutputInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandOutputInvokeResponseInput` via:
//
//          MigrateSyncCompleteCommandOutputInvokeResponseArgs{...}
type MigrateSyncCompleteCommandOutputInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandOutputInvokeResponseOutput() MigrateSyncCompleteCommandOutputInvokeResponseOutput
	ToMigrateSyncCompleteCommandOutputInvokeResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandOutputInvokeResponseOutput
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputInvokeResponseArgs struct {
	// List of errors that happened during the command execution
	Errors ReportableExceptionInvokeResponseArrayInput `pulumi:"errors"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
}

func (MigrateSyncCompleteCommandOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputInvokeResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandOutputInvokeResponseArgs) ToMigrateSyncCompleteCommandOutputInvokeResponseOutput() MigrateSyncCompleteCommandOutputInvokeResponseOutput {
	return i.ToMigrateSyncCompleteCommandOutputInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandOutputInvokeResponseArgs) ToMigrateSyncCompleteCommandOutputInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandOutputInvokeResponseOutput)
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputInvokeResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandOutputInvokeResponseOutput) ToMigrateSyncCompleteCommandOutputInvokeResponseOutput() MigrateSyncCompleteCommandOutputInvokeResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandOutputInvokeResponseOutput) ToMigrateSyncCompleteCommandOutputInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputInvokeResponseOutput {
	return o
}

// List of errors that happened during the command execution
func (o MigrateSyncCompleteCommandOutputInvokeResponseOutput) Errors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.Errors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o MigrateSyncCompleteCommandOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputResponse struct {
	// List of errors that happened during the command execution
	Errors []ReportableExceptionResponse `pulumi:"errors"`
	// Result identifier
	Id string `pulumi:"id"`
}

// MigrateSyncCompleteCommandOutputResponseInput is an input type that accepts MigrateSyncCompleteCommandOutputResponseArgs and MigrateSyncCompleteCommandOutputResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandOutputResponseInput` via:
//
//          MigrateSyncCompleteCommandOutputResponseArgs{...}
type MigrateSyncCompleteCommandOutputResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput
	ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandOutputResponseOutput
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputResponseArgs struct {
	// List of errors that happened during the command execution
	Errors ReportableExceptionResponseArrayInput `pulumi:"errors"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
}

func (MigrateSyncCompleteCommandOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandOutputResponseArgs) ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput {
	return i.ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandOutputResponseArgs) ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandOutputResponseOutput)
}

// Output for command that completes sync migration for a database.
type MigrateSyncCompleteCommandOutputResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandOutputResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) ToMigrateSyncCompleteCommandOutputResponseOutput() MigrateSyncCompleteCommandOutputResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandOutputResponseOutput) ToMigrateSyncCompleteCommandOutputResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandOutputResponseOutput {
	return o
}

// List of errors that happened during the command execution
func (o MigrateSyncCompleteCommandOutputResponseOutput) Errors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputResponse) []ReportableExceptionResponse { return v.Errors }).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o MigrateSyncCompleteCommandOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesInvokeResponse struct {
	// Command type.
	// Expected value is 'Migrate.Sync.Complete.Database'.
	CommandType string `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Command input
	Input *MigrateSyncCompleteCommandInputInvokeResponse `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateSyncCompleteCommandOutputInvokeResponse `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State string `pulumi:"state"`
}

// MigrateSyncCompleteCommandPropertiesInvokeResponseInput is an input type that accepts MigrateSyncCompleteCommandPropertiesInvokeResponseArgs and MigrateSyncCompleteCommandPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandPropertiesInvokeResponseInput` via:
//
//          MigrateSyncCompleteCommandPropertiesInvokeResponseArgs{...}
type MigrateSyncCompleteCommandPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutput() MigrateSyncCompleteCommandPropertiesInvokeResponseOutput
	ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandPropertiesInvokeResponseOutput
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesInvokeResponseArgs struct {
	// Command type.
	// Expected value is 'Migrate.Sync.Complete.Database'.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Command input
	Input MigrateSyncCompleteCommandInputInvokeResponsePtrInput `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateSyncCompleteCommandOutputInvokeResponseInput `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSyncCompleteCommandPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesInvokeResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandPropertiesInvokeResponseArgs) ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutput() MigrateSyncCompleteCommandPropertiesInvokeResponseOutput {
	return i.ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandPropertiesInvokeResponseArgs) ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandPropertiesInvokeResponseOutput)
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesInvokeResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutput() MigrateSyncCompleteCommandPropertiesInvokeResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) ToMigrateSyncCompleteCommandPropertiesInvokeResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesInvokeResponseOutput {
	return o
}

// Command type.
// Expected value is 'Migrate.Sync.Complete.Database'.
func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesInvokeResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesInvokeResponse) []ODataErrorInvokeResponse { return v.Errors }).(ODataErrorInvokeResponseArrayOutput)
}

// Command input
func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) Input() MigrateSyncCompleteCommandInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesInvokeResponse) *MigrateSyncCompleteCommandInputInvokeResponse {
		return v.Input
	}).(MigrateSyncCompleteCommandInputInvokeResponsePtrOutput)
}

// Command output. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) Output() MigrateSyncCompleteCommandOutputInvokeResponseOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesInvokeResponse) MigrateSyncCompleteCommandOutputInvokeResponse {
		return v.Output
	}).(MigrateSyncCompleteCommandOutputInvokeResponseOutput)
}

// The state of the command. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesResponse struct {
	// Command type.
	// Expected value is 'Migrate.Sync.Complete.Database'.
	CommandType string `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Command input
	Input *MigrateSyncCompleteCommandInputResponse `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateSyncCompleteCommandOutputResponse `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State string `pulumi:"state"`
}

// MigrateSyncCompleteCommandPropertiesResponseInput is an input type that accepts MigrateSyncCompleteCommandPropertiesResponseArgs and MigrateSyncCompleteCommandPropertiesResponseOutput values.
// You can construct a concrete instance of `MigrateSyncCompleteCommandPropertiesResponseInput` via:
//
//          MigrateSyncCompleteCommandPropertiesResponseArgs{...}
type MigrateSyncCompleteCommandPropertiesResponseInput interface {
	pulumi.Input

	ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput
	ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesResponseArgs struct {
	// Command type.
	// Expected value is 'Migrate.Sync.Complete.Database'.
	CommandType pulumi.StringInput `pulumi:"commandType"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Command input
	Input MigrateSyncCompleteCommandInputResponsePtrInput `pulumi:"input"`
	// Command output. This is ignored if submitted.
	Output MigrateSyncCompleteCommandOutputResponseInput `pulumi:"output"`
	// The state of the command. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
}

func (MigrateSyncCompleteCommandPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (i MigrateSyncCompleteCommandPropertiesResponseArgs) ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput {
	return i.ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(context.Background())
}

func (i MigrateSyncCompleteCommandPropertiesResponseArgs) ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrateSyncCompleteCommandPropertiesResponseOutput)
}

// Properties for the command that completes sync migration for a database.
type MigrateSyncCompleteCommandPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MigrateSyncCompleteCommandPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrateSyncCompleteCommandPropertiesResponse)(nil)).Elem()
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) ToMigrateSyncCompleteCommandPropertiesResponseOutput() MigrateSyncCompleteCommandPropertiesResponseOutput {
	return o
}

func (o MigrateSyncCompleteCommandPropertiesResponseOutput) ToMigrateSyncCompleteCommandPropertiesResponseOutputWithContext(ctx context.Context) MigrateSyncCompleteCommandPropertiesResponseOutput {
	return o
}

// Command type.
// Expected value is 'Migrate.Sync.Complete.Database'.
func (o MigrateSyncCompleteCommandPropertiesResponseOutput) CommandType() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) string { return v.CommandType }).(pulumi.StringOutput)
}

// Array of errors. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) []ODataErrorResponse { return v.Errors }).(ODataErrorResponseArrayOutput)
}

// Command input
func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Input() MigrateSyncCompleteCommandInputResponsePtrOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) *MigrateSyncCompleteCommandInputResponse {
		return v.Input
	}).(MigrateSyncCompleteCommandInputResponsePtrOutput)
}

// Command output. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesResponseOutput) Output() MigrateSyncCompleteCommandOutputResponseOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) MigrateSyncCompleteCommandOutputResponse {
		return v.Output
	}).(MigrateSyncCompleteCommandOutputResponseOutput)
}

// The state of the command. This is ignored if submitted.
func (o MigrateSyncCompleteCommandPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v MigrateSyncCompleteCommandPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoInvokeResponse struct {
	// Whether object is eligible for migration or not.
	IsEligibleForMigration bool `pulumi:"isEligibleForMigration"`
	// Information about eligibility failure for the server object.
	ValidationMessages []string `pulumi:"validationMessages"`
}

// MigrationEligibilityInfoInvokeResponseInput is an input type that accepts MigrationEligibilityInfoInvokeResponseArgs and MigrationEligibilityInfoInvokeResponseOutput values.
// You can construct a concrete instance of `MigrationEligibilityInfoInvokeResponseInput` via:
//
//          MigrationEligibilityInfoInvokeResponseArgs{...}
type MigrationEligibilityInfoInvokeResponseInput interface {
	pulumi.Input

	ToMigrationEligibilityInfoInvokeResponseOutput() MigrationEligibilityInfoInvokeResponseOutput
	ToMigrationEligibilityInfoInvokeResponseOutputWithContext(context.Context) MigrationEligibilityInfoInvokeResponseOutput
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoInvokeResponseArgs struct {
	// Whether object is eligible for migration or not.
	IsEligibleForMigration pulumi.BoolInput `pulumi:"isEligibleForMigration"`
	// Information about eligibility failure for the server object.
	ValidationMessages pulumi.StringArrayInput `pulumi:"validationMessages"`
}

func (MigrationEligibilityInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoInvokeResponse)(nil)).Elem()
}

func (i MigrationEligibilityInfoInvokeResponseArgs) ToMigrationEligibilityInfoInvokeResponseOutput() MigrationEligibilityInfoInvokeResponseOutput {
	return i.ToMigrationEligibilityInfoInvokeResponseOutputWithContext(context.Background())
}

func (i MigrationEligibilityInfoInvokeResponseArgs) ToMigrationEligibilityInfoInvokeResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationEligibilityInfoInvokeResponseOutput)
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrationEligibilityInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoInvokeResponse)(nil)).Elem()
}

func (o MigrationEligibilityInfoInvokeResponseOutput) ToMigrationEligibilityInfoInvokeResponseOutput() MigrationEligibilityInfoInvokeResponseOutput {
	return o
}

func (o MigrationEligibilityInfoInvokeResponseOutput) ToMigrationEligibilityInfoInvokeResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoInvokeResponseOutput {
	return o
}

// Whether object is eligible for migration or not.
func (o MigrationEligibilityInfoInvokeResponseOutput) IsEligibleForMigration() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoInvokeResponse) bool { return v.IsEligibleForMigration }).(pulumi.BoolOutput)
}

// Information about eligibility failure for the server object.
func (o MigrationEligibilityInfoInvokeResponseOutput) ValidationMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoInvokeResponse) []string { return v.ValidationMessages }).(pulumi.StringArrayOutput)
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoResponse struct {
	// Whether object is eligible for migration or not.
	IsEligibleForMigration bool `pulumi:"isEligibleForMigration"`
	// Information about eligibility failure for the server object.
	ValidationMessages []string `pulumi:"validationMessages"`
}

// MigrationEligibilityInfoResponseInput is an input type that accepts MigrationEligibilityInfoResponseArgs and MigrationEligibilityInfoResponseOutput values.
// You can construct a concrete instance of `MigrationEligibilityInfoResponseInput` via:
//
//          MigrationEligibilityInfoResponseArgs{...}
type MigrationEligibilityInfoResponseInput interface {
	pulumi.Input

	ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput
	ToMigrationEligibilityInfoResponseOutputWithContext(context.Context) MigrationEligibilityInfoResponseOutput
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoResponseArgs struct {
	// Whether object is eligible for migration or not.
	IsEligibleForMigration pulumi.BoolInput `pulumi:"isEligibleForMigration"`
	// Information about eligibility failure for the server object.
	ValidationMessages pulumi.StringArrayInput `pulumi:"validationMessages"`
}

func (MigrationEligibilityInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoResponse)(nil)).Elem()
}

func (i MigrationEligibilityInfoResponseArgs) ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput {
	return i.ToMigrationEligibilityInfoResponseOutputWithContext(context.Background())
}

func (i MigrationEligibilityInfoResponseArgs) ToMigrationEligibilityInfoResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationEligibilityInfoResponseOutput)
}

// Information about migration eligibility of a server object
type MigrationEligibilityInfoResponseOutput struct{ *pulumi.OutputState }

func (MigrationEligibilityInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationEligibilityInfoResponse)(nil)).Elem()
}

func (o MigrationEligibilityInfoResponseOutput) ToMigrationEligibilityInfoResponseOutput() MigrationEligibilityInfoResponseOutput {
	return o
}

func (o MigrationEligibilityInfoResponseOutput) ToMigrationEligibilityInfoResponseOutputWithContext(ctx context.Context) MigrationEligibilityInfoResponseOutput {
	return o
}

// Whether object is eligible for migration or not.
func (o MigrationEligibilityInfoResponseOutput) IsEligibleForMigration() pulumi.BoolOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoResponse) bool { return v.IsEligibleForMigration }).(pulumi.BoolOutput)
}

// Information about eligibility failure for the server object.
func (o MigrationEligibilityInfoResponseOutput) ValidationMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MigrationEligibilityInfoResponse) []string { return v.ValidationMessages }).(pulumi.StringArrayOutput)
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultInvokeResponse struct {
	// Migration validation result identifier
	Id string `pulumi:"id"`
	// The url of the report.
	ReportUrl string `pulumi:"reportUrl"`
}

// MigrationReportResultInvokeResponseInput is an input type that accepts MigrationReportResultInvokeResponseArgs and MigrationReportResultInvokeResponseOutput values.
// You can construct a concrete instance of `MigrationReportResultInvokeResponseInput` via:
//
//          MigrationReportResultInvokeResponseArgs{...}
type MigrationReportResultInvokeResponseInput interface {
	pulumi.Input

	ToMigrationReportResultInvokeResponseOutput() MigrationReportResultInvokeResponseOutput
	ToMigrationReportResultInvokeResponseOutputWithContext(context.Context) MigrationReportResultInvokeResponseOutput
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultInvokeResponseArgs struct {
	// Migration validation result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The url of the report.
	ReportUrl pulumi.StringInput `pulumi:"reportUrl"`
}

func (MigrationReportResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultInvokeResponse)(nil)).Elem()
}

func (i MigrationReportResultInvokeResponseArgs) ToMigrationReportResultInvokeResponseOutput() MigrationReportResultInvokeResponseOutput {
	return i.ToMigrationReportResultInvokeResponseOutputWithContext(context.Background())
}

func (i MigrationReportResultInvokeResponseArgs) ToMigrationReportResultInvokeResponseOutputWithContext(ctx context.Context) MigrationReportResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationReportResultInvokeResponseOutput)
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrationReportResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultInvokeResponse)(nil)).Elem()
}

func (o MigrationReportResultInvokeResponseOutput) ToMigrationReportResultInvokeResponseOutput() MigrationReportResultInvokeResponseOutput {
	return o
}

func (o MigrationReportResultInvokeResponseOutput) ToMigrationReportResultInvokeResponseOutputWithContext(ctx context.Context) MigrationReportResultInvokeResponseOutput {
	return o
}

// Migration validation result identifier
func (o MigrationReportResultInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationReportResultInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The url of the report.
func (o MigrationReportResultInvokeResponseOutput) ReportUrl() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationReportResultInvokeResponse) string { return v.ReportUrl }).(pulumi.StringOutput)
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultResponse struct {
	// Migration validation result identifier
	Id string `pulumi:"id"`
	// The url of the report.
	ReportUrl string `pulumi:"reportUrl"`
}

// MigrationReportResultResponseInput is an input type that accepts MigrationReportResultResponseArgs and MigrationReportResultResponseOutput values.
// You can construct a concrete instance of `MigrationReportResultResponseInput` via:
//
//          MigrationReportResultResponseArgs{...}
type MigrationReportResultResponseInput interface {
	pulumi.Input

	ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput
	ToMigrationReportResultResponseOutputWithContext(context.Context) MigrationReportResultResponseOutput
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultResponseArgs struct {
	// Migration validation result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// The url of the report.
	ReportUrl pulumi.StringInput `pulumi:"reportUrl"`
}

func (MigrationReportResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultResponse)(nil)).Elem()
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput {
	return i.ToMigrationReportResultResponseOutputWithContext(context.Background())
}

func (i MigrationReportResultResponseArgs) ToMigrationReportResultResponseOutputWithContext(ctx context.Context) MigrationReportResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationReportResultResponseOutput)
}

// Migration validation report result, contains the url for downloading the generated report.
type MigrationReportResultResponseOutput struct{ *pulumi.OutputState }

func (MigrationReportResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationReportResultResponse)(nil)).Elem()
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponseOutput() MigrationReportResultResponseOutput {
	return o
}

func (o MigrationReportResultResponseOutput) ToMigrationReportResultResponseOutputWithContext(ctx context.Context) MigrationReportResultResponseOutput {
	return o
}

// Migration validation result identifier
func (o MigrationReportResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationReportResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The url of the report.
func (o MigrationReportResultResponseOutput) ReportUrl() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationReportResultResponse) string { return v.ReportUrl }).(pulumi.StringOutput)
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultInvokeResponse struct {
	// Validation end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Name of the source database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status string `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName string `pulumi:"targetDatabaseName"`
}

// MigrationValidationDatabaseSummaryResultInvokeResponseInput is an input type that accepts MigrationValidationDatabaseSummaryResultInvokeResponseArgs and MigrationValidationDatabaseSummaryResultInvokeResponseOutput values.
// You can construct a concrete instance of `MigrationValidationDatabaseSummaryResultInvokeResponseInput` via:
//
//          MigrationValidationDatabaseSummaryResultInvokeResponseArgs{...}
type MigrationValidationDatabaseSummaryResultInvokeResponseInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultInvokeResponseOutput() MigrationValidationDatabaseSummaryResultInvokeResponseOutput
	ToMigrationValidationDatabaseSummaryResultInvokeResponseOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseOutput
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultInvokeResponseArgs struct {
	// Validation end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Name of the source database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName pulumi.StringInput `pulumi:"targetDatabaseName"`
}

func (MigrationValidationDatabaseSummaryResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultInvokeResponseArgs) ToMigrationValidationDatabaseSummaryResultInvokeResponseOutput() MigrationValidationDatabaseSummaryResultInvokeResponseOutput {
	return i.ToMigrationValidationDatabaseSummaryResultInvokeResponseOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultInvokeResponseArgs) ToMigrationValidationDatabaseSummaryResultInvokeResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultInvokeResponseOutput)
}

// MigrationValidationDatabaseSummaryResultInvokeResponseMapInput is an input type that accepts MigrationValidationDatabaseSummaryResultInvokeResponseMap and MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput values.
// You can construct a concrete instance of `MigrationValidationDatabaseSummaryResultInvokeResponseMapInput` via:
//
//          MigrationValidationDatabaseSummaryResultInvokeResponseMap{ "key": MigrationValidationDatabaseSummaryResultInvokeResponseArgs{...} }
type MigrationValidationDatabaseSummaryResultInvokeResponseMapInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutput() MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput
	ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput
}

type MigrationValidationDatabaseSummaryResultInvokeResponseMap map[string]MigrationValidationDatabaseSummaryResultInvokeResponseInput

func (MigrationValidationDatabaseSummaryResultInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultInvokeResponseMap) ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutput() MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput {
	return i.ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultInvokeResponseMap) ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput)
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) ToMigrationValidationDatabaseSummaryResultInvokeResponseOutput() MigrationValidationDatabaseSummaryResultInvokeResponseOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) ToMigrationValidationDatabaseSummaryResultInvokeResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseOutput {
	return o
}

// Validation end time
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

// Name of the source database
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

// Validation start time
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current status of validation at the database level
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Name of the target database
func (o MigrationValidationDatabaseSummaryResultInvokeResponseOutput) TargetDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultInvokeResponse) string { return v.TargetDatabaseName }).(pulumi.StringOutput)
}

type MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultInvokeResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput) ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutput() MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput) ToMigrationValidationDatabaseSummaryResultInvokeResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) MigrationValidationDatabaseSummaryResultInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MigrationValidationDatabaseSummaryResultInvokeResponse {
		return vs[0].(map[string]MigrationValidationDatabaseSummaryResultInvokeResponse)[vs[1].(string)]
	}).(MigrationValidationDatabaseSummaryResultInvokeResponseOutput)
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultResponse struct {
	// Validation end time
	EndedOn string `pulumi:"endedOn"`
	// Result identifier
	Id string `pulumi:"id"`
	// Migration Identifier
	MigrationId string `pulumi:"migrationId"`
	// Name of the source database
	SourceDatabaseName string `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn string `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status string `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName string `pulumi:"targetDatabaseName"`
}

// MigrationValidationDatabaseSummaryResultResponseInput is an input type that accepts MigrationValidationDatabaseSummaryResultResponseArgs and MigrationValidationDatabaseSummaryResultResponseOutput values.
// You can construct a concrete instance of `MigrationValidationDatabaseSummaryResultResponseInput` via:
//
//          MigrationValidationDatabaseSummaryResultResponseArgs{...}
type MigrationValidationDatabaseSummaryResultResponseInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput
	ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultResponseOutput
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultResponseArgs struct {
	// Validation end time
	EndedOn pulumi.StringInput `pulumi:"endedOn"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Migration Identifier
	MigrationId pulumi.StringInput `pulumi:"migrationId"`
	// Name of the source database
	SourceDatabaseName pulumi.StringInput `pulumi:"sourceDatabaseName"`
	// Validation start time
	StartedOn pulumi.StringInput `pulumi:"startedOn"`
	// Current status of validation at the database level
	Status pulumi.StringInput `pulumi:"status"`
	// Name of the target database
	TargetDatabaseName pulumi.StringInput `pulumi:"targetDatabaseName"`
}

func (MigrationValidationDatabaseSummaryResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultResponseArgs) ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput {
	return i.ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultResponseArgs) ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultResponseOutput)
}

// MigrationValidationDatabaseSummaryResultResponseMapInput is an input type that accepts MigrationValidationDatabaseSummaryResultResponseMap and MigrationValidationDatabaseSummaryResultResponseMapOutput values.
// You can construct a concrete instance of `MigrationValidationDatabaseSummaryResultResponseMapInput` via:
//
//          MigrationValidationDatabaseSummaryResultResponseMap{ "key": MigrationValidationDatabaseSummaryResultResponseArgs{...} }
type MigrationValidationDatabaseSummaryResultResponseMapInput interface {
	pulumi.Input

	ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput
	ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput
}

type MigrationValidationDatabaseSummaryResultResponseMap map[string]MigrationValidationDatabaseSummaryResultResponseInput

func (MigrationValidationDatabaseSummaryResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (i MigrationValidationDatabaseSummaryResultResponseMap) ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return i.ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(context.Background())
}

func (i MigrationValidationDatabaseSummaryResultResponseMap) ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationDatabaseSummaryResultResponseMapOutput)
}

// Migration Validation Database level summary result
type MigrationValidationDatabaseSummaryResultResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) ToMigrationValidationDatabaseSummaryResultResponseOutput() MigrationValidationDatabaseSummaryResultResponseOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseOutput) ToMigrationValidationDatabaseSummaryResultResponseOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseOutput {
	return o
}

// Validation end time
func (o MigrationValidationDatabaseSummaryResultResponseOutput) EndedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.EndedOn }).(pulumi.StringOutput)
}

// Result identifier
func (o MigrationValidationDatabaseSummaryResultResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Migration Identifier
func (o MigrationValidationDatabaseSummaryResultResponseOutput) MigrationId() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.MigrationId }).(pulumi.StringOutput)
}

// Name of the source database
func (o MigrationValidationDatabaseSummaryResultResponseOutput) SourceDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.SourceDatabaseName }).(pulumi.StringOutput)
}

// Validation start time
func (o MigrationValidationDatabaseSummaryResultResponseOutput) StartedOn() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.StartedOn }).(pulumi.StringOutput)
}

// Current status of validation at the database level
func (o MigrationValidationDatabaseSummaryResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Name of the target database
func (o MigrationValidationDatabaseSummaryResultResponseOutput) TargetDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v MigrationValidationDatabaseSummaryResultResponse) string { return v.TargetDatabaseName }).(pulumi.StringOutput)
}

type MigrationValidationDatabaseSummaryResultResponseMapOutput struct{ *pulumi.OutputState }

func (MigrationValidationDatabaseSummaryResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MigrationValidationDatabaseSummaryResultResponse)(nil)).Elem()
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) ToMigrationValidationDatabaseSummaryResultResponseMapOutput() MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) ToMigrationValidationDatabaseSummaryResultResponseMapOutputWithContext(ctx context.Context) MigrationValidationDatabaseSummaryResultResponseMapOutput {
	return o
}

func (o MigrationValidationDatabaseSummaryResultResponseMapOutput) MapIndex(k pulumi.StringInput) MigrationValidationDatabaseSummaryResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MigrationValidationDatabaseSummaryResultResponse {
		return vs[0].(map[string]MigrationValidationDatabaseSummaryResultResponse)[vs[1].(string)]
	}).(MigrationValidationDatabaseSummaryResultResponseOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptions struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation *bool `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation *bool `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation *bool `pulumi:"enableSchemaValidation"`
}

// MigrationValidationOptionsInput is an input type that accepts MigrationValidationOptionsArgs and MigrationValidationOptionsOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsInput` via:
//
//          MigrationValidationOptionsArgs{...}
type MigrationValidationOptionsInput interface {
	pulumi.Input

	ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput
	ToMigrationValidationOptionsOutputWithContext(context.Context) MigrationValidationOptionsOutput
}

// Types of validations to run after the migration
type MigrationValidationOptionsArgs struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation pulumi.BoolPtrInput `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation pulumi.BoolPtrInput `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation pulumi.BoolPtrInput `pulumi:"enableSchemaValidation"`
}

func (MigrationValidationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptions)(nil)).Elem()
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput {
	return i.ToMigrationValidationOptionsOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsOutputWithContext(ctx context.Context) MigrationValidationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsOutput)
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return i.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsArgs) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsOutput).ToMigrationValidationOptionsPtrOutputWithContext(ctx)
}

// MigrationValidationOptionsPtrInput is an input type that accepts MigrationValidationOptionsArgs, MigrationValidationOptionsPtr and MigrationValidationOptionsPtrOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsPtrInput` via:
//
//          MigrationValidationOptionsArgs{...}
//
//  or:
//
//          nil
type MigrationValidationOptionsPtrInput interface {
	pulumi.Input

	ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput
	ToMigrationValidationOptionsPtrOutputWithContext(context.Context) MigrationValidationOptionsPtrOutput
}

type migrationValidationOptionsPtrType MigrationValidationOptionsArgs

func MigrationValidationOptionsPtr(v *MigrationValidationOptionsArgs) MigrationValidationOptionsPtrInput {
	return (*migrationValidationOptionsPtrType)(v)
}

func (*migrationValidationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptions)(nil)).Elem()
}

func (i *migrationValidationOptionsPtrType) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return i.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (i *migrationValidationOptionsPtrType) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsPtrOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptionsOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptions)(nil)).Elem()
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsOutput() MigrationValidationOptionsOutput {
	return o
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsOutputWithContext(ctx context.Context) MigrationValidationOptionsOutput {
	return o
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return o.ToMigrationValidationOptionsPtrOutputWithContext(context.Background())
}

func (o MigrationValidationOptionsOutput) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *MigrationValidationOptions {
		return &v
	}).(MigrationValidationOptionsPtrOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableDataIntegrityValidation }).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableQueryAnalysisValidation }).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptions) *bool { return v.EnableSchemaValidation }).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsPtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptions)(nil)).Elem()
}

func (o MigrationValidationOptionsPtrOutput) ToMigrationValidationOptionsPtrOutput() MigrationValidationOptionsPtrOutput {
	return o
}

func (o MigrationValidationOptionsPtrOutput) ToMigrationValidationOptionsPtrOutputWithContext(ctx context.Context) MigrationValidationOptionsPtrOutput {
	return o
}

func (o MigrationValidationOptionsPtrOutput) Elem() MigrationValidationOptionsOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) MigrationValidationOptions { return *v }).(MigrationValidationOptionsOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsPtrOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDataIntegrityValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsPtrOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableQueryAnalysisValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsPtrOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaValidation
	}).(pulumi.BoolPtrOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptionsInvokeResponse struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation *bool `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation *bool `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation *bool `pulumi:"enableSchemaValidation"`
}

// MigrationValidationOptionsInvokeResponseInput is an input type that accepts MigrationValidationOptionsInvokeResponseArgs and MigrationValidationOptionsInvokeResponseOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsInvokeResponseInput` via:
//
//          MigrationValidationOptionsInvokeResponseArgs{...}
type MigrationValidationOptionsInvokeResponseInput interface {
	pulumi.Input

	ToMigrationValidationOptionsInvokeResponseOutput() MigrationValidationOptionsInvokeResponseOutput
	ToMigrationValidationOptionsInvokeResponseOutputWithContext(context.Context) MigrationValidationOptionsInvokeResponseOutput
}

// Types of validations to run after the migration
type MigrationValidationOptionsInvokeResponseArgs struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation pulumi.BoolPtrInput `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation pulumi.BoolPtrInput `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation pulumi.BoolPtrInput `pulumi:"enableSchemaValidation"`
}

func (MigrationValidationOptionsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsInvokeResponse)(nil)).Elem()
}

func (i MigrationValidationOptionsInvokeResponseArgs) ToMigrationValidationOptionsInvokeResponseOutput() MigrationValidationOptionsInvokeResponseOutput {
	return i.ToMigrationValidationOptionsInvokeResponseOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsInvokeResponseArgs) ToMigrationValidationOptionsInvokeResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsInvokeResponseOutput)
}

func (i MigrationValidationOptionsInvokeResponseArgs) ToMigrationValidationOptionsInvokeResponsePtrOutput() MigrationValidationOptionsInvokeResponsePtrOutput {
	return i.ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsInvokeResponseArgs) ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsInvokeResponseOutput).ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(ctx)
}

// MigrationValidationOptionsInvokeResponsePtrInput is an input type that accepts MigrationValidationOptionsInvokeResponseArgs, MigrationValidationOptionsInvokeResponsePtr and MigrationValidationOptionsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsInvokeResponsePtrInput` via:
//
//          MigrationValidationOptionsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MigrationValidationOptionsInvokeResponsePtrInput interface {
	pulumi.Input

	ToMigrationValidationOptionsInvokeResponsePtrOutput() MigrationValidationOptionsInvokeResponsePtrOutput
	ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(context.Context) MigrationValidationOptionsInvokeResponsePtrOutput
}

type migrationValidationOptionsInvokeResponsePtrType MigrationValidationOptionsInvokeResponseArgs

func MigrationValidationOptionsInvokeResponsePtr(v *MigrationValidationOptionsInvokeResponseArgs) MigrationValidationOptionsInvokeResponsePtrInput {
	return (*migrationValidationOptionsInvokeResponsePtrType)(v)
}

func (*migrationValidationOptionsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsInvokeResponse)(nil)).Elem()
}

func (i *migrationValidationOptionsInvokeResponsePtrType) ToMigrationValidationOptionsInvokeResponsePtrOutput() MigrationValidationOptionsInvokeResponsePtrOutput {
	return i.ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *migrationValidationOptionsInvokeResponsePtrType) ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptionsInvokeResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsInvokeResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsInvokeResponseOutput) ToMigrationValidationOptionsInvokeResponseOutput() MigrationValidationOptionsInvokeResponseOutput {
	return o
}

func (o MigrationValidationOptionsInvokeResponseOutput) ToMigrationValidationOptionsInvokeResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponseOutput {
	return o
}

func (o MigrationValidationOptionsInvokeResponseOutput) ToMigrationValidationOptionsInvokeResponsePtrOutput() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MigrationValidationOptionsInvokeResponseOutput) ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsInvokeResponse) *MigrationValidationOptionsInvokeResponse {
		return &v
	}).(MigrationValidationOptionsInvokeResponsePtrOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsInvokeResponseOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsInvokeResponse) *bool { return v.EnableDataIntegrityValidation }).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsInvokeResponseOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsInvokeResponse) *bool { return v.EnableQueryAnalysisValidation }).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsInvokeResponseOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsInvokeResponse) *bool { return v.EnableSchemaValidation }).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsInvokeResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsInvokeResponsePtrOutput) ToMigrationValidationOptionsInvokeResponsePtrOutput() MigrationValidationOptionsInvokeResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsInvokeResponsePtrOutput) ToMigrationValidationOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsInvokeResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsInvokeResponsePtrOutput) Elem() MigrationValidationOptionsInvokeResponseOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsInvokeResponse) MigrationValidationOptionsInvokeResponse { return *v }).(MigrationValidationOptionsInvokeResponseOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsInvokeResponsePtrOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDataIntegrityValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsInvokeResponsePtrOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableQueryAnalysisValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsInvokeResponsePtrOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaValidation
	}).(pulumi.BoolPtrOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptionsResponse struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation *bool `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation *bool `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation *bool `pulumi:"enableSchemaValidation"`
}

// MigrationValidationOptionsResponseInput is an input type that accepts MigrationValidationOptionsResponseArgs and MigrationValidationOptionsResponseOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsResponseInput` via:
//
//          MigrationValidationOptionsResponseArgs{...}
type MigrationValidationOptionsResponseInput interface {
	pulumi.Input

	ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput
	ToMigrationValidationOptionsResponseOutputWithContext(context.Context) MigrationValidationOptionsResponseOutput
}

// Types of validations to run after the migration
type MigrationValidationOptionsResponseArgs struct {
	// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
	EnableDataIntegrityValidation pulumi.BoolPtrInput `pulumi:"enableDataIntegrityValidation"`
	// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
	EnableQueryAnalysisValidation pulumi.BoolPtrInput `pulumi:"enableQueryAnalysisValidation"`
	// Allows to compare the schema information between source and target.
	EnableSchemaValidation pulumi.BoolPtrInput `pulumi:"enableSchemaValidation"`
}

func (MigrationValidationOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsResponse)(nil)).Elem()
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput {
	return i.ToMigrationValidationOptionsResponseOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponseOutput)
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return i.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (i MigrationValidationOptionsResponseArgs) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponseOutput).ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx)
}

// MigrationValidationOptionsResponsePtrInput is an input type that accepts MigrationValidationOptionsResponseArgs, MigrationValidationOptionsResponsePtr and MigrationValidationOptionsResponsePtrOutput values.
// You can construct a concrete instance of `MigrationValidationOptionsResponsePtrInput` via:
//
//          MigrationValidationOptionsResponseArgs{...}
//
//  or:
//
//          nil
type MigrationValidationOptionsResponsePtrInput interface {
	pulumi.Input

	ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput
	ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Context) MigrationValidationOptionsResponsePtrOutput
}

type migrationValidationOptionsResponsePtrType MigrationValidationOptionsResponseArgs

func MigrationValidationOptionsResponsePtr(v *MigrationValidationOptionsResponseArgs) MigrationValidationOptionsResponsePtrInput {
	return (*migrationValidationOptionsResponsePtrType)(v)
}

func (*migrationValidationOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsResponse)(nil)).Elem()
}

func (i *migrationValidationOptionsResponsePtrType) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return i.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *migrationValidationOptionsResponsePtrType) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationValidationOptionsResponsePtrOutput)
}

// Types of validations to run after the migration
type MigrationValidationOptionsResponseOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MigrationValidationOptionsResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponseOutput() MigrationValidationOptionsResponseOutput {
	return o
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponseOutputWithContext(ctx context.Context) MigrationValidationOptionsResponseOutput {
	return o
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return o.ToMigrationValidationOptionsResponsePtrOutputWithContext(context.Background())
}

func (o MigrationValidationOptionsResponseOutput) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *MigrationValidationOptionsResponse {
		return &v
	}).(MigrationValidationOptionsResponsePtrOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsResponseOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableDataIntegrityValidation }).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsResponseOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableQueryAnalysisValidation }).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsResponseOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MigrationValidationOptionsResponse) *bool { return v.EnableSchemaValidation }).(pulumi.BoolPtrOutput)
}

type MigrationValidationOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (MigrationValidationOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationValidationOptionsResponse)(nil)).Elem()
}

func (o MigrationValidationOptionsResponsePtrOutput) ToMigrationValidationOptionsResponsePtrOutput() MigrationValidationOptionsResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsResponsePtrOutput) ToMigrationValidationOptionsResponsePtrOutputWithContext(ctx context.Context) MigrationValidationOptionsResponsePtrOutput {
	return o
}

func (o MigrationValidationOptionsResponsePtrOutput) Elem() MigrationValidationOptionsResponseOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) MigrationValidationOptionsResponse { return *v }).(MigrationValidationOptionsResponseOutput)
}

// Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
func (o MigrationValidationOptionsResponsePtrOutput) EnableDataIntegrityValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDataIntegrityValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
func (o MigrationValidationOptionsResponsePtrOutput) EnableQueryAnalysisValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableQueryAnalysisValidation
	}).(pulumi.BoolPtrOutput)
}

// Allows to compare the schema information between source and target.
func (o MigrationValidationOptionsResponsePtrOutput) EnableSchemaValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MigrationValidationOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSchemaValidation
	}).(pulumi.BoolPtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfo struct {
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MySqlConnectionInfoInput is an input type that accepts MySqlConnectionInfoArgs and MySqlConnectionInfoOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoInput` via:
//
//          MySqlConnectionInfoArgs{...}
type MySqlConnectionInfoInput interface {
	pulumi.Input

	ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput
	ToMySqlConnectionInfoOutputWithContext(context.Context) MySqlConnectionInfoOutput
}

// Information for connecting to MySQL server
type MySqlConnectionInfoArgs struct {
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MySqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfo)(nil)).Elem()
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput {
	return i.ToMySqlConnectionInfoOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoOutputWithContext(ctx context.Context) MySqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoOutput)
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return i.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoArgs) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoOutput).ToMySqlConnectionInfoPtrOutputWithContext(ctx)
}

// MySqlConnectionInfoPtrInput is an input type that accepts MySqlConnectionInfoArgs, MySqlConnectionInfoPtr and MySqlConnectionInfoPtrOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoPtrInput` via:
//
//          MySqlConnectionInfoArgs{...}
//
//  or:
//
//          nil
type MySqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput
	ToMySqlConnectionInfoPtrOutputWithContext(context.Context) MySqlConnectionInfoPtrOutput
}

type mySqlConnectionInfoPtrType MySqlConnectionInfoArgs

func MySqlConnectionInfoPtr(v *MySqlConnectionInfoArgs) MySqlConnectionInfoPtrInput {
	return (*mySqlConnectionInfoPtrType)(v)
}

func (*mySqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfo)(nil)).Elem()
}

func (i *mySqlConnectionInfoPtrType) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return i.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *mySqlConnectionInfoPtrType) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoPtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfo)(nil)).Elem()
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoOutput() MySqlConnectionInfoOutput {
	return o
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoOutputWithContext(ctx context.Context) MySqlConnectionInfoOutput {
	return o
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return o.ToMySqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o MySqlConnectionInfoOutput) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) *MySqlConnectionInfo {
		return &v
	}).(MySqlConnectionInfoPtrOutput)
}

// Password credential.
func (o MySqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o MySqlConnectionInfoOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MySqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfo)(nil)).Elem()
}

func (o MySqlConnectionInfoPtrOutput) ToMySqlConnectionInfoPtrOutput() MySqlConnectionInfoPtrOutput {
	return o
}

func (o MySqlConnectionInfoPtrOutput) ToMySqlConnectionInfoPtrOutputWithContext(ctx context.Context) MySqlConnectionInfoPtrOutput {
	return o
}

func (o MySqlConnectionInfoPtrOutput) Elem() MySqlConnectionInfoOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) MySqlConnectionInfo { return *v }).(MySqlConnectionInfoOutput)
}

// Password credential.
func (o MySqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o MySqlConnectionInfoPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MySqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfoInvokeResponse struct {
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MySqlConnectionInfoInvokeResponseInput is an input type that accepts MySqlConnectionInfoInvokeResponseArgs and MySqlConnectionInfoInvokeResponseOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoInvokeResponseInput` via:
//
//          MySqlConnectionInfoInvokeResponseArgs{...}
type MySqlConnectionInfoInvokeResponseInput interface {
	pulumi.Input

	ToMySqlConnectionInfoInvokeResponseOutput() MySqlConnectionInfoInvokeResponseOutput
	ToMySqlConnectionInfoInvokeResponseOutputWithContext(context.Context) MySqlConnectionInfoInvokeResponseOutput
}

// Information for connecting to MySQL server
type MySqlConnectionInfoInvokeResponseArgs struct {
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MySqlConnectionInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i MySqlConnectionInfoInvokeResponseArgs) ToMySqlConnectionInfoInvokeResponseOutput() MySqlConnectionInfoInvokeResponseOutput {
	return i.ToMySqlConnectionInfoInvokeResponseOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoInvokeResponseArgs) ToMySqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoInvokeResponseOutput)
}

func (i MySqlConnectionInfoInvokeResponseArgs) ToMySqlConnectionInfoInvokeResponsePtrOutput() MySqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoInvokeResponseArgs) ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoInvokeResponseOutput).ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx)
}

// MySqlConnectionInfoInvokeResponsePtrInput is an input type that accepts MySqlConnectionInfoInvokeResponseArgs, MySqlConnectionInfoInvokeResponsePtr and MySqlConnectionInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoInvokeResponsePtrInput` via:
//
//          MySqlConnectionInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MySqlConnectionInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToMySqlConnectionInfoInvokeResponsePtrOutput() MySqlConnectionInfoInvokeResponsePtrOutput
	ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Context) MySqlConnectionInfoInvokeResponsePtrOutput
}

type mySqlConnectionInfoInvokeResponsePtrType MySqlConnectionInfoInvokeResponseArgs

func MySqlConnectionInfoInvokeResponsePtr(v *MySqlConnectionInfoInvokeResponseArgs) MySqlConnectionInfoInvokeResponsePtrInput {
	return (*mySqlConnectionInfoInvokeResponsePtrType)(v)
}

func (*mySqlConnectionInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i *mySqlConnectionInfoInvokeResponsePtrType) ToMySqlConnectionInfoInvokeResponsePtrOutput() MySqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *mySqlConnectionInfoInvokeResponsePtrType) ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoInvokeResponseOutput) ToMySqlConnectionInfoInvokeResponseOutput() MySqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o MySqlConnectionInfoInvokeResponseOutput) ToMySqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o MySqlConnectionInfoInvokeResponseOutput) ToMySqlConnectionInfoInvokeResponsePtrOutput() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MySqlConnectionInfoInvokeResponseOutput) ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) *MySqlConnectionInfoInvokeResponse {
		return &v
	}).(MySqlConnectionInfoInvokeResponsePtrOutput)
}

// Password credential.
func (o MySqlConnectionInfoInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoInvokeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o MySqlConnectionInfoInvokeResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MySqlConnectionInfoInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoInvokeResponsePtrOutput) ToMySqlConnectionInfoInvokeResponsePtrOutput() MySqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoInvokeResponsePtrOutput) ToMySqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoInvokeResponsePtrOutput) Elem() MySqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) MySqlConnectionInfoInvokeResponse { return *v }).(MySqlConnectionInfoInvokeResponseOutput)
}

// Password credential.
func (o MySqlConnectionInfoInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoInvokeResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o MySqlConnectionInfoInvokeResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MySqlConnectionInfoInvokeResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfoResponse struct {
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// MySqlConnectionInfoResponseInput is an input type that accepts MySqlConnectionInfoResponseArgs and MySqlConnectionInfoResponseOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoResponseInput` via:
//
//          MySqlConnectionInfoResponseArgs{...}
type MySqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput
	ToMySqlConnectionInfoResponseOutputWithContext(context.Context) MySqlConnectionInfoResponseOutput
}

// Information for connecting to MySQL server
type MySqlConnectionInfoResponseArgs struct {
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'MySqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (MySqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoResponse)(nil)).Elem()
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput {
	return i.ToMySqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponseOutput)
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return i.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i MySqlConnectionInfoResponseArgs) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponseOutput).ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx)
}

// MySqlConnectionInfoResponsePtrInput is an input type that accepts MySqlConnectionInfoResponseArgs, MySqlConnectionInfoResponsePtr and MySqlConnectionInfoResponsePtrOutput values.
// You can construct a concrete instance of `MySqlConnectionInfoResponsePtrInput` via:
//
//          MySqlConnectionInfoResponseArgs{...}
//
//  or:
//
//          nil
type MySqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput
	ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Context) MySqlConnectionInfoResponsePtrOutput
}

type mySqlConnectionInfoResponsePtrType MySqlConnectionInfoResponseArgs

func MySqlConnectionInfoResponsePtr(v *MySqlConnectionInfoResponseArgs) MySqlConnectionInfoResponsePtrInput {
	return (*mySqlConnectionInfoResponsePtrType)(v)
}

func (*mySqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoResponse)(nil)).Elem()
}

func (i *mySqlConnectionInfoResponsePtrType) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return i.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *mySqlConnectionInfoResponsePtrType) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MySqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to MySQL server
type MySqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MySqlConnectionInfoResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponseOutput() MySqlConnectionInfoResponseOutput {
	return o
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponseOutputWithContext(ctx context.Context) MySqlConnectionInfoResponseOutput {
	return o
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return o.ToMySqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o MySqlConnectionInfoResponseOutput) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) *MySqlConnectionInfoResponse {
		return &v
	}).(MySqlConnectionInfoResponsePtrOutput)
}

// Password credential.
func (o MySqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o MySqlConnectionInfoResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o MySqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MySqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type MySqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (MySqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MySqlConnectionInfoResponse)(nil)).Elem()
}

func (o MySqlConnectionInfoResponsePtrOutput) ToMySqlConnectionInfoResponsePtrOutput() MySqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoResponsePtrOutput) ToMySqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) MySqlConnectionInfoResponsePtrOutput {
	return o
}

func (o MySqlConnectionInfoResponsePtrOutput) Elem() MySqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) MySqlConnectionInfoResponse { return *v }).(MySqlConnectionInfoResponseOutput)
}

// Password credential.
func (o MySqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o MySqlConnectionInfoResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o MySqlConnectionInfoResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'MySqlConnectionInfo'.
func (o MySqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o MySqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MySqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Error information in OData format.
type ODataErrorInvokeResponse struct {
	// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
	Code string `pulumi:"code"`
	// Inner errors that caused this error
	Details []ODataErrorInvokeResponse `pulumi:"details"`
	// The human-readable description of the error
	Message string `pulumi:"message"`
}

// ODataErrorInvokeResponseInput is an input type that accepts ODataErrorInvokeResponseArgs and ODataErrorInvokeResponseOutput values.
// You can construct a concrete instance of `ODataErrorInvokeResponseInput` via:
//
//          ODataErrorInvokeResponseArgs{...}
type ODataErrorInvokeResponseInput interface {
	pulumi.Input

	ToODataErrorInvokeResponseOutput() ODataErrorInvokeResponseOutput
	ToODataErrorInvokeResponseOutputWithContext(context.Context) ODataErrorInvokeResponseOutput
}

// Error information in OData format.
type ODataErrorInvokeResponseArgs struct {
	// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
	Code pulumi.StringInput `pulumi:"code"`
	// Inner errors that caused this error
	Details ODataErrorInvokeResponseArrayInput `pulumi:"details"`
	// The human-readable description of the error
	Message pulumi.StringInput `pulumi:"message"`
}

func (ODataErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorInvokeResponse)(nil)).Elem()
}

func (i ODataErrorInvokeResponseArgs) ToODataErrorInvokeResponseOutput() ODataErrorInvokeResponseOutput {
	return i.ToODataErrorInvokeResponseOutputWithContext(context.Background())
}

func (i ODataErrorInvokeResponseArgs) ToODataErrorInvokeResponseOutputWithContext(ctx context.Context) ODataErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorInvokeResponseOutput)
}

// ODataErrorInvokeResponseArrayInput is an input type that accepts ODataErrorInvokeResponseArray and ODataErrorInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ODataErrorInvokeResponseArrayInput` via:
//
//          ODataErrorInvokeResponseArray{ ODataErrorInvokeResponseArgs{...} }
type ODataErrorInvokeResponseArrayInput interface {
	pulumi.Input

	ToODataErrorInvokeResponseArrayOutput() ODataErrorInvokeResponseArrayOutput
	ToODataErrorInvokeResponseArrayOutputWithContext(context.Context) ODataErrorInvokeResponseArrayOutput
}

type ODataErrorInvokeResponseArray []ODataErrorInvokeResponseInput

func (ODataErrorInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorInvokeResponse)(nil)).Elem()
}

func (i ODataErrorInvokeResponseArray) ToODataErrorInvokeResponseArrayOutput() ODataErrorInvokeResponseArrayOutput {
	return i.ToODataErrorInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ODataErrorInvokeResponseArray) ToODataErrorInvokeResponseArrayOutputWithContext(ctx context.Context) ODataErrorInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorInvokeResponseArrayOutput)
}

// Error information in OData format.
type ODataErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (ODataErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorInvokeResponse)(nil)).Elem()
}

func (o ODataErrorInvokeResponseOutput) ToODataErrorInvokeResponseOutput() ODataErrorInvokeResponseOutput {
	return o
}

func (o ODataErrorInvokeResponseOutput) ToODataErrorInvokeResponseOutputWithContext(ctx context.Context) ODataErrorInvokeResponseOutput {
	return o
}

// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
func (o ODataErrorInvokeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ODataErrorInvokeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Inner errors that caused this error
func (o ODataErrorInvokeResponseOutput) Details() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ODataErrorInvokeResponse) []ODataErrorInvokeResponse { return v.Details }).(ODataErrorInvokeResponseArrayOutput)
}

// The human-readable description of the error
func (o ODataErrorInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ODataErrorInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ODataErrorInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ODataErrorInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorInvokeResponse)(nil)).Elem()
}

func (o ODataErrorInvokeResponseArrayOutput) ToODataErrorInvokeResponseArrayOutput() ODataErrorInvokeResponseArrayOutput {
	return o
}

func (o ODataErrorInvokeResponseArrayOutput) ToODataErrorInvokeResponseArrayOutputWithContext(ctx context.Context) ODataErrorInvokeResponseArrayOutput {
	return o
}

func (o ODataErrorInvokeResponseArrayOutput) Index(i pulumi.IntInput) ODataErrorInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ODataErrorInvokeResponse {
		return vs[0].([]ODataErrorInvokeResponse)[vs[1].(int)]
	}).(ODataErrorInvokeResponseOutput)
}

// Error information in OData format.
type ODataErrorResponse struct {
	// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
	Code string `pulumi:"code"`
	// Inner errors that caused this error
	Details []ODataErrorResponse `pulumi:"details"`
	// The human-readable description of the error
	Message string `pulumi:"message"`
}

// ODataErrorResponseInput is an input type that accepts ODataErrorResponseArgs and ODataErrorResponseOutput values.
// You can construct a concrete instance of `ODataErrorResponseInput` via:
//
//          ODataErrorResponseArgs{...}
type ODataErrorResponseInput interface {
	pulumi.Input

	ToODataErrorResponseOutput() ODataErrorResponseOutput
	ToODataErrorResponseOutputWithContext(context.Context) ODataErrorResponseOutput
}

// Error information in OData format.
type ODataErrorResponseArgs struct {
	// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
	Code pulumi.StringInput `pulumi:"code"`
	// Inner errors that caused this error
	Details ODataErrorResponseArrayInput `pulumi:"details"`
	// The human-readable description of the error
	Message pulumi.StringInput `pulumi:"message"`
}

func (ODataErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorResponse)(nil)).Elem()
}

func (i ODataErrorResponseArgs) ToODataErrorResponseOutput() ODataErrorResponseOutput {
	return i.ToODataErrorResponseOutputWithContext(context.Background())
}

func (i ODataErrorResponseArgs) ToODataErrorResponseOutputWithContext(ctx context.Context) ODataErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorResponseOutput)
}

// ODataErrorResponseArrayInput is an input type that accepts ODataErrorResponseArray and ODataErrorResponseArrayOutput values.
// You can construct a concrete instance of `ODataErrorResponseArrayInput` via:
//
//          ODataErrorResponseArray{ ODataErrorResponseArgs{...} }
type ODataErrorResponseArrayInput interface {
	pulumi.Input

	ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput
	ToODataErrorResponseArrayOutputWithContext(context.Context) ODataErrorResponseArrayOutput
}

type ODataErrorResponseArray []ODataErrorResponseInput

func (ODataErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorResponse)(nil)).Elem()
}

func (i ODataErrorResponseArray) ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput {
	return i.ToODataErrorResponseArrayOutputWithContext(context.Background())
}

func (i ODataErrorResponseArray) ToODataErrorResponseArrayOutputWithContext(ctx context.Context) ODataErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ODataErrorResponseArrayOutput)
}

// Error information in OData format.
type ODataErrorResponseOutput struct{ *pulumi.OutputState }

func (ODataErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ODataErrorResponse)(nil)).Elem()
}

func (o ODataErrorResponseOutput) ToODataErrorResponseOutput() ODataErrorResponseOutput {
	return o
}

func (o ODataErrorResponseOutput) ToODataErrorResponseOutputWithContext(ctx context.Context) ODataErrorResponseOutput {
	return o
}

// The machine-readable description of the error, such as 'InvalidRequest' or 'InternalServerError'
func (o ODataErrorResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v ODataErrorResponse) string { return v.Code }).(pulumi.StringOutput)
}

// Inner errors that caused this error
func (o ODataErrorResponseOutput) Details() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ODataErrorResponse) []ODataErrorResponse { return v.Details }).(ODataErrorResponseArrayOutput)
}

// The human-readable description of the error
func (o ODataErrorResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ODataErrorResponse) string { return v.Message }).(pulumi.StringOutput)
}

type ODataErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ODataErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ODataErrorResponse)(nil)).Elem()
}

func (o ODataErrorResponseArrayOutput) ToODataErrorResponseArrayOutput() ODataErrorResponseArrayOutput {
	return o
}

func (o ODataErrorResponseArrayOutput) ToODataErrorResponseArrayOutputWithContext(ctx context.Context) ODataErrorResponseArrayOutput {
	return o
}

func (o ODataErrorResponseArrayOutput) Index(i pulumi.IntInput) ODataErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ODataErrorResponse {
		return vs[0].([]ODataErrorResponse)[vs[1].(int)]
	}).(ODataErrorResponseOutput)
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoInvokeResponse struct {
	// Parent database of the user
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the orphaned user
	Name *string `pulumi:"name"`
}

// OrphanedUserInfoInvokeResponseInput is an input type that accepts OrphanedUserInfoInvokeResponseArgs and OrphanedUserInfoInvokeResponseOutput values.
// You can construct a concrete instance of `OrphanedUserInfoInvokeResponseInput` via:
//
//          OrphanedUserInfoInvokeResponseArgs{...}
type OrphanedUserInfoInvokeResponseInput interface {
	pulumi.Input

	ToOrphanedUserInfoInvokeResponseOutput() OrphanedUserInfoInvokeResponseOutput
	ToOrphanedUserInfoInvokeResponseOutputWithContext(context.Context) OrphanedUserInfoInvokeResponseOutput
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoInvokeResponseArgs struct {
	// Parent database of the user
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the orphaned user
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OrphanedUserInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoInvokeResponse)(nil)).Elem()
}

func (i OrphanedUserInfoInvokeResponseArgs) ToOrphanedUserInfoInvokeResponseOutput() OrphanedUserInfoInvokeResponseOutput {
	return i.ToOrphanedUserInfoInvokeResponseOutputWithContext(context.Background())
}

func (i OrphanedUserInfoInvokeResponseArgs) ToOrphanedUserInfoInvokeResponseOutputWithContext(ctx context.Context) OrphanedUserInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoInvokeResponseOutput)
}

// OrphanedUserInfoInvokeResponseArrayInput is an input type that accepts OrphanedUserInfoInvokeResponseArray and OrphanedUserInfoInvokeResponseArrayOutput values.
// You can construct a concrete instance of `OrphanedUserInfoInvokeResponseArrayInput` via:
//
//          OrphanedUserInfoInvokeResponseArray{ OrphanedUserInfoInvokeResponseArgs{...} }
type OrphanedUserInfoInvokeResponseArrayInput interface {
	pulumi.Input

	ToOrphanedUserInfoInvokeResponseArrayOutput() OrphanedUserInfoInvokeResponseArrayOutput
	ToOrphanedUserInfoInvokeResponseArrayOutputWithContext(context.Context) OrphanedUserInfoInvokeResponseArrayOutput
}

type OrphanedUserInfoInvokeResponseArray []OrphanedUserInfoInvokeResponseInput

func (OrphanedUserInfoInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoInvokeResponse)(nil)).Elem()
}

func (i OrphanedUserInfoInvokeResponseArray) ToOrphanedUserInfoInvokeResponseArrayOutput() OrphanedUserInfoInvokeResponseArrayOutput {
	return i.ToOrphanedUserInfoInvokeResponseArrayOutputWithContext(context.Background())
}

func (i OrphanedUserInfoInvokeResponseArray) ToOrphanedUserInfoInvokeResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoInvokeResponseArrayOutput)
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoInvokeResponse)(nil)).Elem()
}

func (o OrphanedUserInfoInvokeResponseOutput) ToOrphanedUserInfoInvokeResponseOutput() OrphanedUserInfoInvokeResponseOutput {
	return o
}

func (o OrphanedUserInfoInvokeResponseOutput) ToOrphanedUserInfoInvokeResponseOutputWithContext(ctx context.Context) OrphanedUserInfoInvokeResponseOutput {
	return o
}

// Parent database of the user
func (o OrphanedUserInfoInvokeResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoInvokeResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the orphaned user
func (o OrphanedUserInfoInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrphanedUserInfoInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoInvokeResponse)(nil)).Elem()
}

func (o OrphanedUserInfoInvokeResponseArrayOutput) ToOrphanedUserInfoInvokeResponseArrayOutput() OrphanedUserInfoInvokeResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoInvokeResponseArrayOutput) ToOrphanedUserInfoInvokeResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoInvokeResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoInvokeResponseArrayOutput) Index(i pulumi.IntInput) OrphanedUserInfoInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrphanedUserInfoInvokeResponse {
		return vs[0].([]OrphanedUserInfoInvokeResponse)[vs[1].(int)]
	}).(OrphanedUserInfoInvokeResponseOutput)
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoResponse struct {
	// Parent database of the user
	DatabaseName *string `pulumi:"databaseName"`
	// Name of the orphaned user
	Name *string `pulumi:"name"`
}

// OrphanedUserInfoResponseInput is an input type that accepts OrphanedUserInfoResponseArgs and OrphanedUserInfoResponseOutput values.
// You can construct a concrete instance of `OrphanedUserInfoResponseInput` via:
//
//          OrphanedUserInfoResponseArgs{...}
type OrphanedUserInfoResponseInput interface {
	pulumi.Input

	ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput
	ToOrphanedUserInfoResponseOutputWithContext(context.Context) OrphanedUserInfoResponseOutput
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoResponseArgs struct {
	// Parent database of the user
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Name of the orphaned user
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OrphanedUserInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoResponse)(nil)).Elem()
}

func (i OrphanedUserInfoResponseArgs) ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput {
	return i.ToOrphanedUserInfoResponseOutputWithContext(context.Background())
}

func (i OrphanedUserInfoResponseArgs) ToOrphanedUserInfoResponseOutputWithContext(ctx context.Context) OrphanedUserInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoResponseOutput)
}

// OrphanedUserInfoResponseArrayInput is an input type that accepts OrphanedUserInfoResponseArray and OrphanedUserInfoResponseArrayOutput values.
// You can construct a concrete instance of `OrphanedUserInfoResponseArrayInput` via:
//
//          OrphanedUserInfoResponseArray{ OrphanedUserInfoResponseArgs{...} }
type OrphanedUserInfoResponseArrayInput interface {
	pulumi.Input

	ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput
	ToOrphanedUserInfoResponseArrayOutputWithContext(context.Context) OrphanedUserInfoResponseArrayOutput
}

type OrphanedUserInfoResponseArray []OrphanedUserInfoResponseInput

func (OrphanedUserInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoResponse)(nil)).Elem()
}

func (i OrphanedUserInfoResponseArray) ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput {
	return i.ToOrphanedUserInfoResponseArrayOutputWithContext(context.Background())
}

func (i OrphanedUserInfoResponseArray) ToOrphanedUserInfoResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrphanedUserInfoResponseArrayOutput)
}

// Information of orphaned users on the SQL server database.
type OrphanedUserInfoResponseOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrphanedUserInfoResponse)(nil)).Elem()
}

func (o OrphanedUserInfoResponseOutput) ToOrphanedUserInfoResponseOutput() OrphanedUserInfoResponseOutput {
	return o
}

func (o OrphanedUserInfoResponseOutput) ToOrphanedUserInfoResponseOutputWithContext(ctx context.Context) OrphanedUserInfoResponseOutput {
	return o
}

// Parent database of the user
func (o OrphanedUserInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Name of the orphaned user
func (o OrphanedUserInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrphanedUserInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrphanedUserInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (OrphanedUserInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrphanedUserInfoResponse)(nil)).Elem()
}

func (o OrphanedUserInfoResponseArrayOutput) ToOrphanedUserInfoResponseArrayOutput() OrphanedUserInfoResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoResponseArrayOutput) ToOrphanedUserInfoResponseArrayOutputWithContext(ctx context.Context) OrphanedUserInfoResponseArrayOutput {
	return o
}

func (o OrphanedUserInfoResponseArrayOutput) Index(i pulumi.IntInput) OrphanedUserInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrphanedUserInfoResponse {
		return vs[0].([]OrphanedUserInfoResponse)[vs[1].(int)]
	}).(OrphanedUserInfoResponseOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfo struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// PostgreSqlConnectionInfoInput is an input type that accepts PostgreSqlConnectionInfoArgs and PostgreSqlConnectionInfoOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoInput` via:
//
//          PostgreSqlConnectionInfoArgs{...}
type PostgreSqlConnectionInfoInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput
	ToPostgreSqlConnectionInfoOutputWithContext(context.Context) PostgreSqlConnectionInfoOutput
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoArgs struct {
	// Name of the database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PostgreSqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfo)(nil)).Elem()
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput {
	return i.ToPostgreSqlConnectionInfoOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoOutput)
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return i.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoArgs) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoOutput).ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx)
}

// PostgreSqlConnectionInfoPtrInput is an input type that accepts PostgreSqlConnectionInfoArgs, PostgreSqlConnectionInfoPtr and PostgreSqlConnectionInfoPtrOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoPtrInput` via:
//
//          PostgreSqlConnectionInfoArgs{...}
//
//  or:
//
//          nil
type PostgreSqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput
	ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Context) PostgreSqlConnectionInfoPtrOutput
}

type postgreSqlConnectionInfoPtrType PostgreSqlConnectionInfoArgs

func PostgreSqlConnectionInfoPtr(v *PostgreSqlConnectionInfoArgs) PostgreSqlConnectionInfoPtrInput {
	return (*postgreSqlConnectionInfoPtrType)(v)
}

func (*postgreSqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfo)(nil)).Elem()
}

func (i *postgreSqlConnectionInfoPtrType) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return i.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *postgreSqlConnectionInfoPtrType) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoPtrOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfo)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoOutput() PostgreSqlConnectionInfoOutput {
	return o
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoOutput {
	return o
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return o.ToPostgreSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o PostgreSqlConnectionInfoOutput) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *PostgreSqlConnectionInfo {
		return &v
	}).(PostgreSqlConnectionInfoPtrOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o PostgreSqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfo)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoPtrOutput) ToPostgreSqlConnectionInfoPtrOutput() PostgreSqlConnectionInfoPtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoPtrOutput) ToPostgreSqlConnectionInfoPtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoPtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoPtrOutput) Elem() PostgreSqlConnectionInfoOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) PostgreSqlConnectionInfo { return *v }).(PostgreSqlConnectionInfoOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o PostgreSqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoInvokeResponse struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// PostgreSqlConnectionInfoInvokeResponseInput is an input type that accepts PostgreSqlConnectionInfoInvokeResponseArgs and PostgreSqlConnectionInfoInvokeResponseOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoInvokeResponseInput` via:
//
//          PostgreSqlConnectionInfoInvokeResponseArgs{...}
type PostgreSqlConnectionInfoInvokeResponseInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoInvokeResponseOutput() PostgreSqlConnectionInfoInvokeResponseOutput
	ToPostgreSqlConnectionInfoInvokeResponseOutputWithContext(context.Context) PostgreSqlConnectionInfoInvokeResponseOutput
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoInvokeResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PostgreSqlConnectionInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i PostgreSqlConnectionInfoInvokeResponseArgs) ToPostgreSqlConnectionInfoInvokeResponseOutput() PostgreSqlConnectionInfoInvokeResponseOutput {
	return i.ToPostgreSqlConnectionInfoInvokeResponseOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoInvokeResponseArgs) ToPostgreSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

func (i PostgreSqlConnectionInfoInvokeResponseArgs) ToPostgreSqlConnectionInfoInvokeResponsePtrOutput() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoInvokeResponseArgs) ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoInvokeResponseOutput).ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx)
}

// PostgreSqlConnectionInfoInvokeResponsePtrInput is an input type that accepts PostgreSqlConnectionInfoInvokeResponseArgs, PostgreSqlConnectionInfoInvokeResponsePtr and PostgreSqlConnectionInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoInvokeResponsePtrInput` via:
//
//          PostgreSqlConnectionInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PostgreSqlConnectionInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoInvokeResponsePtrOutput() PostgreSqlConnectionInfoInvokeResponsePtrOutput
	ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Context) PostgreSqlConnectionInfoInvokeResponsePtrOutput
}

type postgreSqlConnectionInfoInvokeResponsePtrType PostgreSqlConnectionInfoInvokeResponseArgs

func PostgreSqlConnectionInfoInvokeResponsePtr(v *PostgreSqlConnectionInfoInvokeResponseArgs) PostgreSqlConnectionInfoInvokeResponsePtrInput {
	return (*postgreSqlConnectionInfoInvokeResponsePtrType)(v)
}

func (*postgreSqlConnectionInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i *postgreSqlConnectionInfoInvokeResponsePtrType) ToPostgreSqlConnectionInfoInvokeResponsePtrOutput() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *postgreSqlConnectionInfoInvokeResponsePtrType) ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoInvokeResponseOutput) ToPostgreSqlConnectionInfoInvokeResponseOutput() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoInvokeResponseOutput) ToPostgreSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoInvokeResponseOutput) ToPostgreSqlConnectionInfoInvokeResponsePtrOutput() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PostgreSqlConnectionInfoInvokeResponseOutput) ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) *PostgreSqlConnectionInfoInvokeResponse {
		return &v
	}).(PostgreSqlConnectionInfoInvokeResponsePtrOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoInvokeResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoInvokeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoInvokeResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o PostgreSqlConnectionInfoInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) ToPostgreSqlConnectionInfoInvokeResponsePtrOutput() PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) ToPostgreSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) Elem() PostgreSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) PostgreSqlConnectionInfoInvokeResponse { return *v }).(PostgreSqlConnectionInfoInvokeResponseOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o PostgreSqlConnectionInfoInvokeResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoResponse struct {
	// Name of the database
	DatabaseName *string `pulumi:"databaseName"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Port for Server
	Port int `pulumi:"port"`
	// Name of the server
	ServerName string `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// PostgreSqlConnectionInfoResponseInput is an input type that accepts PostgreSqlConnectionInfoResponseArgs and PostgreSqlConnectionInfoResponseOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoResponseInput` via:
//
//          PostgreSqlConnectionInfoResponseArgs{...}
type PostgreSqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput
	ToPostgreSqlConnectionInfoResponseOutputWithContext(context.Context) PostgreSqlConnectionInfoResponseOutput
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoResponseArgs struct {
	// Name of the database
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port for Server
	Port pulumi.IntInput `pulumi:"port"`
	// Name of the server
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// Type of connection info
	// Expected value is 'PostgreSqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PostgreSqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput {
	return i.ToPostgreSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponseOutput)
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i PostgreSqlConnectionInfoResponseArgs) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponseOutput).ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}

// PostgreSqlConnectionInfoResponsePtrInput is an input type that accepts PostgreSqlConnectionInfoResponseArgs, PostgreSqlConnectionInfoResponsePtr and PostgreSqlConnectionInfoResponsePtrOutput values.
// You can construct a concrete instance of `PostgreSqlConnectionInfoResponsePtrInput` via:
//
//          PostgreSqlConnectionInfoResponseArgs{...}
//
//  or:
//
//          nil
type PostgreSqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput
	ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Context) PostgreSqlConnectionInfoResponsePtrOutput
}

type postgreSqlConnectionInfoResponsePtrType PostgreSqlConnectionInfoResponseArgs

func PostgreSqlConnectionInfoResponsePtr(v *PostgreSqlConnectionInfoResponseArgs) PostgreSqlConnectionInfoResponsePtrInput {
	return (*postgreSqlConnectionInfoResponsePtrType)(v)
}

func (*postgreSqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (i *postgreSqlConnectionInfoResponsePtrType) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return i.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *postgreSqlConnectionInfoResponsePtrType) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to PostgreSQL server
type PostgreSqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponseOutput() PostgreSqlConnectionInfoResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponseOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponseOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o PostgreSqlConnectionInfoResponseOutput) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *PostgreSqlConnectionInfoResponse {
		return &v
	}).(PostgreSqlConnectionInfoResponsePtrOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) int { return v.Port }).(pulumi.IntOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoResponseOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) string { return v.ServerName }).(pulumi.StringOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o PostgreSqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PostgreSqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PostgreSqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (PostgreSqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgreSqlConnectionInfoResponse)(nil)).Elem()
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) ToPostgreSqlConnectionInfoResponsePtrOutput() PostgreSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) ToPostgreSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) PostgreSqlConnectionInfoResponsePtrOutput {
	return o
}

func (o PostgreSqlConnectionInfoResponsePtrOutput) Elem() PostgreSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) PostgreSqlConnectionInfoResponse { return *v }).(PostgreSqlConnectionInfoResponseOutput)
}

// Name of the database
func (o PostgreSqlConnectionInfoResponsePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Password credential.
func (o PostgreSqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port for Server
func (o PostgreSqlConnectionInfoResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Name of the server
func (o PostgreSqlConnectionInfoResponsePtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// Type of connection info
// Expected value is 'PostgreSqlConnectionInfo'.
func (o PostgreSqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o PostgreSqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PostgreSqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultInvokeResponse struct {
	// List of queries executed and it's execution results in source and target
	QueryResults QueryExecutionResultInvokeResponse `pulumi:"queryResults"`
	// Errors that are part of the execution
	ValidationErrors ValidationErrorInvokeResponse `pulumi:"validationErrors"`
}

// QueryAnalysisValidationResultInvokeResponseInput is an input type that accepts QueryAnalysisValidationResultInvokeResponseArgs and QueryAnalysisValidationResultInvokeResponseOutput values.
// You can construct a concrete instance of `QueryAnalysisValidationResultInvokeResponseInput` via:
//
//          QueryAnalysisValidationResultInvokeResponseArgs{...}
type QueryAnalysisValidationResultInvokeResponseInput interface {
	pulumi.Input

	ToQueryAnalysisValidationResultInvokeResponseOutput() QueryAnalysisValidationResultInvokeResponseOutput
	ToQueryAnalysisValidationResultInvokeResponseOutputWithContext(context.Context) QueryAnalysisValidationResultInvokeResponseOutput
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultInvokeResponseArgs struct {
	// List of queries executed and it's execution results in source and target
	QueryResults QueryExecutionResultInvokeResponseInput `pulumi:"queryResults"`
	// Errors that are part of the execution
	ValidationErrors ValidationErrorInvokeResponseInput `pulumi:"validationErrors"`
}

func (QueryAnalysisValidationResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryAnalysisValidationResultInvokeResponse)(nil)).Elem()
}

func (i QueryAnalysisValidationResultInvokeResponseArgs) ToQueryAnalysisValidationResultInvokeResponseOutput() QueryAnalysisValidationResultInvokeResponseOutput {
	return i.ToQueryAnalysisValidationResultInvokeResponseOutputWithContext(context.Background())
}

func (i QueryAnalysisValidationResultInvokeResponseArgs) ToQueryAnalysisValidationResultInvokeResponseOutputWithContext(ctx context.Context) QueryAnalysisValidationResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryAnalysisValidationResultInvokeResponseOutput)
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (QueryAnalysisValidationResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryAnalysisValidationResultInvokeResponse)(nil)).Elem()
}

func (o QueryAnalysisValidationResultInvokeResponseOutput) ToQueryAnalysisValidationResultInvokeResponseOutput() QueryAnalysisValidationResultInvokeResponseOutput {
	return o
}

func (o QueryAnalysisValidationResultInvokeResponseOutput) ToQueryAnalysisValidationResultInvokeResponseOutputWithContext(ctx context.Context) QueryAnalysisValidationResultInvokeResponseOutput {
	return o
}

// List of queries executed and it's execution results in source and target
func (o QueryAnalysisValidationResultInvokeResponseOutput) QueryResults() QueryExecutionResultInvokeResponseOutput {
	return o.ApplyT(func(v QueryAnalysisValidationResultInvokeResponse) QueryExecutionResultInvokeResponse {
		return v.QueryResults
	}).(QueryExecutionResultInvokeResponseOutput)
}

// Errors that are part of the execution
func (o QueryAnalysisValidationResultInvokeResponseOutput) ValidationErrors() ValidationErrorInvokeResponseOutput {
	return o.ApplyT(func(v QueryAnalysisValidationResultInvokeResponse) ValidationErrorInvokeResponse {
		return v.ValidationErrors
	}).(ValidationErrorInvokeResponseOutput)
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultResponse struct {
	// List of queries executed and it's execution results in source and target
	QueryResults QueryExecutionResultResponse `pulumi:"queryResults"`
	// Errors that are part of the execution
	ValidationErrors ValidationErrorResponse `pulumi:"validationErrors"`
}

// QueryAnalysisValidationResultResponseInput is an input type that accepts QueryAnalysisValidationResultResponseArgs and QueryAnalysisValidationResultResponseOutput values.
// You can construct a concrete instance of `QueryAnalysisValidationResultResponseInput` via:
//
//          QueryAnalysisValidationResultResponseArgs{...}
type QueryAnalysisValidationResultResponseInput interface {
	pulumi.Input

	ToQueryAnalysisValidationResultResponseOutput() QueryAnalysisValidationResultResponseOutput
	ToQueryAnalysisValidationResultResponseOutputWithContext(context.Context) QueryAnalysisValidationResultResponseOutput
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultResponseArgs struct {
	// List of queries executed and it's execution results in source and target
	QueryResults QueryExecutionResultResponseInput `pulumi:"queryResults"`
	// Errors that are part of the execution
	ValidationErrors ValidationErrorResponseInput `pulumi:"validationErrors"`
}

func (QueryAnalysisValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryAnalysisValidationResultResponse)(nil)).Elem()
}

func (i QueryAnalysisValidationResultResponseArgs) ToQueryAnalysisValidationResultResponseOutput() QueryAnalysisValidationResultResponseOutput {
	return i.ToQueryAnalysisValidationResultResponseOutputWithContext(context.Background())
}

func (i QueryAnalysisValidationResultResponseArgs) ToQueryAnalysisValidationResultResponseOutputWithContext(ctx context.Context) QueryAnalysisValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryAnalysisValidationResultResponseOutput)
}

// Results for query analysis comparison between the source and target
type QueryAnalysisValidationResultResponseOutput struct{ *pulumi.OutputState }

func (QueryAnalysisValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryAnalysisValidationResultResponse)(nil)).Elem()
}

func (o QueryAnalysisValidationResultResponseOutput) ToQueryAnalysisValidationResultResponseOutput() QueryAnalysisValidationResultResponseOutput {
	return o
}

func (o QueryAnalysisValidationResultResponseOutput) ToQueryAnalysisValidationResultResponseOutputWithContext(ctx context.Context) QueryAnalysisValidationResultResponseOutput {
	return o
}

// List of queries executed and it's execution results in source and target
func (o QueryAnalysisValidationResultResponseOutput) QueryResults() QueryExecutionResultResponseOutput {
	return o.ApplyT(func(v QueryAnalysisValidationResultResponse) QueryExecutionResultResponse { return v.QueryResults }).(QueryExecutionResultResponseOutput)
}

// Errors that are part of the execution
func (o QueryAnalysisValidationResultResponseOutput) ValidationErrors() ValidationErrorResponseOutput {
	return o.ApplyT(func(v QueryAnalysisValidationResultResponse) ValidationErrorResponse { return v.ValidationErrors }).(ValidationErrorResponseOutput)
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultInvokeResponse struct {
	// Query text retrieved from the source server
	QueryText string `pulumi:"queryText"`
	// Query analysis result from the source
	SourceResult ExecutionStatisticsInvokeResponse `pulumi:"sourceResult"`
	// Total no. of statements in the batch
	StatementsInBatch float64 `pulumi:"statementsInBatch"`
	// Query analysis result from the target
	TargetResult ExecutionStatisticsInvokeResponse `pulumi:"targetResult"`
}

// QueryExecutionResultInvokeResponseInput is an input type that accepts QueryExecutionResultInvokeResponseArgs and QueryExecutionResultInvokeResponseOutput values.
// You can construct a concrete instance of `QueryExecutionResultInvokeResponseInput` via:
//
//          QueryExecutionResultInvokeResponseArgs{...}
type QueryExecutionResultInvokeResponseInput interface {
	pulumi.Input

	ToQueryExecutionResultInvokeResponseOutput() QueryExecutionResultInvokeResponseOutput
	ToQueryExecutionResultInvokeResponseOutputWithContext(context.Context) QueryExecutionResultInvokeResponseOutput
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultInvokeResponseArgs struct {
	// Query text retrieved from the source server
	QueryText pulumi.StringInput `pulumi:"queryText"`
	// Query analysis result from the source
	SourceResult ExecutionStatisticsInvokeResponseInput `pulumi:"sourceResult"`
	// Total no. of statements in the batch
	StatementsInBatch pulumi.Float64Input `pulumi:"statementsInBatch"`
	// Query analysis result from the target
	TargetResult ExecutionStatisticsInvokeResponseInput `pulumi:"targetResult"`
}

func (QueryExecutionResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryExecutionResultInvokeResponse)(nil)).Elem()
}

func (i QueryExecutionResultInvokeResponseArgs) ToQueryExecutionResultInvokeResponseOutput() QueryExecutionResultInvokeResponseOutput {
	return i.ToQueryExecutionResultInvokeResponseOutputWithContext(context.Background())
}

func (i QueryExecutionResultInvokeResponseArgs) ToQueryExecutionResultInvokeResponseOutputWithContext(ctx context.Context) QueryExecutionResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryExecutionResultInvokeResponseOutput)
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (QueryExecutionResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryExecutionResultInvokeResponse)(nil)).Elem()
}

func (o QueryExecutionResultInvokeResponseOutput) ToQueryExecutionResultInvokeResponseOutput() QueryExecutionResultInvokeResponseOutput {
	return o
}

func (o QueryExecutionResultInvokeResponseOutput) ToQueryExecutionResultInvokeResponseOutputWithContext(ctx context.Context) QueryExecutionResultInvokeResponseOutput {
	return o
}

// Query text retrieved from the source server
func (o QueryExecutionResultInvokeResponseOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v QueryExecutionResultInvokeResponse) string { return v.QueryText }).(pulumi.StringOutput)
}

// Query analysis result from the source
func (o QueryExecutionResultInvokeResponseOutput) SourceResult() ExecutionStatisticsInvokeResponseOutput {
	return o.ApplyT(func(v QueryExecutionResultInvokeResponse) ExecutionStatisticsInvokeResponse { return v.SourceResult }).(ExecutionStatisticsInvokeResponseOutput)
}

// Total no. of statements in the batch
func (o QueryExecutionResultInvokeResponseOutput) StatementsInBatch() pulumi.Float64Output {
	return o.ApplyT(func(v QueryExecutionResultInvokeResponse) float64 { return v.StatementsInBatch }).(pulumi.Float64Output)
}

// Query analysis result from the target
func (o QueryExecutionResultInvokeResponseOutput) TargetResult() ExecutionStatisticsInvokeResponseOutput {
	return o.ApplyT(func(v QueryExecutionResultInvokeResponse) ExecutionStatisticsInvokeResponse { return v.TargetResult }).(ExecutionStatisticsInvokeResponseOutput)
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultResponse struct {
	// Query text retrieved from the source server
	QueryText string `pulumi:"queryText"`
	// Query analysis result from the source
	SourceResult ExecutionStatisticsResponse `pulumi:"sourceResult"`
	// Total no. of statements in the batch
	StatementsInBatch float64 `pulumi:"statementsInBatch"`
	// Query analysis result from the target
	TargetResult ExecutionStatisticsResponse `pulumi:"targetResult"`
}

// QueryExecutionResultResponseInput is an input type that accepts QueryExecutionResultResponseArgs and QueryExecutionResultResponseOutput values.
// You can construct a concrete instance of `QueryExecutionResultResponseInput` via:
//
//          QueryExecutionResultResponseArgs{...}
type QueryExecutionResultResponseInput interface {
	pulumi.Input

	ToQueryExecutionResultResponseOutput() QueryExecutionResultResponseOutput
	ToQueryExecutionResultResponseOutputWithContext(context.Context) QueryExecutionResultResponseOutput
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultResponseArgs struct {
	// Query text retrieved from the source server
	QueryText pulumi.StringInput `pulumi:"queryText"`
	// Query analysis result from the source
	SourceResult ExecutionStatisticsResponseInput `pulumi:"sourceResult"`
	// Total no. of statements in the batch
	StatementsInBatch pulumi.Float64Input `pulumi:"statementsInBatch"`
	// Query analysis result from the target
	TargetResult ExecutionStatisticsResponseInput `pulumi:"targetResult"`
}

func (QueryExecutionResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryExecutionResultResponse)(nil)).Elem()
}

func (i QueryExecutionResultResponseArgs) ToQueryExecutionResultResponseOutput() QueryExecutionResultResponseOutput {
	return i.ToQueryExecutionResultResponseOutputWithContext(context.Background())
}

func (i QueryExecutionResultResponseArgs) ToQueryExecutionResultResponseOutputWithContext(ctx context.Context) QueryExecutionResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueryExecutionResultResponseOutput)
}

// Describes query analysis results for execution in source and target
type QueryExecutionResultResponseOutput struct{ *pulumi.OutputState }

func (QueryExecutionResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueryExecutionResultResponse)(nil)).Elem()
}

func (o QueryExecutionResultResponseOutput) ToQueryExecutionResultResponseOutput() QueryExecutionResultResponseOutput {
	return o
}

func (o QueryExecutionResultResponseOutput) ToQueryExecutionResultResponseOutputWithContext(ctx context.Context) QueryExecutionResultResponseOutput {
	return o
}

// Query text retrieved from the source server
func (o QueryExecutionResultResponseOutput) QueryText() pulumi.StringOutput {
	return o.ApplyT(func(v QueryExecutionResultResponse) string { return v.QueryText }).(pulumi.StringOutput)
}

// Query analysis result from the source
func (o QueryExecutionResultResponseOutput) SourceResult() ExecutionStatisticsResponseOutput {
	return o.ApplyT(func(v QueryExecutionResultResponse) ExecutionStatisticsResponse { return v.SourceResult }).(ExecutionStatisticsResponseOutput)
}

// Total no. of statements in the batch
func (o QueryExecutionResultResponseOutput) StatementsInBatch() pulumi.Float64Output {
	return o.ApplyT(func(v QueryExecutionResultResponse) float64 { return v.StatementsInBatch }).(pulumi.Float64Output)
}

// Query analysis result from the target
func (o QueryExecutionResultResponseOutput) TargetResult() ExecutionStatisticsResponseOutput {
	return o.ApplyT(func(v QueryExecutionResultResponse) ExecutionStatisticsResponse { return v.TargetResult }).(ExecutionStatisticsResponseOutput)
}

// Exception object for all custom exceptions
type ReportableExceptionInvokeResponse struct {
	// Actionable steps for this exception
	ActionableMessage *string `pulumi:"actionableMessage"`
	// The path to the file where exception occurred
	FilePath string `pulumi:"filePath"`
	// Coded numerical value that is assigned to a specific exception
	HResult int `pulumi:"hResult"`
	// The line number where exception occurred
	LineNumber string `pulumi:"lineNumber"`
	// Error message
	Message string `pulumi:"message"`
	// Stack trace
	StackTrace string `pulumi:"stackTrace"`
}

// ReportableExceptionInvokeResponseInput is an input type that accepts ReportableExceptionInvokeResponseArgs and ReportableExceptionInvokeResponseOutput values.
// You can construct a concrete instance of `ReportableExceptionInvokeResponseInput` via:
//
//          ReportableExceptionInvokeResponseArgs{...}
type ReportableExceptionInvokeResponseInput interface {
	pulumi.Input

	ToReportableExceptionInvokeResponseOutput() ReportableExceptionInvokeResponseOutput
	ToReportableExceptionInvokeResponseOutputWithContext(context.Context) ReportableExceptionInvokeResponseOutput
}

// Exception object for all custom exceptions
type ReportableExceptionInvokeResponseArgs struct {
	// Actionable steps for this exception
	ActionableMessage pulumi.StringPtrInput `pulumi:"actionableMessage"`
	// The path to the file where exception occurred
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Coded numerical value that is assigned to a specific exception
	HResult pulumi.IntInput `pulumi:"hResult"`
	// The line number where exception occurred
	LineNumber pulumi.StringInput `pulumi:"lineNumber"`
	// Error message
	Message pulumi.StringInput `pulumi:"message"`
	// Stack trace
	StackTrace pulumi.StringInput `pulumi:"stackTrace"`
}

func (ReportableExceptionInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionInvokeResponse)(nil)).Elem()
}

func (i ReportableExceptionInvokeResponseArgs) ToReportableExceptionInvokeResponseOutput() ReportableExceptionInvokeResponseOutput {
	return i.ToReportableExceptionInvokeResponseOutputWithContext(context.Background())
}

func (i ReportableExceptionInvokeResponseArgs) ToReportableExceptionInvokeResponseOutputWithContext(ctx context.Context) ReportableExceptionInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionInvokeResponseOutput)
}

// ReportableExceptionInvokeResponseArrayInput is an input type that accepts ReportableExceptionInvokeResponseArray and ReportableExceptionInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ReportableExceptionInvokeResponseArrayInput` via:
//
//          ReportableExceptionInvokeResponseArray{ ReportableExceptionInvokeResponseArgs{...} }
type ReportableExceptionInvokeResponseArrayInput interface {
	pulumi.Input

	ToReportableExceptionInvokeResponseArrayOutput() ReportableExceptionInvokeResponseArrayOutput
	ToReportableExceptionInvokeResponseArrayOutputWithContext(context.Context) ReportableExceptionInvokeResponseArrayOutput
}

type ReportableExceptionInvokeResponseArray []ReportableExceptionInvokeResponseInput

func (ReportableExceptionInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionInvokeResponse)(nil)).Elem()
}

func (i ReportableExceptionInvokeResponseArray) ToReportableExceptionInvokeResponseArrayOutput() ReportableExceptionInvokeResponseArrayOutput {
	return i.ToReportableExceptionInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ReportableExceptionInvokeResponseArray) ToReportableExceptionInvokeResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionInvokeResponseArrayOutput)
}

// Exception object for all custom exceptions
type ReportableExceptionInvokeResponseOutput struct{ *pulumi.OutputState }

func (ReportableExceptionInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionInvokeResponse)(nil)).Elem()
}

func (o ReportableExceptionInvokeResponseOutput) ToReportableExceptionInvokeResponseOutput() ReportableExceptionInvokeResponseOutput {
	return o
}

func (o ReportableExceptionInvokeResponseOutput) ToReportableExceptionInvokeResponseOutputWithContext(ctx context.Context) ReportableExceptionInvokeResponseOutput {
	return o
}

// Actionable steps for this exception
func (o ReportableExceptionInvokeResponseOutput) ActionableMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) *string { return v.ActionableMessage }).(pulumi.StringPtrOutput)
}

// The path to the file where exception occurred
func (o ReportableExceptionInvokeResponseOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) string { return v.FilePath }).(pulumi.StringOutput)
}

// Coded numerical value that is assigned to a specific exception
func (o ReportableExceptionInvokeResponseOutput) HResult() pulumi.IntOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) int { return v.HResult }).(pulumi.IntOutput)
}

// The line number where exception occurred
func (o ReportableExceptionInvokeResponseOutput) LineNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) string { return v.LineNumber }).(pulumi.StringOutput)
}

// Error message
func (o ReportableExceptionInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Stack trace
func (o ReportableExceptionInvokeResponseOutput) StackTrace() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionInvokeResponse) string { return v.StackTrace }).(pulumi.StringOutput)
}

type ReportableExceptionInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ReportableExceptionInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionInvokeResponse)(nil)).Elem()
}

func (o ReportableExceptionInvokeResponseArrayOutput) ToReportableExceptionInvokeResponseArrayOutput() ReportableExceptionInvokeResponseArrayOutput {
	return o
}

func (o ReportableExceptionInvokeResponseArrayOutput) ToReportableExceptionInvokeResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionInvokeResponseArrayOutput {
	return o
}

func (o ReportableExceptionInvokeResponseArrayOutput) Index(i pulumi.IntInput) ReportableExceptionInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportableExceptionInvokeResponse {
		return vs[0].([]ReportableExceptionInvokeResponse)[vs[1].(int)]
	}).(ReportableExceptionInvokeResponseOutput)
}

// Exception object for all custom exceptions
type ReportableExceptionResponse struct {
	// Actionable steps for this exception
	ActionableMessage *string `pulumi:"actionableMessage"`
	// The path to the file where exception occurred
	FilePath string `pulumi:"filePath"`
	// Coded numerical value that is assigned to a specific exception
	HResult int `pulumi:"hResult"`
	// The line number where exception occurred
	LineNumber string `pulumi:"lineNumber"`
	// Error message
	Message string `pulumi:"message"`
	// Stack trace
	StackTrace string `pulumi:"stackTrace"`
}

// ReportableExceptionResponseInput is an input type that accepts ReportableExceptionResponseArgs and ReportableExceptionResponseOutput values.
// You can construct a concrete instance of `ReportableExceptionResponseInput` via:
//
//          ReportableExceptionResponseArgs{...}
type ReportableExceptionResponseInput interface {
	pulumi.Input

	ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput
	ToReportableExceptionResponseOutputWithContext(context.Context) ReportableExceptionResponseOutput
}

// Exception object for all custom exceptions
type ReportableExceptionResponseArgs struct {
	// Actionable steps for this exception
	ActionableMessage pulumi.StringPtrInput `pulumi:"actionableMessage"`
	// The path to the file where exception occurred
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Coded numerical value that is assigned to a specific exception
	HResult pulumi.IntInput `pulumi:"hResult"`
	// The line number where exception occurred
	LineNumber pulumi.StringInput `pulumi:"lineNumber"`
	// Error message
	Message pulumi.StringInput `pulumi:"message"`
	// Stack trace
	StackTrace pulumi.StringInput `pulumi:"stackTrace"`
}

func (ReportableExceptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionResponse)(nil)).Elem()
}

func (i ReportableExceptionResponseArgs) ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput {
	return i.ToReportableExceptionResponseOutputWithContext(context.Background())
}

func (i ReportableExceptionResponseArgs) ToReportableExceptionResponseOutputWithContext(ctx context.Context) ReportableExceptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionResponseOutput)
}

// ReportableExceptionResponseArrayInput is an input type that accepts ReportableExceptionResponseArray and ReportableExceptionResponseArrayOutput values.
// You can construct a concrete instance of `ReportableExceptionResponseArrayInput` via:
//
//          ReportableExceptionResponseArray{ ReportableExceptionResponseArgs{...} }
type ReportableExceptionResponseArrayInput interface {
	pulumi.Input

	ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput
	ToReportableExceptionResponseArrayOutputWithContext(context.Context) ReportableExceptionResponseArrayOutput
}

type ReportableExceptionResponseArray []ReportableExceptionResponseInput

func (ReportableExceptionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionResponse)(nil)).Elem()
}

func (i ReportableExceptionResponseArray) ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput {
	return i.ToReportableExceptionResponseArrayOutputWithContext(context.Background())
}

func (i ReportableExceptionResponseArray) ToReportableExceptionResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportableExceptionResponseArrayOutput)
}

// Exception object for all custom exceptions
type ReportableExceptionResponseOutput struct{ *pulumi.OutputState }

func (ReportableExceptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportableExceptionResponse)(nil)).Elem()
}

func (o ReportableExceptionResponseOutput) ToReportableExceptionResponseOutput() ReportableExceptionResponseOutput {
	return o
}

func (o ReportableExceptionResponseOutput) ToReportableExceptionResponseOutputWithContext(ctx context.Context) ReportableExceptionResponseOutput {
	return o
}

// Actionable steps for this exception
func (o ReportableExceptionResponseOutput) ActionableMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) *string { return v.ActionableMessage }).(pulumi.StringPtrOutput)
}

// The path to the file where exception occurred
func (o ReportableExceptionResponseOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) string { return v.FilePath }).(pulumi.StringOutput)
}

// Coded numerical value that is assigned to a specific exception
func (o ReportableExceptionResponseOutput) HResult() pulumi.IntOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) int { return v.HResult }).(pulumi.IntOutput)
}

// The line number where exception occurred
func (o ReportableExceptionResponseOutput) LineNumber() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) string { return v.LineNumber }).(pulumi.StringOutput)
}

// Error message
func (o ReportableExceptionResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Stack trace
func (o ReportableExceptionResponseOutput) StackTrace() pulumi.StringOutput {
	return o.ApplyT(func(v ReportableExceptionResponse) string { return v.StackTrace }).(pulumi.StringOutput)
}

type ReportableExceptionResponseArrayOutput struct{ *pulumi.OutputState }

func (ReportableExceptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportableExceptionResponse)(nil)).Elem()
}

func (o ReportableExceptionResponseArrayOutput) ToReportableExceptionResponseArrayOutput() ReportableExceptionResponseArrayOutput {
	return o
}

func (o ReportableExceptionResponseArrayOutput) ToReportableExceptionResponseArrayOutputWithContext(ctx context.Context) ReportableExceptionResponseArrayOutput {
	return o
}

func (o ReportableExceptionResponseArrayOutput) Index(i pulumi.IntInput) ReportableExceptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportableExceptionResponse {
		return vs[0].([]ReportableExceptionResponse)[vs[1].(int)]
	}).(ReportableExceptionResponseOutput)
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultInvokeResponse struct {
	// List of schema differences between the source and target databases
	SchemaDifferences SchemaComparisonValidationResultTypeInvokeResponse `pulumi:"schemaDifferences"`
	// Count of source database objects
	SourceDatabaseObjectCount map[string]float64 `pulumi:"sourceDatabaseObjectCount"`
	// Count of target database objects
	TargetDatabaseObjectCount map[string]float64 `pulumi:"targetDatabaseObjectCount"`
	// List of errors that happened while performing schema compare validation
	ValidationErrors ValidationErrorInvokeResponse `pulumi:"validationErrors"`
}

// SchemaComparisonValidationResultInvokeResponseInput is an input type that accepts SchemaComparisonValidationResultInvokeResponseArgs and SchemaComparisonValidationResultInvokeResponseOutput values.
// You can construct a concrete instance of `SchemaComparisonValidationResultInvokeResponseInput` via:
//
//          SchemaComparisonValidationResultInvokeResponseArgs{...}
type SchemaComparisonValidationResultInvokeResponseInput interface {
	pulumi.Input

	ToSchemaComparisonValidationResultInvokeResponseOutput() SchemaComparisonValidationResultInvokeResponseOutput
	ToSchemaComparisonValidationResultInvokeResponseOutputWithContext(context.Context) SchemaComparisonValidationResultInvokeResponseOutput
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultInvokeResponseArgs struct {
	// List of schema differences between the source and target databases
	SchemaDifferences SchemaComparisonValidationResultTypeInvokeResponseInput `pulumi:"schemaDifferences"`
	// Count of source database objects
	SourceDatabaseObjectCount pulumi.Float64MapInput `pulumi:"sourceDatabaseObjectCount"`
	// Count of target database objects
	TargetDatabaseObjectCount pulumi.Float64MapInput `pulumi:"targetDatabaseObjectCount"`
	// List of errors that happened while performing schema compare validation
	ValidationErrors ValidationErrorInvokeResponseInput `pulumi:"validationErrors"`
}

func (SchemaComparisonValidationResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultInvokeResponse)(nil)).Elem()
}

func (i SchemaComparisonValidationResultInvokeResponseArgs) ToSchemaComparisonValidationResultInvokeResponseOutput() SchemaComparisonValidationResultInvokeResponseOutput {
	return i.ToSchemaComparisonValidationResultInvokeResponseOutputWithContext(context.Background())
}

func (i SchemaComparisonValidationResultInvokeResponseArgs) ToSchemaComparisonValidationResultInvokeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaComparisonValidationResultInvokeResponseOutput)
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (SchemaComparisonValidationResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultInvokeResponse)(nil)).Elem()
}

func (o SchemaComparisonValidationResultInvokeResponseOutput) ToSchemaComparisonValidationResultInvokeResponseOutput() SchemaComparisonValidationResultInvokeResponseOutput {
	return o
}

func (o SchemaComparisonValidationResultInvokeResponseOutput) ToSchemaComparisonValidationResultInvokeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultInvokeResponseOutput {
	return o
}

// List of schema differences between the source and target databases
func (o SchemaComparisonValidationResultInvokeResponseOutput) SchemaDifferences() SchemaComparisonValidationResultTypeInvokeResponseOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultInvokeResponse) SchemaComparisonValidationResultTypeInvokeResponse {
		return v.SchemaDifferences
	}).(SchemaComparisonValidationResultTypeInvokeResponseOutput)
}

// Count of source database objects
func (o SchemaComparisonValidationResultInvokeResponseOutput) SourceDatabaseObjectCount() pulumi.Float64MapOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultInvokeResponse) map[string]float64 {
		return v.SourceDatabaseObjectCount
	}).(pulumi.Float64MapOutput)
}

// Count of target database objects
func (o SchemaComparisonValidationResultInvokeResponseOutput) TargetDatabaseObjectCount() pulumi.Float64MapOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultInvokeResponse) map[string]float64 {
		return v.TargetDatabaseObjectCount
	}).(pulumi.Float64MapOutput)
}

// List of errors that happened while performing schema compare validation
func (o SchemaComparisonValidationResultInvokeResponseOutput) ValidationErrors() ValidationErrorInvokeResponseOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultInvokeResponse) ValidationErrorInvokeResponse {
		return v.ValidationErrors
	}).(ValidationErrorInvokeResponseOutput)
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultResponse struct {
	// List of schema differences between the source and target databases
	SchemaDifferences SchemaComparisonValidationResultTypeResponse `pulumi:"schemaDifferences"`
	// Count of source database objects
	SourceDatabaseObjectCount map[string]float64 `pulumi:"sourceDatabaseObjectCount"`
	// Count of target database objects
	TargetDatabaseObjectCount map[string]float64 `pulumi:"targetDatabaseObjectCount"`
	// List of errors that happened while performing schema compare validation
	ValidationErrors ValidationErrorResponse `pulumi:"validationErrors"`
}

// SchemaComparisonValidationResultResponseInput is an input type that accepts SchemaComparisonValidationResultResponseArgs and SchemaComparisonValidationResultResponseOutput values.
// You can construct a concrete instance of `SchemaComparisonValidationResultResponseInput` via:
//
//          SchemaComparisonValidationResultResponseArgs{...}
type SchemaComparisonValidationResultResponseInput interface {
	pulumi.Input

	ToSchemaComparisonValidationResultResponseOutput() SchemaComparisonValidationResultResponseOutput
	ToSchemaComparisonValidationResultResponseOutputWithContext(context.Context) SchemaComparisonValidationResultResponseOutput
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultResponseArgs struct {
	// List of schema differences between the source and target databases
	SchemaDifferences SchemaComparisonValidationResultTypeResponseInput `pulumi:"schemaDifferences"`
	// Count of source database objects
	SourceDatabaseObjectCount pulumi.Float64MapInput `pulumi:"sourceDatabaseObjectCount"`
	// Count of target database objects
	TargetDatabaseObjectCount pulumi.Float64MapInput `pulumi:"targetDatabaseObjectCount"`
	// List of errors that happened while performing schema compare validation
	ValidationErrors ValidationErrorResponseInput `pulumi:"validationErrors"`
}

func (SchemaComparisonValidationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultResponse)(nil)).Elem()
}

func (i SchemaComparisonValidationResultResponseArgs) ToSchemaComparisonValidationResultResponseOutput() SchemaComparisonValidationResultResponseOutput {
	return i.ToSchemaComparisonValidationResultResponseOutputWithContext(context.Background())
}

func (i SchemaComparisonValidationResultResponseArgs) ToSchemaComparisonValidationResultResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaComparisonValidationResultResponseOutput)
}

// Results for schema comparison between the source and target
type SchemaComparisonValidationResultResponseOutput struct{ *pulumi.OutputState }

func (SchemaComparisonValidationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultResponse)(nil)).Elem()
}

func (o SchemaComparisonValidationResultResponseOutput) ToSchemaComparisonValidationResultResponseOutput() SchemaComparisonValidationResultResponseOutput {
	return o
}

func (o SchemaComparisonValidationResultResponseOutput) ToSchemaComparisonValidationResultResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultResponseOutput {
	return o
}

// List of schema differences between the source and target databases
func (o SchemaComparisonValidationResultResponseOutput) SchemaDifferences() SchemaComparisonValidationResultTypeResponseOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultResponse) SchemaComparisonValidationResultTypeResponse {
		return v.SchemaDifferences
	}).(SchemaComparisonValidationResultTypeResponseOutput)
}

// Count of source database objects
func (o SchemaComparisonValidationResultResponseOutput) SourceDatabaseObjectCount() pulumi.Float64MapOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultResponse) map[string]float64 {
		return v.SourceDatabaseObjectCount
	}).(pulumi.Float64MapOutput)
}

// Count of target database objects
func (o SchemaComparisonValidationResultResponseOutput) TargetDatabaseObjectCount() pulumi.Float64MapOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultResponse) map[string]float64 {
		return v.TargetDatabaseObjectCount
	}).(pulumi.Float64MapOutput)
}

// List of errors that happened while performing schema compare validation
func (o SchemaComparisonValidationResultResponseOutput) ValidationErrors() ValidationErrorResponseOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultResponse) ValidationErrorResponse { return v.ValidationErrors }).(ValidationErrorResponseOutput)
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeInvokeResponse struct {
	// Name of the object that has the difference
	ObjectName string `pulumi:"objectName"`
	// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
	ObjectType string `pulumi:"objectType"`
	// Update action type with respect to target
	UpdateAction string `pulumi:"updateAction"`
}

// SchemaComparisonValidationResultTypeInvokeResponseInput is an input type that accepts SchemaComparisonValidationResultTypeInvokeResponseArgs and SchemaComparisonValidationResultTypeInvokeResponseOutput values.
// You can construct a concrete instance of `SchemaComparisonValidationResultTypeInvokeResponseInput` via:
//
//          SchemaComparisonValidationResultTypeInvokeResponseArgs{...}
type SchemaComparisonValidationResultTypeInvokeResponseInput interface {
	pulumi.Input

	ToSchemaComparisonValidationResultTypeInvokeResponseOutput() SchemaComparisonValidationResultTypeInvokeResponseOutput
	ToSchemaComparisonValidationResultTypeInvokeResponseOutputWithContext(context.Context) SchemaComparisonValidationResultTypeInvokeResponseOutput
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeInvokeResponseArgs struct {
	// Name of the object that has the difference
	ObjectName pulumi.StringInput `pulumi:"objectName"`
	// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Update action type with respect to target
	UpdateAction pulumi.StringInput `pulumi:"updateAction"`
}

func (SchemaComparisonValidationResultTypeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultTypeInvokeResponse)(nil)).Elem()
}

func (i SchemaComparisonValidationResultTypeInvokeResponseArgs) ToSchemaComparisonValidationResultTypeInvokeResponseOutput() SchemaComparisonValidationResultTypeInvokeResponseOutput {
	return i.ToSchemaComparisonValidationResultTypeInvokeResponseOutputWithContext(context.Background())
}

func (i SchemaComparisonValidationResultTypeInvokeResponseArgs) ToSchemaComparisonValidationResultTypeInvokeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultTypeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaComparisonValidationResultTypeInvokeResponseOutput)
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeInvokeResponseOutput struct{ *pulumi.OutputState }

func (SchemaComparisonValidationResultTypeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultTypeInvokeResponse)(nil)).Elem()
}

func (o SchemaComparisonValidationResultTypeInvokeResponseOutput) ToSchemaComparisonValidationResultTypeInvokeResponseOutput() SchemaComparisonValidationResultTypeInvokeResponseOutput {
	return o
}

func (o SchemaComparisonValidationResultTypeInvokeResponseOutput) ToSchemaComparisonValidationResultTypeInvokeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultTypeInvokeResponseOutput {
	return o
}

// Name of the object that has the difference
func (o SchemaComparisonValidationResultTypeInvokeResponseOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeInvokeResponse) string { return v.ObjectName }).(pulumi.StringOutput)
}

// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
func (o SchemaComparisonValidationResultTypeInvokeResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeInvokeResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Update action type with respect to target
func (o SchemaComparisonValidationResultTypeInvokeResponseOutput) UpdateAction() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeInvokeResponse) string { return v.UpdateAction }).(pulumi.StringOutput)
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeResponse struct {
	// Name of the object that has the difference
	ObjectName string `pulumi:"objectName"`
	// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
	ObjectType string `pulumi:"objectType"`
	// Update action type with respect to target
	UpdateAction string `pulumi:"updateAction"`
}

// SchemaComparisonValidationResultTypeResponseInput is an input type that accepts SchemaComparisonValidationResultTypeResponseArgs and SchemaComparisonValidationResultTypeResponseOutput values.
// You can construct a concrete instance of `SchemaComparisonValidationResultTypeResponseInput` via:
//
//          SchemaComparisonValidationResultTypeResponseArgs{...}
type SchemaComparisonValidationResultTypeResponseInput interface {
	pulumi.Input

	ToSchemaComparisonValidationResultTypeResponseOutput() SchemaComparisonValidationResultTypeResponseOutput
	ToSchemaComparisonValidationResultTypeResponseOutputWithContext(context.Context) SchemaComparisonValidationResultTypeResponseOutput
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeResponseArgs struct {
	// Name of the object that has the difference
	ObjectName pulumi.StringInput `pulumi:"objectName"`
	// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
	ObjectType pulumi.StringInput `pulumi:"objectType"`
	// Update action type with respect to target
	UpdateAction pulumi.StringInput `pulumi:"updateAction"`
}

func (SchemaComparisonValidationResultTypeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultTypeResponse)(nil)).Elem()
}

func (i SchemaComparisonValidationResultTypeResponseArgs) ToSchemaComparisonValidationResultTypeResponseOutput() SchemaComparisonValidationResultTypeResponseOutput {
	return i.ToSchemaComparisonValidationResultTypeResponseOutputWithContext(context.Background())
}

func (i SchemaComparisonValidationResultTypeResponseArgs) ToSchemaComparisonValidationResultTypeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultTypeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaComparisonValidationResultTypeResponseOutput)
}

// Description about the errors happen while performing migration validation
type SchemaComparisonValidationResultTypeResponseOutput struct{ *pulumi.OutputState }

func (SchemaComparisonValidationResultTypeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaComparisonValidationResultTypeResponse)(nil)).Elem()
}

func (o SchemaComparisonValidationResultTypeResponseOutput) ToSchemaComparisonValidationResultTypeResponseOutput() SchemaComparisonValidationResultTypeResponseOutput {
	return o
}

func (o SchemaComparisonValidationResultTypeResponseOutput) ToSchemaComparisonValidationResultTypeResponseOutputWithContext(ctx context.Context) SchemaComparisonValidationResultTypeResponseOutput {
	return o
}

// Name of the object that has the difference
func (o SchemaComparisonValidationResultTypeResponseOutput) ObjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeResponse) string { return v.ObjectName }).(pulumi.StringOutput)
}

// Type of the object that has the difference. e.g (Table/View/StoredProcedure)
func (o SchemaComparisonValidationResultTypeResponseOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeResponse) string { return v.ObjectType }).(pulumi.StringOutput)
}

// Update action type with respect to target
func (o SchemaComparisonValidationResultTypeResponseOutput) UpdateAction() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaComparisonValidationResultTypeResponse) string { return v.UpdateAction }).(pulumi.StringOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInput struct {
	// Name of certificate to be exported.
	CertificateName string `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password string `pulumi:"password"`
}

// SelectedCertificateInputInput is an input type that accepts SelectedCertificateInputArgs and SelectedCertificateInputOutput values.
// You can construct a concrete instance of `SelectedCertificateInputInput` via:
//
//          SelectedCertificateInputArgs{...}
type SelectedCertificateInputInput interface {
	pulumi.Input

	ToSelectedCertificateInputOutput() SelectedCertificateInputOutput
	ToSelectedCertificateInputOutputWithContext(context.Context) SelectedCertificateInputOutput
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputArgs struct {
	// Name of certificate to be exported.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password pulumi.StringInput `pulumi:"password"`
}

func (SelectedCertificateInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInput)(nil)).Elem()
}

func (i SelectedCertificateInputArgs) ToSelectedCertificateInputOutput() SelectedCertificateInputOutput {
	return i.ToSelectedCertificateInputOutputWithContext(context.Background())
}

func (i SelectedCertificateInputArgs) ToSelectedCertificateInputOutputWithContext(ctx context.Context) SelectedCertificateInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputOutput)
}

// SelectedCertificateInputArrayInput is an input type that accepts SelectedCertificateInputArray and SelectedCertificateInputArrayOutput values.
// You can construct a concrete instance of `SelectedCertificateInputArrayInput` via:
//
//          SelectedCertificateInputArray{ SelectedCertificateInputArgs{...} }
type SelectedCertificateInputArrayInput interface {
	pulumi.Input

	ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput
	ToSelectedCertificateInputArrayOutputWithContext(context.Context) SelectedCertificateInputArrayOutput
}

type SelectedCertificateInputArray []SelectedCertificateInputInput

func (SelectedCertificateInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInput)(nil)).Elem()
}

func (i SelectedCertificateInputArray) ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput {
	return i.ToSelectedCertificateInputArrayOutputWithContext(context.Background())
}

func (i SelectedCertificateInputArray) ToSelectedCertificateInputArrayOutputWithContext(ctx context.Context) SelectedCertificateInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputArrayOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInput)(nil)).Elem()
}

func (o SelectedCertificateInputOutput) ToSelectedCertificateInputOutput() SelectedCertificateInputOutput {
	return o
}

func (o SelectedCertificateInputOutput) ToSelectedCertificateInputOutputWithContext(ctx context.Context) SelectedCertificateInputOutput {
	return o
}

// Name of certificate to be exported.
func (o SelectedCertificateInputOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInput) string { return v.CertificateName }).(pulumi.StringOutput)
}

// Password to use for encrypting the exported certificate.
func (o SelectedCertificateInputOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInput) string { return v.Password }).(pulumi.StringOutput)
}

type SelectedCertificateInputArrayOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInput)(nil)).Elem()
}

func (o SelectedCertificateInputArrayOutput) ToSelectedCertificateInputArrayOutput() SelectedCertificateInputArrayOutput {
	return o
}

func (o SelectedCertificateInputArrayOutput) ToSelectedCertificateInputArrayOutputWithContext(ctx context.Context) SelectedCertificateInputArrayOutput {
	return o
}

func (o SelectedCertificateInputArrayOutput) Index(i pulumi.IntInput) SelectedCertificateInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelectedCertificateInput {
		return vs[0].([]SelectedCertificateInput)[vs[1].(int)]
	}).(SelectedCertificateInputOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputInvokeResponse struct {
	// Name of certificate to be exported.
	CertificateName string `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password string `pulumi:"password"`
}

// SelectedCertificateInputInvokeResponseInput is an input type that accepts SelectedCertificateInputInvokeResponseArgs and SelectedCertificateInputInvokeResponseOutput values.
// You can construct a concrete instance of `SelectedCertificateInputInvokeResponseInput` via:
//
//          SelectedCertificateInputInvokeResponseArgs{...}
type SelectedCertificateInputInvokeResponseInput interface {
	pulumi.Input

	ToSelectedCertificateInputInvokeResponseOutput() SelectedCertificateInputInvokeResponseOutput
	ToSelectedCertificateInputInvokeResponseOutputWithContext(context.Context) SelectedCertificateInputInvokeResponseOutput
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputInvokeResponseArgs struct {
	// Name of certificate to be exported.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password pulumi.StringInput `pulumi:"password"`
}

func (SelectedCertificateInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputInvokeResponse)(nil)).Elem()
}

func (i SelectedCertificateInputInvokeResponseArgs) ToSelectedCertificateInputInvokeResponseOutput() SelectedCertificateInputInvokeResponseOutput {
	return i.ToSelectedCertificateInputInvokeResponseOutputWithContext(context.Background())
}

func (i SelectedCertificateInputInvokeResponseArgs) ToSelectedCertificateInputInvokeResponseOutputWithContext(ctx context.Context) SelectedCertificateInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputInvokeResponseOutput)
}

// SelectedCertificateInputInvokeResponseArrayInput is an input type that accepts SelectedCertificateInputInvokeResponseArray and SelectedCertificateInputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SelectedCertificateInputInvokeResponseArrayInput` via:
//
//          SelectedCertificateInputInvokeResponseArray{ SelectedCertificateInputInvokeResponseArgs{...} }
type SelectedCertificateInputInvokeResponseArrayInput interface {
	pulumi.Input

	ToSelectedCertificateInputInvokeResponseArrayOutput() SelectedCertificateInputInvokeResponseArrayOutput
	ToSelectedCertificateInputInvokeResponseArrayOutputWithContext(context.Context) SelectedCertificateInputInvokeResponseArrayOutput
}

type SelectedCertificateInputInvokeResponseArray []SelectedCertificateInputInvokeResponseInput

func (SelectedCertificateInputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputInvokeResponse)(nil)).Elem()
}

func (i SelectedCertificateInputInvokeResponseArray) ToSelectedCertificateInputInvokeResponseArrayOutput() SelectedCertificateInputInvokeResponseArrayOutput {
	return i.ToSelectedCertificateInputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SelectedCertificateInputInvokeResponseArray) ToSelectedCertificateInputInvokeResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputInvokeResponseArrayOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputInvokeResponse)(nil)).Elem()
}

func (o SelectedCertificateInputInvokeResponseOutput) ToSelectedCertificateInputInvokeResponseOutput() SelectedCertificateInputInvokeResponseOutput {
	return o
}

func (o SelectedCertificateInputInvokeResponseOutput) ToSelectedCertificateInputInvokeResponseOutputWithContext(ctx context.Context) SelectedCertificateInputInvokeResponseOutput {
	return o
}

// Name of certificate to be exported.
func (o SelectedCertificateInputInvokeResponseOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputInvokeResponse) string { return v.CertificateName }).(pulumi.StringOutput)
}

// Password to use for encrypting the exported certificate.
func (o SelectedCertificateInputInvokeResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputInvokeResponse) string { return v.Password }).(pulumi.StringOutput)
}

type SelectedCertificateInputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputInvokeResponse)(nil)).Elem()
}

func (o SelectedCertificateInputInvokeResponseArrayOutput) ToSelectedCertificateInputInvokeResponseArrayOutput() SelectedCertificateInputInvokeResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputInvokeResponseArrayOutput) ToSelectedCertificateInputInvokeResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputInvokeResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputInvokeResponseArrayOutput) Index(i pulumi.IntInput) SelectedCertificateInputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelectedCertificateInputInvokeResponse {
		return vs[0].([]SelectedCertificateInputInvokeResponse)[vs[1].(int)]
	}).(SelectedCertificateInputInvokeResponseOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputResponse struct {
	// Name of certificate to be exported.
	CertificateName string `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password string `pulumi:"password"`
}

// SelectedCertificateInputResponseInput is an input type that accepts SelectedCertificateInputResponseArgs and SelectedCertificateInputResponseOutput values.
// You can construct a concrete instance of `SelectedCertificateInputResponseInput` via:
//
//          SelectedCertificateInputResponseArgs{...}
type SelectedCertificateInputResponseInput interface {
	pulumi.Input

	ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput
	ToSelectedCertificateInputResponseOutputWithContext(context.Context) SelectedCertificateInputResponseOutput
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputResponseArgs struct {
	// Name of certificate to be exported.
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	// Password to use for encrypting the exported certificate.
	Password pulumi.StringInput `pulumi:"password"`
}

func (SelectedCertificateInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputResponse)(nil)).Elem()
}

func (i SelectedCertificateInputResponseArgs) ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput {
	return i.ToSelectedCertificateInputResponseOutputWithContext(context.Background())
}

func (i SelectedCertificateInputResponseArgs) ToSelectedCertificateInputResponseOutputWithContext(ctx context.Context) SelectedCertificateInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputResponseOutput)
}

// SelectedCertificateInputResponseArrayInput is an input type that accepts SelectedCertificateInputResponseArray and SelectedCertificateInputResponseArrayOutput values.
// You can construct a concrete instance of `SelectedCertificateInputResponseArrayInput` via:
//
//          SelectedCertificateInputResponseArray{ SelectedCertificateInputResponseArgs{...} }
type SelectedCertificateInputResponseArrayInput interface {
	pulumi.Input

	ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput
	ToSelectedCertificateInputResponseArrayOutputWithContext(context.Context) SelectedCertificateInputResponseArrayOutput
}

type SelectedCertificateInputResponseArray []SelectedCertificateInputResponseInput

func (SelectedCertificateInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputResponse)(nil)).Elem()
}

func (i SelectedCertificateInputResponseArray) ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput {
	return i.ToSelectedCertificateInputResponseArrayOutputWithContext(context.Background())
}

func (i SelectedCertificateInputResponseArray) ToSelectedCertificateInputResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SelectedCertificateInputResponseArrayOutput)
}

// Info for certificate to be exported for TDE enabled databases.
type SelectedCertificateInputResponseOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SelectedCertificateInputResponse)(nil)).Elem()
}

func (o SelectedCertificateInputResponseOutput) ToSelectedCertificateInputResponseOutput() SelectedCertificateInputResponseOutput {
	return o
}

func (o SelectedCertificateInputResponseOutput) ToSelectedCertificateInputResponseOutputWithContext(ctx context.Context) SelectedCertificateInputResponseOutput {
	return o
}

// Name of certificate to be exported.
func (o SelectedCertificateInputResponseOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputResponse) string { return v.CertificateName }).(pulumi.StringOutput)
}

// Password to use for encrypting the exported certificate.
func (o SelectedCertificateInputResponseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SelectedCertificateInputResponse) string { return v.Password }).(pulumi.StringOutput)
}

type SelectedCertificateInputResponseArrayOutput struct{ *pulumi.OutputState }

func (SelectedCertificateInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SelectedCertificateInputResponse)(nil)).Elem()
}

func (o SelectedCertificateInputResponseArrayOutput) ToSelectedCertificateInputResponseArrayOutput() SelectedCertificateInputResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputResponseArrayOutput) ToSelectedCertificateInputResponseArrayOutputWithContext(ctx context.Context) SelectedCertificateInputResponseArrayOutput {
	return o
}

func (o SelectedCertificateInputResponseArrayOutput) Index(i pulumi.IntInput) SelectedCertificateInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SelectedCertificateInputResponse {
		return vs[0].([]SelectedCertificateInputResponse)[vs[1].(int)]
	}).(SelectedCertificateInputResponseOutput)
}

// An Azure SKU instance
type ServiceSku struct {
	// The capacity of the SKU, if it supports scaling
	Capacity *int `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family *string `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name *string `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size *string `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier *string `pulumi:"tier"`
}

// ServiceSkuInput is an input type that accepts ServiceSkuArgs and ServiceSkuOutput values.
// You can construct a concrete instance of `ServiceSkuInput` via:
//
//          ServiceSkuArgs{...}
type ServiceSkuInput interface {
	pulumi.Input

	ToServiceSkuOutput() ServiceSkuOutput
	ToServiceSkuOutputWithContext(context.Context) ServiceSkuOutput
}

// An Azure SKU instance
type ServiceSkuArgs struct {
	// The capacity of the SKU, if it supports scaling
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ServiceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (i ServiceSkuArgs) ToServiceSkuOutput() ServiceSkuOutput {
	return i.ToServiceSkuOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput)
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput).ToServiceSkuPtrOutputWithContext(ctx)
}

// ServiceSkuPtrInput is an input type that accepts ServiceSkuArgs, ServiceSkuPtr and ServiceSkuPtrOutput values.
// You can construct a concrete instance of `ServiceSkuPtrInput` via:
//
//          ServiceSkuArgs{...}
//
//  or:
//
//          nil
type ServiceSkuPtrInput interface {
	pulumi.Input

	ToServiceSkuPtrOutput() ServiceSkuPtrOutput
	ToServiceSkuPtrOutputWithContext(context.Context) ServiceSkuPtrOutput
}

type serviceSkuPtrType ServiceSkuArgs

func ServiceSkuPtr(v *ServiceSkuArgs) ServiceSkuPtrInput {
	return (*serviceSkuPtrType)(v)
}

func (*serviceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuPtrOutput)
}

// An Azure SKU instance
type ServiceSkuOutput struct{ *pulumi.OutputState }

func (ServiceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (o ServiceSkuOutput) ToServiceSkuOutput() ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o.ApplyT(func(v ServiceSku) *ServiceSku {
		return &v
	}).(ServiceSkuPtrOutput)
}

// The capacity of the SKU, if it supports scaling
func (o ServiceSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
func (o ServiceSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The unique name of the SKU, such as 'P3'
func (o ServiceSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
func (o ServiceSkuOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
func (o ServiceSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ServiceSkuPtrOutput struct{ *pulumi.OutputState }

func (ServiceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) Elem() ServiceSkuOutput {
	return o.ApplyT(func(v *ServiceSku) ServiceSku { return *v }).(ServiceSkuOutput)
}

// The capacity of the SKU, if it supports scaling
func (o ServiceSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
func (o ServiceSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The unique name of the SKU, such as 'P3'
func (o ServiceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
func (o ServiceSkuPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
func (o ServiceSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// An Azure SKU instance
type ServiceSkuInvokeResponse struct {
	// The capacity of the SKU, if it supports scaling
	Capacity *int `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family *string `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name *string `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size *string `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier *string `pulumi:"tier"`
}

// ServiceSkuInvokeResponseInput is an input type that accepts ServiceSkuInvokeResponseArgs and ServiceSkuInvokeResponseOutput values.
// You can construct a concrete instance of `ServiceSkuInvokeResponseInput` via:
//
//          ServiceSkuInvokeResponseArgs{...}
type ServiceSkuInvokeResponseInput interface {
	pulumi.Input

	ToServiceSkuInvokeResponseOutput() ServiceSkuInvokeResponseOutput
	ToServiceSkuInvokeResponseOutputWithContext(context.Context) ServiceSkuInvokeResponseOutput
}

// An Azure SKU instance
type ServiceSkuInvokeResponseArgs struct {
	// The capacity of the SKU, if it supports scaling
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ServiceSkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuInvokeResponse)(nil)).Elem()
}

func (i ServiceSkuInvokeResponseArgs) ToServiceSkuInvokeResponseOutput() ServiceSkuInvokeResponseOutput {
	return i.ToServiceSkuInvokeResponseOutputWithContext(context.Background())
}

func (i ServiceSkuInvokeResponseArgs) ToServiceSkuInvokeResponseOutputWithContext(ctx context.Context) ServiceSkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuInvokeResponseOutput)
}

// An Azure SKU instance
type ServiceSkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (ServiceSkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuInvokeResponse)(nil)).Elem()
}

func (o ServiceSkuInvokeResponseOutput) ToServiceSkuInvokeResponseOutput() ServiceSkuInvokeResponseOutput {
	return o
}

func (o ServiceSkuInvokeResponseOutput) ToServiceSkuInvokeResponseOutputWithContext(ctx context.Context) ServiceSkuInvokeResponseOutput {
	return o
}

// The capacity of the SKU, if it supports scaling
func (o ServiceSkuInvokeResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceSkuInvokeResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
func (o ServiceSkuInvokeResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuInvokeResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The unique name of the SKU, such as 'P3'
func (o ServiceSkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
func (o ServiceSkuInvokeResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuInvokeResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
func (o ServiceSkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// An Azure SKU instance
type ServiceSkuResponse struct {
	// The capacity of the SKU, if it supports scaling
	Capacity *int `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family *string `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name *string `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size *string `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier *string `pulumi:"tier"`
}

// ServiceSkuResponseInput is an input type that accepts ServiceSkuResponseArgs and ServiceSkuResponseOutput values.
// You can construct a concrete instance of `ServiceSkuResponseInput` via:
//
//          ServiceSkuResponseArgs{...}
type ServiceSkuResponseInput interface {
	pulumi.Input

	ToServiceSkuResponseOutput() ServiceSkuResponseOutput
	ToServiceSkuResponseOutputWithContext(context.Context) ServiceSkuResponseOutput
}

// An Azure SKU instance
type ServiceSkuResponseArgs struct {
	// The capacity of the SKU, if it supports scaling
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The unique name of the SKU, such as 'P3'
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
	Size pulumi.StringPtrInput `pulumi:"size"`
	// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ServiceSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuResponse)(nil)).Elem()
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponseOutput() ServiceSkuResponseOutput {
	return i.ToServiceSkuResponseOutputWithContext(context.Background())
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponseOutputWithContext(ctx context.Context) ServiceSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponseOutput)
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return i.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (i ServiceSkuResponseArgs) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponseOutput).ToServiceSkuResponsePtrOutputWithContext(ctx)
}

// ServiceSkuResponsePtrInput is an input type that accepts ServiceSkuResponseArgs, ServiceSkuResponsePtr and ServiceSkuResponsePtrOutput values.
// You can construct a concrete instance of `ServiceSkuResponsePtrInput` via:
//
//          ServiceSkuResponseArgs{...}
//
//  or:
//
//          nil
type ServiceSkuResponsePtrInput interface {
	pulumi.Input

	ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput
	ToServiceSkuResponsePtrOutputWithContext(context.Context) ServiceSkuResponsePtrOutput
}

type serviceSkuResponsePtrType ServiceSkuResponseArgs

func ServiceSkuResponsePtr(v *ServiceSkuResponseArgs) ServiceSkuResponsePtrInput {
	return (*serviceSkuResponsePtrType)(v)
}

func (*serviceSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSkuResponse)(nil)).Elem()
}

func (i *serviceSkuResponsePtrType) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return i.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (i *serviceSkuResponsePtrType) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuResponsePtrOutput)
}

// An Azure SKU instance
type ServiceSkuResponseOutput struct{ *pulumi.OutputState }

func (ServiceSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSkuResponse)(nil)).Elem()
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponseOutput() ServiceSkuResponseOutput {
	return o
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponseOutputWithContext(ctx context.Context) ServiceSkuResponseOutput {
	return o
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return o.ToServiceSkuResponsePtrOutputWithContext(context.Background())
}

func (o ServiceSkuResponseOutput) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *ServiceSkuResponse {
		return &v
	}).(ServiceSkuResponsePtrOutput)
}

// The capacity of the SKU, if it supports scaling
func (o ServiceSkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
func (o ServiceSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The unique name of the SKU, such as 'P3'
func (o ServiceSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
func (o ServiceSkuResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
func (o ServiceSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ServiceSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSkuResponse)(nil)).Elem()
}

func (o ServiceSkuResponsePtrOutput) ToServiceSkuResponsePtrOutput() ServiceSkuResponsePtrOutput {
	return o
}

func (o ServiceSkuResponsePtrOutput) ToServiceSkuResponsePtrOutputWithContext(ctx context.Context) ServiceSkuResponsePtrOutput {
	return o
}

func (o ServiceSkuResponsePtrOutput) Elem() ServiceSkuResponseOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) ServiceSkuResponse { return *v }).(ServiceSkuResponseOutput)
}

// The capacity of the SKU, if it supports scaling
func (o ServiceSkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
func (o ServiceSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The unique name of the SKU, such as 'P3'
func (o ServiceSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
func (o ServiceSkuResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
func (o ServiceSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfo struct {
	// Additional connection settings
	AdditionalSettings *string `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication *string `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource string `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection *bool `pulumi:"encryptConnection"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Server platform type for connection
	Platform *string `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate *bool `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// SqlConnectionInfoInput is an input type that accepts SqlConnectionInfoArgs and SqlConnectionInfoOutput values.
// You can construct a concrete instance of `SqlConnectionInfoInput` via:
//
//          SqlConnectionInfoArgs{...}
type SqlConnectionInfoInput interface {
	pulumi.Input

	ToSqlConnectionInfoOutput() SqlConnectionInfoOutput
	ToSqlConnectionInfoOutputWithContext(context.Context) SqlConnectionInfoOutput
}

// Information for connecting to SQL database server
type SqlConnectionInfoArgs struct {
	// Additional connection settings
	AdditionalSettings pulumi.StringPtrInput `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection pulumi.BoolPtrInput `pulumi:"encryptConnection"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Server platform type for connection
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate pulumi.BoolPtrInput `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (SqlConnectionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfo)(nil)).Elem()
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoOutput() SqlConnectionInfoOutput {
	return i.ToSqlConnectionInfoOutputWithContext(context.Background())
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoOutputWithContext(ctx context.Context) SqlConnectionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoOutput)
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return i.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i SqlConnectionInfoArgs) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoOutput).ToSqlConnectionInfoPtrOutputWithContext(ctx)
}

// SqlConnectionInfoPtrInput is an input type that accepts SqlConnectionInfoArgs, SqlConnectionInfoPtr and SqlConnectionInfoPtrOutput values.
// You can construct a concrete instance of `SqlConnectionInfoPtrInput` via:
//
//          SqlConnectionInfoArgs{...}
//
//  or:
//
//          nil
type SqlConnectionInfoPtrInput interface {
	pulumi.Input

	ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput
	ToSqlConnectionInfoPtrOutputWithContext(context.Context) SqlConnectionInfoPtrOutput
}

type sqlConnectionInfoPtrType SqlConnectionInfoArgs

func SqlConnectionInfoPtr(v *SqlConnectionInfoArgs) SqlConnectionInfoPtrInput {
	return (*sqlConnectionInfoPtrType)(v)
}

func (*sqlConnectionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfo)(nil)).Elem()
}

func (i *sqlConnectionInfoPtrType) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return i.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (i *sqlConnectionInfoPtrType) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfoOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfo)(nil)).Elem()
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoOutput() SqlConnectionInfoOutput {
	return o
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoOutputWithContext(ctx context.Context) SqlConnectionInfoOutput {
	return o
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return o.ToSqlConnectionInfoPtrOutputWithContext(context.Background())
}

func (o SqlConnectionInfoOutput) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *SqlConnectionInfo {
		return &v
	}).(SqlConnectionInfoPtrOutput)
}

// Additional connection settings
func (o SqlConnectionInfoOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.AdditionalSettings }).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfo) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfo) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o SqlConnectionInfoOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfo) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoPtrOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfo)(nil)).Elem()
}

func (o SqlConnectionInfoPtrOutput) ToSqlConnectionInfoPtrOutput() SqlConnectionInfoPtrOutput {
	return o
}

func (o SqlConnectionInfoPtrOutput) ToSqlConnectionInfoPtrOutputWithContext(ctx context.Context) SqlConnectionInfoPtrOutput {
	return o
}

func (o SqlConnectionInfoPtrOutput) Elem() SqlConnectionInfoOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) SqlConnectionInfo { return *v }).(SqlConnectionInfoOutput)
}

// Additional connection settings
func (o SqlConnectionInfoPtrOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalSettings
	}).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoPtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoPtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoPtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoPtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o SqlConnectionInfoPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfoInvokeResponse struct {
	// Additional connection settings
	AdditionalSettings *string `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication *string `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource string `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection *bool `pulumi:"encryptConnection"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Server platform type for connection
	Platform *string `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate *bool `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// SqlConnectionInfoInvokeResponseInput is an input type that accepts SqlConnectionInfoInvokeResponseArgs and SqlConnectionInfoInvokeResponseOutput values.
// You can construct a concrete instance of `SqlConnectionInfoInvokeResponseInput` via:
//
//          SqlConnectionInfoInvokeResponseArgs{...}
type SqlConnectionInfoInvokeResponseInput interface {
	pulumi.Input

	ToSqlConnectionInfoInvokeResponseOutput() SqlConnectionInfoInvokeResponseOutput
	ToSqlConnectionInfoInvokeResponseOutputWithContext(context.Context) SqlConnectionInfoInvokeResponseOutput
}

// Information for connecting to SQL database server
type SqlConnectionInfoInvokeResponseArgs struct {
	// Additional connection settings
	AdditionalSettings pulumi.StringPtrInput `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection pulumi.BoolPtrInput `pulumi:"encryptConnection"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Server platform type for connection
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate pulumi.BoolPtrInput `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (SqlConnectionInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i SqlConnectionInfoInvokeResponseArgs) ToSqlConnectionInfoInvokeResponseOutput() SqlConnectionInfoInvokeResponseOutput {
	return i.ToSqlConnectionInfoInvokeResponseOutputWithContext(context.Background())
}

func (i SqlConnectionInfoInvokeResponseArgs) ToSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoInvokeResponseOutput)
}

func (i SqlConnectionInfoInvokeResponseArgs) ToSqlConnectionInfoInvokeResponsePtrOutput() SqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SqlConnectionInfoInvokeResponseArgs) ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoInvokeResponseOutput).ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx)
}

// SqlConnectionInfoInvokeResponsePtrInput is an input type that accepts SqlConnectionInfoInvokeResponseArgs, SqlConnectionInfoInvokeResponsePtr and SqlConnectionInfoInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SqlConnectionInfoInvokeResponsePtrInput` via:
//
//          SqlConnectionInfoInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SqlConnectionInfoInvokeResponsePtrInput interface {
	pulumi.Input

	ToSqlConnectionInfoInvokeResponsePtrOutput() SqlConnectionInfoInvokeResponsePtrOutput
	ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Context) SqlConnectionInfoInvokeResponsePtrOutput
}

type sqlConnectionInfoInvokeResponsePtrType SqlConnectionInfoInvokeResponseArgs

func SqlConnectionInfoInvokeResponsePtr(v *SqlConnectionInfoInvokeResponseArgs) SqlConnectionInfoInvokeResponsePtrInput {
	return (*sqlConnectionInfoInvokeResponsePtrType)(v)
}

func (*sqlConnectionInfoInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (i *sqlConnectionInfoInvokeResponsePtrType) ToSqlConnectionInfoInvokeResponsePtrOutput() SqlConnectionInfoInvokeResponsePtrOutput {
	return i.ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *sqlConnectionInfoInvokeResponsePtrType) ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o SqlConnectionInfoInvokeResponseOutput) ToSqlConnectionInfoInvokeResponseOutput() SqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o SqlConnectionInfoInvokeResponseOutput) ToSqlConnectionInfoInvokeResponseOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponseOutput {
	return o
}

func (o SqlConnectionInfoInvokeResponseOutput) ToSqlConnectionInfoInvokeResponsePtrOutput() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SqlConnectionInfoInvokeResponseOutput) ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *SqlConnectionInfoInvokeResponse {
		return &v
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Additional connection settings
func (o SqlConnectionInfoInvokeResponseOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *string { return v.AdditionalSettings }).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoInvokeResponseOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoInvokeResponseOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoInvokeResponseOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoInvokeResponseOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoInvokeResponseOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o SqlConnectionInfoInvokeResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoInvokeResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoInvokeResponse)(nil)).Elem()
}

func (o SqlConnectionInfoInvokeResponsePtrOutput) ToSqlConnectionInfoInvokeResponsePtrOutput() SqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoInvokeResponsePtrOutput) ToSqlConnectionInfoInvokeResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoInvokeResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoInvokeResponsePtrOutput) Elem() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) SqlConnectionInfoInvokeResponse { return *v }).(SqlConnectionInfoInvokeResponseOutput)
}

// Additional connection settings
func (o SqlConnectionInfoInvokeResponsePtrOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalSettings
	}).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoInvokeResponsePtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoInvokeResponsePtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoInvokeResponsePtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoInvokeResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoInvokeResponsePtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoInvokeResponsePtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o SqlConnectionInfoInvokeResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfoResponse struct {
	// Additional connection settings
	AdditionalSettings *string `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication *string `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource string `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection *bool `pulumi:"encryptConnection"`
	// Password credential.
	Password *string `pulumi:"password"`
	// Server platform type for connection
	Platform *string `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate *bool `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type string `pulumi:"type"`
	// User name
	UserName *string `pulumi:"userName"`
}

// SqlConnectionInfoResponseInput is an input type that accepts SqlConnectionInfoResponseArgs and SqlConnectionInfoResponseOutput values.
// You can construct a concrete instance of `SqlConnectionInfoResponseInput` via:
//
//          SqlConnectionInfoResponseArgs{...}
type SqlConnectionInfoResponseInput interface {
	pulumi.Input

	ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput
	ToSqlConnectionInfoResponseOutputWithContext(context.Context) SqlConnectionInfoResponseOutput
}

// Information for connecting to SQL database server
type SqlConnectionInfoResponseArgs struct {
	// Additional connection settings
	AdditionalSettings pulumi.StringPtrInput `pulumi:"additionalSettings"`
	// Authentication type to use for connection
	Authentication pulumi.StringPtrInput `pulumi:"authentication"`
	// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to encrypt the connection
	EncryptConnection pulumi.BoolPtrInput `pulumi:"encryptConnection"`
	// Password credential.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Server platform type for connection
	Platform pulumi.StringPtrInput `pulumi:"platform"`
	// Whether to trust the server certificate
	TrustServerCertificate pulumi.BoolPtrInput `pulumi:"trustServerCertificate"`
	// Type of connection info
	// Expected value is 'SqlConnectionInfo'.
	Type pulumi.StringInput `pulumi:"type"`
	// User name
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (SqlConnectionInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoResponse)(nil)).Elem()
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput {
	return i.ToSqlConnectionInfoResponseOutputWithContext(context.Background())
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponseOutputWithContext(ctx context.Context) SqlConnectionInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponseOutput)
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return i.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i SqlConnectionInfoResponseArgs) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponseOutput).ToSqlConnectionInfoResponsePtrOutputWithContext(ctx)
}

// SqlConnectionInfoResponsePtrInput is an input type that accepts SqlConnectionInfoResponseArgs, SqlConnectionInfoResponsePtr and SqlConnectionInfoResponsePtrOutput values.
// You can construct a concrete instance of `SqlConnectionInfoResponsePtrInput` via:
//
//          SqlConnectionInfoResponseArgs{...}
//
//  or:
//
//          nil
type SqlConnectionInfoResponsePtrInput interface {
	pulumi.Input

	ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput
	ToSqlConnectionInfoResponsePtrOutputWithContext(context.Context) SqlConnectionInfoResponsePtrOutput
}

type sqlConnectionInfoResponsePtrType SqlConnectionInfoResponseArgs

func SqlConnectionInfoResponsePtr(v *SqlConnectionInfoResponseArgs) SqlConnectionInfoResponsePtrInput {
	return (*sqlConnectionInfoResponsePtrType)(v)
}

func (*sqlConnectionInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoResponse)(nil)).Elem()
}

func (i *sqlConnectionInfoResponsePtrType) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return i.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (i *sqlConnectionInfoResponsePtrType) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to SQL database server
type SqlConnectionInfoResponseOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectionInfoResponse)(nil)).Elem()
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponseOutput() SqlConnectionInfoResponseOutput {
	return o
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponseOutputWithContext(ctx context.Context) SqlConnectionInfoResponseOutput {
	return o
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return o.ToSqlConnectionInfoResponsePtrOutputWithContext(context.Background())
}

func (o SqlConnectionInfoResponseOutput) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *SqlConnectionInfoResponse {
		return &v
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Additional connection settings
func (o SqlConnectionInfoResponseOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.AdditionalSettings }).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoResponseOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoResponseOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoResponseOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *bool { return v.EncryptConnection }).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoResponseOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.Platform }).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoResponseOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *bool { return v.TrustServerCertificate }).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) string { return v.Type }).(pulumi.StringOutput)
}

// User name
func (o SqlConnectionInfoResponseOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectionInfoResponse) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type SqlConnectionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlConnectionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectionInfoResponse)(nil)).Elem()
}

func (o SqlConnectionInfoResponsePtrOutput) ToSqlConnectionInfoResponsePtrOutput() SqlConnectionInfoResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoResponsePtrOutput) ToSqlConnectionInfoResponsePtrOutputWithContext(ctx context.Context) SqlConnectionInfoResponsePtrOutput {
	return o
}

func (o SqlConnectionInfoResponsePtrOutput) Elem() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) SqlConnectionInfoResponse { return *v }).(SqlConnectionInfoResponseOutput)
}

// Additional connection settings
func (o SqlConnectionInfoResponsePtrOutput) AdditionalSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalSettings
	}).(pulumi.StringPtrOutput)
}

// Authentication type to use for connection
func (o SqlConnectionInfoResponsePtrOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Authentication
	}).(pulumi.StringPtrOutput)
}

// Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
func (o SqlConnectionInfoResponsePtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to encrypt the connection
func (o SqlConnectionInfoResponsePtrOutput) EncryptConnection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptConnection
	}).(pulumi.BoolPtrOutput)
}

// Password credential.
func (o SqlConnectionInfoResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Server platform type for connection
func (o SqlConnectionInfoResponsePtrOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

// Whether to trust the server certificate
func (o SqlConnectionInfoResponsePtrOutput) TrustServerCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *bool {
		if v == nil {
			return nil
		}
		return v.TrustServerCertificate
	}).(pulumi.BoolPtrOutput)
}

// Type of connection info
// Expected value is 'SqlConnectionInfo'.
func (o SqlConnectionInfoResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User name
func (o SqlConnectionInfoResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

// Server role migration result
type StartMigrationScenarioServerRoleResultInvokeResponse struct {
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionInvokeResponse `pulumi:"exceptionsAndWarnings"`
	// Name of server role.
	Name string `pulumi:"name"`
	// Current state of migration
	State string `pulumi:"state"`
}

// StartMigrationScenarioServerRoleResultInvokeResponseInput is an input type that accepts StartMigrationScenarioServerRoleResultInvokeResponseArgs and StartMigrationScenarioServerRoleResultInvokeResponseOutput values.
// You can construct a concrete instance of `StartMigrationScenarioServerRoleResultInvokeResponseInput` via:
//
//          StartMigrationScenarioServerRoleResultInvokeResponseArgs{...}
type StartMigrationScenarioServerRoleResultInvokeResponseInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultInvokeResponseOutput() StartMigrationScenarioServerRoleResultInvokeResponseOutput
	ToStartMigrationScenarioServerRoleResultInvokeResponseOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultInvokeResponseOutput
}

// Server role migration result
type StartMigrationScenarioServerRoleResultInvokeResponseArgs struct {
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionInvokeResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Name of server role.
	Name pulumi.StringInput `pulumi:"name"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (StartMigrationScenarioServerRoleResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultInvokeResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultInvokeResponseArgs) ToStartMigrationScenarioServerRoleResultInvokeResponseOutput() StartMigrationScenarioServerRoleResultInvokeResponseOutput {
	return i.ToStartMigrationScenarioServerRoleResultInvokeResponseOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultInvokeResponseArgs) ToStartMigrationScenarioServerRoleResultInvokeResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultInvokeResponseOutput)
}

// StartMigrationScenarioServerRoleResultInvokeResponseMapInput is an input type that accepts StartMigrationScenarioServerRoleResultInvokeResponseMap and StartMigrationScenarioServerRoleResultInvokeResponseMapOutput values.
// You can construct a concrete instance of `StartMigrationScenarioServerRoleResultInvokeResponseMapInput` via:
//
//          StartMigrationScenarioServerRoleResultInvokeResponseMap{ "key": StartMigrationScenarioServerRoleResultInvokeResponseArgs{...} }
type StartMigrationScenarioServerRoleResultInvokeResponseMapInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutput() StartMigrationScenarioServerRoleResultInvokeResponseMapOutput
	ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultInvokeResponseMapOutput
}

type StartMigrationScenarioServerRoleResultInvokeResponseMap map[string]StartMigrationScenarioServerRoleResultInvokeResponseInput

func (StartMigrationScenarioServerRoleResultInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultInvokeResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultInvokeResponseMap) ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutput() StartMigrationScenarioServerRoleResultInvokeResponseMapOutput {
	return i.ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultInvokeResponseMap) ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultInvokeResponseMapOutput)
}

// Server role migration result
type StartMigrationScenarioServerRoleResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultInvokeResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultInvokeResponseOutput) ToStartMigrationScenarioServerRoleResultInvokeResponseOutput() StartMigrationScenarioServerRoleResultInvokeResponseOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultInvokeResponseOutput) ToStartMigrationScenarioServerRoleResultInvokeResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultInvokeResponseOutput {
	return o
}

// Migration exceptions and warnings.
func (o StartMigrationScenarioServerRoleResultInvokeResponseOutput) ExceptionsAndWarnings() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Name of server role.
func (o StartMigrationScenarioServerRoleResultInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Current state of migration
func (o StartMigrationScenarioServerRoleResultInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

type StartMigrationScenarioServerRoleResultInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultInvokeResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultInvokeResponseMapOutput) ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutput() StartMigrationScenarioServerRoleResultInvokeResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultInvokeResponseMapOutput) ToStartMigrationScenarioServerRoleResultInvokeResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultInvokeResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) StartMigrationScenarioServerRoleResultInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StartMigrationScenarioServerRoleResultInvokeResponse {
		return vs[0].(map[string]StartMigrationScenarioServerRoleResultInvokeResponse)[vs[1].(string)]
	}).(StartMigrationScenarioServerRoleResultInvokeResponseOutput)
}

// Server role migration result
type StartMigrationScenarioServerRoleResultResponse struct {
	// Migration exceptions and warnings.
	ExceptionsAndWarnings []ReportableExceptionResponse `pulumi:"exceptionsAndWarnings"`
	// Name of server role.
	Name string `pulumi:"name"`
	// Current state of migration
	State string `pulumi:"state"`
}

// StartMigrationScenarioServerRoleResultResponseInput is an input type that accepts StartMigrationScenarioServerRoleResultResponseArgs and StartMigrationScenarioServerRoleResultResponseOutput values.
// You can construct a concrete instance of `StartMigrationScenarioServerRoleResultResponseInput` via:
//
//          StartMigrationScenarioServerRoleResultResponseArgs{...}
type StartMigrationScenarioServerRoleResultResponseInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput
	ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultResponseOutput
}

// Server role migration result
type StartMigrationScenarioServerRoleResultResponseArgs struct {
	// Migration exceptions and warnings.
	ExceptionsAndWarnings ReportableExceptionResponseArrayInput `pulumi:"exceptionsAndWarnings"`
	// Name of server role.
	Name pulumi.StringInput `pulumi:"name"`
	// Current state of migration
	State pulumi.StringInput `pulumi:"state"`
}

func (StartMigrationScenarioServerRoleResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultResponseArgs) ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput {
	return i.ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultResponseArgs) ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultResponseOutput)
}

// StartMigrationScenarioServerRoleResultResponseMapInput is an input type that accepts StartMigrationScenarioServerRoleResultResponseMap and StartMigrationScenarioServerRoleResultResponseMapOutput values.
// You can construct a concrete instance of `StartMigrationScenarioServerRoleResultResponseMapInput` via:
//
//          StartMigrationScenarioServerRoleResultResponseMap{ "key": StartMigrationScenarioServerRoleResultResponseArgs{...} }
type StartMigrationScenarioServerRoleResultResponseMapInput interface {
	pulumi.Input

	ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput
	ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput
}

type StartMigrationScenarioServerRoleResultResponseMap map[string]StartMigrationScenarioServerRoleResultResponseInput

func (StartMigrationScenarioServerRoleResultResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (i StartMigrationScenarioServerRoleResultResponseMap) ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return i.ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(context.Background())
}

func (i StartMigrationScenarioServerRoleResultResponseMap) ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StartMigrationScenarioServerRoleResultResponseMapOutput)
}

// Server role migration result
type StartMigrationScenarioServerRoleResultResponseOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) ToStartMigrationScenarioServerRoleResultResponseOutput() StartMigrationScenarioServerRoleResultResponseOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseOutput) ToStartMigrationScenarioServerRoleResultResponseOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseOutput {
	return o
}

// Migration exceptions and warnings.
func (o StartMigrationScenarioServerRoleResultResponseOutput) ExceptionsAndWarnings() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) []ReportableExceptionResponse {
		return v.ExceptionsAndWarnings
	}).(ReportableExceptionResponseArrayOutput)
}

// Name of server role.
func (o StartMigrationScenarioServerRoleResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Current state of migration
func (o StartMigrationScenarioServerRoleResultResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v StartMigrationScenarioServerRoleResultResponse) string { return v.State }).(pulumi.StringOutput)
}

type StartMigrationScenarioServerRoleResultResponseMapOutput struct{ *pulumi.OutputState }

func (StartMigrationScenarioServerRoleResultResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StartMigrationScenarioServerRoleResultResponse)(nil)).Elem()
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) ToStartMigrationScenarioServerRoleResultResponseMapOutput() StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) ToStartMigrationScenarioServerRoleResultResponseMapOutputWithContext(ctx context.Context) StartMigrationScenarioServerRoleResultResponseMapOutput {
	return o
}

func (o StartMigrationScenarioServerRoleResultResponseMapOutput) MapIndex(k pulumi.StringInput) StartMigrationScenarioServerRoleResultResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StartMigrationScenarioServerRoleResultResponse {
		return vs[0].(map[string]StartMigrationScenarioServerRoleResultResponse)[vs[1].(string)]
	}).(StartMigrationScenarioServerRoleResultResponseOutput)
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventInvokeResponse struct {
	// Event text.
	EventText string `pulumi:"eventText"`
	// Event type.
	EventTypeString string `pulumi:"eventTypeString"`
	// String value of timestamp.
	TimestampString string `pulumi:"timestampString"`
}

// SyncMigrationDatabaseErrorEventInvokeResponseInput is an input type that accepts SyncMigrationDatabaseErrorEventInvokeResponseArgs and SyncMigrationDatabaseErrorEventInvokeResponseOutput values.
// You can construct a concrete instance of `SyncMigrationDatabaseErrorEventInvokeResponseInput` via:
//
//          SyncMigrationDatabaseErrorEventInvokeResponseArgs{...}
type SyncMigrationDatabaseErrorEventInvokeResponseInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventInvokeResponseOutput() SyncMigrationDatabaseErrorEventInvokeResponseOutput
	ToSyncMigrationDatabaseErrorEventInvokeResponseOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventInvokeResponseOutput
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventInvokeResponseArgs struct {
	// Event text.
	EventText pulumi.StringInput `pulumi:"eventText"`
	// Event type.
	EventTypeString pulumi.StringInput `pulumi:"eventTypeString"`
	// String value of timestamp.
	TimestampString pulumi.StringInput `pulumi:"timestampString"`
}

func (SyncMigrationDatabaseErrorEventInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventInvokeResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventInvokeResponseArgs) ToSyncMigrationDatabaseErrorEventInvokeResponseOutput() SyncMigrationDatabaseErrorEventInvokeResponseOutput {
	return i.ToSyncMigrationDatabaseErrorEventInvokeResponseOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventInvokeResponseArgs) ToSyncMigrationDatabaseErrorEventInvokeResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventInvokeResponseOutput)
}

// SyncMigrationDatabaseErrorEventInvokeResponseArrayInput is an input type that accepts SyncMigrationDatabaseErrorEventInvokeResponseArray and SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SyncMigrationDatabaseErrorEventInvokeResponseArrayInput` via:
//
//          SyncMigrationDatabaseErrorEventInvokeResponseArray{ SyncMigrationDatabaseErrorEventInvokeResponseArgs{...} }
type SyncMigrationDatabaseErrorEventInvokeResponseArrayInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutput() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput
	ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput
}

type SyncMigrationDatabaseErrorEventInvokeResponseArray []SyncMigrationDatabaseErrorEventInvokeResponseInput

func (SyncMigrationDatabaseErrorEventInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventInvokeResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventInvokeResponseArray) ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutput() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return i.ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventInvokeResponseArray) ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput)
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventInvokeResponseOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventInvokeResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventInvokeResponseOutput) ToSyncMigrationDatabaseErrorEventInvokeResponseOutput() SyncMigrationDatabaseErrorEventInvokeResponseOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventInvokeResponseOutput) ToSyncMigrationDatabaseErrorEventInvokeResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventInvokeResponseOutput {
	return o
}

// Event text.
func (o SyncMigrationDatabaseErrorEventInvokeResponseOutput) EventText() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventInvokeResponse) string { return v.EventText }).(pulumi.StringOutput)
}

// Event type.
func (o SyncMigrationDatabaseErrorEventInvokeResponseOutput) EventTypeString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventInvokeResponse) string { return v.EventTypeString }).(pulumi.StringOutput)
}

// String value of timestamp.
func (o SyncMigrationDatabaseErrorEventInvokeResponseOutput) TimestampString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventInvokeResponse) string { return v.TimestampString }).(pulumi.StringOutput)
}

type SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventInvokeResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput) ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutput() SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput) ToSyncMigrationDatabaseErrorEventInvokeResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput) Index(i pulumi.IntInput) SyncMigrationDatabaseErrorEventInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyncMigrationDatabaseErrorEventInvokeResponse {
		return vs[0].([]SyncMigrationDatabaseErrorEventInvokeResponse)[vs[1].(int)]
	}).(SyncMigrationDatabaseErrorEventInvokeResponseOutput)
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventResponse struct {
	// Event text.
	EventText string `pulumi:"eventText"`
	// Event type.
	EventTypeString string `pulumi:"eventTypeString"`
	// String value of timestamp.
	TimestampString string `pulumi:"timestampString"`
}

// SyncMigrationDatabaseErrorEventResponseInput is an input type that accepts SyncMigrationDatabaseErrorEventResponseArgs and SyncMigrationDatabaseErrorEventResponseOutput values.
// You can construct a concrete instance of `SyncMigrationDatabaseErrorEventResponseInput` via:
//
//          SyncMigrationDatabaseErrorEventResponseArgs{...}
type SyncMigrationDatabaseErrorEventResponseInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput
	ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventResponseOutput
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventResponseArgs struct {
	// Event text.
	EventText pulumi.StringInput `pulumi:"eventText"`
	// Event type.
	EventTypeString pulumi.StringInput `pulumi:"eventTypeString"`
	// String value of timestamp.
	TimestampString pulumi.StringInput `pulumi:"timestampString"`
}

func (SyncMigrationDatabaseErrorEventResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventResponseArgs) ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput {
	return i.ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventResponseArgs) ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventResponseOutput)
}

// SyncMigrationDatabaseErrorEventResponseArrayInput is an input type that accepts SyncMigrationDatabaseErrorEventResponseArray and SyncMigrationDatabaseErrorEventResponseArrayOutput values.
// You can construct a concrete instance of `SyncMigrationDatabaseErrorEventResponseArrayInput` via:
//
//          SyncMigrationDatabaseErrorEventResponseArray{ SyncMigrationDatabaseErrorEventResponseArgs{...} }
type SyncMigrationDatabaseErrorEventResponseArrayInput interface {
	pulumi.Input

	ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput
	ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput
}

type SyncMigrationDatabaseErrorEventResponseArray []SyncMigrationDatabaseErrorEventResponseInput

func (SyncMigrationDatabaseErrorEventResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (i SyncMigrationDatabaseErrorEventResponseArray) ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return i.ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(context.Background())
}

func (i SyncMigrationDatabaseErrorEventResponseArray) ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncMigrationDatabaseErrorEventResponseArrayOutput)
}

// Database migration errors for online migration
type SyncMigrationDatabaseErrorEventResponseOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) ToSyncMigrationDatabaseErrorEventResponseOutput() SyncMigrationDatabaseErrorEventResponseOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseOutput) ToSyncMigrationDatabaseErrorEventResponseOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseOutput {
	return o
}

// Event text.
func (o SyncMigrationDatabaseErrorEventResponseOutput) EventText() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.EventText }).(pulumi.StringOutput)
}

// Event type.
func (o SyncMigrationDatabaseErrorEventResponseOutput) EventTypeString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.EventTypeString }).(pulumi.StringOutput)
}

// String value of timestamp.
func (o SyncMigrationDatabaseErrorEventResponseOutput) TimestampString() pulumi.StringOutput {
	return o.ApplyT(func(v SyncMigrationDatabaseErrorEventResponse) string { return v.TimestampString }).(pulumi.StringOutput)
}

type SyncMigrationDatabaseErrorEventResponseArrayOutput struct{ *pulumi.OutputState }

func (SyncMigrationDatabaseErrorEventResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyncMigrationDatabaseErrorEventResponse)(nil)).Elem()
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) ToSyncMigrationDatabaseErrorEventResponseArrayOutput() SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) ToSyncMigrationDatabaseErrorEventResponseArrayOutputWithContext(ctx context.Context) SyncMigrationDatabaseErrorEventResponseArrayOutput {
	return o
}

func (o SyncMigrationDatabaseErrorEventResponseArrayOutput) Index(i pulumi.IntInput) SyncMigrationDatabaseErrorEventResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyncMigrationDatabaseErrorEventResponse {
		return vs[0].([]SyncMigrationDatabaseErrorEventResponse)[vs[1].(int)]
	}).(SyncMigrationDatabaseErrorEventResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskProperties struct {
	// Task input
	Input *ValidateSyncMigrationInputSqlServerTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInput is an input type that accepts ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs and ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInput` via:
//
//          ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs{...}
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs struct {
	// Task input
	Input ValidateSyncMigrationInputSqlServerTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) Input() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskProperties) *ValidateSyncMigrationInputSqlServerTaskInput {
		return v.Input
	}).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs and ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Input() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse {
		return v.Input
	}).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) Output() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) []ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse {
		return v.Output
	}).(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ValidateSyncMigrationInputSqlServerTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateSyncMigrationInputSqlServerTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs and ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs{...}
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
type ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Input() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) *ValidateSyncMigrationInputSqlServerTaskInputResponse {
		return v.Input
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) Output() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) []ValidateSyncMigrationInputSqlServerTaskOutputResponse {
		return v.Output
	}).(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.SqlDb.Sync'.
func (o ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInput struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryApp `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShare `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs and ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileSharePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput)
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput).ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs, ValidateMigrationInputSqlServerSqlMISyncTaskInputPtr and ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput
}

type validateMigrationInputSqlServerSqlMISyncTaskInputPtrType ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs

func ValidateMigrationInputSqlServerSqlMISyncTaskInputPtr(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputArgs) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput {
	return (*validateMigrationInputSqlServerSqlMISyncTaskInputPtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputPtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) *ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) AzureApp() AzureActiveDirectoryAppOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) AzureActiveDirectoryApp { return v.AzureApp }).(AzureActiveDirectoryAppOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) SqlConnectionInfo {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput) TargetConnectionInfo() MiSqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInput) MiSqlConnectionInfo {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) Elem() ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) AzureApp() AzureActiveDirectoryAppPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *AzureActiveDirectoryApp {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppPtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput) TargetConnectionInfo() MiSqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInput) *MiSqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoPtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponse `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppInvokeResponseInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareInvokeResponsePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput).ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs, ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtr and ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrType ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs

func ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtr(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseArgs) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) AzureApp() AzureActiveDirectoryAppInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) AzureActiveDirectoryAppInvokeResponse {
		return v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponseOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *FileShareInvokeResponse {
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) string {
		return v.StorageResourceId
	}).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) MiSqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) AzureApp() AzureActiveDirectoryAppInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *AzureActiveDirectoryAppInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppInvokeResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *FileShareInvokeResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse) *MiSqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponse `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareResponse `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId string `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs struct {
	// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
	AzureApp AzureActiveDirectoryAppResponseInput `pulumi:"azureApp"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareResponsePtrInput `pulumi:"backupFileShare"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Connection information for source SQL Server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Fully qualified resourceId of storage
	StorageResourceId pulumi.StringInput `pulumi:"storageResourceId"`
	// Connection information for Azure SQL Database Managed Instance
	TargetConnectionInfo MiSqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput).ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs, ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtr and ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs

func ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtr(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseArgs) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) AzureApp() AzureActiveDirectoryAppResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) AzureActiveDirectoryAppResponse {
		return v.AzureApp
	}).(AzureActiveDirectoryAppResponseOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) StorageResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) string { return v.StorageResourceId }).(pulumi.StringOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput) TargetConnectionInfo() MiSqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) MiSqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput)
}

// Azure Active Directory Application the DMS instance will use to connect to the target instance of Azure SQL Database Managed Instance and the Azure Storage Account
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) AzureApp() AzureActiveDirectoryAppResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *AzureActiveDirectoryAppResponse {
		if v == nil {
			return nil
		}
		return &v.AzureApp
	}).(AzureActiveDirectoryAppResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Connection information for source SQL Server
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Fully qualified resourceId of storage
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) StorageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StorageResourceId
	}).(pulumi.StringPtrOutput)
}

// Connection information for Azure SQL Database Managed Instance
func (o ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput) TargetConnectionInfo() MiSqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse) *MiSqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(MiSqlConnectionInfoResponsePtrOutput)
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse struct {
	// Database identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs struct {
	// Database identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput)
}

// ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray and ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray{ ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArgs{...} }
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray []ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseInput

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput)
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput {
	return o
}

// Database identifier
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with a selected database object
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput)
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse struct {
	// Database identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs struct {
	// Database identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput)
}

// ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray and ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray{ ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArgs{...} }
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseInput

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput)
}

// Output for task that validates migration input for Azure SQL Database Managed Instance online migration
type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return o
}

// Database identifier
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with a selected database object
func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskProperties struct {
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMISyncTaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs and ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs struct {
	// Task input
	Input ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput {
	return o
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) Input() ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskProperties) *ValidateMigrationInputSqlServerSqlMISyncTaskInput {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Input() ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) Output() ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) []ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs and ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
type ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Input() ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) *ValidateMigrationInputSqlServerSqlMISyncTaskInputResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) Output() ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) []ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS'.
func (o ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInput struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShare `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShare `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode *string `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInput `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMITaskInputInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputArgs and ValidateMigrationInputSqlServerSqlMITaskInputOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskInputInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileSharePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMITaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputOutput)
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputArgs) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputOutput).ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMITaskInputPtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputArgs, ValidateMigrationInputSqlServerSqlMITaskInputPtr and ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputPtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMITaskInputPtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput
}

type validateMigrationInputSqlServerSqlMITaskInputPtrType ValidateMigrationInputSqlServerSqlMITaskInputArgs

func ValidateMigrationInputSqlServerSqlMITaskInputPtr(v *ValidateMigrationInputSqlServerSqlMITaskInputArgs) ValidateMigrationInputSqlServerSqlMITaskInputPtrInput {
	return (*validateMigrationInputSqlServerSqlMITaskInputPtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMITaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMITaskInputPtrType) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMITaskInputPtrType) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputOutput() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) *ValidateMigrationInputSqlServerSqlMITaskInput {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupBlobShare() BlobShareOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) BlobShare { return v.BackupBlobShare }).(BlobShareOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) *FileShare { return v.BackupFileShare }).(FileSharePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInput)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputPtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) Elem() ValidateMigrationInputSqlServerSqlMITaskInputOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) ValidateMigrationInputSqlServerSqlMITaskInput {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupBlobShare() BlobSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *BlobShare {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobSharePtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupFileShare() FileSharePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *FileShare {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileSharePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) []MigrateSqlServerSqlMIDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInvokeResponse `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareInvokeResponse `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode *string `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareInvokeResponseInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareInvokeResponsePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput).ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs, ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtr and ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrType ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs

func ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtr(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseArgs) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) BackupBlobShare() BlobShareInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) BlobShareInvokeResponse {
		return v.BackupBlobShare
	}).(BlobShareInvokeResponseOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *FileShareInvokeResponse {
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupBlobShare() BlobShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *BlobShareInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareInvokeResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupFileShare() FileShareInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *FileShareInvokeResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareInvokeResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) []MigrateSqlServerSqlMIDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputResponse struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareResponse `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare *FileShareResponse `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode *string `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlMIDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins []string `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ValidateMigrationInputSqlServerSqlMITaskInputResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs and ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskInputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs struct {
	// SAS URI of Azure Storage Account Container to be used for storing backup files.
	BackupBlobShare BlobShareResponseInput `pulumi:"backupBlobShare"`
	// Backup file share information for all selected databases.
	BackupFileShare FileShareResponsePtrInput `pulumi:"backupFileShare"`
	// Backup Mode to specify whether to use existing backup or create new backup.
	BackupMode pulumi.StringPtrInput `pulumi:"backupMode"`
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlMIDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Logins to migrate
	SelectedLogins pulumi.StringArrayInput `pulumi:"selectedLogins"`
	// Information for connecting to source
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput)
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput).ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx)
}

// ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs, ValidateMigrationInputSqlServerSqlMITaskInputResponsePtr and ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput
	ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput
}

type validateMigrationInputSqlServerSqlMITaskInputResponsePtrType ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs

func ValidateMigrationInputSqlServerSqlMITaskInputResponsePtr(v *ValidateMigrationInputSqlServerSqlMITaskInputResponseArgs) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput {
	return (*validateMigrationInputSqlServerSqlMITaskInputResponsePtrType)(v)
}

func (*validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (i *validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateMigrationInputSqlServerSqlMITaskInputResponsePtrType) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

// Input for task that validates migration input for SQL to Azure SQL Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		return &v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupBlobShare() BlobShareResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) BlobShareResponse {
		return v.BackupBlobShare
	}).(BlobShareResponseOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *FileShareResponse {
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) *string { return v.BackupMode }).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) []string { return v.SelectedLogins }).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateMigrationInputSqlServerSqlMITaskInputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) ToValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) Elem() ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		return *v
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput)
}

// SAS URI of Azure Storage Account Container to be used for storing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupBlobShare() BlobShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *BlobShareResponse {
		if v == nil {
			return nil
		}
		return &v.BackupBlobShare
	}).(BlobShareResponsePtrOutput)
}

// Backup file share information for all selected databases.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupFileShare() FileShareResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *FileShareResponse {
		if v == nil {
			return nil
		}
		return v.BackupFileShare
	}).(FileShareResponsePtrOutput)
}

// Backup Mode to specify whether to use existing backup or create new backup.
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupMode
	}).(pulumi.StringPtrOutput)
}

// Databases to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) []MigrateSqlServerSqlMIDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput)
}

// Logins to migrate
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SelectedLogins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) []string {
		if v == nil {
			return nil
		}
		return v.SelectedLogins
	}).(pulumi.StringArrayOutput)
}

// Information for connecting to source
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to target
func (o ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateMigrationInputSqlServerSqlMITaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse struct {
	// Errors associated with the BackupFolder path
	BackupFolderErrors []ReportableExceptionInvokeResponse `pulumi:"backupFolderErrors"`
	// Errors associated with backup share user name and password credentials
	BackupShareCredentialsErrors []ReportableExceptionInvokeResponse `pulumi:"backupShareCredentialsErrors"`
	// Errors associated with the storage account provided.
	BackupStorageAccountErrors []ReportableExceptionInvokeResponse `pulumi:"backupStorageAccountErrors"`
	// Information about backup files when existing backup mode is used.
	DatabaseBackupInfo *DatabaseBackupInfoInvokeResponse `pulumi:"databaseBackupInfo"`
	// Errors associated with existing backup files.
	ExistingBackupErrors []ReportableExceptionInvokeResponse `pulumi:"existingBackupErrors"`
	// Result identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with the RestoreDatabaseName
	RestoreDatabaseNameErrors []ReportableExceptionInvokeResponse `pulumi:"restoreDatabaseNameErrors"`
}

// ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs struct {
	// Errors associated with the BackupFolder path
	BackupFolderErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"backupFolderErrors"`
	// Errors associated with backup share user name and password credentials
	BackupShareCredentialsErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"backupShareCredentialsErrors"`
	// Errors associated with the storage account provided.
	BackupStorageAccountErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"backupStorageAccountErrors"`
	// Information about backup files when existing backup mode is used.
	DatabaseBackupInfo DatabaseBackupInfoInvokeResponsePtrInput `pulumi:"databaseBackupInfo"`
	// Errors associated with existing backup files.
	ExistingBackupErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"existingBackupErrors"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with the RestoreDatabaseName
	RestoreDatabaseNameErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"restoreDatabaseNameErrors"`
}

func (ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput)
}

// ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray and ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray{ ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArgs{...} }
type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray []ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseInput

func (ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput)
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput {
	return o
}

// Errors associated with the BackupFolder path
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) BackupFolderErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.BackupFolderErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Errors associated with backup share user name and password credentials
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) BackupShareCredentialsErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.BackupShareCredentialsErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Errors associated with the storage account provided.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) BackupStorageAccountErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.BackupStorageAccountErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Information about backup files when existing backup mode is used.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) DatabaseBackupInfo() DatabaseBackupInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) *DatabaseBackupInfoInvokeResponse {
		return v.DatabaseBackupInfo
	}).(DatabaseBackupInfoInvokeResponsePtrOutput)
}

// Errors associated with existing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) ExistingBackupErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ExistingBackupErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

// Result identifier
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with the RestoreDatabaseName
func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput) RestoreDatabaseNameErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.RestoreDatabaseNameErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput)
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputResponse struct {
	// Errors associated with the BackupFolder path
	BackupFolderErrors []ReportableExceptionResponse `pulumi:"backupFolderErrors"`
	// Errors associated with backup share user name and password credentials
	BackupShareCredentialsErrors []ReportableExceptionResponse `pulumi:"backupShareCredentialsErrors"`
	// Errors associated with the storage account provided.
	BackupStorageAccountErrors []ReportableExceptionResponse `pulumi:"backupStorageAccountErrors"`
	// Information about backup files when existing backup mode is used.
	DatabaseBackupInfo *DatabaseBackupInfoResponse `pulumi:"databaseBackupInfo"`
	// Errors associated with existing backup files.
	ExistingBackupErrors []ReportableExceptionResponse `pulumi:"existingBackupErrors"`
	// Result identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with the RestoreDatabaseName
	RestoreDatabaseNameErrors []ReportableExceptionResponse `pulumi:"restoreDatabaseNameErrors"`
}

// ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs and ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs struct {
	// Errors associated with the BackupFolder path
	BackupFolderErrors ReportableExceptionResponseArrayInput `pulumi:"backupFolderErrors"`
	// Errors associated with backup share user name and password credentials
	BackupShareCredentialsErrors ReportableExceptionResponseArrayInput `pulumi:"backupShareCredentialsErrors"`
	// Errors associated with the storage account provided.
	BackupStorageAccountErrors ReportableExceptionResponseArrayInput `pulumi:"backupStorageAccountErrors"`
	// Information about backup files when existing backup mode is used.
	DatabaseBackupInfo DatabaseBackupInfoResponsePtrInput `pulumi:"databaseBackupInfo"`
	// Errors associated with existing backup files.
	ExistingBackupErrors ReportableExceptionResponseArrayInput `pulumi:"existingBackupErrors"`
	// Result identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with the RestoreDatabaseName
	RestoreDatabaseNameErrors ReportableExceptionResponseArrayInput `pulumi:"restoreDatabaseNameErrors"`
}

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput)
}

// ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray and ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray{ ValidateMigrationInputSqlServerSqlMITaskOutputResponseArgs{...} }
type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput
	ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray []ValidateMigrationInputSqlServerSqlMITaskOutputResponseInput

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskOutputResponseArray) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput)
}

// Output for task that validates migration input for SQL to Azure SQL Managed Instance migrations
type ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return o
}

// Errors associated with the BackupFolder path
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupFolderErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupFolderErrors
	}).(ReportableExceptionResponseArrayOutput)
}

// Errors associated with backup share user name and password credentials
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupShareCredentialsErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupShareCredentialsErrors
	}).(ReportableExceptionResponseArrayOutput)
}

// Errors associated with the storage account provided.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) BackupStorageAccountErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.BackupStorageAccountErrors
	}).(ReportableExceptionResponseArrayOutput)
}

// Information about backup files when existing backup mode is used.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) DatabaseBackupInfo() DatabaseBackupInfoResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) *DatabaseBackupInfoResponse {
		return v.DatabaseBackupInfo
	}).(DatabaseBackupInfoResponsePtrOutput)
}

// Errors associated with existing backup files.
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) ExistingBackupErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.ExistingBackupErrors
	}).(ReportableExceptionResponseArrayOutput)
}

// Result identifier
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with the RestoreDatabaseName
func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput) RestoreDatabaseNameErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskOutputResponse) []ReportableExceptionResponse {
		return v.RestoreDatabaseNameErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) ToValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateMigrationInputSqlServerSqlMITaskOutputResponse {
		return vs[0].([]ValidateMigrationInputSqlServerSqlMITaskOutputResponse)[vs[1].(int)]
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskProperties struct {
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMITaskInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMITaskPropertiesInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs and ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskPropertiesInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskPropertiesInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput
	ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs struct {
	// Task input
	Input ValidateMigrationInputSqlServerSqlMITaskInputPtrInput `pulumi:"input"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskProperties)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput {
	return o
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) Input() ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskProperties) *ValidateMigrationInputSqlServerSqlMITaskInput {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskProperties) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorInvokeResponse `pulumi:"errors"`
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs and ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorInvokeResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) []interface{} {
		return v.Commands
	}).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) Errors() ODataErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) []ODataErrorInvokeResponse {
		return v.Errors
	}).(ODataErrorInvokeResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) Input() ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) *ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) Output() ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) []ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse struct {
	// Array of command properties.
	Commands []interface{} `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors []ODataErrorResponse `pulumi:"errors"`
	// Task input
	Input *ValidateMigrationInputSqlServerSqlMITaskInputResponse `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output []ValidateMigrationInputSqlServerSqlMITaskOutputResponse `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State string `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType string `pulumi:"taskType"`
}

// ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseInput is an input type that accepts ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs and ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput values.
// You can construct a concrete instance of `ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseInput` via:
//
//          ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs{...}
type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseInput interface {
	pulumi.Input

	ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput
	ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs struct {
	// Array of command properties.
	Commands pulumi.ArrayInput `pulumi:"commands"`
	// Array of errors. This is ignored if submitted.
	Errors ODataErrorResponseArrayInput `pulumi:"errors"`
	// Task input
	Input ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrInput `pulumi:"input"`
	// Task output. This is ignored if submitted.
	Output ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayInput `pulumi:"output"`
	// The state of the task. This is ignored if submitted.
	State pulumi.StringInput `pulumi:"state"`
	// Task type.
	// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
	TaskType pulumi.StringInput `pulumi:"taskType"`
}

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return i.ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(context.Background())
}

func (i ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseArgs) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput)
}

// Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
type ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse)(nil)).Elem()
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput() ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) ToValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutputWithContext(ctx context.Context) ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput {
	return o
}

// Array of command properties.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Commands() pulumi.ArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []interface{} { return v.Commands }).(pulumi.ArrayOutput)
}

// Array of errors. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Errors() ODataErrorResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []ODataErrorResponse {
		return v.Errors
	}).(ODataErrorResponseArrayOutput)
}

// Task input
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Input() ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) *ValidateMigrationInputSqlServerSqlMITaskInputResponse {
		return v.Input
	}).(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput)
}

// Task output. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) Output() ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) []ValidateMigrationInputSqlServerSqlMITaskOutputResponse {
		return v.Output
	}).(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput)
}

// The state of the task. This is ignored if submitted.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// Task type.
// Expected value is 'ValidateMigrationInput.SqlServer.AzureSqlDbMI'.
func (o ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput) TaskType() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateMigrationInputSqlServerSqlMITaskPropertiesResponse) string { return v.TaskType }).(pulumi.StringOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInput struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInput `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfo `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfo `pulumi:"targetConnectionInfo"`
}

// ValidateSyncMigrationInputSqlServerTaskInputInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputArgs and ValidateSyncMigrationInputSqlServerTaskInputOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputArgs{...}
type ValidateSyncMigrationInputSqlServerTaskInputInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput
	ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfoInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInput `pulumi:"targetConnectionInfo"`
}

func (ValidateSyncMigrationInputSqlServerTaskInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputOutput)
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputArgs) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputOutput).ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx)
}

// ValidateSyncMigrationInputSqlServerTaskInputPtrInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputArgs, ValidateSyncMigrationInputSqlServerTaskInputPtr and ValidateSyncMigrationInputSqlServerTaskInputPtrOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputPtrInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputArgs{...}
//
//  or:
//
//          nil
type ValidateSyncMigrationInputSqlServerTaskInputPtrInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput
	ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput
}

type validateSyncMigrationInputSqlServerTaskInputPtrType ValidateSyncMigrationInputSqlServerTaskInputArgs

func ValidateSyncMigrationInputSqlServerTaskInputPtr(v *ValidateSyncMigrationInputSqlServerTaskInputArgs) ValidateSyncMigrationInputSqlServerTaskInputPtrInput {
	return (*validateSyncMigrationInputSqlServerTaskInputPtrType)(v)
}

func (*validateSyncMigrationInputSqlServerTaskInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (i *validateSyncMigrationInputSqlServerTaskInputPtrType) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (i *validateSyncMigrationInputSqlServerTaskInputPtrType) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputOutput() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(context.Background())
}

func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) *ValidateSyncMigrationInputSqlServerTaskInput {
		return &v
	}).(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) SourceConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) SqlConnectionInfo { return v.SourceConnectionInfo }).(SqlConnectionInfoOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputOutput) TargetConnectionInfo() SqlConnectionInfoOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInput) SqlConnectionInfo { return v.TargetConnectionInfo }).(SqlConnectionInfoOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputPtrOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInput)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutput() ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputPtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputPtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) Elem() ValidateSyncMigrationInputSqlServerTaskInputOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) ValidateSyncMigrationInputSqlServerTaskInput {
		return *v
	}).(ValidateSyncMigrationInputSqlServerTaskInputOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) []MigrateSqlServerSqlDbSyncDatabaseInput {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) SourceConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputPtrOutput) TargetConnectionInfo() SqlConnectionInfoPtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInput) *SqlConnectionInfo {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoPtrOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponse `pulumi:"targetConnectionInfo"`
}

// ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs and ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs{...}
type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoInvokeResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput)
}

func (i ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput).ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx)
}

// ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs, ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtr and ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput
	ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput
}

type validateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrType ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs

func ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtr(v *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseArgs) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrInput {
	return (*validateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrType)(v)
}

func (*validateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (i *validateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *validateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse {
		return &v
	}).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) SqlConnectionInfoInvokeResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponseOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) Elem() ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse {
		return *v
	}).(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) []MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoInvokeResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputInvokeResponse) *SqlConnectionInfoInvokeResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoInvokeResponsePtrOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputResponse struct {
	// Databases to migrate
	SelectedDatabases []MigrateSqlServerSqlDbSyncDatabaseInputResponse `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfoResponse `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponse `pulumi:"targetConnectionInfo"`
}

// ValidateSyncMigrationInputSqlServerTaskInputResponseInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputResponseArgs and ValidateSyncMigrationInputSqlServerTaskInputResponseOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputResponseInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputResponseArgs{...}
type ValidateSyncMigrationInputSqlServerTaskInputResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputResponseArgs struct {
	// Databases to migrate
	SelectedDatabases MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayInput `pulumi:"selectedDatabases"`
	// Information for connecting to source SQL server
	SourceConnectionInfo SqlConnectionInfoResponseInput `pulumi:"sourceConnectionInfo"`
	// Information for connecting to target
	TargetConnectionInfo SqlConnectionInfoResponseInput `pulumi:"targetConnectionInfo"`
}

func (ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput)
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput).ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx)
}

// ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskInputResponseArgs, ValidateSyncMigrationInputSqlServerTaskInputResponsePtr and ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskInputResponseArgs{...}
//
//  or:
//
//          nil
type ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput
	ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput
}

type validateSyncMigrationInputSqlServerTaskInputResponsePtrType ValidateSyncMigrationInputSqlServerTaskInputResponseArgs

func ValidateSyncMigrationInputSqlServerTaskInputResponsePtr(v *ValidateSyncMigrationInputSqlServerTaskInputResponseArgs) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrInput {
	return (*validateSyncMigrationInputSqlServerTaskInputResponsePtrType)(v)
}

func (*validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (i *validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (i *validateSyncMigrationInputSqlServerTaskInputResponsePtrType) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

// Input for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskInputResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutput() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(context.Background())
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) *ValidateSyncMigrationInputSqlServerTaskInputResponse {
		return &v
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) SourceConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.SourceConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputResponseOutput) TargetConnectionInfo() SqlConnectionInfoResponseOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskInputResponse) SqlConnectionInfoResponse {
		return v.TargetConnectionInfo
	}).(SqlConnectionInfoResponseOutput)
}

type ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ValidateSyncMigrationInputSqlServerTaskInputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput() ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) ToValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) Elem() ValidateSyncMigrationInputSqlServerTaskInputResponseOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) ValidateSyncMigrationInputSqlServerTaskInputResponse {
		return *v
	}).(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput)
}

// Databases to migrate
func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) SelectedDatabases() MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) []MigrateSqlServerSqlDbSyncDatabaseInputResponse {
		if v == nil {
			return nil
		}
		return v.SelectedDatabases
	}).(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput)
}

// Information for connecting to source SQL server
func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) SourceConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.SourceConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Information for connecting to target
func (o ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput) TargetConnectionInfo() SqlConnectionInfoResponsePtrOutput {
	return o.ApplyT(func(v *ValidateSyncMigrationInputSqlServerTaskInputResponse) *SqlConnectionInfoResponse {
		if v == nil {
			return nil
		}
		return &v.TargetConnectionInfo
	}).(SqlConnectionInfoResponsePtrOutput)
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse struct {
	// Database identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors []ReportableExceptionInvokeResponse `pulumi:"validationErrors"`
}

// ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs and ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs{...}
type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs struct {
	// Database identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors ReportableExceptionInvokeResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput)
}

// ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray and ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray{ ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArgs{...} }
type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput
}

type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray []ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseInput

func (ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput)
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput {
	return o
}

// Database identifier
func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with a selected database object
func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput) ValidationErrors() ReportableExceptionInvokeResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse) []ReportableExceptionInvokeResponse {
		return v.ValidationErrors
	}).(ReportableExceptionInvokeResponseArrayOutput)
}

type ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput) Index(i pulumi.IntInput) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse {
		return vs[0].([]ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponse)[vs[1].(int)]
	}).(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput)
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputResponse struct {
	// Database identifier
	Id string `pulumi:"id"`
	// Name of database
	Name string `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors []ReportableExceptionResponse `pulumi:"validationErrors"`
}

// ValidateSyncMigrationInputSqlServerTaskOutputResponseInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs and ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskOutputResponseInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs{...}
type ValidateSyncMigrationInputSqlServerTaskOutputResponseInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs struct {
	// Database identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Name of database
	Name pulumi.StringInput `pulumi:"name"`
	// Errors associated with a selected database object
	ValidationErrors ReportableExceptionResponseArrayInput `pulumi:"validationErrors"`
}

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput)
}

// ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput is an input type that accepts ValidateSyncMigrationInputSqlServerTaskOutputResponseArray and ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput values.
// You can construct a concrete instance of `ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput` via:
//
//          ValidateSyncMigrationInputSqlServerTaskOutputResponseArray{ ValidateSyncMigrationInputSqlServerTaskOutputResponseArgs{...} }
type ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayInput interface {
	pulumi.Input

	ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput
	ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseArray []ValidateSyncMigrationInputSqlServerTaskOutputResponseInput

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return i.ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(context.Background())
}

func (i ValidateSyncMigrationInputSqlServerTaskOutputResponseArray) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput)
}

// Output for task that validates migration input for SQL sync migrations
type ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return o
}

// Database identifier
func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of database
func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Errors associated with a selected database object
func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput) ValidationErrors() ReportableExceptionResponseArrayOutput {
	return o.ApplyT(func(v ValidateSyncMigrationInputSqlServerTaskOutputResponse) []ReportableExceptionResponse {
		return v.ValidationErrors
	}).(ReportableExceptionResponseArrayOutput)
}

type ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ValidateSyncMigrationInputSqlServerTaskOutputResponse)(nil)).Elem()
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput() ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) ToValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutputWithContext(ctx context.Context) ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput {
	return o
}

func (o ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput) Index(i pulumi.IntInput) ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ValidateSyncMigrationInputSqlServerTaskOutputResponse {
		return vs[0].([]ValidateSyncMigrationInputSqlServerTaskOutputResponse)[vs[1].(int)]
	}).(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput)
}

// Description about the errors happen while performing migration validation
type ValidationErrorInvokeResponse struct {
	// Severity of the error
	Severity string `pulumi:"severity"`
	// Error Text
	Text string `pulumi:"text"`
}

// ValidationErrorInvokeResponseInput is an input type that accepts ValidationErrorInvokeResponseArgs and ValidationErrorInvokeResponseOutput values.
// You can construct a concrete instance of `ValidationErrorInvokeResponseInput` via:
//
//          ValidationErrorInvokeResponseArgs{...}
type ValidationErrorInvokeResponseInput interface {
	pulumi.Input

	ToValidationErrorInvokeResponseOutput() ValidationErrorInvokeResponseOutput
	ToValidationErrorInvokeResponseOutputWithContext(context.Context) ValidationErrorInvokeResponseOutput
}

// Description about the errors happen while performing migration validation
type ValidationErrorInvokeResponseArgs struct {
	// Severity of the error
	Severity pulumi.StringInput `pulumi:"severity"`
	// Error Text
	Text pulumi.StringInput `pulumi:"text"`
}

func (ValidationErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationErrorInvokeResponse)(nil)).Elem()
}

func (i ValidationErrorInvokeResponseArgs) ToValidationErrorInvokeResponseOutput() ValidationErrorInvokeResponseOutput {
	return i.ToValidationErrorInvokeResponseOutputWithContext(context.Background())
}

func (i ValidationErrorInvokeResponseArgs) ToValidationErrorInvokeResponseOutputWithContext(ctx context.Context) ValidationErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidationErrorInvokeResponseOutput)
}

// Description about the errors happen while performing migration validation
type ValidationErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (ValidationErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationErrorInvokeResponse)(nil)).Elem()
}

func (o ValidationErrorInvokeResponseOutput) ToValidationErrorInvokeResponseOutput() ValidationErrorInvokeResponseOutput {
	return o
}

func (o ValidationErrorInvokeResponseOutput) ToValidationErrorInvokeResponseOutputWithContext(ctx context.Context) ValidationErrorInvokeResponseOutput {
	return o
}

// Severity of the error
func (o ValidationErrorInvokeResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationErrorInvokeResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// Error Text
func (o ValidationErrorInvokeResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationErrorInvokeResponse) string { return v.Text }).(pulumi.StringOutput)
}

// Description about the errors happen while performing migration validation
type ValidationErrorResponse struct {
	// Severity of the error
	Severity string `pulumi:"severity"`
	// Error Text
	Text string `pulumi:"text"`
}

// ValidationErrorResponseInput is an input type that accepts ValidationErrorResponseArgs and ValidationErrorResponseOutput values.
// You can construct a concrete instance of `ValidationErrorResponseInput` via:
//
//          ValidationErrorResponseArgs{...}
type ValidationErrorResponseInput interface {
	pulumi.Input

	ToValidationErrorResponseOutput() ValidationErrorResponseOutput
	ToValidationErrorResponseOutputWithContext(context.Context) ValidationErrorResponseOutput
}

// Description about the errors happen while performing migration validation
type ValidationErrorResponseArgs struct {
	// Severity of the error
	Severity pulumi.StringInput `pulumi:"severity"`
	// Error Text
	Text pulumi.StringInput `pulumi:"text"`
}

func (ValidationErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationErrorResponse)(nil)).Elem()
}

func (i ValidationErrorResponseArgs) ToValidationErrorResponseOutput() ValidationErrorResponseOutput {
	return i.ToValidationErrorResponseOutputWithContext(context.Background())
}

func (i ValidationErrorResponseArgs) ToValidationErrorResponseOutputWithContext(ctx context.Context) ValidationErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ValidationErrorResponseOutput)
}

// Description about the errors happen while performing migration validation
type ValidationErrorResponseOutput struct{ *pulumi.OutputState }

func (ValidationErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ValidationErrorResponse)(nil)).Elem()
}

func (o ValidationErrorResponseOutput) ToValidationErrorResponseOutput() ValidationErrorResponseOutput {
	return o
}

func (o ValidationErrorResponseOutput) ToValidationErrorResponseOutputWithContext(ctx context.Context) ValidationErrorResponseOutput {
	return o
}

// Severity of the error
func (o ValidationErrorResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationErrorResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// Error Text
func (o ValidationErrorResponseOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v ValidationErrorResponse) string { return v.Text }).(pulumi.StringOutput)
}

// Wait statistics gathered during query batch execution
type WaitStatisticsInvokeResponse struct {
	// Total no. of waits
	WaitCount float64 `pulumi:"waitCount"`
	// Total wait time in millisecond(s)
	WaitTimeMs float64 `pulumi:"waitTimeMs"`
	// Type of the Wait
	WaitType string `pulumi:"waitType"`
}

// WaitStatisticsInvokeResponseInput is an input type that accepts WaitStatisticsInvokeResponseArgs and WaitStatisticsInvokeResponseOutput values.
// You can construct a concrete instance of `WaitStatisticsInvokeResponseInput` via:
//
//          WaitStatisticsInvokeResponseArgs{...}
type WaitStatisticsInvokeResponseInput interface {
	pulumi.Input

	ToWaitStatisticsInvokeResponseOutput() WaitStatisticsInvokeResponseOutput
	ToWaitStatisticsInvokeResponseOutputWithContext(context.Context) WaitStatisticsInvokeResponseOutput
}

// Wait statistics gathered during query batch execution
type WaitStatisticsInvokeResponseArgs struct {
	// Total no. of waits
	WaitCount pulumi.Float64Input `pulumi:"waitCount"`
	// Total wait time in millisecond(s)
	WaitTimeMs pulumi.Float64Input `pulumi:"waitTimeMs"`
	// Type of the Wait
	WaitType pulumi.StringInput `pulumi:"waitType"`
}

func (WaitStatisticsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStatisticsInvokeResponse)(nil)).Elem()
}

func (i WaitStatisticsInvokeResponseArgs) ToWaitStatisticsInvokeResponseOutput() WaitStatisticsInvokeResponseOutput {
	return i.ToWaitStatisticsInvokeResponseOutputWithContext(context.Background())
}

func (i WaitStatisticsInvokeResponseArgs) ToWaitStatisticsInvokeResponseOutputWithContext(ctx context.Context) WaitStatisticsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStatisticsInvokeResponseOutput)
}

// WaitStatisticsInvokeResponseMapInput is an input type that accepts WaitStatisticsInvokeResponseMap and WaitStatisticsInvokeResponseMapOutput values.
// You can construct a concrete instance of `WaitStatisticsInvokeResponseMapInput` via:
//
//          WaitStatisticsInvokeResponseMap{ "key": WaitStatisticsInvokeResponseArgs{...} }
type WaitStatisticsInvokeResponseMapInput interface {
	pulumi.Input

	ToWaitStatisticsInvokeResponseMapOutput() WaitStatisticsInvokeResponseMapOutput
	ToWaitStatisticsInvokeResponseMapOutputWithContext(context.Context) WaitStatisticsInvokeResponseMapOutput
}

type WaitStatisticsInvokeResponseMap map[string]WaitStatisticsInvokeResponseInput

func (WaitStatisticsInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaitStatisticsInvokeResponse)(nil)).Elem()
}

func (i WaitStatisticsInvokeResponseMap) ToWaitStatisticsInvokeResponseMapOutput() WaitStatisticsInvokeResponseMapOutput {
	return i.ToWaitStatisticsInvokeResponseMapOutputWithContext(context.Background())
}

func (i WaitStatisticsInvokeResponseMap) ToWaitStatisticsInvokeResponseMapOutputWithContext(ctx context.Context) WaitStatisticsInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStatisticsInvokeResponseMapOutput)
}

// Wait statistics gathered during query batch execution
type WaitStatisticsInvokeResponseOutput struct{ *pulumi.OutputState }

func (WaitStatisticsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStatisticsInvokeResponse)(nil)).Elem()
}

func (o WaitStatisticsInvokeResponseOutput) ToWaitStatisticsInvokeResponseOutput() WaitStatisticsInvokeResponseOutput {
	return o
}

func (o WaitStatisticsInvokeResponseOutput) ToWaitStatisticsInvokeResponseOutputWithContext(ctx context.Context) WaitStatisticsInvokeResponseOutput {
	return o
}

// Total no. of waits
func (o WaitStatisticsInvokeResponseOutput) WaitCount() pulumi.Float64Output {
	return o.ApplyT(func(v WaitStatisticsInvokeResponse) float64 { return v.WaitCount }).(pulumi.Float64Output)
}

// Total wait time in millisecond(s)
func (o WaitStatisticsInvokeResponseOutput) WaitTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v WaitStatisticsInvokeResponse) float64 { return v.WaitTimeMs }).(pulumi.Float64Output)
}

// Type of the Wait
func (o WaitStatisticsInvokeResponseOutput) WaitType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStatisticsInvokeResponse) string { return v.WaitType }).(pulumi.StringOutput)
}

type WaitStatisticsInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (WaitStatisticsInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaitStatisticsInvokeResponse)(nil)).Elem()
}

func (o WaitStatisticsInvokeResponseMapOutput) ToWaitStatisticsInvokeResponseMapOutput() WaitStatisticsInvokeResponseMapOutput {
	return o
}

func (o WaitStatisticsInvokeResponseMapOutput) ToWaitStatisticsInvokeResponseMapOutputWithContext(ctx context.Context) WaitStatisticsInvokeResponseMapOutput {
	return o
}

func (o WaitStatisticsInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) WaitStatisticsInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WaitStatisticsInvokeResponse {
		return vs[0].(map[string]WaitStatisticsInvokeResponse)[vs[1].(string)]
	}).(WaitStatisticsInvokeResponseOutput)
}

// Wait statistics gathered during query batch execution
type WaitStatisticsResponse struct {
	// Total no. of waits
	WaitCount float64 `pulumi:"waitCount"`
	// Total wait time in millisecond(s)
	WaitTimeMs float64 `pulumi:"waitTimeMs"`
	// Type of the Wait
	WaitType string `pulumi:"waitType"`
}

// WaitStatisticsResponseInput is an input type that accepts WaitStatisticsResponseArgs and WaitStatisticsResponseOutput values.
// You can construct a concrete instance of `WaitStatisticsResponseInput` via:
//
//          WaitStatisticsResponseArgs{...}
type WaitStatisticsResponseInput interface {
	pulumi.Input

	ToWaitStatisticsResponseOutput() WaitStatisticsResponseOutput
	ToWaitStatisticsResponseOutputWithContext(context.Context) WaitStatisticsResponseOutput
}

// Wait statistics gathered during query batch execution
type WaitStatisticsResponseArgs struct {
	// Total no. of waits
	WaitCount pulumi.Float64Input `pulumi:"waitCount"`
	// Total wait time in millisecond(s)
	WaitTimeMs pulumi.Float64Input `pulumi:"waitTimeMs"`
	// Type of the Wait
	WaitType pulumi.StringInput `pulumi:"waitType"`
}

func (WaitStatisticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStatisticsResponse)(nil)).Elem()
}

func (i WaitStatisticsResponseArgs) ToWaitStatisticsResponseOutput() WaitStatisticsResponseOutput {
	return i.ToWaitStatisticsResponseOutputWithContext(context.Background())
}

func (i WaitStatisticsResponseArgs) ToWaitStatisticsResponseOutputWithContext(ctx context.Context) WaitStatisticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStatisticsResponseOutput)
}

// WaitStatisticsResponseMapInput is an input type that accepts WaitStatisticsResponseMap and WaitStatisticsResponseMapOutput values.
// You can construct a concrete instance of `WaitStatisticsResponseMapInput` via:
//
//          WaitStatisticsResponseMap{ "key": WaitStatisticsResponseArgs{...} }
type WaitStatisticsResponseMapInput interface {
	pulumi.Input

	ToWaitStatisticsResponseMapOutput() WaitStatisticsResponseMapOutput
	ToWaitStatisticsResponseMapOutputWithContext(context.Context) WaitStatisticsResponseMapOutput
}

type WaitStatisticsResponseMap map[string]WaitStatisticsResponseInput

func (WaitStatisticsResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaitStatisticsResponse)(nil)).Elem()
}

func (i WaitStatisticsResponseMap) ToWaitStatisticsResponseMapOutput() WaitStatisticsResponseMapOutput {
	return i.ToWaitStatisticsResponseMapOutputWithContext(context.Background())
}

func (i WaitStatisticsResponseMap) ToWaitStatisticsResponseMapOutputWithContext(ctx context.Context) WaitStatisticsResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStatisticsResponseMapOutput)
}

// Wait statistics gathered during query batch execution
type WaitStatisticsResponseOutput struct{ *pulumi.OutputState }

func (WaitStatisticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStatisticsResponse)(nil)).Elem()
}

func (o WaitStatisticsResponseOutput) ToWaitStatisticsResponseOutput() WaitStatisticsResponseOutput {
	return o
}

func (o WaitStatisticsResponseOutput) ToWaitStatisticsResponseOutputWithContext(ctx context.Context) WaitStatisticsResponseOutput {
	return o
}

// Total no. of waits
func (o WaitStatisticsResponseOutput) WaitCount() pulumi.Float64Output {
	return o.ApplyT(func(v WaitStatisticsResponse) float64 { return v.WaitCount }).(pulumi.Float64Output)
}

// Total wait time in millisecond(s)
func (o WaitStatisticsResponseOutput) WaitTimeMs() pulumi.Float64Output {
	return o.ApplyT(func(v WaitStatisticsResponse) float64 { return v.WaitTimeMs }).(pulumi.Float64Output)
}

// Type of the Wait
func (o WaitStatisticsResponseOutput) WaitType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStatisticsResponse) string { return v.WaitType }).(pulumi.StringOutput)
}

type WaitStatisticsResponseMapOutput struct{ *pulumi.OutputState }

func (WaitStatisticsResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]WaitStatisticsResponse)(nil)).Elem()
}

func (o WaitStatisticsResponseMapOutput) ToWaitStatisticsResponseMapOutput() WaitStatisticsResponseMapOutput {
	return o
}

func (o WaitStatisticsResponseMapOutput) ToWaitStatisticsResponseMapOutputWithContext(ctx context.Context) WaitStatisticsResponseMapOutput {
	return o
}

func (o WaitStatisticsResponseMapOutput) MapIndex(k pulumi.StringInput) WaitStatisticsResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) WaitStatisticsResponse {
		return vs[0].(map[string]WaitStatisticsResponse)[vs[1].(string)]
	}).(WaitStatisticsResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureActiveDirectoryAppOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppInvokeResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryAppResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupFileInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(BackupFileInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupFileInfoResponseOutput{})
	pulumi.RegisterOutputType(BackupFileInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupSetInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(BackupSetInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupSetInfoResponseOutput{})
	pulumi.RegisterOutputType(BackupSetInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(BlobShareOutput{})
	pulumi.RegisterOutputType(BlobSharePtrOutput{})
	pulumi.RegisterOutputType(BlobShareInvokeResponseOutput{})
	pulumi.RegisterOutputType(BlobShareInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobShareResponseOutput{})
	pulumi.RegisterOutputType(BlobShareResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourcePostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputAgentJobLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputAgentJobLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputLoginLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputLoginLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputTaskLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskOutputTaskLevelResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToSourceSqlServerTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForMySqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConnectToTargetSqlSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(DataIntegrityValidationResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataIntegrityValidationResultResponseOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(DataItemMigrationSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseFileInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInfoOutput{})
	pulumi.RegisterOutputType(DatabaseInfoArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInfoResponseOutput{})
	pulumi.RegisterOutputType(DatabaseInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(DatabaseSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(DatabaseTableInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseTableInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseTableResponseOutput{})
	pulumi.RegisterOutputType(DatabaseTableResponseArrayOutput{})
	pulumi.RegisterOutputType(ExecutionStatisticsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExecutionStatisticsResponseOutput{})
	pulumi.RegisterOutputType(FileShareOutput{})
	pulumi.RegisterOutputType(FileSharePtrOutput{})
	pulumi.RegisterOutputType(FileShareInvokeResponseOutput{})
	pulumi.RegisterOutputType(FileShareInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FileShareResponseOutput{})
	pulumi.RegisterOutputType(FileShareResponsePtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetTdeCertificatesSqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputPtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskPropertiesOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetUserTablesSqlTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MiSqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandOutputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMISyncCompleteCommandPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateMySqlAzureDbForMySqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputTableLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputDatabaseLevelValidationResultResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputTableLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputTableLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputValidationResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskOutputValidationResultResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlDbTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMIDatabaseInputResponseArrayOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputAgentJobLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputAgentJobLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputDatabaseLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputDatabaseLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputErrorResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputLoginLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputLoginLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputMigrationLevelInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskOutputMigrationLevelResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSqlServerSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandInputResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandOutputResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrateSyncCompleteCommandPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MigrationEligibilityInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrationEligibilityInfoResponseOutput{})
	pulumi.RegisterOutputType(MigrationReportResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrationReportResultResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationDatabaseSummaryResultResponseMapOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsPtrOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsInvokeResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsResponseOutput{})
	pulumi.RegisterOutputType(MigrationValidationOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(MySqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ODataErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(ODataErrorInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ODataErrorResponseOutput{})
	pulumi.RegisterOutputType(ODataErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoResponseOutput{})
	pulumi.RegisterOutputType(OrphanedUserInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(PostgreSqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(QueryAnalysisValidationResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(QueryAnalysisValidationResultResponseOutput{})
	pulumi.RegisterOutputType(QueryExecutionResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(QueryExecutionResultResponseOutput{})
	pulumi.RegisterOutputType(ReportableExceptionInvokeResponseOutput{})
	pulumi.RegisterOutputType(ReportableExceptionInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ReportableExceptionResponseOutput{})
	pulumi.RegisterOutputType(ReportableExceptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SchemaComparisonValidationResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(SchemaComparisonValidationResultResponseOutput{})
	pulumi.RegisterOutputType(SchemaComparisonValidationResultTypeInvokeResponseOutput{})
	pulumi.RegisterOutputType(SchemaComparisonValidationResultTypeResponseOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputArrayOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputResponseOutput{})
	pulumi.RegisterOutputType(SelectedCertificateInputResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceSkuOutput{})
	pulumi.RegisterOutputType(ServiceSkuPtrOutput{})
	pulumi.RegisterOutputType(ServiceSkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(ServiceSkuResponseOutput{})
	pulumi.RegisterOutputType(ServiceSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoPtrOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoResponseOutput{})
	pulumi.RegisterOutputType(SqlConnectionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultResponseOutput{})
	pulumi.RegisterOutputType(StartMigrationScenarioServerRoleResultResponseMapOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventInvokeResponseOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventResponseOutput{})
	pulumi.RegisterOutputType(SyncMigrationDatabaseErrorEventResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMISyncTaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskPropertiesOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateMigrationInputSqlServerSqlMITaskPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputPtrOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskInputResponsePtrOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputResponseOutput{})
	pulumi.RegisterOutputType(ValidateSyncMigrationInputSqlServerTaskOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ValidationErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(ValidationErrorResponseOutput{})
	pulumi.RegisterOutputType(WaitStatisticsInvokeResponseOutput{})
	pulumi.RegisterOutputType(WaitStatisticsInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(WaitStatisticsResponseOutput{})
	pulumi.RegisterOutputType(WaitStatisticsResponseMapOutput{})
}
