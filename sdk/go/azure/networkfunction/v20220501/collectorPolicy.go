// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Collector policy resource.
type CollectorPolicy struct {
	pulumi.CustomResourceState

	// Emission policies.
	EmissionPolicies EmissionPoliciesPropertiesFormatResponseArrayOutput `pulumi:"emissionPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Ingestion policies.
	IngestionPolicy IngestionPolicyPropertiesFormatResponsePtrOutput `pulumi:"ingestionPolicy"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The provisioning state.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData CollectorPolicyResponseSystemDataOutput `pulumi:"systemData"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCollectorPolicy registers a new resource with the given unique name, arguments, and options.
func NewCollectorPolicy(ctx *pulumi.Context,
	name string, args *CollectorPolicyArgs, opts ...pulumi.ResourceOption) (*CollectorPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzureTrafficCollectorName == nil {
		return nil, errors.New("invalid value for required argument 'AzureTrafficCollectorName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:networkfunction:CollectorPolicy"),
		},
		{
			Type: pulumi.String("azure-native:networkfunction/v20210901preview:CollectorPolicy"),
		},
		{
			Type: pulumi.String("azure-native:networkfunction/v20220801:CollectorPolicy"),
		},
	})
	opts = append(opts, aliases)
	var resource CollectorPolicy
	err := ctx.RegisterResource("azure-native:networkfunction/v20220501:CollectorPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCollectorPolicy gets an existing CollectorPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCollectorPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CollectorPolicyState, opts ...pulumi.ResourceOption) (*CollectorPolicy, error) {
	var resource CollectorPolicy
	err := ctx.ReadResource("azure-native:networkfunction/v20220501:CollectorPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CollectorPolicy resources.
type collectorPolicyState struct {
}

type CollectorPolicyState struct {
}

func (CollectorPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*collectorPolicyState)(nil)).Elem()
}

type collectorPolicyArgs struct {
	// Azure Traffic Collector name
	AzureTrafficCollectorName string `pulumi:"azureTrafficCollectorName"`
	// Collector Policy Name
	CollectorPolicyName *string `pulumi:"collectorPolicyName"`
	// Emission policies.
	EmissionPolicies []EmissionPoliciesPropertiesFormat `pulumi:"emissionPolicies"`
	// Ingestion policies.
	IngestionPolicy *IngestionPolicyPropertiesFormat `pulumi:"ingestionPolicy"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a CollectorPolicy resource.
type CollectorPolicyArgs struct {
	// Azure Traffic Collector name
	AzureTrafficCollectorName pulumi.StringInput
	// Collector Policy Name
	CollectorPolicyName pulumi.StringPtrInput
	// Emission policies.
	EmissionPolicies EmissionPoliciesPropertiesFormatArrayInput
	// Ingestion policies.
	IngestionPolicy IngestionPolicyPropertiesFormatPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (CollectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*collectorPolicyArgs)(nil)).Elem()
}

type CollectorPolicyInput interface {
	pulumi.Input

	ToCollectorPolicyOutput() CollectorPolicyOutput
	ToCollectorPolicyOutputWithContext(ctx context.Context) CollectorPolicyOutput
}

func (*CollectorPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectorPolicy)(nil)).Elem()
}

func (i *CollectorPolicy) ToCollectorPolicyOutput() CollectorPolicyOutput {
	return i.ToCollectorPolicyOutputWithContext(context.Background())
}

func (i *CollectorPolicy) ToCollectorPolicyOutputWithContext(ctx context.Context) CollectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CollectorPolicyOutput)
}

type CollectorPolicyOutput struct{ *pulumi.OutputState }

func (CollectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CollectorPolicy)(nil)).Elem()
}

func (o CollectorPolicyOutput) ToCollectorPolicyOutput() CollectorPolicyOutput {
	return o
}

func (o CollectorPolicyOutput) ToCollectorPolicyOutputWithContext(ctx context.Context) CollectorPolicyOutput {
	return o
}

// Emission policies.
func (o CollectorPolicyOutput) EmissionPolicies() EmissionPoliciesPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *CollectorPolicy) EmissionPoliciesPropertiesFormatResponseArrayOutput {
		return v.EmissionPolicies
	}).(EmissionPoliciesPropertiesFormatResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o CollectorPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CollectorPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Ingestion policies.
func (o CollectorPolicyOutput) IngestionPolicy() IngestionPolicyPropertiesFormatResponsePtrOutput {
	return o.ApplyT(func(v *CollectorPolicy) IngestionPolicyPropertiesFormatResponsePtrOutput { return v.IngestionPolicy }).(IngestionPolicyPropertiesFormatResponsePtrOutput)
}

// Azure resource name
func (o CollectorPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CollectorPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state.
func (o CollectorPolicyOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *CollectorPolicy) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o CollectorPolicyOutput) SystemData() CollectorPolicyResponseSystemDataOutput {
	return o.ApplyT(func(v *CollectorPolicy) CollectorPolicyResponseSystemDataOutput { return v.SystemData }).(CollectorPolicyResponseSystemDataOutput)
}

// Azure resource type
func (o CollectorPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CollectorPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CollectorPolicyOutput{})
}
