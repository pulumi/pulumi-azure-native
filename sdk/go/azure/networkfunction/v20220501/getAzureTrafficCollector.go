// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220501

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Azure Traffic Collector resource.
func LookupAzureTrafficCollector(ctx *pulumi.Context, args *LookupAzureTrafficCollectorArgs, opts ...pulumi.InvokeOption) (*LookupAzureTrafficCollectorResult, error) {
	var rv LookupAzureTrafficCollectorResult
	err := ctx.Invoke("azure-native:networkfunction/v20220501:getAzureTrafficCollector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAzureTrafficCollectorArgs struct {
	// Azure Traffic Collector name
	AzureTrafficCollectorName string `pulumi:"azureTrafficCollectorName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Azure Traffic Collector resource.
type LookupAzureTrafficCollectorResult struct {
	// Collector Policies for Azure Traffic Collector.
	CollectorPolicies []CollectorPolicyResponse `pulumi:"collectorPolicies"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData TrackedResourceResponseSystemData `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The virtualHub to which the Azure Traffic Collector belongs.
	VirtualHub *ResourceReferenceResponse `pulumi:"virtualHub"`
}

func LookupAzureTrafficCollectorOutput(ctx *pulumi.Context, args LookupAzureTrafficCollectorOutputArgs, opts ...pulumi.InvokeOption) LookupAzureTrafficCollectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAzureTrafficCollectorResult, error) {
			args := v.(LookupAzureTrafficCollectorArgs)
			r, err := LookupAzureTrafficCollector(ctx, &args, opts...)
			var s LookupAzureTrafficCollectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAzureTrafficCollectorResultOutput)
}

type LookupAzureTrafficCollectorOutputArgs struct {
	// Azure Traffic Collector name
	AzureTrafficCollectorName pulumi.StringInput `pulumi:"azureTrafficCollectorName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAzureTrafficCollectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureTrafficCollectorArgs)(nil)).Elem()
}

// Azure Traffic Collector resource.
type LookupAzureTrafficCollectorResultOutput struct{ *pulumi.OutputState }

func (LookupAzureTrafficCollectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAzureTrafficCollectorResult)(nil)).Elem()
}

func (o LookupAzureTrafficCollectorResultOutput) ToLookupAzureTrafficCollectorResultOutput() LookupAzureTrafficCollectorResultOutput {
	return o
}

func (o LookupAzureTrafficCollectorResultOutput) ToLookupAzureTrafficCollectorResultOutputWithContext(ctx context.Context) LookupAzureTrafficCollectorResultOutput {
	return o
}

// Collector Policies for Azure Traffic Collector.
func (o LookupAzureTrafficCollectorResultOutput) CollectorPolicies() CollectorPolicyResponseArrayOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) []CollectorPolicyResponse { return v.CollectorPolicies }).(CollectorPolicyResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LookupAzureTrafficCollectorResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o LookupAzureTrafficCollectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource location.
func (o LookupAzureTrafficCollectorResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LookupAzureTrafficCollectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application rule collection resource.
func (o LookupAzureTrafficCollectorResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o LookupAzureTrafficCollectorResultOutput) SystemData() TrackedResourceResponseSystemDataOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) TrackedResourceResponseSystemData { return v.SystemData }).(TrackedResourceResponseSystemDataOutput)
}

// Resource tags.
func (o LookupAzureTrafficCollectorResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupAzureTrafficCollectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) string { return v.Type }).(pulumi.StringOutput)
}

// The virtualHub to which the Azure Traffic Collector belongs.
func (o LookupAzureTrafficCollectorResultOutput) VirtualHub() ResourceReferenceResponsePtrOutput {
	return o.ApplyT(func(v LookupAzureTrafficCollectorResult) *ResourceReferenceResponse { return v.VirtualHub }).(ResourceReferenceResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAzureTrafficCollectorResultOutput{})
}
