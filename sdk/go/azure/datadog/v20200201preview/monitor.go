// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200201preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Monitor struct {
	pulumi.CustomResourceState

	Identity IdentityPropertiesResponsePtrOutput `pulumi:"identity"`
	Location pulumi.StringOutput                 `pulumi:"location"`
	// Name of the monitor resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Properties specific to the monitor resource.
	Properties MonitorPropertiesResponseOutput `pulumi:"properties"`
	Sku        ResourceSkuResponsePtrOutput    `pulumi:"sku"`
	Tags       pulumi.StringMapOutput          `pulumi:"tags"`
	// The type of the monitor resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMonitor registers a new resource with the given unique name, arguments, and options.
func NewMonitor(ctx *pulumi.Context,
	name string, args *MonitorArgs, opts ...pulumi.ResourceOption) (*Monitor, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.MonitorName == nil {
		return nil, errors.New("missing required argument 'MonitorName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &MonitorArgs{}
	}
	var resource Monitor
	err := ctx.RegisterResource("azure-nextgen:datadog/v20200201preview:Monitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitor gets an existing Monitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitorState, opts ...pulumi.ResourceOption) (*Monitor, error) {
	var resource Monitor
	err := ctx.ReadResource("azure-nextgen:datadog/v20200201preview:Monitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Monitor resources.
type monitorState struct {
	Identity *IdentityPropertiesResponse `pulumi:"identity"`
	Location *string                     `pulumi:"location"`
	// Name of the monitor resource.
	Name *string `pulumi:"name"`
	// Properties specific to the monitor resource.
	Properties *MonitorPropertiesResponse `pulumi:"properties"`
	Sku        *ResourceSkuResponse       `pulumi:"sku"`
	Tags       map[string]string          `pulumi:"tags"`
	// The type of the monitor resource.
	Type *string `pulumi:"type"`
}

type MonitorState struct {
	Identity IdentityPropertiesResponsePtrInput
	Location pulumi.StringPtrInput
	// Name of the monitor resource.
	Name pulumi.StringPtrInput
	// Properties specific to the monitor resource.
	Properties MonitorPropertiesResponsePtrInput
	Sku        ResourceSkuResponsePtrInput
	Tags       pulumi.StringMapInput
	// The type of the monitor resource.
	Type pulumi.StringPtrInput
}

func (MonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorState)(nil)).Elem()
}

type monitorArgs struct {
	Identity *IdentityProperties `pulumi:"identity"`
	Location string              `pulumi:"location"`
	// Monitor resource name
	MonitorName string `pulumi:"monitorName"`
	// Properties specific to the monitor resource.
	Properties *MonitorProperties `pulumi:"properties"`
	// The name of the resource group to which the Datadog resource belongs.
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	Sku               *ResourceSku      `pulumi:"sku"`
	Tags              map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Monitor resource.
type MonitorArgs struct {
	Identity IdentityPropertiesPtrInput
	Location pulumi.StringInput
	// Monitor resource name
	MonitorName pulumi.StringInput
	// Properties specific to the monitor resource.
	Properties MonitorPropertiesPtrInput
	// The name of the resource group to which the Datadog resource belongs.
	ResourceGroupName pulumi.StringInput
	Sku               ResourceSkuPtrInput
	Tags              pulumi.StringMapInput
}

func (MonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorArgs)(nil)).Elem()
}
