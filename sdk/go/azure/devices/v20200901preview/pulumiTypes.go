// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The set of ARM identities associated with the IoT DPS resource.
type ArmIdentity struct {
	// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
	IdentityType *string `pulumi:"identityType"`
	// The set of UserAssigned identities associated with the IoT DPS resource.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ArmIdentityInput is an input type that accepts ArmIdentityArgs and ArmIdentityOutput values.
// You can construct a concrete instance of `ArmIdentityInput` via:
//
//	ArmIdentityArgs{...}
type ArmIdentityInput interface {
	pulumi.Input

	ToArmIdentityOutput() ArmIdentityOutput
	ToArmIdentityOutputWithContext(context.Context) ArmIdentityOutput
}

// The set of ARM identities associated with the IoT DPS resource.
type ArmIdentityArgs struct {
	// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
	IdentityType pulumi.StringPtrInput `pulumi:"identityType"`
	// The set of UserAssigned identities associated with the IoT DPS resource.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ArmIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdentity)(nil)).Elem()
}

func (i ArmIdentityArgs) ToArmIdentityOutput() ArmIdentityOutput {
	return i.ToArmIdentityOutputWithContext(context.Background())
}

func (i ArmIdentityArgs) ToArmIdentityOutputWithContext(ctx context.Context) ArmIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdentityOutput)
}

func (i ArmIdentityArgs) ToArmIdentityPtrOutput() ArmIdentityPtrOutput {
	return i.ToArmIdentityPtrOutputWithContext(context.Background())
}

func (i ArmIdentityArgs) ToArmIdentityPtrOutputWithContext(ctx context.Context) ArmIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdentityOutput).ToArmIdentityPtrOutputWithContext(ctx)
}

// ArmIdentityPtrInput is an input type that accepts ArmIdentityArgs, ArmIdentityPtr and ArmIdentityPtrOutput values.
// You can construct a concrete instance of `ArmIdentityPtrInput` via:
//
//	        ArmIdentityArgs{...}
//
//	or:
//
//	        nil
type ArmIdentityPtrInput interface {
	pulumi.Input

	ToArmIdentityPtrOutput() ArmIdentityPtrOutput
	ToArmIdentityPtrOutputWithContext(context.Context) ArmIdentityPtrOutput
}

type armIdentityPtrType ArmIdentityArgs

func ArmIdentityPtr(v *ArmIdentityArgs) ArmIdentityPtrInput {
	return (*armIdentityPtrType)(v)
}

func (*armIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdentity)(nil)).Elem()
}

func (i *armIdentityPtrType) ToArmIdentityPtrOutput() ArmIdentityPtrOutput {
	return i.ToArmIdentityPtrOutputWithContext(context.Background())
}

func (i *armIdentityPtrType) ToArmIdentityPtrOutputWithContext(ctx context.Context) ArmIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArmIdentityPtrOutput)
}

// The set of ARM identities associated with the IoT DPS resource.
type ArmIdentityOutput struct{ *pulumi.OutputState }

func (ArmIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdentity)(nil)).Elem()
}

func (o ArmIdentityOutput) ToArmIdentityOutput() ArmIdentityOutput {
	return o
}

func (o ArmIdentityOutput) ToArmIdentityOutputWithContext(ctx context.Context) ArmIdentityOutput {
	return o
}

func (o ArmIdentityOutput) ToArmIdentityPtrOutput() ArmIdentityPtrOutput {
	return o.ToArmIdentityPtrOutputWithContext(context.Background())
}

func (o ArmIdentityOutput) ToArmIdentityPtrOutputWithContext(ctx context.Context) ArmIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArmIdentity) *ArmIdentity {
		return &v
	}).(ArmIdentityPtrOutput)
}

// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
func (o ArmIdentityOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmIdentity) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// The set of UserAssigned identities associated with the IoT DPS resource.
func (o ArmIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ArmIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ArmIdentityPtrOutput struct{ *pulumi.OutputState }

func (ArmIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdentity)(nil)).Elem()
}

func (o ArmIdentityPtrOutput) ToArmIdentityPtrOutput() ArmIdentityPtrOutput {
	return o
}

func (o ArmIdentityPtrOutput) ToArmIdentityPtrOutputWithContext(ctx context.Context) ArmIdentityPtrOutput {
	return o
}

func (o ArmIdentityPtrOutput) Elem() ArmIdentityOutput {
	return o.ApplyT(func(v *ArmIdentity) ArmIdentity {
		if v != nil {
			return *v
		}
		var ret ArmIdentity
		return ret
	}).(ArmIdentityOutput)
}

// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
func (o ArmIdentityPtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdentity) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// The set of UserAssigned identities associated with the IoT DPS resource.
func (o ArmIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ArmIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// The set of ARM identities associated with the IoT DPS resource.
type ArmIdentityResponse struct {
	// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
	IdentityType *string `pulumi:"identityType"`
	// Principal Id
	PrincipalId string `pulumi:"principalId"`
	// Tenant Id
	TenantId string `pulumi:"tenantId"`
	// The set of UserAssigned identities associated with the IoT DPS resource.
	UserAssignedIdentities map[string]ArmUserIdentityResponse `pulumi:"userAssignedIdentities"`
}

// The set of ARM identities associated with the IoT DPS resource.
type ArmIdentityResponseOutput struct{ *pulumi.OutputState }

func (ArmIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdentityResponse)(nil)).Elem()
}

func (o ArmIdentityResponseOutput) ToArmIdentityResponseOutput() ArmIdentityResponseOutput {
	return o
}

func (o ArmIdentityResponseOutput) ToArmIdentityResponseOutputWithContext(ctx context.Context) ArmIdentityResponseOutput {
	return o
}

// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
func (o ArmIdentityResponseOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmIdentityResponse) *string { return v.IdentityType }).(pulumi.StringPtrOutput)
}

// Principal Id
func (o ArmIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant Id
func (o ArmIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The set of UserAssigned identities associated with the IoT DPS resource.
func (o ArmIdentityResponseOutput) UserAssignedIdentities() ArmUserIdentityResponseMapOutput {
	return o.ApplyT(func(v ArmIdentityResponse) map[string]ArmUserIdentityResponse { return v.UserAssignedIdentities }).(ArmUserIdentityResponseMapOutput)
}

type ArmIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ArmIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdentityResponse)(nil)).Elem()
}

func (o ArmIdentityResponsePtrOutput) ToArmIdentityResponsePtrOutput() ArmIdentityResponsePtrOutput {
	return o
}

func (o ArmIdentityResponsePtrOutput) ToArmIdentityResponsePtrOutputWithContext(ctx context.Context) ArmIdentityResponsePtrOutput {
	return o
}

func (o ArmIdentityResponsePtrOutput) Elem() ArmIdentityResponseOutput {
	return o.ApplyT(func(v *ArmIdentityResponse) ArmIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ArmIdentityResponse
		return ret
	}).(ArmIdentityResponseOutput)
}

// Identity type. Only allowed values are SystemAssigned and UserAssigned. Comma separated if both for ex: SystemAssigned,UserAssigned.
func (o ArmIdentityResponsePtrOutput) IdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityType
	}).(pulumi.StringPtrOutput)
}

// Principal Id
func (o ArmIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant Id
func (o ArmIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The set of UserAssigned identities associated with the IoT DPS resource.
func (o ArmIdentityResponsePtrOutput) UserAssignedIdentities() ArmUserIdentityResponseMapOutput {
	return o.ApplyT(func(v *ArmIdentityResponse) map[string]ArmUserIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ArmUserIdentityResponseMapOutput)
}

// The ARM UserAssigned identity information
type ArmUserIdentityResponse struct {
	// Client Id
	ClientId string `pulumi:"clientId"`
	// Principal Id
	PrincipalId string `pulumi:"principalId"`
}

// The ARM UserAssigned identity information
type ArmUserIdentityResponseOutput struct{ *pulumi.OutputState }

func (ArmUserIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmUserIdentityResponse)(nil)).Elem()
}

func (o ArmUserIdentityResponseOutput) ToArmUserIdentityResponseOutput() ArmUserIdentityResponseOutput {
	return o
}

func (o ArmUserIdentityResponseOutput) ToArmUserIdentityResponseOutputWithContext(ctx context.Context) ArmUserIdentityResponseOutput {
	return o
}

// Client Id
func (o ArmUserIdentityResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ArmUserIdentityResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id
func (o ArmUserIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ArmUserIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ArmUserIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (ArmUserIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ArmUserIdentityResponse)(nil)).Elem()
}

func (o ArmUserIdentityResponseMapOutput) ToArmUserIdentityResponseMapOutput() ArmUserIdentityResponseMapOutput {
	return o
}

func (o ArmUserIdentityResponseMapOutput) ToArmUserIdentityResponseMapOutputWithContext(ctx context.Context) ArmUserIdentityResponseMapOutput {
	return o
}

func (o ArmUserIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) ArmUserIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ArmUserIdentityResponse {
		return vs[0].(map[string]ArmUserIdentityResponse)[vs[1].(string)]
	}).(ArmUserIdentityResponseOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponse struct {
	// The certificate's creation date and time.
	Created string `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry string `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified bool `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject string `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated string `pulumi:"updated"`
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesResponse)(nil)).Elem()
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutput() CertificatePropertiesResponseOutput {
	return o
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutputWithContext(ctx context.Context) CertificatePropertiesResponseOutput {
	return o
}

// The certificate's creation date and time.
func (o CertificatePropertiesResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Created }).(pulumi.StringOutput)
}

// The certificate's expiration date and time.
func (o CertificatePropertiesResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesResponseOutput) IsVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) bool { return v.IsVerified }).(pulumi.BoolOutput)
}

// The certificate's subject name.
func (o CertificatePropertiesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The certificate's thumbprint.
func (o CertificatePropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The certificate's last update date and time.
func (o CertificatePropertiesResponseOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Updated }).(pulumi.StringOutput)
}

// The properties of the identity used to access the key encryption key in KeyVault.
type EncryptionKeyIdentity struct {
	// The user assigned identity.
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// EncryptionKeyIdentityInput is an input type that accepts EncryptionKeyIdentityArgs and EncryptionKeyIdentityOutput values.
// You can construct a concrete instance of `EncryptionKeyIdentityInput` via:
//
//	EncryptionKeyIdentityArgs{...}
type EncryptionKeyIdentityInput interface {
	pulumi.Input

	ToEncryptionKeyIdentityOutput() EncryptionKeyIdentityOutput
	ToEncryptionKeyIdentityOutputWithContext(context.Context) EncryptionKeyIdentityOutput
}

// The properties of the identity used to access the key encryption key in KeyVault.
type EncryptionKeyIdentityArgs struct {
	// The user assigned identity.
	UserAssignedIdentity pulumi.StringPtrInput `pulumi:"userAssignedIdentity"`
}

func (EncryptionKeyIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyIdentity)(nil)).Elem()
}

func (i EncryptionKeyIdentityArgs) ToEncryptionKeyIdentityOutput() EncryptionKeyIdentityOutput {
	return i.ToEncryptionKeyIdentityOutputWithContext(context.Background())
}

func (i EncryptionKeyIdentityArgs) ToEncryptionKeyIdentityOutputWithContext(ctx context.Context) EncryptionKeyIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyIdentityOutput)
}

func (i EncryptionKeyIdentityArgs) ToEncryptionKeyIdentityPtrOutput() EncryptionKeyIdentityPtrOutput {
	return i.ToEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i EncryptionKeyIdentityArgs) ToEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyIdentityOutput).ToEncryptionKeyIdentityPtrOutputWithContext(ctx)
}

// EncryptionKeyIdentityPtrInput is an input type that accepts EncryptionKeyIdentityArgs, EncryptionKeyIdentityPtr and EncryptionKeyIdentityPtrOutput values.
// You can construct a concrete instance of `EncryptionKeyIdentityPtrInput` via:
//
//	        EncryptionKeyIdentityArgs{...}
//
//	or:
//
//	        nil
type EncryptionKeyIdentityPtrInput interface {
	pulumi.Input

	ToEncryptionKeyIdentityPtrOutput() EncryptionKeyIdentityPtrOutput
	ToEncryptionKeyIdentityPtrOutputWithContext(context.Context) EncryptionKeyIdentityPtrOutput
}

type encryptionKeyIdentityPtrType EncryptionKeyIdentityArgs

func EncryptionKeyIdentityPtr(v *EncryptionKeyIdentityArgs) EncryptionKeyIdentityPtrInput {
	return (*encryptionKeyIdentityPtrType)(v)
}

func (*encryptionKeyIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyIdentity)(nil)).Elem()
}

func (i *encryptionKeyIdentityPtrType) ToEncryptionKeyIdentityPtrOutput() EncryptionKeyIdentityPtrOutput {
	return i.ToEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (i *encryptionKeyIdentityPtrType) ToEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionKeyIdentityPtrOutput)
}

// The properties of the identity used to access the key encryption key in KeyVault.
type EncryptionKeyIdentityOutput struct{ *pulumi.OutputState }

func (EncryptionKeyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionKeyIdentityOutput) ToEncryptionKeyIdentityOutput() EncryptionKeyIdentityOutput {
	return o
}

func (o EncryptionKeyIdentityOutput) ToEncryptionKeyIdentityOutputWithContext(ctx context.Context) EncryptionKeyIdentityOutput {
	return o
}

func (o EncryptionKeyIdentityOutput) ToEncryptionKeyIdentityPtrOutput() EncryptionKeyIdentityPtrOutput {
	return o.ToEncryptionKeyIdentityPtrOutputWithContext(context.Background())
}

func (o EncryptionKeyIdentityOutput) ToEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionKeyIdentity) *EncryptionKeyIdentity {
		return &v
	}).(EncryptionKeyIdentityPtrOutput)
}

// The user assigned identity.
func (o EncryptionKeyIdentityOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyIdentity) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type EncryptionKeyIdentityPtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyIdentity)(nil)).Elem()
}

func (o EncryptionKeyIdentityPtrOutput) ToEncryptionKeyIdentityPtrOutput() EncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionKeyIdentityPtrOutput) ToEncryptionKeyIdentityPtrOutputWithContext(ctx context.Context) EncryptionKeyIdentityPtrOutput {
	return o
}

func (o EncryptionKeyIdentityPtrOutput) Elem() EncryptionKeyIdentityOutput {
	return o.ApplyT(func(v *EncryptionKeyIdentity) EncryptionKeyIdentity {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyIdentity
		return ret
	}).(EncryptionKeyIdentityOutput)
}

// The user assigned identity.
func (o EncryptionKeyIdentityPtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The properties of the identity used to access the key encryption key in KeyVault.
type EncryptionKeyIdentityResponse struct {
	// The user assigned identity.
	UserAssignedIdentity *string `pulumi:"userAssignedIdentity"`
}

// The properties of the identity used to access the key encryption key in KeyVault.
type EncryptionKeyIdentityResponseOutput struct{ *pulumi.OutputState }

func (EncryptionKeyIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionKeyIdentityResponse)(nil)).Elem()
}

func (o EncryptionKeyIdentityResponseOutput) ToEncryptionKeyIdentityResponseOutput() EncryptionKeyIdentityResponseOutput {
	return o
}

func (o EncryptionKeyIdentityResponseOutput) ToEncryptionKeyIdentityResponseOutputWithContext(ctx context.Context) EncryptionKeyIdentityResponseOutput {
	return o
}

// The user assigned identity.
func (o EncryptionKeyIdentityResponseOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionKeyIdentityResponse) *string { return v.UserAssignedIdentity }).(pulumi.StringPtrOutput)
}

type EncryptionKeyIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionKeyIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionKeyIdentityResponse)(nil)).Elem()
}

func (o EncryptionKeyIdentityResponsePtrOutput) ToEncryptionKeyIdentityResponsePtrOutput() EncryptionKeyIdentityResponsePtrOutput {
	return o
}

func (o EncryptionKeyIdentityResponsePtrOutput) ToEncryptionKeyIdentityResponsePtrOutputWithContext(ctx context.Context) EncryptionKeyIdentityResponsePtrOutput {
	return o
}

func (o EncryptionKeyIdentityResponsePtrOutput) Elem() EncryptionKeyIdentityResponseOutput {
	return o.ApplyT(func(v *EncryptionKeyIdentityResponse) EncryptionKeyIdentityResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionKeyIdentityResponse
		return ret
	}).(EncryptionKeyIdentityResponseOutput)
}

// The user assigned identity.
func (o EncryptionKeyIdentityResponsePtrOutput) UserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionKeyIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentity
	}).(pulumi.StringPtrOutput)
}

// The customer-managed encryption key (CMK) properties for the IoT DPS instance.
type EncryptionPropertiesDescription struct {
	// The identity used to access the encryption key in KeyVault.
	Identity *EncryptionKeyIdentity `pulumi:"identity"`
	// The source of the encryption key. Typically, Microsoft.KeyVault
	KeySource *string `pulumi:"keySource"`
	// The properties of the encryption key configured in KeyVault.
	KeyVaultProperties []KeyVaultKeyProperties `pulumi:"keyVaultProperties"`
}

// EncryptionPropertiesDescriptionInput is an input type that accepts EncryptionPropertiesDescriptionArgs and EncryptionPropertiesDescriptionOutput values.
// You can construct a concrete instance of `EncryptionPropertiesDescriptionInput` via:
//
//	EncryptionPropertiesDescriptionArgs{...}
type EncryptionPropertiesDescriptionInput interface {
	pulumi.Input

	ToEncryptionPropertiesDescriptionOutput() EncryptionPropertiesDescriptionOutput
	ToEncryptionPropertiesDescriptionOutputWithContext(context.Context) EncryptionPropertiesDescriptionOutput
}

// The customer-managed encryption key (CMK) properties for the IoT DPS instance.
type EncryptionPropertiesDescriptionArgs struct {
	// The identity used to access the encryption key in KeyVault.
	Identity EncryptionKeyIdentityPtrInput `pulumi:"identity"`
	// The source of the encryption key. Typically, Microsoft.KeyVault
	KeySource pulumi.StringPtrInput `pulumi:"keySource"`
	// The properties of the encryption key configured in KeyVault.
	KeyVaultProperties KeyVaultKeyPropertiesArrayInput `pulumi:"keyVaultProperties"`
}

func (EncryptionPropertiesDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertiesDescription)(nil)).Elem()
}

func (i EncryptionPropertiesDescriptionArgs) ToEncryptionPropertiesDescriptionOutput() EncryptionPropertiesDescriptionOutput {
	return i.ToEncryptionPropertiesDescriptionOutputWithContext(context.Background())
}

func (i EncryptionPropertiesDescriptionArgs) ToEncryptionPropertiesDescriptionOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesDescriptionOutput)
}

func (i EncryptionPropertiesDescriptionArgs) ToEncryptionPropertiesDescriptionPtrOutput() EncryptionPropertiesDescriptionPtrOutput {
	return i.ToEncryptionPropertiesDescriptionPtrOutputWithContext(context.Background())
}

func (i EncryptionPropertiesDescriptionArgs) ToEncryptionPropertiesDescriptionPtrOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesDescriptionOutput).ToEncryptionPropertiesDescriptionPtrOutputWithContext(ctx)
}

// EncryptionPropertiesDescriptionPtrInput is an input type that accepts EncryptionPropertiesDescriptionArgs, EncryptionPropertiesDescriptionPtr and EncryptionPropertiesDescriptionPtrOutput values.
// You can construct a concrete instance of `EncryptionPropertiesDescriptionPtrInput` via:
//
//	        EncryptionPropertiesDescriptionArgs{...}
//
//	or:
//
//	        nil
type EncryptionPropertiesDescriptionPtrInput interface {
	pulumi.Input

	ToEncryptionPropertiesDescriptionPtrOutput() EncryptionPropertiesDescriptionPtrOutput
	ToEncryptionPropertiesDescriptionPtrOutputWithContext(context.Context) EncryptionPropertiesDescriptionPtrOutput
}

type encryptionPropertiesDescriptionPtrType EncryptionPropertiesDescriptionArgs

func EncryptionPropertiesDescriptionPtr(v *EncryptionPropertiesDescriptionArgs) EncryptionPropertiesDescriptionPtrInput {
	return (*encryptionPropertiesDescriptionPtrType)(v)
}

func (*encryptionPropertiesDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertiesDescription)(nil)).Elem()
}

func (i *encryptionPropertiesDescriptionPtrType) ToEncryptionPropertiesDescriptionPtrOutput() EncryptionPropertiesDescriptionPtrOutput {
	return i.ToEncryptionPropertiesDescriptionPtrOutputWithContext(context.Background())
}

func (i *encryptionPropertiesDescriptionPtrType) ToEncryptionPropertiesDescriptionPtrOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionPropertiesDescriptionPtrOutput)
}

// The customer-managed encryption key (CMK) properties for the IoT DPS instance.
type EncryptionPropertiesDescriptionOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertiesDescription)(nil)).Elem()
}

func (o EncryptionPropertiesDescriptionOutput) ToEncryptionPropertiesDescriptionOutput() EncryptionPropertiesDescriptionOutput {
	return o
}

func (o EncryptionPropertiesDescriptionOutput) ToEncryptionPropertiesDescriptionOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionOutput {
	return o
}

func (o EncryptionPropertiesDescriptionOutput) ToEncryptionPropertiesDescriptionPtrOutput() EncryptionPropertiesDescriptionPtrOutput {
	return o.ToEncryptionPropertiesDescriptionPtrOutputWithContext(context.Background())
}

func (o EncryptionPropertiesDescriptionOutput) ToEncryptionPropertiesDescriptionPtrOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EncryptionPropertiesDescription) *EncryptionPropertiesDescription {
		return &v
	}).(EncryptionPropertiesDescriptionPtrOutput)
}

// The identity used to access the encryption key in KeyVault.
func (o EncryptionPropertiesDescriptionOutput) Identity() EncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescription) *EncryptionKeyIdentity { return v.Identity }).(EncryptionKeyIdentityPtrOutput)
}

// The source of the encryption key. Typically, Microsoft.KeyVault
func (o EncryptionPropertiesDescriptionOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescription) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// The properties of the encryption key configured in KeyVault.
func (o EncryptionPropertiesDescriptionOutput) KeyVaultProperties() KeyVaultKeyPropertiesArrayOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescription) []KeyVaultKeyProperties { return v.KeyVaultProperties }).(KeyVaultKeyPropertiesArrayOutput)
}

type EncryptionPropertiesDescriptionPtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertiesDescription)(nil)).Elem()
}

func (o EncryptionPropertiesDescriptionPtrOutput) ToEncryptionPropertiesDescriptionPtrOutput() EncryptionPropertiesDescriptionPtrOutput {
	return o
}

func (o EncryptionPropertiesDescriptionPtrOutput) ToEncryptionPropertiesDescriptionPtrOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionPtrOutput {
	return o
}

func (o EncryptionPropertiesDescriptionPtrOutput) Elem() EncryptionPropertiesDescriptionOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescription) EncryptionPropertiesDescription {
		if v != nil {
			return *v
		}
		var ret EncryptionPropertiesDescription
		return ret
	}).(EncryptionPropertiesDescriptionOutput)
}

// The identity used to access the encryption key in KeyVault.
func (o EncryptionPropertiesDescriptionPtrOutput) Identity() EncryptionKeyIdentityPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescription) *EncryptionKeyIdentity {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(EncryptionKeyIdentityPtrOutput)
}

// The source of the encryption key. Typically, Microsoft.KeyVault
func (o EncryptionPropertiesDescriptionPtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescription) *string {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(pulumi.StringPtrOutput)
}

// The properties of the encryption key configured in KeyVault.
func (o EncryptionPropertiesDescriptionPtrOutput) KeyVaultProperties() KeyVaultKeyPropertiesArrayOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescription) []KeyVaultKeyProperties {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultKeyPropertiesArrayOutput)
}

// The customer-managed encryption key (CMK) properties for the IoT DPS instance.
type EncryptionPropertiesDescriptionResponse struct {
	// The identity used to access the encryption key in KeyVault.
	Identity *EncryptionKeyIdentityResponse `pulumi:"identity"`
	// The source of the encryption key. Typically, Microsoft.KeyVault
	KeySource *string `pulumi:"keySource"`
	// The properties of the encryption key configured in KeyVault.
	KeyVaultProperties []KeyVaultKeyPropertiesResponse `pulumi:"keyVaultProperties"`
}

// The customer-managed encryption key (CMK) properties for the IoT DPS instance.
type EncryptionPropertiesDescriptionResponseOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EncryptionPropertiesDescriptionResponse)(nil)).Elem()
}

func (o EncryptionPropertiesDescriptionResponseOutput) ToEncryptionPropertiesDescriptionResponseOutput() EncryptionPropertiesDescriptionResponseOutput {
	return o
}

func (o EncryptionPropertiesDescriptionResponseOutput) ToEncryptionPropertiesDescriptionResponseOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionResponseOutput {
	return o
}

// The identity used to access the encryption key in KeyVault.
func (o EncryptionPropertiesDescriptionResponseOutput) Identity() EncryptionKeyIdentityResponsePtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescriptionResponse) *EncryptionKeyIdentityResponse { return v.Identity }).(EncryptionKeyIdentityResponsePtrOutput)
}

// The source of the encryption key. Typically, Microsoft.KeyVault
func (o EncryptionPropertiesDescriptionResponseOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescriptionResponse) *string { return v.KeySource }).(pulumi.StringPtrOutput)
}

// The properties of the encryption key configured in KeyVault.
func (o EncryptionPropertiesDescriptionResponseOutput) KeyVaultProperties() KeyVaultKeyPropertiesResponseArrayOutput {
	return o.ApplyT(func(v EncryptionPropertiesDescriptionResponse) []KeyVaultKeyPropertiesResponse {
		return v.KeyVaultProperties
	}).(KeyVaultKeyPropertiesResponseArrayOutput)
}

type EncryptionPropertiesDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (EncryptionPropertiesDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionPropertiesDescriptionResponse)(nil)).Elem()
}

func (o EncryptionPropertiesDescriptionResponsePtrOutput) ToEncryptionPropertiesDescriptionResponsePtrOutput() EncryptionPropertiesDescriptionResponsePtrOutput {
	return o
}

func (o EncryptionPropertiesDescriptionResponsePtrOutput) ToEncryptionPropertiesDescriptionResponsePtrOutputWithContext(ctx context.Context) EncryptionPropertiesDescriptionResponsePtrOutput {
	return o
}

func (o EncryptionPropertiesDescriptionResponsePtrOutput) Elem() EncryptionPropertiesDescriptionResponseOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescriptionResponse) EncryptionPropertiesDescriptionResponse {
		if v != nil {
			return *v
		}
		var ret EncryptionPropertiesDescriptionResponse
		return ret
	}).(EncryptionPropertiesDescriptionResponseOutput)
}

// The identity used to access the encryption key in KeyVault.
func (o EncryptionPropertiesDescriptionResponsePtrOutput) Identity() EncryptionKeyIdentityResponsePtrOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescriptionResponse) *EncryptionKeyIdentityResponse {
		if v == nil {
			return nil
		}
		return v.Identity
	}).(EncryptionKeyIdentityResponsePtrOutput)
}

// The source of the encryption key. Typically, Microsoft.KeyVault
func (o EncryptionPropertiesDescriptionResponsePtrOutput) KeySource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeySource
	}).(pulumi.StringPtrOutput)
}

// The properties of the encryption key configured in KeyVault.
func (o EncryptionPropertiesDescriptionResponsePtrOutput) KeyVaultProperties() KeyVaultKeyPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *EncryptionPropertiesDescriptionResponse) []KeyVaultKeyPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.KeyVaultProperties
	}).(KeyVaultKeyPropertiesResponseArrayOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescription struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy *string `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleAccessRightsDescription `pulumi:"authorizationPolicies"`
	// The encryption properties for the IoT DPS instance.
	Encryption *EncryptionPropertiesDescription `pulumi:"encryption"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs []IotHubDefinitionDescription `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules []TargetIpFilterRule `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections []PrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Current state of the provisioning service.
	State *string `pulumi:"state"`
}

// IotDpsPropertiesDescriptionInput is an input type that accepts IotDpsPropertiesDescriptionArgs and IotDpsPropertiesDescriptionOutput values.
// You can construct a concrete instance of `IotDpsPropertiesDescriptionInput` via:
//
//	IotDpsPropertiesDescriptionArgs{...}
type IotDpsPropertiesDescriptionInput interface {
	pulumi.Input

	ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput
	ToIotDpsPropertiesDescriptionOutputWithContext(context.Context) IotDpsPropertiesDescriptionOutput
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionArgs struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy pulumi.StringPtrInput `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput `pulumi:"authorizationPolicies"`
	// The encryption properties for the IoT DPS instance.
	Encryption EncryptionPropertiesDescriptionPtrInput `pulumi:"encryption"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs IotHubDefinitionDescriptionArrayInput `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules TargetIpFilterRuleArrayInput `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections PrivateEndpointConnectionArrayInput `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Current state of the provisioning service.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (IotDpsPropertiesDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescription)(nil)).Elem()
}

func (i IotDpsPropertiesDescriptionArgs) ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput {
	return i.ToIotDpsPropertiesDescriptionOutputWithContext(context.Background())
}

func (i IotDpsPropertiesDescriptionArgs) ToIotDpsPropertiesDescriptionOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDpsPropertiesDescriptionOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionOutput struct{ *pulumi.OutputState }

func (IotDpsPropertiesDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescription)(nil)).Elem()
}

func (o IotDpsPropertiesDescriptionOutput) ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput {
	return o
}

func (o IotDpsPropertiesDescriptionOutput) ToIotDpsPropertiesDescriptionOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionOutput {
	return o
}

// Allocation policy to be used by this provisioning service.
func (o IotDpsPropertiesDescriptionOutput) AllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.AllocationPolicy }).(pulumi.StringPtrOutput)
}

// List of authorization keys for a provisioning service.
func (o IotDpsPropertiesDescriptionOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []SharedAccessSignatureAuthorizationRuleAccessRightsDescription {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput)
}

// The encryption properties for the IoT DPS instance.
func (o IotDpsPropertiesDescriptionOutput) Encryption() EncryptionPropertiesDescriptionPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *EncryptionPropertiesDescription { return v.Encryption }).(EncryptionPropertiesDescriptionPtrOutput)
}

// List of IoT hubs associated with this provisioning service.
func (o IotDpsPropertiesDescriptionOutput) IotHubs() IotHubDefinitionDescriptionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []IotHubDefinitionDescription { return v.IotHubs }).(IotHubDefinitionDescriptionArrayOutput)
}

// The IP filter rules.
func (o IotDpsPropertiesDescriptionOutput) IpFilterRules() TargetIpFilterRuleArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []TargetIpFilterRule { return v.IpFilterRules }).(TargetIpFilterRuleArrayOutput)
}

// Private endpoint connections created on this IotHub
func (o IotDpsPropertiesDescriptionOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []PrivateEndpointConnection { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionArrayOutput)
}

// The ARM provisioning state of the provisioning service.
func (o IotDpsPropertiesDescriptionOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Whether requests from Public Network are allowed
func (o IotDpsPropertiesDescriptionOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Current state of the provisioning service.
func (o IotDpsPropertiesDescriptionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.State }).(pulumi.StringPtrOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionResponse struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy *string `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse `pulumi:"authorizationPolicies"`
	// Device endpoint for this provisioning service.
	DeviceProvisioningHostName string `pulumi:"deviceProvisioningHostName"`
	// The encryption properties for the IoT DPS instance.
	Encryption *EncryptionPropertiesDescriptionResponse `pulumi:"encryption"`
	// Unique identifier of this provisioning service.
	IdScope string `pulumi:"idScope"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs []IotHubDefinitionDescriptionResponse `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules []TargetIpFilterRuleResponse `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Service endpoint for provisioning service.
	ServiceOperationsHostName string `pulumi:"serviceOperationsHostName"`
	// Current state of the provisioning service.
	State *string `pulumi:"state"`
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionResponseOutput struct{ *pulumi.OutputState }

func (IotDpsPropertiesDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescriptionResponse)(nil)).Elem()
}

func (o IotDpsPropertiesDescriptionResponseOutput) ToIotDpsPropertiesDescriptionResponseOutput() IotDpsPropertiesDescriptionResponseOutput {
	return o
}

func (o IotDpsPropertiesDescriptionResponseOutput) ToIotDpsPropertiesDescriptionResponseOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionResponseOutput {
	return o
}

// Allocation policy to be used by this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) AllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.AllocationPolicy }).(pulumi.StringPtrOutput)
}

// List of authorization keys for a provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput)
}

// Device endpoint for this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) DeviceProvisioningHostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.DeviceProvisioningHostName }).(pulumi.StringOutput)
}

// The encryption properties for the IoT DPS instance.
func (o IotDpsPropertiesDescriptionResponseOutput) Encryption() EncryptionPropertiesDescriptionResponsePtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *EncryptionPropertiesDescriptionResponse {
		return v.Encryption
	}).(EncryptionPropertiesDescriptionResponsePtrOutput)
}

// Unique identifier of this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) IdScope() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.IdScope }).(pulumi.StringOutput)
}

// List of IoT hubs associated with this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) IotHubs() IotHubDefinitionDescriptionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []IotHubDefinitionDescriptionResponse { return v.IotHubs }).(IotHubDefinitionDescriptionResponseArrayOutput)
}

// The IP filter rules.
func (o IotDpsPropertiesDescriptionResponseOutput) IpFilterRules() TargetIpFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []TargetIpFilterRuleResponse { return v.IpFilterRules }).(TargetIpFilterRuleResponseArrayOutput)
}

// Private endpoint connections created on this IotHub
func (o IotDpsPropertiesDescriptionResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The ARM provisioning state of the provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Whether requests from Public Network are allowed
func (o IotDpsPropertiesDescriptionResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Service endpoint for provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) ServiceOperationsHostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.ServiceOperationsHostName }).(pulumi.StringOutput)
}

// Current state of the provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfo struct {
	// The number of units to provision
	Capacity *float64 `pulumi:"capacity"`
	// Sku name.
	Name *string `pulumi:"name"`
}

// IotDpsSkuInfoInput is an input type that accepts IotDpsSkuInfoArgs and IotDpsSkuInfoOutput values.
// You can construct a concrete instance of `IotDpsSkuInfoInput` via:
//
//	IotDpsSkuInfoArgs{...}
type IotDpsSkuInfoInput interface {
	pulumi.Input

	ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput
	ToIotDpsSkuInfoOutputWithContext(context.Context) IotDpsSkuInfoOutput
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoArgs struct {
	// The number of units to provision
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// Sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IotDpsSkuInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfo)(nil)).Elem()
}

func (i IotDpsSkuInfoArgs) ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput {
	return i.ToIotDpsSkuInfoOutputWithContext(context.Background())
}

func (i IotDpsSkuInfoArgs) ToIotDpsSkuInfoOutputWithContext(ctx context.Context) IotDpsSkuInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDpsSkuInfoOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoOutput struct{ *pulumi.OutputState }

func (IotDpsSkuInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfo)(nil)).Elem()
}

func (o IotDpsSkuInfoOutput) ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput {
	return o
}

func (o IotDpsSkuInfoOutput) ToIotDpsSkuInfoOutputWithContext(ctx context.Context) IotDpsSkuInfoOutput {
	return o
}

// The number of units to provision
func (o IotDpsSkuInfoOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfo) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// Sku name.
func (o IotDpsSkuInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoResponse struct {
	// The number of units to provision
	Capacity *float64 `pulumi:"capacity"`
	// Sku name.
	Name *string `pulumi:"name"`
	// Pricing tier name of the provisioning service.
	Tier string `pulumi:"tier"`
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoResponseOutput struct{ *pulumi.OutputState }

func (IotDpsSkuInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfoResponse)(nil)).Elem()
}

func (o IotDpsSkuInfoResponseOutput) ToIotDpsSkuInfoResponseOutput() IotDpsSkuInfoResponseOutput {
	return o
}

func (o IotDpsSkuInfoResponseOutput) ToIotDpsSkuInfoResponseOutputWithContext(ctx context.Context) IotDpsSkuInfoResponseOutput {
	return o
}

// The number of units to provision
func (o IotDpsSkuInfoResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// Sku name.
func (o IotDpsSkuInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pricing tier name of the provisioning service.
func (o IotDpsSkuInfoResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescription struct {
	// weight to apply for a given iot h.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString string `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location string `pulumi:"location"`
}

// IotHubDefinitionDescriptionInput is an input type that accepts IotHubDefinitionDescriptionArgs and IotHubDefinitionDescriptionOutput values.
// You can construct a concrete instance of `IotHubDefinitionDescriptionInput` via:
//
//	IotHubDefinitionDescriptionArgs{...}
type IotHubDefinitionDescriptionInput interface {
	pulumi.Input

	ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput
	ToIotHubDefinitionDescriptionOutputWithContext(context.Context) IotHubDefinitionDescriptionOutput
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionArgs struct {
	// weight to apply for a given iot h.
	AllocationWeight pulumi.IntPtrInput `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy pulumi.BoolPtrInput `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location pulumi.StringInput `pulumi:"location"`
}

func (IotHubDefinitionDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescription)(nil)).Elem()
}

func (i IotHubDefinitionDescriptionArgs) ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput {
	return i.ToIotHubDefinitionDescriptionOutputWithContext(context.Background())
}

func (i IotHubDefinitionDescriptionArgs) ToIotHubDefinitionDescriptionOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDefinitionDescriptionOutput)
}

// IotHubDefinitionDescriptionArrayInput is an input type that accepts IotHubDefinitionDescriptionArray and IotHubDefinitionDescriptionArrayOutput values.
// You can construct a concrete instance of `IotHubDefinitionDescriptionArrayInput` via:
//
//	IotHubDefinitionDescriptionArray{ IotHubDefinitionDescriptionArgs{...} }
type IotHubDefinitionDescriptionArrayInput interface {
	pulumi.Input

	ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput
	ToIotHubDefinitionDescriptionArrayOutputWithContext(context.Context) IotHubDefinitionDescriptionArrayOutput
}

type IotHubDefinitionDescriptionArray []IotHubDefinitionDescriptionInput

func (IotHubDefinitionDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescription)(nil)).Elem()
}

func (i IotHubDefinitionDescriptionArray) ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput {
	return i.ToIotHubDefinitionDescriptionArrayOutputWithContext(context.Background())
}

func (i IotHubDefinitionDescriptionArray) ToIotHubDefinitionDescriptionArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDefinitionDescriptionArrayOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescription)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionOutput) ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput {
	return o
}

func (o IotHubDefinitionDescriptionOutput) ToIotHubDefinitionDescriptionOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionOutput {
	return o
}

// weight to apply for a given iot h.
func (o IotHubDefinitionDescriptionOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// flag for applying allocationPolicy or not for a given iot hub.
func (o IotHubDefinitionDescriptionOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// Connection string of the IoT hub.
func (o IotHubDefinitionDescriptionOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// ARM region of the IoT hub.
func (o IotHubDefinitionDescriptionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) string { return v.Location }).(pulumi.StringOutput)
}

type IotHubDefinitionDescriptionArrayOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescription)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionArrayOutput) ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionArrayOutput) ToIotHubDefinitionDescriptionArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionArrayOutput) Index(i pulumi.IntInput) IotHubDefinitionDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDefinitionDescription {
		return vs[0].([]IotHubDefinitionDescription)[vs[1].(int)]
	}).(IotHubDefinitionDescriptionOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionResponse struct {
	// weight to apply for a given iot h.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString string `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location string `pulumi:"location"`
	// Host name of the IoT hub.
	Name string `pulumi:"name"`
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionResponseOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescriptionResponse)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionResponseOutput) ToIotHubDefinitionDescriptionResponseOutput() IotHubDefinitionDescriptionResponseOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseOutput) ToIotHubDefinitionDescriptionResponseOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionResponseOutput {
	return o
}

// weight to apply for a given iot h.
func (o IotHubDefinitionDescriptionResponseOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// flag for applying allocationPolicy or not for a given iot hub.
func (o IotHubDefinitionDescriptionResponseOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// Connection string of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// ARM region of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Host name of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubDefinitionDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescriptionResponse)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) ToIotHubDefinitionDescriptionResponseArrayOutput() IotHubDefinitionDescriptionResponseArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) ToIotHubDefinitionDescriptionResponseArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionResponseArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) Index(i pulumi.IntInput) IotHubDefinitionDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDefinitionDescriptionResponse {
		return vs[0].([]IotHubDefinitionDescriptionResponse)[vs[1].(int)]
	}).(IotHubDefinitionDescriptionResponseOutput)
}

// The properties of the KeyVault key.
type KeyVaultKeyProperties struct {
	// The identifier of the key.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// KeyVaultKeyPropertiesInput is an input type that accepts KeyVaultKeyPropertiesArgs and KeyVaultKeyPropertiesOutput values.
// You can construct a concrete instance of `KeyVaultKeyPropertiesInput` via:
//
//	KeyVaultKeyPropertiesArgs{...}
type KeyVaultKeyPropertiesInput interface {
	pulumi.Input

	ToKeyVaultKeyPropertiesOutput() KeyVaultKeyPropertiesOutput
	ToKeyVaultKeyPropertiesOutputWithContext(context.Context) KeyVaultKeyPropertiesOutput
}

// The properties of the KeyVault key.
type KeyVaultKeyPropertiesArgs struct {
	// The identifier of the key.
	KeyIdentifier pulumi.StringPtrInput `pulumi:"keyIdentifier"`
}

func (KeyVaultKeyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyProperties)(nil)).Elem()
}

func (i KeyVaultKeyPropertiesArgs) ToKeyVaultKeyPropertiesOutput() KeyVaultKeyPropertiesOutput {
	return i.ToKeyVaultKeyPropertiesOutputWithContext(context.Background())
}

func (i KeyVaultKeyPropertiesArgs) ToKeyVaultKeyPropertiesOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyPropertiesOutput)
}

// KeyVaultKeyPropertiesArrayInput is an input type that accepts KeyVaultKeyPropertiesArray and KeyVaultKeyPropertiesArrayOutput values.
// You can construct a concrete instance of `KeyVaultKeyPropertiesArrayInput` via:
//
//	KeyVaultKeyPropertiesArray{ KeyVaultKeyPropertiesArgs{...} }
type KeyVaultKeyPropertiesArrayInput interface {
	pulumi.Input

	ToKeyVaultKeyPropertiesArrayOutput() KeyVaultKeyPropertiesArrayOutput
	ToKeyVaultKeyPropertiesArrayOutputWithContext(context.Context) KeyVaultKeyPropertiesArrayOutput
}

type KeyVaultKeyPropertiesArray []KeyVaultKeyPropertiesInput

func (KeyVaultKeyPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVaultKeyProperties)(nil)).Elem()
}

func (i KeyVaultKeyPropertiesArray) ToKeyVaultKeyPropertiesArrayOutput() KeyVaultKeyPropertiesArrayOutput {
	return i.ToKeyVaultKeyPropertiesArrayOutputWithContext(context.Background())
}

func (i KeyVaultKeyPropertiesArray) ToKeyVaultKeyPropertiesArrayOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultKeyPropertiesArrayOutput)
}

// The properties of the KeyVault key.
type KeyVaultKeyPropertiesOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyProperties)(nil)).Elem()
}

func (o KeyVaultKeyPropertiesOutput) ToKeyVaultKeyPropertiesOutput() KeyVaultKeyPropertiesOutput {
	return o
}

func (o KeyVaultKeyPropertiesOutput) ToKeyVaultKeyPropertiesOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesOutput {
	return o
}

// The identifier of the key.
func (o KeyVaultKeyPropertiesOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultKeyProperties) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultKeyPropertiesArrayOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVaultKeyProperties)(nil)).Elem()
}

func (o KeyVaultKeyPropertiesArrayOutput) ToKeyVaultKeyPropertiesArrayOutput() KeyVaultKeyPropertiesArrayOutput {
	return o
}

func (o KeyVaultKeyPropertiesArrayOutput) ToKeyVaultKeyPropertiesArrayOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesArrayOutput {
	return o
}

func (o KeyVaultKeyPropertiesArrayOutput) Index(i pulumi.IntInput) KeyVaultKeyPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyVaultKeyProperties {
		return vs[0].([]KeyVaultKeyProperties)[vs[1].(int)]
	}).(KeyVaultKeyPropertiesOutput)
}

// The properties of the KeyVault key.
type KeyVaultKeyPropertiesResponse struct {
	// The identifier of the key.
	KeyIdentifier *string `pulumi:"keyIdentifier"`
}

// The properties of the KeyVault key.
type KeyVaultKeyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultKeyPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultKeyPropertiesResponseOutput) ToKeyVaultKeyPropertiesResponseOutput() KeyVaultKeyPropertiesResponseOutput {
	return o
}

func (o KeyVaultKeyPropertiesResponseOutput) ToKeyVaultKeyPropertiesResponseOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesResponseOutput {
	return o
}

// The identifier of the key.
func (o KeyVaultKeyPropertiesResponseOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultKeyPropertiesResponse) *string { return v.KeyIdentifier }).(pulumi.StringPtrOutput)
}

type KeyVaultKeyPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (KeyVaultKeyPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVaultKeyPropertiesResponse)(nil)).Elem()
}

func (o KeyVaultKeyPropertiesResponseArrayOutput) ToKeyVaultKeyPropertiesResponseArrayOutput() KeyVaultKeyPropertiesResponseArrayOutput {
	return o
}

func (o KeyVaultKeyPropertiesResponseArrayOutput) ToKeyVaultKeyPropertiesResponseArrayOutputWithContext(ctx context.Context) KeyVaultKeyPropertiesResponseArrayOutput {
	return o
}

func (o KeyVaultKeyPropertiesResponseArrayOutput) Index(i pulumi.IntInput) KeyVaultKeyPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyVaultKeyPropertiesResponse {
		return vs[0].([]KeyVaultKeyPropertiesResponse)[vs[1].(int)]
	}).(KeyVaultKeyPropertiesResponseOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnection struct {
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionProperties `pulumi:"properties"`
}

// PrivateEndpointConnectionInput is an input type that accepts PrivateEndpointConnectionArgs and PrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionInput` via:
//
//	PrivateEndpointConnectionArgs{...}
type PrivateEndpointConnectionInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput
	ToPrivateEndpointConnectionOutputWithContext(context.Context) PrivateEndpointConnectionOutput
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionArgs struct {
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionPropertiesInput `pulumi:"properties"`
}

func (PrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return i.ToPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionOutput)
}

// PrivateEndpointConnectionArrayInput is an input type that accepts PrivateEndpointConnectionArray and PrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionArrayInput` via:
//
//	PrivateEndpointConnectionArray{ PrivateEndpointConnectionArgs{...} }
type PrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput
	ToPrivateEndpointConnectionArrayOutputWithContext(context.Context) PrivateEndpointConnectionArrayOutput
}

type PrivateEndpointConnectionArray []PrivateEndpointConnectionInput

func (PrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return i.ToPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionArrayOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return o
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return o
}

// The properties of a private endpoint connection
func (o PrivateEndpointConnectionOutput) Properties() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v PrivateEndpointConnection) PrivateEndpointConnectionProperties { return v.Properties }).(PrivateEndpointConnectionPropertiesOutput)
}

type PrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnection {
		return vs[0].([]PrivateEndpointConnection)[vs[1].(int)]
	}).(PrivateEndpointConnectionOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionProperties struct {
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//	PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesArgs struct {
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInput `pulumi:"privateLinkServiceConnectionState"`
}

func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

// The current state of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesResponse struct {
	// The private endpoint property of a private endpoint connection
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// The private endpoint property of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// The current state of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// The resource type.
	Type string `pulumi:"type"`
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) Properties() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint property of a private endpoint connection
type PrivateEndpointResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
}

// The private endpoint property of a private endpoint connection
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The resource identifier.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionState struct {
	// Actions required for a private endpoint connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description string `pulumi:"description"`
	// The status of a private endpoint connection
	Status string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateArgs struct {
	// Actions required for a private endpoint connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description pulumi.StringInput `pulumi:"description"`
	// The status of a private endpoint connection
	Status pulumi.StringInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// Actions required for a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateResponse struct {
	// Actions required for a private endpoint connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description string `pulumi:"description"`
	// The status of a private endpoint connection
	Status string `pulumi:"status"`
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Actions required for a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescription struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights string `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput is an input type that accepts SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs and SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput` via:
//
//	SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs{...}
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput
	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs struct {
	// Name of the key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights pulumi.StringInput `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput)
}

// SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray and SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput` via:
//
//	SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray{ SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs{...} }
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput
	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return o
}

// Name of the key.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) string { return v.KeyName }).(pulumi.StringOutput)
}

// Primary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Rights that this key has.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) string { return v.Rights }).(pulumi.StringOutput)
}

// Secondary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleAccessRightsDescription {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights string `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return o
}

// Name of the key.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// Primary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) *string {
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Rights that this key has.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) string { return v.Rights }).(pulumi.StringOutput)
}

// Secondary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) *string {
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRule struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionType `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target *IpFilterTargetType `pulumi:"target"`
}

// TargetIpFilterRuleInput is an input type that accepts TargetIpFilterRuleArgs and TargetIpFilterRuleOutput values.
// You can construct a concrete instance of `TargetIpFilterRuleInput` via:
//
//	TargetIpFilterRuleArgs{...}
type TargetIpFilterRuleInput interface {
	pulumi.Input

	ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput
	ToTargetIpFilterRuleOutputWithContext(context.Context) TargetIpFilterRuleOutput
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleArgs struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionTypeInput `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target IpFilterTargetTypePtrInput `pulumi:"target"`
}

func (TargetIpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRule)(nil)).Elem()
}

func (i TargetIpFilterRuleArgs) ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput {
	return i.ToTargetIpFilterRuleOutputWithContext(context.Background())
}

func (i TargetIpFilterRuleArgs) ToTargetIpFilterRuleOutputWithContext(ctx context.Context) TargetIpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetIpFilterRuleOutput)
}

// TargetIpFilterRuleArrayInput is an input type that accepts TargetIpFilterRuleArray and TargetIpFilterRuleArrayOutput values.
// You can construct a concrete instance of `TargetIpFilterRuleArrayInput` via:
//
//	TargetIpFilterRuleArray{ TargetIpFilterRuleArgs{...} }
type TargetIpFilterRuleArrayInput interface {
	pulumi.Input

	ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput
	ToTargetIpFilterRuleArrayOutputWithContext(context.Context) TargetIpFilterRuleArrayOutput
}

type TargetIpFilterRuleArray []TargetIpFilterRuleInput

func (TargetIpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRule)(nil)).Elem()
}

func (i TargetIpFilterRuleArray) ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput {
	return i.ToTargetIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i TargetIpFilterRuleArray) ToTargetIpFilterRuleArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetIpFilterRuleArrayOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRule)(nil)).Elem()
}

func (o TargetIpFilterRuleOutput) ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput {
	return o
}

func (o TargetIpFilterRuleOutput) ToTargetIpFilterRuleOutputWithContext(ctx context.Context) TargetIpFilterRuleOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o TargetIpFilterRuleOutput) Action() IpFilterActionTypeOutput {
	return o.ApplyT(func(v TargetIpFilterRule) IpFilterActionType { return v.Action }).(IpFilterActionTypeOutput)
}

// The name of the IP filter rule.
func (o TargetIpFilterRuleOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRule) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o TargetIpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

// Target for requests captured by this rule.
func (o TargetIpFilterRuleOutput) Target() IpFilterTargetTypePtrOutput {
	return o.ApplyT(func(v TargetIpFilterRule) *IpFilterTargetType { return v.Target }).(IpFilterTargetTypePtrOutput)
}

type TargetIpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRule)(nil)).Elem()
}

func (o TargetIpFilterRuleArrayOutput) ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput {
	return o
}

func (o TargetIpFilterRuleArrayOutput) ToTargetIpFilterRuleArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleArrayOutput {
	return o
}

func (o TargetIpFilterRuleArrayOutput) Index(i pulumi.IntInput) TargetIpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetIpFilterRule {
		return vs[0].([]TargetIpFilterRule)[vs[1].(int)]
	}).(TargetIpFilterRuleOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleResponse struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target *string `pulumi:"target"`
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRuleResponse)(nil)).Elem()
}

func (o TargetIpFilterRuleResponseOutput) ToTargetIpFilterRuleResponseOutput() TargetIpFilterRuleResponseOutput {
	return o
}

func (o TargetIpFilterRuleResponseOutput) ToTargetIpFilterRuleResponseOutputWithContext(ctx context.Context) TargetIpFilterRuleResponseOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o TargetIpFilterRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o TargetIpFilterRuleResponseOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o TargetIpFilterRuleResponseOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.IpMask }).(pulumi.StringOutput)
}

// Target for requests captured by this rule.
func (o TargetIpFilterRuleResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type TargetIpFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRuleResponse)(nil)).Elem()
}

func (o TargetIpFilterRuleResponseArrayOutput) ToTargetIpFilterRuleResponseArrayOutput() TargetIpFilterRuleResponseArrayOutput {
	return o
}

func (o TargetIpFilterRuleResponseArrayOutput) ToTargetIpFilterRuleResponseArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleResponseArrayOutput {
	return o
}

func (o TargetIpFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) TargetIpFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetIpFilterRuleResponse {
		return vs[0].([]TargetIpFilterRuleResponse)[vs[1].(int)]
	}).(TargetIpFilterRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ArmIdentityOutput{})
	pulumi.RegisterOutputType(ArmIdentityPtrOutput{})
	pulumi.RegisterOutputType(ArmIdentityResponseOutput{})
	pulumi.RegisterOutputType(ArmIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmUserIdentityResponseOutput{})
	pulumi.RegisterOutputType(ArmUserIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyIdentityOutput{})
	pulumi.RegisterOutputType(EncryptionKeyIdentityPtrOutput{})
	pulumi.RegisterOutputType(EncryptionKeyIdentityResponseOutput{})
	pulumi.RegisterOutputType(EncryptionKeyIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesDescriptionOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesDescriptionPtrOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesDescriptionResponseOutput{})
	pulumi.RegisterOutputType(EncryptionPropertiesDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(IotDpsPropertiesDescriptionOutput{})
	pulumi.RegisterOutputType(IotDpsPropertiesDescriptionResponseOutput{})
	pulumi.RegisterOutputType(IotDpsSkuInfoOutput{})
	pulumi.RegisterOutputType(IotDpsSkuInfoResponseOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionArrayOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionResponseOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyPropertiesOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyPropertiesArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultKeyPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleResponseArrayOutput{})
}
