// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20170119

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The IoT hub cloud-to-device messaging properties.
type CloudToDeviceProperties struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 *string `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback *FeedbackProperties `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// CloudToDevicePropertiesInput is an input type that accepts CloudToDevicePropertiesArgs and CloudToDevicePropertiesOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesInput` via:
//
//	CloudToDevicePropertiesArgs{...}
type CloudToDevicePropertiesInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput
	ToCloudToDevicePropertiesOutputWithContext(context.Context) CloudToDevicePropertiesOutput
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesArgs struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 pulumi.StringPtrInput `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback FeedbackPropertiesPtrInput `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
}

func (CloudToDevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDeviceProperties)(nil)).Elem()
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput {
	return i.ToCloudToDevicePropertiesOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesOutputWithContext(ctx context.Context) CloudToDevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesOutput)
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return i.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesOutput).ToCloudToDevicePropertiesPtrOutputWithContext(ctx)
}

// CloudToDevicePropertiesPtrInput is an input type that accepts CloudToDevicePropertiesArgs, CloudToDevicePropertiesPtr and CloudToDevicePropertiesPtrOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesPtrInput` via:
//
//	        CloudToDevicePropertiesArgs{...}
//
//	or:
//
//	        nil
type CloudToDevicePropertiesPtrInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput
	ToCloudToDevicePropertiesPtrOutputWithContext(context.Context) CloudToDevicePropertiesPtrOutput
}

type cloudToDevicePropertiesPtrType CloudToDevicePropertiesArgs

func CloudToDevicePropertiesPtr(v *CloudToDevicePropertiesArgs) CloudToDevicePropertiesPtrInput {
	return (*cloudToDevicePropertiesPtrType)(v)
}

func (*cloudToDevicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDeviceProperties)(nil)).Elem()
}

func (i *cloudToDevicePropertiesPtrType) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return i.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *cloudToDevicePropertiesPtrType) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDeviceProperties)(nil)).Elem()
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput {
	return o
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesOutputWithContext(ctx context.Context) CloudToDevicePropertiesOutput {
	return o
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return o.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudToDeviceProperties) *CloudToDeviceProperties {
		return &v
	}).(CloudToDevicePropertiesPtrOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *string { return v.DefaultTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesOutput) Feedback() FeedbackPropertiesPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *FeedbackProperties { return v.Feedback }).(FeedbackPropertiesPtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type CloudToDevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDeviceProperties)(nil)).Elem()
}

func (o CloudToDevicePropertiesPtrOutput) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return o
}

func (o CloudToDevicePropertiesPtrOutput) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return o
}

func (o CloudToDevicePropertiesPtrOutput) Elem() CloudToDevicePropertiesOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) CloudToDeviceProperties {
		if v != nil {
			return *v
		}
		var ret CloudToDeviceProperties
		return ret
	}).(CloudToDevicePropertiesOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesPtrOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesPtrOutput) Feedback() FeedbackPropertiesPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *FeedbackProperties {
		if v == nil {
			return nil
		}
		return v.Feedback
	}).(FeedbackPropertiesPtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesResponse struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 *string `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback *FeedbackPropertiesResponse `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponseOutput() CloudToDevicePropertiesResponseOutput {
	return o
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponseOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponseOutput {
	return o
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponseOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *string { return v.DefaultTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesResponseOutput) Feedback() FeedbackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *FeedbackPropertiesResponse { return v.Feedback }).(FeedbackPropertiesResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type CloudToDevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesResponsePtrOutput) ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesResponsePtrOutput) ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesResponsePtrOutput) Elem() CloudToDevicePropertiesResponseOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) CloudToDevicePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret CloudToDevicePropertiesResponse
		return ret
	}).(CloudToDevicePropertiesResponseOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponsePtrOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesResponsePtrOutput) Feedback() FeedbackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *FeedbackPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Feedback
	}).(FeedbackPropertiesResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubProperties struct {
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount *int `pulumi:"partitionCount"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays *float64 `pulumi:"retentionTimeInDays"`
}

// EventHubPropertiesInput is an input type that accepts EventHubPropertiesArgs and EventHubPropertiesOutput values.
// You can construct a concrete instance of `EventHubPropertiesInput` via:
//
//	EventHubPropertiesArgs{...}
type EventHubPropertiesInput interface {
	pulumi.Input

	ToEventHubPropertiesOutput() EventHubPropertiesOutput
	ToEventHubPropertiesOutputWithContext(context.Context) EventHubPropertiesOutput
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesArgs struct {
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays pulumi.Float64PtrInput `pulumi:"retentionTimeInDays"`
}

func (EventHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return i.ToEventHubPropertiesOutputWithContext(context.Background())
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesOutput)
}

// EventHubPropertiesMapInput is an input type that accepts EventHubPropertiesMap and EventHubPropertiesMapOutput values.
// You can construct a concrete instance of `EventHubPropertiesMapInput` via:
//
//	EventHubPropertiesMap{ "key": EventHubPropertiesArgs{...} }
type EventHubPropertiesMapInput interface {
	pulumi.Input

	ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput
	ToEventHubPropertiesMapOutputWithContext(context.Context) EventHubPropertiesMapOutput
}

type EventHubPropertiesMap map[string]EventHubPropertiesInput

func (EventHubPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubProperties)(nil)).Elem()
}

func (i EventHubPropertiesMap) ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput {
	return i.ToEventHubPropertiesMapOutputWithContext(context.Background())
}

func (i EventHubPropertiesMap) ToEventHubPropertiesMapOutputWithContext(ctx context.Context) EventHubPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesMapOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return o
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return o
}

// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
func (o EventHubPropertiesOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
func (o EventHubPropertiesOutput) RetentionTimeInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EventHubProperties) *float64 { return v.RetentionTimeInDays }).(pulumi.Float64PtrOutput)
}

type EventHubPropertiesMapOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesMapOutput) ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput {
	return o
}

func (o EventHubPropertiesMapOutput) ToEventHubPropertiesMapOutputWithContext(ctx context.Context) EventHubPropertiesMapOutput {
	return o
}

func (o EventHubPropertiesMapOutput) MapIndex(k pulumi.StringInput) EventHubPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EventHubProperties {
		return vs[0].(map[string]EventHubProperties)[vs[1].(string)]
	}).(EventHubPropertiesOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesResponse struct {
	// The Event Hub-compatible endpoint.
	Endpoint string `pulumi:"endpoint"`
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount *int `pulumi:"partitionCount"`
	// The partition ids in the Event Hub-compatible endpoint.
	PartitionIds []string `pulumi:"partitionIds"`
	// The Event Hub-compatible name.
	Path string `pulumi:"path"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays *float64 `pulumi:"retentionTimeInDays"`
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput {
	return o
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutputWithContext(ctx context.Context) EventHubPropertiesResponseOutput {
	return o
}

// The Event Hub-compatible endpoint.
func (o EventHubPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
func (o EventHubPropertiesResponseOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// The partition ids in the Event Hub-compatible endpoint.
func (o EventHubPropertiesResponseOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) []string { return v.PartitionIds }).(pulumi.StringArrayOutput)
}

// The Event Hub-compatible name.
func (o EventHubPropertiesResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
func (o EventHubPropertiesResponseOutput) RetentionTimeInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *float64 { return v.RetentionTimeInDays }).(pulumi.Float64PtrOutput)
}

type EventHubPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponseMapOutput) ToEventHubPropertiesResponseMapOutput() EventHubPropertiesResponseMapOutput {
	return o
}

func (o EventHubPropertiesResponseMapOutput) ToEventHubPropertiesResponseMapOutputWithContext(ctx context.Context) EventHubPropertiesResponseMapOutput {
	return o
}

func (o EventHubPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) EventHubPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EventHubPropertiesResponse {
		return vs[0].(map[string]EventHubPropertiesResponse)[vs[1].(string)]
	}).(EventHubPropertiesResponseOutput)
}

// The properties related to the fallback route based on which the IoT hub routes messages to the fallback endpoint.
type FallbackRouteProperties struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The source to which the routing rule is to be applied to. e.g. DeviceMessages
	Source string `pulumi:"source"`
}

// FallbackRoutePropertiesInput is an input type that accepts FallbackRoutePropertiesArgs and FallbackRoutePropertiesOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesInput` via:
//
//	FallbackRoutePropertiesArgs{...}
type FallbackRoutePropertiesInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput
	ToFallbackRoutePropertiesOutputWithContext(context.Context) FallbackRoutePropertiesOutput
}

// The properties related to the fallback route based on which the IoT hub routes messages to the fallback endpoint.
type FallbackRoutePropertiesArgs struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The source to which the routing rule is to be applied to. e.g. DeviceMessages
	Source pulumi.StringInput `pulumi:"source"`
}

func (FallbackRoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRouteProperties)(nil)).Elem()
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput {
	return i.ToFallbackRoutePropertiesOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesOutputWithContext(ctx context.Context) FallbackRoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesOutput)
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return i.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesOutput).ToFallbackRoutePropertiesPtrOutputWithContext(ctx)
}

// FallbackRoutePropertiesPtrInput is an input type that accepts FallbackRoutePropertiesArgs, FallbackRoutePropertiesPtr and FallbackRoutePropertiesPtrOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesPtrInput` via:
//
//	        FallbackRoutePropertiesArgs{...}
//
//	or:
//
//	        nil
type FallbackRoutePropertiesPtrInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput
	ToFallbackRoutePropertiesPtrOutputWithContext(context.Context) FallbackRoutePropertiesPtrOutput
}

type fallbackRoutePropertiesPtrType FallbackRoutePropertiesArgs

func FallbackRoutePropertiesPtr(v *FallbackRoutePropertiesArgs) FallbackRoutePropertiesPtrInput {
	return (*fallbackRoutePropertiesPtrType)(v)
}

func (*fallbackRoutePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRouteProperties)(nil)).Elem()
}

func (i *fallbackRoutePropertiesPtrType) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return i.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i *fallbackRoutePropertiesPtrType) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesPtrOutput)
}

// The properties related to the fallback route based on which the IoT hub routes messages to the fallback endpoint.
type FallbackRoutePropertiesOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRouteProperties)(nil)).Elem()
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput {
	return o
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesOutputWithContext(ctx context.Context) FallbackRoutePropertiesOutput {
	return o
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return o.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FallbackRouteProperties) *FallbackRouteProperties {
		return &v
	}).(FallbackRoutePropertiesPtrOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRouteProperties) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FallbackRouteProperties) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled or not.
func (o FallbackRoutePropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FallbackRouteProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The source to which the routing rule is to be applied to. e.g. DeviceMessages
func (o FallbackRoutePropertiesOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FallbackRouteProperties) string { return v.Source }).(pulumi.StringOutput)
}

type FallbackRoutePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRouteProperties)(nil)).Elem()
}

func (o FallbackRoutePropertiesPtrOutput) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return o
}

func (o FallbackRoutePropertiesPtrOutput) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return o
}

func (o FallbackRoutePropertiesPtrOutput) Elem() FallbackRoutePropertiesOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) FallbackRouteProperties {
		if v != nil {
			return *v
		}
		var ret FallbackRouteProperties
		return ret
	}).(FallbackRoutePropertiesOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesPtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled or not.
func (o FallbackRoutePropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The source to which the routing rule is to be applied to. e.g. DeviceMessages
func (o FallbackRoutePropertiesPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// The properties related to the fallback route based on which the IoT hub routes messages to the fallback endpoint.
type FallbackRoutePropertiesResponse struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The source to which the routing rule is to be applied to. e.g. DeviceMessages
	Source string `pulumi:"source"`
}

// The properties related to the fallback route based on which the IoT hub routes messages to the fallback endpoint.
type FallbackRoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponseOutput() FallbackRoutePropertiesResponseOutput {
	return o
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponseOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponseOutput {
	return o
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled or not.
func (o FallbackRoutePropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The source to which the routing rule is to be applied to. e.g. DeviceMessages
func (o FallbackRoutePropertiesResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) string { return v.Source }).(pulumi.StringOutput)
}

type FallbackRoutePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesResponsePtrOutput) ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesResponsePtrOutput) ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesResponsePtrOutput) Elem() FallbackRoutePropertiesResponseOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) FallbackRoutePropertiesResponse {
		if v != nil {
			return *v
		}
		var ret FallbackRoutePropertiesResponse
		return ret
	}).(FallbackRoutePropertiesResponseOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesResponsePtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesResponsePtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled or not.
func (o FallbackRoutePropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The source to which the routing rule is to be applied to. e.g. DeviceMessages
func (o FallbackRoutePropertiesResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackProperties struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// FeedbackPropertiesInput is an input type that accepts FeedbackPropertiesArgs and FeedbackPropertiesOutput values.
// You can construct a concrete instance of `FeedbackPropertiesInput` via:
//
//	FeedbackPropertiesArgs{...}
type FeedbackPropertiesInput interface {
	pulumi.Input

	ToFeedbackPropertiesOutput() FeedbackPropertiesOutput
	ToFeedbackPropertiesOutputWithContext(context.Context) FeedbackPropertiesOutput
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesArgs struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (FeedbackPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackProperties)(nil)).Elem()
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesOutput() FeedbackPropertiesOutput {
	return i.ToFeedbackPropertiesOutputWithContext(context.Background())
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesOutputWithContext(ctx context.Context) FeedbackPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesOutput)
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return i.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesOutput).ToFeedbackPropertiesPtrOutputWithContext(ctx)
}

// FeedbackPropertiesPtrInput is an input type that accepts FeedbackPropertiesArgs, FeedbackPropertiesPtr and FeedbackPropertiesPtrOutput values.
// You can construct a concrete instance of `FeedbackPropertiesPtrInput` via:
//
//	        FeedbackPropertiesArgs{...}
//
//	or:
//
//	        nil
type FeedbackPropertiesPtrInput interface {
	pulumi.Input

	ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput
	ToFeedbackPropertiesPtrOutputWithContext(context.Context) FeedbackPropertiesPtrOutput
}

type feedbackPropertiesPtrType FeedbackPropertiesArgs

func FeedbackPropertiesPtr(v *FeedbackPropertiesArgs) FeedbackPropertiesPtrInput {
	return (*feedbackPropertiesPtrType)(v)
}

func (*feedbackPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackProperties)(nil)).Elem()
}

func (i *feedbackPropertiesPtrType) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return i.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (i *feedbackPropertiesPtrType) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackProperties)(nil)).Elem()
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesOutput() FeedbackPropertiesOutput {
	return o
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesOutputWithContext(ctx context.Context) FeedbackPropertiesOutput {
	return o
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return o.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeedbackProperties) *FeedbackProperties {
		return &v
	}).(FeedbackPropertiesPtrOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type FeedbackPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackProperties)(nil)).Elem()
}

func (o FeedbackPropertiesPtrOutput) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return o
}

func (o FeedbackPropertiesPtrOutput) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return o
}

func (o FeedbackPropertiesPtrOutput) Elem() FeedbackPropertiesOutput {
	return o.ApplyT(func(v *FeedbackProperties) FeedbackProperties {
		if v != nil {
			return *v
		}
		var ret FeedbackProperties
		return ret
	}).(FeedbackPropertiesOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *string {
		if v == nil {
			return nil
		}
		return v.LockDurationAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *string {
		if v == nil {
			return nil
		}
		return v.TtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesResponse struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackPropertiesResponse)(nil)).Elem()
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponseOutput() FeedbackPropertiesResponseOutput {
	return o
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponseOutputWithContext(ctx context.Context) FeedbackPropertiesResponseOutput {
	return o
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type FeedbackPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackPropertiesResponse)(nil)).Elem()
}

func (o FeedbackPropertiesResponsePtrOutput) ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesResponsePtrOutput) ToFeedbackPropertiesResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesResponsePtrOutput) Elem() FeedbackPropertiesResponseOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) FeedbackPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret FeedbackPropertiesResponse
		return ret
	}).(FeedbackPropertiesResponseOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LockDurationAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of an IoT hub.
type IotHubProperties struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRule `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice *CloudToDeviceProperties `pulumi:"cloudToDevice"`
	// Comments.
	Comments *string `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications *bool `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints map[string]EventHubProperties `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features *string `pulumi:"features"`
	// The IP filter rules.
	IpFilterRules []IpFilterRule `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints map[string]MessagingEndpointProperties `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties *OperationsMonitoringProperties `pulumi:"operationsMonitoringProperties"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing *RoutingProperties `pulumi:"routing"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints map[string]StorageEndpointProperties `pulumi:"storageEndpoints"`
}

// IotHubPropertiesInput is an input type that accepts IotHubPropertiesArgs and IotHubPropertiesOutput values.
// You can construct a concrete instance of `IotHubPropertiesInput` via:
//
//	IotHubPropertiesArgs{...}
type IotHubPropertiesInput interface {
	pulumi.Input

	ToIotHubPropertiesOutput() IotHubPropertiesOutput
	ToIotHubPropertiesOutputWithContext(context.Context) IotHubPropertiesOutput
}

// The properties of an IoT hub.
type IotHubPropertiesArgs struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleArrayInput `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice CloudToDevicePropertiesPtrInput `pulumi:"cloudToDevice"`
	// Comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications pulumi.BoolPtrInput `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints EventHubPropertiesMapInput `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features pulumi.StringPtrInput `pulumi:"features"`
	// The IP filter rules.
	IpFilterRules IpFilterRuleArrayInput `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints MessagingEndpointPropertiesMapInput `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties OperationsMonitoringPropertiesPtrInput `pulumi:"operationsMonitoringProperties"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing RoutingPropertiesPtrInput `pulumi:"routing"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints StorageEndpointPropertiesMapInput `pulumi:"storageEndpoints"`
}

func (IotHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubProperties)(nil)).Elem()
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesOutput() IotHubPropertiesOutput {
	return i.ToIotHubPropertiesOutputWithContext(context.Background())
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesOutputWithContext(ctx context.Context) IotHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesOutput)
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return i.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesOutput).ToIotHubPropertiesPtrOutputWithContext(ctx)
}

// IotHubPropertiesPtrInput is an input type that accepts IotHubPropertiesArgs, IotHubPropertiesPtr and IotHubPropertiesPtrOutput values.
// You can construct a concrete instance of `IotHubPropertiesPtrInput` via:
//
//	        IotHubPropertiesArgs{...}
//
//	or:
//
//	        nil
type IotHubPropertiesPtrInput interface {
	pulumi.Input

	ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput
	ToIotHubPropertiesPtrOutputWithContext(context.Context) IotHubPropertiesPtrOutput
}

type iotHubPropertiesPtrType IotHubPropertiesArgs

func IotHubPropertiesPtr(v *IotHubPropertiesArgs) IotHubPropertiesPtrInput {
	return (*iotHubPropertiesPtrType)(v)
}

func (*iotHubPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubProperties)(nil)).Elem()
}

func (i *iotHubPropertiesPtrType) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return i.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (i *iotHubPropertiesPtrType) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesPtrOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubProperties)(nil)).Elem()
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesOutput() IotHubPropertiesOutput {
	return o
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesOutputWithContext(ctx context.Context) IotHubPropertiesOutput {
	return o
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return o.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotHubProperties) *IotHubProperties {
		return &v
	}).(IotHubPropertiesPtrOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o.ApplyT(func(v IotHubProperties) []SharedAccessSignatureAuthorizationRule { return v.AuthorizationPolicies }).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesOutput) CloudToDevice() CloudToDevicePropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *CloudToDeviceProperties { return v.CloudToDevice }).(CloudToDevicePropertiesPtrOutput)
}

// Comments.
func (o IotHubPropertiesOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *bool { return v.EnableFileUploadNotifications }).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesOutput) EventHubEndpoints() EventHubPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]EventHubProperties { return v.EventHubEndpoints }).(EventHubPropertiesMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *string { return v.Features }).(pulumi.StringPtrOutput)
}

// The IP filter rules.
func (o IotHubPropertiesOutput) IpFilterRules() IpFilterRuleArrayOutput {
	return o.ApplyT(func(v IotHubProperties) []IpFilterRule { return v.IpFilterRules }).(IpFilterRuleArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesOutput) MessagingEndpoints() MessagingEndpointPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]MessagingEndpointProperties { return v.MessagingEndpoints }).(MessagingEndpointPropertiesMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *OperationsMonitoringProperties { return v.OperationsMonitoringProperties }).(OperationsMonitoringPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesOutput) Routing() RoutingPropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *RoutingProperties { return v.Routing }).(RoutingPropertiesPtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesOutput) StorageEndpoints() StorageEndpointPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]StorageEndpointProperties { return v.StorageEndpoints }).(StorageEndpointPropertiesMapOutput)
}

type IotHubPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubProperties)(nil)).Elem()
}

func (o IotHubPropertiesPtrOutput) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return o
}

func (o IotHubPropertiesPtrOutput) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return o
}

func (o IotHubPropertiesPtrOutput) Elem() IotHubPropertiesOutput {
	return o.ApplyT(func(v *IotHubProperties) IotHubProperties {
		if v != nil {
			return *v
		}
		var ret IotHubProperties
		return ret
	}).(IotHubPropertiesOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesPtrOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o.ApplyT(func(v *IotHubProperties) []SharedAccessSignatureAuthorizationRule {
		if v == nil {
			return nil
		}
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesPtrOutput) CloudToDevice() CloudToDevicePropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *CloudToDeviceProperties {
		if v == nil {
			return nil
		}
		return v.CloudToDevice
	}).(CloudToDevicePropertiesPtrOutput)
}

// Comments.
func (o IotHubPropertiesPtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesPtrOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFileUploadNotifications
	}).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesPtrOutput) EventHubEndpoints() EventHubPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]EventHubProperties {
		if v == nil {
			return nil
		}
		return v.EventHubEndpoints
	}).(EventHubPropertiesMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesPtrOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.Features
	}).(pulumi.StringPtrOutput)
}

// The IP filter rules.
func (o IotHubPropertiesPtrOutput) IpFilterRules() IpFilterRuleArrayOutput {
	return o.ApplyT(func(v *IotHubProperties) []IpFilterRule {
		if v == nil {
			return nil
		}
		return v.IpFilterRules
	}).(IpFilterRuleArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesPtrOutput) MessagingEndpoints() MessagingEndpointPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]MessagingEndpointProperties {
		if v == nil {
			return nil
		}
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesPtrOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *OperationsMonitoringProperties {
		if v == nil {
			return nil
		}
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesPtrOutput) Routing() RoutingPropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *RoutingProperties {
		if v == nil {
			return nil
		}
		return v.Routing
	}).(RoutingPropertiesPtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesPtrOutput) StorageEndpoints() StorageEndpointPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]StorageEndpointProperties {
		if v == nil {
			return nil
		}
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesMapOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesResponse struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleResponse `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice *CloudToDevicePropertiesResponse `pulumi:"cloudToDevice"`
	// Comments.
	Comments *string `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications *bool `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints map[string]EventHubPropertiesResponse `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features *string `pulumi:"features"`
	// The name of the host.
	HostName string `pulumi:"hostName"`
	// The IP filter rules.
	IpFilterRules []IpFilterRuleResponse `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints map[string]MessagingEndpointPropertiesResponse `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties *OperationsMonitoringPropertiesResponse `pulumi:"operationsMonitoringProperties"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing *RoutingPropertiesResponse `pulumi:"routing"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints map[string]StorageEndpointPropertiesResponse `pulumi:"storageEndpoints"`
}

// The properties of an IoT hub.
type IotHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubPropertiesResponse)(nil)).Elem()
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponseOutput() IotHubPropertiesResponseOutput {
	return o
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponseOutputWithContext(ctx context.Context) IotHubPropertiesResponseOutput {
	return o
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesResponseOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) []SharedAccessSignatureAuthorizationRuleResponse {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleResponseArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesResponseOutput) CloudToDevice() CloudToDevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *CloudToDevicePropertiesResponse { return v.CloudToDevice }).(CloudToDevicePropertiesResponsePtrOutput)
}

// Comments.
func (o IotHubPropertiesResponseOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesResponseOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *bool { return v.EnableFileUploadNotifications }).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesResponseOutput) EventHubEndpoints() EventHubPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]EventHubPropertiesResponse { return v.EventHubEndpoints }).(EventHubPropertiesResponseMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesResponseOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *string { return v.Features }).(pulumi.StringPtrOutput)
}

// The name of the host.
func (o IotHubPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The IP filter rules.
func (o IotHubPropertiesResponseOutput) IpFilterRules() IpFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) []IpFilterRuleResponse { return v.IpFilterRules }).(IpFilterRuleResponseArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesResponseOutput) MessagingEndpoints() MessagingEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]MessagingEndpointPropertiesResponse {
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesResponseMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesResponseOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *OperationsMonitoringPropertiesResponse {
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesResponsePtrOutput)
}

// The provisioning state.
func (o IotHubPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesResponseOutput) Routing() RoutingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *RoutingPropertiesResponse { return v.Routing }).(RoutingPropertiesResponsePtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesResponseOutput) StorageEndpoints() StorageEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]StorageEndpointPropertiesResponse {
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesResponseMapOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfo struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity float64 `pulumi:"capacity"`
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// IotHubSkuInfoInput is an input type that accepts IotHubSkuInfoArgs and IotHubSkuInfoOutput values.
// You can construct a concrete instance of `IotHubSkuInfoInput` via:
//
//	IotHubSkuInfoArgs{...}
type IotHubSkuInfoInput interface {
	pulumi.Input

	ToIotHubSkuInfoOutput() IotHubSkuInfoOutput
	ToIotHubSkuInfoOutputWithContext(context.Context) IotHubSkuInfoOutput
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoArgs struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity pulumi.Float64Input `pulumi:"capacity"`
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IotHubSkuInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfo)(nil)).Elem()
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoOutput() IotHubSkuInfoOutput {
	return i.ToIotHubSkuInfoOutputWithContext(context.Background())
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoOutputWithContext(ctx context.Context) IotHubSkuInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfo)(nil)).Elem()
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoOutput() IotHubSkuInfoOutput {
	return o
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoOutputWithContext(ctx context.Context) IotHubSkuInfoOutput {
	return o
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoOutput) Capacity() pulumi.Float64Output {
	return o.ApplyT(func(v IotHubSkuInfo) float64 { return v.Capacity }).(pulumi.Float64Output)
}

// The name of the SKU.
func (o IotHubSkuInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfo) string { return v.Name }).(pulumi.StringOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoResponse struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity float64 `pulumi:"capacity"`
	// The name of the SKU.
	Name string `pulumi:"name"`
	// The billing tier for the IoT hub.
	Tier string `pulumi:"tier"`
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoResponseOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfoResponse)(nil)).Elem()
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponseOutput() IotHubSkuInfoResponseOutput {
	return o
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponseOutputWithContext(ctx context.Context) IotHubSkuInfoResponseOutput {
	return o
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoResponseOutput) Capacity() pulumi.Float64Output {
	return o.ApplyT(func(v IotHubSkuInfoResponse) float64 { return v.Capacity }).(pulumi.Float64Output)
}

// The name of the SKU.
func (o IotHubSkuInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The billing tier for the IoT hub.
func (o IotHubSkuInfoResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRule struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionType `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
}

// IpFilterRuleInput is an input type that accepts IpFilterRuleArgs and IpFilterRuleOutput values.
// You can construct a concrete instance of `IpFilterRuleInput` via:
//
//	IpFilterRuleArgs{...}
type IpFilterRuleInput interface {
	pulumi.Input

	ToIpFilterRuleOutput() IpFilterRuleOutput
	ToIpFilterRuleOutputWithContext(context.Context) IpFilterRuleOutput
}

// The IP filter rules for the IoT hub.
type IpFilterRuleArgs struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionTypeInput `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
}

func (IpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRule)(nil)).Elem()
}

func (i IpFilterRuleArgs) ToIpFilterRuleOutput() IpFilterRuleOutput {
	return i.ToIpFilterRuleOutputWithContext(context.Background())
}

func (i IpFilterRuleArgs) ToIpFilterRuleOutputWithContext(ctx context.Context) IpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleOutput)
}

// IpFilterRuleArrayInput is an input type that accepts IpFilterRuleArray and IpFilterRuleArrayOutput values.
// You can construct a concrete instance of `IpFilterRuleArrayInput` via:
//
//	IpFilterRuleArray{ IpFilterRuleArgs{...} }
type IpFilterRuleArrayInput interface {
	pulumi.Input

	ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput
	ToIpFilterRuleArrayOutputWithContext(context.Context) IpFilterRuleArrayOutput
}

type IpFilterRuleArray []IpFilterRuleInput

func (IpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRule)(nil)).Elem()
}

func (i IpFilterRuleArray) ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput {
	return i.ToIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i IpFilterRuleArray) ToIpFilterRuleArrayOutputWithContext(ctx context.Context) IpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleArrayOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleOutput struct{ *pulumi.OutputState }

func (IpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRule)(nil)).Elem()
}

func (o IpFilterRuleOutput) ToIpFilterRuleOutput() IpFilterRuleOutput {
	return o
}

func (o IpFilterRuleOutput) ToIpFilterRuleOutputWithContext(ctx context.Context) IpFilterRuleOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o IpFilterRuleOutput) Action() IpFilterActionTypeOutput {
	return o.ApplyT(func(v IpFilterRule) IpFilterActionType { return v.Action }).(IpFilterActionTypeOutput)
}

// The name of the IP filter rule.
func (o IpFilterRuleOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRule) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o IpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

type IpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (IpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRule)(nil)).Elem()
}

func (o IpFilterRuleArrayOutput) ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput {
	return o
}

func (o IpFilterRuleArrayOutput) ToIpFilterRuleArrayOutputWithContext(ctx context.Context) IpFilterRuleArrayOutput {
	return o
}

func (o IpFilterRuleArrayOutput) Index(i pulumi.IntInput) IpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpFilterRule {
		return vs[0].([]IpFilterRule)[vs[1].(int)]
	}).(IpFilterRuleOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleResponse struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
}

// The IP filter rules for the IoT hub.
type IpFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (IpFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRuleResponse)(nil)).Elem()
}

func (o IpFilterRuleResponseOutput) ToIpFilterRuleResponseOutput() IpFilterRuleResponseOutput {
	return o
}

func (o IpFilterRuleResponseOutput) ToIpFilterRuleResponseOutputWithContext(ctx context.Context) IpFilterRuleResponseOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o IpFilterRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o IpFilterRuleResponseOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o IpFilterRuleResponseOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.IpMask }).(pulumi.StringOutput)
}

type IpFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IpFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRuleResponse)(nil)).Elem()
}

func (o IpFilterRuleResponseArrayOutput) ToIpFilterRuleResponseArrayOutput() IpFilterRuleResponseArrayOutput {
	return o
}

func (o IpFilterRuleResponseArrayOutput) ToIpFilterRuleResponseArrayOutputWithContext(ctx context.Context) IpFilterRuleResponseArrayOutput {
	return o
}

func (o IpFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) IpFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpFilterRuleResponse {
		return vs[0].([]IpFilterRuleResponse)[vs[1].(int)]
	}).(IpFilterRuleResponseOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointProperties struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// MessagingEndpointPropertiesInput is an input type that accepts MessagingEndpointPropertiesArgs and MessagingEndpointPropertiesOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesInput` via:
//
//	MessagingEndpointPropertiesArgs{...}
type MessagingEndpointPropertiesInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput
	ToMessagingEndpointPropertiesOutputWithContext(context.Context) MessagingEndpointPropertiesOutput
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesArgs struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (MessagingEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointProperties)(nil)).Elem()
}

func (i MessagingEndpointPropertiesArgs) ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput {
	return i.ToMessagingEndpointPropertiesOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesArgs) ToMessagingEndpointPropertiesOutputWithContext(ctx context.Context) MessagingEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesOutput)
}

// MessagingEndpointPropertiesMapInput is an input type that accepts MessagingEndpointPropertiesMap and MessagingEndpointPropertiesMapOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesMapInput` via:
//
//	MessagingEndpointPropertiesMap{ "key": MessagingEndpointPropertiesArgs{...} }
type MessagingEndpointPropertiesMapInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput
	ToMessagingEndpointPropertiesMapOutputWithContext(context.Context) MessagingEndpointPropertiesMapOutput
}

type MessagingEndpointPropertiesMap map[string]MessagingEndpointPropertiesInput

func (MessagingEndpointPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointProperties)(nil)).Elem()
}

func (i MessagingEndpointPropertiesMap) ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput {
	return i.ToMessagingEndpointPropertiesMapOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesMap) ToMessagingEndpointPropertiesMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesMapOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointProperties)(nil)).Elem()
}

func (o MessagingEndpointPropertiesOutput) ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput {
	return o
}

func (o MessagingEndpointPropertiesOutput) ToMessagingEndpointPropertiesOutputWithContext(ctx context.Context) MessagingEndpointPropertiesOutput {
	return o
}

// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type MessagingEndpointPropertiesMapOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointProperties)(nil)).Elem()
}

func (o MessagingEndpointPropertiesMapOutput) ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput {
	return o
}

func (o MessagingEndpointPropertiesMapOutput) ToMessagingEndpointPropertiesMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesMapOutput {
	return o
}

func (o MessagingEndpointPropertiesMapOutput) MapIndex(k pulumi.StringInput) MessagingEndpointPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MessagingEndpointProperties {
		return vs[0].(map[string]MessagingEndpointProperties)[vs[1].(string)]
	}).(MessagingEndpointPropertiesOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesResponse struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesResponseOutput) ToMessagingEndpointPropertiesResponseOutput() MessagingEndpointPropertiesResponseOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseOutput) ToMessagingEndpointPropertiesResponseOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseOutput {
	return o
}

// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type MessagingEndpointPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesResponseMapOutput) ToMessagingEndpointPropertiesResponseMapOutput() MessagingEndpointPropertiesResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseMapOutput) ToMessagingEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) MessagingEndpointPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MessagingEndpointPropertiesResponse {
		return vs[0].(map[string]MessagingEndpointPropertiesResponse)[vs[1].(string)]
	}).(MessagingEndpointPropertiesResponseOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringProperties struct {
	Events map[string]string `pulumi:"events"`
}

// OperationsMonitoringPropertiesInput is an input type that accepts OperationsMonitoringPropertiesArgs and OperationsMonitoringPropertiesOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesInput` via:
//
//	OperationsMonitoringPropertiesArgs{...}
type OperationsMonitoringPropertiesInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput
	ToOperationsMonitoringPropertiesOutputWithContext(context.Context) OperationsMonitoringPropertiesOutput
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesArgs struct {
	Events pulumi.StringMapInput `pulumi:"events"`
}

func (OperationsMonitoringPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringProperties)(nil)).Elem()
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput {
	return i.ToOperationsMonitoringPropertiesOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesOutput)
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return i.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesOutput).ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx)
}

// OperationsMonitoringPropertiesPtrInput is an input type that accepts OperationsMonitoringPropertiesArgs, OperationsMonitoringPropertiesPtr and OperationsMonitoringPropertiesPtrOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesPtrInput` via:
//
//	        OperationsMonitoringPropertiesArgs{...}
//
//	or:
//
//	        nil
type OperationsMonitoringPropertiesPtrInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput
	ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Context) OperationsMonitoringPropertiesPtrOutput
}

type operationsMonitoringPropertiesPtrType OperationsMonitoringPropertiesArgs

func OperationsMonitoringPropertiesPtr(v *OperationsMonitoringPropertiesArgs) OperationsMonitoringPropertiesPtrInput {
	return (*operationsMonitoringPropertiesPtrType)(v)
}

func (*operationsMonitoringPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringProperties)(nil)).Elem()
}

func (i *operationsMonitoringPropertiesPtrType) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return i.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (i *operationsMonitoringPropertiesPtrType) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesPtrOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringProperties)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput {
	return o
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesOutput {
	return o
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return o.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OperationsMonitoringProperties) *OperationsMonitoringProperties {
		return &v
	}).(OperationsMonitoringPropertiesPtrOutput)
}

func (o OperationsMonitoringPropertiesOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v OperationsMonitoringProperties) map[string]string { return v.Events }).(pulumi.StringMapOutput)
}

type OperationsMonitoringPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringProperties)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesPtrOutput) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesPtrOutput) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesPtrOutput) Elem() OperationsMonitoringPropertiesOutput {
	return o.ApplyT(func(v *OperationsMonitoringProperties) OperationsMonitoringProperties {
		if v != nil {
			return *v
		}
		var ret OperationsMonitoringProperties
		return ret
	}).(OperationsMonitoringPropertiesOutput)
}

func (o OperationsMonitoringPropertiesPtrOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperationsMonitoringProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesResponse struct {
	Events map[string]string `pulumi:"events"`
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponseOutput() OperationsMonitoringPropertiesResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponseOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponseOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v OperationsMonitoringPropertiesResponse) map[string]string { return v.Events }).(pulumi.StringMapOutput)
}

type OperationsMonitoringPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) Elem() OperationsMonitoringPropertiesResponseOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesResponse) OperationsMonitoringPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret OperationsMonitoringPropertiesResponse
		return ret
	}).(OperationsMonitoringPropertiesResponseOutput)
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringMapOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RouteProperties struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source string `pulumi:"source"`
}

// RoutePropertiesInput is an input type that accepts RoutePropertiesArgs and RoutePropertiesOutput values.
// You can construct a concrete instance of `RoutePropertiesInput` via:
//
//	RoutePropertiesArgs{...}
type RoutePropertiesInput interface {
	pulumi.Input

	ToRoutePropertiesOutput() RoutePropertiesOutput
	ToRoutePropertiesOutputWithContext(context.Context) RoutePropertiesOutput
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source pulumi.StringInput `pulumi:"source"`
}

func (RoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteProperties)(nil)).Elem()
}

func (i RoutePropertiesArgs) ToRoutePropertiesOutput() RoutePropertiesOutput {
	return i.ToRoutePropertiesOutputWithContext(context.Background())
}

func (i RoutePropertiesArgs) ToRoutePropertiesOutputWithContext(ctx context.Context) RoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesOutput)
}

// RoutePropertiesArrayInput is an input type that accepts RoutePropertiesArray and RoutePropertiesArrayOutput values.
// You can construct a concrete instance of `RoutePropertiesArrayInput` via:
//
//	RoutePropertiesArray{ RoutePropertiesArgs{...} }
type RoutePropertiesArrayInput interface {
	pulumi.Input

	ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput
	ToRoutePropertiesArrayOutputWithContext(context.Context) RoutePropertiesArrayOutput
}

type RoutePropertiesArray []RoutePropertiesInput

func (RoutePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteProperties)(nil)).Elem()
}

func (i RoutePropertiesArray) ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput {
	return i.ToRoutePropertiesArrayOutputWithContext(context.Background())
}

func (i RoutePropertiesArray) ToRoutePropertiesArrayOutputWithContext(ctx context.Context) RoutePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesArrayOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesOutput struct{ *pulumi.OutputState }

func (RoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteProperties)(nil)).Elem()
}

func (o RoutePropertiesOutput) ToRoutePropertiesOutput() RoutePropertiesOutput {
	return o
}

func (o RoutePropertiesOutput) ToRoutePropertiesOutputWithContext(ctx context.Context) RoutePropertiesOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o RoutePropertiesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteProperties) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
func (o RoutePropertiesOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteProperties) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether a route is enabled.
func (o RoutePropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RouteProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique.
func (o RoutePropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as DeviceMessages.
func (o RoutePropertiesOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RouteProperties) string { return v.Source }).(pulumi.StringOutput)
}

type RoutePropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteProperties)(nil)).Elem()
}

func (o RoutePropertiesArrayOutput) ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput {
	return o
}

func (o RoutePropertiesArrayOutput) ToRoutePropertiesArrayOutputWithContext(ctx context.Context) RoutePropertiesArrayOutput {
	return o
}

func (o RoutePropertiesArrayOutput) Index(i pulumi.IntInput) RoutePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteProperties {
		return vs[0].([]RouteProperties)[vs[1].(int)]
	}).(RoutePropertiesOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesResponse struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source string `pulumi:"source"`
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesResponse)(nil)).Elem()
}

func (o RoutePropertiesResponseOutput) ToRoutePropertiesResponseOutput() RoutePropertiesResponseOutput {
	return o
}

func (o RoutePropertiesResponseOutput) ToRoutePropertiesResponseOutputWithContext(ctx context.Context) RoutePropertiesResponseOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o RoutePropertiesResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
func (o RoutePropertiesResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether a route is enabled.
func (o RoutePropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters,  and must be unique.
func (o RoutePropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as DeviceMessages.
func (o RoutePropertiesResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) string { return v.Source }).(pulumi.StringOutput)
}

type RoutePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePropertiesResponse)(nil)).Elem()
}

func (o RoutePropertiesResponseArrayOutput) ToRoutePropertiesResponseArrayOutput() RoutePropertiesResponseArrayOutput {
	return o
}

func (o RoutePropertiesResponseArrayOutput) ToRoutePropertiesResponseArrayOutputWithContext(ctx context.Context) RoutePropertiesResponseArrayOutput {
	return o
}

func (o RoutePropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutePropertiesResponse {
		return vs[0].([]RoutePropertiesResponse)[vs[1].(int)]
	}).(RoutePropertiesResponseOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpoints struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs []RoutingEventHubProperties `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues []RoutingServiceBusQueueEndpointProperties `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics []RoutingServiceBusTopicEndpointProperties `pulumi:"serviceBusTopics"`
}

// RoutingEndpointsInput is an input type that accepts RoutingEndpointsArgs and RoutingEndpointsOutput values.
// You can construct a concrete instance of `RoutingEndpointsInput` via:
//
//	RoutingEndpointsArgs{...}
type RoutingEndpointsInput interface {
	pulumi.Input

	ToRoutingEndpointsOutput() RoutingEndpointsOutput
	ToRoutingEndpointsOutputWithContext(context.Context) RoutingEndpointsOutput
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsArgs struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs RoutingEventHubPropertiesArrayInput `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues RoutingServiceBusQueueEndpointPropertiesArrayInput `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics RoutingServiceBusTopicEndpointPropertiesArrayInput `pulumi:"serviceBusTopics"`
}

func (RoutingEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpoints)(nil)).Elem()
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsOutput() RoutingEndpointsOutput {
	return i.ToRoutingEndpointsOutputWithContext(context.Background())
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsOutputWithContext(ctx context.Context) RoutingEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsOutput)
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return i.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsOutput).ToRoutingEndpointsPtrOutputWithContext(ctx)
}

// RoutingEndpointsPtrInput is an input type that accepts RoutingEndpointsArgs, RoutingEndpointsPtr and RoutingEndpointsPtrOutput values.
// You can construct a concrete instance of `RoutingEndpointsPtrInput` via:
//
//	        RoutingEndpointsArgs{...}
//
//	or:
//
//	        nil
type RoutingEndpointsPtrInput interface {
	pulumi.Input

	ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput
	ToRoutingEndpointsPtrOutputWithContext(context.Context) RoutingEndpointsPtrOutput
}

type routingEndpointsPtrType RoutingEndpointsArgs

func RoutingEndpointsPtr(v *RoutingEndpointsArgs) RoutingEndpointsPtrInput {
	return (*routingEndpointsPtrType)(v)
}

func (*routingEndpointsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpoints)(nil)).Elem()
}

func (i *routingEndpointsPtrType) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return i.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (i *routingEndpointsPtrType) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsPtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpoints)(nil)).Elem()
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsOutput() RoutingEndpointsOutput {
	return o
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsOutputWithContext(ctx context.Context) RoutingEndpointsOutput {
	return o
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return o.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingEndpoints) *RoutingEndpoints {
		return &v
	}).(RoutingEndpointsPtrOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsOutput) EventHubs() RoutingEventHubPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingEventHubProperties { return v.EventHubs }).(RoutingEventHubPropertiesArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingServiceBusQueueEndpointProperties { return v.ServiceBusQueues }).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingServiceBusTopicEndpointProperties { return v.ServiceBusTopics }).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

type RoutingEndpointsPtrOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpoints)(nil)).Elem()
}

func (o RoutingEndpointsPtrOutput) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return o
}

func (o RoutingEndpointsPtrOutput) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return o
}

func (o RoutingEndpointsPtrOutput) Elem() RoutingEndpointsOutput {
	return o.ApplyT(func(v *RoutingEndpoints) RoutingEndpoints {
		if v != nil {
			return *v
		}
		var ret RoutingEndpoints
		return ret
	}).(RoutingEndpointsOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsPtrOutput) EventHubs() RoutingEventHubPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingEventHubProperties {
		if v == nil {
			return nil
		}
		return v.EventHubs
	}).(RoutingEventHubPropertiesArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsPtrOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingServiceBusQueueEndpointProperties {
		if v == nil {
			return nil
		}
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsPtrOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingServiceBusTopicEndpointProperties {
		if v == nil {
			return nil
		}
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsResponse struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs []RoutingEventHubPropertiesResponse `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues []RoutingServiceBusQueueEndpointPropertiesResponse `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics []RoutingServiceBusTopicEndpointPropertiesResponse `pulumi:"serviceBusTopics"`
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsResponseOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpointsResponse)(nil)).Elem()
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponseOutput() RoutingEndpointsResponseOutput {
	return o
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponseOutputWithContext(ctx context.Context) RoutingEndpointsResponseOutput {
	return o
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsResponseOutput) EventHubs() RoutingEventHubPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingEventHubPropertiesResponse { return v.EventHubs }).(RoutingEventHubPropertiesResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponseOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingServiceBusQueueEndpointPropertiesResponse {
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponseOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingServiceBusTopicEndpointPropertiesResponse {
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput)
}

type RoutingEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpointsResponse)(nil)).Elem()
}

func (o RoutingEndpointsResponsePtrOutput) ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput {
	return o
}

func (o RoutingEndpointsResponsePtrOutput) ToRoutingEndpointsResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsResponsePtrOutput {
	return o
}

func (o RoutingEndpointsResponsePtrOutput) Elem() RoutingEndpointsResponseOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) RoutingEndpointsResponse {
		if v != nil {
			return *v
		}
		var ret RoutingEndpointsResponse
		return ret
	}).(RoutingEndpointsResponseOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsResponsePtrOutput) EventHubs() RoutingEventHubPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingEventHubPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.EventHubs
	}).(RoutingEventHubPropertiesResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponsePtrOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingServiceBusQueueEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponsePtrOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingServiceBusTopicEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubProperties struct {
	// The connection string of the event hub endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingEventHubPropertiesInput is an input type that accepts RoutingEventHubPropertiesArgs and RoutingEventHubPropertiesOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesInput` via:
//
//	RoutingEventHubPropertiesArgs{...}
type RoutingEventHubPropertiesInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput
	ToRoutingEventHubPropertiesOutputWithContext(context.Context) RoutingEventHubPropertiesOutput
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesArgs struct {
	// The connection string of the event hub endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingEventHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubProperties)(nil)).Elem()
}

func (i RoutingEventHubPropertiesArgs) ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput {
	return i.ToRoutingEventHubPropertiesOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesArgs) ToRoutingEventHubPropertiesOutputWithContext(ctx context.Context) RoutingEventHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesOutput)
}

// RoutingEventHubPropertiesArrayInput is an input type that accepts RoutingEventHubPropertiesArray and RoutingEventHubPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesArrayInput` via:
//
//	RoutingEventHubPropertiesArray{ RoutingEventHubPropertiesArgs{...} }
type RoutingEventHubPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput
	ToRoutingEventHubPropertiesArrayOutputWithContext(context.Context) RoutingEventHubPropertiesArrayOutput
}

type RoutingEventHubPropertiesArray []RoutingEventHubPropertiesInput

func (RoutingEventHubPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubProperties)(nil)).Elem()
}

func (i RoutingEventHubPropertiesArray) ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput {
	return i.ToRoutingEventHubPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesArray) ToRoutingEventHubPropertiesArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubProperties)(nil)).Elem()
}

func (o RoutingEventHubPropertiesOutput) ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput {
	return o
}

func (o RoutingEventHubPropertiesOutput) ToRoutingEventHubPropertiesOutputWithContext(ctx context.Context) RoutingEventHubPropertiesOutput {
	return o
}

// The connection string of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingEventHubPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingEventHubPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubProperties)(nil)).Elem()
}

func (o RoutingEventHubPropertiesArrayOutput) ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesArrayOutput) ToRoutingEventHubPropertiesArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingEventHubPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingEventHubProperties {
		return vs[0].([]RoutingEventHubProperties)[vs[1].(int)]
	}).(RoutingEventHubPropertiesOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesResponse struct {
	// The connection string of the event hub endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesResponseOutput) ToRoutingEventHubPropertiesResponseOutput() RoutingEventHubPropertiesResponseOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseOutput) ToRoutingEventHubPropertiesResponseOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseOutput {
	return o
}

// The connection string of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the event hub endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingEventHubPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingEventHubPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesResponseArrayOutput) ToRoutingEventHubPropertiesResponseArrayOutput() RoutingEventHubPropertiesResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseArrayOutput) ToRoutingEventHubPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingEventHubPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingEventHubPropertiesResponse {
		return vs[0].([]RoutingEventHubPropertiesResponse)[vs[1].(int)]
	}).(RoutingEventHubPropertiesResponseOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingProperties struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints *RoutingEndpoints `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute *FallbackRouteProperties `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes []RouteProperties `pulumi:"routes"`
}

// RoutingPropertiesInput is an input type that accepts RoutingPropertiesArgs and RoutingPropertiesOutput values.
// You can construct a concrete instance of `RoutingPropertiesInput` via:
//
//	RoutingPropertiesArgs{...}
type RoutingPropertiesInput interface {
	pulumi.Input

	ToRoutingPropertiesOutput() RoutingPropertiesOutput
	ToRoutingPropertiesOutputWithContext(context.Context) RoutingPropertiesOutput
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesArgs struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints RoutingEndpointsPtrInput `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute FallbackRoutePropertiesPtrInput `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes RoutePropertiesArrayInput `pulumi:"routes"`
}

func (RoutingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProperties)(nil)).Elem()
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesOutput() RoutingPropertiesOutput {
	return i.ToRoutingPropertiesOutputWithContext(context.Background())
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesOutputWithContext(ctx context.Context) RoutingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesOutput)
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return i.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesOutput).ToRoutingPropertiesPtrOutputWithContext(ctx)
}

// RoutingPropertiesPtrInput is an input type that accepts RoutingPropertiesArgs, RoutingPropertiesPtr and RoutingPropertiesPtrOutput values.
// You can construct a concrete instance of `RoutingPropertiesPtrInput` via:
//
//	        RoutingPropertiesArgs{...}
//
//	or:
//
//	        nil
type RoutingPropertiesPtrInput interface {
	pulumi.Input

	ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput
	ToRoutingPropertiesPtrOutputWithContext(context.Context) RoutingPropertiesPtrOutput
}

type routingPropertiesPtrType RoutingPropertiesArgs

func RoutingPropertiesPtr(v *RoutingPropertiesArgs) RoutingPropertiesPtrInput {
	return (*routingPropertiesPtrType)(v)
}

func (*routingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProperties)(nil)).Elem()
}

func (i *routingPropertiesPtrType) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return i.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (i *routingPropertiesPtrType) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProperties)(nil)).Elem()
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesOutput() RoutingPropertiesOutput {
	return o
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesOutputWithContext(ctx context.Context) RoutingPropertiesOutput {
	return o
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return o.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingProperties) *RoutingProperties {
		return &v
	}).(RoutingPropertiesPtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesOutput) Endpoints() RoutingEndpointsPtrOutput {
	return o.ApplyT(func(v RoutingProperties) *RoutingEndpoints { return v.Endpoints }).(RoutingEndpointsPtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesOutput) FallbackRoute() FallbackRoutePropertiesPtrOutput {
	return o.ApplyT(func(v RoutingProperties) *FallbackRouteProperties { return v.FallbackRoute }).(FallbackRoutePropertiesPtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesOutput) Routes() RoutePropertiesArrayOutput {
	return o.ApplyT(func(v RoutingProperties) []RouteProperties { return v.Routes }).(RoutePropertiesArrayOutput)
}

type RoutingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProperties)(nil)).Elem()
}

func (o RoutingPropertiesPtrOutput) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return o
}

func (o RoutingPropertiesPtrOutput) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return o
}

func (o RoutingPropertiesPtrOutput) Elem() RoutingPropertiesOutput {
	return o.ApplyT(func(v *RoutingProperties) RoutingProperties {
		if v != nil {
			return *v
		}
		var ret RoutingProperties
		return ret
	}).(RoutingPropertiesOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesPtrOutput) Endpoints() RoutingEndpointsPtrOutput {
	return o.ApplyT(func(v *RoutingProperties) *RoutingEndpoints {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RoutingEndpointsPtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesPtrOutput) FallbackRoute() FallbackRoutePropertiesPtrOutput {
	return o.ApplyT(func(v *RoutingProperties) *FallbackRouteProperties {
		if v == nil {
			return nil
		}
		return v.FallbackRoute
	}).(FallbackRoutePropertiesPtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesPtrOutput) Routes() RoutePropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingProperties) []RouteProperties {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RoutePropertiesArrayOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesResponse struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints *RoutingEndpointsResponse `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute *FallbackRoutePropertiesResponse `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes []RoutePropertiesResponse `pulumi:"routes"`
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPropertiesResponse)(nil)).Elem()
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponseOutput() RoutingPropertiesResponseOutput {
	return o
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponseOutputWithContext(ctx context.Context) RoutingPropertiesResponseOutput {
	return o
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesResponseOutput) Endpoints() RoutingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) *RoutingEndpointsResponse { return v.Endpoints }).(RoutingEndpointsResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesResponseOutput) FallbackRoute() FallbackRoutePropertiesResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) *FallbackRoutePropertiesResponse { return v.FallbackRoute }).(FallbackRoutePropertiesResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesResponseOutput) Routes() RoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) []RoutePropertiesResponse { return v.Routes }).(RoutePropertiesResponseArrayOutput)
}

type RoutingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPropertiesResponse)(nil)).Elem()
}

func (o RoutingPropertiesResponsePtrOutput) ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput {
	return o
}

func (o RoutingPropertiesResponsePtrOutput) ToRoutingPropertiesResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesResponsePtrOutput {
	return o
}

func (o RoutingPropertiesResponsePtrOutput) Elem() RoutingPropertiesResponseOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) RoutingPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret RoutingPropertiesResponse
		return ret
	}).(RoutingPropertiesResponseOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesResponsePtrOutput) Endpoints() RoutingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) *RoutingEndpointsResponse {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RoutingEndpointsResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesResponsePtrOutput) FallbackRoute() FallbackRoutePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) *FallbackRoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.FallbackRoute
	}).(FallbackRoutePropertiesResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesResponsePtrOutput) Routes() RoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) []RoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RoutePropertiesResponseArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointProperties struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusQueueEndpointPropertiesInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesArgs and RoutingServiceBusQueueEndpointPropertiesOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesInput` via:
//
//	RoutingServiceBusQueueEndpointPropertiesArgs{...}
type RoutingServiceBusQueueEndpointPropertiesInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput
	ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesOutput
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesArgs struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusQueueEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesArgs) ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesArgs) ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesOutput)
}

// RoutingServiceBusQueueEndpointPropertiesArrayInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesArray and RoutingServiceBusQueueEndpointPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesArrayInput` via:
//
//	RoutingServiceBusQueueEndpointPropertiesArray{ RoutingServiceBusQueueEndpointPropertiesArgs{...} }
type RoutingServiceBusQueueEndpointPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput
	ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput
}

type RoutingServiceBusQueueEndpointPropertiesArray []RoutingServiceBusQueueEndpointPropertiesInput

func (RoutingServiceBusQueueEndpointPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesArray) ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesArray) ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesOutput) ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesOutput) ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesOutput {
	return o
}

// The connection string of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusQueueEndpointPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusQueueEndpointPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusQueueEndpointProperties {
		return vs[0].([]RoutingServiceBusQueueEndpointProperties)[vs[1].(int)]
	}).(RoutingServiceBusQueueEndpointPropertiesOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesResponse struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseOutput() RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return o
}

// The connection string of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the service bus queue endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusQueueEndpointPropertiesResponse {
		return vs[0].([]RoutingServiceBusQueueEndpointPropertiesResponse)[vs[1].(int)]
	}).(RoutingServiceBusQueueEndpointPropertiesResponseOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointProperties struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusTopicEndpointPropertiesInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesArgs and RoutingServiceBusTopicEndpointPropertiesOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesInput` via:
//
//	RoutingServiceBusTopicEndpointPropertiesArgs{...}
type RoutingServiceBusTopicEndpointPropertiesInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput
	ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesOutput
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesArgs struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusTopicEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesArgs) ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesArgs) ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesOutput)
}

// RoutingServiceBusTopicEndpointPropertiesArrayInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesArray and RoutingServiceBusTopicEndpointPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesArrayInput` via:
//
//	RoutingServiceBusTopicEndpointPropertiesArray{ RoutingServiceBusTopicEndpointPropertiesArgs{...} }
type RoutingServiceBusTopicEndpointPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput
	ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput
}

type RoutingServiceBusTopicEndpointPropertiesArray []RoutingServiceBusTopicEndpointPropertiesInput

func (RoutingServiceBusTopicEndpointPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesArray) ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesArray) ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesOutput) ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesOutput) ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesOutput {
	return o
}

// The connection string of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusTopicEndpointPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusTopicEndpointPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusTopicEndpointProperties {
		return vs[0].([]RoutingServiceBusTopicEndpointProperties)[vs[1].(int)]
	}).(RoutingServiceBusTopicEndpointPropertiesOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesResponse struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseOutput() RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return o
}

// The connection string of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the service bus topic endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved;  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusTopicEndpointPropertiesResponse {
		return vs[0].([]RoutingServiceBusTopicEndpointPropertiesResponse)[vs[1].(int)]
	}).(RoutingServiceBusTopicEndpointPropertiesResponseOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRule struct {
	// The name of the shared access policy.
	KeyName string `pulumi:"keyName"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights AccessRights `pulumi:"rights"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleInput is an input type that accepts SharedAccessSignatureAuthorizationRuleArgs and SharedAccessSignatureAuthorizationRuleOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleInput` via:
//
//	SharedAccessSignatureAuthorizationRuleArgs{...}
type SharedAccessSignatureAuthorizationRuleInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput
	ToSharedAccessSignatureAuthorizationRuleOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleOutput
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights AccessRightsInput `pulumi:"rights"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleArgs) ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleArgs) ToSharedAccessSignatureAuthorizationRuleOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleOutput)
}

// SharedAccessSignatureAuthorizationRuleArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleArray and SharedAccessSignatureAuthorizationRuleArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleArrayInput` via:
//
//	SharedAccessSignatureAuthorizationRuleArray{ SharedAccessSignatureAuthorizationRuleArgs{...} }
type SharedAccessSignatureAuthorizationRuleArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput
	ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput
}

type SharedAccessSignatureAuthorizationRuleArray []SharedAccessSignatureAuthorizationRuleInput

func (SharedAccessSignatureAuthorizationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleArray) ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleArray) ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleOutput) ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleOutput) ToSharedAccessSignatureAuthorizationRuleOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleOutput {
	return o
}

// The name of the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) string { return v.KeyName }).(pulumi.StringOutput)
}

// The primary key.
func (o SharedAccessSignatureAuthorizationRuleOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleOutput) Rights() AccessRightsOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) AccessRights { return v.Rights }).(AccessRightsOutput)
}

// The secondary key.
func (o SharedAccessSignatureAuthorizationRuleOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRule {
		return vs[0].([]SharedAccessSignatureAuthorizationRule)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleResponse struct {
	// The name of the shared access policy.
	KeyName string `pulumi:"keyName"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights string `pulumi:"rights"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleResponseOutput) ToSharedAccessSignatureAuthorizationRuleResponseOutput() SharedAccessSignatureAuthorizationRuleResponseOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseOutput) ToSharedAccessSignatureAuthorizationRuleResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseOutput {
	return o
}

// The name of the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// The primary key.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) string { return v.Rights }).(pulumi.StringOutput)
}

// The secondary key.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutput() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleResponse {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleResponse)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleResponseOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointProperties struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 *string `pulumi:"sasTtlAsIso8601"`
}

// StorageEndpointPropertiesInput is an input type that accepts StorageEndpointPropertiesArgs and StorageEndpointPropertiesOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesInput` via:
//
//	StorageEndpointPropertiesArgs{...}
type StorageEndpointPropertiesInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput
	ToStorageEndpointPropertiesOutputWithContext(context.Context) StorageEndpointPropertiesOutput
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesArgs struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 pulumi.StringPtrInput `pulumi:"sasTtlAsIso8601"`
}

func (StorageEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointProperties)(nil)).Elem()
}

func (i StorageEndpointPropertiesArgs) ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput {
	return i.ToStorageEndpointPropertiesOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesArgs) ToStorageEndpointPropertiesOutputWithContext(ctx context.Context) StorageEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesOutput)
}

// StorageEndpointPropertiesMapInput is an input type that accepts StorageEndpointPropertiesMap and StorageEndpointPropertiesMapOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesMapInput` via:
//
//	StorageEndpointPropertiesMap{ "key": StorageEndpointPropertiesArgs{...} }
type StorageEndpointPropertiesMapInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput
	ToStorageEndpointPropertiesMapOutputWithContext(context.Context) StorageEndpointPropertiesMapOutput
}

type StorageEndpointPropertiesMap map[string]StorageEndpointPropertiesInput

func (StorageEndpointPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointProperties)(nil)).Elem()
}

func (i StorageEndpointPropertiesMap) ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput {
	return i.ToStorageEndpointPropertiesMapOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesMap) ToStorageEndpointPropertiesMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesMapOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointProperties)(nil)).Elem()
}

func (o StorageEndpointPropertiesOutput) ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput {
	return o
}

func (o StorageEndpointPropertiesOutput) ToStorageEndpointPropertiesOutputWithContext(ctx context.Context) StorageEndpointPropertiesOutput {
	return o
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o StorageEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o StorageEndpointPropertiesOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointProperties) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
func (o StorageEndpointPropertiesOutput) SasTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageEndpointProperties) *string { return v.SasTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type StorageEndpointPropertiesMapOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointProperties)(nil)).Elem()
}

func (o StorageEndpointPropertiesMapOutput) ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput {
	return o
}

func (o StorageEndpointPropertiesMapOutput) ToStorageEndpointPropertiesMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesMapOutput {
	return o
}

func (o StorageEndpointPropertiesMapOutput) MapIndex(k pulumi.StringInput) StorageEndpointPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageEndpointProperties {
		return vs[0].(map[string]StorageEndpointProperties)[vs[1].(string)]
	}).(StorageEndpointPropertiesOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesResponse struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 *string `pulumi:"sasTtlAsIso8601"`
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesResponseOutput) ToStorageEndpointPropertiesResponseOutput() StorageEndpointPropertiesResponseOutput {
	return o
}

func (o StorageEndpointPropertiesResponseOutput) ToStorageEndpointPropertiesResponseOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseOutput {
	return o
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o StorageEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o StorageEndpointPropertiesResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
func (o StorageEndpointPropertiesResponseOutput) SasTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) *string { return v.SasTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type StorageEndpointPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesResponseMapOutput) ToStorageEndpointPropertiesResponseMapOutput() StorageEndpointPropertiesResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesResponseMapOutput) ToStorageEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) StorageEndpointPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageEndpointPropertiesResponse {
		return vs[0].(map[string]StorageEndpointPropertiesResponse)[vs[1].(string)]
	}).(StorageEndpointPropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudToDevicePropertiesOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesMapOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoResponseOutput{})
	pulumi.RegisterOutputType(IpFilterRuleOutput{})
	pulumi.RegisterOutputType(IpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(IpFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(IpFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesMapOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutePropertiesOutput{})
	pulumi.RegisterOutputType(RoutePropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsPtrOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsResponseOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesMapOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesResponseMapOutput{})
}
