// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220205

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The description of an X509 CA Certificate.
type CertificateProperties struct {
	// base-64 representation of X509 certificate .cer file or just .pem file content.
	Certificate *string `pulumi:"certificate"`
	// Determines whether certificate has been verified.
	IsVerified *bool `pulumi:"isVerified"`
}

// CertificatePropertiesInput is an input type that accepts CertificatePropertiesArgs and CertificatePropertiesOutput values.
// You can construct a concrete instance of `CertificatePropertiesInput` via:
//
//	CertificatePropertiesArgs{...}
type CertificatePropertiesInput interface {
	pulumi.Input

	ToCertificatePropertiesOutput() CertificatePropertiesOutput
	ToCertificatePropertiesOutputWithContext(context.Context) CertificatePropertiesOutput
}

// The description of an X509 CA Certificate.
type CertificatePropertiesArgs struct {
	// base-64 representation of X509 certificate .cer file or just .pem file content.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// Determines whether certificate has been verified.
	IsVerified pulumi.BoolPtrInput `pulumi:"isVerified"`
}

func (CertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateProperties)(nil)).Elem()
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesOutput() CertificatePropertiesOutput {
	return i.ToCertificatePropertiesOutputWithContext(context.Background())
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesOutputWithContext(ctx context.Context) CertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesOutput)
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return i.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificatePropertiesArgs) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesOutput).ToCertificatePropertiesPtrOutputWithContext(ctx)
}

// CertificatePropertiesPtrInput is an input type that accepts CertificatePropertiesArgs, CertificatePropertiesPtr and CertificatePropertiesPtrOutput values.
// You can construct a concrete instance of `CertificatePropertiesPtrInput` via:
//
//	        CertificatePropertiesArgs{...}
//
//	or:
//
//	        nil
type CertificatePropertiesPtrInput interface {
	pulumi.Input

	ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput
	ToCertificatePropertiesPtrOutputWithContext(context.Context) CertificatePropertiesPtrOutput
}

type certificatePropertiesPtrType CertificatePropertiesArgs

func CertificatePropertiesPtr(v *CertificatePropertiesArgs) CertificatePropertiesPtrInput {
	return (*certificatePropertiesPtrType)(v)
}

func (*certificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateProperties)(nil)).Elem()
}

func (i *certificatePropertiesPtrType) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return i.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificatePropertiesPtrType) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesPtrOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateProperties)(nil)).Elem()
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesOutput() CertificatePropertiesOutput {
	return o
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesOutputWithContext(ctx context.Context) CertificatePropertiesOutput {
	return o
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return o.ToCertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificatePropertiesOutput) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateProperties) *CertificateProperties {
		return &v
	}).(CertificatePropertiesPtrOutput)
}

// base-64 representation of X509 certificate .cer file or just .pem file content.
func (o CertificatePropertiesOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesOutput) IsVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificateProperties) *bool { return v.IsVerified }).(pulumi.BoolPtrOutput)
}

type CertificatePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateProperties)(nil)).Elem()
}

func (o CertificatePropertiesPtrOutput) ToCertificatePropertiesPtrOutput() CertificatePropertiesPtrOutput {
	return o
}

func (o CertificatePropertiesPtrOutput) ToCertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificatePropertiesPtrOutput {
	return o
}

func (o CertificatePropertiesPtrOutput) Elem() CertificatePropertiesOutput {
	return o.ApplyT(func(v *CertificateProperties) CertificateProperties {
		if v != nil {
			return *v
		}
		var ret CertificateProperties
		return ret
	}).(CertificatePropertiesOutput)
}

// base-64 representation of X509 certificate .cer file or just .pem file content.
func (o CertificatePropertiesPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesPtrOutput) IsVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificateProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsVerified
	}).(pulumi.BoolPtrOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponse struct {
	// base-64 representation of X509 certificate .cer file or just .pem file content.
	Certificate *string `pulumi:"certificate"`
	// The certificate's creation date and time.
	Created string `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry string `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified *bool `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject string `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated string `pulumi:"updated"`
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesResponse)(nil)).Elem()
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutput() CertificatePropertiesResponseOutput {
	return o
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutputWithContext(ctx context.Context) CertificatePropertiesResponseOutput {
	return o
}

// base-64 representation of X509 certificate .cer file or just .pem file content.
func (o CertificatePropertiesResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The certificate's creation date and time.
func (o CertificatePropertiesResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Created }).(pulumi.StringOutput)
}

// The certificate's expiration date and time.
func (o CertificatePropertiesResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesResponseOutput) IsVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) *bool { return v.IsVerified }).(pulumi.BoolPtrOutput)
}

// The certificate's subject name.
func (o CertificatePropertiesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The certificate's thumbprint.
func (o CertificatePropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The certificate's last update date and time.
func (o CertificatePropertiesResponseOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Updated }).(pulumi.StringOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescription struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy *string `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleAccessRightsDescription `pulumi:"authorizationPolicies"`
	// Optional.
	// Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
	EnableDataResidency *bool `pulumi:"enableDataResidency"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs []IotHubDefinitionDescription `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules []TargetIpFilterRule `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections []PrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Current state of the provisioning service.
	State *string `pulumi:"state"`
}

// IotDpsPropertiesDescriptionInput is an input type that accepts IotDpsPropertiesDescriptionArgs and IotDpsPropertiesDescriptionOutput values.
// You can construct a concrete instance of `IotDpsPropertiesDescriptionInput` via:
//
//	IotDpsPropertiesDescriptionArgs{...}
type IotDpsPropertiesDescriptionInput interface {
	pulumi.Input

	ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput
	ToIotDpsPropertiesDescriptionOutputWithContext(context.Context) IotDpsPropertiesDescriptionOutput
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionArgs struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy pulumi.StringPtrInput `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput `pulumi:"authorizationPolicies"`
	// Optional.
	// Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
	EnableDataResidency pulumi.BoolPtrInput `pulumi:"enableDataResidency"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs IotHubDefinitionDescriptionArrayInput `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules TargetIpFilterRuleArrayInput `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections PrivateEndpointConnectionArrayInput `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Current state of the provisioning service.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (IotDpsPropertiesDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescription)(nil)).Elem()
}

func (i IotDpsPropertiesDescriptionArgs) ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput {
	return i.ToIotDpsPropertiesDescriptionOutputWithContext(context.Background())
}

func (i IotDpsPropertiesDescriptionArgs) ToIotDpsPropertiesDescriptionOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDpsPropertiesDescriptionOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionOutput struct{ *pulumi.OutputState }

func (IotDpsPropertiesDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescription)(nil)).Elem()
}

func (o IotDpsPropertiesDescriptionOutput) ToIotDpsPropertiesDescriptionOutput() IotDpsPropertiesDescriptionOutput {
	return o
}

func (o IotDpsPropertiesDescriptionOutput) ToIotDpsPropertiesDescriptionOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionOutput {
	return o
}

// Allocation policy to be used by this provisioning service.
func (o IotDpsPropertiesDescriptionOutput) AllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.AllocationPolicy }).(pulumi.StringPtrOutput)
}

// List of authorization keys for a provisioning service.
func (o IotDpsPropertiesDescriptionOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []SharedAccessSignatureAuthorizationRuleAccessRightsDescription {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput)
}

// Optional.
// Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
func (o IotDpsPropertiesDescriptionOutput) EnableDataResidency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *bool { return v.EnableDataResidency }).(pulumi.BoolPtrOutput)
}

// List of IoT hubs associated with this provisioning service.
func (o IotDpsPropertiesDescriptionOutput) IotHubs() IotHubDefinitionDescriptionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []IotHubDefinitionDescription { return v.IotHubs }).(IotHubDefinitionDescriptionArrayOutput)
}

// The IP filter rules.
func (o IotDpsPropertiesDescriptionOutput) IpFilterRules() TargetIpFilterRuleArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []TargetIpFilterRule { return v.IpFilterRules }).(TargetIpFilterRuleArrayOutput)
}

// Private endpoint connections created on this IotHub
func (o IotDpsPropertiesDescriptionOutput) PrivateEndpointConnections() PrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) []PrivateEndpointConnection { return v.PrivateEndpointConnections }).(PrivateEndpointConnectionArrayOutput)
}

// The ARM provisioning state of the provisioning service.
func (o IotDpsPropertiesDescriptionOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Whether requests from Public Network are allowed
func (o IotDpsPropertiesDescriptionOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Current state of the provisioning service.
func (o IotDpsPropertiesDescriptionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescription) *string { return v.State }).(pulumi.StringPtrOutput)
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionResponse struct {
	// Allocation policy to be used by this provisioning service.
	AllocationPolicy *string `pulumi:"allocationPolicy"`
	// List of authorization keys for a provisioning service.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse `pulumi:"authorizationPolicies"`
	// Device endpoint for this provisioning service.
	DeviceProvisioningHostName string `pulumi:"deviceProvisioningHostName"`
	// Optional.
	// Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
	EnableDataResidency *bool `pulumi:"enableDataResidency"`
	// Unique identifier of this provisioning service.
	IdScope string `pulumi:"idScope"`
	// List of IoT hubs associated with this provisioning service.
	IotHubs []IotHubDefinitionDescriptionResponse `pulumi:"iotHubs"`
	// The IP filter rules.
	IpFilterRules []TargetIpFilterRuleResponse `pulumi:"ipFilterRules"`
	// Private endpoint connections created on this IotHub
	PrivateEndpointConnections []PrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// The ARM provisioning state of the provisioning service.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Whether requests from Public Network are allowed
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Service endpoint for provisioning service.
	ServiceOperationsHostName string `pulumi:"serviceOperationsHostName"`
	// Current state of the provisioning service.
	State *string `pulumi:"state"`
}

// the service specific properties of a provisioning service, including keys, linked iot hubs, current state, and system generated properties such as hostname and idScope
type IotDpsPropertiesDescriptionResponseOutput struct{ *pulumi.OutputState }

func (IotDpsPropertiesDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsPropertiesDescriptionResponse)(nil)).Elem()
}

func (o IotDpsPropertiesDescriptionResponseOutput) ToIotDpsPropertiesDescriptionResponseOutput() IotDpsPropertiesDescriptionResponseOutput {
	return o
}

func (o IotDpsPropertiesDescriptionResponseOutput) ToIotDpsPropertiesDescriptionResponseOutputWithContext(ctx context.Context) IotDpsPropertiesDescriptionResponseOutput {
	return o
}

// Allocation policy to be used by this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) AllocationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.AllocationPolicy }).(pulumi.StringPtrOutput)
}

// List of authorization keys for a provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput)
}

// Device endpoint for this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) DeviceProvisioningHostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.DeviceProvisioningHostName }).(pulumi.StringOutput)
}

// Optional.
// Indicates if the DPS instance has Data Residency enabled, removing the cross geo-pair disaster recovery.
func (o IotDpsPropertiesDescriptionResponseOutput) EnableDataResidency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *bool { return v.EnableDataResidency }).(pulumi.BoolPtrOutput)
}

// Unique identifier of this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) IdScope() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.IdScope }).(pulumi.StringOutput)
}

// List of IoT hubs associated with this provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) IotHubs() IotHubDefinitionDescriptionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []IotHubDefinitionDescriptionResponse { return v.IotHubs }).(IotHubDefinitionDescriptionResponseArrayOutput)
}

// The IP filter rules.
func (o IotDpsPropertiesDescriptionResponseOutput) IpFilterRules() TargetIpFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []TargetIpFilterRuleResponse { return v.IpFilterRules }).(TargetIpFilterRuleResponseArrayOutput)
}

// Private endpoint connections created on this IotHub
func (o IotDpsPropertiesDescriptionResponseOutput) PrivateEndpointConnections() PrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) []PrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(PrivateEndpointConnectionResponseArrayOutput)
}

// The ARM provisioning state of the provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Whether requests from Public Network are allowed
func (o IotDpsPropertiesDescriptionResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Service endpoint for provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) ServiceOperationsHostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) string { return v.ServiceOperationsHostName }).(pulumi.StringOutput)
}

// Current state of the provisioning service.
func (o IotDpsPropertiesDescriptionResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsPropertiesDescriptionResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfo struct {
	// The number of units to provision
	Capacity *float64 `pulumi:"capacity"`
	// Sku name.
	Name *string `pulumi:"name"`
}

// IotDpsSkuInfoInput is an input type that accepts IotDpsSkuInfoArgs and IotDpsSkuInfoOutput values.
// You can construct a concrete instance of `IotDpsSkuInfoInput` via:
//
//	IotDpsSkuInfoArgs{...}
type IotDpsSkuInfoInput interface {
	pulumi.Input

	ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput
	ToIotDpsSkuInfoOutputWithContext(context.Context) IotDpsSkuInfoOutput
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoArgs struct {
	// The number of units to provision
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// Sku name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (IotDpsSkuInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfo)(nil)).Elem()
}

func (i IotDpsSkuInfoArgs) ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput {
	return i.ToIotDpsSkuInfoOutputWithContext(context.Background())
}

func (i IotDpsSkuInfoArgs) ToIotDpsSkuInfoOutputWithContext(ctx context.Context) IotDpsSkuInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDpsSkuInfoOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoOutput struct{ *pulumi.OutputState }

func (IotDpsSkuInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfo)(nil)).Elem()
}

func (o IotDpsSkuInfoOutput) ToIotDpsSkuInfoOutput() IotDpsSkuInfoOutput {
	return o
}

func (o IotDpsSkuInfoOutput) ToIotDpsSkuInfoOutputWithContext(ctx context.Context) IotDpsSkuInfoOutput {
	return o
}

// The number of units to provision
func (o IotDpsSkuInfoOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfo) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// Sku name.
func (o IotDpsSkuInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoResponse struct {
	// The number of units to provision
	Capacity *float64 `pulumi:"capacity"`
	// Sku name.
	Name *string `pulumi:"name"`
	// Pricing tier name of the provisioning service.
	Tier string `pulumi:"tier"`
}

// List of possible provisioning service SKUs.
type IotDpsSkuInfoResponseOutput struct{ *pulumi.OutputState }

func (IotDpsSkuInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDpsSkuInfoResponse)(nil)).Elem()
}

func (o IotDpsSkuInfoResponseOutput) ToIotDpsSkuInfoResponseOutput() IotDpsSkuInfoResponseOutput {
	return o
}

func (o IotDpsSkuInfoResponseOutput) ToIotDpsSkuInfoResponseOutputWithContext(ctx context.Context) IotDpsSkuInfoResponseOutput {
	return o
}

// The number of units to provision
func (o IotDpsSkuInfoResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// Sku name.
func (o IotDpsSkuInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pricing tier name of the provisioning service.
func (o IotDpsSkuInfoResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v IotDpsSkuInfoResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescription struct {
	// weight to apply for a given iot h.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString string `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location string `pulumi:"location"`
}

// IotHubDefinitionDescriptionInput is an input type that accepts IotHubDefinitionDescriptionArgs and IotHubDefinitionDescriptionOutput values.
// You can construct a concrete instance of `IotHubDefinitionDescriptionInput` via:
//
//	IotHubDefinitionDescriptionArgs{...}
type IotHubDefinitionDescriptionInput interface {
	pulumi.Input

	ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput
	ToIotHubDefinitionDescriptionOutputWithContext(context.Context) IotHubDefinitionDescriptionOutput
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionArgs struct {
	// weight to apply for a given iot h.
	AllocationWeight pulumi.IntPtrInput `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy pulumi.BoolPtrInput `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location pulumi.StringInput `pulumi:"location"`
}

func (IotHubDefinitionDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescription)(nil)).Elem()
}

func (i IotHubDefinitionDescriptionArgs) ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput {
	return i.ToIotHubDefinitionDescriptionOutputWithContext(context.Background())
}

func (i IotHubDefinitionDescriptionArgs) ToIotHubDefinitionDescriptionOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDefinitionDescriptionOutput)
}

// IotHubDefinitionDescriptionArrayInput is an input type that accepts IotHubDefinitionDescriptionArray and IotHubDefinitionDescriptionArrayOutput values.
// You can construct a concrete instance of `IotHubDefinitionDescriptionArrayInput` via:
//
//	IotHubDefinitionDescriptionArray{ IotHubDefinitionDescriptionArgs{...} }
type IotHubDefinitionDescriptionArrayInput interface {
	pulumi.Input

	ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput
	ToIotHubDefinitionDescriptionArrayOutputWithContext(context.Context) IotHubDefinitionDescriptionArrayOutput
}

type IotHubDefinitionDescriptionArray []IotHubDefinitionDescriptionInput

func (IotHubDefinitionDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescription)(nil)).Elem()
}

func (i IotHubDefinitionDescriptionArray) ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput {
	return i.ToIotHubDefinitionDescriptionArrayOutputWithContext(context.Background())
}

func (i IotHubDefinitionDescriptionArray) ToIotHubDefinitionDescriptionArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDefinitionDescriptionArrayOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescription)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionOutput) ToIotHubDefinitionDescriptionOutput() IotHubDefinitionDescriptionOutput {
	return o
}

func (o IotHubDefinitionDescriptionOutput) ToIotHubDefinitionDescriptionOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionOutput {
	return o
}

// weight to apply for a given iot h.
func (o IotHubDefinitionDescriptionOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// flag for applying allocationPolicy or not for a given iot hub.
func (o IotHubDefinitionDescriptionOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// Connection string of the IoT hub.
func (o IotHubDefinitionDescriptionOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// ARM region of the IoT hub.
func (o IotHubDefinitionDescriptionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescription) string { return v.Location }).(pulumi.StringOutput)
}

type IotHubDefinitionDescriptionArrayOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescription)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionArrayOutput) ToIotHubDefinitionDescriptionArrayOutput() IotHubDefinitionDescriptionArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionArrayOutput) ToIotHubDefinitionDescriptionArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionArrayOutput) Index(i pulumi.IntInput) IotHubDefinitionDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDefinitionDescription {
		return vs[0].([]IotHubDefinitionDescription)[vs[1].(int)]
	}).(IotHubDefinitionDescriptionOutput)
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionResponse struct {
	// weight to apply for a given iot h.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// flag for applying allocationPolicy or not for a given iot hub.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// Connection string of the IoT hub.
	ConnectionString string `pulumi:"connectionString"`
	// ARM region of the IoT hub.
	Location string `pulumi:"location"`
	// Host name of the IoT hub.
	Name string `pulumi:"name"`
}

// Description of the IoT hub.
type IotHubDefinitionDescriptionResponseOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDefinitionDescriptionResponse)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionResponseOutput) ToIotHubDefinitionDescriptionResponseOutput() IotHubDefinitionDescriptionResponseOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseOutput) ToIotHubDefinitionDescriptionResponseOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionResponseOutput {
	return o
}

// weight to apply for a given iot h.
func (o IotHubDefinitionDescriptionResponseOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// flag for applying allocationPolicy or not for a given iot hub.
func (o IotHubDefinitionDescriptionResponseOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// Connection string of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// ARM region of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Host name of the IoT hub.
func (o IotHubDefinitionDescriptionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDefinitionDescriptionResponse) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubDefinitionDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (IotHubDefinitionDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDefinitionDescriptionResponse)(nil)).Elem()
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) ToIotHubDefinitionDescriptionResponseArrayOutput() IotHubDefinitionDescriptionResponseArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) ToIotHubDefinitionDescriptionResponseArrayOutputWithContext(ctx context.Context) IotHubDefinitionDescriptionResponseArrayOutput {
	return o
}

func (o IotHubDefinitionDescriptionResponseArrayOutput) Index(i pulumi.IntInput) IotHubDefinitionDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDefinitionDescriptionResponse {
		return vs[0].([]IotHubDefinitionDescriptionResponse)[vs[1].(int)]
	}).(IotHubDefinitionDescriptionResponseOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnection struct {
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionProperties `pulumi:"properties"`
}

// PrivateEndpointConnectionInput is an input type that accepts PrivateEndpointConnectionArgs and PrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionInput` via:
//
//	PrivateEndpointConnectionArgs{...}
type PrivateEndpointConnectionInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput
	ToPrivateEndpointConnectionOutputWithContext(context.Context) PrivateEndpointConnectionOutput
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionArgs struct {
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionPropertiesInput `pulumi:"properties"`
}

func (PrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return i.ToPrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArgs) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionOutput)
}

// PrivateEndpointConnectionArrayInput is an input type that accepts PrivateEndpointConnectionArray and PrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionArrayInput` via:
//
//	PrivateEndpointConnectionArray{ PrivateEndpointConnectionArgs{...} }
type PrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput
	ToPrivateEndpointConnectionArrayOutputWithContext(context.Context) PrivateEndpointConnectionArrayOutput
}

type PrivateEndpointConnectionArray []PrivateEndpointConnectionInput

func (PrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return i.ToPrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionArray) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionArrayOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutput() PrivateEndpointConnectionOutput {
	return o
}

func (o PrivateEndpointConnectionOutput) ToPrivateEndpointConnectionOutputWithContext(ctx context.Context) PrivateEndpointConnectionOutput {
	return o
}

// The properties of a private endpoint connection
func (o PrivateEndpointConnectionOutput) Properties() PrivateEndpointConnectionPropertiesOutput {
	return o.ApplyT(func(v PrivateEndpointConnection) PrivateEndpointConnectionProperties { return v.Properties }).(PrivateEndpointConnectionPropertiesOutput)
}

type PrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnection)(nil)).Elem()
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutput() PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) ToPrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionArrayOutput {
	return o
}

func (o PrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnection {
		return vs[0].([]PrivateEndpointConnection)[vs[1].(int)]
	}).(PrivateEndpointConnectionOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionProperties struct {
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
}

// PrivateEndpointConnectionPropertiesInput is an input type that accepts PrivateEndpointConnectionPropertiesArgs and PrivateEndpointConnectionPropertiesOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionPropertiesInput` via:
//
//	PrivateEndpointConnectionPropertiesArgs{...}
type PrivateEndpointConnectionPropertiesInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput
	ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Context) PrivateEndpointConnectionPropertiesOutput
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesArgs struct {
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateInput `pulumi:"privateLinkServiceConnectionState"`
}

func (PrivateEndpointConnectionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return i.ToPrivateEndpointConnectionPropertiesOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionPropertiesArgs) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionPropertiesOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionProperties)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutput() PrivateEndpointConnectionPropertiesOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesOutput) ToPrivateEndpointConnectionPropertiesOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesOutput {
	return o
}

// The current state of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionProperties) PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateOutput)
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesResponse struct {
	// The private endpoint property of a private endpoint connection
	PrivateEndpoint *PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The current state of a private endpoint connection
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
}

// The properties of a private endpoint connection
type PrivateEndpointConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionPropertiesResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutput() PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

func (o PrivateEndpointConnectionPropertiesResponseOutput) ToPrivateEndpointConnectionPropertiesResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionPropertiesResponseOutput {
	return o
}

// The private endpoint property of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateEndpoint() PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) *PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponsePtrOutput)
}

// The current state of a private endpoint connection
func (o PrivateEndpointConnectionPropertiesResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionPropertiesResponse) PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
	// The resource name.
	Name string `pulumi:"name"`
	// The properties of a private endpoint connection
	Properties PrivateEndpointConnectionPropertiesResponse `pulumi:"properties"`
	// Metadata pertaining to creation and last modification of the resource.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The resource type.
	Type string `pulumi:"type"`
}

// The private endpoint connection of a provisioning service
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The resource name.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The properties of a private endpoint connection
func (o PrivateEndpointConnectionResponseOutput) Properties() PrivateEndpointConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateEndpointConnectionPropertiesResponse {
		return v.Properties
	}).(PrivateEndpointConnectionPropertiesResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
func (o PrivateEndpointConnectionResponseOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// The private endpoint property of a private endpoint connection
type PrivateEndpointResponse struct {
	// The resource identifier.
	Id string `pulumi:"id"`
}

// The private endpoint property of a private endpoint connection
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The resource identifier.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The resource identifier.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionState struct {
	// Actions required for a private endpoint connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description string `pulumi:"description"`
	// The status of a private endpoint connection
	Status string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateArgs struct {
	// Actions required for a private endpoint connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description pulumi.StringInput `pulumi:"description"`
	// The status of a private endpoint connection
	Status pulumi.StringInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// Actions required for a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateResponse struct {
	// Actions required for a private endpoint connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The description for the current state of a private endpoint connection
	Description string `pulumi:"description"`
	// The status of a private endpoint connection
	Status string `pulumi:"status"`
}

// The current state of a private endpoint connection
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// Actions required for a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The description for the current state of a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Description }).(pulumi.StringOutput)
}

// The status of a private endpoint connection
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) string { return v.Status }).(pulumi.StringOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescription struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights string `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput is an input type that accepts SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs and SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput` via:
//
//	SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs{...}
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput
	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs struct {
	// Name of the key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights pulumi.StringInput `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput)
}

// SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray and SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput` via:
//
//	SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray{ SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArgs{...} }
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput
	ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray []SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionInput

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArray) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return o
}

// Name of the key.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) string { return v.KeyName }).(pulumi.StringOutput)
}

// Primary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Rights that this key has.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) string { return v.Rights }).(pulumi.StringOutput)
}

// Secondary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescription) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleAccessRightsDescription {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleAccessRightsDescription)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput)
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse struct {
	// Name of the key.
	KeyName string `pulumi:"keyName"`
	// Primary SAS key value.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Rights that this key has.
	Rights string `pulumi:"rights"`
	// Secondary SAS key value.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// Description of the shared access key.
type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return o
}

// Name of the key.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// Primary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) *string {
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Rights that this key has.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) string { return v.Rights }).(pulumi.StringOutput)
}

// Secondary SAS key value.
func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse) *string {
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput() SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponse)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRule struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionType `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target *IpFilterTargetType `pulumi:"target"`
}

// TargetIpFilterRuleInput is an input type that accepts TargetIpFilterRuleArgs and TargetIpFilterRuleOutput values.
// You can construct a concrete instance of `TargetIpFilterRuleInput` via:
//
//	TargetIpFilterRuleArgs{...}
type TargetIpFilterRuleInput interface {
	pulumi.Input

	ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput
	ToTargetIpFilterRuleOutputWithContext(context.Context) TargetIpFilterRuleOutput
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleArgs struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionTypeInput `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target IpFilterTargetTypePtrInput `pulumi:"target"`
}

func (TargetIpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRule)(nil)).Elem()
}

func (i TargetIpFilterRuleArgs) ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput {
	return i.ToTargetIpFilterRuleOutputWithContext(context.Background())
}

func (i TargetIpFilterRuleArgs) ToTargetIpFilterRuleOutputWithContext(ctx context.Context) TargetIpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetIpFilterRuleOutput)
}

// TargetIpFilterRuleArrayInput is an input type that accepts TargetIpFilterRuleArray and TargetIpFilterRuleArrayOutput values.
// You can construct a concrete instance of `TargetIpFilterRuleArrayInput` via:
//
//	TargetIpFilterRuleArray{ TargetIpFilterRuleArgs{...} }
type TargetIpFilterRuleArrayInput interface {
	pulumi.Input

	ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput
	ToTargetIpFilterRuleArrayOutputWithContext(context.Context) TargetIpFilterRuleArrayOutput
}

type TargetIpFilterRuleArray []TargetIpFilterRuleInput

func (TargetIpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRule)(nil)).Elem()
}

func (i TargetIpFilterRuleArray) ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput {
	return i.ToTargetIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i TargetIpFilterRuleArray) ToTargetIpFilterRuleArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetIpFilterRuleArrayOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRule)(nil)).Elem()
}

func (o TargetIpFilterRuleOutput) ToTargetIpFilterRuleOutput() TargetIpFilterRuleOutput {
	return o
}

func (o TargetIpFilterRuleOutput) ToTargetIpFilterRuleOutputWithContext(ctx context.Context) TargetIpFilterRuleOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o TargetIpFilterRuleOutput) Action() IpFilterActionTypeOutput {
	return o.ApplyT(func(v TargetIpFilterRule) IpFilterActionType { return v.Action }).(IpFilterActionTypeOutput)
}

// The name of the IP filter rule.
func (o TargetIpFilterRuleOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRule) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o TargetIpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

// Target for requests captured by this rule.
func (o TargetIpFilterRuleOutput) Target() IpFilterTargetTypePtrOutput {
	return o.ApplyT(func(v TargetIpFilterRule) *IpFilterTargetType { return v.Target }).(IpFilterTargetTypePtrOutput)
}

type TargetIpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRule)(nil)).Elem()
}

func (o TargetIpFilterRuleArrayOutput) ToTargetIpFilterRuleArrayOutput() TargetIpFilterRuleArrayOutput {
	return o
}

func (o TargetIpFilterRuleArrayOutput) ToTargetIpFilterRuleArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleArrayOutput {
	return o
}

func (o TargetIpFilterRuleArrayOutput) Index(i pulumi.IntInput) TargetIpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetIpFilterRule {
		return vs[0].([]TargetIpFilterRule)[vs[1].(int)]
	}).(TargetIpFilterRuleOutput)
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleResponse struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// Target for requests captured by this rule.
	Target *string `pulumi:"target"`
}

// The IP filter rules for a provisioning Service.
type TargetIpFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetIpFilterRuleResponse)(nil)).Elem()
}

func (o TargetIpFilterRuleResponseOutput) ToTargetIpFilterRuleResponseOutput() TargetIpFilterRuleResponseOutput {
	return o
}

func (o TargetIpFilterRuleResponseOutput) ToTargetIpFilterRuleResponseOutputWithContext(ctx context.Context) TargetIpFilterRuleResponseOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o TargetIpFilterRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o TargetIpFilterRuleResponseOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o TargetIpFilterRuleResponseOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) string { return v.IpMask }).(pulumi.StringOutput)
}

// Target for requests captured by this rule.
func (o TargetIpFilterRuleResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetIpFilterRuleResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type TargetIpFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (TargetIpFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TargetIpFilterRuleResponse)(nil)).Elem()
}

func (o TargetIpFilterRuleResponseArrayOutput) ToTargetIpFilterRuleResponseArrayOutput() TargetIpFilterRuleResponseArrayOutput {
	return o
}

func (o TargetIpFilterRuleResponseArrayOutput) ToTargetIpFilterRuleResponseArrayOutputWithContext(ctx context.Context) TargetIpFilterRuleResponseArrayOutput {
	return o
}

func (o TargetIpFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) TargetIpFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TargetIpFilterRuleResponse {
		return vs[0].([]TargetIpFilterRuleResponse)[vs[1].(int)]
	}).(TargetIpFilterRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificatePropertiesOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(IotDpsPropertiesDescriptionOutput{})
	pulumi.RegisterOutputType(IotDpsPropertiesDescriptionResponseOutput{})
	pulumi.RegisterOutputType(IotDpsSkuInfoOutput{})
	pulumi.RegisterOutputType(IotDpsSkuInfoResponseOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionArrayOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionResponseOutput{})
	pulumi.RegisterOutputType(IotHubDefinitionDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleAccessRightsDescriptionResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(TargetIpFilterRuleResponseArrayOutput{})
}
