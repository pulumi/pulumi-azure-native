// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The description of an X509 CA Certificate.
type CertificatePropertiesInvokeResponse struct {
	// The certificate content
	Certificate *string `pulumi:"certificate"`
	// The certificate's create date and time.
	Created string `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry string `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified bool `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject string `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated string `pulumi:"updated"`
}

// CertificatePropertiesInvokeResponseInput is an input type that accepts CertificatePropertiesInvokeResponseArgs and CertificatePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `CertificatePropertiesInvokeResponseInput` via:
//
//          CertificatePropertiesInvokeResponseArgs{...}
type CertificatePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToCertificatePropertiesInvokeResponseOutput() CertificatePropertiesInvokeResponseOutput
	ToCertificatePropertiesInvokeResponseOutputWithContext(context.Context) CertificatePropertiesInvokeResponseOutput
}

// The description of an X509 CA Certificate.
type CertificatePropertiesInvokeResponseArgs struct {
	// The certificate content
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The certificate's create date and time.
	Created pulumi.StringInput `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry pulumi.StringInput `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified pulumi.BoolInput `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (CertificatePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesInvokeResponse)(nil)).Elem()
}

func (i CertificatePropertiesInvokeResponseArgs) ToCertificatePropertiesInvokeResponseOutput() CertificatePropertiesInvokeResponseOutput {
	return i.ToCertificatePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i CertificatePropertiesInvokeResponseArgs) ToCertificatePropertiesInvokeResponseOutputWithContext(ctx context.Context) CertificatePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesInvokeResponseOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesInvokeResponse)(nil)).Elem()
}

func (o CertificatePropertiesInvokeResponseOutput) ToCertificatePropertiesInvokeResponseOutput() CertificatePropertiesInvokeResponseOutput {
	return o
}

func (o CertificatePropertiesInvokeResponseOutput) ToCertificatePropertiesInvokeResponseOutputWithContext(ctx context.Context) CertificatePropertiesInvokeResponseOutput {
	return o
}

// The certificate content
func (o CertificatePropertiesInvokeResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The certificate's create date and time.
func (o CertificatePropertiesInvokeResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) string { return v.Created }).(pulumi.StringOutput)
}

// The certificate's expiration date and time.
func (o CertificatePropertiesInvokeResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesInvokeResponseOutput) IsVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) bool { return v.IsVerified }).(pulumi.BoolOutput)
}

// The certificate's subject name.
func (o CertificatePropertiesInvokeResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The certificate's thumbprint.
func (o CertificatePropertiesInvokeResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The certificate's last update date and time.
func (o CertificatePropertiesInvokeResponseOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesInvokeResponse) string { return v.Updated }).(pulumi.StringOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponse struct {
	// The certificate content
	Certificate *string `pulumi:"certificate"`
	// The certificate's create date and time.
	Created string `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry string `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified bool `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject string `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint string `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated string `pulumi:"updated"`
}

// CertificatePropertiesResponseInput is an input type that accepts CertificatePropertiesResponseArgs and CertificatePropertiesResponseOutput values.
// You can construct a concrete instance of `CertificatePropertiesResponseInput` via:
//
//          CertificatePropertiesResponseArgs{...}
type CertificatePropertiesResponseInput interface {
	pulumi.Input

	ToCertificatePropertiesResponseOutput() CertificatePropertiesResponseOutput
	ToCertificatePropertiesResponseOutputWithContext(context.Context) CertificatePropertiesResponseOutput
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponseArgs struct {
	// The certificate content
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The certificate's create date and time.
	Created pulumi.StringInput `pulumi:"created"`
	// The certificate's expiration date and time.
	Expiry pulumi.StringInput `pulumi:"expiry"`
	// Determines whether certificate has been verified.
	IsVerified pulumi.BoolInput `pulumi:"isVerified"`
	// The certificate's subject name.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The certificate's thumbprint.
	Thumbprint pulumi.StringInput `pulumi:"thumbprint"`
	// The certificate's last update date and time.
	Updated pulumi.StringInput `pulumi:"updated"`
}

func (CertificatePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesResponse)(nil)).Elem()
}

func (i CertificatePropertiesResponseArgs) ToCertificatePropertiesResponseOutput() CertificatePropertiesResponseOutput {
	return i.ToCertificatePropertiesResponseOutputWithContext(context.Background())
}

func (i CertificatePropertiesResponseArgs) ToCertificatePropertiesResponseOutputWithContext(ctx context.Context) CertificatePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesResponseOutput)
}

func (i CertificatePropertiesResponseArgs) ToCertificatePropertiesResponsePtrOutput() CertificatePropertiesResponsePtrOutput {
	return i.ToCertificatePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CertificatePropertiesResponseArgs) ToCertificatePropertiesResponsePtrOutputWithContext(ctx context.Context) CertificatePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesResponseOutput).ToCertificatePropertiesResponsePtrOutputWithContext(ctx)
}

// CertificatePropertiesResponsePtrInput is an input type that accepts CertificatePropertiesResponseArgs, CertificatePropertiesResponsePtr and CertificatePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CertificatePropertiesResponsePtrInput` via:
//
//          CertificatePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CertificatePropertiesResponsePtrInput interface {
	pulumi.Input

	ToCertificatePropertiesResponsePtrOutput() CertificatePropertiesResponsePtrOutput
	ToCertificatePropertiesResponsePtrOutputWithContext(context.Context) CertificatePropertiesResponsePtrOutput
}

type certificatePropertiesResponsePtrType CertificatePropertiesResponseArgs

func CertificatePropertiesResponsePtr(v *CertificatePropertiesResponseArgs) CertificatePropertiesResponsePtrInput {
	return (*certificatePropertiesResponsePtrType)(v)
}

func (*certificatePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificatePropertiesResponse)(nil)).Elem()
}

func (i *certificatePropertiesResponsePtrType) ToCertificatePropertiesResponsePtrOutput() CertificatePropertiesResponsePtrOutput {
	return i.ToCertificatePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *certificatePropertiesResponsePtrType) ToCertificatePropertiesResponsePtrOutputWithContext(ctx context.Context) CertificatePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificatePropertiesResponsePtrOutput)
}

// The description of an X509 CA Certificate.
type CertificatePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificatePropertiesResponse)(nil)).Elem()
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutput() CertificatePropertiesResponseOutput {
	return o
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponseOutputWithContext(ctx context.Context) CertificatePropertiesResponseOutput {
	return o
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponsePtrOutput() CertificatePropertiesResponsePtrOutput {
	return o.ToCertificatePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CertificatePropertiesResponseOutput) ToCertificatePropertiesResponsePtrOutputWithContext(ctx context.Context) CertificatePropertiesResponsePtrOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) *CertificatePropertiesResponse {
		return &v
	}).(CertificatePropertiesResponsePtrOutput)
}

// The certificate content
func (o CertificatePropertiesResponseOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The certificate's create date and time.
func (o CertificatePropertiesResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Created }).(pulumi.StringOutput)
}

// The certificate's expiration date and time.
func (o CertificatePropertiesResponseOutput) Expiry() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Expiry }).(pulumi.StringOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesResponseOutput) IsVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) bool { return v.IsVerified }).(pulumi.BoolOutput)
}

// The certificate's subject name.
func (o CertificatePropertiesResponseOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Subject }).(pulumi.StringOutput)
}

// The certificate's thumbprint.
func (o CertificatePropertiesResponseOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Thumbprint }).(pulumi.StringOutput)
}

// The certificate's last update date and time.
func (o CertificatePropertiesResponseOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v CertificatePropertiesResponse) string { return v.Updated }).(pulumi.StringOutput)
}

type CertificatePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CertificatePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificatePropertiesResponse)(nil)).Elem()
}

func (o CertificatePropertiesResponsePtrOutput) ToCertificatePropertiesResponsePtrOutput() CertificatePropertiesResponsePtrOutput {
	return o
}

func (o CertificatePropertiesResponsePtrOutput) ToCertificatePropertiesResponsePtrOutputWithContext(ctx context.Context) CertificatePropertiesResponsePtrOutput {
	return o
}

func (o CertificatePropertiesResponsePtrOutput) Elem() CertificatePropertiesResponseOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) CertificatePropertiesResponse { return *v }).(CertificatePropertiesResponseOutput)
}

// The certificate content
func (o CertificatePropertiesResponsePtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The certificate's create date and time.
func (o CertificatePropertiesResponsePtrOutput) Created() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Created
	}).(pulumi.StringPtrOutput)
}

// The certificate's expiration date and time.
func (o CertificatePropertiesResponsePtrOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Expiry
	}).(pulumi.StringPtrOutput)
}

// Determines whether certificate has been verified.
func (o CertificatePropertiesResponsePtrOutput) IsVerified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsVerified
	}).(pulumi.BoolPtrOutput)
}

// The certificate's subject name.
func (o CertificatePropertiesResponsePtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The certificate's thumbprint.
func (o CertificatePropertiesResponsePtrOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Thumbprint
	}).(pulumi.StringPtrOutput)
}

// The certificate's last update date and time.
func (o CertificatePropertiesResponsePtrOutput) Updated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificatePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Updated
	}).(pulumi.StringPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDeviceProperties struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 *string `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback *FeedbackProperties `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// CloudToDevicePropertiesInput is an input type that accepts CloudToDevicePropertiesArgs and CloudToDevicePropertiesOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesInput` via:
//
//          CloudToDevicePropertiesArgs{...}
type CloudToDevicePropertiesInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput
	ToCloudToDevicePropertiesOutputWithContext(context.Context) CloudToDevicePropertiesOutput
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesArgs struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 pulumi.StringPtrInput `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback FeedbackPropertiesPtrInput `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
}

func (CloudToDevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDeviceProperties)(nil)).Elem()
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput {
	return i.ToCloudToDevicePropertiesOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesOutputWithContext(ctx context.Context) CloudToDevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesOutput)
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return i.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesArgs) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesOutput).ToCloudToDevicePropertiesPtrOutputWithContext(ctx)
}

// CloudToDevicePropertiesPtrInput is an input type that accepts CloudToDevicePropertiesArgs, CloudToDevicePropertiesPtr and CloudToDevicePropertiesPtrOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesPtrInput` via:
//
//          CloudToDevicePropertiesArgs{...}
//
//  or:
//
//          nil
type CloudToDevicePropertiesPtrInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput
	ToCloudToDevicePropertiesPtrOutputWithContext(context.Context) CloudToDevicePropertiesPtrOutput
}

type cloudToDevicePropertiesPtrType CloudToDevicePropertiesArgs

func CloudToDevicePropertiesPtr(v *CloudToDevicePropertiesArgs) CloudToDevicePropertiesPtrInput {
	return (*cloudToDevicePropertiesPtrType)(v)
}

func (*cloudToDevicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDeviceProperties)(nil)).Elem()
}

func (i *cloudToDevicePropertiesPtrType) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return i.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *cloudToDevicePropertiesPtrType) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDeviceProperties)(nil)).Elem()
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesOutput() CloudToDevicePropertiesOutput {
	return o
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesOutputWithContext(ctx context.Context) CloudToDevicePropertiesOutput {
	return o
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return o.ToCloudToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o CloudToDevicePropertiesOutput) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *CloudToDeviceProperties {
		return &v
	}).(CloudToDevicePropertiesPtrOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *string { return v.DefaultTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesOutput) Feedback() FeedbackPropertiesPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *FeedbackProperties { return v.Feedback }).(FeedbackPropertiesPtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudToDeviceProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type CloudToDevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDeviceProperties)(nil)).Elem()
}

func (o CloudToDevicePropertiesPtrOutput) ToCloudToDevicePropertiesPtrOutput() CloudToDevicePropertiesPtrOutput {
	return o
}

func (o CloudToDevicePropertiesPtrOutput) ToCloudToDevicePropertiesPtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesPtrOutput {
	return o
}

func (o CloudToDevicePropertiesPtrOutput) Elem() CloudToDevicePropertiesOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) CloudToDeviceProperties { return *v }).(CloudToDevicePropertiesOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesPtrOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesPtrOutput) Feedback() FeedbackPropertiesPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *FeedbackProperties {
		if v == nil {
			return nil
		}
		return v.Feedback
	}).(FeedbackPropertiesPtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudToDeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesInvokeResponse struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 *string `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback *FeedbackPropertiesInvokeResponse `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// CloudToDevicePropertiesInvokeResponseInput is an input type that accepts CloudToDevicePropertiesInvokeResponseArgs and CloudToDevicePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesInvokeResponseInput` via:
//
//          CloudToDevicePropertiesInvokeResponseArgs{...}
type CloudToDevicePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesInvokeResponseOutput() CloudToDevicePropertiesInvokeResponseOutput
	ToCloudToDevicePropertiesInvokeResponseOutputWithContext(context.Context) CloudToDevicePropertiesInvokeResponseOutput
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesInvokeResponseArgs struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 pulumi.StringPtrInput `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback FeedbackPropertiesInvokeResponsePtrInput `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
}

func (CloudToDevicePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDevicePropertiesInvokeResponse)(nil)).Elem()
}

func (i CloudToDevicePropertiesInvokeResponseArgs) ToCloudToDevicePropertiesInvokeResponseOutput() CloudToDevicePropertiesInvokeResponseOutput {
	return i.ToCloudToDevicePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesInvokeResponseArgs) ToCloudToDevicePropertiesInvokeResponseOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesInvokeResponseOutput)
}

func (i CloudToDevicePropertiesInvokeResponseArgs) ToCloudToDevicePropertiesInvokeResponsePtrOutput() CloudToDevicePropertiesInvokeResponsePtrOutput {
	return i.ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesInvokeResponseArgs) ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesInvokeResponseOutput).ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// CloudToDevicePropertiesInvokeResponsePtrInput is an input type that accepts CloudToDevicePropertiesInvokeResponseArgs, CloudToDevicePropertiesInvokeResponsePtr and CloudToDevicePropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesInvokeResponsePtrInput` via:
//
//          CloudToDevicePropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CloudToDevicePropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesInvokeResponsePtrOutput() CloudToDevicePropertiesInvokeResponsePtrOutput
	ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(context.Context) CloudToDevicePropertiesInvokeResponsePtrOutput
}

type cloudToDevicePropertiesInvokeResponsePtrType CloudToDevicePropertiesInvokeResponseArgs

func CloudToDevicePropertiesInvokeResponsePtr(v *CloudToDevicePropertiesInvokeResponseArgs) CloudToDevicePropertiesInvokeResponsePtrInput {
	return (*cloudToDevicePropertiesInvokeResponsePtrType)(v)
}

func (*cloudToDevicePropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDevicePropertiesInvokeResponse)(nil)).Elem()
}

func (i *cloudToDevicePropertiesInvokeResponsePtrType) ToCloudToDevicePropertiesInvokeResponsePtrOutput() CloudToDevicePropertiesInvokeResponsePtrOutput {
	return i.ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *cloudToDevicePropertiesInvokeResponsePtrType) ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesInvokeResponsePtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDevicePropertiesInvokeResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesInvokeResponseOutput) ToCloudToDevicePropertiesInvokeResponseOutput() CloudToDevicePropertiesInvokeResponseOutput {
	return o
}

func (o CloudToDevicePropertiesInvokeResponseOutput) ToCloudToDevicePropertiesInvokeResponseOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponseOutput {
	return o
}

func (o CloudToDevicePropertiesInvokeResponseOutput) ToCloudToDevicePropertiesInvokeResponsePtrOutput() CloudToDevicePropertiesInvokeResponsePtrOutput {
	return o.ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CloudToDevicePropertiesInvokeResponseOutput) ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesInvokeResponse) *CloudToDevicePropertiesInvokeResponse {
		return &v
	}).(CloudToDevicePropertiesInvokeResponsePtrOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesInvokeResponseOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesInvokeResponse) *string { return v.DefaultTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesInvokeResponseOutput) Feedback() FeedbackPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesInvokeResponse) *FeedbackPropertiesInvokeResponse { return v.Feedback }).(FeedbackPropertiesInvokeResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesInvokeResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesInvokeResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type CloudToDevicePropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDevicePropertiesInvokeResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesInvokeResponsePtrOutput) ToCloudToDevicePropertiesInvokeResponsePtrOutput() CloudToDevicePropertiesInvokeResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesInvokeResponsePtrOutput) ToCloudToDevicePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesInvokeResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesInvokeResponsePtrOutput) Elem() CloudToDevicePropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesInvokeResponse) CloudToDevicePropertiesInvokeResponse { return *v }).(CloudToDevicePropertiesInvokeResponseOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesInvokeResponsePtrOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesInvokeResponsePtrOutput) Feedback() FeedbackPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesInvokeResponse) *FeedbackPropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Feedback
	}).(FeedbackPropertiesInvokeResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesInvokeResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesResponse struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 *string `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback *FeedbackPropertiesResponse `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// CloudToDevicePropertiesResponseInput is an input type that accepts CloudToDevicePropertiesResponseArgs and CloudToDevicePropertiesResponseOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesResponseInput` via:
//
//          CloudToDevicePropertiesResponseArgs{...}
type CloudToDevicePropertiesResponseInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesResponseOutput() CloudToDevicePropertiesResponseOutput
	ToCloudToDevicePropertiesResponseOutputWithContext(context.Context) CloudToDevicePropertiesResponseOutput
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesResponseArgs struct {
	// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	DefaultTtlAsIso8601 pulumi.StringPtrInput `pulumi:"defaultTtlAsIso8601"`
	// The properties of the feedback queue for cloud-to-device messages.
	Feedback FeedbackPropertiesResponsePtrInput `pulumi:"feedback"`
	// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
}

func (CloudToDevicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (i CloudToDevicePropertiesResponseArgs) ToCloudToDevicePropertiesResponseOutput() CloudToDevicePropertiesResponseOutput {
	return i.ToCloudToDevicePropertiesResponseOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesResponseArgs) ToCloudToDevicePropertiesResponseOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesResponseOutput)
}

func (i CloudToDevicePropertiesResponseArgs) ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput {
	return i.ToCloudToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i CloudToDevicePropertiesResponseArgs) ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesResponseOutput).ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx)
}

// CloudToDevicePropertiesResponsePtrInput is an input type that accepts CloudToDevicePropertiesResponseArgs, CloudToDevicePropertiesResponsePtr and CloudToDevicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `CloudToDevicePropertiesResponsePtrInput` via:
//
//          CloudToDevicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type CloudToDevicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput
	ToCloudToDevicePropertiesResponsePtrOutputWithContext(context.Context) CloudToDevicePropertiesResponsePtrOutput
}

type cloudToDevicePropertiesResponsePtrType CloudToDevicePropertiesResponseArgs

func CloudToDevicePropertiesResponsePtr(v *CloudToDevicePropertiesResponseArgs) CloudToDevicePropertiesResponsePtrInput {
	return (*cloudToDevicePropertiesResponsePtrType)(v)
}

func (*cloudToDevicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (i *cloudToDevicePropertiesResponsePtrType) ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput {
	return i.ToCloudToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *cloudToDevicePropertiesResponsePtrType) ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudToDevicePropertiesResponsePtrOutput)
}

// The IoT hub cloud-to-device messaging properties.
type CloudToDevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponseOutput() CloudToDevicePropertiesResponseOutput {
	return o
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponseOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponseOutput {
	return o
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput {
	return o.ToCloudToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o CloudToDevicePropertiesResponseOutput) ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *CloudToDevicePropertiesResponse {
		return &v
	}).(CloudToDevicePropertiesResponsePtrOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponseOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *string { return v.DefaultTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesResponseOutput) Feedback() FeedbackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *FeedbackPropertiesResponse { return v.Feedback }).(FeedbackPropertiesResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CloudToDevicePropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type CloudToDevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudToDevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudToDevicePropertiesResponse)(nil)).Elem()
}

func (o CloudToDevicePropertiesResponsePtrOutput) ToCloudToDevicePropertiesResponsePtrOutput() CloudToDevicePropertiesResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesResponsePtrOutput) ToCloudToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) CloudToDevicePropertiesResponsePtrOutput {
	return o
}

func (o CloudToDevicePropertiesResponsePtrOutput) Elem() CloudToDevicePropertiesResponseOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) CloudToDevicePropertiesResponse { return *v }).(CloudToDevicePropertiesResponseOutput)
}

// The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponsePtrOutput) DefaultTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
func (o CloudToDevicePropertiesResponsePtrOutput) Feedback() FeedbackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *FeedbackPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Feedback
	}).(FeedbackPropertiesResponsePtrOutput)
}

// The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o CloudToDevicePropertiesResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudToDevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubProperties struct {
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount *int `pulumi:"partitionCount"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays *float64 `pulumi:"retentionTimeInDays"`
}

// EventHubPropertiesInput is an input type that accepts EventHubPropertiesArgs and EventHubPropertiesOutput values.
// You can construct a concrete instance of `EventHubPropertiesInput` via:
//
//          EventHubPropertiesArgs{...}
type EventHubPropertiesInput interface {
	pulumi.Input

	ToEventHubPropertiesOutput() EventHubPropertiesOutput
	ToEventHubPropertiesOutputWithContext(context.Context) EventHubPropertiesOutput
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesArgs struct {
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays pulumi.Float64PtrInput `pulumi:"retentionTimeInDays"`
}

func (EventHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return i.ToEventHubPropertiesOutputWithContext(context.Background())
}

func (i EventHubPropertiesArgs) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesOutput)
}

// EventHubPropertiesMapInput is an input type that accepts EventHubPropertiesMap and EventHubPropertiesMapOutput values.
// You can construct a concrete instance of `EventHubPropertiesMapInput` via:
//
//          EventHubPropertiesMap{ "key": EventHubPropertiesArgs{...} }
type EventHubPropertiesMapInput interface {
	pulumi.Input

	ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput
	ToEventHubPropertiesMapOutputWithContext(context.Context) EventHubPropertiesMapOutput
}

type EventHubPropertiesMap map[string]EventHubPropertiesInput

func (EventHubPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubProperties)(nil)).Elem()
}

func (i EventHubPropertiesMap) ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput {
	return i.ToEventHubPropertiesMapOutputWithContext(context.Background())
}

func (i EventHubPropertiesMap) ToEventHubPropertiesMapOutputWithContext(ctx context.Context) EventHubPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesMapOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutput() EventHubPropertiesOutput {
	return o
}

func (o EventHubPropertiesOutput) ToEventHubPropertiesOutputWithContext(ctx context.Context) EventHubPropertiesOutput {
	return o
}

// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
func (o EventHubPropertiesOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubProperties) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
func (o EventHubPropertiesOutput) RetentionTimeInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EventHubProperties) *float64 { return v.RetentionTimeInDays }).(pulumi.Float64PtrOutput)
}

type EventHubPropertiesMapOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubProperties)(nil)).Elem()
}

func (o EventHubPropertiesMapOutput) ToEventHubPropertiesMapOutput() EventHubPropertiesMapOutput {
	return o
}

func (o EventHubPropertiesMapOutput) ToEventHubPropertiesMapOutputWithContext(ctx context.Context) EventHubPropertiesMapOutput {
	return o
}

func (o EventHubPropertiesMapOutput) MapIndex(k pulumi.StringInput) EventHubPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EventHubProperties {
		return vs[0].(map[string]EventHubProperties)[vs[1].(string)]
	}).(EventHubPropertiesOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesInvokeResponse struct {
	// The Event Hub-compatible endpoint.
	Endpoint string `pulumi:"endpoint"`
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount *int `pulumi:"partitionCount"`
	// The partition ids in the Event Hub-compatible endpoint.
	PartitionIds []string `pulumi:"partitionIds"`
	// The Event Hub-compatible name.
	Path string `pulumi:"path"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays *float64 `pulumi:"retentionTimeInDays"`
}

// EventHubPropertiesInvokeResponseInput is an input type that accepts EventHubPropertiesInvokeResponseArgs and EventHubPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `EventHubPropertiesInvokeResponseInput` via:
//
//          EventHubPropertiesInvokeResponseArgs{...}
type EventHubPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToEventHubPropertiesInvokeResponseOutput() EventHubPropertiesInvokeResponseOutput
	ToEventHubPropertiesInvokeResponseOutputWithContext(context.Context) EventHubPropertiesInvokeResponseOutput
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesInvokeResponseArgs struct {
	// The Event Hub-compatible endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// The partition ids in the Event Hub-compatible endpoint.
	PartitionIds pulumi.StringArrayInput `pulumi:"partitionIds"`
	// The Event Hub-compatible name.
	Path pulumi.StringInput `pulumi:"path"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays pulumi.Float64PtrInput `pulumi:"retentionTimeInDays"`
}

func (EventHubPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (i EventHubPropertiesInvokeResponseArgs) ToEventHubPropertiesInvokeResponseOutput() EventHubPropertiesInvokeResponseOutput {
	return i.ToEventHubPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i EventHubPropertiesInvokeResponseArgs) ToEventHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) EventHubPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesInvokeResponseOutput)
}

// EventHubPropertiesInvokeResponseMapInput is an input type that accepts EventHubPropertiesInvokeResponseMap and EventHubPropertiesInvokeResponseMapOutput values.
// You can construct a concrete instance of `EventHubPropertiesInvokeResponseMapInput` via:
//
//          EventHubPropertiesInvokeResponseMap{ "key": EventHubPropertiesInvokeResponseArgs{...} }
type EventHubPropertiesInvokeResponseMapInput interface {
	pulumi.Input

	ToEventHubPropertiesInvokeResponseMapOutput() EventHubPropertiesInvokeResponseMapOutput
	ToEventHubPropertiesInvokeResponseMapOutputWithContext(context.Context) EventHubPropertiesInvokeResponseMapOutput
}

type EventHubPropertiesInvokeResponseMap map[string]EventHubPropertiesInvokeResponseInput

func (EventHubPropertiesInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (i EventHubPropertiesInvokeResponseMap) ToEventHubPropertiesInvokeResponseMapOutput() EventHubPropertiesInvokeResponseMapOutput {
	return i.ToEventHubPropertiesInvokeResponseMapOutputWithContext(context.Background())
}

func (i EventHubPropertiesInvokeResponseMap) ToEventHubPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) EventHubPropertiesInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesInvokeResponseMapOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (o EventHubPropertiesInvokeResponseOutput) ToEventHubPropertiesInvokeResponseOutput() EventHubPropertiesInvokeResponseOutput {
	return o
}

func (o EventHubPropertiesInvokeResponseOutput) ToEventHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) EventHubPropertiesInvokeResponseOutput {
	return o
}

// The Event Hub-compatible endpoint.
func (o EventHubPropertiesInvokeResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesInvokeResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
func (o EventHubPropertiesInvokeResponseOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesInvokeResponse) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// The partition ids in the Event Hub-compatible endpoint.
func (o EventHubPropertiesInvokeResponseOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubPropertiesInvokeResponse) []string { return v.PartitionIds }).(pulumi.StringArrayOutput)
}

// The Event Hub-compatible name.
func (o EventHubPropertiesInvokeResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesInvokeResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
func (o EventHubPropertiesInvokeResponseOutput) RetentionTimeInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EventHubPropertiesInvokeResponse) *float64 { return v.RetentionTimeInDays }).(pulumi.Float64PtrOutput)
}

type EventHubPropertiesInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (o EventHubPropertiesInvokeResponseMapOutput) ToEventHubPropertiesInvokeResponseMapOutput() EventHubPropertiesInvokeResponseMapOutput {
	return o
}

func (o EventHubPropertiesInvokeResponseMapOutput) ToEventHubPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) EventHubPropertiesInvokeResponseMapOutput {
	return o
}

func (o EventHubPropertiesInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) EventHubPropertiesInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EventHubPropertiesInvokeResponse {
		return vs[0].(map[string]EventHubPropertiesInvokeResponse)[vs[1].(string)]
	}).(EventHubPropertiesInvokeResponseOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesResponse struct {
	// The Event Hub-compatible endpoint.
	Endpoint string `pulumi:"endpoint"`
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount *int `pulumi:"partitionCount"`
	// The partition ids in the Event Hub-compatible endpoint.
	PartitionIds []string `pulumi:"partitionIds"`
	// The Event Hub-compatible name.
	Path string `pulumi:"path"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays *float64 `pulumi:"retentionTimeInDays"`
}

// EventHubPropertiesResponseInput is an input type that accepts EventHubPropertiesResponseArgs and EventHubPropertiesResponseOutput values.
// You can construct a concrete instance of `EventHubPropertiesResponseInput` via:
//
//          EventHubPropertiesResponseArgs{...}
type EventHubPropertiesResponseInput interface {
	pulumi.Input

	ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput
	ToEventHubPropertiesResponseOutputWithContext(context.Context) EventHubPropertiesResponseOutput
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesResponseArgs struct {
	// The Event Hub-compatible endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
	PartitionCount pulumi.IntPtrInput `pulumi:"partitionCount"`
	// The partition ids in the Event Hub-compatible endpoint.
	PartitionIds pulumi.StringArrayInput `pulumi:"partitionIds"`
	// The Event Hub-compatible name.
	Path pulumi.StringInput `pulumi:"path"`
	// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
	RetentionTimeInDays pulumi.Float64PtrInput `pulumi:"retentionTimeInDays"`
}

func (EventHubPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesResponse)(nil)).Elem()
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput {
	return i.ToEventHubPropertiesResponseOutputWithContext(context.Background())
}

func (i EventHubPropertiesResponseArgs) ToEventHubPropertiesResponseOutputWithContext(ctx context.Context) EventHubPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesResponseOutput)
}

// EventHubPropertiesResponseMapInput is an input type that accepts EventHubPropertiesResponseMap and EventHubPropertiesResponseMapOutput values.
// You can construct a concrete instance of `EventHubPropertiesResponseMapInput` via:
//
//          EventHubPropertiesResponseMap{ "key": EventHubPropertiesResponseArgs{...} }
type EventHubPropertiesResponseMapInput interface {
	pulumi.Input

	ToEventHubPropertiesResponseMapOutput() EventHubPropertiesResponseMapOutput
	ToEventHubPropertiesResponseMapOutputWithContext(context.Context) EventHubPropertiesResponseMapOutput
}

type EventHubPropertiesResponseMap map[string]EventHubPropertiesResponseInput

func (EventHubPropertiesResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubPropertiesResponse)(nil)).Elem()
}

func (i EventHubPropertiesResponseMap) ToEventHubPropertiesResponseMapOutput() EventHubPropertiesResponseMapOutput {
	return i.ToEventHubPropertiesResponseMapOutputWithContext(context.Background())
}

func (i EventHubPropertiesResponseMap) ToEventHubPropertiesResponseMapOutputWithContext(ctx context.Context) EventHubPropertiesResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubPropertiesResponseMapOutput)
}

// The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.
type EventHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutput() EventHubPropertiesResponseOutput {
	return o
}

func (o EventHubPropertiesResponseOutput) ToEventHubPropertiesResponseOutputWithContext(ctx context.Context) EventHubPropertiesResponseOutput {
	return o
}

// The Event Hub-compatible endpoint.
func (o EventHubPropertiesResponseOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages.
func (o EventHubPropertiesResponseOutput) PartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *int { return v.PartitionCount }).(pulumi.IntPtrOutput)
}

// The partition ids in the Event Hub-compatible endpoint.
func (o EventHubPropertiesResponseOutput) PartitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) []string { return v.PartitionIds }).(pulumi.StringArrayOutput)
}

// The Event Hub-compatible name.
func (o EventHubPropertiesResponseOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) string { return v.Path }).(pulumi.StringOutput)
}

// The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages
func (o EventHubPropertiesResponseOutput) RetentionTimeInDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EventHubPropertiesResponse) *float64 { return v.RetentionTimeInDays }).(pulumi.Float64PtrOutput)
}

type EventHubPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (EventHubPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]EventHubPropertiesResponse)(nil)).Elem()
}

func (o EventHubPropertiesResponseMapOutput) ToEventHubPropertiesResponseMapOutput() EventHubPropertiesResponseMapOutput {
	return o
}

func (o EventHubPropertiesResponseMapOutput) ToEventHubPropertiesResponseMapOutputWithContext(ctx context.Context) EventHubPropertiesResponseMapOutput {
	return o
}

func (o EventHubPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) EventHubPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) EventHubPropertiesResponse {
		return vs[0].(map[string]EventHubPropertiesResponse)[vs[1].(string)]
	}).(EventHubPropertiesResponseOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRouteProperties struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name *string `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source string `pulumi:"source"`
}

// FallbackRoutePropertiesInput is an input type that accepts FallbackRoutePropertiesArgs and FallbackRoutePropertiesOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesInput` via:
//
//          FallbackRoutePropertiesArgs{...}
type FallbackRoutePropertiesInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput
	ToFallbackRoutePropertiesOutputWithContext(context.Context) FallbackRoutePropertiesOutput
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesArgs struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source pulumi.StringInput `pulumi:"source"`
}

func (FallbackRoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRouteProperties)(nil)).Elem()
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput {
	return i.ToFallbackRoutePropertiesOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesOutputWithContext(ctx context.Context) FallbackRoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesOutput)
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return i.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesArgs) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesOutput).ToFallbackRoutePropertiesPtrOutputWithContext(ctx)
}

// FallbackRoutePropertiesPtrInput is an input type that accepts FallbackRoutePropertiesArgs, FallbackRoutePropertiesPtr and FallbackRoutePropertiesPtrOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesPtrInput` via:
//
//          FallbackRoutePropertiesArgs{...}
//
//  or:
//
//          nil
type FallbackRoutePropertiesPtrInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput
	ToFallbackRoutePropertiesPtrOutputWithContext(context.Context) FallbackRoutePropertiesPtrOutput
}

type fallbackRoutePropertiesPtrType FallbackRoutePropertiesArgs

func FallbackRoutePropertiesPtr(v *FallbackRoutePropertiesArgs) FallbackRoutePropertiesPtrInput {
	return (*fallbackRoutePropertiesPtrType)(v)
}

func (*fallbackRoutePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRouteProperties)(nil)).Elem()
}

func (i *fallbackRoutePropertiesPtrType) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return i.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (i *fallbackRoutePropertiesPtrType) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesPtrOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRouteProperties)(nil)).Elem()
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesOutput() FallbackRoutePropertiesOutput {
	return o
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesOutputWithContext(ctx context.Context) FallbackRoutePropertiesOutput {
	return o
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return o.ToFallbackRoutePropertiesPtrOutputWithContext(context.Background())
}

func (o FallbackRoutePropertiesOutput) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return o.ApplyT(func(v FallbackRouteProperties) *FallbackRouteProperties {
		return &v
	}).(FallbackRoutePropertiesPtrOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRouteProperties) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FallbackRouteProperties) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FallbackRouteProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRouteProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FallbackRouteProperties) string { return v.Source }).(pulumi.StringOutput)
}

type FallbackRoutePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRouteProperties)(nil)).Elem()
}

func (o FallbackRoutePropertiesPtrOutput) ToFallbackRoutePropertiesPtrOutput() FallbackRoutePropertiesPtrOutput {
	return o
}

func (o FallbackRoutePropertiesPtrOutput) ToFallbackRoutePropertiesPtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesPtrOutput {
	return o
}

func (o FallbackRoutePropertiesPtrOutput) Elem() FallbackRoutePropertiesOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) FallbackRouteProperties { return *v }).(FallbackRoutePropertiesOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesPtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRouteProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesInvokeResponse struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name *string `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source string `pulumi:"source"`
}

// FallbackRoutePropertiesInvokeResponseInput is an input type that accepts FallbackRoutePropertiesInvokeResponseArgs and FallbackRoutePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesInvokeResponseInput` via:
//
//          FallbackRoutePropertiesInvokeResponseArgs{...}
type FallbackRoutePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesInvokeResponseOutput() FallbackRoutePropertiesInvokeResponseOutput
	ToFallbackRoutePropertiesInvokeResponseOutputWithContext(context.Context) FallbackRoutePropertiesInvokeResponseOutput
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesInvokeResponseArgs struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source pulumi.StringInput `pulumi:"source"`
}

func (FallbackRoutePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRoutePropertiesInvokeResponse)(nil)).Elem()
}

func (i FallbackRoutePropertiesInvokeResponseArgs) ToFallbackRoutePropertiesInvokeResponseOutput() FallbackRoutePropertiesInvokeResponseOutput {
	return i.ToFallbackRoutePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesInvokeResponseArgs) ToFallbackRoutePropertiesInvokeResponseOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesInvokeResponseOutput)
}

func (i FallbackRoutePropertiesInvokeResponseArgs) ToFallbackRoutePropertiesInvokeResponsePtrOutput() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return i.ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesInvokeResponseArgs) ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesInvokeResponseOutput).ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// FallbackRoutePropertiesInvokeResponsePtrInput is an input type that accepts FallbackRoutePropertiesInvokeResponseArgs, FallbackRoutePropertiesInvokeResponsePtr and FallbackRoutePropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesInvokeResponsePtrInput` via:
//
//          FallbackRoutePropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FallbackRoutePropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesInvokeResponsePtrOutput() FallbackRoutePropertiesInvokeResponsePtrOutput
	ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(context.Context) FallbackRoutePropertiesInvokeResponsePtrOutput
}

type fallbackRoutePropertiesInvokeResponsePtrType FallbackRoutePropertiesInvokeResponseArgs

func FallbackRoutePropertiesInvokeResponsePtr(v *FallbackRoutePropertiesInvokeResponseArgs) FallbackRoutePropertiesInvokeResponsePtrInput {
	return (*fallbackRoutePropertiesInvokeResponsePtrType)(v)
}

func (*fallbackRoutePropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRoutePropertiesInvokeResponse)(nil)).Elem()
}

func (i *fallbackRoutePropertiesInvokeResponsePtrType) ToFallbackRoutePropertiesInvokeResponsePtrOutput() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return i.ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *fallbackRoutePropertiesInvokeResponsePtrType) ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesInvokeResponsePtrOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRoutePropertiesInvokeResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesInvokeResponseOutput) ToFallbackRoutePropertiesInvokeResponseOutput() FallbackRoutePropertiesInvokeResponseOutput {
	return o
}

func (o FallbackRoutePropertiesInvokeResponseOutput) ToFallbackRoutePropertiesInvokeResponseOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponseOutput {
	return o
}

func (o FallbackRoutePropertiesInvokeResponseOutput) ToFallbackRoutePropertiesInvokeResponsePtrOutput() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o.ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FallbackRoutePropertiesInvokeResponseOutput) ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) *FallbackRoutePropertiesInvokeResponse {
		return &v
	}).(FallbackRoutePropertiesInvokeResponsePtrOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesInvokeResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesInvokeResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesInvokeResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesInvokeResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesInvokeResponse) string { return v.Source }).(pulumi.StringOutput)
}

type FallbackRoutePropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRoutePropertiesInvokeResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesInvokeResponsePtrOutput) ToFallbackRoutePropertiesInvokeResponsePtrOutput() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesInvokeResponsePtrOutput) ToFallbackRoutePropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesInvokeResponsePtrOutput) Elem() FallbackRoutePropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) FallbackRoutePropertiesInvokeResponse { return *v }).(FallbackRoutePropertiesInvokeResponseOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesInvokeResponsePtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesInvokeResponsePtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesInvokeResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesInvokeResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesResponse struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name *string `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source string `pulumi:"source"`
}

// FallbackRoutePropertiesResponseInput is an input type that accepts FallbackRoutePropertiesResponseArgs and FallbackRoutePropertiesResponseOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesResponseInput` via:
//
//          FallbackRoutePropertiesResponseArgs{...}
type FallbackRoutePropertiesResponseInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesResponseOutput() FallbackRoutePropertiesResponseOutput
	ToFallbackRoutePropertiesResponseOutputWithContext(context.Context) FallbackRoutePropertiesResponseOutput
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesResponseArgs struct {
	// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether the fallback route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The source to which the routing rule is to be applied to. For example, DeviceMessages
	Source pulumi.StringInput `pulumi:"source"`
}

func (FallbackRoutePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (i FallbackRoutePropertiesResponseArgs) ToFallbackRoutePropertiesResponseOutput() FallbackRoutePropertiesResponseOutput {
	return i.ToFallbackRoutePropertiesResponseOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesResponseArgs) ToFallbackRoutePropertiesResponseOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesResponseOutput)
}

func (i FallbackRoutePropertiesResponseArgs) ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput {
	return i.ToFallbackRoutePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i FallbackRoutePropertiesResponseArgs) ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesResponseOutput).ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx)
}

// FallbackRoutePropertiesResponsePtrInput is an input type that accepts FallbackRoutePropertiesResponseArgs, FallbackRoutePropertiesResponsePtr and FallbackRoutePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `FallbackRoutePropertiesResponsePtrInput` via:
//
//          FallbackRoutePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type FallbackRoutePropertiesResponsePtrInput interface {
	pulumi.Input

	ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput
	ToFallbackRoutePropertiesResponsePtrOutputWithContext(context.Context) FallbackRoutePropertiesResponsePtrOutput
}

type fallbackRoutePropertiesResponsePtrType FallbackRoutePropertiesResponseArgs

func FallbackRoutePropertiesResponsePtr(v *FallbackRoutePropertiesResponseArgs) FallbackRoutePropertiesResponsePtrInput {
	return (*fallbackRoutePropertiesResponsePtrType)(v)
}

func (*fallbackRoutePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (i *fallbackRoutePropertiesResponsePtrType) ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput {
	return i.ToFallbackRoutePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *fallbackRoutePropertiesResponsePtrType) ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FallbackRoutePropertiesResponsePtrOutput)
}

// The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
type FallbackRoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponseOutput() FallbackRoutePropertiesResponseOutput {
	return o
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponseOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponseOutput {
	return o
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput {
	return o.ToFallbackRoutePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FallbackRoutePropertiesResponseOutput) ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponsePtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) *FallbackRoutePropertiesResponse {
		return &v
	}).(FallbackRoutePropertiesResponsePtrOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FallbackRoutePropertiesResponse) string { return v.Source }).(pulumi.StringOutput)
}

type FallbackRoutePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FallbackRoutePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FallbackRoutePropertiesResponse)(nil)).Elem()
}

func (o FallbackRoutePropertiesResponsePtrOutput) ToFallbackRoutePropertiesResponsePtrOutput() FallbackRoutePropertiesResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesResponsePtrOutput) ToFallbackRoutePropertiesResponsePtrOutputWithContext(ctx context.Context) FallbackRoutePropertiesResponsePtrOutput {
	return o
}

func (o FallbackRoutePropertiesResponsePtrOutput) Elem() FallbackRoutePropertiesResponseOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) FallbackRoutePropertiesResponse { return *v }).(FallbackRoutePropertiesResponseOutput)
}

// The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o FallbackRoutePropertiesResponsePtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
func (o FallbackRoutePropertiesResponsePtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// Used to specify whether the fallback route is enabled.
func (o FallbackRoutePropertiesResponsePtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o FallbackRoutePropertiesResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The source to which the routing rule is to be applied to. For example, DeviceMessages
func (o FallbackRoutePropertiesResponsePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FallbackRoutePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackProperties struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// FeedbackPropertiesInput is an input type that accepts FeedbackPropertiesArgs and FeedbackPropertiesOutput values.
// You can construct a concrete instance of `FeedbackPropertiesInput` via:
//
//          FeedbackPropertiesArgs{...}
type FeedbackPropertiesInput interface {
	pulumi.Input

	ToFeedbackPropertiesOutput() FeedbackPropertiesOutput
	ToFeedbackPropertiesOutputWithContext(context.Context) FeedbackPropertiesOutput
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesArgs struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (FeedbackPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackProperties)(nil)).Elem()
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesOutput() FeedbackPropertiesOutput {
	return i.ToFeedbackPropertiesOutputWithContext(context.Background())
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesOutputWithContext(ctx context.Context) FeedbackPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesOutput)
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return i.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (i FeedbackPropertiesArgs) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesOutput).ToFeedbackPropertiesPtrOutputWithContext(ctx)
}

// FeedbackPropertiesPtrInput is an input type that accepts FeedbackPropertiesArgs, FeedbackPropertiesPtr and FeedbackPropertiesPtrOutput values.
// You can construct a concrete instance of `FeedbackPropertiesPtrInput` via:
//
//          FeedbackPropertiesArgs{...}
//
//  or:
//
//          nil
type FeedbackPropertiesPtrInput interface {
	pulumi.Input

	ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput
	ToFeedbackPropertiesPtrOutputWithContext(context.Context) FeedbackPropertiesPtrOutput
}

type feedbackPropertiesPtrType FeedbackPropertiesArgs

func FeedbackPropertiesPtr(v *FeedbackPropertiesArgs) FeedbackPropertiesPtrInput {
	return (*feedbackPropertiesPtrType)(v)
}

func (*feedbackPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackProperties)(nil)).Elem()
}

func (i *feedbackPropertiesPtrType) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return i.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (i *feedbackPropertiesPtrType) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackProperties)(nil)).Elem()
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesOutput() FeedbackPropertiesOutput {
	return o
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesOutputWithContext(ctx context.Context) FeedbackPropertiesOutput {
	return o
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return o.ToFeedbackPropertiesPtrOutputWithContext(context.Background())
}

func (o FeedbackPropertiesOutput) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *FeedbackProperties {
		return &v
	}).(FeedbackPropertiesPtrOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackProperties) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type FeedbackPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackProperties)(nil)).Elem()
}

func (o FeedbackPropertiesPtrOutput) ToFeedbackPropertiesPtrOutput() FeedbackPropertiesPtrOutput {
	return o
}

func (o FeedbackPropertiesPtrOutput) ToFeedbackPropertiesPtrOutputWithContext(ctx context.Context) FeedbackPropertiesPtrOutput {
	return o
}

func (o FeedbackPropertiesPtrOutput) Elem() FeedbackPropertiesOutput {
	return o.ApplyT(func(v *FeedbackProperties) FeedbackProperties { return *v }).(FeedbackPropertiesOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *string {
		if v == nil {
			return nil
		}
		return v.LockDurationAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesPtrOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackProperties) *string {
		if v == nil {
			return nil
		}
		return v.TtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesInvokeResponse struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// FeedbackPropertiesInvokeResponseInput is an input type that accepts FeedbackPropertiesInvokeResponseArgs and FeedbackPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `FeedbackPropertiesInvokeResponseInput` via:
//
//          FeedbackPropertiesInvokeResponseArgs{...}
type FeedbackPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToFeedbackPropertiesInvokeResponseOutput() FeedbackPropertiesInvokeResponseOutput
	ToFeedbackPropertiesInvokeResponseOutputWithContext(context.Context) FeedbackPropertiesInvokeResponseOutput
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesInvokeResponseArgs struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (FeedbackPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackPropertiesInvokeResponse)(nil)).Elem()
}

func (i FeedbackPropertiesInvokeResponseArgs) ToFeedbackPropertiesInvokeResponseOutput() FeedbackPropertiesInvokeResponseOutput {
	return i.ToFeedbackPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i FeedbackPropertiesInvokeResponseArgs) ToFeedbackPropertiesInvokeResponseOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesInvokeResponseOutput)
}

func (i FeedbackPropertiesInvokeResponseArgs) ToFeedbackPropertiesInvokeResponsePtrOutput() FeedbackPropertiesInvokeResponsePtrOutput {
	return i.ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i FeedbackPropertiesInvokeResponseArgs) ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesInvokeResponseOutput).ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// FeedbackPropertiesInvokeResponsePtrInput is an input type that accepts FeedbackPropertiesInvokeResponseArgs, FeedbackPropertiesInvokeResponsePtr and FeedbackPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `FeedbackPropertiesInvokeResponsePtrInput` via:
//
//          FeedbackPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type FeedbackPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToFeedbackPropertiesInvokeResponsePtrOutput() FeedbackPropertiesInvokeResponsePtrOutput
	ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(context.Context) FeedbackPropertiesInvokeResponsePtrOutput
}

type feedbackPropertiesInvokeResponsePtrType FeedbackPropertiesInvokeResponseArgs

func FeedbackPropertiesInvokeResponsePtr(v *FeedbackPropertiesInvokeResponseArgs) FeedbackPropertiesInvokeResponsePtrInput {
	return (*feedbackPropertiesInvokeResponsePtrType)(v)
}

func (*feedbackPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackPropertiesInvokeResponse)(nil)).Elem()
}

func (i *feedbackPropertiesInvokeResponsePtrType) ToFeedbackPropertiesInvokeResponsePtrOutput() FeedbackPropertiesInvokeResponsePtrOutput {
	return i.ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *feedbackPropertiesInvokeResponsePtrType) ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesInvokeResponsePtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackPropertiesInvokeResponse)(nil)).Elem()
}

func (o FeedbackPropertiesInvokeResponseOutput) ToFeedbackPropertiesInvokeResponseOutput() FeedbackPropertiesInvokeResponseOutput {
	return o
}

func (o FeedbackPropertiesInvokeResponseOutput) ToFeedbackPropertiesInvokeResponseOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponseOutput {
	return o
}

func (o FeedbackPropertiesInvokeResponseOutput) ToFeedbackPropertiesInvokeResponsePtrOutput() FeedbackPropertiesInvokeResponsePtrOutput {
	return o.ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o FeedbackPropertiesInvokeResponseOutput) ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesInvokeResponse) *FeedbackPropertiesInvokeResponse {
		return &v
	}).(FeedbackPropertiesInvokeResponsePtrOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesInvokeResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesInvokeResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesInvokeResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type FeedbackPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackPropertiesInvokeResponse)(nil)).Elem()
}

func (o FeedbackPropertiesInvokeResponsePtrOutput) ToFeedbackPropertiesInvokeResponsePtrOutput() FeedbackPropertiesInvokeResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesInvokeResponsePtrOutput) ToFeedbackPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesInvokeResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesInvokeResponsePtrOutput) Elem() FeedbackPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *FeedbackPropertiesInvokeResponse) FeedbackPropertiesInvokeResponse { return *v }).(FeedbackPropertiesInvokeResponseOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponsePtrOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.LockDurationAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesInvokeResponsePtrOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesResponse struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// FeedbackPropertiesResponseInput is an input type that accepts FeedbackPropertiesResponseArgs and FeedbackPropertiesResponseOutput values.
// You can construct a concrete instance of `FeedbackPropertiesResponseInput` via:
//
//          FeedbackPropertiesResponseArgs{...}
type FeedbackPropertiesResponseInput interface {
	pulumi.Input

	ToFeedbackPropertiesResponseOutput() FeedbackPropertiesResponseOutput
	ToFeedbackPropertiesResponseOutputWithContext(context.Context) FeedbackPropertiesResponseOutput
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesResponseArgs struct {
	// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (FeedbackPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackPropertiesResponse)(nil)).Elem()
}

func (i FeedbackPropertiesResponseArgs) ToFeedbackPropertiesResponseOutput() FeedbackPropertiesResponseOutput {
	return i.ToFeedbackPropertiesResponseOutputWithContext(context.Background())
}

func (i FeedbackPropertiesResponseArgs) ToFeedbackPropertiesResponseOutputWithContext(ctx context.Context) FeedbackPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesResponseOutput)
}

func (i FeedbackPropertiesResponseArgs) ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput {
	return i.ToFeedbackPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i FeedbackPropertiesResponseArgs) ToFeedbackPropertiesResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesResponseOutput).ToFeedbackPropertiesResponsePtrOutputWithContext(ctx)
}

// FeedbackPropertiesResponsePtrInput is an input type that accepts FeedbackPropertiesResponseArgs, FeedbackPropertiesResponsePtr and FeedbackPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `FeedbackPropertiesResponsePtrInput` via:
//
//          FeedbackPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type FeedbackPropertiesResponsePtrInput interface {
	pulumi.Input

	ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput
	ToFeedbackPropertiesResponsePtrOutputWithContext(context.Context) FeedbackPropertiesResponsePtrOutput
}

type feedbackPropertiesResponsePtrType FeedbackPropertiesResponseArgs

func FeedbackPropertiesResponsePtr(v *FeedbackPropertiesResponseArgs) FeedbackPropertiesResponsePtrInput {
	return (*feedbackPropertiesResponsePtrType)(v)
}

func (*feedbackPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackPropertiesResponse)(nil)).Elem()
}

func (i *feedbackPropertiesResponsePtrType) ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput {
	return i.ToFeedbackPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *feedbackPropertiesResponsePtrType) ToFeedbackPropertiesResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeedbackPropertiesResponsePtrOutput)
}

// The properties of the feedback queue for cloud-to-device messages.
type FeedbackPropertiesResponseOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeedbackPropertiesResponse)(nil)).Elem()
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponseOutput() FeedbackPropertiesResponseOutput {
	return o
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponseOutputWithContext(ctx context.Context) FeedbackPropertiesResponseOutput {
	return o
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput {
	return o.ToFeedbackPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o FeedbackPropertiesResponseOutput) ToFeedbackPropertiesResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *FeedbackPropertiesResponse {
		return &v
	}).(FeedbackPropertiesResponsePtrOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FeedbackPropertiesResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type FeedbackPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (FeedbackPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeedbackPropertiesResponse)(nil)).Elem()
}

func (o FeedbackPropertiesResponsePtrOutput) ToFeedbackPropertiesResponsePtrOutput() FeedbackPropertiesResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesResponsePtrOutput) ToFeedbackPropertiesResponsePtrOutputWithContext(ctx context.Context) FeedbackPropertiesResponsePtrOutput {
	return o
}

func (o FeedbackPropertiesResponsePtrOutput) Elem() FeedbackPropertiesResponseOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) FeedbackPropertiesResponse { return *v }).(FeedbackPropertiesResponseOutput)
}

// The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LockDurationAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
func (o FeedbackPropertiesResponsePtrOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeedbackPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.TtlAsIso8601
	}).(pulumi.StringPtrOutput)
}

// The properties of an IoT hub.
type IotHubProperties struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRule `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice *CloudToDeviceProperties `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments *string `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications *bool `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints map[string]EventHubProperties `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features *string `pulumi:"features"`
	// The IP filter rules.
	IpFilterRules []IpFilterRule `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints map[string]MessagingEndpointProperties `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties *OperationsMonitoringProperties `pulumi:"operationsMonitoringProperties"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing *RoutingProperties `pulumi:"routing"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints map[string]StorageEndpointProperties `pulumi:"storageEndpoints"`
}

// IotHubPropertiesInput is an input type that accepts IotHubPropertiesArgs and IotHubPropertiesOutput values.
// You can construct a concrete instance of `IotHubPropertiesInput` via:
//
//          IotHubPropertiesArgs{...}
type IotHubPropertiesInput interface {
	pulumi.Input

	ToIotHubPropertiesOutput() IotHubPropertiesOutput
	ToIotHubPropertiesOutputWithContext(context.Context) IotHubPropertiesOutput
}

// The properties of an IoT hub.
type IotHubPropertiesArgs struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleArrayInput `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice CloudToDevicePropertiesPtrInput `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications pulumi.BoolPtrInput `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints EventHubPropertiesMapInput `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features pulumi.StringPtrInput `pulumi:"features"`
	// The IP filter rules.
	IpFilterRules IpFilterRuleArrayInput `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints MessagingEndpointPropertiesMapInput `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties OperationsMonitoringPropertiesPtrInput `pulumi:"operationsMonitoringProperties"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing RoutingPropertiesPtrInput `pulumi:"routing"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints StorageEndpointPropertiesMapInput `pulumi:"storageEndpoints"`
}

func (IotHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubProperties)(nil)).Elem()
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesOutput() IotHubPropertiesOutput {
	return i.ToIotHubPropertiesOutputWithContext(context.Background())
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesOutputWithContext(ctx context.Context) IotHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesOutput)
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return i.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (i IotHubPropertiesArgs) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesOutput).ToIotHubPropertiesPtrOutputWithContext(ctx)
}

// IotHubPropertiesPtrInput is an input type that accepts IotHubPropertiesArgs, IotHubPropertiesPtr and IotHubPropertiesPtrOutput values.
// You can construct a concrete instance of `IotHubPropertiesPtrInput` via:
//
//          IotHubPropertiesArgs{...}
//
//  or:
//
//          nil
type IotHubPropertiesPtrInput interface {
	pulumi.Input

	ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput
	ToIotHubPropertiesPtrOutputWithContext(context.Context) IotHubPropertiesPtrOutput
}

type iotHubPropertiesPtrType IotHubPropertiesArgs

func IotHubPropertiesPtr(v *IotHubPropertiesArgs) IotHubPropertiesPtrInput {
	return (*iotHubPropertiesPtrType)(v)
}

func (*iotHubPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubProperties)(nil)).Elem()
}

func (i *iotHubPropertiesPtrType) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return i.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (i *iotHubPropertiesPtrType) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesPtrOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubProperties)(nil)).Elem()
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesOutput() IotHubPropertiesOutput {
	return o
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesOutputWithContext(ctx context.Context) IotHubPropertiesOutput {
	return o
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return o.ToIotHubPropertiesPtrOutputWithContext(context.Background())
}

func (o IotHubPropertiesOutput) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *IotHubProperties {
		return &v
	}).(IotHubPropertiesPtrOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o.ApplyT(func(v IotHubProperties) []SharedAccessSignatureAuthorizationRule { return v.AuthorizationPolicies }).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesOutput) CloudToDevice() CloudToDevicePropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *CloudToDeviceProperties { return v.CloudToDevice }).(CloudToDevicePropertiesPtrOutput)
}

// IoT hub comments.
func (o IotHubPropertiesOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *bool { return v.EnableFileUploadNotifications }).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesOutput) EventHubEndpoints() EventHubPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]EventHubProperties { return v.EventHubEndpoints }).(EventHubPropertiesMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *string { return v.Features }).(pulumi.StringPtrOutput)
}

// The IP filter rules.
func (o IotHubPropertiesOutput) IpFilterRules() IpFilterRuleArrayOutput {
	return o.ApplyT(func(v IotHubProperties) []IpFilterRule { return v.IpFilterRules }).(IpFilterRuleArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesOutput) MessagingEndpoints() MessagingEndpointPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]MessagingEndpointProperties { return v.MessagingEndpoints }).(MessagingEndpointPropertiesMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *OperationsMonitoringProperties { return v.OperationsMonitoringProperties }).(OperationsMonitoringPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesOutput) Routing() RoutingPropertiesPtrOutput {
	return o.ApplyT(func(v IotHubProperties) *RoutingProperties { return v.Routing }).(RoutingPropertiesPtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesOutput) StorageEndpoints() StorageEndpointPropertiesMapOutput {
	return o.ApplyT(func(v IotHubProperties) map[string]StorageEndpointProperties { return v.StorageEndpoints }).(StorageEndpointPropertiesMapOutput)
}

type IotHubPropertiesPtrOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubProperties)(nil)).Elem()
}

func (o IotHubPropertiesPtrOutput) ToIotHubPropertiesPtrOutput() IotHubPropertiesPtrOutput {
	return o
}

func (o IotHubPropertiesPtrOutput) ToIotHubPropertiesPtrOutputWithContext(ctx context.Context) IotHubPropertiesPtrOutput {
	return o
}

func (o IotHubPropertiesPtrOutput) Elem() IotHubPropertiesOutput {
	return o.ApplyT(func(v *IotHubProperties) IotHubProperties { return *v }).(IotHubPropertiesOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesPtrOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o.ApplyT(func(v *IotHubProperties) []SharedAccessSignatureAuthorizationRule {
		if v == nil {
			return nil
		}
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesPtrOutput) CloudToDevice() CloudToDevicePropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *CloudToDeviceProperties {
		if v == nil {
			return nil
		}
		return v.CloudToDevice
	}).(CloudToDevicePropertiesPtrOutput)
}

// IoT hub comments.
func (o IotHubPropertiesPtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesPtrOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFileUploadNotifications
	}).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesPtrOutput) EventHubEndpoints() EventHubPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]EventHubProperties {
		if v == nil {
			return nil
		}
		return v.EventHubEndpoints
	}).(EventHubPropertiesMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesPtrOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *string {
		if v == nil {
			return nil
		}
		return v.Features
	}).(pulumi.StringPtrOutput)
}

// The IP filter rules.
func (o IotHubPropertiesPtrOutput) IpFilterRules() IpFilterRuleArrayOutput {
	return o.ApplyT(func(v *IotHubProperties) []IpFilterRule {
		if v == nil {
			return nil
		}
		return v.IpFilterRules
	}).(IpFilterRuleArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesPtrOutput) MessagingEndpoints() MessagingEndpointPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]MessagingEndpointProperties {
		if v == nil {
			return nil
		}
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesPtrOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *OperationsMonitoringProperties {
		if v == nil {
			return nil
		}
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesPtrOutput) Routing() RoutingPropertiesPtrOutput {
	return o.ApplyT(func(v *IotHubProperties) *RoutingProperties {
		if v == nil {
			return nil
		}
		return v.Routing
	}).(RoutingPropertiesPtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesPtrOutput) StorageEndpoints() StorageEndpointPropertiesMapOutput {
	return o.ApplyT(func(v *IotHubProperties) map[string]StorageEndpointProperties {
		if v == nil {
			return nil
		}
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesMapOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesInvokeResponse struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleInvokeResponse `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice *CloudToDevicePropertiesInvokeResponse `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments *string `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications *bool `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints map[string]EventHubPropertiesInvokeResponse `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features *string `pulumi:"features"`
	// The name of the host.
	HostName string `pulumi:"hostName"`
	// The IP filter rules.
	IpFilterRules []IpFilterRuleInvokeResponse `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints map[string]MessagingEndpointPropertiesInvokeResponse `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties *OperationsMonitoringPropertiesInvokeResponse `pulumi:"operationsMonitoringProperties"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing *RoutingPropertiesInvokeResponse `pulumi:"routing"`
	// The hub state.
	State string `pulumi:"state"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints map[string]StorageEndpointPropertiesInvokeResponse `pulumi:"storageEndpoints"`
}

// IotHubPropertiesInvokeResponseInput is an input type that accepts IotHubPropertiesInvokeResponseArgs and IotHubPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `IotHubPropertiesInvokeResponseInput` via:
//
//          IotHubPropertiesInvokeResponseArgs{...}
type IotHubPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToIotHubPropertiesInvokeResponseOutput() IotHubPropertiesInvokeResponseOutput
	ToIotHubPropertiesInvokeResponseOutputWithContext(context.Context) IotHubPropertiesInvokeResponseOutput
}

// The properties of an IoT hub.
type IotHubPropertiesInvokeResponseArgs struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleInvokeResponseArrayInput `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice CloudToDevicePropertiesInvokeResponsePtrInput `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications pulumi.BoolPtrInput `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints EventHubPropertiesInvokeResponseMapInput `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features pulumi.StringPtrInput `pulumi:"features"`
	// The name of the host.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The IP filter rules.
	IpFilterRules IpFilterRuleInvokeResponseArrayInput `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints MessagingEndpointPropertiesInvokeResponseMapInput `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties OperationsMonitoringPropertiesInvokeResponsePtrInput `pulumi:"operationsMonitoringProperties"`
	// The provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing RoutingPropertiesInvokeResponsePtrInput `pulumi:"routing"`
	// The hub state.
	State pulumi.StringInput `pulumi:"state"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints StorageEndpointPropertiesInvokeResponseMapInput `pulumi:"storageEndpoints"`
}

func (IotHubPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubPropertiesInvokeResponse)(nil)).Elem()
}

func (i IotHubPropertiesInvokeResponseArgs) ToIotHubPropertiesInvokeResponseOutput() IotHubPropertiesInvokeResponseOutput {
	return i.ToIotHubPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i IotHubPropertiesInvokeResponseArgs) ToIotHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) IotHubPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesInvokeResponseOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubPropertiesInvokeResponse)(nil)).Elem()
}

func (o IotHubPropertiesInvokeResponseOutput) ToIotHubPropertiesInvokeResponseOutput() IotHubPropertiesInvokeResponseOutput {
	return o
}

func (o IotHubPropertiesInvokeResponseOutput) ToIotHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) IotHubPropertiesInvokeResponseOutput {
	return o
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesInvokeResponseOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) []SharedAccessSignatureAuthorizationRuleInvokeResponse {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesInvokeResponseOutput) CloudToDevice() CloudToDevicePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *CloudToDevicePropertiesInvokeResponse { return v.CloudToDevice }).(CloudToDevicePropertiesInvokeResponsePtrOutput)
}

// IoT hub comments.
func (o IotHubPropertiesInvokeResponseOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesInvokeResponseOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *bool { return v.EnableFileUploadNotifications }).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesInvokeResponseOutput) EventHubEndpoints() EventHubPropertiesInvokeResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) map[string]EventHubPropertiesInvokeResponse {
		return v.EventHubEndpoints
	}).(EventHubPropertiesInvokeResponseMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesInvokeResponseOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *string { return v.Features }).(pulumi.StringPtrOutput)
}

// The name of the host.
func (o IotHubPropertiesInvokeResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The IP filter rules.
func (o IotHubPropertiesInvokeResponseOutput) IpFilterRules() IpFilterRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) []IpFilterRuleInvokeResponse { return v.IpFilterRules }).(IpFilterRuleInvokeResponseArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesInvokeResponseOutput) MessagingEndpoints() MessagingEndpointPropertiesInvokeResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) map[string]MessagingEndpointPropertiesInvokeResponse {
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesInvokeResponseMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesInvokeResponseOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *OperationsMonitoringPropertiesInvokeResponse {
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesInvokeResponsePtrOutput)
}

// The provisioning state.
func (o IotHubPropertiesInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesInvokeResponseOutput) Routing() RoutingPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) *RoutingPropertiesInvokeResponse { return v.Routing }).(RoutingPropertiesInvokeResponsePtrOutput)
}

// The hub state.
func (o IotHubPropertiesInvokeResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) string { return v.State }).(pulumi.StringOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesInvokeResponseOutput) StorageEndpoints() StorageEndpointPropertiesInvokeResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesInvokeResponse) map[string]StorageEndpointPropertiesInvokeResponse {
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesInvokeResponseMapOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesResponse struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies []SharedAccessSignatureAuthorizationRuleResponse `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice *CloudToDevicePropertiesResponse `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments *string `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications *bool `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints map[string]EventHubPropertiesResponse `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features *string `pulumi:"features"`
	// The name of the host.
	HostName string `pulumi:"hostName"`
	// The IP filter rules.
	IpFilterRules []IpFilterRuleResponse `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints map[string]MessagingEndpointPropertiesResponse `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties *OperationsMonitoringPropertiesResponse `pulumi:"operationsMonitoringProperties"`
	// The provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing *RoutingPropertiesResponse `pulumi:"routing"`
	// The hub state.
	State string `pulumi:"state"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints map[string]StorageEndpointPropertiesResponse `pulumi:"storageEndpoints"`
}

// IotHubPropertiesResponseInput is an input type that accepts IotHubPropertiesResponseArgs and IotHubPropertiesResponseOutput values.
// You can construct a concrete instance of `IotHubPropertiesResponseInput` via:
//
//          IotHubPropertiesResponseArgs{...}
type IotHubPropertiesResponseInput interface {
	pulumi.Input

	ToIotHubPropertiesResponseOutput() IotHubPropertiesResponseOutput
	ToIotHubPropertiesResponseOutputWithContext(context.Context) IotHubPropertiesResponseOutput
}

// The properties of an IoT hub.
type IotHubPropertiesResponseArgs struct {
	// The shared access policies you can use to secure a connection to the IoT hub.
	AuthorizationPolicies SharedAccessSignatureAuthorizationRuleResponseArrayInput `pulumi:"authorizationPolicies"`
	// The IoT hub cloud-to-device messaging properties.
	CloudToDevice CloudToDevicePropertiesResponsePtrInput `pulumi:"cloudToDevice"`
	// IoT hub comments.
	Comments pulumi.StringPtrInput `pulumi:"comments"`
	// If True, file upload notifications are enabled.
	EnableFileUploadNotifications pulumi.BoolPtrInput `pulumi:"enableFileUploadNotifications"`
	// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
	EventHubEndpoints EventHubPropertiesResponseMapInput `pulumi:"eventHubEndpoints"`
	// The capabilities and features enabled for the IoT hub.
	Features pulumi.StringPtrInput `pulumi:"features"`
	// The name of the host.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The IP filter rules.
	IpFilterRules IpFilterRuleResponseArrayInput `pulumi:"ipFilterRules"`
	// The messaging endpoint properties for the file upload notification queue.
	MessagingEndpoints MessagingEndpointPropertiesResponseMapInput `pulumi:"messagingEndpoints"`
	// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
	OperationsMonitoringProperties OperationsMonitoringPropertiesResponsePtrInput `pulumi:"operationsMonitoringProperties"`
	// The provisioning state.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
	Routing RoutingPropertiesResponsePtrInput `pulumi:"routing"`
	// The hub state.
	State pulumi.StringInput `pulumi:"state"`
	// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
	StorageEndpoints StorageEndpointPropertiesResponseMapInput `pulumi:"storageEndpoints"`
}

func (IotHubPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubPropertiesResponse)(nil)).Elem()
}

func (i IotHubPropertiesResponseArgs) ToIotHubPropertiesResponseOutput() IotHubPropertiesResponseOutput {
	return i.ToIotHubPropertiesResponseOutputWithContext(context.Background())
}

func (i IotHubPropertiesResponseArgs) ToIotHubPropertiesResponseOutputWithContext(ctx context.Context) IotHubPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesResponseOutput)
}

func (i IotHubPropertiesResponseArgs) ToIotHubPropertiesResponsePtrOutput() IotHubPropertiesResponsePtrOutput {
	return i.ToIotHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i IotHubPropertiesResponseArgs) ToIotHubPropertiesResponsePtrOutputWithContext(ctx context.Context) IotHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesResponseOutput).ToIotHubPropertiesResponsePtrOutputWithContext(ctx)
}

// IotHubPropertiesResponsePtrInput is an input type that accepts IotHubPropertiesResponseArgs, IotHubPropertiesResponsePtr and IotHubPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `IotHubPropertiesResponsePtrInput` via:
//
//          IotHubPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type IotHubPropertiesResponsePtrInput interface {
	pulumi.Input

	ToIotHubPropertiesResponsePtrOutput() IotHubPropertiesResponsePtrOutput
	ToIotHubPropertiesResponsePtrOutputWithContext(context.Context) IotHubPropertiesResponsePtrOutput
}

type iotHubPropertiesResponsePtrType IotHubPropertiesResponseArgs

func IotHubPropertiesResponsePtr(v *IotHubPropertiesResponseArgs) IotHubPropertiesResponsePtrInput {
	return (*iotHubPropertiesResponsePtrType)(v)
}

func (*iotHubPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubPropertiesResponse)(nil)).Elem()
}

func (i *iotHubPropertiesResponsePtrType) ToIotHubPropertiesResponsePtrOutput() IotHubPropertiesResponsePtrOutput {
	return i.ToIotHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *iotHubPropertiesResponsePtrType) ToIotHubPropertiesResponsePtrOutputWithContext(ctx context.Context) IotHubPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubPropertiesResponsePtrOutput)
}

// The properties of an IoT hub.
type IotHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubPropertiesResponse)(nil)).Elem()
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponseOutput() IotHubPropertiesResponseOutput {
	return o
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponseOutputWithContext(ctx context.Context) IotHubPropertiesResponseOutput {
	return o
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponsePtrOutput() IotHubPropertiesResponsePtrOutput {
	return o.ToIotHubPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o IotHubPropertiesResponseOutput) ToIotHubPropertiesResponsePtrOutputWithContext(ctx context.Context) IotHubPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *IotHubPropertiesResponse {
		return &v
	}).(IotHubPropertiesResponsePtrOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesResponseOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) []SharedAccessSignatureAuthorizationRuleResponse {
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleResponseArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesResponseOutput) CloudToDevice() CloudToDevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *CloudToDevicePropertiesResponse { return v.CloudToDevice }).(CloudToDevicePropertiesResponsePtrOutput)
}

// IoT hub comments.
func (o IotHubPropertiesResponseOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *string { return v.Comments }).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesResponseOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *bool { return v.EnableFileUploadNotifications }).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesResponseOutput) EventHubEndpoints() EventHubPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]EventHubPropertiesResponse { return v.EventHubEndpoints }).(EventHubPropertiesResponseMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesResponseOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *string { return v.Features }).(pulumi.StringPtrOutput)
}

// The name of the host.
func (o IotHubPropertiesResponseOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) string { return v.HostName }).(pulumi.StringOutput)
}

// The IP filter rules.
func (o IotHubPropertiesResponseOutput) IpFilterRules() IpFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) []IpFilterRuleResponse { return v.IpFilterRules }).(IpFilterRuleResponseArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesResponseOutput) MessagingEndpoints() MessagingEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]MessagingEndpointPropertiesResponse {
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesResponseMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesResponseOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *OperationsMonitoringPropertiesResponse {
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesResponsePtrOutput)
}

// The provisioning state.
func (o IotHubPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesResponseOutput) Routing() RoutingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) *RoutingPropertiesResponse { return v.Routing }).(RoutingPropertiesResponsePtrOutput)
}

// The hub state.
func (o IotHubPropertiesResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) string { return v.State }).(pulumi.StringOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesResponseOutput) StorageEndpoints() StorageEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v IotHubPropertiesResponse) map[string]StorageEndpointPropertiesResponse {
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesResponseMapOutput)
}

type IotHubPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (IotHubPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubPropertiesResponse)(nil)).Elem()
}

func (o IotHubPropertiesResponsePtrOutput) ToIotHubPropertiesResponsePtrOutput() IotHubPropertiesResponsePtrOutput {
	return o
}

func (o IotHubPropertiesResponsePtrOutput) ToIotHubPropertiesResponsePtrOutputWithContext(ctx context.Context) IotHubPropertiesResponsePtrOutput {
	return o
}

func (o IotHubPropertiesResponsePtrOutput) Elem() IotHubPropertiesResponseOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) IotHubPropertiesResponse { return *v }).(IotHubPropertiesResponseOutput)
}

// The shared access policies you can use to secure a connection to the IoT hub.
func (o IotHubPropertiesResponsePtrOutput) AuthorizationPolicies() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) []SharedAccessSignatureAuthorizationRuleResponse {
		if v == nil {
			return nil
		}
		return v.AuthorizationPolicies
	}).(SharedAccessSignatureAuthorizationRuleResponseArrayOutput)
}

// The IoT hub cloud-to-device messaging properties.
func (o IotHubPropertiesResponsePtrOutput) CloudToDevice() CloudToDevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *CloudToDevicePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.CloudToDevice
	}).(CloudToDevicePropertiesResponsePtrOutput)
}

// IoT hub comments.
func (o IotHubPropertiesResponsePtrOutput) Comments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Comments
	}).(pulumi.StringPtrOutput)
}

// If True, file upload notifications are enabled.
func (o IotHubPropertiesResponsePtrOutput) EnableFileUploadNotifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFileUploadNotifications
	}).(pulumi.BoolPtrOutput)
}

// The Event Hub-compatible endpoint properties. The possible keys to this dictionary are events and operationsMonitoringEvents. Both of these keys have to be present in the dictionary while making create or update calls for the IoT hub.
func (o IotHubPropertiesResponsePtrOutput) EventHubEndpoints() EventHubPropertiesResponseMapOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) map[string]EventHubPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.EventHubEndpoints
	}).(EventHubPropertiesResponseMapOutput)
}

// The capabilities and features enabled for the IoT hub.
func (o IotHubPropertiesResponsePtrOutput) Features() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Features
	}).(pulumi.StringPtrOutput)
}

// The name of the host.
func (o IotHubPropertiesResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HostName
	}).(pulumi.StringPtrOutput)
}

// The IP filter rules.
func (o IotHubPropertiesResponsePtrOutput) IpFilterRules() IpFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) []IpFilterRuleResponse {
		if v == nil {
			return nil
		}
		return v.IpFilterRules
	}).(IpFilterRuleResponseArrayOutput)
}

// The messaging endpoint properties for the file upload notification queue.
func (o IotHubPropertiesResponsePtrOutput) MessagingEndpoints() MessagingEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) map[string]MessagingEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.MessagingEndpoints
	}).(MessagingEndpointPropertiesResponseMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
func (o IotHubPropertiesResponsePtrOutput) OperationsMonitoringProperties() OperationsMonitoringPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *OperationsMonitoringPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.OperationsMonitoringProperties
	}).(OperationsMonitoringPropertiesResponsePtrOutput)
}

// The provisioning state.
func (o IotHubPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
func (o IotHubPropertiesResponsePtrOutput) Routing() RoutingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *RoutingPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Routing
	}).(RoutingPropertiesResponsePtrOutput)
}

// The hub state.
func (o IotHubPropertiesResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.State
	}).(pulumi.StringPtrOutput)
}

// The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
func (o IotHubPropertiesResponsePtrOutput) StorageEndpoints() StorageEndpointPropertiesResponseMapOutput {
	return o.ApplyT(func(v *IotHubPropertiesResponse) map[string]StorageEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.StorageEndpoints
	}).(StorageEndpointPropertiesResponseMapOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfo struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity *float64 `pulumi:"capacity"`
	// The name of the SKU.
	Name string `pulumi:"name"`
}

// IotHubSkuInfoInput is an input type that accepts IotHubSkuInfoArgs and IotHubSkuInfoOutput values.
// You can construct a concrete instance of `IotHubSkuInfoInput` via:
//
//          IotHubSkuInfoArgs{...}
type IotHubSkuInfoInput interface {
	pulumi.Input

	ToIotHubSkuInfoOutput() IotHubSkuInfoOutput
	ToIotHubSkuInfoOutputWithContext(context.Context) IotHubSkuInfoOutput
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoArgs struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IotHubSkuInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfo)(nil)).Elem()
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoOutput() IotHubSkuInfoOutput {
	return i.ToIotHubSkuInfoOutputWithContext(context.Background())
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoOutputWithContext(ctx context.Context) IotHubSkuInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoOutput)
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoPtrOutput() IotHubSkuInfoPtrOutput {
	return i.ToIotHubSkuInfoPtrOutputWithContext(context.Background())
}

func (i IotHubSkuInfoArgs) ToIotHubSkuInfoPtrOutputWithContext(ctx context.Context) IotHubSkuInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoOutput).ToIotHubSkuInfoPtrOutputWithContext(ctx)
}

// IotHubSkuInfoPtrInput is an input type that accepts IotHubSkuInfoArgs, IotHubSkuInfoPtr and IotHubSkuInfoPtrOutput values.
// You can construct a concrete instance of `IotHubSkuInfoPtrInput` via:
//
//          IotHubSkuInfoArgs{...}
//
//  or:
//
//          nil
type IotHubSkuInfoPtrInput interface {
	pulumi.Input

	ToIotHubSkuInfoPtrOutput() IotHubSkuInfoPtrOutput
	ToIotHubSkuInfoPtrOutputWithContext(context.Context) IotHubSkuInfoPtrOutput
}

type iotHubSkuInfoPtrType IotHubSkuInfoArgs

func IotHubSkuInfoPtr(v *IotHubSkuInfoArgs) IotHubSkuInfoPtrInput {
	return (*iotHubSkuInfoPtrType)(v)
}

func (*iotHubSkuInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubSkuInfo)(nil)).Elem()
}

func (i *iotHubSkuInfoPtrType) ToIotHubSkuInfoPtrOutput() IotHubSkuInfoPtrOutput {
	return i.ToIotHubSkuInfoPtrOutputWithContext(context.Background())
}

func (i *iotHubSkuInfoPtrType) ToIotHubSkuInfoPtrOutputWithContext(ctx context.Context) IotHubSkuInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoPtrOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfo)(nil)).Elem()
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoOutput() IotHubSkuInfoOutput {
	return o
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoOutputWithContext(ctx context.Context) IotHubSkuInfoOutput {
	return o
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoPtrOutput() IotHubSkuInfoPtrOutput {
	return o.ToIotHubSkuInfoPtrOutputWithContext(context.Background())
}

func (o IotHubSkuInfoOutput) ToIotHubSkuInfoPtrOutputWithContext(ctx context.Context) IotHubSkuInfoPtrOutput {
	return o.ApplyT(func(v IotHubSkuInfo) *IotHubSkuInfo {
		return &v
	}).(IotHubSkuInfoPtrOutput)
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotHubSkuInfo) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The name of the SKU.
func (o IotHubSkuInfoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfo) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubSkuInfoPtrOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubSkuInfo)(nil)).Elem()
}

func (o IotHubSkuInfoPtrOutput) ToIotHubSkuInfoPtrOutput() IotHubSkuInfoPtrOutput {
	return o
}

func (o IotHubSkuInfoPtrOutput) ToIotHubSkuInfoPtrOutputWithContext(ctx context.Context) IotHubSkuInfoPtrOutput {
	return o
}

func (o IotHubSkuInfoPtrOutput) Elem() IotHubSkuInfoOutput {
	return o.ApplyT(func(v *IotHubSkuInfo) IotHubSkuInfo { return *v }).(IotHubSkuInfoOutput)
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoPtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IotHubSkuInfo) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The name of the SKU.
func (o IotHubSkuInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubSkuInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoInvokeResponse struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity *float64 `pulumi:"capacity"`
	// The name of the SKU.
	Name string `pulumi:"name"`
	// The billing tier for the IoT hub.
	Tier string `pulumi:"tier"`
}

// IotHubSkuInfoInvokeResponseInput is an input type that accepts IotHubSkuInfoInvokeResponseArgs and IotHubSkuInfoInvokeResponseOutput values.
// You can construct a concrete instance of `IotHubSkuInfoInvokeResponseInput` via:
//
//          IotHubSkuInfoInvokeResponseArgs{...}
type IotHubSkuInfoInvokeResponseInput interface {
	pulumi.Input

	ToIotHubSkuInfoInvokeResponseOutput() IotHubSkuInfoInvokeResponseOutput
	ToIotHubSkuInfoInvokeResponseOutputWithContext(context.Context) IotHubSkuInfoInvokeResponseOutput
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoInvokeResponseArgs struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
	// The billing tier for the IoT hub.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (IotHubSkuInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfoInvokeResponse)(nil)).Elem()
}

func (i IotHubSkuInfoInvokeResponseArgs) ToIotHubSkuInfoInvokeResponseOutput() IotHubSkuInfoInvokeResponseOutput {
	return i.ToIotHubSkuInfoInvokeResponseOutputWithContext(context.Background())
}

func (i IotHubSkuInfoInvokeResponseArgs) ToIotHubSkuInfoInvokeResponseOutputWithContext(ctx context.Context) IotHubSkuInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoInvokeResponseOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfoInvokeResponse)(nil)).Elem()
}

func (o IotHubSkuInfoInvokeResponseOutput) ToIotHubSkuInfoInvokeResponseOutput() IotHubSkuInfoInvokeResponseOutput {
	return o
}

func (o IotHubSkuInfoInvokeResponseOutput) ToIotHubSkuInfoInvokeResponseOutputWithContext(ctx context.Context) IotHubSkuInfoInvokeResponseOutput {
	return o
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoInvokeResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotHubSkuInfoInvokeResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The name of the SKU.
func (o IotHubSkuInfoInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The billing tier for the IoT hub.
func (o IotHubSkuInfoInvokeResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoInvokeResponse) string { return v.Tier }).(pulumi.StringOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoResponse struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity *float64 `pulumi:"capacity"`
	// The name of the SKU.
	Name string `pulumi:"name"`
	// The billing tier for the IoT hub.
	Tier string `pulumi:"tier"`
}

// IotHubSkuInfoResponseInput is an input type that accepts IotHubSkuInfoResponseArgs and IotHubSkuInfoResponseOutput values.
// You can construct a concrete instance of `IotHubSkuInfoResponseInput` via:
//
//          IotHubSkuInfoResponseArgs{...}
type IotHubSkuInfoResponseInput interface {
	pulumi.Input

	ToIotHubSkuInfoResponseOutput() IotHubSkuInfoResponseOutput
	ToIotHubSkuInfoResponseOutputWithContext(context.Context) IotHubSkuInfoResponseOutput
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoResponseArgs struct {
	// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
	Capacity pulumi.Float64PtrInput `pulumi:"capacity"`
	// The name of the SKU.
	Name pulumi.StringInput `pulumi:"name"`
	// The billing tier for the IoT hub.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (IotHubSkuInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfoResponse)(nil)).Elem()
}

func (i IotHubSkuInfoResponseArgs) ToIotHubSkuInfoResponseOutput() IotHubSkuInfoResponseOutput {
	return i.ToIotHubSkuInfoResponseOutputWithContext(context.Background())
}

func (i IotHubSkuInfoResponseArgs) ToIotHubSkuInfoResponseOutputWithContext(ctx context.Context) IotHubSkuInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoResponseOutput)
}

func (i IotHubSkuInfoResponseArgs) ToIotHubSkuInfoResponsePtrOutput() IotHubSkuInfoResponsePtrOutput {
	return i.ToIotHubSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (i IotHubSkuInfoResponseArgs) ToIotHubSkuInfoResponsePtrOutputWithContext(ctx context.Context) IotHubSkuInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoResponseOutput).ToIotHubSkuInfoResponsePtrOutputWithContext(ctx)
}

// IotHubSkuInfoResponsePtrInput is an input type that accepts IotHubSkuInfoResponseArgs, IotHubSkuInfoResponsePtr and IotHubSkuInfoResponsePtrOutput values.
// You can construct a concrete instance of `IotHubSkuInfoResponsePtrInput` via:
//
//          IotHubSkuInfoResponseArgs{...}
//
//  or:
//
//          nil
type IotHubSkuInfoResponsePtrInput interface {
	pulumi.Input

	ToIotHubSkuInfoResponsePtrOutput() IotHubSkuInfoResponsePtrOutput
	ToIotHubSkuInfoResponsePtrOutputWithContext(context.Context) IotHubSkuInfoResponsePtrOutput
}

type iotHubSkuInfoResponsePtrType IotHubSkuInfoResponseArgs

func IotHubSkuInfoResponsePtr(v *IotHubSkuInfoResponseArgs) IotHubSkuInfoResponsePtrInput {
	return (*iotHubSkuInfoResponsePtrType)(v)
}

func (*iotHubSkuInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubSkuInfoResponse)(nil)).Elem()
}

func (i *iotHubSkuInfoResponsePtrType) ToIotHubSkuInfoResponsePtrOutput() IotHubSkuInfoResponsePtrOutput {
	return i.ToIotHubSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (i *iotHubSkuInfoResponsePtrType) ToIotHubSkuInfoResponsePtrOutputWithContext(ctx context.Context) IotHubSkuInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubSkuInfoResponsePtrOutput)
}

// Information about the SKU of the IoT hub.
type IotHubSkuInfoResponseOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubSkuInfoResponse)(nil)).Elem()
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponseOutput() IotHubSkuInfoResponseOutput {
	return o
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponseOutputWithContext(ctx context.Context) IotHubSkuInfoResponseOutput {
	return o
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponsePtrOutput() IotHubSkuInfoResponsePtrOutput {
	return o.ToIotHubSkuInfoResponsePtrOutputWithContext(context.Background())
}

func (o IotHubSkuInfoResponseOutput) ToIotHubSkuInfoResponsePtrOutputWithContext(ctx context.Context) IotHubSkuInfoResponsePtrOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) *IotHubSkuInfoResponse {
		return &v
	}).(IotHubSkuInfoResponsePtrOutput)
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoResponseOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) *float64 { return v.Capacity }).(pulumi.Float64PtrOutput)
}

// The name of the SKU.
func (o IotHubSkuInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The billing tier for the IoT hub.
func (o IotHubSkuInfoResponseOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubSkuInfoResponse) string { return v.Tier }).(pulumi.StringOutput)
}

type IotHubSkuInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IotHubSkuInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubSkuInfoResponse)(nil)).Elem()
}

func (o IotHubSkuInfoResponsePtrOutput) ToIotHubSkuInfoResponsePtrOutput() IotHubSkuInfoResponsePtrOutput {
	return o
}

func (o IotHubSkuInfoResponsePtrOutput) ToIotHubSkuInfoResponsePtrOutputWithContext(ctx context.Context) IotHubSkuInfoResponsePtrOutput {
	return o
}

func (o IotHubSkuInfoResponsePtrOutput) Elem() IotHubSkuInfoResponseOutput {
	return o.ApplyT(func(v *IotHubSkuInfoResponse) IotHubSkuInfoResponse { return *v }).(IotHubSkuInfoResponseOutput)
}

// The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
func (o IotHubSkuInfoResponsePtrOutput) Capacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *IotHubSkuInfoResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.Float64PtrOutput)
}

// The name of the SKU.
func (o IotHubSkuInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubSkuInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The billing tier for the IoT hub.
func (o IotHubSkuInfoResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubSkuInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRule struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
}

// IpFilterRuleInput is an input type that accepts IpFilterRuleArgs and IpFilterRuleOutput values.
// You can construct a concrete instance of `IpFilterRuleInput` via:
//
//          IpFilterRuleArgs{...}
type IpFilterRuleInput interface {
	pulumi.Input

	ToIpFilterRuleOutput() IpFilterRuleOutput
	ToIpFilterRuleOutputWithContext(context.Context) IpFilterRuleOutput
}

// The IP filter rules for the IoT hub.
type IpFilterRuleArgs struct {
	// The desired action for requests captured by this rule.
	Action IpFilterActionType `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
}

func (IpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRule)(nil)).Elem()
}

func (i IpFilterRuleArgs) ToIpFilterRuleOutput() IpFilterRuleOutput {
	return i.ToIpFilterRuleOutputWithContext(context.Background())
}

func (i IpFilterRuleArgs) ToIpFilterRuleOutputWithContext(ctx context.Context) IpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleOutput)
}

// IpFilterRuleArrayInput is an input type that accepts IpFilterRuleArray and IpFilterRuleArrayOutput values.
// You can construct a concrete instance of `IpFilterRuleArrayInput` via:
//
//          IpFilterRuleArray{ IpFilterRuleArgs{...} }
type IpFilterRuleArrayInput interface {
	pulumi.Input

	ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput
	ToIpFilterRuleArrayOutputWithContext(context.Context) IpFilterRuleArrayOutput
}

type IpFilterRuleArray []IpFilterRuleInput

func (IpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRule)(nil)).Elem()
}

func (i IpFilterRuleArray) ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput {
	return i.ToIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i IpFilterRuleArray) ToIpFilterRuleArrayOutputWithContext(ctx context.Context) IpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleArrayOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleOutput struct{ *pulumi.OutputState }

func (IpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRule)(nil)).Elem()
}

func (o IpFilterRuleOutput) ToIpFilterRuleOutput() IpFilterRuleOutput {
	return o
}

func (o IpFilterRuleOutput) ToIpFilterRuleOutputWithContext(ctx context.Context) IpFilterRuleOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o IpFilterRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRule) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o IpFilterRuleOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRule) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o IpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

type IpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (IpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRule)(nil)).Elem()
}

func (o IpFilterRuleArrayOutput) ToIpFilterRuleArrayOutput() IpFilterRuleArrayOutput {
	return o
}

func (o IpFilterRuleArrayOutput) ToIpFilterRuleArrayOutputWithContext(ctx context.Context) IpFilterRuleArrayOutput {
	return o
}

func (o IpFilterRuleArrayOutput) Index(i pulumi.IntInput) IpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpFilterRule {
		return vs[0].([]IpFilterRule)[vs[1].(int)]
	}).(IpFilterRuleOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleInvokeResponse struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
}

// IpFilterRuleInvokeResponseInput is an input type that accepts IpFilterRuleInvokeResponseArgs and IpFilterRuleInvokeResponseOutput values.
// You can construct a concrete instance of `IpFilterRuleInvokeResponseInput` via:
//
//          IpFilterRuleInvokeResponseArgs{...}
type IpFilterRuleInvokeResponseInput interface {
	pulumi.Input

	ToIpFilterRuleInvokeResponseOutput() IpFilterRuleInvokeResponseOutput
	ToIpFilterRuleInvokeResponseOutputWithContext(context.Context) IpFilterRuleInvokeResponseOutput
}

// The IP filter rules for the IoT hub.
type IpFilterRuleInvokeResponseArgs struct {
	// The desired action for requests captured by this rule.
	Action pulumi.StringInput `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
}

func (IpFilterRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRuleInvokeResponse)(nil)).Elem()
}

func (i IpFilterRuleInvokeResponseArgs) ToIpFilterRuleInvokeResponseOutput() IpFilterRuleInvokeResponseOutput {
	return i.ToIpFilterRuleInvokeResponseOutputWithContext(context.Background())
}

func (i IpFilterRuleInvokeResponseArgs) ToIpFilterRuleInvokeResponseOutputWithContext(ctx context.Context) IpFilterRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleInvokeResponseOutput)
}

// IpFilterRuleInvokeResponseArrayInput is an input type that accepts IpFilterRuleInvokeResponseArray and IpFilterRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IpFilterRuleInvokeResponseArrayInput` via:
//
//          IpFilterRuleInvokeResponseArray{ IpFilterRuleInvokeResponseArgs{...} }
type IpFilterRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToIpFilterRuleInvokeResponseArrayOutput() IpFilterRuleInvokeResponseArrayOutput
	ToIpFilterRuleInvokeResponseArrayOutputWithContext(context.Context) IpFilterRuleInvokeResponseArrayOutput
}

type IpFilterRuleInvokeResponseArray []IpFilterRuleInvokeResponseInput

func (IpFilterRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRuleInvokeResponse)(nil)).Elem()
}

func (i IpFilterRuleInvokeResponseArray) ToIpFilterRuleInvokeResponseArrayOutput() IpFilterRuleInvokeResponseArrayOutput {
	return i.ToIpFilterRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IpFilterRuleInvokeResponseArray) ToIpFilterRuleInvokeResponseArrayOutputWithContext(ctx context.Context) IpFilterRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleInvokeResponseArrayOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (IpFilterRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRuleInvokeResponse)(nil)).Elem()
}

func (o IpFilterRuleInvokeResponseOutput) ToIpFilterRuleInvokeResponseOutput() IpFilterRuleInvokeResponseOutput {
	return o
}

func (o IpFilterRuleInvokeResponseOutput) ToIpFilterRuleInvokeResponseOutputWithContext(ctx context.Context) IpFilterRuleInvokeResponseOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o IpFilterRuleInvokeResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleInvokeResponse) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o IpFilterRuleInvokeResponseOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleInvokeResponse) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o IpFilterRuleInvokeResponseOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleInvokeResponse) string { return v.IpMask }).(pulumi.StringOutput)
}

type IpFilterRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IpFilterRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRuleInvokeResponse)(nil)).Elem()
}

func (o IpFilterRuleInvokeResponseArrayOutput) ToIpFilterRuleInvokeResponseArrayOutput() IpFilterRuleInvokeResponseArrayOutput {
	return o
}

func (o IpFilterRuleInvokeResponseArrayOutput) ToIpFilterRuleInvokeResponseArrayOutputWithContext(ctx context.Context) IpFilterRuleInvokeResponseArrayOutput {
	return o
}

func (o IpFilterRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) IpFilterRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpFilterRuleInvokeResponse {
		return vs[0].([]IpFilterRuleInvokeResponse)[vs[1].(int)]
	}).(IpFilterRuleInvokeResponseOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleResponse struct {
	// The desired action for requests captured by this rule.
	Action string `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName string `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
}

// IpFilterRuleResponseInput is an input type that accepts IpFilterRuleResponseArgs and IpFilterRuleResponseOutput values.
// You can construct a concrete instance of `IpFilterRuleResponseInput` via:
//
//          IpFilterRuleResponseArgs{...}
type IpFilterRuleResponseInput interface {
	pulumi.Input

	ToIpFilterRuleResponseOutput() IpFilterRuleResponseOutput
	ToIpFilterRuleResponseOutputWithContext(context.Context) IpFilterRuleResponseOutput
}

// The IP filter rules for the IoT hub.
type IpFilterRuleResponseArgs struct {
	// The desired action for requests captured by this rule.
	Action pulumi.StringInput `pulumi:"action"`
	// The name of the IP filter rule.
	FilterName pulumi.StringInput `pulumi:"filterName"`
	// A string that contains the IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
}

func (IpFilterRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRuleResponse)(nil)).Elem()
}

func (i IpFilterRuleResponseArgs) ToIpFilterRuleResponseOutput() IpFilterRuleResponseOutput {
	return i.ToIpFilterRuleResponseOutputWithContext(context.Background())
}

func (i IpFilterRuleResponseArgs) ToIpFilterRuleResponseOutputWithContext(ctx context.Context) IpFilterRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleResponseOutput)
}

// IpFilterRuleResponseArrayInput is an input type that accepts IpFilterRuleResponseArray and IpFilterRuleResponseArrayOutput values.
// You can construct a concrete instance of `IpFilterRuleResponseArrayInput` via:
//
//          IpFilterRuleResponseArray{ IpFilterRuleResponseArgs{...} }
type IpFilterRuleResponseArrayInput interface {
	pulumi.Input

	ToIpFilterRuleResponseArrayOutput() IpFilterRuleResponseArrayOutput
	ToIpFilterRuleResponseArrayOutputWithContext(context.Context) IpFilterRuleResponseArrayOutput
}

type IpFilterRuleResponseArray []IpFilterRuleResponseInput

func (IpFilterRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRuleResponse)(nil)).Elem()
}

func (i IpFilterRuleResponseArray) ToIpFilterRuleResponseArrayOutput() IpFilterRuleResponseArrayOutput {
	return i.ToIpFilterRuleResponseArrayOutputWithContext(context.Background())
}

func (i IpFilterRuleResponseArray) ToIpFilterRuleResponseArrayOutputWithContext(ctx context.Context) IpFilterRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpFilterRuleResponseArrayOutput)
}

// The IP filter rules for the IoT hub.
type IpFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (IpFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpFilterRuleResponse)(nil)).Elem()
}

func (o IpFilterRuleResponseOutput) ToIpFilterRuleResponseOutput() IpFilterRuleResponseOutput {
	return o
}

func (o IpFilterRuleResponseOutput) ToIpFilterRuleResponseOutputWithContext(ctx context.Context) IpFilterRuleResponseOutput {
	return o
}

// The desired action for requests captured by this rule.
func (o IpFilterRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the IP filter rule.
func (o IpFilterRuleResponseOutput) FilterName() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.FilterName }).(pulumi.StringOutput)
}

// A string that contains the IP address range in CIDR notation for the rule.
func (o IpFilterRuleResponseOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IpFilterRuleResponse) string { return v.IpMask }).(pulumi.StringOutput)
}

type IpFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (IpFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpFilterRuleResponse)(nil)).Elem()
}

func (o IpFilterRuleResponseArrayOutput) ToIpFilterRuleResponseArrayOutput() IpFilterRuleResponseArrayOutput {
	return o
}

func (o IpFilterRuleResponseArrayOutput) ToIpFilterRuleResponseArrayOutputWithContext(ctx context.Context) IpFilterRuleResponseArrayOutput {
	return o
}

func (o IpFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) IpFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpFilterRuleResponse {
		return vs[0].([]IpFilterRuleResponse)[vs[1].(int)]
	}).(IpFilterRuleResponseOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointProperties struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// MessagingEndpointPropertiesInput is an input type that accepts MessagingEndpointPropertiesArgs and MessagingEndpointPropertiesOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesInput` via:
//
//          MessagingEndpointPropertiesArgs{...}
type MessagingEndpointPropertiesInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput
	ToMessagingEndpointPropertiesOutputWithContext(context.Context) MessagingEndpointPropertiesOutput
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesArgs struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (MessagingEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointProperties)(nil)).Elem()
}

func (i MessagingEndpointPropertiesArgs) ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput {
	return i.ToMessagingEndpointPropertiesOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesArgs) ToMessagingEndpointPropertiesOutputWithContext(ctx context.Context) MessagingEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesOutput)
}

// MessagingEndpointPropertiesMapInput is an input type that accepts MessagingEndpointPropertiesMap and MessagingEndpointPropertiesMapOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesMapInput` via:
//
//          MessagingEndpointPropertiesMap{ "key": MessagingEndpointPropertiesArgs{...} }
type MessagingEndpointPropertiesMapInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput
	ToMessagingEndpointPropertiesMapOutputWithContext(context.Context) MessagingEndpointPropertiesMapOutput
}

type MessagingEndpointPropertiesMap map[string]MessagingEndpointPropertiesInput

func (MessagingEndpointPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointProperties)(nil)).Elem()
}

func (i MessagingEndpointPropertiesMap) ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput {
	return i.ToMessagingEndpointPropertiesMapOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesMap) ToMessagingEndpointPropertiesMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesMapOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointProperties)(nil)).Elem()
}

func (o MessagingEndpointPropertiesOutput) ToMessagingEndpointPropertiesOutput() MessagingEndpointPropertiesOutput {
	return o
}

func (o MessagingEndpointPropertiesOutput) ToMessagingEndpointPropertiesOutputWithContext(ctx context.Context) MessagingEndpointPropertiesOutput {
	return o
}

// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointProperties) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type MessagingEndpointPropertiesMapOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointProperties)(nil)).Elem()
}

func (o MessagingEndpointPropertiesMapOutput) ToMessagingEndpointPropertiesMapOutput() MessagingEndpointPropertiesMapOutput {
	return o
}

func (o MessagingEndpointPropertiesMapOutput) ToMessagingEndpointPropertiesMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesMapOutput {
	return o
}

func (o MessagingEndpointPropertiesMapOutput) MapIndex(k pulumi.StringInput) MessagingEndpointPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MessagingEndpointProperties {
		return vs[0].(map[string]MessagingEndpointProperties)[vs[1].(string)]
	}).(MessagingEndpointPropertiesOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesInvokeResponse struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// MessagingEndpointPropertiesInvokeResponseInput is an input type that accepts MessagingEndpointPropertiesInvokeResponseArgs and MessagingEndpointPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesInvokeResponseInput` via:
//
//          MessagingEndpointPropertiesInvokeResponseArgs{...}
type MessagingEndpointPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesInvokeResponseOutput() MessagingEndpointPropertiesInvokeResponseOutput
	ToMessagingEndpointPropertiesInvokeResponseOutputWithContext(context.Context) MessagingEndpointPropertiesInvokeResponseOutput
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesInvokeResponseArgs struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (MessagingEndpointPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i MessagingEndpointPropertiesInvokeResponseArgs) ToMessagingEndpointPropertiesInvokeResponseOutput() MessagingEndpointPropertiesInvokeResponseOutput {
	return i.ToMessagingEndpointPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesInvokeResponseArgs) ToMessagingEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) MessagingEndpointPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesInvokeResponseOutput)
}

// MessagingEndpointPropertiesInvokeResponseMapInput is an input type that accepts MessagingEndpointPropertiesInvokeResponseMap and MessagingEndpointPropertiesInvokeResponseMapOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesInvokeResponseMapInput` via:
//
//          MessagingEndpointPropertiesInvokeResponseMap{ "key": MessagingEndpointPropertiesInvokeResponseArgs{...} }
type MessagingEndpointPropertiesInvokeResponseMapInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesInvokeResponseMapOutput() MessagingEndpointPropertiesInvokeResponseMapOutput
	ToMessagingEndpointPropertiesInvokeResponseMapOutputWithContext(context.Context) MessagingEndpointPropertiesInvokeResponseMapOutput
}

type MessagingEndpointPropertiesInvokeResponseMap map[string]MessagingEndpointPropertiesInvokeResponseInput

func (MessagingEndpointPropertiesInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i MessagingEndpointPropertiesInvokeResponseMap) ToMessagingEndpointPropertiesInvokeResponseMapOutput() MessagingEndpointPropertiesInvokeResponseMapOutput {
	return i.ToMessagingEndpointPropertiesInvokeResponseMapOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesInvokeResponseMap) ToMessagingEndpointPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesInvokeResponseMapOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesInvokeResponseOutput) ToMessagingEndpointPropertiesInvokeResponseOutput() MessagingEndpointPropertiesInvokeResponseOutput {
	return o
}

func (o MessagingEndpointPropertiesInvokeResponseOutput) ToMessagingEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) MessagingEndpointPropertiesInvokeResponseOutput {
	return o
}

// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesInvokeResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesInvokeResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesInvokeResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesInvokeResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesInvokeResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesInvokeResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type MessagingEndpointPropertiesInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesInvokeResponseMapOutput) ToMessagingEndpointPropertiesInvokeResponseMapOutput() MessagingEndpointPropertiesInvokeResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesInvokeResponseMapOutput) ToMessagingEndpointPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesInvokeResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) MessagingEndpointPropertiesInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MessagingEndpointPropertiesInvokeResponse {
		return vs[0].(map[string]MessagingEndpointPropertiesInvokeResponse)[vs[1].(string)]
	}).(MessagingEndpointPropertiesInvokeResponseOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesResponse struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 *string `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 *string `pulumi:"ttlAsIso8601"`
}

// MessagingEndpointPropertiesResponseInput is an input type that accepts MessagingEndpointPropertiesResponseArgs and MessagingEndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesResponseInput` via:
//
//          MessagingEndpointPropertiesResponseArgs{...}
type MessagingEndpointPropertiesResponseInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesResponseOutput() MessagingEndpointPropertiesResponseOutput
	ToMessagingEndpointPropertiesResponseOutputWithContext(context.Context) MessagingEndpointPropertiesResponseOutput
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesResponseArgs struct {
	// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	LockDurationAsIso8601 pulumi.StringPtrInput `pulumi:"lockDurationAsIso8601"`
	// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
	TtlAsIso8601 pulumi.StringPtrInput `pulumi:"ttlAsIso8601"`
}

func (MessagingEndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (i MessagingEndpointPropertiesResponseArgs) ToMessagingEndpointPropertiesResponseOutput() MessagingEndpointPropertiesResponseOutput {
	return i.ToMessagingEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesResponseArgs) ToMessagingEndpointPropertiesResponseOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesResponseOutput)
}

// MessagingEndpointPropertiesResponseMapInput is an input type that accepts MessagingEndpointPropertiesResponseMap and MessagingEndpointPropertiesResponseMapOutput values.
// You can construct a concrete instance of `MessagingEndpointPropertiesResponseMapInput` via:
//
//          MessagingEndpointPropertiesResponseMap{ "key": MessagingEndpointPropertiesResponseArgs{...} }
type MessagingEndpointPropertiesResponseMapInput interface {
	pulumi.Input

	ToMessagingEndpointPropertiesResponseMapOutput() MessagingEndpointPropertiesResponseMapOutput
	ToMessagingEndpointPropertiesResponseMapOutputWithContext(context.Context) MessagingEndpointPropertiesResponseMapOutput
}

type MessagingEndpointPropertiesResponseMap map[string]MessagingEndpointPropertiesResponseInput

func (MessagingEndpointPropertiesResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (i MessagingEndpointPropertiesResponseMap) ToMessagingEndpointPropertiesResponseMapOutput() MessagingEndpointPropertiesResponseMapOutput {
	return i.ToMessagingEndpointPropertiesResponseMapOutputWithContext(context.Background())
}

func (i MessagingEndpointPropertiesResponseMap) ToMessagingEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessagingEndpointPropertiesResponseMapOutput)
}

// The properties of the messaging endpoints used by this IoT hub.
type MessagingEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesResponseOutput) ToMessagingEndpointPropertiesResponseOutput() MessagingEndpointPropertiesResponseOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseOutput) ToMessagingEndpointPropertiesResponseOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseOutput {
	return o
}

// The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) LockDurationAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *string { return v.LockDurationAsIso8601 }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload.
func (o MessagingEndpointPropertiesResponseOutput) TtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MessagingEndpointPropertiesResponse) *string { return v.TtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type MessagingEndpointPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (MessagingEndpointPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MessagingEndpointPropertiesResponse)(nil)).Elem()
}

func (o MessagingEndpointPropertiesResponseMapOutput) ToMessagingEndpointPropertiesResponseMapOutput() MessagingEndpointPropertiesResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseMapOutput) ToMessagingEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) MessagingEndpointPropertiesResponseMapOutput {
	return o
}

func (o MessagingEndpointPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) MessagingEndpointPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MessagingEndpointPropertiesResponse {
		return vs[0].(map[string]MessagingEndpointPropertiesResponse)[vs[1].(string)]
	}).(MessagingEndpointPropertiesResponseOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringProperties struct {
	Events map[string]string `pulumi:"events"`
}

// OperationsMonitoringPropertiesInput is an input type that accepts OperationsMonitoringPropertiesArgs and OperationsMonitoringPropertiesOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesInput` via:
//
//          OperationsMonitoringPropertiesArgs{...}
type OperationsMonitoringPropertiesInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput
	ToOperationsMonitoringPropertiesOutputWithContext(context.Context) OperationsMonitoringPropertiesOutput
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesArgs struct {
	Events pulumi.StringMapInput `pulumi:"events"`
}

func (OperationsMonitoringPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringProperties)(nil)).Elem()
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput {
	return i.ToOperationsMonitoringPropertiesOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesOutput)
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return i.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesArgs) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesOutput).ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx)
}

// OperationsMonitoringPropertiesPtrInput is an input type that accepts OperationsMonitoringPropertiesArgs, OperationsMonitoringPropertiesPtr and OperationsMonitoringPropertiesPtrOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesPtrInput` via:
//
//          OperationsMonitoringPropertiesArgs{...}
//
//  or:
//
//          nil
type OperationsMonitoringPropertiesPtrInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput
	ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Context) OperationsMonitoringPropertiesPtrOutput
}

type operationsMonitoringPropertiesPtrType OperationsMonitoringPropertiesArgs

func OperationsMonitoringPropertiesPtr(v *OperationsMonitoringPropertiesArgs) OperationsMonitoringPropertiesPtrInput {
	return (*operationsMonitoringPropertiesPtrType)(v)
}

func (*operationsMonitoringPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringProperties)(nil)).Elem()
}

func (i *operationsMonitoringPropertiesPtrType) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return i.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (i *operationsMonitoringPropertiesPtrType) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesPtrOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringProperties)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesOutput() OperationsMonitoringPropertiesOutput {
	return o
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesOutput {
	return o
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return o.ToOperationsMonitoringPropertiesPtrOutputWithContext(context.Background())
}

func (o OperationsMonitoringPropertiesOutput) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return o.ApplyT(func(v OperationsMonitoringProperties) *OperationsMonitoringProperties {
		return &v
	}).(OperationsMonitoringPropertiesPtrOutput)
}
func (o OperationsMonitoringPropertiesOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v OperationsMonitoringProperties) map[string]string { return v.Events }).(pulumi.StringMapOutput)
}

type OperationsMonitoringPropertiesPtrOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringProperties)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesPtrOutput) ToOperationsMonitoringPropertiesPtrOutput() OperationsMonitoringPropertiesPtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesPtrOutput) ToOperationsMonitoringPropertiesPtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesPtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesPtrOutput) Elem() OperationsMonitoringPropertiesOutput {
	return o.ApplyT(func(v *OperationsMonitoringProperties) OperationsMonitoringProperties { return *v }).(OperationsMonitoringPropertiesOutput)
}

func (o OperationsMonitoringPropertiesPtrOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperationsMonitoringProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesInvokeResponse struct {
	Events map[string]string `pulumi:"events"`
}

// OperationsMonitoringPropertiesInvokeResponseInput is an input type that accepts OperationsMonitoringPropertiesInvokeResponseArgs and OperationsMonitoringPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesInvokeResponseInput` via:
//
//          OperationsMonitoringPropertiesInvokeResponseArgs{...}
type OperationsMonitoringPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesInvokeResponseOutput() OperationsMonitoringPropertiesInvokeResponseOutput
	ToOperationsMonitoringPropertiesInvokeResponseOutputWithContext(context.Context) OperationsMonitoringPropertiesInvokeResponseOutput
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesInvokeResponseArgs struct {
	Events pulumi.StringMapInput `pulumi:"events"`
}

func (OperationsMonitoringPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringPropertiesInvokeResponse)(nil)).Elem()
}

func (i OperationsMonitoringPropertiesInvokeResponseArgs) ToOperationsMonitoringPropertiesInvokeResponseOutput() OperationsMonitoringPropertiesInvokeResponseOutput {
	return i.ToOperationsMonitoringPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesInvokeResponseArgs) ToOperationsMonitoringPropertiesInvokeResponseOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesInvokeResponseOutput)
}

func (i OperationsMonitoringPropertiesInvokeResponseArgs) ToOperationsMonitoringPropertiesInvokeResponsePtrOutput() OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return i.ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesInvokeResponseArgs) ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesInvokeResponseOutput).ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// OperationsMonitoringPropertiesInvokeResponsePtrInput is an input type that accepts OperationsMonitoringPropertiesInvokeResponseArgs, OperationsMonitoringPropertiesInvokeResponsePtr and OperationsMonitoringPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesInvokeResponsePtrInput` via:
//
//          OperationsMonitoringPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type OperationsMonitoringPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesInvokeResponsePtrOutput() OperationsMonitoringPropertiesInvokeResponsePtrOutput
	ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(context.Context) OperationsMonitoringPropertiesInvokeResponsePtrOutput
}

type operationsMonitoringPropertiesInvokeResponsePtrType OperationsMonitoringPropertiesInvokeResponseArgs

func OperationsMonitoringPropertiesInvokeResponsePtr(v *OperationsMonitoringPropertiesInvokeResponseArgs) OperationsMonitoringPropertiesInvokeResponsePtrInput {
	return (*operationsMonitoringPropertiesInvokeResponsePtrType)(v)
}

func (*operationsMonitoringPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringPropertiesInvokeResponse)(nil)).Elem()
}

func (i *operationsMonitoringPropertiesInvokeResponsePtrType) ToOperationsMonitoringPropertiesInvokeResponsePtrOutput() OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return i.ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *operationsMonitoringPropertiesInvokeResponsePtrType) ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesInvokeResponsePtrOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringPropertiesInvokeResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesInvokeResponseOutput) ToOperationsMonitoringPropertiesInvokeResponseOutput() OperationsMonitoringPropertiesInvokeResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesInvokeResponseOutput) ToOperationsMonitoringPropertiesInvokeResponseOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesInvokeResponseOutput) ToOperationsMonitoringPropertiesInvokeResponsePtrOutput() OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return o.ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o OperationsMonitoringPropertiesInvokeResponseOutput) ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v OperationsMonitoringPropertiesInvokeResponse) *OperationsMonitoringPropertiesInvokeResponse {
		return &v
	}).(OperationsMonitoringPropertiesInvokeResponsePtrOutput)
}
func (o OperationsMonitoringPropertiesInvokeResponseOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v OperationsMonitoringPropertiesInvokeResponse) map[string]string { return v.Events }).(pulumi.StringMapOutput)
}

type OperationsMonitoringPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringPropertiesInvokeResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesInvokeResponsePtrOutput) ToOperationsMonitoringPropertiesInvokeResponsePtrOutput() OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesInvokeResponsePtrOutput) ToOperationsMonitoringPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesInvokeResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesInvokeResponsePtrOutput) Elem() OperationsMonitoringPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesInvokeResponse) OperationsMonitoringPropertiesInvokeResponse {
		return *v
	}).(OperationsMonitoringPropertiesInvokeResponseOutput)
}

func (o OperationsMonitoringPropertiesInvokeResponsePtrOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringMapOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesResponse struct {
	Events map[string]string `pulumi:"events"`
}

// OperationsMonitoringPropertiesResponseInput is an input type that accepts OperationsMonitoringPropertiesResponseArgs and OperationsMonitoringPropertiesResponseOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesResponseInput` via:
//
//          OperationsMonitoringPropertiesResponseArgs{...}
type OperationsMonitoringPropertiesResponseInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesResponseOutput() OperationsMonitoringPropertiesResponseOutput
	ToOperationsMonitoringPropertiesResponseOutputWithContext(context.Context) OperationsMonitoringPropertiesResponseOutput
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesResponseArgs struct {
	Events pulumi.StringMapInput `pulumi:"events"`
}

func (OperationsMonitoringPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (i OperationsMonitoringPropertiesResponseArgs) ToOperationsMonitoringPropertiesResponseOutput() OperationsMonitoringPropertiesResponseOutput {
	return i.ToOperationsMonitoringPropertiesResponseOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesResponseArgs) ToOperationsMonitoringPropertiesResponseOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesResponseOutput)
}

func (i OperationsMonitoringPropertiesResponseArgs) ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput {
	return i.ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i OperationsMonitoringPropertiesResponseArgs) ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesResponseOutput).ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx)
}

// OperationsMonitoringPropertiesResponsePtrInput is an input type that accepts OperationsMonitoringPropertiesResponseArgs, OperationsMonitoringPropertiesResponsePtr and OperationsMonitoringPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `OperationsMonitoringPropertiesResponsePtrInput` via:
//
//          OperationsMonitoringPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type OperationsMonitoringPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput
	ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(context.Context) OperationsMonitoringPropertiesResponsePtrOutput
}

type operationsMonitoringPropertiesResponsePtrType OperationsMonitoringPropertiesResponseArgs

func OperationsMonitoringPropertiesResponsePtr(v *OperationsMonitoringPropertiesResponseArgs) OperationsMonitoringPropertiesResponsePtrInput {
	return (*operationsMonitoringPropertiesResponsePtrType)(v)
}

func (*operationsMonitoringPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (i *operationsMonitoringPropertiesResponsePtrType) ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput {
	return i.ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *operationsMonitoringPropertiesResponsePtrType) ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationsMonitoringPropertiesResponsePtrOutput)
}

// The operations monitoring properties for the IoT hub. The possible keys to the dictionary are Connections, DeviceTelemetry, C2DCommands, DeviceIdentityOperations, FileUploadOperations, Routes, D2CTwinOperations, C2DTwinOperations, TwinQueries, JobsOperations, DirectMethods.
type OperationsMonitoringPropertiesResponseOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponseOutput() OperationsMonitoringPropertiesResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponseOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponseOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput {
	return o.ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o OperationsMonitoringPropertiesResponseOutput) ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponsePtrOutput {
	return o.ApplyT(func(v OperationsMonitoringPropertiesResponse) *OperationsMonitoringPropertiesResponse {
		return &v
	}).(OperationsMonitoringPropertiesResponsePtrOutput)
}
func (o OperationsMonitoringPropertiesResponseOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v OperationsMonitoringPropertiesResponse) map[string]string { return v.Events }).(pulumi.StringMapOutput)
}

type OperationsMonitoringPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (OperationsMonitoringPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperationsMonitoringPropertiesResponse)(nil)).Elem()
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) ToOperationsMonitoringPropertiesResponsePtrOutput() OperationsMonitoringPropertiesResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) ToOperationsMonitoringPropertiesResponsePtrOutputWithContext(ctx context.Context) OperationsMonitoringPropertiesResponsePtrOutput {
	return o
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) Elem() OperationsMonitoringPropertiesResponseOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesResponse) OperationsMonitoringPropertiesResponse { return *v }).(OperationsMonitoringPropertiesResponseOutput)
}

func (o OperationsMonitoringPropertiesResponsePtrOutput) Events() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OperationsMonitoringPropertiesResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringMapOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RouteProperties struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source string `pulumi:"source"`
}

// RoutePropertiesInput is an input type that accepts RoutePropertiesArgs and RoutePropertiesOutput values.
// You can construct a concrete instance of `RoutePropertiesInput` via:
//
//          RoutePropertiesArgs{...}
type RoutePropertiesInput interface {
	pulumi.Input

	ToRoutePropertiesOutput() RoutePropertiesOutput
	ToRoutePropertiesOutputWithContext(context.Context) RoutePropertiesOutput
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source pulumi.StringInput `pulumi:"source"`
}

func (RoutePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteProperties)(nil)).Elem()
}

func (i RoutePropertiesArgs) ToRoutePropertiesOutput() RoutePropertiesOutput {
	return i.ToRoutePropertiesOutputWithContext(context.Background())
}

func (i RoutePropertiesArgs) ToRoutePropertiesOutputWithContext(ctx context.Context) RoutePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesOutput)
}

// RoutePropertiesArrayInput is an input type that accepts RoutePropertiesArray and RoutePropertiesArrayOutput values.
// You can construct a concrete instance of `RoutePropertiesArrayInput` via:
//
//          RoutePropertiesArray{ RoutePropertiesArgs{...} }
type RoutePropertiesArrayInput interface {
	pulumi.Input

	ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput
	ToRoutePropertiesArrayOutputWithContext(context.Context) RoutePropertiesArrayOutput
}

type RoutePropertiesArray []RoutePropertiesInput

func (RoutePropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteProperties)(nil)).Elem()
}

func (i RoutePropertiesArray) ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput {
	return i.ToRoutePropertiesArrayOutputWithContext(context.Background())
}

func (i RoutePropertiesArray) ToRoutePropertiesArrayOutputWithContext(ctx context.Context) RoutePropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesArrayOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesOutput struct{ *pulumi.OutputState }

func (RoutePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteProperties)(nil)).Elem()
}

func (o RoutePropertiesOutput) ToRoutePropertiesOutput() RoutePropertiesOutput {
	return o
}

func (o RoutePropertiesOutput) ToRoutePropertiesOutputWithContext(ctx context.Context) RoutePropertiesOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o RoutePropertiesOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteProperties) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
func (o RoutePropertiesOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteProperties) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether a route is enabled.
func (o RoutePropertiesOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RouteProperties) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o RoutePropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as DeviceMessages.
func (o RoutePropertiesOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RouteProperties) string { return v.Source }).(pulumi.StringOutput)
}

type RoutePropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutePropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteProperties)(nil)).Elem()
}

func (o RoutePropertiesArrayOutput) ToRoutePropertiesArrayOutput() RoutePropertiesArrayOutput {
	return o
}

func (o RoutePropertiesArrayOutput) ToRoutePropertiesArrayOutputWithContext(ctx context.Context) RoutePropertiesArrayOutput {
	return o
}

func (o RoutePropertiesArrayOutput) Index(i pulumi.IntInput) RoutePropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteProperties {
		return vs[0].([]RouteProperties)[vs[1].(int)]
	}).(RoutePropertiesOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesInvokeResponse struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source string `pulumi:"source"`
}

// RoutePropertiesInvokeResponseInput is an input type that accepts RoutePropertiesInvokeResponseArgs and RoutePropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutePropertiesInvokeResponseInput` via:
//
//          RoutePropertiesInvokeResponseArgs{...}
type RoutePropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutePropertiesInvokeResponseOutput() RoutePropertiesInvokeResponseOutput
	ToRoutePropertiesInvokeResponseOutputWithContext(context.Context) RoutePropertiesInvokeResponseOutput
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesInvokeResponseArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source pulumi.StringInput `pulumi:"source"`
}

func (RoutePropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutePropertiesInvokeResponseArgs) ToRoutePropertiesInvokeResponseOutput() RoutePropertiesInvokeResponseOutput {
	return i.ToRoutePropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutePropertiesInvokeResponseArgs) ToRoutePropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutePropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesInvokeResponseOutput)
}

// RoutePropertiesInvokeResponseArrayInput is an input type that accepts RoutePropertiesInvokeResponseArray and RoutePropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RoutePropertiesInvokeResponseArrayInput` via:
//
//          RoutePropertiesInvokeResponseArray{ RoutePropertiesInvokeResponseArgs{...} }
type RoutePropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToRoutePropertiesInvokeResponseArrayOutput() RoutePropertiesInvokeResponseArrayOutput
	ToRoutePropertiesInvokeResponseArrayOutputWithContext(context.Context) RoutePropertiesInvokeResponseArrayOutput
}

type RoutePropertiesInvokeResponseArray []RoutePropertiesInvokeResponseInput

func (RoutePropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutePropertiesInvokeResponseArray) ToRoutePropertiesInvokeResponseArrayOutput() RoutePropertiesInvokeResponseArrayOutput {
	return i.ToRoutePropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RoutePropertiesInvokeResponseArray) ToRoutePropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutePropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesInvokeResponseArrayOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutePropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutePropertiesInvokeResponseOutput) ToRoutePropertiesInvokeResponseOutput() RoutePropertiesInvokeResponseOutput {
	return o
}

func (o RoutePropertiesInvokeResponseOutput) ToRoutePropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutePropertiesInvokeResponseOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o RoutePropertiesInvokeResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesInvokeResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
func (o RoutePropertiesInvokeResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutePropertiesInvokeResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether a route is enabled.
func (o RoutePropertiesInvokeResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RoutePropertiesInvokeResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o RoutePropertiesInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as DeviceMessages.
func (o RoutePropertiesInvokeResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesInvokeResponse) string { return v.Source }).(pulumi.StringOutput)
}

type RoutePropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutePropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutePropertiesInvokeResponseArrayOutput) ToRoutePropertiesInvokeResponseArrayOutput() RoutePropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutePropertiesInvokeResponseArrayOutput) ToRoutePropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutePropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutePropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) RoutePropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutePropertiesInvokeResponse {
		return vs[0].([]RoutePropertiesInvokeResponse)[vs[1].(int)]
	}).(RoutePropertiesInvokeResponseOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesResponse struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition *string `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source string `pulumi:"source"`
}

// RoutePropertiesResponseInput is an input type that accepts RoutePropertiesResponseArgs and RoutePropertiesResponseOutput values.
// You can construct a concrete instance of `RoutePropertiesResponseInput` via:
//
//          RoutePropertiesResponseArgs{...}
type RoutePropertiesResponseInput interface {
	pulumi.Input

	ToRoutePropertiesResponseOutput() RoutePropertiesResponseOutput
	ToRoutePropertiesResponseOutputWithContext(context.Context) RoutePropertiesResponseOutput
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesResponseArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// Used to specify whether a route is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as DeviceMessages.
	Source pulumi.StringInput `pulumi:"source"`
}

func (RoutePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesResponse)(nil)).Elem()
}

func (i RoutePropertiesResponseArgs) ToRoutePropertiesResponseOutput() RoutePropertiesResponseOutput {
	return i.ToRoutePropertiesResponseOutputWithContext(context.Background())
}

func (i RoutePropertiesResponseArgs) ToRoutePropertiesResponseOutputWithContext(ctx context.Context) RoutePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesResponseOutput)
}

// RoutePropertiesResponseArrayInput is an input type that accepts RoutePropertiesResponseArray and RoutePropertiesResponseArrayOutput values.
// You can construct a concrete instance of `RoutePropertiesResponseArrayInput` via:
//
//          RoutePropertiesResponseArray{ RoutePropertiesResponseArgs{...} }
type RoutePropertiesResponseArrayInput interface {
	pulumi.Input

	ToRoutePropertiesResponseArrayOutput() RoutePropertiesResponseArrayOutput
	ToRoutePropertiesResponseArrayOutputWithContext(context.Context) RoutePropertiesResponseArrayOutput
}

type RoutePropertiesResponseArray []RoutePropertiesResponseInput

func (RoutePropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePropertiesResponse)(nil)).Elem()
}

func (i RoutePropertiesResponseArray) ToRoutePropertiesResponseArrayOutput() RoutePropertiesResponseArrayOutput {
	return i.ToRoutePropertiesResponseArrayOutputWithContext(context.Background())
}

func (i RoutePropertiesResponseArray) ToRoutePropertiesResponseArrayOutputWithContext(ctx context.Context) RoutePropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutePropertiesResponseArrayOutput)
}

// The properties of a routing rule that your IoT hub uses to route messages to endpoints.
type RoutePropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutePropertiesResponse)(nil)).Elem()
}

func (o RoutePropertiesResponseOutput) ToRoutePropertiesResponseOutput() RoutePropertiesResponseOutput {
	return o
}

func (o RoutePropertiesResponseOutput) ToRoutePropertiesResponseOutputWithContext(ctx context.Context) RoutePropertiesResponseOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
func (o RoutePropertiesResponseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
func (o RoutePropertiesResponseOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// Used to specify whether a route is enabled.
func (o RoutePropertiesResponseOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
func (o RoutePropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as DeviceMessages.
func (o RoutePropertiesResponseOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v RoutePropertiesResponse) string { return v.Source }).(pulumi.StringOutput)
}

type RoutePropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutePropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutePropertiesResponse)(nil)).Elem()
}

func (o RoutePropertiesResponseArrayOutput) ToRoutePropertiesResponseArrayOutput() RoutePropertiesResponseArrayOutput {
	return o
}

func (o RoutePropertiesResponseArrayOutput) ToRoutePropertiesResponseArrayOutputWithContext(ctx context.Context) RoutePropertiesResponseArrayOutput {
	return o
}

func (o RoutePropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutePropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutePropertiesResponse {
		return vs[0].([]RoutePropertiesResponse)[vs[1].(int)]
	}).(RoutePropertiesResponseOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpoints struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs []RoutingEventHubProperties `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues []RoutingServiceBusQueueEndpointProperties `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics []RoutingServiceBusTopicEndpointProperties `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers []RoutingStorageContainerProperties `pulumi:"storageContainers"`
}

// RoutingEndpointsInput is an input type that accepts RoutingEndpointsArgs and RoutingEndpointsOutput values.
// You can construct a concrete instance of `RoutingEndpointsInput` via:
//
//          RoutingEndpointsArgs{...}
type RoutingEndpointsInput interface {
	pulumi.Input

	ToRoutingEndpointsOutput() RoutingEndpointsOutput
	ToRoutingEndpointsOutputWithContext(context.Context) RoutingEndpointsOutput
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsArgs struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs RoutingEventHubPropertiesArrayInput `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues RoutingServiceBusQueueEndpointPropertiesArrayInput `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics RoutingServiceBusTopicEndpointPropertiesArrayInput `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers RoutingStorageContainerPropertiesArrayInput `pulumi:"storageContainers"`
}

func (RoutingEndpointsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpoints)(nil)).Elem()
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsOutput() RoutingEndpointsOutput {
	return i.ToRoutingEndpointsOutputWithContext(context.Background())
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsOutputWithContext(ctx context.Context) RoutingEndpointsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsOutput)
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return i.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (i RoutingEndpointsArgs) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsOutput).ToRoutingEndpointsPtrOutputWithContext(ctx)
}

// RoutingEndpointsPtrInput is an input type that accepts RoutingEndpointsArgs, RoutingEndpointsPtr and RoutingEndpointsPtrOutput values.
// You can construct a concrete instance of `RoutingEndpointsPtrInput` via:
//
//          RoutingEndpointsArgs{...}
//
//  or:
//
//          nil
type RoutingEndpointsPtrInput interface {
	pulumi.Input

	ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput
	ToRoutingEndpointsPtrOutputWithContext(context.Context) RoutingEndpointsPtrOutput
}

type routingEndpointsPtrType RoutingEndpointsArgs

func RoutingEndpointsPtr(v *RoutingEndpointsArgs) RoutingEndpointsPtrInput {
	return (*routingEndpointsPtrType)(v)
}

func (*routingEndpointsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpoints)(nil)).Elem()
}

func (i *routingEndpointsPtrType) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return i.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (i *routingEndpointsPtrType) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsPtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpoints)(nil)).Elem()
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsOutput() RoutingEndpointsOutput {
	return o
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsOutputWithContext(ctx context.Context) RoutingEndpointsOutput {
	return o
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return o.ToRoutingEndpointsPtrOutputWithContext(context.Background())
}

func (o RoutingEndpointsOutput) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return o.ApplyT(func(v RoutingEndpoints) *RoutingEndpoints {
		return &v
	}).(RoutingEndpointsPtrOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsOutput) EventHubs() RoutingEventHubPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingEventHubProperties { return v.EventHubs }).(RoutingEventHubPropertiesArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingServiceBusQueueEndpointProperties { return v.ServiceBusQueues }).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingServiceBusTopicEndpointProperties { return v.ServiceBusTopics }).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsOutput) StorageContainers() RoutingStorageContainerPropertiesArrayOutput {
	return o.ApplyT(func(v RoutingEndpoints) []RoutingStorageContainerProperties { return v.StorageContainers }).(RoutingStorageContainerPropertiesArrayOutput)
}

type RoutingEndpointsPtrOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpoints)(nil)).Elem()
}

func (o RoutingEndpointsPtrOutput) ToRoutingEndpointsPtrOutput() RoutingEndpointsPtrOutput {
	return o
}

func (o RoutingEndpointsPtrOutput) ToRoutingEndpointsPtrOutputWithContext(ctx context.Context) RoutingEndpointsPtrOutput {
	return o
}

func (o RoutingEndpointsPtrOutput) Elem() RoutingEndpointsOutput {
	return o.ApplyT(func(v *RoutingEndpoints) RoutingEndpoints { return *v }).(RoutingEndpointsOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsPtrOutput) EventHubs() RoutingEventHubPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingEventHubProperties {
		if v == nil {
			return nil
		}
		return v.EventHubs
	}).(RoutingEventHubPropertiesArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsPtrOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingServiceBusQueueEndpointProperties {
		if v == nil {
			return nil
		}
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsPtrOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingServiceBusTopicEndpointProperties {
		if v == nil {
			return nil
		}
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsPtrOutput) StorageContainers() RoutingStorageContainerPropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingEndpoints) []RoutingStorageContainerProperties {
		if v == nil {
			return nil
		}
		return v.StorageContainers
	}).(RoutingStorageContainerPropertiesArrayOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsInvokeResponse struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs []RoutingEventHubPropertiesInvokeResponse `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues []RoutingServiceBusQueueEndpointPropertiesInvokeResponse `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics []RoutingServiceBusTopicEndpointPropertiesInvokeResponse `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers []RoutingStorageContainerPropertiesInvokeResponse `pulumi:"storageContainers"`
}

// RoutingEndpointsInvokeResponseInput is an input type that accepts RoutingEndpointsInvokeResponseArgs and RoutingEndpointsInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingEndpointsInvokeResponseInput` via:
//
//          RoutingEndpointsInvokeResponseArgs{...}
type RoutingEndpointsInvokeResponseInput interface {
	pulumi.Input

	ToRoutingEndpointsInvokeResponseOutput() RoutingEndpointsInvokeResponseOutput
	ToRoutingEndpointsInvokeResponseOutputWithContext(context.Context) RoutingEndpointsInvokeResponseOutput
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsInvokeResponseArgs struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs RoutingEventHubPropertiesInvokeResponseArrayInput `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayInput `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayInput `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers RoutingStorageContainerPropertiesInvokeResponseArrayInput `pulumi:"storageContainers"`
}

func (RoutingEndpointsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpointsInvokeResponse)(nil)).Elem()
}

func (i RoutingEndpointsInvokeResponseArgs) ToRoutingEndpointsInvokeResponseOutput() RoutingEndpointsInvokeResponseOutput {
	return i.ToRoutingEndpointsInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingEndpointsInvokeResponseArgs) ToRoutingEndpointsInvokeResponseOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsInvokeResponseOutput)
}

func (i RoutingEndpointsInvokeResponseArgs) ToRoutingEndpointsInvokeResponsePtrOutput() RoutingEndpointsInvokeResponsePtrOutput {
	return i.ToRoutingEndpointsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RoutingEndpointsInvokeResponseArgs) ToRoutingEndpointsInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsInvokeResponseOutput).ToRoutingEndpointsInvokeResponsePtrOutputWithContext(ctx)
}

// RoutingEndpointsInvokeResponsePtrInput is an input type that accepts RoutingEndpointsInvokeResponseArgs, RoutingEndpointsInvokeResponsePtr and RoutingEndpointsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RoutingEndpointsInvokeResponsePtrInput` via:
//
//          RoutingEndpointsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RoutingEndpointsInvokeResponsePtrInput interface {
	pulumi.Input

	ToRoutingEndpointsInvokeResponsePtrOutput() RoutingEndpointsInvokeResponsePtrOutput
	ToRoutingEndpointsInvokeResponsePtrOutputWithContext(context.Context) RoutingEndpointsInvokeResponsePtrOutput
}

type routingEndpointsInvokeResponsePtrType RoutingEndpointsInvokeResponseArgs

func RoutingEndpointsInvokeResponsePtr(v *RoutingEndpointsInvokeResponseArgs) RoutingEndpointsInvokeResponsePtrInput {
	return (*routingEndpointsInvokeResponsePtrType)(v)
}

func (*routingEndpointsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpointsInvokeResponse)(nil)).Elem()
}

func (i *routingEndpointsInvokeResponsePtrType) ToRoutingEndpointsInvokeResponsePtrOutput() RoutingEndpointsInvokeResponsePtrOutput {
	return i.ToRoutingEndpointsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *routingEndpointsInvokeResponsePtrType) ToRoutingEndpointsInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsInvokeResponsePtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpointsInvokeResponse)(nil)).Elem()
}

func (o RoutingEndpointsInvokeResponseOutput) ToRoutingEndpointsInvokeResponseOutput() RoutingEndpointsInvokeResponseOutput {
	return o
}

func (o RoutingEndpointsInvokeResponseOutput) ToRoutingEndpointsInvokeResponseOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponseOutput {
	return o
}

func (o RoutingEndpointsInvokeResponseOutput) ToRoutingEndpointsInvokeResponsePtrOutput() RoutingEndpointsInvokeResponsePtrOutput {
	return o.ToRoutingEndpointsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RoutingEndpointsInvokeResponseOutput) ToRoutingEndpointsInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponsePtrOutput {
	return o.ApplyT(func(v RoutingEndpointsInvokeResponse) *RoutingEndpointsInvokeResponse {
		return &v
	}).(RoutingEndpointsInvokeResponsePtrOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsInvokeResponseOutput) EventHubs() RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsInvokeResponse) []RoutingEventHubPropertiesInvokeResponse { return v.EventHubs }).(RoutingEventHubPropertiesInvokeResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponseOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsInvokeResponse) []RoutingServiceBusQueueEndpointPropertiesInvokeResponse {
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponseOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsInvokeResponse) []RoutingServiceBusTopicEndpointPropertiesInvokeResponse {
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponseOutput) StorageContainers() RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsInvokeResponse) []RoutingStorageContainerPropertiesInvokeResponse {
		return v.StorageContainers
	}).(RoutingStorageContainerPropertiesInvokeResponseArrayOutput)
}

type RoutingEndpointsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpointsInvokeResponse)(nil)).Elem()
}

func (o RoutingEndpointsInvokeResponsePtrOutput) ToRoutingEndpointsInvokeResponsePtrOutput() RoutingEndpointsInvokeResponsePtrOutput {
	return o
}

func (o RoutingEndpointsInvokeResponsePtrOutput) ToRoutingEndpointsInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsInvokeResponsePtrOutput {
	return o
}

func (o RoutingEndpointsInvokeResponsePtrOutput) Elem() RoutingEndpointsInvokeResponseOutput {
	return o.ApplyT(func(v *RoutingEndpointsInvokeResponse) RoutingEndpointsInvokeResponse { return *v }).(RoutingEndpointsInvokeResponseOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsInvokeResponsePtrOutput) EventHubs() RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsInvokeResponse) []RoutingEventHubPropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.EventHubs
	}).(RoutingEventHubPropertiesInvokeResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponsePtrOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsInvokeResponse) []RoutingServiceBusQueueEndpointPropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponsePtrOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsInvokeResponse) []RoutingServiceBusTopicEndpointPropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsInvokeResponsePtrOutput) StorageContainers() RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsInvokeResponse) []RoutingStorageContainerPropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.StorageContainers
	}).(RoutingStorageContainerPropertiesInvokeResponseArrayOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsResponse struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs []RoutingEventHubPropertiesResponse `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues []RoutingServiceBusQueueEndpointPropertiesResponse `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics []RoutingServiceBusTopicEndpointPropertiesResponse `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers []RoutingStorageContainerPropertiesResponse `pulumi:"storageContainers"`
}

// RoutingEndpointsResponseInput is an input type that accepts RoutingEndpointsResponseArgs and RoutingEndpointsResponseOutput values.
// You can construct a concrete instance of `RoutingEndpointsResponseInput` via:
//
//          RoutingEndpointsResponseArgs{...}
type RoutingEndpointsResponseInput interface {
	pulumi.Input

	ToRoutingEndpointsResponseOutput() RoutingEndpointsResponseOutput
	ToRoutingEndpointsResponseOutputWithContext(context.Context) RoutingEndpointsResponseOutput
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsResponseArgs struct {
	// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
	EventHubs RoutingEventHubPropertiesResponseArrayInput `pulumi:"eventHubs"`
	// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
	ServiceBusQueues RoutingServiceBusQueueEndpointPropertiesResponseArrayInput `pulumi:"serviceBusQueues"`
	// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
	ServiceBusTopics RoutingServiceBusTopicEndpointPropertiesResponseArrayInput `pulumi:"serviceBusTopics"`
	// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
	StorageContainers RoutingStorageContainerPropertiesResponseArrayInput `pulumi:"storageContainers"`
}

func (RoutingEndpointsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpointsResponse)(nil)).Elem()
}

func (i RoutingEndpointsResponseArgs) ToRoutingEndpointsResponseOutput() RoutingEndpointsResponseOutput {
	return i.ToRoutingEndpointsResponseOutputWithContext(context.Background())
}

func (i RoutingEndpointsResponseArgs) ToRoutingEndpointsResponseOutputWithContext(ctx context.Context) RoutingEndpointsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsResponseOutput)
}

func (i RoutingEndpointsResponseArgs) ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput {
	return i.ToRoutingEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i RoutingEndpointsResponseArgs) ToRoutingEndpointsResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsResponseOutput).ToRoutingEndpointsResponsePtrOutputWithContext(ctx)
}

// RoutingEndpointsResponsePtrInput is an input type that accepts RoutingEndpointsResponseArgs, RoutingEndpointsResponsePtr and RoutingEndpointsResponsePtrOutput values.
// You can construct a concrete instance of `RoutingEndpointsResponsePtrInput` via:
//
//          RoutingEndpointsResponseArgs{...}
//
//  or:
//
//          nil
type RoutingEndpointsResponsePtrInput interface {
	pulumi.Input

	ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput
	ToRoutingEndpointsResponsePtrOutputWithContext(context.Context) RoutingEndpointsResponsePtrOutput
}

type routingEndpointsResponsePtrType RoutingEndpointsResponseArgs

func RoutingEndpointsResponsePtr(v *RoutingEndpointsResponseArgs) RoutingEndpointsResponsePtrInput {
	return (*routingEndpointsResponsePtrType)(v)
}

func (*routingEndpointsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpointsResponse)(nil)).Elem()
}

func (i *routingEndpointsResponsePtrType) ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput {
	return i.ToRoutingEndpointsResponsePtrOutputWithContext(context.Background())
}

func (i *routingEndpointsResponsePtrType) ToRoutingEndpointsResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEndpointsResponsePtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
type RoutingEndpointsResponseOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEndpointsResponse)(nil)).Elem()
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponseOutput() RoutingEndpointsResponseOutput {
	return o
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponseOutputWithContext(ctx context.Context) RoutingEndpointsResponseOutput {
	return o
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput {
	return o.ToRoutingEndpointsResponsePtrOutputWithContext(context.Background())
}

func (o RoutingEndpointsResponseOutput) ToRoutingEndpointsResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) *RoutingEndpointsResponse {
		return &v
	}).(RoutingEndpointsResponsePtrOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsResponseOutput) EventHubs() RoutingEventHubPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingEventHubPropertiesResponse { return v.EventHubs }).(RoutingEventHubPropertiesResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponseOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingServiceBusQueueEndpointPropertiesResponse {
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponseOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingServiceBusTopicEndpointPropertiesResponse {
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsResponseOutput) StorageContainers() RoutingStorageContainerPropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingEndpointsResponse) []RoutingStorageContainerPropertiesResponse {
		return v.StorageContainers
	}).(RoutingStorageContainerPropertiesResponseArrayOutput)
}

type RoutingEndpointsResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingEndpointsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingEndpointsResponse)(nil)).Elem()
}

func (o RoutingEndpointsResponsePtrOutput) ToRoutingEndpointsResponsePtrOutput() RoutingEndpointsResponsePtrOutput {
	return o
}

func (o RoutingEndpointsResponsePtrOutput) ToRoutingEndpointsResponsePtrOutputWithContext(ctx context.Context) RoutingEndpointsResponsePtrOutput {
	return o
}

func (o RoutingEndpointsResponsePtrOutput) Elem() RoutingEndpointsResponseOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) RoutingEndpointsResponse { return *v }).(RoutingEndpointsResponseOutput)
}

// The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
func (o RoutingEndpointsResponsePtrOutput) EventHubs() RoutingEventHubPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingEventHubPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.EventHubs
	}).(RoutingEventHubPropertiesResponseArrayOutput)
}

// The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponsePtrOutput) ServiceBusQueues() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingServiceBusQueueEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusQueues
	}).(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput)
}

// The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
func (o RoutingEndpointsResponsePtrOutput) ServiceBusTopics() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingServiceBusTopicEndpointPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.ServiceBusTopics
	}).(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput)
}

// The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
func (o RoutingEndpointsResponsePtrOutput) StorageContainers() RoutingStorageContainerPropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingEndpointsResponse) []RoutingStorageContainerPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.StorageContainers
	}).(RoutingStorageContainerPropertiesResponseArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubProperties struct {
	// The connection string of the event hub endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingEventHubPropertiesInput is an input type that accepts RoutingEventHubPropertiesArgs and RoutingEventHubPropertiesOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesInput` via:
//
//          RoutingEventHubPropertiesArgs{...}
type RoutingEventHubPropertiesInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput
	ToRoutingEventHubPropertiesOutputWithContext(context.Context) RoutingEventHubPropertiesOutput
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesArgs struct {
	// The connection string of the event hub endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingEventHubPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubProperties)(nil)).Elem()
}

func (i RoutingEventHubPropertiesArgs) ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput {
	return i.ToRoutingEventHubPropertiesOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesArgs) ToRoutingEventHubPropertiesOutputWithContext(ctx context.Context) RoutingEventHubPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesOutput)
}

// RoutingEventHubPropertiesArrayInput is an input type that accepts RoutingEventHubPropertiesArray and RoutingEventHubPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesArrayInput` via:
//
//          RoutingEventHubPropertiesArray{ RoutingEventHubPropertiesArgs{...} }
type RoutingEventHubPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput
	ToRoutingEventHubPropertiesArrayOutputWithContext(context.Context) RoutingEventHubPropertiesArrayOutput
}

type RoutingEventHubPropertiesArray []RoutingEventHubPropertiesInput

func (RoutingEventHubPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubProperties)(nil)).Elem()
}

func (i RoutingEventHubPropertiesArray) ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput {
	return i.ToRoutingEventHubPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesArray) ToRoutingEventHubPropertiesArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubProperties)(nil)).Elem()
}

func (o RoutingEventHubPropertiesOutput) ToRoutingEventHubPropertiesOutput() RoutingEventHubPropertiesOutput {
	return o
}

func (o RoutingEventHubPropertiesOutput) ToRoutingEventHubPropertiesOutputWithContext(ctx context.Context) RoutingEventHubPropertiesOutput {
	return o
}

// The connection string of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingEventHubPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the event hub endpoint.
func (o RoutingEventHubPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingEventHubPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubProperties)(nil)).Elem()
}

func (o RoutingEventHubPropertiesArrayOutput) ToRoutingEventHubPropertiesArrayOutput() RoutingEventHubPropertiesArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesArrayOutput) ToRoutingEventHubPropertiesArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingEventHubPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingEventHubProperties {
		return vs[0].([]RoutingEventHubProperties)[vs[1].(int)]
	}).(RoutingEventHubPropertiesOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesInvokeResponse struct {
	// The connection string of the event hub endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingEventHubPropertiesInvokeResponseInput is an input type that accepts RoutingEventHubPropertiesInvokeResponseArgs and RoutingEventHubPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesInvokeResponseInput` via:
//
//          RoutingEventHubPropertiesInvokeResponseArgs{...}
type RoutingEventHubPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesInvokeResponseOutput() RoutingEventHubPropertiesInvokeResponseOutput
	ToRoutingEventHubPropertiesInvokeResponseOutputWithContext(context.Context) RoutingEventHubPropertiesInvokeResponseOutput
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesInvokeResponseArgs struct {
	// The connection string of the event hub endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingEventHubPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingEventHubPropertiesInvokeResponseArgs) ToRoutingEventHubPropertiesInvokeResponseOutput() RoutingEventHubPropertiesInvokeResponseOutput {
	return i.ToRoutingEventHubPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesInvokeResponseArgs) ToRoutingEventHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingEventHubPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesInvokeResponseOutput)
}

// RoutingEventHubPropertiesInvokeResponseArrayInput is an input type that accepts RoutingEventHubPropertiesInvokeResponseArray and RoutingEventHubPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesInvokeResponseArrayInput` via:
//
//          RoutingEventHubPropertiesInvokeResponseArray{ RoutingEventHubPropertiesInvokeResponseArgs{...} }
type RoutingEventHubPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesInvokeResponseArrayOutput() RoutingEventHubPropertiesInvokeResponseArrayOutput
	ToRoutingEventHubPropertiesInvokeResponseArrayOutputWithContext(context.Context) RoutingEventHubPropertiesInvokeResponseArrayOutput
}

type RoutingEventHubPropertiesInvokeResponseArray []RoutingEventHubPropertiesInvokeResponseInput

func (RoutingEventHubPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingEventHubPropertiesInvokeResponseArray) ToRoutingEventHubPropertiesInvokeResponseArrayOutput() RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return i.ToRoutingEventHubPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesInvokeResponseArray) ToRoutingEventHubPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesInvokeResponseArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesInvokeResponseOutput) ToRoutingEventHubPropertiesInvokeResponseOutput() RoutingEventHubPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingEventHubPropertiesInvokeResponseOutput) ToRoutingEventHubPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingEventHubPropertiesInvokeResponseOutput {
	return o
}

// The connection string of the event hub endpoint.
func (o RoutingEventHubPropertiesInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingEventHubPropertiesInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the event hub endpoint.
func (o RoutingEventHubPropertiesInvokeResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesInvokeResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the event hub endpoint.
func (o RoutingEventHubPropertiesInvokeResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesInvokeResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingEventHubPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesInvokeResponseArrayOutput) ToRoutingEventHubPropertiesInvokeResponseArrayOutput() RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesInvokeResponseArrayOutput) ToRoutingEventHubPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) RoutingEventHubPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingEventHubPropertiesInvokeResponse {
		return vs[0].([]RoutingEventHubPropertiesInvokeResponse)[vs[1].(int)]
	}).(RoutingEventHubPropertiesInvokeResponseOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesResponse struct {
	// The connection string of the event hub endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingEventHubPropertiesResponseInput is an input type that accepts RoutingEventHubPropertiesResponseArgs and RoutingEventHubPropertiesResponseOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesResponseInput` via:
//
//          RoutingEventHubPropertiesResponseArgs{...}
type RoutingEventHubPropertiesResponseInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesResponseOutput() RoutingEventHubPropertiesResponseOutput
	ToRoutingEventHubPropertiesResponseOutputWithContext(context.Context) RoutingEventHubPropertiesResponseOutput
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesResponseArgs struct {
	// The connection string of the event hub endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the event hub endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the event hub endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingEventHubPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (i RoutingEventHubPropertiesResponseArgs) ToRoutingEventHubPropertiesResponseOutput() RoutingEventHubPropertiesResponseOutput {
	return i.ToRoutingEventHubPropertiesResponseOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesResponseArgs) ToRoutingEventHubPropertiesResponseOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesResponseOutput)
}

// RoutingEventHubPropertiesResponseArrayInput is an input type that accepts RoutingEventHubPropertiesResponseArray and RoutingEventHubPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `RoutingEventHubPropertiesResponseArrayInput` via:
//
//          RoutingEventHubPropertiesResponseArray{ RoutingEventHubPropertiesResponseArgs{...} }
type RoutingEventHubPropertiesResponseArrayInput interface {
	pulumi.Input

	ToRoutingEventHubPropertiesResponseArrayOutput() RoutingEventHubPropertiesResponseArrayOutput
	ToRoutingEventHubPropertiesResponseArrayOutputWithContext(context.Context) RoutingEventHubPropertiesResponseArrayOutput
}

type RoutingEventHubPropertiesResponseArray []RoutingEventHubPropertiesResponseInput

func (RoutingEventHubPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (i RoutingEventHubPropertiesResponseArray) ToRoutingEventHubPropertiesResponseArrayOutput() RoutingEventHubPropertiesResponseArrayOutput {
	return i.ToRoutingEventHubPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i RoutingEventHubPropertiesResponseArray) ToRoutingEventHubPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingEventHubPropertiesResponseArrayOutput)
}

// The properties related to an event hub endpoint.
type RoutingEventHubPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesResponseOutput) ToRoutingEventHubPropertiesResponseOutput() RoutingEventHubPropertiesResponseOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseOutput) ToRoutingEventHubPropertiesResponseOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseOutput {
	return o
}

// The connection string of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingEventHubPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the event hub endpoint.
func (o RoutingEventHubPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingEventHubPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingEventHubPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingEventHubPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingEventHubPropertiesResponse)(nil)).Elem()
}

func (o RoutingEventHubPropertiesResponseArrayOutput) ToRoutingEventHubPropertiesResponseArrayOutput() RoutingEventHubPropertiesResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseArrayOutput) ToRoutingEventHubPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingEventHubPropertiesResponseArrayOutput {
	return o
}

func (o RoutingEventHubPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingEventHubPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingEventHubPropertiesResponse {
		return vs[0].([]RoutingEventHubPropertiesResponse)[vs[1].(int)]
	}).(RoutingEventHubPropertiesResponseOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingProperties struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints *RoutingEndpoints `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute *FallbackRouteProperties `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes []RouteProperties `pulumi:"routes"`
}

// RoutingPropertiesInput is an input type that accepts RoutingPropertiesArgs and RoutingPropertiesOutput values.
// You can construct a concrete instance of `RoutingPropertiesInput` via:
//
//          RoutingPropertiesArgs{...}
type RoutingPropertiesInput interface {
	pulumi.Input

	ToRoutingPropertiesOutput() RoutingPropertiesOutput
	ToRoutingPropertiesOutputWithContext(context.Context) RoutingPropertiesOutput
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesArgs struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints RoutingEndpointsPtrInput `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute FallbackRoutePropertiesPtrInput `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes RoutePropertiesArrayInput `pulumi:"routes"`
}

func (RoutingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProperties)(nil)).Elem()
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesOutput() RoutingPropertiesOutput {
	return i.ToRoutingPropertiesOutputWithContext(context.Background())
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesOutputWithContext(ctx context.Context) RoutingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesOutput)
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return i.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (i RoutingPropertiesArgs) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesOutput).ToRoutingPropertiesPtrOutputWithContext(ctx)
}

// RoutingPropertiesPtrInput is an input type that accepts RoutingPropertiesArgs, RoutingPropertiesPtr and RoutingPropertiesPtrOutput values.
// You can construct a concrete instance of `RoutingPropertiesPtrInput` via:
//
//          RoutingPropertiesArgs{...}
//
//  or:
//
//          nil
type RoutingPropertiesPtrInput interface {
	pulumi.Input

	ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput
	ToRoutingPropertiesPtrOutputWithContext(context.Context) RoutingPropertiesPtrOutput
}

type routingPropertiesPtrType RoutingPropertiesArgs

func RoutingPropertiesPtr(v *RoutingPropertiesArgs) RoutingPropertiesPtrInput {
	return (*routingPropertiesPtrType)(v)
}

func (*routingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProperties)(nil)).Elem()
}

func (i *routingPropertiesPtrType) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return i.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (i *routingPropertiesPtrType) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesPtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingProperties)(nil)).Elem()
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesOutput() RoutingPropertiesOutput {
	return o
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesOutputWithContext(ctx context.Context) RoutingPropertiesOutput {
	return o
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return o.ToRoutingPropertiesPtrOutputWithContext(context.Background())
}

func (o RoutingPropertiesOutput) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return o.ApplyT(func(v RoutingProperties) *RoutingProperties {
		return &v
	}).(RoutingPropertiesPtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesOutput) Endpoints() RoutingEndpointsPtrOutput {
	return o.ApplyT(func(v RoutingProperties) *RoutingEndpoints { return v.Endpoints }).(RoutingEndpointsPtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesOutput) FallbackRoute() FallbackRoutePropertiesPtrOutput {
	return o.ApplyT(func(v RoutingProperties) *FallbackRouteProperties { return v.FallbackRoute }).(FallbackRoutePropertiesPtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesOutput) Routes() RoutePropertiesArrayOutput {
	return o.ApplyT(func(v RoutingProperties) []RouteProperties { return v.Routes }).(RoutePropertiesArrayOutput)
}

type RoutingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingProperties)(nil)).Elem()
}

func (o RoutingPropertiesPtrOutput) ToRoutingPropertiesPtrOutput() RoutingPropertiesPtrOutput {
	return o
}

func (o RoutingPropertiesPtrOutput) ToRoutingPropertiesPtrOutputWithContext(ctx context.Context) RoutingPropertiesPtrOutput {
	return o
}

func (o RoutingPropertiesPtrOutput) Elem() RoutingPropertiesOutput {
	return o.ApplyT(func(v *RoutingProperties) RoutingProperties { return *v }).(RoutingPropertiesOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesPtrOutput) Endpoints() RoutingEndpointsPtrOutput {
	return o.ApplyT(func(v *RoutingProperties) *RoutingEndpoints {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RoutingEndpointsPtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesPtrOutput) FallbackRoute() FallbackRoutePropertiesPtrOutput {
	return o.ApplyT(func(v *RoutingProperties) *FallbackRouteProperties {
		if v == nil {
			return nil
		}
		return v.FallbackRoute
	}).(FallbackRoutePropertiesPtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesPtrOutput) Routes() RoutePropertiesArrayOutput {
	return o.ApplyT(func(v *RoutingProperties) []RouteProperties {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RoutePropertiesArrayOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesInvokeResponse struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints *RoutingEndpointsInvokeResponse `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute *FallbackRoutePropertiesInvokeResponse `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes []RoutePropertiesInvokeResponse `pulumi:"routes"`
}

// RoutingPropertiesInvokeResponseInput is an input type that accepts RoutingPropertiesInvokeResponseArgs and RoutingPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingPropertiesInvokeResponseInput` via:
//
//          RoutingPropertiesInvokeResponseArgs{...}
type RoutingPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutingPropertiesInvokeResponseOutput() RoutingPropertiesInvokeResponseOutput
	ToRoutingPropertiesInvokeResponseOutputWithContext(context.Context) RoutingPropertiesInvokeResponseOutput
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesInvokeResponseArgs struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints RoutingEndpointsInvokeResponsePtrInput `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute FallbackRoutePropertiesInvokeResponsePtrInput `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes RoutePropertiesInvokeResponseArrayInput `pulumi:"routes"`
}

func (RoutingPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingPropertiesInvokeResponseArgs) ToRoutingPropertiesInvokeResponseOutput() RoutingPropertiesInvokeResponseOutput {
	return i.ToRoutingPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingPropertiesInvokeResponseArgs) ToRoutingPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesInvokeResponseOutput)
}

func (i RoutingPropertiesInvokeResponseArgs) ToRoutingPropertiesInvokeResponsePtrOutput() RoutingPropertiesInvokeResponsePtrOutput {
	return i.ToRoutingPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RoutingPropertiesInvokeResponseArgs) ToRoutingPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesInvokeResponseOutput).ToRoutingPropertiesInvokeResponsePtrOutputWithContext(ctx)
}

// RoutingPropertiesInvokeResponsePtrInput is an input type that accepts RoutingPropertiesInvokeResponseArgs, RoutingPropertiesInvokeResponsePtr and RoutingPropertiesInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RoutingPropertiesInvokeResponsePtrInput` via:
//
//          RoutingPropertiesInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RoutingPropertiesInvokeResponsePtrInput interface {
	pulumi.Input

	ToRoutingPropertiesInvokeResponsePtrOutput() RoutingPropertiesInvokeResponsePtrOutput
	ToRoutingPropertiesInvokeResponsePtrOutputWithContext(context.Context) RoutingPropertiesInvokeResponsePtrOutput
}

type routingPropertiesInvokeResponsePtrType RoutingPropertiesInvokeResponseArgs

func RoutingPropertiesInvokeResponsePtr(v *RoutingPropertiesInvokeResponseArgs) RoutingPropertiesInvokeResponsePtrInput {
	return (*routingPropertiesInvokeResponsePtrType)(v)
}

func (*routingPropertiesInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPropertiesInvokeResponse)(nil)).Elem()
}

func (i *routingPropertiesInvokeResponsePtrType) ToRoutingPropertiesInvokeResponsePtrOutput() RoutingPropertiesInvokeResponsePtrOutput {
	return i.ToRoutingPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *routingPropertiesInvokeResponsePtrType) ToRoutingPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesInvokeResponsePtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingPropertiesInvokeResponseOutput) ToRoutingPropertiesInvokeResponseOutput() RoutingPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingPropertiesInvokeResponseOutput) ToRoutingPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingPropertiesInvokeResponseOutput) ToRoutingPropertiesInvokeResponsePtrOutput() RoutingPropertiesInvokeResponsePtrOutput {
	return o.ToRoutingPropertiesInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RoutingPropertiesInvokeResponseOutput) ToRoutingPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesInvokeResponse) *RoutingPropertiesInvokeResponse {
		return &v
	}).(RoutingPropertiesInvokeResponsePtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesInvokeResponseOutput) Endpoints() RoutingEndpointsInvokeResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesInvokeResponse) *RoutingEndpointsInvokeResponse { return v.Endpoints }).(RoutingEndpointsInvokeResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesInvokeResponseOutput) FallbackRoute() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesInvokeResponse) *FallbackRoutePropertiesInvokeResponse { return v.FallbackRoute }).(FallbackRoutePropertiesInvokeResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesInvokeResponseOutput) Routes() RoutePropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v RoutingPropertiesInvokeResponse) []RoutePropertiesInvokeResponse { return v.Routes }).(RoutePropertiesInvokeResponseArrayOutput)
}

type RoutingPropertiesInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingPropertiesInvokeResponsePtrOutput) ToRoutingPropertiesInvokeResponsePtrOutput() RoutingPropertiesInvokeResponsePtrOutput {
	return o
}

func (o RoutingPropertiesInvokeResponsePtrOutput) ToRoutingPropertiesInvokeResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesInvokeResponsePtrOutput {
	return o
}

func (o RoutingPropertiesInvokeResponsePtrOutput) Elem() RoutingPropertiesInvokeResponseOutput {
	return o.ApplyT(func(v *RoutingPropertiesInvokeResponse) RoutingPropertiesInvokeResponse { return *v }).(RoutingPropertiesInvokeResponseOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesInvokeResponsePtrOutput) Endpoints() RoutingEndpointsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesInvokeResponse) *RoutingEndpointsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RoutingEndpointsInvokeResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesInvokeResponsePtrOutput) FallbackRoute() FallbackRoutePropertiesInvokeResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesInvokeResponse) *FallbackRoutePropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.FallbackRoute
	}).(FallbackRoutePropertiesInvokeResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesInvokeResponsePtrOutput) Routes() RoutePropertiesInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RoutingPropertiesInvokeResponse) []RoutePropertiesInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RoutePropertiesInvokeResponseArrayOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesResponse struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints *RoutingEndpointsResponse `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute *FallbackRoutePropertiesResponse `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes []RoutePropertiesResponse `pulumi:"routes"`
}

// RoutingPropertiesResponseInput is an input type that accepts RoutingPropertiesResponseArgs and RoutingPropertiesResponseOutput values.
// You can construct a concrete instance of `RoutingPropertiesResponseInput` via:
//
//          RoutingPropertiesResponseArgs{...}
type RoutingPropertiesResponseInput interface {
	pulumi.Input

	ToRoutingPropertiesResponseOutput() RoutingPropertiesResponseOutput
	ToRoutingPropertiesResponseOutputWithContext(context.Context) RoutingPropertiesResponseOutput
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesResponseArgs struct {
	// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
	Endpoints RoutingEndpointsResponsePtrInput `pulumi:"endpoints"`
	// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
	FallbackRoute FallbackRoutePropertiesResponsePtrInput `pulumi:"fallbackRoute"`
	// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
	Routes RoutePropertiesResponseArrayInput `pulumi:"routes"`
}

func (RoutingPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPropertiesResponse)(nil)).Elem()
}

func (i RoutingPropertiesResponseArgs) ToRoutingPropertiesResponseOutput() RoutingPropertiesResponseOutput {
	return i.ToRoutingPropertiesResponseOutputWithContext(context.Background())
}

func (i RoutingPropertiesResponseArgs) ToRoutingPropertiesResponseOutputWithContext(ctx context.Context) RoutingPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesResponseOutput)
}

func (i RoutingPropertiesResponseArgs) ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput {
	return i.ToRoutingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RoutingPropertiesResponseArgs) ToRoutingPropertiesResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesResponseOutput).ToRoutingPropertiesResponsePtrOutputWithContext(ctx)
}

// RoutingPropertiesResponsePtrInput is an input type that accepts RoutingPropertiesResponseArgs, RoutingPropertiesResponsePtr and RoutingPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RoutingPropertiesResponsePtrInput` via:
//
//          RoutingPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RoutingPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput
	ToRoutingPropertiesResponsePtrOutputWithContext(context.Context) RoutingPropertiesResponsePtrOutput
}

type routingPropertiesResponsePtrType RoutingPropertiesResponseArgs

func RoutingPropertiesResponsePtr(v *RoutingPropertiesResponseArgs) RoutingPropertiesResponsePtrInput {
	return (*routingPropertiesResponsePtrType)(v)
}

func (*routingPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPropertiesResponse)(nil)).Elem()
}

func (i *routingPropertiesResponsePtrType) ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput {
	return i.ToRoutingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *routingPropertiesResponsePtrType) ToRoutingPropertiesResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingPropertiesResponsePtrOutput)
}

// The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
type RoutingPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingPropertiesResponse)(nil)).Elem()
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponseOutput() RoutingPropertiesResponseOutput {
	return o
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponseOutputWithContext(ctx context.Context) RoutingPropertiesResponseOutput {
	return o
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput {
	return o.ToRoutingPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RoutingPropertiesResponseOutput) ToRoutingPropertiesResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) *RoutingPropertiesResponse {
		return &v
	}).(RoutingPropertiesResponsePtrOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesResponseOutput) Endpoints() RoutingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) *RoutingEndpointsResponse { return v.Endpoints }).(RoutingEndpointsResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesResponseOutput) FallbackRoute() FallbackRoutePropertiesResponsePtrOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) *FallbackRoutePropertiesResponse { return v.FallbackRoute }).(FallbackRoutePropertiesResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesResponseOutput) Routes() RoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v RoutingPropertiesResponse) []RoutePropertiesResponse { return v.Routes }).(RoutePropertiesResponseArrayOutput)
}

type RoutingPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingPropertiesResponse)(nil)).Elem()
}

func (o RoutingPropertiesResponsePtrOutput) ToRoutingPropertiesResponsePtrOutput() RoutingPropertiesResponsePtrOutput {
	return o
}

func (o RoutingPropertiesResponsePtrOutput) ToRoutingPropertiesResponsePtrOutputWithContext(ctx context.Context) RoutingPropertiesResponsePtrOutput {
	return o
}

func (o RoutingPropertiesResponsePtrOutput) Elem() RoutingPropertiesResponseOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) RoutingPropertiesResponse { return *v }).(RoutingPropertiesResponseOutput)
}

// The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
func (o RoutingPropertiesResponsePtrOutput) Endpoints() RoutingEndpointsResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) *RoutingEndpointsResponse {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(RoutingEndpointsResponsePtrOutput)
}

// The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not set, the messages which do not meet any of the conditions specified in the 'routes' section get routed to the built-in eventhub endpoint.
func (o RoutingPropertiesResponsePtrOutput) FallbackRoute() FallbackRoutePropertiesResponsePtrOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) *FallbackRoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.FallbackRoute
	}).(FallbackRoutePropertiesResponsePtrOutput)
}

// The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
func (o RoutingPropertiesResponsePtrOutput) Routes() RoutePropertiesResponseArrayOutput {
	return o.ApplyT(func(v *RoutingPropertiesResponse) []RoutePropertiesResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RoutePropertiesResponseArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointProperties struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusQueueEndpointPropertiesInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesArgs and RoutingServiceBusQueueEndpointPropertiesOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesArgs{...}
type RoutingServiceBusQueueEndpointPropertiesInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput
	ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesOutput
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesArgs struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusQueueEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesArgs) ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesArgs) ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesOutput)
}

// RoutingServiceBusQueueEndpointPropertiesArrayInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesArray and RoutingServiceBusQueueEndpointPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesArrayInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesArray{ RoutingServiceBusQueueEndpointPropertiesArgs{...} }
type RoutingServiceBusQueueEndpointPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput
	ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput
}

type RoutingServiceBusQueueEndpointPropertiesArray []RoutingServiceBusQueueEndpointPropertiesInput

func (RoutingServiceBusQueueEndpointPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesArray) ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesArray) ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesOutput) ToRoutingServiceBusQueueEndpointPropertiesOutput() RoutingServiceBusQueueEndpointPropertiesOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesOutput) ToRoutingServiceBusQueueEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesOutput {
	return o
}

// The connection string of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusQueueEndpointPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesArrayOutput() RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusQueueEndpointPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusQueueEndpointProperties {
		return vs[0].([]RoutingServiceBusQueueEndpointProperties)[vs[1].(int)]
	}).(RoutingServiceBusQueueEndpointPropertiesOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesInvokeResponse struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusQueueEndpointPropertiesInvokeResponseInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs and RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesInvokeResponseInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs{...}
type RoutingServiceBusQueueEndpointPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput
	ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput)
}

// RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray and RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray{ RoutingServiceBusQueueEndpointPropertiesInvokeResponseArgs{...} }
type RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput
	ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput
}

type RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray []RoutingServiceBusQueueEndpointPropertiesInvokeResponseInput

func (RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesInvokeResponseArray) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput {
	return o
}

// The connection string of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesInvokeResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesInvokeResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusQueueEndpointPropertiesInvokeResponse {
		return vs[0].([]RoutingServiceBusQueueEndpointPropertiesInvokeResponse)[vs[1].(int)]
	}).(RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesResponse struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusQueueEndpointPropertiesResponseInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesResponseArgs and RoutingServiceBusQueueEndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesResponseInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesResponseArgs{...}
type RoutingServiceBusQueueEndpointPropertiesResponseInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesResponseOutput() RoutingServiceBusQueueEndpointPropertiesResponseOutput
	ToRoutingServiceBusQueueEndpointPropertiesResponseOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesResponseOutput
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesResponseArgs struct {
	// The connection string of the service bus queue endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus queue endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus queue endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusQueueEndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesResponseArgs) ToRoutingServiceBusQueueEndpointPropertiesResponseOutput() RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesResponseArgs) ToRoutingServiceBusQueueEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesResponseOutput)
}

// RoutingServiceBusQueueEndpointPropertiesResponseArrayInput is an input type that accepts RoutingServiceBusQueueEndpointPropertiesResponseArray and RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusQueueEndpointPropertiesResponseArrayInput` via:
//
//          RoutingServiceBusQueueEndpointPropertiesResponseArray{ RoutingServiceBusQueueEndpointPropertiesResponseArgs{...} }
type RoutingServiceBusQueueEndpointPropertiesResponseArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput
	ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutputWithContext(context.Context) RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput
}

type RoutingServiceBusQueueEndpointPropertiesResponseArray []RoutingServiceBusQueueEndpointPropertiesResponseInput

func (RoutingServiceBusQueueEndpointPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (i RoutingServiceBusQueueEndpointPropertiesResponseArray) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return i.ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusQueueEndpointPropertiesResponseArray) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput)
}

// The properties related to service bus queue endpoint types.
type RoutingServiceBusQueueEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseOutput() RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return o
}

// The connection string of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus queue endpoint.
func (o RoutingServiceBusQueueEndpointPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusQueueEndpointPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusQueueEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutput() RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusQueueEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusQueueEndpointPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusQueueEndpointPropertiesResponse {
		return vs[0].([]RoutingServiceBusQueueEndpointPropertiesResponse)[vs[1].(int)]
	}).(RoutingServiceBusQueueEndpointPropertiesResponseOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointProperties struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusTopicEndpointPropertiesInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesArgs and RoutingServiceBusTopicEndpointPropertiesOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesArgs{...}
type RoutingServiceBusTopicEndpointPropertiesInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput
	ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesOutput
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesArgs struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusTopicEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesArgs) ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesArgs) ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesOutput)
}

// RoutingServiceBusTopicEndpointPropertiesArrayInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesArray and RoutingServiceBusTopicEndpointPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesArrayInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesArray{ RoutingServiceBusTopicEndpointPropertiesArgs{...} }
type RoutingServiceBusTopicEndpointPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput
	ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput
}

type RoutingServiceBusTopicEndpointPropertiesArray []RoutingServiceBusTopicEndpointPropertiesInput

func (RoutingServiceBusTopicEndpointPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesArray) ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesArray) ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesArrayOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesOutput) ToRoutingServiceBusTopicEndpointPropertiesOutput() RoutingServiceBusTopicEndpointPropertiesOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesOutput) ToRoutingServiceBusTopicEndpointPropertiesOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesOutput {
	return o
}

// The connection string of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusTopicEndpointPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointProperties)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesArrayOutput() RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusTopicEndpointPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusTopicEndpointProperties {
		return vs[0].([]RoutingServiceBusTopicEndpointProperties)[vs[1].(int)]
	}).(RoutingServiceBusTopicEndpointPropertiesOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesInvokeResponse struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusTopicEndpointPropertiesInvokeResponseInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs and RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesInvokeResponseInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs{...}
type RoutingServiceBusTopicEndpointPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput
	ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput)
}

// RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray and RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray{ RoutingServiceBusTopicEndpointPropertiesInvokeResponseArgs{...} }
type RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput
	ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput
}

type RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray []RoutingServiceBusTopicEndpointPropertiesInvokeResponseInput

func (RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesInvokeResponseArray) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput {
	return o
}

// The connection string of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesInvokeResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesInvokeResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusTopicEndpointPropertiesInvokeResponse {
		return vs[0].([]RoutingServiceBusTopicEndpointPropertiesInvokeResponse)[vs[1].(int)]
	}).(RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesResponse struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name string `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingServiceBusTopicEndpointPropertiesResponseInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesResponseArgs and RoutingServiceBusTopicEndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesResponseInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesResponseArgs{...}
type RoutingServiceBusTopicEndpointPropertiesResponseInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesResponseOutput() RoutingServiceBusTopicEndpointPropertiesResponseOutput
	ToRoutingServiceBusTopicEndpointPropertiesResponseOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesResponseOutput
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesResponseArgs struct {
	// The connection string of the service bus topic endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the service bus topic endpoint.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the service bus topic endpoint.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingServiceBusTopicEndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesResponseArgs) ToRoutingServiceBusTopicEndpointPropertiesResponseOutput() RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesResponseArgs) ToRoutingServiceBusTopicEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesResponseOutput)
}

// RoutingServiceBusTopicEndpointPropertiesResponseArrayInput is an input type that accepts RoutingServiceBusTopicEndpointPropertiesResponseArray and RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `RoutingServiceBusTopicEndpointPropertiesResponseArrayInput` via:
//
//          RoutingServiceBusTopicEndpointPropertiesResponseArray{ RoutingServiceBusTopicEndpointPropertiesResponseArgs{...} }
type RoutingServiceBusTopicEndpointPropertiesResponseArrayInput interface {
	pulumi.Input

	ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput
	ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutputWithContext(context.Context) RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput
}

type RoutingServiceBusTopicEndpointPropertiesResponseArray []RoutingServiceBusTopicEndpointPropertiesResponseInput

func (RoutingServiceBusTopicEndpointPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (i RoutingServiceBusTopicEndpointPropertiesResponseArray) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return i.ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i RoutingServiceBusTopicEndpointPropertiesResponseArray) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput)
}

// The properties related to service bus topic endpoint types.
type RoutingServiceBusTopicEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseOutput() RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return o
}

// The connection string of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the service bus topic endpoint.
func (o RoutingServiceBusTopicEndpointPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingServiceBusTopicEndpointPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingServiceBusTopicEndpointPropertiesResponse)(nil)).Elem()
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutput() RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) ToRoutingServiceBusTopicEndpointPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput {
	return o
}

func (o RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingServiceBusTopicEndpointPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingServiceBusTopicEndpointPropertiesResponse {
		return vs[0].([]RoutingServiceBusTopicEndpointPropertiesResponse)[vs[1].(int)]
	}).(RoutingServiceBusTopicEndpointPropertiesResponseOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerProperties struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds *int `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString string `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName string `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding *string `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat *string `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes *int `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingStorageContainerPropertiesInput is an input type that accepts RoutingStorageContainerPropertiesArgs and RoutingStorageContainerPropertiesOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesInput` via:
//
//          RoutingStorageContainerPropertiesArgs{...}
type RoutingStorageContainerPropertiesInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesOutput() RoutingStorageContainerPropertiesOutput
	ToRoutingStorageContainerPropertiesOutputWithContext(context.Context) RoutingStorageContainerPropertiesOutput
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesArgs struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds pulumi.IntPtrInput `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat pulumi.StringPtrInput `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes pulumi.IntPtrInput `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingStorageContainerPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerProperties)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesArgs) ToRoutingStorageContainerPropertiesOutput() RoutingStorageContainerPropertiesOutput {
	return i.ToRoutingStorageContainerPropertiesOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesArgs) ToRoutingStorageContainerPropertiesOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesOutput)
}

// RoutingStorageContainerPropertiesArrayInput is an input type that accepts RoutingStorageContainerPropertiesArray and RoutingStorageContainerPropertiesArrayOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesArrayInput` via:
//
//          RoutingStorageContainerPropertiesArray{ RoutingStorageContainerPropertiesArgs{...} }
type RoutingStorageContainerPropertiesArrayInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesArrayOutput() RoutingStorageContainerPropertiesArrayOutput
	ToRoutingStorageContainerPropertiesArrayOutputWithContext(context.Context) RoutingStorageContainerPropertiesArrayOutput
}

type RoutingStorageContainerPropertiesArray []RoutingStorageContainerPropertiesInput

func (RoutingStorageContainerPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerProperties)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesArray) ToRoutingStorageContainerPropertiesArrayOutput() RoutingStorageContainerPropertiesArrayOutput {
	return i.ToRoutingStorageContainerPropertiesArrayOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesArray) ToRoutingStorageContainerPropertiesArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesArrayOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerProperties)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesOutput) ToRoutingStorageContainerPropertiesOutput() RoutingStorageContainerPropertiesOutput {
	return o
}

func (o RoutingStorageContainerPropertiesOutput) ToRoutingStorageContainerPropertiesOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesOutput {
	return o
}

// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
func (o RoutingStorageContainerPropertiesOutput) BatchFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *int { return v.BatchFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// The connection string of the storage account.
func (o RoutingStorageContainerPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of storage container in the storage account.
func (o RoutingStorageContainerPropertiesOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
func (o RoutingStorageContainerPropertiesOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
func (o RoutingStorageContainerPropertiesOutput) FileNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *string { return v.FileNameFormat }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
func (o RoutingStorageContainerPropertiesOutput) MaxChunkSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *int { return v.MaxChunkSizeInBytes }).(pulumi.IntPtrOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingStorageContainerPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the storage account.
func (o RoutingStorageContainerPropertiesOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the storage account.
func (o RoutingStorageContainerPropertiesOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerProperties) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingStorageContainerPropertiesArrayOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerProperties)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesArrayOutput) ToRoutingStorageContainerPropertiesArrayOutput() RoutingStorageContainerPropertiesArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesArrayOutput) ToRoutingStorageContainerPropertiesArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesArrayOutput) Index(i pulumi.IntInput) RoutingStorageContainerPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingStorageContainerProperties {
		return vs[0].([]RoutingStorageContainerProperties)[vs[1].(int)]
	}).(RoutingStorageContainerPropertiesOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesInvokeResponse struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds *int `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString string `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName string `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding *string `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat *string `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes *int `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingStorageContainerPropertiesInvokeResponseInput is an input type that accepts RoutingStorageContainerPropertiesInvokeResponseArgs and RoutingStorageContainerPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesInvokeResponseInput` via:
//
//          RoutingStorageContainerPropertiesInvokeResponseArgs{...}
type RoutingStorageContainerPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesInvokeResponseOutput() RoutingStorageContainerPropertiesInvokeResponseOutput
	ToRoutingStorageContainerPropertiesInvokeResponseOutputWithContext(context.Context) RoutingStorageContainerPropertiesInvokeResponseOutput
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesInvokeResponseArgs struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds pulumi.IntPtrInput `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat pulumi.StringPtrInput `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes pulumi.IntPtrInput `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingStorageContainerPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesInvokeResponseArgs) ToRoutingStorageContainerPropertiesInvokeResponseOutput() RoutingStorageContainerPropertiesInvokeResponseOutput {
	return i.ToRoutingStorageContainerPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesInvokeResponseArgs) ToRoutingStorageContainerPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesInvokeResponseOutput)
}

// RoutingStorageContainerPropertiesInvokeResponseArrayInput is an input type that accepts RoutingStorageContainerPropertiesInvokeResponseArray and RoutingStorageContainerPropertiesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesInvokeResponseArrayInput` via:
//
//          RoutingStorageContainerPropertiesInvokeResponseArray{ RoutingStorageContainerPropertiesInvokeResponseArgs{...} }
type RoutingStorageContainerPropertiesInvokeResponseArrayInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesInvokeResponseArrayOutput() RoutingStorageContainerPropertiesInvokeResponseArrayOutput
	ToRoutingStorageContainerPropertiesInvokeResponseArrayOutputWithContext(context.Context) RoutingStorageContainerPropertiesInvokeResponseArrayOutput
}

type RoutingStorageContainerPropertiesInvokeResponseArray []RoutingStorageContainerPropertiesInvokeResponseInput

func (RoutingStorageContainerPropertiesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerPropertiesInvokeResponse)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesInvokeResponseArray) ToRoutingStorageContainerPropertiesInvokeResponseArrayOutput() RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return i.ToRoutingStorageContainerPropertiesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesInvokeResponseArray) ToRoutingStorageContainerPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesInvokeResponseArrayOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesInvokeResponseOutput) ToRoutingStorageContainerPropertiesInvokeResponseOutput() RoutingStorageContainerPropertiesInvokeResponseOutput {
	return o
}

func (o RoutingStorageContainerPropertiesInvokeResponseOutput) ToRoutingStorageContainerPropertiesInvokeResponseOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesInvokeResponseOutput {
	return o
}

// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) BatchFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *int { return v.BatchFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// The connection string of the storage account.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of storage container in the storage account.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) FileNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *string { return v.FileNameFormat }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) MaxChunkSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *int { return v.MaxChunkSizeInBytes }).(pulumi.IntPtrOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the storage account.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the storage account.
func (o RoutingStorageContainerPropertiesInvokeResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesInvokeResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingStorageContainerPropertiesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerPropertiesInvokeResponse)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesInvokeResponseArrayOutput) ToRoutingStorageContainerPropertiesInvokeResponseArrayOutput() RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesInvokeResponseArrayOutput) ToRoutingStorageContainerPropertiesInvokeResponseArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesInvokeResponseArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesInvokeResponseArrayOutput) Index(i pulumi.IntInput) RoutingStorageContainerPropertiesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingStorageContainerPropertiesInvokeResponse {
		return vs[0].([]RoutingStorageContainerPropertiesInvokeResponse)[vs[1].(int)]
	}).(RoutingStorageContainerPropertiesInvokeResponseOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesResponse struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds *int `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString string `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName string `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding *string `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat *string `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes *int `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name string `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId *string `pulumi:"subscriptionId"`
}

// RoutingStorageContainerPropertiesResponseInput is an input type that accepts RoutingStorageContainerPropertiesResponseArgs and RoutingStorageContainerPropertiesResponseOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesResponseInput` via:
//
//          RoutingStorageContainerPropertiesResponseArgs{...}
type RoutingStorageContainerPropertiesResponseInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesResponseOutput() RoutingStorageContainerPropertiesResponseOutput
	ToRoutingStorageContainerPropertiesResponseOutputWithContext(context.Context) RoutingStorageContainerPropertiesResponseOutput
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesResponseArgs struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
	BatchFrequencyInSeconds pulumi.IntPtrInput `pulumi:"batchFrequencyInSeconds"`
	// The connection string of the storage account.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of storage container in the storage account.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
	FileNameFormat pulumi.StringPtrInput `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
	MaxChunkSizeInBytes pulumi.IntPtrInput `pulumi:"maxChunkSizeInBytes"`
	// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group of the storage account.
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// The subscription identifier of the storage account.
	SubscriptionId pulumi.StringPtrInput `pulumi:"subscriptionId"`
}

func (RoutingStorageContainerPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerPropertiesResponse)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesResponseArgs) ToRoutingStorageContainerPropertiesResponseOutput() RoutingStorageContainerPropertiesResponseOutput {
	return i.ToRoutingStorageContainerPropertiesResponseOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesResponseArgs) ToRoutingStorageContainerPropertiesResponseOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesResponseOutput)
}

// RoutingStorageContainerPropertiesResponseArrayInput is an input type that accepts RoutingStorageContainerPropertiesResponseArray and RoutingStorageContainerPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `RoutingStorageContainerPropertiesResponseArrayInput` via:
//
//          RoutingStorageContainerPropertiesResponseArray{ RoutingStorageContainerPropertiesResponseArgs{...} }
type RoutingStorageContainerPropertiesResponseArrayInput interface {
	pulumi.Input

	ToRoutingStorageContainerPropertiesResponseArrayOutput() RoutingStorageContainerPropertiesResponseArrayOutput
	ToRoutingStorageContainerPropertiesResponseArrayOutputWithContext(context.Context) RoutingStorageContainerPropertiesResponseArrayOutput
}

type RoutingStorageContainerPropertiesResponseArray []RoutingStorageContainerPropertiesResponseInput

func (RoutingStorageContainerPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerPropertiesResponse)(nil)).Elem()
}

func (i RoutingStorageContainerPropertiesResponseArray) ToRoutingStorageContainerPropertiesResponseArrayOutput() RoutingStorageContainerPropertiesResponseArrayOutput {
	return i.ToRoutingStorageContainerPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i RoutingStorageContainerPropertiesResponseArray) ToRoutingStorageContainerPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingStorageContainerPropertiesResponseArrayOutput)
}

// The properties related to a storage container endpoint.
type RoutingStorageContainerPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingStorageContainerPropertiesResponse)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesResponseOutput) ToRoutingStorageContainerPropertiesResponseOutput() RoutingStorageContainerPropertiesResponseOutput {
	return o
}

func (o RoutingStorageContainerPropertiesResponseOutput) ToRoutingStorageContainerPropertiesResponseOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesResponseOutput {
	return o
}

// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
func (o RoutingStorageContainerPropertiesResponseOutput) BatchFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *int { return v.BatchFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// The connection string of the storage account.
func (o RoutingStorageContainerPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of storage container in the storage account.
func (o RoutingStorageContainerPropertiesResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avroDeflate'. Default value is 'avro'.
func (o RoutingStorageContainerPropertiesResponseOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
func (o RoutingStorageContainerPropertiesResponseOutput) FileNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *string { return v.FileNameFormat }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
func (o RoutingStorageContainerPropertiesResponseOutput) MaxChunkSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *int { return v.MaxChunkSizeInBytes }).(pulumi.IntPtrOutput)
}

// The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, operationsMonitoringEvents, fileNotifications, $default. Endpoint names must be unique across endpoint types.
func (o RoutingStorageContainerPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group of the storage account.
func (o RoutingStorageContainerPropertiesResponseOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// The subscription identifier of the storage account.
func (o RoutingStorageContainerPropertiesResponseOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingStorageContainerPropertiesResponse) *string { return v.SubscriptionId }).(pulumi.StringPtrOutput)
}

type RoutingStorageContainerPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingStorageContainerPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingStorageContainerPropertiesResponse)(nil)).Elem()
}

func (o RoutingStorageContainerPropertiesResponseArrayOutput) ToRoutingStorageContainerPropertiesResponseArrayOutput() RoutingStorageContainerPropertiesResponseArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesResponseArrayOutput) ToRoutingStorageContainerPropertiesResponseArrayOutputWithContext(ctx context.Context) RoutingStorageContainerPropertiesResponseArrayOutput {
	return o
}

func (o RoutingStorageContainerPropertiesResponseArrayOutput) Index(i pulumi.IntInput) RoutingStorageContainerPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingStorageContainerPropertiesResponse {
		return vs[0].([]RoutingStorageContainerPropertiesResponse)[vs[1].(int)]
	}).(RoutingStorageContainerPropertiesResponseOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRule struct {
	// The name of the shared access policy.
	KeyName string `pulumi:"keyName"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights string `pulumi:"rights"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleInput is an input type that accepts SharedAccessSignatureAuthorizationRuleArgs and SharedAccessSignatureAuthorizationRuleOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleInput` via:
//
//          SharedAccessSignatureAuthorizationRuleArgs{...}
type SharedAccessSignatureAuthorizationRuleInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput
	ToSharedAccessSignatureAuthorizationRuleOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleOutput
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights AccessRights `pulumi:"rights"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleArgs) ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleArgs) ToSharedAccessSignatureAuthorizationRuleOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleOutput)
}

// SharedAccessSignatureAuthorizationRuleArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleArray and SharedAccessSignatureAuthorizationRuleArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleArrayInput` via:
//
//          SharedAccessSignatureAuthorizationRuleArray{ SharedAccessSignatureAuthorizationRuleArgs{...} }
type SharedAccessSignatureAuthorizationRuleArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput
	ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput
}

type SharedAccessSignatureAuthorizationRuleArray []SharedAccessSignatureAuthorizationRuleInput

func (SharedAccessSignatureAuthorizationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleArray) ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleArray) ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleArrayOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleOutput) ToSharedAccessSignatureAuthorizationRuleOutput() SharedAccessSignatureAuthorizationRuleOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleOutput) ToSharedAccessSignatureAuthorizationRuleOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleOutput {
	return o
}

// The name of the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) string { return v.KeyName }).(pulumi.StringOutput)
}

// The primary key.
func (o SharedAccessSignatureAuthorizationRuleOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) string { return v.Rights }).(pulumi.StringOutput)
}

// The secondary key.
func (o SharedAccessSignatureAuthorizationRuleOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRule) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRule)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) ToSharedAccessSignatureAuthorizationRuleArrayOutput() SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) ToSharedAccessSignatureAuthorizationRuleArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRule {
		return vs[0].([]SharedAccessSignatureAuthorizationRule)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleInvokeResponse struct {
	// The name of the shared access policy.
	KeyName string `pulumi:"keyName"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights string `pulumi:"rights"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleInvokeResponseInput is an input type that accepts SharedAccessSignatureAuthorizationRuleInvokeResponseArgs and SharedAccessSignatureAuthorizationRuleInvokeResponseOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleInvokeResponseInput` via:
//
//          SharedAccessSignatureAuthorizationRuleInvokeResponseArgs{...}
type SharedAccessSignatureAuthorizationRuleInvokeResponseInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseOutput
	ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseOutput
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleInvokeResponseArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights pulumi.StringInput `pulumi:"rights"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleInvokeResponse)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleInvokeResponseArgs) ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleInvokeResponseArgs) ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleInvokeResponseOutput)
}

// SharedAccessSignatureAuthorizationRuleInvokeResponseArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleInvokeResponseArray and SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleInvokeResponseArrayInput` via:
//
//          SharedAccessSignatureAuthorizationRuleInvokeResponseArray{ SharedAccessSignatureAuthorizationRuleInvokeResponseArgs{...} }
type SharedAccessSignatureAuthorizationRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput
	ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput
}

type SharedAccessSignatureAuthorizationRuleInvokeResponseArray []SharedAccessSignatureAuthorizationRuleInvokeResponseInput

func (SharedAccessSignatureAuthorizationRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleInvokeResponse)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleInvokeResponseArray) ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleInvokeResponseArray) ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleInvokeResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) ToSharedAccessSignatureAuthorizationRuleInvokeResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseOutput {
	return o
}

// The name of the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleInvokeResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// The primary key.
func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleInvokeResponse) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleInvokeResponse) string { return v.Rights }).(pulumi.StringOutput)
}

// The secondary key.
func (o SharedAccessSignatureAuthorizationRuleInvokeResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleInvokeResponse) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleInvokeResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput() SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleInvokeResponse {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleInvokeResponse)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleInvokeResponseOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleResponse struct {
	// The name of the shared access policy.
	KeyName string `pulumi:"keyName"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights string `pulumi:"rights"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// SharedAccessSignatureAuthorizationRuleResponseInput is an input type that accepts SharedAccessSignatureAuthorizationRuleResponseArgs and SharedAccessSignatureAuthorizationRuleResponseOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleResponseInput` via:
//
//          SharedAccessSignatureAuthorizationRuleResponseArgs{...}
type SharedAccessSignatureAuthorizationRuleResponseInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleResponseOutput() SharedAccessSignatureAuthorizationRuleResponseOutput
	ToSharedAccessSignatureAuthorizationRuleResponseOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleResponseOutput
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleResponseArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The permissions assigned to the shared access policy.
	Rights pulumi.StringInput `pulumi:"rights"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (SharedAccessSignatureAuthorizationRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleResponseArgs) ToSharedAccessSignatureAuthorizationRuleResponseOutput() SharedAccessSignatureAuthorizationRuleResponseOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleResponseOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleResponseArgs) ToSharedAccessSignatureAuthorizationRuleResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleResponseOutput)
}

// SharedAccessSignatureAuthorizationRuleResponseArrayInput is an input type that accepts SharedAccessSignatureAuthorizationRuleResponseArray and SharedAccessSignatureAuthorizationRuleResponseArrayOutput values.
// You can construct a concrete instance of `SharedAccessSignatureAuthorizationRuleResponseArrayInput` via:
//
//          SharedAccessSignatureAuthorizationRuleResponseArray{ SharedAccessSignatureAuthorizationRuleResponseArgs{...} }
type SharedAccessSignatureAuthorizationRuleResponseArrayInput interface {
	pulumi.Input

	ToSharedAccessSignatureAuthorizationRuleResponseArrayOutput() SharedAccessSignatureAuthorizationRuleResponseArrayOutput
	ToSharedAccessSignatureAuthorizationRuleResponseArrayOutputWithContext(context.Context) SharedAccessSignatureAuthorizationRuleResponseArrayOutput
}

type SharedAccessSignatureAuthorizationRuleResponseArray []SharedAccessSignatureAuthorizationRuleResponseInput

func (SharedAccessSignatureAuthorizationRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (i SharedAccessSignatureAuthorizationRuleResponseArray) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutput() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return i.ToSharedAccessSignatureAuthorizationRuleResponseArrayOutputWithContext(context.Background())
}

func (i SharedAccessSignatureAuthorizationRuleResponseArray) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedAccessSignatureAuthorizationRuleResponseArrayOutput)
}

// The properties of an IoT hub shared access policy.
type SharedAccessSignatureAuthorizationRuleResponseOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleResponseOutput) ToSharedAccessSignatureAuthorizationRuleResponseOutput() SharedAccessSignatureAuthorizationRuleResponseOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseOutput) ToSharedAccessSignatureAuthorizationRuleResponseOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseOutput {
	return o
}

// The name of the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) string { return v.KeyName }).(pulumi.StringOutput)
}

// The primary key.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) Rights() pulumi.StringOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) string { return v.Rights }).(pulumi.StringOutput)
}

// The secondary key.
func (o SharedAccessSignatureAuthorizationRuleResponseOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SharedAccessSignatureAuthorizationRuleResponse) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type SharedAccessSignatureAuthorizationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SharedAccessSignatureAuthorizationRuleResponse)(nil)).Elem()
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutput() SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) ToSharedAccessSignatureAuthorizationRuleResponseArrayOutputWithContext(ctx context.Context) SharedAccessSignatureAuthorizationRuleResponseArrayOutput {
	return o
}

func (o SharedAccessSignatureAuthorizationRuleResponseArrayOutput) Index(i pulumi.IntInput) SharedAccessSignatureAuthorizationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SharedAccessSignatureAuthorizationRuleResponse {
		return vs[0].([]SharedAccessSignatureAuthorizationRuleResponse)[vs[1].(int)]
	}).(SharedAccessSignatureAuthorizationRuleResponseOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointProperties struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 *string `pulumi:"sasTtlAsIso8601"`
}

// StorageEndpointPropertiesInput is an input type that accepts StorageEndpointPropertiesArgs and StorageEndpointPropertiesOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesInput` via:
//
//          StorageEndpointPropertiesArgs{...}
type StorageEndpointPropertiesInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput
	ToStorageEndpointPropertiesOutputWithContext(context.Context) StorageEndpointPropertiesOutput
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesArgs struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 pulumi.StringPtrInput `pulumi:"sasTtlAsIso8601"`
}

func (StorageEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointProperties)(nil)).Elem()
}

func (i StorageEndpointPropertiesArgs) ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput {
	return i.ToStorageEndpointPropertiesOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesArgs) ToStorageEndpointPropertiesOutputWithContext(ctx context.Context) StorageEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesOutput)
}

// StorageEndpointPropertiesMapInput is an input type that accepts StorageEndpointPropertiesMap and StorageEndpointPropertiesMapOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesMapInput` via:
//
//          StorageEndpointPropertiesMap{ "key": StorageEndpointPropertiesArgs{...} }
type StorageEndpointPropertiesMapInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput
	ToStorageEndpointPropertiesMapOutputWithContext(context.Context) StorageEndpointPropertiesMapOutput
}

type StorageEndpointPropertiesMap map[string]StorageEndpointPropertiesInput

func (StorageEndpointPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointProperties)(nil)).Elem()
}

func (i StorageEndpointPropertiesMap) ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput {
	return i.ToStorageEndpointPropertiesMapOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesMap) ToStorageEndpointPropertiesMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesMapOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointProperties)(nil)).Elem()
}

func (o StorageEndpointPropertiesOutput) ToStorageEndpointPropertiesOutput() StorageEndpointPropertiesOutput {
	return o
}

func (o StorageEndpointPropertiesOutput) ToStorageEndpointPropertiesOutputWithContext(ctx context.Context) StorageEndpointPropertiesOutput {
	return o
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o StorageEndpointPropertiesOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointProperties) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o StorageEndpointPropertiesOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointProperties) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
func (o StorageEndpointPropertiesOutput) SasTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageEndpointProperties) *string { return v.SasTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type StorageEndpointPropertiesMapOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointProperties)(nil)).Elem()
}

func (o StorageEndpointPropertiesMapOutput) ToStorageEndpointPropertiesMapOutput() StorageEndpointPropertiesMapOutput {
	return o
}

func (o StorageEndpointPropertiesMapOutput) ToStorageEndpointPropertiesMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesMapOutput {
	return o
}

func (o StorageEndpointPropertiesMapOutput) MapIndex(k pulumi.StringInput) StorageEndpointPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageEndpointProperties {
		return vs[0].(map[string]StorageEndpointProperties)[vs[1].(string)]
	}).(StorageEndpointPropertiesOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesInvokeResponse struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 *string `pulumi:"sasTtlAsIso8601"`
}

// StorageEndpointPropertiesInvokeResponseInput is an input type that accepts StorageEndpointPropertiesInvokeResponseArgs and StorageEndpointPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesInvokeResponseInput` via:
//
//          StorageEndpointPropertiesInvokeResponseArgs{...}
type StorageEndpointPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesInvokeResponseOutput() StorageEndpointPropertiesInvokeResponseOutput
	ToStorageEndpointPropertiesInvokeResponseOutputWithContext(context.Context) StorageEndpointPropertiesInvokeResponseOutput
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesInvokeResponseArgs struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 pulumi.StringPtrInput `pulumi:"sasTtlAsIso8601"`
}

func (StorageEndpointPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i StorageEndpointPropertiesInvokeResponseArgs) ToStorageEndpointPropertiesInvokeResponseOutput() StorageEndpointPropertiesInvokeResponseOutput {
	return i.ToStorageEndpointPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesInvokeResponseArgs) ToStorageEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) StorageEndpointPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesInvokeResponseOutput)
}

// StorageEndpointPropertiesInvokeResponseMapInput is an input type that accepts StorageEndpointPropertiesInvokeResponseMap and StorageEndpointPropertiesInvokeResponseMapOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesInvokeResponseMapInput` via:
//
//          StorageEndpointPropertiesInvokeResponseMap{ "key": StorageEndpointPropertiesInvokeResponseArgs{...} }
type StorageEndpointPropertiesInvokeResponseMapInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesInvokeResponseMapOutput() StorageEndpointPropertiesInvokeResponseMapOutput
	ToStorageEndpointPropertiesInvokeResponseMapOutputWithContext(context.Context) StorageEndpointPropertiesInvokeResponseMapOutput
}

type StorageEndpointPropertiesInvokeResponseMap map[string]StorageEndpointPropertiesInvokeResponseInput

func (StorageEndpointPropertiesInvokeResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (i StorageEndpointPropertiesInvokeResponseMap) ToStorageEndpointPropertiesInvokeResponseMapOutput() StorageEndpointPropertiesInvokeResponseMapOutput {
	return i.ToStorageEndpointPropertiesInvokeResponseMapOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesInvokeResponseMap) ToStorageEndpointPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesInvokeResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesInvokeResponseMapOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesInvokeResponseOutput) ToStorageEndpointPropertiesInvokeResponseOutput() StorageEndpointPropertiesInvokeResponseOutput {
	return o
}

func (o StorageEndpointPropertiesInvokeResponseOutput) ToStorageEndpointPropertiesInvokeResponseOutputWithContext(ctx context.Context) StorageEndpointPropertiesInvokeResponseOutput {
	return o
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o StorageEndpointPropertiesInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o StorageEndpointPropertiesInvokeResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesInvokeResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
func (o StorageEndpointPropertiesInvokeResponseOutput) SasTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesInvokeResponse) *string { return v.SasTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type StorageEndpointPropertiesInvokeResponseMapOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesInvokeResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointPropertiesInvokeResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesInvokeResponseMapOutput) ToStorageEndpointPropertiesInvokeResponseMapOutput() StorageEndpointPropertiesInvokeResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesInvokeResponseMapOutput) ToStorageEndpointPropertiesInvokeResponseMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesInvokeResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesInvokeResponseMapOutput) MapIndex(k pulumi.StringInput) StorageEndpointPropertiesInvokeResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageEndpointPropertiesInvokeResponse {
		return vs[0].(map[string]StorageEndpointPropertiesInvokeResponse)[vs[1].(string)]
	}).(StorageEndpointPropertiesInvokeResponseOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesResponse struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 *string `pulumi:"sasTtlAsIso8601"`
}

// StorageEndpointPropertiesResponseInput is an input type that accepts StorageEndpointPropertiesResponseArgs and StorageEndpointPropertiesResponseOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesResponseInput` via:
//
//          StorageEndpointPropertiesResponseArgs{...}
type StorageEndpointPropertiesResponseInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesResponseOutput() StorageEndpointPropertiesResponseOutput
	ToStorageEndpointPropertiesResponseOutputWithContext(context.Context) StorageEndpointPropertiesResponseOutput
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesResponseArgs struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
	SasTtlAsIso8601 pulumi.StringPtrInput `pulumi:"sasTtlAsIso8601"`
}

func (StorageEndpointPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (i StorageEndpointPropertiesResponseArgs) ToStorageEndpointPropertiesResponseOutput() StorageEndpointPropertiesResponseOutput {
	return i.ToStorageEndpointPropertiesResponseOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesResponseArgs) ToStorageEndpointPropertiesResponseOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesResponseOutput)
}

// StorageEndpointPropertiesResponseMapInput is an input type that accepts StorageEndpointPropertiesResponseMap and StorageEndpointPropertiesResponseMapOutput values.
// You can construct a concrete instance of `StorageEndpointPropertiesResponseMapInput` via:
//
//          StorageEndpointPropertiesResponseMap{ "key": StorageEndpointPropertiesResponseArgs{...} }
type StorageEndpointPropertiesResponseMapInput interface {
	pulumi.Input

	ToStorageEndpointPropertiesResponseMapOutput() StorageEndpointPropertiesResponseMapOutput
	ToStorageEndpointPropertiesResponseMapOutputWithContext(context.Context) StorageEndpointPropertiesResponseMapOutput
}

type StorageEndpointPropertiesResponseMap map[string]StorageEndpointPropertiesResponseInput

func (StorageEndpointPropertiesResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (i StorageEndpointPropertiesResponseMap) ToStorageEndpointPropertiesResponseMapOutput() StorageEndpointPropertiesResponseMapOutput {
	return i.ToStorageEndpointPropertiesResponseMapOutputWithContext(context.Background())
}

func (i StorageEndpointPropertiesResponseMap) ToStorageEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEndpointPropertiesResponseMapOutput)
}

// The properties of the Azure Storage endpoint for file upload.
type StorageEndpointPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesResponseOutput) ToStorageEndpointPropertiesResponseOutput() StorageEndpointPropertiesResponseOutput {
	return o
}

func (o StorageEndpointPropertiesResponseOutput) ToStorageEndpointPropertiesResponseOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseOutput {
	return o
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o StorageEndpointPropertiesResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o StorageEndpointPropertiesResponseOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options.
func (o StorageEndpointPropertiesResponseOutput) SasTtlAsIso8601() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageEndpointPropertiesResponse) *string { return v.SasTtlAsIso8601 }).(pulumi.StringPtrOutput)
}

type StorageEndpointPropertiesResponseMapOutput struct{ *pulumi.OutputState }

func (StorageEndpointPropertiesResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]StorageEndpointPropertiesResponse)(nil)).Elem()
}

func (o StorageEndpointPropertiesResponseMapOutput) ToStorageEndpointPropertiesResponseMapOutput() StorageEndpointPropertiesResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesResponseMapOutput) ToStorageEndpointPropertiesResponseMapOutputWithContext(ctx context.Context) StorageEndpointPropertiesResponseMapOutput {
	return o
}

func (o StorageEndpointPropertiesResponseMapOutput) MapIndex(k pulumi.StringInput) StorageEndpointPropertiesResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) StorageEndpointPropertiesResponse {
		return vs[0].(map[string]StorageEndpointPropertiesResponse)[vs[1].(string)]
	}).(StorageEndpointPropertiesResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificatePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CertificatePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(CloudToDevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesMapOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(EventHubPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(FallbackRoutePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesResponseOutput{})
	pulumi.RegisterOutputType(FeedbackPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesPtrOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IotHubPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoPtrOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoResponseOutput{})
	pulumi.RegisterOutputType(IotHubSkuInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IpFilterRuleOutput{})
	pulumi.RegisterOutputType(IpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(IpFilterRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(IpFilterRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IpFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(IpFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesMapOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(MessagingEndpointPropertiesResponseMapOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesResponseOutput{})
	pulumi.RegisterOutputType(OperationsMonitoringPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutePropertiesOutput{})
	pulumi.RegisterOutputType(RoutePropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutePropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutePropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutePropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutePropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsPtrOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsResponseOutput{})
	pulumi.RegisterOutputType(RoutingEndpointsResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingEventHubPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusQueueEndpointPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingServiceBusTopicEndpointPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesArrayOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RoutingStorageContainerPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleResponseOutput{})
	pulumi.RegisterOutputType(SharedAccessSignatureAuthorizationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesMapOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesInvokeResponseMapOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StorageEndpointPropertiesResponseMapOutput{})
}
