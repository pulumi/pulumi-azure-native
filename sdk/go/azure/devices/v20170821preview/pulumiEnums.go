// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170821preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Rights that this key has.
type AccessRightsDescription pulumi.String

const (
	AccessRightsDescriptionServiceConfig           = AccessRightsDescription("ServiceConfig")
	AccessRightsDescriptionEnrollmentRead          = AccessRightsDescription("EnrollmentRead")
	AccessRightsDescriptionEnrollmentWrite         = AccessRightsDescription("EnrollmentWrite")
	AccessRightsDescriptionDeviceConnect           = AccessRightsDescription("DeviceConnect")
	AccessRightsDescriptionRegistrationStatusRead  = AccessRightsDescription("RegistrationStatusRead")
	AccessRightsDescriptionRegistrationStatusWrite = AccessRightsDescription("RegistrationStatusWrite")
)

func (AccessRightsDescription) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AccessRightsDescription) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessRightsDescription) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessRightsDescription) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessRightsDescription) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Allocation policy to be used by this provisioning service.
type AllocationPolicy pulumi.String

const (
	AllocationPolicyHashed     = AllocationPolicy("Hashed")
	AllocationPolicyGeoLatency = AllocationPolicy("GeoLatency")
	AllocationPolicyStatic     = AllocationPolicy("Static")
)

func (AllocationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e AllocationPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AllocationPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AllocationPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IotDpsSku pulumi.String

const (
	IotDpsSkuS1 = IotDpsSku("S1")
)

func (IotDpsSku) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e IotDpsSku) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IotDpsSku) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IotDpsSku) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IotDpsSku) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Current state of the provisioning service.
type State pulumi.String

const (
	StateActivating       = State("Activating")
	StateActive           = State("Active")
	StateDeleting         = State("Deleting")
	StateDeleted          = State("Deleted")
	StateActivationFailed = State("ActivationFailed")
	StateDeletionFailed   = State("DeletionFailed")
	StateTransitioning    = State("Transitioning")
	StateSuspending       = State("Suspending")
	StateSuspended        = State("Suspended")
	StateResuming         = State("Resuming")
	StateFailingOver      = State("FailingOver")
	StateFailoverFailed   = State("FailoverFailed")
)

func (State) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e State) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e State) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e State) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
