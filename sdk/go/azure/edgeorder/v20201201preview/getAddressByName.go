// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Address Resource.
//
// Deprecated: Version 2020-12-01-preview will be removed in v2 of the provider.
func LookupAddressByName(ctx *pulumi.Context, args *LookupAddressByNameArgs, opts ...pulumi.InvokeOption) (*LookupAddressByNameResult, error) {
	var rv LookupAddressByNameResult
	err := ctx.Invoke("azure-native:edgeorder/v20201201preview:getAddressByName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAddressByNameArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
	AddressName string `pulumi:"addressName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Address Resource.
type LookupAddressByNameResult struct {
	// Contact details for the address
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Shipping details for the address
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
	// Represents resource creation and update time
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupAddressByNameOutput(ctx *pulumi.Context, args LookupAddressByNameOutputArgs, opts ...pulumi.InvokeOption) LookupAddressByNameResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAddressByNameResult, error) {
			args := v.(LookupAddressByNameArgs)
			r, err := LookupAddressByName(ctx, &args, opts...)
			var s LookupAddressByNameResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAddressByNameResultOutput)
}

type LookupAddressByNameOutputArgs struct {
	// The name of the address Resource within the specified resource group. address names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
	AddressName pulumi.StringInput `pulumi:"addressName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAddressByNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressByNameArgs)(nil)).Elem()
}

// Address Resource.
type LookupAddressByNameResultOutput struct{ *pulumi.OutputState }

func (LookupAddressByNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAddressByNameResult)(nil)).Elem()
}

func (o LookupAddressByNameResultOutput) ToLookupAddressByNameResultOutput() LookupAddressByNameResultOutput {
	return o
}

func (o LookupAddressByNameResultOutput) ToLookupAddressByNameResultOutputWithContext(ctx context.Context) LookupAddressByNameResultOutput {
	return o
}

// Contact details for the address
func (o LookupAddressByNameResultOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupAddressByNameResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupAddressByNameResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupAddressByNameResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) string { return v.Name }).(pulumi.StringOutput)
}

// Shipping details for the address
func (o LookupAddressByNameResultOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

// Represents resource creation and update time
func (o LookupAddressByNameResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupAddressByNameResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupAddressByNameResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAddressByNameResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAddressByNameResultOutput{})
}
