// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package edgeorder

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AdditionalErrorInfoResponse struct {
	Info interface{} `pulumi:"info"`
	Type *string     `pulumi:"type"`
}

// AdditionalErrorInfoResponseInput is an input type that accepts AdditionalErrorInfoResponseArgs and AdditionalErrorInfoResponseOutput values.
// You can construct a concrete instance of `AdditionalErrorInfoResponseInput` via:
//
//          AdditionalErrorInfoResponseArgs{...}
type AdditionalErrorInfoResponseInput interface {
	pulumi.Input

	ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput
	ToAdditionalErrorInfoResponseOutputWithContext(context.Context) AdditionalErrorInfoResponseOutput
}

type AdditionalErrorInfoResponseArgs struct {
	Info pulumi.Input          `pulumi:"info"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AdditionalErrorInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (i AdditionalErrorInfoResponseArgs) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return i.ToAdditionalErrorInfoResponseOutputWithContext(context.Background())
}

func (i AdditionalErrorInfoResponseArgs) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalErrorInfoResponseOutput)
}

// AdditionalErrorInfoResponseArrayInput is an input type that accepts AdditionalErrorInfoResponseArray and AdditionalErrorInfoResponseArrayOutput values.
// You can construct a concrete instance of `AdditionalErrorInfoResponseArrayInput` via:
//
//          AdditionalErrorInfoResponseArray{ AdditionalErrorInfoResponseArgs{...} }
type AdditionalErrorInfoResponseArrayInput interface {
	pulumi.Input

	ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput
	ToAdditionalErrorInfoResponseArrayOutputWithContext(context.Context) AdditionalErrorInfoResponseArrayOutput
}

type AdditionalErrorInfoResponseArray []AdditionalErrorInfoResponseInput

func (AdditionalErrorInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (i AdditionalErrorInfoResponseArray) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return i.ToAdditionalErrorInfoResponseArrayOutputWithContext(context.Background())
}

func (i AdditionalErrorInfoResponseArray) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalErrorInfoResponseArrayOutput)
}

type AdditionalErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutput() AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) ToAdditionalErrorInfoResponseOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseOutput {
	return o
}

func (o AdditionalErrorInfoResponseOutput) Info() pulumi.AnyOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) interface{} { return v.Info }).(pulumi.AnyOutput)
}

func (o AdditionalErrorInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdditionalErrorInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AdditionalErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AdditionalErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AdditionalErrorInfoResponse)(nil)).Elem()
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutput() AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) ToAdditionalErrorInfoResponseArrayOutputWithContext(ctx context.Context) AdditionalErrorInfoResponseArrayOutput {
	return o
}

func (o AdditionalErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AdditionalErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AdditionalErrorInfoResponse {
		return vs[0].([]AdditionalErrorInfoResponse)[vs[1].(int)]
	}).(AdditionalErrorInfoResponseOutput)
}

// Address details for an order.
type AddressDetails struct {
	// Customer address and contact details. It should be address resource
	ShippingAddress AddressProperties `pulumi:"shippingAddress"`
}

// AddressDetailsInput is an input type that accepts AddressDetailsArgs and AddressDetailsOutput values.
// You can construct a concrete instance of `AddressDetailsInput` via:
//
//          AddressDetailsArgs{...}
type AddressDetailsInput interface {
	pulumi.Input

	ToAddressDetailsOutput() AddressDetailsOutput
	ToAddressDetailsOutputWithContext(context.Context) AddressDetailsOutput
}

// Address details for an order.
type AddressDetailsArgs struct {
	// Customer address and contact details. It should be address resource
	ShippingAddress AddressPropertiesInput `pulumi:"shippingAddress"`
}

func (AddressDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetails)(nil)).Elem()
}

func (i AddressDetailsArgs) ToAddressDetailsOutput() AddressDetailsOutput {
	return i.ToAddressDetailsOutputWithContext(context.Background())
}

func (i AddressDetailsArgs) ToAddressDetailsOutputWithContext(ctx context.Context) AddressDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsOutput)
}

func (i AddressDetailsArgs) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return i.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (i AddressDetailsArgs) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsOutput).ToAddressDetailsPtrOutputWithContext(ctx)
}

// AddressDetailsPtrInput is an input type that accepts AddressDetailsArgs, AddressDetailsPtr and AddressDetailsPtrOutput values.
// You can construct a concrete instance of `AddressDetailsPtrInput` via:
//
//          AddressDetailsArgs{...}
//
//  or:
//
//          nil
type AddressDetailsPtrInput interface {
	pulumi.Input

	ToAddressDetailsPtrOutput() AddressDetailsPtrOutput
	ToAddressDetailsPtrOutputWithContext(context.Context) AddressDetailsPtrOutput
}

type addressDetailsPtrType AddressDetailsArgs

func AddressDetailsPtr(v *AddressDetailsArgs) AddressDetailsPtrInput {
	return (*addressDetailsPtrType)(v)
}

func (*addressDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetails)(nil)).Elem()
}

func (i *addressDetailsPtrType) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return i.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (i *addressDetailsPtrType) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsPtrOutput)
}

// Address details for an order.
type AddressDetailsOutput struct{ *pulumi.OutputState }

func (AddressDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetails)(nil)).Elem()
}

func (o AddressDetailsOutput) ToAddressDetailsOutput() AddressDetailsOutput {
	return o
}

func (o AddressDetailsOutput) ToAddressDetailsOutputWithContext(ctx context.Context) AddressDetailsOutput {
	return o
}

func (o AddressDetailsOutput) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return o.ToAddressDetailsPtrOutputWithContext(context.Background())
}

func (o AddressDetailsOutput) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return o.ApplyT(func(v AddressDetails) *AddressDetails {
		return &v
	}).(AddressDetailsPtrOutput)
}

// Customer address and contact details. It should be address resource
func (o AddressDetailsOutput) ShippingAddress() AddressPropertiesOutput {
	return o.ApplyT(func(v AddressDetails) AddressProperties { return v.ShippingAddress }).(AddressPropertiesOutput)
}

type AddressDetailsPtrOutput struct{ *pulumi.OutputState }

func (AddressDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetails)(nil)).Elem()
}

func (o AddressDetailsPtrOutput) ToAddressDetailsPtrOutput() AddressDetailsPtrOutput {
	return o
}

func (o AddressDetailsPtrOutput) ToAddressDetailsPtrOutputWithContext(ctx context.Context) AddressDetailsPtrOutput {
	return o
}

func (o AddressDetailsPtrOutput) Elem() AddressDetailsOutput {
	return o.ApplyT(func(v *AddressDetails) AddressDetails { return *v }).(AddressDetailsOutput)
}

// Customer address and contact details. It should be address resource
func (o AddressDetailsPtrOutput) ShippingAddress() AddressPropertiesPtrOutput {
	return o.ApplyT(func(v *AddressDetails) *AddressProperties {
		if v == nil {
			return nil
		}
		return &v.ShippingAddress
	}).(AddressPropertiesPtrOutput)
}

// Address details for an order.
type AddressDetailsResponse struct {
	// Return shipping address
	ReturnAddress AddressPropertiesResponse `pulumi:"returnAddress"`
	// Customer address and contact details. It should be address resource
	ShippingAddress AddressPropertiesResponse `pulumi:"shippingAddress"`
}

// AddressDetailsResponseInput is an input type that accepts AddressDetailsResponseArgs and AddressDetailsResponseOutput values.
// You can construct a concrete instance of `AddressDetailsResponseInput` via:
//
//          AddressDetailsResponseArgs{...}
type AddressDetailsResponseInput interface {
	pulumi.Input

	ToAddressDetailsResponseOutput() AddressDetailsResponseOutput
	ToAddressDetailsResponseOutputWithContext(context.Context) AddressDetailsResponseOutput
}

// Address details for an order.
type AddressDetailsResponseArgs struct {
	// Return shipping address
	ReturnAddress AddressPropertiesResponseInput `pulumi:"returnAddress"`
	// Customer address and contact details. It should be address resource
	ShippingAddress AddressPropertiesResponseInput `pulumi:"shippingAddress"`
}

func (AddressDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetailsResponse)(nil)).Elem()
}

func (i AddressDetailsResponseArgs) ToAddressDetailsResponseOutput() AddressDetailsResponseOutput {
	return i.ToAddressDetailsResponseOutputWithContext(context.Background())
}

func (i AddressDetailsResponseArgs) ToAddressDetailsResponseOutputWithContext(ctx context.Context) AddressDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsResponseOutput)
}

func (i AddressDetailsResponseArgs) ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput {
	return i.ToAddressDetailsResponsePtrOutputWithContext(context.Background())
}

func (i AddressDetailsResponseArgs) ToAddressDetailsResponsePtrOutputWithContext(ctx context.Context) AddressDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsResponseOutput).ToAddressDetailsResponsePtrOutputWithContext(ctx)
}

// AddressDetailsResponsePtrInput is an input type that accepts AddressDetailsResponseArgs, AddressDetailsResponsePtr and AddressDetailsResponsePtrOutput values.
// You can construct a concrete instance of `AddressDetailsResponsePtrInput` via:
//
//          AddressDetailsResponseArgs{...}
//
//  or:
//
//          nil
type AddressDetailsResponsePtrInput interface {
	pulumi.Input

	ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput
	ToAddressDetailsResponsePtrOutputWithContext(context.Context) AddressDetailsResponsePtrOutput
}

type addressDetailsResponsePtrType AddressDetailsResponseArgs

func AddressDetailsResponsePtr(v *AddressDetailsResponseArgs) AddressDetailsResponsePtrInput {
	return (*addressDetailsResponsePtrType)(v)
}

func (*addressDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetailsResponse)(nil)).Elem()
}

func (i *addressDetailsResponsePtrType) ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput {
	return i.ToAddressDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *addressDetailsResponsePtrType) ToAddressDetailsResponsePtrOutputWithContext(ctx context.Context) AddressDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressDetailsResponsePtrOutput)
}

// Address details for an order.
type AddressDetailsResponseOutput struct{ *pulumi.OutputState }

func (AddressDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressDetailsResponse)(nil)).Elem()
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponseOutput() AddressDetailsResponseOutput {
	return o
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponseOutputWithContext(ctx context.Context) AddressDetailsResponseOutput {
	return o
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput {
	return o.ToAddressDetailsResponsePtrOutputWithContext(context.Background())
}

func (o AddressDetailsResponseOutput) ToAddressDetailsResponsePtrOutputWithContext(ctx context.Context) AddressDetailsResponsePtrOutput {
	return o.ApplyT(func(v AddressDetailsResponse) *AddressDetailsResponse {
		return &v
	}).(AddressDetailsResponsePtrOutput)
}

// Return shipping address
func (o AddressDetailsResponseOutput) ReturnAddress() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v AddressDetailsResponse) AddressPropertiesResponse { return v.ReturnAddress }).(AddressPropertiesResponseOutput)
}

// Customer address and contact details. It should be address resource
func (o AddressDetailsResponseOutput) ShippingAddress() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v AddressDetailsResponse) AddressPropertiesResponse { return v.ShippingAddress }).(AddressPropertiesResponseOutput)
}

type AddressDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressDetailsResponse)(nil)).Elem()
}

func (o AddressDetailsResponsePtrOutput) ToAddressDetailsResponsePtrOutput() AddressDetailsResponsePtrOutput {
	return o
}

func (o AddressDetailsResponsePtrOutput) ToAddressDetailsResponsePtrOutputWithContext(ctx context.Context) AddressDetailsResponsePtrOutput {
	return o
}

func (o AddressDetailsResponsePtrOutput) Elem() AddressDetailsResponseOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) AddressDetailsResponse { return *v }).(AddressDetailsResponseOutput)
}

// Return shipping address
func (o AddressDetailsResponsePtrOutput) ReturnAddress() AddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) *AddressPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ReturnAddress
	}).(AddressPropertiesResponsePtrOutput)
}

// Customer address and contact details. It should be address resource
func (o AddressDetailsResponsePtrOutput) ShippingAddress() AddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *AddressDetailsResponse) *AddressPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.ShippingAddress
	}).(AddressPropertiesResponsePtrOutput)
}

// Address Properties
type AddressProperties struct {
	// Contact details for the address
	ContactDetails ContactDetails `pulumi:"contactDetails"`
	// Shipping details for the address
	ShippingAddress *ShippingAddress `pulumi:"shippingAddress"`
}

// AddressPropertiesInput is an input type that accepts AddressPropertiesArgs and AddressPropertiesOutput values.
// You can construct a concrete instance of `AddressPropertiesInput` via:
//
//          AddressPropertiesArgs{...}
type AddressPropertiesInput interface {
	pulumi.Input

	ToAddressPropertiesOutput() AddressPropertiesOutput
	ToAddressPropertiesOutputWithContext(context.Context) AddressPropertiesOutput
}

// Address Properties
type AddressPropertiesArgs struct {
	// Contact details for the address
	ContactDetails ContactDetailsInput `pulumi:"contactDetails"`
	// Shipping details for the address
	ShippingAddress ShippingAddressPtrInput `pulumi:"shippingAddress"`
}

func (AddressPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressProperties)(nil)).Elem()
}

func (i AddressPropertiesArgs) ToAddressPropertiesOutput() AddressPropertiesOutput {
	return i.ToAddressPropertiesOutputWithContext(context.Background())
}

func (i AddressPropertiesArgs) ToAddressPropertiesOutputWithContext(ctx context.Context) AddressPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesOutput)
}

func (i AddressPropertiesArgs) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return i.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i AddressPropertiesArgs) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesOutput).ToAddressPropertiesPtrOutputWithContext(ctx)
}

// AddressPropertiesPtrInput is an input type that accepts AddressPropertiesArgs, AddressPropertiesPtr and AddressPropertiesPtrOutput values.
// You can construct a concrete instance of `AddressPropertiesPtrInput` via:
//
//          AddressPropertiesArgs{...}
//
//  or:
//
//          nil
type AddressPropertiesPtrInput interface {
	pulumi.Input

	ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput
	ToAddressPropertiesPtrOutputWithContext(context.Context) AddressPropertiesPtrOutput
}

type addressPropertiesPtrType AddressPropertiesArgs

func AddressPropertiesPtr(v *AddressPropertiesArgs) AddressPropertiesPtrInput {
	return (*addressPropertiesPtrType)(v)
}

func (*addressPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressProperties)(nil)).Elem()
}

func (i *addressPropertiesPtrType) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return i.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (i *addressPropertiesPtrType) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesPtrOutput)
}

// Address Properties
type AddressPropertiesOutput struct{ *pulumi.OutputState }

func (AddressPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressProperties)(nil)).Elem()
}

func (o AddressPropertiesOutput) ToAddressPropertiesOutput() AddressPropertiesOutput {
	return o
}

func (o AddressPropertiesOutput) ToAddressPropertiesOutputWithContext(ctx context.Context) AddressPropertiesOutput {
	return o
}

func (o AddressPropertiesOutput) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return o.ToAddressPropertiesPtrOutputWithContext(context.Background())
}

func (o AddressPropertiesOutput) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return o.ApplyT(func(v AddressProperties) *AddressProperties {
		return &v
	}).(AddressPropertiesPtrOutput)
}

// Contact details for the address
func (o AddressPropertiesOutput) ContactDetails() ContactDetailsOutput {
	return o.ApplyT(func(v AddressProperties) ContactDetails { return v.ContactDetails }).(ContactDetailsOutput)
}

// Shipping details for the address
func (o AddressPropertiesOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v AddressProperties) *ShippingAddress { return v.ShippingAddress }).(ShippingAddressPtrOutput)
}

type AddressPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AddressPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressProperties)(nil)).Elem()
}

func (o AddressPropertiesPtrOutput) ToAddressPropertiesPtrOutput() AddressPropertiesPtrOutput {
	return o
}

func (o AddressPropertiesPtrOutput) ToAddressPropertiesPtrOutputWithContext(ctx context.Context) AddressPropertiesPtrOutput {
	return o
}

func (o AddressPropertiesPtrOutput) Elem() AddressPropertiesOutput {
	return o.ApplyT(func(v *AddressProperties) AddressProperties { return *v }).(AddressPropertiesOutput)
}

// Contact details for the address
func (o AddressPropertiesPtrOutput) ContactDetails() ContactDetailsPtrOutput {
	return o.ApplyT(func(v *AddressProperties) *ContactDetails {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsPtrOutput)
}

// Shipping details for the address
func (o AddressPropertiesPtrOutput) ShippingAddress() ShippingAddressPtrOutput {
	return o.ApplyT(func(v *AddressProperties) *ShippingAddress {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressPtrOutput)
}

// Address Properties
type AddressPropertiesResponse struct {
	// Contact details for the address
	ContactDetails ContactDetailsResponse `pulumi:"contactDetails"`
	// Shipping details for the address
	ShippingAddress *ShippingAddressResponse `pulumi:"shippingAddress"`
}

// AddressPropertiesResponseInput is an input type that accepts AddressPropertiesResponseArgs and AddressPropertiesResponseOutput values.
// You can construct a concrete instance of `AddressPropertiesResponseInput` via:
//
//          AddressPropertiesResponseArgs{...}
type AddressPropertiesResponseInput interface {
	pulumi.Input

	ToAddressPropertiesResponseOutput() AddressPropertiesResponseOutput
	ToAddressPropertiesResponseOutputWithContext(context.Context) AddressPropertiesResponseOutput
}

// Address Properties
type AddressPropertiesResponseArgs struct {
	// Contact details for the address
	ContactDetails ContactDetailsResponseInput `pulumi:"contactDetails"`
	// Shipping details for the address
	ShippingAddress ShippingAddressResponsePtrInput `pulumi:"shippingAddress"`
}

func (AddressPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPropertiesResponse)(nil)).Elem()
}

func (i AddressPropertiesResponseArgs) ToAddressPropertiesResponseOutput() AddressPropertiesResponseOutput {
	return i.ToAddressPropertiesResponseOutputWithContext(context.Background())
}

func (i AddressPropertiesResponseArgs) ToAddressPropertiesResponseOutputWithContext(ctx context.Context) AddressPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesResponseOutput)
}

func (i AddressPropertiesResponseArgs) ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput {
	return i.ToAddressPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AddressPropertiesResponseArgs) ToAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) AddressPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesResponseOutput).ToAddressPropertiesResponsePtrOutputWithContext(ctx)
}

// AddressPropertiesResponsePtrInput is an input type that accepts AddressPropertiesResponseArgs, AddressPropertiesResponsePtr and AddressPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AddressPropertiesResponsePtrInput` via:
//
//          AddressPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AddressPropertiesResponsePtrInput interface {
	pulumi.Input

	ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput
	ToAddressPropertiesResponsePtrOutputWithContext(context.Context) AddressPropertiesResponsePtrOutput
}

type addressPropertiesResponsePtrType AddressPropertiesResponseArgs

func AddressPropertiesResponsePtr(v *AddressPropertiesResponseArgs) AddressPropertiesResponsePtrInput {
	return (*addressPropertiesResponsePtrType)(v)
}

func (*addressPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressPropertiesResponse)(nil)).Elem()
}

func (i *addressPropertiesResponsePtrType) ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput {
	return i.ToAddressPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *addressPropertiesResponsePtrType) ToAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) AddressPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressPropertiesResponsePtrOutput)
}

// Address Properties
type AddressPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AddressPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressPropertiesResponse)(nil)).Elem()
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponseOutput() AddressPropertiesResponseOutput {
	return o
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponseOutputWithContext(ctx context.Context) AddressPropertiesResponseOutput {
	return o
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput {
	return o.ToAddressPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AddressPropertiesResponseOutput) ToAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) AddressPropertiesResponsePtrOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) *AddressPropertiesResponse {
		return &v
	}).(AddressPropertiesResponsePtrOutput)
}

// Contact details for the address
func (o AddressPropertiesResponseOutput) ContactDetails() ContactDetailsResponseOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) ContactDetailsResponse { return v.ContactDetails }).(ContactDetailsResponseOutput)
}

// Shipping details for the address
func (o AddressPropertiesResponseOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v AddressPropertiesResponse) *ShippingAddressResponse { return v.ShippingAddress }).(ShippingAddressResponsePtrOutput)
}

type AddressPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressPropertiesResponse)(nil)).Elem()
}

func (o AddressPropertiesResponsePtrOutput) ToAddressPropertiesResponsePtrOutput() AddressPropertiesResponsePtrOutput {
	return o
}

func (o AddressPropertiesResponsePtrOutput) ToAddressPropertiesResponsePtrOutputWithContext(ctx context.Context) AddressPropertiesResponsePtrOutput {
	return o
}

func (o AddressPropertiesResponsePtrOutput) Elem() AddressPropertiesResponseOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) AddressPropertiesResponse { return *v }).(AddressPropertiesResponseOutput)
}

// Contact details for the address
func (o AddressPropertiesResponsePtrOutput) ContactDetails() ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *ContactDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ContactDetails
	}).(ContactDetailsResponsePtrOutput)
}

// Shipping details for the address
func (o AddressPropertiesResponsePtrOutput) ShippingAddress() ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v *AddressPropertiesResponse) *ShippingAddressResponse {
		if v == nil {
			return nil
		}
		return v.ShippingAddress
	}).(ShippingAddressResponsePtrOutput)
}

// Availability information of a product system.
type AvailabilityInformationResponse struct {
	// Current availability stage of the product. Availability stage
	AvailabilityStage string `pulumi:"availabilityStage"`
	// Reason why the product is disabled.
	DisabledReason string `pulumi:"disabledReason"`
	// Message for why the product is disabled.
	DisabledReasonMessage string `pulumi:"disabledReasonMessage"`
}

// AvailabilityInformationResponseInput is an input type that accepts AvailabilityInformationResponseArgs and AvailabilityInformationResponseOutput values.
// You can construct a concrete instance of `AvailabilityInformationResponseInput` via:
//
//          AvailabilityInformationResponseArgs{...}
type AvailabilityInformationResponseInput interface {
	pulumi.Input

	ToAvailabilityInformationResponseOutput() AvailabilityInformationResponseOutput
	ToAvailabilityInformationResponseOutputWithContext(context.Context) AvailabilityInformationResponseOutput
}

// Availability information of a product system.
type AvailabilityInformationResponseArgs struct {
	// Current availability stage of the product. Availability stage
	AvailabilityStage pulumi.StringInput `pulumi:"availabilityStage"`
	// Reason why the product is disabled.
	DisabledReason pulumi.StringInput `pulumi:"disabledReason"`
	// Message for why the product is disabled.
	DisabledReasonMessage pulumi.StringInput `pulumi:"disabledReasonMessage"`
}

func (AvailabilityInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityInformationResponse)(nil)).Elem()
}

func (i AvailabilityInformationResponseArgs) ToAvailabilityInformationResponseOutput() AvailabilityInformationResponseOutput {
	return i.ToAvailabilityInformationResponseOutputWithContext(context.Background())
}

func (i AvailabilityInformationResponseArgs) ToAvailabilityInformationResponseOutputWithContext(ctx context.Context) AvailabilityInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvailabilityInformationResponseOutput)
}

// Availability information of a product system.
type AvailabilityInformationResponseOutput struct{ *pulumi.OutputState }

func (AvailabilityInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvailabilityInformationResponse)(nil)).Elem()
}

func (o AvailabilityInformationResponseOutput) ToAvailabilityInformationResponseOutput() AvailabilityInformationResponseOutput {
	return o
}

func (o AvailabilityInformationResponseOutput) ToAvailabilityInformationResponseOutputWithContext(ctx context.Context) AvailabilityInformationResponseOutput {
	return o
}

// Current availability stage of the product. Availability stage
func (o AvailabilityInformationResponseOutput) AvailabilityStage() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.AvailabilityStage }).(pulumi.StringOutput)
}

// Reason why the product is disabled.
func (o AvailabilityInformationResponseOutput) DisabledReason() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.DisabledReason }).(pulumi.StringOutput)
}

// Message for why the product is disabled.
func (o AvailabilityInformationResponseOutput) DisabledReasonMessage() pulumi.StringOutput {
	return o.ApplyT(func(v AvailabilityInformationResponse) string { return v.DisabledReasonMessage }).(pulumi.StringOutput)
}

// Model to represent the billing cycle
type BillingModelResponse struct {
	// String to represent the billing model
	Model string `pulumi:"model"`
}

// BillingModelResponseInput is an input type that accepts BillingModelResponseArgs and BillingModelResponseOutput values.
// You can construct a concrete instance of `BillingModelResponseInput` via:
//
//          BillingModelResponseArgs{...}
type BillingModelResponseInput interface {
	pulumi.Input

	ToBillingModelResponseOutput() BillingModelResponseOutput
	ToBillingModelResponseOutputWithContext(context.Context) BillingModelResponseOutput
}

// Model to represent the billing cycle
type BillingModelResponseArgs struct {
	// String to represent the billing model
	Model pulumi.StringInput `pulumi:"model"`
}

func (BillingModelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingModelResponse)(nil)).Elem()
}

func (i BillingModelResponseArgs) ToBillingModelResponseOutput() BillingModelResponseOutput {
	return i.ToBillingModelResponseOutputWithContext(context.Background())
}

func (i BillingModelResponseArgs) ToBillingModelResponseOutputWithContext(ctx context.Context) BillingModelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingModelResponseOutput)
}

// Model to represent the billing cycle
type BillingModelResponseOutput struct{ *pulumi.OutputState }

func (BillingModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BillingModelResponse)(nil)).Elem()
}

func (o BillingModelResponseOutput) ToBillingModelResponseOutput() BillingModelResponseOutput {
	return o
}

func (o BillingModelResponseOutput) ToBillingModelResponseOutputWithContext(ctx context.Context) BillingModelResponseOutput {
	return o
}

// String to represent the billing model
func (o BillingModelResponseOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v BillingModelResponse) string { return v.Model }).(pulumi.StringOutput)
}

type CloudErrorResponse struct {
	AdditionalInfo []AdditionalErrorInfoResponse `pulumi:"additionalInfo"`
	Code           *string                       `pulumi:"code"`
	Details        []CloudErrorResponse          `pulumi:"details"`
	Message        *string                       `pulumi:"message"`
	Target         *string                       `pulumi:"target"`
}

// CloudErrorResponseInput is an input type that accepts CloudErrorResponseArgs and CloudErrorResponseOutput values.
// You can construct a concrete instance of `CloudErrorResponseInput` via:
//
//          CloudErrorResponseArgs{...}
type CloudErrorResponseInput interface {
	pulumi.Input

	ToCloudErrorResponseOutput() CloudErrorResponseOutput
	ToCloudErrorResponseOutputWithContext(context.Context) CloudErrorResponseOutput
}

type CloudErrorResponseArgs struct {
	AdditionalInfo AdditionalErrorInfoResponseArrayInput `pulumi:"additionalInfo"`
	Code           pulumi.StringPtrInput                 `pulumi:"code"`
	Details        CloudErrorResponseArrayInput          `pulumi:"details"`
	Message        pulumi.StringPtrInput                 `pulumi:"message"`
	Target         pulumi.StringPtrInput                 `pulumi:"target"`
}

func (CloudErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (i CloudErrorResponseArgs) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return i.ToCloudErrorResponseOutputWithContext(context.Background())
}

func (i CloudErrorResponseArgs) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseOutput)
}

func (i CloudErrorResponseArgs) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return i.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (i CloudErrorResponseArgs) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseOutput).ToCloudErrorResponsePtrOutputWithContext(ctx)
}

// CloudErrorResponsePtrInput is an input type that accepts CloudErrorResponseArgs, CloudErrorResponsePtr and CloudErrorResponsePtrOutput values.
// You can construct a concrete instance of `CloudErrorResponsePtrInput` via:
//
//          CloudErrorResponseArgs{...}
//
//  or:
//
//          nil
type CloudErrorResponsePtrInput interface {
	pulumi.Input

	ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput
	ToCloudErrorResponsePtrOutputWithContext(context.Context) CloudErrorResponsePtrOutput
}

type cloudErrorResponsePtrType CloudErrorResponseArgs

func CloudErrorResponsePtr(v *CloudErrorResponseArgs) CloudErrorResponsePtrInput {
	return (*cloudErrorResponsePtrType)(v)
}

func (*cloudErrorResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorResponse)(nil)).Elem()
}

func (i *cloudErrorResponsePtrType) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return i.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (i *cloudErrorResponsePtrType) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponsePtrOutput)
}

// CloudErrorResponseArrayInput is an input type that accepts CloudErrorResponseArray and CloudErrorResponseArrayOutput values.
// You can construct a concrete instance of `CloudErrorResponseArrayInput` via:
//
//          CloudErrorResponseArray{ CloudErrorResponseArgs{...} }
type CloudErrorResponseArrayInput interface {
	pulumi.Input

	ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput
	ToCloudErrorResponseArrayOutputWithContext(context.Context) CloudErrorResponseArrayOutput
}

type CloudErrorResponseArray []CloudErrorResponseInput

func (CloudErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (i CloudErrorResponseArray) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return i.ToCloudErrorResponseArrayOutputWithContext(context.Background())
}

func (i CloudErrorResponseArray) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorResponseArrayOutput)
}

type CloudErrorResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutput() CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponseOutputWithContext(ctx context.Context) CloudErrorResponseOutput {
	return o
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o.ToCloudErrorResponsePtrOutputWithContext(context.Background())
}

func (o CloudErrorResponseOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *CloudErrorResponse {
		return &v
	}).(CloudErrorResponsePtrOutput)
}
func (o CloudErrorResponseOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []AdditionalErrorInfoResponse { return v.AdditionalInfo }).(AdditionalErrorInfoResponseArrayOutput)
}

func (o CloudErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o CloudErrorResponseOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorResponse) []CloudErrorResponse { return v.Details }).(CloudErrorResponseArrayOutput)
}

func (o CloudErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o CloudErrorResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutput() CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) ToCloudErrorResponsePtrOutputWithContext(ctx context.Context) CloudErrorResponsePtrOutput {
	return o
}

func (o CloudErrorResponsePtrOutput) Elem() CloudErrorResponseOutput {
	return o.ApplyT(func(v *CloudErrorResponse) CloudErrorResponse { return *v }).(CloudErrorResponseOutput)
}

func (o CloudErrorResponsePtrOutput) AdditionalInfo() AdditionalErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []AdditionalErrorInfoResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalInfo
	}).(AdditionalErrorInfoResponseArrayOutput)
}

func (o CloudErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o CloudErrorResponsePtrOutput) Details() CloudErrorResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorResponse) []CloudErrorResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorResponseArrayOutput)
}

func (o CloudErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o CloudErrorResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorResponse)(nil)).Elem()
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutput() CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) ToCloudErrorResponseArrayOutputWithContext(ctx context.Context) CloudErrorResponseArrayOutput {
	return o
}

func (o CloudErrorResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorResponse {
		return vs[0].([]CloudErrorResponse)[vs[1].(int)]
	}).(CloudErrorResponseOutput)
}

// Configuration filters
type ConfigurationFilters struct {
	// Filters specific to product
	FilterableProperty *FilterableProperty `pulumi:"filterableProperty"`
	// Product hierarchy information
	HierarchyInformation *HierarchyInformation `pulumi:"hierarchyInformation"`
}

// ConfigurationFiltersInput is an input type that accepts ConfigurationFiltersArgs and ConfigurationFiltersOutput values.
// You can construct a concrete instance of `ConfigurationFiltersInput` via:
//
//          ConfigurationFiltersArgs{...}
type ConfigurationFiltersInput interface {
	pulumi.Input

	ToConfigurationFiltersOutput() ConfigurationFiltersOutput
	ToConfigurationFiltersOutputWithContext(context.Context) ConfigurationFiltersOutput
}

// Configuration filters
type ConfigurationFiltersArgs struct {
	// Filters specific to product
	FilterableProperty FilterablePropertyPtrInput `pulumi:"filterableProperty"`
	// Product hierarchy information
	HierarchyInformation HierarchyInformationPtrInput `pulumi:"hierarchyInformation"`
}

func (ConfigurationFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFilters)(nil)).Elem()
}

func (i ConfigurationFiltersArgs) ToConfigurationFiltersOutput() ConfigurationFiltersOutput {
	return i.ToConfigurationFiltersOutputWithContext(context.Background())
}

func (i ConfigurationFiltersArgs) ToConfigurationFiltersOutputWithContext(ctx context.Context) ConfigurationFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFiltersOutput)
}

// ConfigurationFiltersArrayInput is an input type that accepts ConfigurationFiltersArray and ConfigurationFiltersArrayOutput values.
// You can construct a concrete instance of `ConfigurationFiltersArrayInput` via:
//
//          ConfigurationFiltersArray{ ConfigurationFiltersArgs{...} }
type ConfigurationFiltersArrayInput interface {
	pulumi.Input

	ToConfigurationFiltersArrayOutput() ConfigurationFiltersArrayOutput
	ToConfigurationFiltersArrayOutputWithContext(context.Context) ConfigurationFiltersArrayOutput
}

type ConfigurationFiltersArray []ConfigurationFiltersInput

func (ConfigurationFiltersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFilters)(nil)).Elem()
}

func (i ConfigurationFiltersArray) ToConfigurationFiltersArrayOutput() ConfigurationFiltersArrayOutput {
	return i.ToConfigurationFiltersArrayOutputWithContext(context.Background())
}

func (i ConfigurationFiltersArray) ToConfigurationFiltersArrayOutputWithContext(ctx context.Context) ConfigurationFiltersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationFiltersArrayOutput)
}

// Configuration filters
type ConfigurationFiltersOutput struct{ *pulumi.OutputState }

func (ConfigurationFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationFilters)(nil)).Elem()
}

func (o ConfigurationFiltersOutput) ToConfigurationFiltersOutput() ConfigurationFiltersOutput {
	return o
}

func (o ConfigurationFiltersOutput) ToConfigurationFiltersOutputWithContext(ctx context.Context) ConfigurationFiltersOutput {
	return o
}

// Filters specific to product
func (o ConfigurationFiltersOutput) FilterableProperty() FilterablePropertyPtrOutput {
	return o.ApplyT(func(v ConfigurationFilters) *FilterableProperty { return v.FilterableProperty }).(FilterablePropertyPtrOutput)
}

// Product hierarchy information
func (o ConfigurationFiltersOutput) HierarchyInformation() HierarchyInformationPtrOutput {
	return o.ApplyT(func(v ConfigurationFilters) *HierarchyInformation { return v.HierarchyInformation }).(HierarchyInformationPtrOutput)
}

type ConfigurationFiltersArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationFiltersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationFilters)(nil)).Elem()
}

func (o ConfigurationFiltersArrayOutput) ToConfigurationFiltersArrayOutput() ConfigurationFiltersArrayOutput {
	return o
}

func (o ConfigurationFiltersArrayOutput) ToConfigurationFiltersArrayOutputWithContext(ctx context.Context) ConfigurationFiltersArrayOutput {
	return o
}

func (o ConfigurationFiltersArrayOutput) Index(i pulumi.IntInput) ConfigurationFiltersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationFilters {
		return vs[0].([]ConfigurationFilters)[vs[1].(int)]
	}).(ConfigurationFiltersOutput)
}

// Configuration object.
type ConfigurationResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// Specifications of the configuration
	Specifications []SpecificationResponse `pulumi:"specifications"`
}

// ConfigurationResponseInput is an input type that accepts ConfigurationResponseArgs and ConfigurationResponseOutput values.
// You can construct a concrete instance of `ConfigurationResponseInput` via:
//
//          ConfigurationResponseArgs{...}
type ConfigurationResponseInput interface {
	pulumi.Input

	ToConfigurationResponseOutput() ConfigurationResponseOutput
	ToConfigurationResponseOutputWithContext(context.Context) ConfigurationResponseOutput
}

// Configuration object.
type ConfigurationResponseArgs struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponseInput `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponseInput `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponseInput `pulumi:"description"`
	// Display Name for the product system.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties FilterablePropertyResponseArrayInput `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponseInput `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation ImageInformationResponseArrayInput `pulumi:"imageInformation"`
	// Specifications of the configuration
	Specifications SpecificationResponseArrayInput `pulumi:"specifications"`
}

func (ConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationResponse)(nil)).Elem()
}

func (i ConfigurationResponseArgs) ToConfigurationResponseOutput() ConfigurationResponseOutput {
	return i.ToConfigurationResponseOutputWithContext(context.Background())
}

func (i ConfigurationResponseArgs) ToConfigurationResponseOutputWithContext(ctx context.Context) ConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationResponseOutput)
}

// ConfigurationResponseArrayInput is an input type that accepts ConfigurationResponseArray and ConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ConfigurationResponseArrayInput` via:
//
//          ConfigurationResponseArray{ ConfigurationResponseArgs{...} }
type ConfigurationResponseArrayInput interface {
	pulumi.Input

	ToConfigurationResponseArrayOutput() ConfigurationResponseArrayOutput
	ToConfigurationResponseArrayOutputWithContext(context.Context) ConfigurationResponseArrayOutput
}

type ConfigurationResponseArray []ConfigurationResponseInput

func (ConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationResponse)(nil)).Elem()
}

func (i ConfigurationResponseArray) ToConfigurationResponseArrayOutput() ConfigurationResponseArrayOutput {
	return i.ToConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ConfigurationResponseArray) ToConfigurationResponseArrayOutputWithContext(ctx context.Context) ConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationResponseArrayOutput)
}

// Configuration object.
type ConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutput() ConfigurationResponseOutput {
	return o
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutputWithContext(ctx context.Context) ConfigurationResponseOutput {
	return o
}

// Availability information of the product system.
func (o ConfigurationResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Cost information for the product system.
func (o ConfigurationResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ConfigurationResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ConfigurationResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// list of filters supported for a product
func (o ConfigurationResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// Hierarchy information of the product system.
func (o ConfigurationResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ConfigurationResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ConfigurationResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// Specifications of the configuration
func (o ConfigurationResponseOutput) Specifications() SpecificationResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []SpecificationResponse { return v.Specifications }).(SpecificationResponseArrayOutput)
}

type ConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponseArrayOutput) ToConfigurationResponseArrayOutput() ConfigurationResponseArrayOutput {
	return o
}

func (o ConfigurationResponseArrayOutput) ToConfigurationResponseArrayOutputWithContext(ctx context.Context) ConfigurationResponseArrayOutput {
	return o
}

func (o ConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationResponse {
		return vs[0].([]ConfigurationResponse)[vs[1].(int)]
	}).(ConfigurationResponseOutput)
}

// Contact Details.
type ContactDetails struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsInput is an input type that accepts ContactDetailsArgs and ContactDetailsOutput values.
// You can construct a concrete instance of `ContactDetailsInput` via:
//
//          ContactDetailsArgs{...}
type ContactDetailsInput interface {
	pulumi.Input

	ToContactDetailsOutput() ContactDetailsOutput
	ToContactDetailsOutputWithContext(context.Context) ContactDetailsOutput
}

// Contact Details.
type ContactDetailsArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (i ContactDetailsArgs) ToContactDetailsOutput() ContactDetailsOutput {
	return i.ToContactDetailsOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput)
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i ContactDetailsArgs) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsOutput).ToContactDetailsPtrOutputWithContext(ctx)
}

// ContactDetailsPtrInput is an input type that accepts ContactDetailsArgs, ContactDetailsPtr and ContactDetailsPtrOutput values.
// You can construct a concrete instance of `ContactDetailsPtrInput` via:
//
//          ContactDetailsArgs{...}
//
//  or:
//
//          nil
type ContactDetailsPtrInput interface {
	pulumi.Input

	ToContactDetailsPtrOutput() ContactDetailsPtrOutput
	ToContactDetailsPtrOutputWithContext(context.Context) ContactDetailsPtrOutput
}

type contactDetailsPtrType ContactDetailsArgs

func ContactDetailsPtr(v *ContactDetailsArgs) ContactDetailsPtrInput {
	return (*contactDetailsPtrType)(v)
}

func (*contactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return i.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (i *contactDetailsPtrType) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsPtrOutput)
}

// Contact Details.
type ContactDetailsOutput struct{ *pulumi.OutputState }

func (ContactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetails)(nil)).Elem()
}

func (o ContactDetailsOutput) ToContactDetailsOutput() ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsOutputWithContext(ctx context.Context) ContactDetailsOutput {
	return o
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o.ToContactDetailsPtrOutputWithContext(context.Background())
}

func (o ContactDetailsOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o.ApplyT(func(v ContactDetails) *ContactDetails {
		return &v
	}).(ContactDetailsPtrOutput)
}

// Contact name of the person.
func (o ContactDetailsOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.ContactName }).(pulumi.StringOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetails) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetails) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsPtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetails)(nil)).Elem()
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutput() ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) ToContactDetailsPtrOutputWithContext(ctx context.Context) ContactDetailsPtrOutput {
	return o
}

func (o ContactDetailsPtrOutput) Elem() ContactDetailsOutput {
	return o.ApplyT(func(v *ContactDetails) ContactDetails { return *v }).(ContactDetailsOutput)
}

// Contact name of the person.
func (o ContactDetailsPtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsPtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsPtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetails) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Contact Details.
type ContactDetailsResponse struct {
	// Contact name of the person.
	ContactName string `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile *string `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone string `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension *string `pulumi:"phoneExtension"`
}

// ContactDetailsResponseInput is an input type that accepts ContactDetailsResponseArgs and ContactDetailsResponseOutput values.
// You can construct a concrete instance of `ContactDetailsResponseInput` via:
//
//          ContactDetailsResponseArgs{...}
type ContactDetailsResponseInput interface {
	pulumi.Input

	ToContactDetailsResponseOutput() ContactDetailsResponseOutput
	ToContactDetailsResponseOutputWithContext(context.Context) ContactDetailsResponseOutput
}

// Contact Details.
type ContactDetailsResponseArgs struct {
	// Contact name of the person.
	ContactName pulumi.StringInput `pulumi:"contactName"`
	// Mobile number of the contact person.
	Mobile pulumi.StringPtrInput `pulumi:"mobile"`
	// Phone number of the contact person.
	Phone pulumi.StringInput `pulumi:"phone"`
	// Phone extension number of the contact person.
	PhoneExtension pulumi.StringPtrInput `pulumi:"phoneExtension"`
}

func (ContactDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return i.ToContactDetailsResponseOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput)
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ContactDetailsResponseArgs) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponseOutput).ToContactDetailsResponsePtrOutputWithContext(ctx)
}

// ContactDetailsResponsePtrInput is an input type that accepts ContactDetailsResponseArgs, ContactDetailsResponsePtr and ContactDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ContactDetailsResponsePtrInput` via:
//
//          ContactDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ContactDetailsResponsePtrInput interface {
	pulumi.Input

	ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput
	ToContactDetailsResponsePtrOutputWithContext(context.Context) ContactDetailsResponsePtrOutput
}

type contactDetailsResponsePtrType ContactDetailsResponseArgs

func ContactDetailsResponsePtr(v *ContactDetailsResponseArgs) ContactDetailsResponsePtrInput {
	return (*contactDetailsResponsePtrType)(v)
}

func (*contactDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return i.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *contactDetailsResponsePtrType) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactDetailsResponsePtrOutput)
}

// Contact Details.
type ContactDetailsResponseOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutput() ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponseOutputWithContext(ctx context.Context) ContactDetailsResponseOutput {
	return o
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o.ToContactDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ContactDetailsResponseOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *ContactDetailsResponse {
		return &v
	}).(ContactDetailsResponsePtrOutput)
}

// Contact name of the person.
func (o ContactDetailsResponseOutput) ContactName() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.ContactName }).(pulumi.StringOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponseOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.Mobile }).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponseOutput) Phone() pulumi.StringOutput {
	return o.ApplyT(func(v ContactDetailsResponse) string { return v.Phone }).(pulumi.StringOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponseOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactDetailsResponse) *string { return v.PhoneExtension }).(pulumi.StringPtrOutput)
}

type ContactDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ContactDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactDetailsResponse)(nil)).Elem()
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutput() ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) ToContactDetailsResponsePtrOutputWithContext(ctx context.Context) ContactDetailsResponsePtrOutput {
	return o
}

func (o ContactDetailsResponsePtrOutput) Elem() ContactDetailsResponseOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) ContactDetailsResponse { return *v }).(ContactDetailsResponseOutput)
}

// Contact name of the person.
func (o ContactDetailsResponsePtrOutput) ContactName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ContactName
	}).(pulumi.StringPtrOutput)
}

// Mobile number of the contact person.
func (o ContactDetailsResponsePtrOutput) Mobile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mobile
	}).(pulumi.StringPtrOutput)
}

// Phone number of the contact person.
func (o ContactDetailsResponsePtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Phone
	}).(pulumi.StringPtrOutput)
}

// Phone extension number of the contact person.
func (o ContactDetailsResponsePtrOutput) PhoneExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhoneExtension
	}).(pulumi.StringPtrOutput)
}

// Cost information for the product system
type CostInformationResponse struct {
	// Details on the various billing aspects for the product system.
	MeterDetails []MeterDetailsResponse `pulumi:"meterDetails"`
	// Primary meter i.e. basic billing type for the product system.
	PrimaryMeterType string `pulumi:"primaryMeterType"`
}

// CostInformationResponseInput is an input type that accepts CostInformationResponseArgs and CostInformationResponseOutput values.
// You can construct a concrete instance of `CostInformationResponseInput` via:
//
//          CostInformationResponseArgs{...}
type CostInformationResponseInput interface {
	pulumi.Input

	ToCostInformationResponseOutput() CostInformationResponseOutput
	ToCostInformationResponseOutputWithContext(context.Context) CostInformationResponseOutput
}

// Cost information for the product system
type CostInformationResponseArgs struct {
	// Details on the various billing aspects for the product system.
	MeterDetails MeterDetailsResponseArrayInput `pulumi:"meterDetails"`
	// Primary meter i.e. basic billing type for the product system.
	PrimaryMeterType pulumi.StringInput `pulumi:"primaryMeterType"`
}

func (CostInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CostInformationResponse)(nil)).Elem()
}

func (i CostInformationResponseArgs) ToCostInformationResponseOutput() CostInformationResponseOutput {
	return i.ToCostInformationResponseOutputWithContext(context.Background())
}

func (i CostInformationResponseArgs) ToCostInformationResponseOutputWithContext(ctx context.Context) CostInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CostInformationResponseOutput)
}

// Cost information for the product system
type CostInformationResponseOutput struct{ *pulumi.OutputState }

func (CostInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CostInformationResponse)(nil)).Elem()
}

func (o CostInformationResponseOutput) ToCostInformationResponseOutput() CostInformationResponseOutput {
	return o
}

func (o CostInformationResponseOutput) ToCostInformationResponseOutputWithContext(ctx context.Context) CostInformationResponseOutput {
	return o
}

// Details on the various billing aspects for the product system.
func (o CostInformationResponseOutput) MeterDetails() MeterDetailsResponseArrayOutput {
	return o.ApplyT(func(v CostInformationResponse) []MeterDetailsResponse { return v.MeterDetails }).(MeterDetailsResponseArrayOutput)
}

// Primary meter i.e. basic billing type for the product system.
func (o CostInformationResponseOutput) PrimaryMeterType() pulumi.StringOutput {
	return o.ApplyT(func(v CostInformationResponse) string { return v.PrimaryMeterType }).(pulumi.StringOutput)
}

type CustomerSubscriptionDetails struct {
	// Location placement Id of a subscription
	LocationPlacementId *string `pulumi:"locationPlacementId"`
	// Quota ID of a subscription
	QuotaId string `pulumi:"quotaId"`
	// List of registered feature flags for subscription
	RegisteredFeatures []CustomerSubscriptionRegisteredFeatures `pulumi:"registeredFeatures"`
}

// CustomerSubscriptionDetailsInput is an input type that accepts CustomerSubscriptionDetailsArgs and CustomerSubscriptionDetailsOutput values.
// You can construct a concrete instance of `CustomerSubscriptionDetailsInput` via:
//
//          CustomerSubscriptionDetailsArgs{...}
type CustomerSubscriptionDetailsInput interface {
	pulumi.Input

	ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput
	ToCustomerSubscriptionDetailsOutputWithContext(context.Context) CustomerSubscriptionDetailsOutput
}

type CustomerSubscriptionDetailsArgs struct {
	// Location placement Id of a subscription
	LocationPlacementId pulumi.StringPtrInput `pulumi:"locationPlacementId"`
	// Quota ID of a subscription
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// List of registered feature flags for subscription
	RegisteredFeatures CustomerSubscriptionRegisteredFeaturesArrayInput `pulumi:"registeredFeatures"`
}

func (CustomerSubscriptionDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionDetails)(nil)).Elem()
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput {
	return i.ToCustomerSubscriptionDetailsOutputWithContext(context.Background())
}

func (i CustomerSubscriptionDetailsArgs) ToCustomerSubscriptionDetailsOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionDetailsOutput)
}

type CustomerSubscriptionDetailsOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionDetails)(nil)).Elem()
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsOutput() CustomerSubscriptionDetailsOutput {
	return o
}

func (o CustomerSubscriptionDetailsOutput) ToCustomerSubscriptionDetailsOutputWithContext(ctx context.Context) CustomerSubscriptionDetailsOutput {
	return o
}

// Location placement Id of a subscription
func (o CustomerSubscriptionDetailsOutput) LocationPlacementId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) *string { return v.LocationPlacementId }).(pulumi.StringPtrOutput)
}

// Quota ID of a subscription
func (o CustomerSubscriptionDetailsOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) string { return v.QuotaId }).(pulumi.StringOutput)
}

// List of registered feature flags for subscription
func (o CustomerSubscriptionDetailsOutput) RegisteredFeatures() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o.ApplyT(func(v CustomerSubscriptionDetails) []CustomerSubscriptionRegisteredFeatures {
		return v.RegisteredFeatures
	}).(CustomerSubscriptionRegisteredFeaturesArrayOutput)
}

type CustomerSubscriptionRegisteredFeatures struct {
	// Name of subscription registered feature
	Name *string `pulumi:"name"`
	// State of subscription registered feature
	State *string `pulumi:"state"`
}

// CustomerSubscriptionRegisteredFeaturesInput is an input type that accepts CustomerSubscriptionRegisteredFeaturesArgs and CustomerSubscriptionRegisteredFeaturesOutput values.
// You can construct a concrete instance of `CustomerSubscriptionRegisteredFeaturesInput` via:
//
//          CustomerSubscriptionRegisteredFeaturesArgs{...}
type CustomerSubscriptionRegisteredFeaturesInput interface {
	pulumi.Input

	ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput
	ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(context.Context) CustomerSubscriptionRegisteredFeaturesOutput
}

type CustomerSubscriptionRegisteredFeaturesArgs struct {
	// Name of subscription registered feature
	Name pulumi.StringPtrInput `pulumi:"name"`
	// State of subscription registered feature
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (CustomerSubscriptionRegisteredFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i CustomerSubscriptionRegisteredFeaturesArgs) ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput {
	return i.ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(context.Background())
}

func (i CustomerSubscriptionRegisteredFeaturesArgs) ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionRegisteredFeaturesOutput)
}

// CustomerSubscriptionRegisteredFeaturesArrayInput is an input type that accepts CustomerSubscriptionRegisteredFeaturesArray and CustomerSubscriptionRegisteredFeaturesArrayOutput values.
// You can construct a concrete instance of `CustomerSubscriptionRegisteredFeaturesArrayInput` via:
//
//          CustomerSubscriptionRegisteredFeaturesArray{ CustomerSubscriptionRegisteredFeaturesArgs{...} }
type CustomerSubscriptionRegisteredFeaturesArrayInput interface {
	pulumi.Input

	ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput
	ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput
}

type CustomerSubscriptionRegisteredFeaturesArray []CustomerSubscriptionRegisteredFeaturesInput

func (CustomerSubscriptionRegisteredFeaturesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (i CustomerSubscriptionRegisteredFeaturesArray) ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return i.ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(context.Background())
}

func (i CustomerSubscriptionRegisteredFeaturesArray) ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSubscriptionRegisteredFeaturesArrayOutput)
}

type CustomerSubscriptionRegisteredFeaturesOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionRegisteredFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o CustomerSubscriptionRegisteredFeaturesOutput) ToCustomerSubscriptionRegisteredFeaturesOutput() CustomerSubscriptionRegisteredFeaturesOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesOutput) ToCustomerSubscriptionRegisteredFeaturesOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesOutput {
	return o
}

// Name of subscription registered feature
func (o CustomerSubscriptionRegisteredFeaturesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionRegisteredFeatures) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// State of subscription registered feature
func (o CustomerSubscriptionRegisteredFeaturesOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSubscriptionRegisteredFeatures) *string { return v.State }).(pulumi.StringPtrOutput)
}

type CustomerSubscriptionRegisteredFeaturesArrayOutput struct{ *pulumi.OutputState }

func (CustomerSubscriptionRegisteredFeaturesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomerSubscriptionRegisteredFeatures)(nil)).Elem()
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) ToCustomerSubscriptionRegisteredFeaturesArrayOutput() CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) ToCustomerSubscriptionRegisteredFeaturesArrayOutputWithContext(ctx context.Context) CustomerSubscriptionRegisteredFeaturesArrayOutput {
	return o
}

func (o CustomerSubscriptionRegisteredFeaturesArrayOutput) Index(i pulumi.IntInput) CustomerSubscriptionRegisteredFeaturesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomerSubscriptionRegisteredFeatures {
		return vs[0].([]CustomerSubscriptionRegisteredFeatures)[vs[1].(int)]
	}).(CustomerSubscriptionRegisteredFeaturesOutput)
}

// Description related properties of a product system.
type DescriptionResponse struct {
	// Attributes for the product system.
	Attributes []string `pulumi:"attributes"`
	// Type of description.
	DescriptionType string `pulumi:"descriptionType"`
	// Keywords for the product system.
	Keywords []string `pulumi:"keywords"`
	// Links for the product system.
	Links []LinkResponse `pulumi:"links"`
	// Long description of the product system.
	LongDescription string `pulumi:"longDescription"`
	// Short description of the product system.
	ShortDescription string `pulumi:"shortDescription"`
}

// DescriptionResponseInput is an input type that accepts DescriptionResponseArgs and DescriptionResponseOutput values.
// You can construct a concrete instance of `DescriptionResponseInput` via:
//
//          DescriptionResponseArgs{...}
type DescriptionResponseInput interface {
	pulumi.Input

	ToDescriptionResponseOutput() DescriptionResponseOutput
	ToDescriptionResponseOutputWithContext(context.Context) DescriptionResponseOutput
}

// Description related properties of a product system.
type DescriptionResponseArgs struct {
	// Attributes for the product system.
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	// Type of description.
	DescriptionType pulumi.StringInput `pulumi:"descriptionType"`
	// Keywords for the product system.
	Keywords pulumi.StringArrayInput `pulumi:"keywords"`
	// Links for the product system.
	Links LinkResponseArrayInput `pulumi:"links"`
	// Long description of the product system.
	LongDescription pulumi.StringInput `pulumi:"longDescription"`
	// Short description of the product system.
	ShortDescription pulumi.StringInput `pulumi:"shortDescription"`
}

func (DescriptionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DescriptionResponse)(nil)).Elem()
}

func (i DescriptionResponseArgs) ToDescriptionResponseOutput() DescriptionResponseOutput {
	return i.ToDescriptionResponseOutputWithContext(context.Background())
}

func (i DescriptionResponseArgs) ToDescriptionResponseOutputWithContext(ctx context.Context) DescriptionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DescriptionResponseOutput)
}

// Description related properties of a product system.
type DescriptionResponseOutput struct{ *pulumi.OutputState }

func (DescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DescriptionResponse)(nil)).Elem()
}

func (o DescriptionResponseOutput) ToDescriptionResponseOutput() DescriptionResponseOutput {
	return o
}

func (o DescriptionResponseOutput) ToDescriptionResponseOutputWithContext(ctx context.Context) DescriptionResponseOutput {
	return o
}

// Attributes for the product system.
func (o DescriptionResponseOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// Type of description.
func (o DescriptionResponseOutput) DescriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.DescriptionType }).(pulumi.StringOutput)
}

// Keywords for the product system.
func (o DescriptionResponseOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []string { return v.Keywords }).(pulumi.StringArrayOutput)
}

// Links for the product system.
func (o DescriptionResponseOutput) Links() LinkResponseArrayOutput {
	return o.ApplyT(func(v DescriptionResponse) []LinkResponse { return v.Links }).(LinkResponseArrayOutput)
}

// Long description of the product system.
func (o DescriptionResponseOutput) LongDescription() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.LongDescription }).(pulumi.StringOutput)
}

// Short description of the product system.
func (o DescriptionResponseOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v DescriptionResponse) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// Device details.
type DeviceDetailsResponse struct {
	// Package Shipping details
	DeviceHistory []string `pulumi:"deviceHistory"`
	// device serial number
	SerialNumber string `pulumi:"serialNumber"`
}

// DeviceDetailsResponseInput is an input type that accepts DeviceDetailsResponseArgs and DeviceDetailsResponseOutput values.
// You can construct a concrete instance of `DeviceDetailsResponseInput` via:
//
//          DeviceDetailsResponseArgs{...}
type DeviceDetailsResponseInput interface {
	pulumi.Input

	ToDeviceDetailsResponseOutput() DeviceDetailsResponseOutput
	ToDeviceDetailsResponseOutputWithContext(context.Context) DeviceDetailsResponseOutput
}

// Device details.
type DeviceDetailsResponseArgs struct {
	// Package Shipping details
	DeviceHistory pulumi.StringArrayInput `pulumi:"deviceHistory"`
	// device serial number
	SerialNumber pulumi.StringInput `pulumi:"serialNumber"`
}

func (DeviceDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDetailsResponse)(nil)).Elem()
}

func (i DeviceDetailsResponseArgs) ToDeviceDetailsResponseOutput() DeviceDetailsResponseOutput {
	return i.ToDeviceDetailsResponseOutputWithContext(context.Background())
}

func (i DeviceDetailsResponseArgs) ToDeviceDetailsResponseOutputWithContext(ctx context.Context) DeviceDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceDetailsResponseOutput)
}

// DeviceDetailsResponseArrayInput is an input type that accepts DeviceDetailsResponseArray and DeviceDetailsResponseArrayOutput values.
// You can construct a concrete instance of `DeviceDetailsResponseArrayInput` via:
//
//          DeviceDetailsResponseArray{ DeviceDetailsResponseArgs{...} }
type DeviceDetailsResponseArrayInput interface {
	pulumi.Input

	ToDeviceDetailsResponseArrayOutput() DeviceDetailsResponseArrayOutput
	ToDeviceDetailsResponseArrayOutputWithContext(context.Context) DeviceDetailsResponseArrayOutput
}

type DeviceDetailsResponseArray []DeviceDetailsResponseInput

func (DeviceDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceDetailsResponse)(nil)).Elem()
}

func (i DeviceDetailsResponseArray) ToDeviceDetailsResponseArrayOutput() DeviceDetailsResponseArrayOutput {
	return i.ToDeviceDetailsResponseArrayOutputWithContext(context.Background())
}

func (i DeviceDetailsResponseArray) ToDeviceDetailsResponseArrayOutputWithContext(ctx context.Context) DeviceDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceDetailsResponseArrayOutput)
}

// Device details.
type DeviceDetailsResponseOutput struct{ *pulumi.OutputState }

func (DeviceDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceDetailsResponse)(nil)).Elem()
}

func (o DeviceDetailsResponseOutput) ToDeviceDetailsResponseOutput() DeviceDetailsResponseOutput {
	return o
}

func (o DeviceDetailsResponseOutput) ToDeviceDetailsResponseOutputWithContext(ctx context.Context) DeviceDetailsResponseOutput {
	return o
}

// Package Shipping details
func (o DeviceDetailsResponseOutput) DeviceHistory() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) []string { return v.DeviceHistory }).(pulumi.StringArrayOutput)
}

// device serial number
func (o DeviceDetailsResponseOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceDetailsResponse) string { return v.SerialNumber }).(pulumi.StringOutput)
}

type DeviceDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (DeviceDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceDetailsResponse)(nil)).Elem()
}

func (o DeviceDetailsResponseArrayOutput) ToDeviceDetailsResponseArrayOutput() DeviceDetailsResponseArrayOutput {
	return o
}

func (o DeviceDetailsResponseArrayOutput) ToDeviceDetailsResponseArrayOutputWithContext(ctx context.Context) DeviceDetailsResponseArrayOutput {
	return o
}

func (o DeviceDetailsResponseArrayOutput) Index(i pulumi.IntInput) DeviceDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceDetailsResponse {
		return vs[0].([]DeviceDetailsResponse)[vs[1].(int)]
	}).(DeviceDetailsResponseOutput)
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterableProperty struct {
	// Values to be filtered.
	SupportedValues []string `pulumi:"supportedValues"`
	// Type of product filter.
	Type string `pulumi:"type"`
}

// FilterablePropertyInput is an input type that accepts FilterablePropertyArgs and FilterablePropertyOutput values.
// You can construct a concrete instance of `FilterablePropertyInput` via:
//
//          FilterablePropertyArgs{...}
type FilterablePropertyInput interface {
	pulumi.Input

	ToFilterablePropertyOutput() FilterablePropertyOutput
	ToFilterablePropertyOutputWithContext(context.Context) FilterablePropertyOutput
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterablePropertyArgs struct {
	// Values to be filtered.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// Type of product filter.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FilterablePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterableProperty)(nil)).Elem()
}

func (i FilterablePropertyArgs) ToFilterablePropertyOutput() FilterablePropertyOutput {
	return i.ToFilterablePropertyOutputWithContext(context.Background())
}

func (i FilterablePropertyArgs) ToFilterablePropertyOutputWithContext(ctx context.Context) FilterablePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyOutput)
}

func (i FilterablePropertyArgs) ToFilterablePropertyPtrOutput() FilterablePropertyPtrOutput {
	return i.ToFilterablePropertyPtrOutputWithContext(context.Background())
}

func (i FilterablePropertyArgs) ToFilterablePropertyPtrOutputWithContext(ctx context.Context) FilterablePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyOutput).ToFilterablePropertyPtrOutputWithContext(ctx)
}

// FilterablePropertyPtrInput is an input type that accepts FilterablePropertyArgs, FilterablePropertyPtr and FilterablePropertyPtrOutput values.
// You can construct a concrete instance of `FilterablePropertyPtrInput` via:
//
//          FilterablePropertyArgs{...}
//
//  or:
//
//          nil
type FilterablePropertyPtrInput interface {
	pulumi.Input

	ToFilterablePropertyPtrOutput() FilterablePropertyPtrOutput
	ToFilterablePropertyPtrOutputWithContext(context.Context) FilterablePropertyPtrOutput
}

type filterablePropertyPtrType FilterablePropertyArgs

func FilterablePropertyPtr(v *FilterablePropertyArgs) FilterablePropertyPtrInput {
	return (*filterablePropertyPtrType)(v)
}

func (*filterablePropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterableProperty)(nil)).Elem()
}

func (i *filterablePropertyPtrType) ToFilterablePropertyPtrOutput() FilterablePropertyPtrOutput {
	return i.ToFilterablePropertyPtrOutputWithContext(context.Background())
}

func (i *filterablePropertyPtrType) ToFilterablePropertyPtrOutputWithContext(ctx context.Context) FilterablePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyPtrOutput)
}

// FilterablePropertyMapInput is an input type that accepts FilterablePropertyMap and FilterablePropertyMapOutput values.
// You can construct a concrete instance of `FilterablePropertyMapInput` via:
//
//          FilterablePropertyMap{ "key": FilterablePropertyArgs{...} }
type FilterablePropertyMapInput interface {
	pulumi.Input

	ToFilterablePropertyMapOutput() FilterablePropertyMapOutput
	ToFilterablePropertyMapOutputWithContext(context.Context) FilterablePropertyMapOutput
}

type FilterablePropertyMap map[string]FilterablePropertyInput

func (FilterablePropertyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FilterableProperty)(nil)).Elem()
}

func (i FilterablePropertyMap) ToFilterablePropertyMapOutput() FilterablePropertyMapOutput {
	return i.ToFilterablePropertyMapOutputWithContext(context.Background())
}

func (i FilterablePropertyMap) ToFilterablePropertyMapOutputWithContext(ctx context.Context) FilterablePropertyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyMapOutput)
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterablePropertyOutput struct{ *pulumi.OutputState }

func (FilterablePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyOutput) ToFilterablePropertyOutput() FilterablePropertyOutput {
	return o
}

func (o FilterablePropertyOutput) ToFilterablePropertyOutputWithContext(ctx context.Context) FilterablePropertyOutput {
	return o
}

func (o FilterablePropertyOutput) ToFilterablePropertyPtrOutput() FilterablePropertyPtrOutput {
	return o.ToFilterablePropertyPtrOutputWithContext(context.Background())
}

func (o FilterablePropertyOutput) ToFilterablePropertyPtrOutputWithContext(ctx context.Context) FilterablePropertyPtrOutput {
	return o.ApplyT(func(v FilterableProperty) *FilterableProperty {
		return &v
	}).(FilterablePropertyPtrOutput)
}

// Values to be filtered.
func (o FilterablePropertyOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterableProperty) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// Type of product filter.
func (o FilterablePropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterableProperty) string { return v.Type }).(pulumi.StringOutput)
}

type FilterablePropertyPtrOutput struct{ *pulumi.OutputState }

func (FilterablePropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyPtrOutput) ToFilterablePropertyPtrOutput() FilterablePropertyPtrOutput {
	return o
}

func (o FilterablePropertyPtrOutput) ToFilterablePropertyPtrOutputWithContext(ctx context.Context) FilterablePropertyPtrOutput {
	return o
}

func (o FilterablePropertyPtrOutput) Elem() FilterablePropertyOutput {
	return o.ApplyT(func(v *FilterableProperty) FilterableProperty { return *v }).(FilterablePropertyOutput)
}

// Values to be filtered.
func (o FilterablePropertyPtrOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FilterableProperty) []string {
		if v == nil {
			return nil
		}
		return v.SupportedValues
	}).(pulumi.StringArrayOutput)
}

// Type of product filter.
func (o FilterablePropertyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterableProperty) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FilterablePropertyMapOutput struct{ *pulumi.OutputState }

func (FilterablePropertyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]FilterableProperty)(nil)).Elem()
}

func (o FilterablePropertyMapOutput) ToFilterablePropertyMapOutput() FilterablePropertyMapOutput {
	return o
}

func (o FilterablePropertyMapOutput) ToFilterablePropertyMapOutputWithContext(ctx context.Context) FilterablePropertyMapOutput {
	return o
}

func (o FilterablePropertyMapOutput) MapIndex(k pulumi.StringInput) FilterablePropertyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) FilterableProperty {
		return vs[0].(map[string]FilterableProperty)[vs[1].(string)]
	}).(FilterablePropertyOutput)
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterablePropertyResponse struct {
	// Values to be filtered.
	SupportedValues []string `pulumi:"supportedValues"`
	// Type of product filter.
	Type string `pulumi:"type"`
}

// FilterablePropertyResponseInput is an input type that accepts FilterablePropertyResponseArgs and FilterablePropertyResponseOutput values.
// You can construct a concrete instance of `FilterablePropertyResponseInput` via:
//
//          FilterablePropertyResponseArgs{...}
type FilterablePropertyResponseInput interface {
	pulumi.Input

	ToFilterablePropertyResponseOutput() FilterablePropertyResponseOutput
	ToFilterablePropertyResponseOutputWithContext(context.Context) FilterablePropertyResponseOutput
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterablePropertyResponseArgs struct {
	// Values to be filtered.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// Type of product filter.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FilterablePropertyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterablePropertyResponse)(nil)).Elem()
}

func (i FilterablePropertyResponseArgs) ToFilterablePropertyResponseOutput() FilterablePropertyResponseOutput {
	return i.ToFilterablePropertyResponseOutputWithContext(context.Background())
}

func (i FilterablePropertyResponseArgs) ToFilterablePropertyResponseOutputWithContext(ctx context.Context) FilterablePropertyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyResponseOutput)
}

// FilterablePropertyResponseArrayInput is an input type that accepts FilterablePropertyResponseArray and FilterablePropertyResponseArrayOutput values.
// You can construct a concrete instance of `FilterablePropertyResponseArrayInput` via:
//
//          FilterablePropertyResponseArray{ FilterablePropertyResponseArgs{...} }
type FilterablePropertyResponseArrayInput interface {
	pulumi.Input

	ToFilterablePropertyResponseArrayOutput() FilterablePropertyResponseArrayOutput
	ToFilterablePropertyResponseArrayOutputWithContext(context.Context) FilterablePropertyResponseArrayOutput
}

type FilterablePropertyResponseArray []FilterablePropertyResponseInput

func (FilterablePropertyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterablePropertyResponse)(nil)).Elem()
}

func (i FilterablePropertyResponseArray) ToFilterablePropertyResponseArrayOutput() FilterablePropertyResponseArrayOutput {
	return i.ToFilterablePropertyResponseArrayOutputWithContext(context.Background())
}

func (i FilterablePropertyResponseArray) ToFilterablePropertyResponseArrayOutputWithContext(ctx context.Context) FilterablePropertyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterablePropertyResponseArrayOutput)
}

// Class defining the list of filter values on a filter type as part of configuration request.
type FilterablePropertyResponseOutput struct{ *pulumi.OutputState }

func (FilterablePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterablePropertyResponse)(nil)).Elem()
}

func (o FilterablePropertyResponseOutput) ToFilterablePropertyResponseOutput() FilterablePropertyResponseOutput {
	return o
}

func (o FilterablePropertyResponseOutput) ToFilterablePropertyResponseOutputWithContext(ctx context.Context) FilterablePropertyResponseOutput {
	return o
}

// Values to be filtered.
func (o FilterablePropertyResponseOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FilterablePropertyResponse) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// Type of product filter.
func (o FilterablePropertyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FilterablePropertyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FilterablePropertyResponseArrayOutput struct{ *pulumi.OutputState }

func (FilterablePropertyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterablePropertyResponse)(nil)).Elem()
}

func (o FilterablePropertyResponseArrayOutput) ToFilterablePropertyResponseArrayOutput() FilterablePropertyResponseArrayOutput {
	return o
}

func (o FilterablePropertyResponseArrayOutput) ToFilterablePropertyResponseArrayOutputWithContext(ctx context.Context) FilterablePropertyResponseArrayOutput {
	return o
}

func (o FilterablePropertyResponseArrayOutput) Index(i pulumi.IntInput) FilterablePropertyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterablePropertyResponse {
		return vs[0].([]FilterablePropertyResponse)[vs[1].(int)]
	}).(FilterablePropertyResponseOutput)
}

// Holds details about product hierarchy information
type HierarchyInformation struct {
	// Represents configuration name that uniquely identifies configuration
	ConfigurationName *string `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family
	ProductFamilyName *string `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line
	ProductLineName *string `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product
	ProductName *string `pulumi:"productName"`
}

// HierarchyInformationInput is an input type that accepts HierarchyInformationArgs and HierarchyInformationOutput values.
// You can construct a concrete instance of `HierarchyInformationInput` via:
//
//          HierarchyInformationArgs{...}
type HierarchyInformationInput interface {
	pulumi.Input

	ToHierarchyInformationOutput() HierarchyInformationOutput
	ToHierarchyInformationOutputWithContext(context.Context) HierarchyInformationOutput
}

// Holds details about product hierarchy information
type HierarchyInformationArgs struct {
	// Represents configuration name that uniquely identifies configuration
	ConfigurationName pulumi.StringPtrInput `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family
	ProductFamilyName pulumi.StringPtrInput `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line
	ProductLineName pulumi.StringPtrInput `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product
	ProductName pulumi.StringPtrInput `pulumi:"productName"`
}

func (HierarchyInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformation)(nil)).Elem()
}

func (i HierarchyInformationArgs) ToHierarchyInformationOutput() HierarchyInformationOutput {
	return i.ToHierarchyInformationOutputWithContext(context.Background())
}

func (i HierarchyInformationArgs) ToHierarchyInformationOutputWithContext(ctx context.Context) HierarchyInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationOutput)
}

func (i HierarchyInformationArgs) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return i.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (i HierarchyInformationArgs) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationOutput).ToHierarchyInformationPtrOutputWithContext(ctx)
}

// HierarchyInformationPtrInput is an input type that accepts HierarchyInformationArgs, HierarchyInformationPtr and HierarchyInformationPtrOutput values.
// You can construct a concrete instance of `HierarchyInformationPtrInput` via:
//
//          HierarchyInformationArgs{...}
//
//  or:
//
//          nil
type HierarchyInformationPtrInput interface {
	pulumi.Input

	ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput
	ToHierarchyInformationPtrOutputWithContext(context.Context) HierarchyInformationPtrOutput
}

type hierarchyInformationPtrType HierarchyInformationArgs

func HierarchyInformationPtr(v *HierarchyInformationArgs) HierarchyInformationPtrInput {
	return (*hierarchyInformationPtrType)(v)
}

func (*hierarchyInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformation)(nil)).Elem()
}

func (i *hierarchyInformationPtrType) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return i.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (i *hierarchyInformationPtrType) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationPtrOutput)
}

// Holds details about product hierarchy information
type HierarchyInformationOutput struct{ *pulumi.OutputState }

func (HierarchyInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformation)(nil)).Elem()
}

func (o HierarchyInformationOutput) ToHierarchyInformationOutput() HierarchyInformationOutput {
	return o
}

func (o HierarchyInformationOutput) ToHierarchyInformationOutputWithContext(ctx context.Context) HierarchyInformationOutput {
	return o
}

func (o HierarchyInformationOutput) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return o.ToHierarchyInformationPtrOutputWithContext(context.Background())
}

func (o HierarchyInformationOutput) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *HierarchyInformation {
		return &v
	}).(HierarchyInformationPtrOutput)
}

// Represents configuration name that uniquely identifies configuration
func (o HierarchyInformationOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ConfigurationName }).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family
func (o HierarchyInformationOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductFamilyName }).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line
func (o HierarchyInformationOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductLineName }).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product
func (o HierarchyInformationOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformation) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

type HierarchyInformationPtrOutput struct{ *pulumi.OutputState }

func (HierarchyInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformation)(nil)).Elem()
}

func (o HierarchyInformationPtrOutput) ToHierarchyInformationPtrOutput() HierarchyInformationPtrOutput {
	return o
}

func (o HierarchyInformationPtrOutput) ToHierarchyInformationPtrOutputWithContext(ctx context.Context) HierarchyInformationPtrOutput {
	return o
}

func (o HierarchyInformationPtrOutput) Elem() HierarchyInformationOutput {
	return o.ApplyT(func(v *HierarchyInformation) HierarchyInformation { return *v }).(HierarchyInformationOutput)
}

// Represents configuration name that uniquely identifies configuration
func (o HierarchyInformationPtrOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationName
	}).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family
func (o HierarchyInformationPtrOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductFamilyName
	}).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line
func (o HierarchyInformationPtrOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductLineName
	}).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product
func (o HierarchyInformationPtrOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(pulumi.StringPtrOutput)
}

// Holds details about product hierarchy information
type HierarchyInformationResponse struct {
	// Represents configuration name that uniquely identifies configuration
	ConfigurationName *string `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family
	ProductFamilyName *string `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line
	ProductLineName *string `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product
	ProductName *string `pulumi:"productName"`
}

// HierarchyInformationResponseInput is an input type that accepts HierarchyInformationResponseArgs and HierarchyInformationResponseOutput values.
// You can construct a concrete instance of `HierarchyInformationResponseInput` via:
//
//          HierarchyInformationResponseArgs{...}
type HierarchyInformationResponseInput interface {
	pulumi.Input

	ToHierarchyInformationResponseOutput() HierarchyInformationResponseOutput
	ToHierarchyInformationResponseOutputWithContext(context.Context) HierarchyInformationResponseOutput
}

// Holds details about product hierarchy information
type HierarchyInformationResponseArgs struct {
	// Represents configuration name that uniquely identifies configuration
	ConfigurationName pulumi.StringPtrInput `pulumi:"configurationName"`
	// Represents product family name that uniquely identifies product family
	ProductFamilyName pulumi.StringPtrInput `pulumi:"productFamilyName"`
	// Represents product line name that uniquely identifies product line
	ProductLineName pulumi.StringPtrInput `pulumi:"productLineName"`
	// Represents product name that uniquely identifies product
	ProductName pulumi.StringPtrInput `pulumi:"productName"`
}

func (HierarchyInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformationResponse)(nil)).Elem()
}

func (i HierarchyInformationResponseArgs) ToHierarchyInformationResponseOutput() HierarchyInformationResponseOutput {
	return i.ToHierarchyInformationResponseOutputWithContext(context.Background())
}

func (i HierarchyInformationResponseArgs) ToHierarchyInformationResponseOutputWithContext(ctx context.Context) HierarchyInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationResponseOutput)
}

func (i HierarchyInformationResponseArgs) ToHierarchyInformationResponsePtrOutput() HierarchyInformationResponsePtrOutput {
	return i.ToHierarchyInformationResponsePtrOutputWithContext(context.Background())
}

func (i HierarchyInformationResponseArgs) ToHierarchyInformationResponsePtrOutputWithContext(ctx context.Context) HierarchyInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationResponseOutput).ToHierarchyInformationResponsePtrOutputWithContext(ctx)
}

// HierarchyInformationResponsePtrInput is an input type that accepts HierarchyInformationResponseArgs, HierarchyInformationResponsePtr and HierarchyInformationResponsePtrOutput values.
// You can construct a concrete instance of `HierarchyInformationResponsePtrInput` via:
//
//          HierarchyInformationResponseArgs{...}
//
//  or:
//
//          nil
type HierarchyInformationResponsePtrInput interface {
	pulumi.Input

	ToHierarchyInformationResponsePtrOutput() HierarchyInformationResponsePtrOutput
	ToHierarchyInformationResponsePtrOutputWithContext(context.Context) HierarchyInformationResponsePtrOutput
}

type hierarchyInformationResponsePtrType HierarchyInformationResponseArgs

func HierarchyInformationResponsePtr(v *HierarchyInformationResponseArgs) HierarchyInformationResponsePtrInput {
	return (*hierarchyInformationResponsePtrType)(v)
}

func (*hierarchyInformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformationResponse)(nil)).Elem()
}

func (i *hierarchyInformationResponsePtrType) ToHierarchyInformationResponsePtrOutput() HierarchyInformationResponsePtrOutput {
	return i.ToHierarchyInformationResponsePtrOutputWithContext(context.Background())
}

func (i *hierarchyInformationResponsePtrType) ToHierarchyInformationResponsePtrOutputWithContext(ctx context.Context) HierarchyInformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyInformationResponsePtrOutput)
}

// Holds details about product hierarchy information
type HierarchyInformationResponseOutput struct{ *pulumi.OutputState }

func (HierarchyInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyInformationResponse)(nil)).Elem()
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponseOutput() HierarchyInformationResponseOutput {
	return o
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponseOutputWithContext(ctx context.Context) HierarchyInformationResponseOutput {
	return o
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponsePtrOutput() HierarchyInformationResponsePtrOutput {
	return o.ToHierarchyInformationResponsePtrOutputWithContext(context.Background())
}

func (o HierarchyInformationResponseOutput) ToHierarchyInformationResponsePtrOutputWithContext(ctx context.Context) HierarchyInformationResponsePtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *HierarchyInformationResponse {
		return &v
	}).(HierarchyInformationResponsePtrOutput)
}

// Represents configuration name that uniquely identifies configuration
func (o HierarchyInformationResponseOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ConfigurationName }).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family
func (o HierarchyInformationResponseOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductFamilyName }).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line
func (o HierarchyInformationResponseOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductLineName }).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product
func (o HierarchyInformationResponseOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HierarchyInformationResponse) *string { return v.ProductName }).(pulumi.StringPtrOutput)
}

type HierarchyInformationResponsePtrOutput struct{ *pulumi.OutputState }

func (HierarchyInformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyInformationResponse)(nil)).Elem()
}

func (o HierarchyInformationResponsePtrOutput) ToHierarchyInformationResponsePtrOutput() HierarchyInformationResponsePtrOutput {
	return o
}

func (o HierarchyInformationResponsePtrOutput) ToHierarchyInformationResponsePtrOutputWithContext(ctx context.Context) HierarchyInformationResponsePtrOutput {
	return o
}

func (o HierarchyInformationResponsePtrOutput) Elem() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v *HierarchyInformationResponse) HierarchyInformationResponse { return *v }).(HierarchyInformationResponseOutput)
}

// Represents configuration name that uniquely identifies configuration
func (o HierarchyInformationResponsePtrOutput) ConfigurationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationName
	}).(pulumi.StringPtrOutput)
}

// Represents product family name that uniquely identifies product family
func (o HierarchyInformationResponsePtrOutput) ProductFamilyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductFamilyName
	}).(pulumi.StringPtrOutput)
}

// Represents product line name that uniquely identifies product line
func (o HierarchyInformationResponsePtrOutput) ProductLineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductLineName
	}).(pulumi.StringPtrOutput)
}

// Represents product name that uniquely identifies product
func (o HierarchyInformationResponsePtrOutput) ProductName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyInformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProductName
	}).(pulumi.StringPtrOutput)
}

// Image for the product
type ImageInformationResponse struct {
	// Type of the image
	ImageType string `pulumi:"imageType"`
	// Url of the image
	ImageUrl string `pulumi:"imageUrl"`
}

// ImageInformationResponseInput is an input type that accepts ImageInformationResponseArgs and ImageInformationResponseOutput values.
// You can construct a concrete instance of `ImageInformationResponseInput` via:
//
//          ImageInformationResponseArgs{...}
type ImageInformationResponseInput interface {
	pulumi.Input

	ToImageInformationResponseOutput() ImageInformationResponseOutput
	ToImageInformationResponseOutputWithContext(context.Context) ImageInformationResponseOutput
}

// Image for the product
type ImageInformationResponseArgs struct {
	// Type of the image
	ImageType pulumi.StringInput `pulumi:"imageType"`
	// Url of the image
	ImageUrl pulumi.StringInput `pulumi:"imageUrl"`
}

func (ImageInformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageInformationResponse)(nil)).Elem()
}

func (i ImageInformationResponseArgs) ToImageInformationResponseOutput() ImageInformationResponseOutput {
	return i.ToImageInformationResponseOutputWithContext(context.Background())
}

func (i ImageInformationResponseArgs) ToImageInformationResponseOutputWithContext(ctx context.Context) ImageInformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageInformationResponseOutput)
}

// ImageInformationResponseArrayInput is an input type that accepts ImageInformationResponseArray and ImageInformationResponseArrayOutput values.
// You can construct a concrete instance of `ImageInformationResponseArrayInput` via:
//
//          ImageInformationResponseArray{ ImageInformationResponseArgs{...} }
type ImageInformationResponseArrayInput interface {
	pulumi.Input

	ToImageInformationResponseArrayOutput() ImageInformationResponseArrayOutput
	ToImageInformationResponseArrayOutputWithContext(context.Context) ImageInformationResponseArrayOutput
}

type ImageInformationResponseArray []ImageInformationResponseInput

func (ImageInformationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageInformationResponse)(nil)).Elem()
}

func (i ImageInformationResponseArray) ToImageInformationResponseArrayOutput() ImageInformationResponseArrayOutput {
	return i.ToImageInformationResponseArrayOutputWithContext(context.Background())
}

func (i ImageInformationResponseArray) ToImageInformationResponseArrayOutputWithContext(ctx context.Context) ImageInformationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageInformationResponseArrayOutput)
}

// Image for the product
type ImageInformationResponseOutput struct{ *pulumi.OutputState }

func (ImageInformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageInformationResponse)(nil)).Elem()
}

func (o ImageInformationResponseOutput) ToImageInformationResponseOutput() ImageInformationResponseOutput {
	return o
}

func (o ImageInformationResponseOutput) ToImageInformationResponseOutputWithContext(ctx context.Context) ImageInformationResponseOutput {
	return o
}

// Type of the image
func (o ImageInformationResponseOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v ImageInformationResponse) string { return v.ImageType }).(pulumi.StringOutput)
}

// Url of the image
func (o ImageInformationResponseOutput) ImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ImageInformationResponse) string { return v.ImageUrl }).(pulumi.StringOutput)
}

type ImageInformationResponseArrayOutput struct{ *pulumi.OutputState }

func (ImageInformationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageInformationResponse)(nil)).Elem()
}

func (o ImageInformationResponseArrayOutput) ToImageInformationResponseArrayOutput() ImageInformationResponseArrayOutput {
	return o
}

func (o ImageInformationResponseArrayOutput) ToImageInformationResponseArrayOutputWithContext(ctx context.Context) ImageInformationResponseArrayOutput {
	return o
}

func (o ImageInformationResponseArrayOutput) Index(i pulumi.IntInput) ImageInformationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageInformationResponse {
		return vs[0].([]ImageInformationResponse)[vs[1].(int)]
	}).(ImageInformationResponseOutput)
}

// Returns link related to the product
type LinkResponse struct {
	// Type of link
	LinkType string `pulumi:"linkType"`
	// Url of the link
	LinkUrl string `pulumi:"linkUrl"`
}

// LinkResponseInput is an input type that accepts LinkResponseArgs and LinkResponseOutput values.
// You can construct a concrete instance of `LinkResponseInput` via:
//
//          LinkResponseArgs{...}
type LinkResponseInput interface {
	pulumi.Input

	ToLinkResponseOutput() LinkResponseOutput
	ToLinkResponseOutputWithContext(context.Context) LinkResponseOutput
}

// Returns link related to the product
type LinkResponseArgs struct {
	// Type of link
	LinkType pulumi.StringInput `pulumi:"linkType"`
	// Url of the link
	LinkUrl pulumi.StringInput `pulumi:"linkUrl"`
}

func (LinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkResponse)(nil)).Elem()
}

func (i LinkResponseArgs) ToLinkResponseOutput() LinkResponseOutput {
	return i.ToLinkResponseOutputWithContext(context.Background())
}

func (i LinkResponseArgs) ToLinkResponseOutputWithContext(ctx context.Context) LinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkResponseOutput)
}

// LinkResponseArrayInput is an input type that accepts LinkResponseArray and LinkResponseArrayOutput values.
// You can construct a concrete instance of `LinkResponseArrayInput` via:
//
//          LinkResponseArray{ LinkResponseArgs{...} }
type LinkResponseArrayInput interface {
	pulumi.Input

	ToLinkResponseArrayOutput() LinkResponseArrayOutput
	ToLinkResponseArrayOutputWithContext(context.Context) LinkResponseArrayOutput
}

type LinkResponseArray []LinkResponseInput

func (LinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkResponse)(nil)).Elem()
}

func (i LinkResponseArray) ToLinkResponseArrayOutput() LinkResponseArrayOutput {
	return i.ToLinkResponseArrayOutputWithContext(context.Background())
}

func (i LinkResponseArray) ToLinkResponseArrayOutputWithContext(ctx context.Context) LinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkResponseArrayOutput)
}

// Returns link related to the product
type LinkResponseOutput struct{ *pulumi.OutputState }

func (LinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkResponse)(nil)).Elem()
}

func (o LinkResponseOutput) ToLinkResponseOutput() LinkResponseOutput {
	return o
}

func (o LinkResponseOutput) ToLinkResponseOutputWithContext(ctx context.Context) LinkResponseOutput {
	return o
}

// Type of link
func (o LinkResponseOutput) LinkType() pulumi.StringOutput {
	return o.ApplyT(func(v LinkResponse) string { return v.LinkType }).(pulumi.StringOutput)
}

// Url of the link
func (o LinkResponseOutput) LinkUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LinkResponse) string { return v.LinkUrl }).(pulumi.StringOutput)
}

type LinkResponseArrayOutput struct{ *pulumi.OutputState }

func (LinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LinkResponse)(nil)).Elem()
}

func (o LinkResponseArrayOutput) ToLinkResponseArrayOutput() LinkResponseArrayOutput {
	return o
}

func (o LinkResponseArrayOutput) ToLinkResponseArrayOutputWithContext(ctx context.Context) LinkResponseArrayOutput {
	return o
}

func (o LinkResponseArrayOutput) Index(i pulumi.IntInput) LinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LinkResponse {
		return vs[0].([]LinkResponse)[vs[1].(int)]
	}).(LinkResponseOutput)
}

// Billing details for each meter.
type MeterDetailsResponse struct {
	// Billing model to represent billing cycle, i.e. Monthly, biweekly, daily, hourly etc.
	BillingModel BillingModelResponse `pulumi:"billingModel"`
	// MeterId/ Billing Guid against which the product system will be charged
	MeterId string `pulumi:"meterId"`
	// Category of the billing meter.
	MeterType string `pulumi:"meterType"`
}

// MeterDetailsResponseInput is an input type that accepts MeterDetailsResponseArgs and MeterDetailsResponseOutput values.
// You can construct a concrete instance of `MeterDetailsResponseInput` via:
//
//          MeterDetailsResponseArgs{...}
type MeterDetailsResponseInput interface {
	pulumi.Input

	ToMeterDetailsResponseOutput() MeterDetailsResponseOutput
	ToMeterDetailsResponseOutputWithContext(context.Context) MeterDetailsResponseOutput
}

// Billing details for each meter.
type MeterDetailsResponseArgs struct {
	// Billing model to represent billing cycle, i.e. Monthly, biweekly, daily, hourly etc.
	BillingModel BillingModelResponseInput `pulumi:"billingModel"`
	// MeterId/ Billing Guid against which the product system will be charged
	MeterId pulumi.StringInput `pulumi:"meterId"`
	// Category of the billing meter.
	MeterType pulumi.StringInput `pulumi:"meterType"`
}

func (MeterDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MeterDetailsResponse)(nil)).Elem()
}

func (i MeterDetailsResponseArgs) ToMeterDetailsResponseOutput() MeterDetailsResponseOutput {
	return i.ToMeterDetailsResponseOutputWithContext(context.Background())
}

func (i MeterDetailsResponseArgs) ToMeterDetailsResponseOutputWithContext(ctx context.Context) MeterDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeterDetailsResponseOutput)
}

// MeterDetailsResponseArrayInput is an input type that accepts MeterDetailsResponseArray and MeterDetailsResponseArrayOutput values.
// You can construct a concrete instance of `MeterDetailsResponseArrayInput` via:
//
//          MeterDetailsResponseArray{ MeterDetailsResponseArgs{...} }
type MeterDetailsResponseArrayInput interface {
	pulumi.Input

	ToMeterDetailsResponseArrayOutput() MeterDetailsResponseArrayOutput
	ToMeterDetailsResponseArrayOutputWithContext(context.Context) MeterDetailsResponseArrayOutput
}

type MeterDetailsResponseArray []MeterDetailsResponseInput

func (MeterDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MeterDetailsResponse)(nil)).Elem()
}

func (i MeterDetailsResponseArray) ToMeterDetailsResponseArrayOutput() MeterDetailsResponseArrayOutput {
	return i.ToMeterDetailsResponseArrayOutputWithContext(context.Background())
}

func (i MeterDetailsResponseArray) ToMeterDetailsResponseArrayOutputWithContext(ctx context.Context) MeterDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MeterDetailsResponseArrayOutput)
}

// Billing details for each meter.
type MeterDetailsResponseOutput struct{ *pulumi.OutputState }

func (MeterDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MeterDetailsResponse)(nil)).Elem()
}

func (o MeterDetailsResponseOutput) ToMeterDetailsResponseOutput() MeterDetailsResponseOutput {
	return o
}

func (o MeterDetailsResponseOutput) ToMeterDetailsResponseOutputWithContext(ctx context.Context) MeterDetailsResponseOutput {
	return o
}

// Billing model to represent billing cycle, i.e. Monthly, biweekly, daily, hourly etc.
func (o MeterDetailsResponseOutput) BillingModel() BillingModelResponseOutput {
	return o.ApplyT(func(v MeterDetailsResponse) BillingModelResponse { return v.BillingModel }).(BillingModelResponseOutput)
}

// MeterId/ Billing Guid against which the product system will be charged
func (o MeterDetailsResponseOutput) MeterId() pulumi.StringOutput {
	return o.ApplyT(func(v MeterDetailsResponse) string { return v.MeterId }).(pulumi.StringOutput)
}

// Category of the billing meter.
func (o MeterDetailsResponseOutput) MeterType() pulumi.StringOutput {
	return o.ApplyT(func(v MeterDetailsResponse) string { return v.MeterType }).(pulumi.StringOutput)
}

type MeterDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (MeterDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MeterDetailsResponse)(nil)).Elem()
}

func (o MeterDetailsResponseArrayOutput) ToMeterDetailsResponseArrayOutput() MeterDetailsResponseArrayOutput {
	return o
}

func (o MeterDetailsResponseArrayOutput) ToMeterDetailsResponseArrayOutputWithContext(ctx context.Context) MeterDetailsResponseArrayOutput {
	return o
}

func (o MeterDetailsResponseArrayOutput) Index(i pulumi.IntInput) MeterDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MeterDetailsResponse {
		return vs[0].([]MeterDetailsResponse)[vs[1].(int)]
	}).(MeterDetailsResponseOutput)
}

// Notification preference for a job stage.
type NotificationPreference struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceInput is an input type that accepts NotificationPreferenceArgs and NotificationPreferenceOutput values.
// You can construct a concrete instance of `NotificationPreferenceInput` via:
//
//          NotificationPreferenceArgs{...}
type NotificationPreferenceInput interface {
	pulumi.Input

	ToNotificationPreferenceOutput() NotificationPreferenceOutput
	ToNotificationPreferenceOutputWithContext(context.Context) NotificationPreferenceOutput
}

// Notification preference for a job stage.
type NotificationPreferenceArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return i.ToNotificationPreferenceOutputWithContext(context.Background())
}

func (i NotificationPreferenceArgs) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceOutput)
}

// NotificationPreferenceArrayInput is an input type that accepts NotificationPreferenceArray and NotificationPreferenceArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceArrayInput` via:
//
//          NotificationPreferenceArray{ NotificationPreferenceArgs{...} }
type NotificationPreferenceArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput
	ToNotificationPreferenceArrayOutputWithContext(context.Context) NotificationPreferenceArrayOutput
}

type NotificationPreferenceArray []NotificationPreferenceInput

func (NotificationPreferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return i.ToNotificationPreferenceArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceArray) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutput() NotificationPreferenceOutput {
	return o
}

func (o NotificationPreferenceOutput) ToNotificationPreferenceOutputWithContext(ctx context.Context) NotificationPreferenceOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreference) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreference) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreference)(nil)).Elem()
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutput() NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) ToNotificationPreferenceArrayOutputWithContext(ctx context.Context) NotificationPreferenceArrayOutput {
	return o
}

func (o NotificationPreferenceArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreference {
		return vs[0].([]NotificationPreference)[vs[1].(int)]
	}).(NotificationPreferenceOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponse struct {
	// Notification is required or not.
	SendNotification bool `pulumi:"sendNotification"`
	// Name of the stage.
	StageName string `pulumi:"stageName"`
}

// NotificationPreferenceResponseInput is an input type that accepts NotificationPreferenceResponseArgs and NotificationPreferenceResponseOutput values.
// You can construct a concrete instance of `NotificationPreferenceResponseInput` via:
//
//          NotificationPreferenceResponseArgs{...}
type NotificationPreferenceResponseInput interface {
	pulumi.Input

	ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput
	ToNotificationPreferenceResponseOutputWithContext(context.Context) NotificationPreferenceResponseOutput
}

// Notification preference for a job stage.
type NotificationPreferenceResponseArgs struct {
	// Notification is required or not.
	SendNotification pulumi.BoolInput `pulumi:"sendNotification"`
	// Name of the stage.
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (NotificationPreferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (i NotificationPreferenceResponseArgs) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return i.ToNotificationPreferenceResponseOutputWithContext(context.Background())
}

func (i NotificationPreferenceResponseArgs) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceResponseOutput)
}

// NotificationPreferenceResponseArrayInput is an input type that accepts NotificationPreferenceResponseArray and NotificationPreferenceResponseArrayOutput values.
// You can construct a concrete instance of `NotificationPreferenceResponseArrayInput` via:
//
//          NotificationPreferenceResponseArray{ NotificationPreferenceResponseArgs{...} }
type NotificationPreferenceResponseArrayInput interface {
	pulumi.Input

	ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput
	ToNotificationPreferenceResponseArrayOutputWithContext(context.Context) NotificationPreferenceResponseArrayOutput
}

type NotificationPreferenceResponseArray []NotificationPreferenceResponseInput

func (NotificationPreferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (i NotificationPreferenceResponseArray) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return i.ToNotificationPreferenceResponseArrayOutputWithContext(context.Background())
}

func (i NotificationPreferenceResponseArray) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPreferenceResponseArrayOutput)
}

// Notification preference for a job stage.
type NotificationPreferenceResponseOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutput() NotificationPreferenceResponseOutput {
	return o
}

func (o NotificationPreferenceResponseOutput) ToNotificationPreferenceResponseOutputWithContext(ctx context.Context) NotificationPreferenceResponseOutput {
	return o
}

// Notification is required or not.
func (o NotificationPreferenceResponseOutput) SendNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) bool { return v.SendNotification }).(pulumi.BoolOutput)
}

// Name of the stage.
func (o NotificationPreferenceResponseOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPreferenceResponse) string { return v.StageName }).(pulumi.StringOutput)
}

type NotificationPreferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (NotificationPreferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPreferenceResponse)(nil)).Elem()
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutput() NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) ToNotificationPreferenceResponseArrayOutputWithContext(ctx context.Context) NotificationPreferenceResponseArrayOutput {
	return o
}

func (o NotificationPreferenceResponseArrayOutput) Index(i pulumi.IntInput) NotificationPreferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPreferenceResponse {
		return vs[0].([]NotificationPreferenceResponse)[vs[1].(int)]
	}).(NotificationPreferenceResponseOutput)
}

// Order details
type OrderDetails struct {
	// Package Shipping details
	NotificationEmailList []string `pulumi:"notificationEmailList"`
	// Order type.
	OrderType string `pulumi:"orderType"`
	// Customer notification Preferences
	Preferences *Preferences `pulumi:"preferences"`
	// Unique identifier for configuration.
	ProductDetails ProductDetails `pulumi:"productDetails"`
}

// OrderDetailsInput is an input type that accepts OrderDetailsArgs and OrderDetailsOutput values.
// You can construct a concrete instance of `OrderDetailsInput` via:
//
//          OrderDetailsArgs{...}
type OrderDetailsInput interface {
	pulumi.Input

	ToOrderDetailsOutput() OrderDetailsOutput
	ToOrderDetailsOutputWithContext(context.Context) OrderDetailsOutput
}

// Order details
type OrderDetailsArgs struct {
	// Package Shipping details
	NotificationEmailList pulumi.StringArrayInput `pulumi:"notificationEmailList"`
	// Order type.
	OrderType pulumi.StringInput `pulumi:"orderType"`
	// Customer notification Preferences
	Preferences PreferencesPtrInput `pulumi:"preferences"`
	// Unique identifier for configuration.
	ProductDetails ProductDetailsInput `pulumi:"productDetails"`
}

func (OrderDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderDetails)(nil)).Elem()
}

func (i OrderDetailsArgs) ToOrderDetailsOutput() OrderDetailsOutput {
	return i.ToOrderDetailsOutputWithContext(context.Background())
}

func (i OrderDetailsArgs) ToOrderDetailsOutputWithContext(ctx context.Context) OrderDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsOutput)
}

func (i OrderDetailsArgs) ToOrderDetailsPtrOutput() OrderDetailsPtrOutput {
	return i.ToOrderDetailsPtrOutputWithContext(context.Background())
}

func (i OrderDetailsArgs) ToOrderDetailsPtrOutputWithContext(ctx context.Context) OrderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsOutput).ToOrderDetailsPtrOutputWithContext(ctx)
}

// OrderDetailsPtrInput is an input type that accepts OrderDetailsArgs, OrderDetailsPtr and OrderDetailsPtrOutput values.
// You can construct a concrete instance of `OrderDetailsPtrInput` via:
//
//          OrderDetailsArgs{...}
//
//  or:
//
//          nil
type OrderDetailsPtrInput interface {
	pulumi.Input

	ToOrderDetailsPtrOutput() OrderDetailsPtrOutput
	ToOrderDetailsPtrOutputWithContext(context.Context) OrderDetailsPtrOutput
}

type orderDetailsPtrType OrderDetailsArgs

func OrderDetailsPtr(v *OrderDetailsArgs) OrderDetailsPtrInput {
	return (*orderDetailsPtrType)(v)
}

func (*orderDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderDetails)(nil)).Elem()
}

func (i *orderDetailsPtrType) ToOrderDetailsPtrOutput() OrderDetailsPtrOutput {
	return i.ToOrderDetailsPtrOutputWithContext(context.Background())
}

func (i *orderDetailsPtrType) ToOrderDetailsPtrOutputWithContext(ctx context.Context) OrderDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsPtrOutput)
}

// Order details
type OrderDetailsOutput struct{ *pulumi.OutputState }

func (OrderDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderDetails)(nil)).Elem()
}

func (o OrderDetailsOutput) ToOrderDetailsOutput() OrderDetailsOutput {
	return o
}

func (o OrderDetailsOutput) ToOrderDetailsOutputWithContext(ctx context.Context) OrderDetailsOutput {
	return o
}

func (o OrderDetailsOutput) ToOrderDetailsPtrOutput() OrderDetailsPtrOutput {
	return o.ToOrderDetailsPtrOutputWithContext(context.Background())
}

func (o OrderDetailsOutput) ToOrderDetailsPtrOutputWithContext(ctx context.Context) OrderDetailsPtrOutput {
	return o.ApplyT(func(v OrderDetails) *OrderDetails {
		return &v
	}).(OrderDetailsPtrOutput)
}

// Package Shipping details
func (o OrderDetailsOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderDetails) []string { return v.NotificationEmailList }).(pulumi.StringArrayOutput)
}

// Order type.
func (o OrderDetailsOutput) OrderType() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetails) string { return v.OrderType }).(pulumi.StringOutput)
}

// Customer notification Preferences
func (o OrderDetailsOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v OrderDetails) *Preferences { return v.Preferences }).(PreferencesPtrOutput)
}

// Unique identifier for configuration.
func (o OrderDetailsOutput) ProductDetails() ProductDetailsOutput {
	return o.ApplyT(func(v OrderDetails) ProductDetails { return v.ProductDetails }).(ProductDetailsOutput)
}

type OrderDetailsPtrOutput struct{ *pulumi.OutputState }

func (OrderDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderDetails)(nil)).Elem()
}

func (o OrderDetailsPtrOutput) ToOrderDetailsPtrOutput() OrderDetailsPtrOutput {
	return o
}

func (o OrderDetailsPtrOutput) ToOrderDetailsPtrOutputWithContext(ctx context.Context) OrderDetailsPtrOutput {
	return o
}

func (o OrderDetailsPtrOutput) Elem() OrderDetailsOutput {
	return o.ApplyT(func(v *OrderDetails) OrderDetails { return *v }).(OrderDetailsOutput)
}

// Package Shipping details
func (o OrderDetailsPtrOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrderDetails) []string {
		if v == nil {
			return nil
		}
		return v.NotificationEmailList
	}).(pulumi.StringArrayOutput)
}

// Order type.
func (o OrderDetailsPtrOutput) OrderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetails) *string {
		if v == nil {
			return nil
		}
		return &v.OrderType
	}).(pulumi.StringPtrOutput)
}

// Customer notification Preferences
func (o OrderDetailsPtrOutput) Preferences() PreferencesPtrOutput {
	return o.ApplyT(func(v *OrderDetails) *Preferences {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesPtrOutput)
}

// Unique identifier for configuration.
func (o OrderDetailsPtrOutput) ProductDetails() ProductDetailsPtrOutput {
	return o.ApplyT(func(v *OrderDetails) *ProductDetails {
		if v == nil {
			return nil
		}
		return &v.ProductDetails
	}).(ProductDetailsPtrOutput)
}

// Order details
type OrderDetailsResponse struct {
	// Cancellation reason.
	CancellationReason string `pulumi:"cancellationReason"`
	// Describes whether the order is cancellable or not.
	CancellationStatus string `pulumi:"cancellationStatus"`
	// Current Order Status
	CurrentStatus OrderStatusDetailsResponse `pulumi:"currentStatus"`
	// Describes whether the order is deletable or not.
	DeletionStatus string `pulumi:"deletionStatus"`
	// Top level error for the job.
	Error CloudErrorResponse `pulumi:"error"`
	// Forward Package Shipping details
	ForwardShippingDetails ShippingDetailsResponse `pulumi:"forwardShippingDetails"`
	// parent RP details
	ManagementRpDetails interface{} `pulumi:"managementRpDetails"`
	// Package Shipping details
	NotificationEmailList []string `pulumi:"notificationEmailList"`
	// Order history
	OrderStatusHistory []OrderStatusDetailsResponse `pulumi:"orderStatusHistory"`
	// Order type.
	OrderType string `pulumi:"orderType"`
	// Customer notification Preferences
	Preferences *PreferencesResponse `pulumi:"preferences"`
	// Unique identifier for configuration.
	ProductDetails ProductDetailsResponse `pulumi:"productDetails"`
	// Return reason.
	ReturnReason string `pulumi:"returnReason"`
	// Describes whether the order is returnable or not.
	ReturnStatus string `pulumi:"returnStatus"`
	// Reverse Package Shipping details
	ReverseShippingDetails ShippingDetailsResponse `pulumi:"reverseShippingDetails"`
}

// OrderDetailsResponseInput is an input type that accepts OrderDetailsResponseArgs and OrderDetailsResponseOutput values.
// You can construct a concrete instance of `OrderDetailsResponseInput` via:
//
//          OrderDetailsResponseArgs{...}
type OrderDetailsResponseInput interface {
	pulumi.Input

	ToOrderDetailsResponseOutput() OrderDetailsResponseOutput
	ToOrderDetailsResponseOutputWithContext(context.Context) OrderDetailsResponseOutput
}

// Order details
type OrderDetailsResponseArgs struct {
	// Cancellation reason.
	CancellationReason pulumi.StringInput `pulumi:"cancellationReason"`
	// Describes whether the order is cancellable or not.
	CancellationStatus pulumi.StringInput `pulumi:"cancellationStatus"`
	// Current Order Status
	CurrentStatus OrderStatusDetailsResponseInput `pulumi:"currentStatus"`
	// Describes whether the order is deletable or not.
	DeletionStatus pulumi.StringInput `pulumi:"deletionStatus"`
	// Top level error for the job.
	Error CloudErrorResponseInput `pulumi:"error"`
	// Forward Package Shipping details
	ForwardShippingDetails ShippingDetailsResponseInput `pulumi:"forwardShippingDetails"`
	// parent RP details
	ManagementRpDetails pulumi.Input `pulumi:"managementRpDetails"`
	// Package Shipping details
	NotificationEmailList pulumi.StringArrayInput `pulumi:"notificationEmailList"`
	// Order history
	OrderStatusHistory OrderStatusDetailsResponseArrayInput `pulumi:"orderStatusHistory"`
	// Order type.
	OrderType pulumi.StringInput `pulumi:"orderType"`
	// Customer notification Preferences
	Preferences PreferencesResponsePtrInput `pulumi:"preferences"`
	// Unique identifier for configuration.
	ProductDetails ProductDetailsResponseInput `pulumi:"productDetails"`
	// Return reason.
	ReturnReason pulumi.StringInput `pulumi:"returnReason"`
	// Describes whether the order is returnable or not.
	ReturnStatus pulumi.StringInput `pulumi:"returnStatus"`
	// Reverse Package Shipping details
	ReverseShippingDetails ShippingDetailsResponseInput `pulumi:"reverseShippingDetails"`
}

func (OrderDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderDetailsResponse)(nil)).Elem()
}

func (i OrderDetailsResponseArgs) ToOrderDetailsResponseOutput() OrderDetailsResponseOutput {
	return i.ToOrderDetailsResponseOutputWithContext(context.Background())
}

func (i OrderDetailsResponseArgs) ToOrderDetailsResponseOutputWithContext(ctx context.Context) OrderDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsResponseOutput)
}

func (i OrderDetailsResponseArgs) ToOrderDetailsResponsePtrOutput() OrderDetailsResponsePtrOutput {
	return i.ToOrderDetailsResponsePtrOutputWithContext(context.Background())
}

func (i OrderDetailsResponseArgs) ToOrderDetailsResponsePtrOutputWithContext(ctx context.Context) OrderDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsResponseOutput).ToOrderDetailsResponsePtrOutputWithContext(ctx)
}

// OrderDetailsResponsePtrInput is an input type that accepts OrderDetailsResponseArgs, OrderDetailsResponsePtr and OrderDetailsResponsePtrOutput values.
// You can construct a concrete instance of `OrderDetailsResponsePtrInput` via:
//
//          OrderDetailsResponseArgs{...}
//
//  or:
//
//          nil
type OrderDetailsResponsePtrInput interface {
	pulumi.Input

	ToOrderDetailsResponsePtrOutput() OrderDetailsResponsePtrOutput
	ToOrderDetailsResponsePtrOutputWithContext(context.Context) OrderDetailsResponsePtrOutput
}

type orderDetailsResponsePtrType OrderDetailsResponseArgs

func OrderDetailsResponsePtr(v *OrderDetailsResponseArgs) OrderDetailsResponsePtrInput {
	return (*orderDetailsResponsePtrType)(v)
}

func (*orderDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderDetailsResponse)(nil)).Elem()
}

func (i *orderDetailsResponsePtrType) ToOrderDetailsResponsePtrOutput() OrderDetailsResponsePtrOutput {
	return i.ToOrderDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *orderDetailsResponsePtrType) ToOrderDetailsResponsePtrOutputWithContext(ctx context.Context) OrderDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderDetailsResponsePtrOutput)
}

// Order details
type OrderDetailsResponseOutput struct{ *pulumi.OutputState }

func (OrderDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderDetailsResponse)(nil)).Elem()
}

func (o OrderDetailsResponseOutput) ToOrderDetailsResponseOutput() OrderDetailsResponseOutput {
	return o
}

func (o OrderDetailsResponseOutput) ToOrderDetailsResponseOutputWithContext(ctx context.Context) OrderDetailsResponseOutput {
	return o
}

func (o OrderDetailsResponseOutput) ToOrderDetailsResponsePtrOutput() OrderDetailsResponsePtrOutput {
	return o.ToOrderDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OrderDetailsResponseOutput) ToOrderDetailsResponsePtrOutputWithContext(ctx context.Context) OrderDetailsResponsePtrOutput {
	return o.ApplyT(func(v OrderDetailsResponse) *OrderDetailsResponse {
		return &v
	}).(OrderDetailsResponsePtrOutput)
}

// Cancellation reason.
func (o OrderDetailsResponseOutput) CancellationReason() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.CancellationReason }).(pulumi.StringOutput)
}

// Describes whether the order is cancellable or not.
func (o OrderDetailsResponseOutput) CancellationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.CancellationStatus }).(pulumi.StringOutput)
}

// Current Order Status
func (o OrderDetailsResponseOutput) CurrentStatus() OrderStatusDetailsResponseOutput {
	return o.ApplyT(func(v OrderDetailsResponse) OrderStatusDetailsResponse { return v.CurrentStatus }).(OrderStatusDetailsResponseOutput)
}

// Describes whether the order is deletable or not.
func (o OrderDetailsResponseOutput) DeletionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.DeletionStatus }).(pulumi.StringOutput)
}

// Top level error for the job.
func (o OrderDetailsResponseOutput) Error() CloudErrorResponseOutput {
	return o.ApplyT(func(v OrderDetailsResponse) CloudErrorResponse { return v.Error }).(CloudErrorResponseOutput)
}

// Forward Package Shipping details
func (o OrderDetailsResponseOutput) ForwardShippingDetails() ShippingDetailsResponseOutput {
	return o.ApplyT(func(v OrderDetailsResponse) ShippingDetailsResponse { return v.ForwardShippingDetails }).(ShippingDetailsResponseOutput)
}

// parent RP details
func (o OrderDetailsResponseOutput) ManagementRpDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v OrderDetailsResponse) interface{} { return v.ManagementRpDetails }).(pulumi.AnyOutput)
}

// Package Shipping details
func (o OrderDetailsResponseOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OrderDetailsResponse) []string { return v.NotificationEmailList }).(pulumi.StringArrayOutput)
}

// Order history
func (o OrderDetailsResponseOutput) OrderStatusHistory() OrderStatusDetailsResponseArrayOutput {
	return o.ApplyT(func(v OrderDetailsResponse) []OrderStatusDetailsResponse { return v.OrderStatusHistory }).(OrderStatusDetailsResponseArrayOutput)
}

// Order type.
func (o OrderDetailsResponseOutput) OrderType() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.OrderType }).(pulumi.StringOutput)
}

// Customer notification Preferences
func (o OrderDetailsResponseOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v OrderDetailsResponse) *PreferencesResponse { return v.Preferences }).(PreferencesResponsePtrOutput)
}

// Unique identifier for configuration.
func (o OrderDetailsResponseOutput) ProductDetails() ProductDetailsResponseOutput {
	return o.ApplyT(func(v OrderDetailsResponse) ProductDetailsResponse { return v.ProductDetails }).(ProductDetailsResponseOutput)
}

// Return reason.
func (o OrderDetailsResponseOutput) ReturnReason() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.ReturnReason }).(pulumi.StringOutput)
}

// Describes whether the order is returnable or not.
func (o OrderDetailsResponseOutput) ReturnStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderDetailsResponse) string { return v.ReturnStatus }).(pulumi.StringOutput)
}

// Reverse Package Shipping details
func (o OrderDetailsResponseOutput) ReverseShippingDetails() ShippingDetailsResponseOutput {
	return o.ApplyT(func(v OrderDetailsResponse) ShippingDetailsResponse { return v.ReverseShippingDetails }).(ShippingDetailsResponseOutput)
}

type OrderDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OrderDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderDetailsResponse)(nil)).Elem()
}

func (o OrderDetailsResponsePtrOutput) ToOrderDetailsResponsePtrOutput() OrderDetailsResponsePtrOutput {
	return o
}

func (o OrderDetailsResponsePtrOutput) ToOrderDetailsResponsePtrOutputWithContext(ctx context.Context) OrderDetailsResponsePtrOutput {
	return o
}

func (o OrderDetailsResponsePtrOutput) Elem() OrderDetailsResponseOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) OrderDetailsResponse { return *v }).(OrderDetailsResponseOutput)
}

// Cancellation reason.
func (o OrderDetailsResponsePtrOutput) CancellationReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CancellationReason
	}).(pulumi.StringPtrOutput)
}

// Describes whether the order is cancellable or not.
func (o OrderDetailsResponsePtrOutput) CancellationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CancellationStatus
	}).(pulumi.StringPtrOutput)
}

// Current Order Status
func (o OrderDetailsResponsePtrOutput) CurrentStatus() OrderStatusDetailsResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *OrderStatusDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.CurrentStatus
	}).(OrderStatusDetailsResponsePtrOutput)
}

// Describes whether the order is deletable or not.
func (o OrderDetailsResponsePtrOutput) DeletionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DeletionStatus
	}).(pulumi.StringPtrOutput)
}

// Top level error for the job.
func (o OrderDetailsResponsePtrOutput) Error() CloudErrorResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *CloudErrorResponse {
		if v == nil {
			return nil
		}
		return &v.Error
	}).(CloudErrorResponsePtrOutput)
}

// Forward Package Shipping details
func (o OrderDetailsResponsePtrOutput) ForwardShippingDetails() ShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *ShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ForwardShippingDetails
	}).(ShippingDetailsResponsePtrOutput)
}

// parent RP details
func (o OrderDetailsResponsePtrOutput) ManagementRpDetails() pulumi.AnyOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.ManagementRpDetails
	}).(pulumi.AnyOutput)
}

// Package Shipping details
func (o OrderDetailsResponsePtrOutput) NotificationEmailList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) []string {
		if v == nil {
			return nil
		}
		return v.NotificationEmailList
	}).(pulumi.StringArrayOutput)
}

// Order history
func (o OrderDetailsResponsePtrOutput) OrderStatusHistory() OrderStatusDetailsResponseArrayOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) []OrderStatusDetailsResponse {
		if v == nil {
			return nil
		}
		return v.OrderStatusHistory
	}).(OrderStatusDetailsResponseArrayOutput)
}

// Order type.
func (o OrderDetailsResponsePtrOutput) OrderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OrderType
	}).(pulumi.StringPtrOutput)
}

// Customer notification Preferences
func (o OrderDetailsResponsePtrOutput) Preferences() PreferencesResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *PreferencesResponse {
		if v == nil {
			return nil
		}
		return v.Preferences
	}).(PreferencesResponsePtrOutput)
}

// Unique identifier for configuration.
func (o OrderDetailsResponsePtrOutput) ProductDetails() ProductDetailsResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *ProductDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ProductDetails
	}).(ProductDetailsResponsePtrOutput)
}

// Return reason.
func (o OrderDetailsResponsePtrOutput) ReturnReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReturnReason
	}).(pulumi.StringPtrOutput)
}

// Describes whether the order is returnable or not.
func (o OrderDetailsResponsePtrOutput) ReturnStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ReturnStatus
	}).(pulumi.StringPtrOutput)
}

// Reverse Package Shipping details
func (o OrderDetailsResponsePtrOutput) ReverseShippingDetails() ShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v *OrderDetailsResponse) *ShippingDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.ReverseShippingDetails
	}).(ShippingDetailsResponsePtrOutput)
}

// Order status CurrentStatus
type OrderStatusDetailsResponse struct {
	// last time order was updated
	LastUpdatedTime *string `pulumi:"lastUpdatedTime"`
	// Order status
	OrderStatus string `pulumi:"orderStatus"`
}

// OrderStatusDetailsResponseInput is an input type that accepts OrderStatusDetailsResponseArgs and OrderStatusDetailsResponseOutput values.
// You can construct a concrete instance of `OrderStatusDetailsResponseInput` via:
//
//          OrderStatusDetailsResponseArgs{...}
type OrderStatusDetailsResponseInput interface {
	pulumi.Input

	ToOrderStatusDetailsResponseOutput() OrderStatusDetailsResponseOutput
	ToOrderStatusDetailsResponseOutputWithContext(context.Context) OrderStatusDetailsResponseOutput
}

// Order status CurrentStatus
type OrderStatusDetailsResponseArgs struct {
	// last time order was updated
	LastUpdatedTime pulumi.StringPtrInput `pulumi:"lastUpdatedTime"`
	// Order status
	OrderStatus pulumi.StringInput `pulumi:"orderStatus"`
}

func (OrderStatusDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusDetailsResponse)(nil)).Elem()
}

func (i OrderStatusDetailsResponseArgs) ToOrderStatusDetailsResponseOutput() OrderStatusDetailsResponseOutput {
	return i.ToOrderStatusDetailsResponseOutputWithContext(context.Background())
}

func (i OrderStatusDetailsResponseArgs) ToOrderStatusDetailsResponseOutputWithContext(ctx context.Context) OrderStatusDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusDetailsResponseOutput)
}

func (i OrderStatusDetailsResponseArgs) ToOrderStatusDetailsResponsePtrOutput() OrderStatusDetailsResponsePtrOutput {
	return i.ToOrderStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (i OrderStatusDetailsResponseArgs) ToOrderStatusDetailsResponsePtrOutputWithContext(ctx context.Context) OrderStatusDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusDetailsResponseOutput).ToOrderStatusDetailsResponsePtrOutputWithContext(ctx)
}

// OrderStatusDetailsResponsePtrInput is an input type that accepts OrderStatusDetailsResponseArgs, OrderStatusDetailsResponsePtr and OrderStatusDetailsResponsePtrOutput values.
// You can construct a concrete instance of `OrderStatusDetailsResponsePtrInput` via:
//
//          OrderStatusDetailsResponseArgs{...}
//
//  or:
//
//          nil
type OrderStatusDetailsResponsePtrInput interface {
	pulumi.Input

	ToOrderStatusDetailsResponsePtrOutput() OrderStatusDetailsResponsePtrOutput
	ToOrderStatusDetailsResponsePtrOutputWithContext(context.Context) OrderStatusDetailsResponsePtrOutput
}

type orderStatusDetailsResponsePtrType OrderStatusDetailsResponseArgs

func OrderStatusDetailsResponsePtr(v *OrderStatusDetailsResponseArgs) OrderStatusDetailsResponsePtrInput {
	return (*orderStatusDetailsResponsePtrType)(v)
}

func (*orderStatusDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusDetailsResponse)(nil)).Elem()
}

func (i *orderStatusDetailsResponsePtrType) ToOrderStatusDetailsResponsePtrOutput() OrderStatusDetailsResponsePtrOutput {
	return i.ToOrderStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *orderStatusDetailsResponsePtrType) ToOrderStatusDetailsResponsePtrOutputWithContext(ctx context.Context) OrderStatusDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusDetailsResponsePtrOutput)
}

// OrderStatusDetailsResponseArrayInput is an input type that accepts OrderStatusDetailsResponseArray and OrderStatusDetailsResponseArrayOutput values.
// You can construct a concrete instance of `OrderStatusDetailsResponseArrayInput` via:
//
//          OrderStatusDetailsResponseArray{ OrderStatusDetailsResponseArgs{...} }
type OrderStatusDetailsResponseArrayInput interface {
	pulumi.Input

	ToOrderStatusDetailsResponseArrayOutput() OrderStatusDetailsResponseArrayOutput
	ToOrderStatusDetailsResponseArrayOutputWithContext(context.Context) OrderStatusDetailsResponseArrayOutput
}

type OrderStatusDetailsResponseArray []OrderStatusDetailsResponseInput

func (OrderStatusDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusDetailsResponse)(nil)).Elem()
}

func (i OrderStatusDetailsResponseArray) ToOrderStatusDetailsResponseArrayOutput() OrderStatusDetailsResponseArrayOutput {
	return i.ToOrderStatusDetailsResponseArrayOutputWithContext(context.Background())
}

func (i OrderStatusDetailsResponseArray) ToOrderStatusDetailsResponseArrayOutputWithContext(ctx context.Context) OrderStatusDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderStatusDetailsResponseArrayOutput)
}

// Order status CurrentStatus
type OrderStatusDetailsResponseOutput struct{ *pulumi.OutputState }

func (OrderStatusDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderStatusDetailsResponse)(nil)).Elem()
}

func (o OrderStatusDetailsResponseOutput) ToOrderStatusDetailsResponseOutput() OrderStatusDetailsResponseOutput {
	return o
}

func (o OrderStatusDetailsResponseOutput) ToOrderStatusDetailsResponseOutputWithContext(ctx context.Context) OrderStatusDetailsResponseOutput {
	return o
}

func (o OrderStatusDetailsResponseOutput) ToOrderStatusDetailsResponsePtrOutput() OrderStatusDetailsResponsePtrOutput {
	return o.ToOrderStatusDetailsResponsePtrOutputWithContext(context.Background())
}

func (o OrderStatusDetailsResponseOutput) ToOrderStatusDetailsResponsePtrOutputWithContext(ctx context.Context) OrderStatusDetailsResponsePtrOutput {
	return o.ApplyT(func(v OrderStatusDetailsResponse) *OrderStatusDetailsResponse {
		return &v
	}).(OrderStatusDetailsResponsePtrOutput)
}

// last time order was updated
func (o OrderStatusDetailsResponseOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderStatusDetailsResponse) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

// Order status
func (o OrderStatusDetailsResponseOutput) OrderStatus() pulumi.StringOutput {
	return o.ApplyT(func(v OrderStatusDetailsResponse) string { return v.OrderStatus }).(pulumi.StringOutput)
}

type OrderStatusDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (OrderStatusDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderStatusDetailsResponse)(nil)).Elem()
}

func (o OrderStatusDetailsResponsePtrOutput) ToOrderStatusDetailsResponsePtrOutput() OrderStatusDetailsResponsePtrOutput {
	return o
}

func (o OrderStatusDetailsResponsePtrOutput) ToOrderStatusDetailsResponsePtrOutputWithContext(ctx context.Context) OrderStatusDetailsResponsePtrOutput {
	return o
}

func (o OrderStatusDetailsResponsePtrOutput) Elem() OrderStatusDetailsResponseOutput {
	return o.ApplyT(func(v *OrderStatusDetailsResponse) OrderStatusDetailsResponse { return *v }).(OrderStatusDetailsResponseOutput)
}

// last time order was updated
func (o OrderStatusDetailsResponsePtrOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastUpdatedTime
	}).(pulumi.StringPtrOutput)
}

// Order status
func (o OrderStatusDetailsResponsePtrOutput) OrderStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderStatusDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OrderStatus
	}).(pulumi.StringPtrOutput)
}

type OrderStatusDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (OrderStatusDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrderStatusDetailsResponse)(nil)).Elem()
}

func (o OrderStatusDetailsResponseArrayOutput) ToOrderStatusDetailsResponseArrayOutput() OrderStatusDetailsResponseArrayOutput {
	return o
}

func (o OrderStatusDetailsResponseArrayOutput) ToOrderStatusDetailsResponseArrayOutputWithContext(ctx context.Context) OrderStatusDetailsResponseArrayOutput {
	return o
}

func (o OrderStatusDetailsResponseArrayOutput) Index(i pulumi.IntInput) OrderStatusDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrderStatusDetailsResponse {
		return vs[0].([]OrderStatusDetailsResponse)[vs[1].(int)]
	}).(OrderStatusDetailsResponseOutput)
}

// Preferences related to the order
type Preferences struct {
	// Notification preferences.
	NotificationPreferences []NotificationPreference `pulumi:"notificationPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences *TransportPreferences `pulumi:"transportPreferences"`
}

// PreferencesInput is an input type that accepts PreferencesArgs and PreferencesOutput values.
// You can construct a concrete instance of `PreferencesInput` via:
//
//          PreferencesArgs{...}
type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(context.Context) PreferencesOutput
}

// Preferences related to the order
type PreferencesArgs struct {
	// Notification preferences.
	NotificationPreferences NotificationPreferenceArrayInput `pulumi:"notificationPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences TransportPreferencesPtrInput `pulumi:"transportPreferences"`
}

func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (i PreferencesArgs) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

func (i PreferencesArgs) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i PreferencesArgs) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput).ToPreferencesPtrOutputWithContext(ctx)
}

// PreferencesPtrInput is an input type that accepts PreferencesArgs, PreferencesPtr and PreferencesPtrOutput values.
// You can construct a concrete instance of `PreferencesPtrInput` via:
//
//          PreferencesArgs{...}
//
//  or:
//
//          nil
type PreferencesPtrInput interface {
	pulumi.Input

	ToPreferencesPtrOutput() PreferencesPtrOutput
	ToPreferencesPtrOutputWithContext(context.Context) PreferencesPtrOutput
}

type preferencesPtrType PreferencesArgs

func PreferencesPtr(v *PreferencesArgs) PreferencesPtrInput {
	return (*preferencesPtrType)(v)
}

func (*preferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *preferencesPtrType) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return i.ToPreferencesPtrOutputWithContext(context.Background())
}

func (i *preferencesPtrType) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesOutput struct{ *pulumi.OutputState }

func (PreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Preferences)(nil)).Elem()
}

func (o PreferencesOutput) ToPreferencesOutput() PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o.ToPreferencesPtrOutputWithContext(context.Background())
}

func (o PreferencesOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *Preferences {
		return &v
	}).(PreferencesPtrOutput)
}

// Notification preferences.
func (o PreferencesOutput) NotificationPreferences() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v Preferences) []NotificationPreference { return v.NotificationPreferences }).(NotificationPreferenceArrayOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v Preferences) *TransportPreferences { return v.TransportPreferences }).(TransportPreferencesPtrOutput)
}

type PreferencesPtrOutput struct{ *pulumi.OutputState }

func (PreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutput() PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) ToPreferencesPtrOutputWithContext(ctx context.Context) PreferencesPtrOutput {
	return o
}

func (o PreferencesPtrOutput) Elem() PreferencesOutput {
	return o.ApplyT(func(v *Preferences) Preferences { return *v }).(PreferencesOutput)
}

// Notification preferences.
func (o PreferencesPtrOutput) NotificationPreferences() NotificationPreferenceArrayOutput {
	return o.ApplyT(func(v *Preferences) []NotificationPreference {
		if v == nil {
			return nil
		}
		return v.NotificationPreferences
	}).(NotificationPreferenceArrayOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesPtrOutput) TransportPreferences() TransportPreferencesPtrOutput {
	return o.ApplyT(func(v *Preferences) *TransportPreferences {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesPtrOutput)
}

// Preferences related to the order
type PreferencesResponse struct {
	// Notification preferences.
	NotificationPreferences []NotificationPreferenceResponse `pulumi:"notificationPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences *TransportPreferencesResponse `pulumi:"transportPreferences"`
}

// PreferencesResponseInput is an input type that accepts PreferencesResponseArgs and PreferencesResponseOutput values.
// You can construct a concrete instance of `PreferencesResponseInput` via:
//
//          PreferencesResponseArgs{...}
type PreferencesResponseInput interface {
	pulumi.Input

	ToPreferencesResponseOutput() PreferencesResponseOutput
	ToPreferencesResponseOutputWithContext(context.Context) PreferencesResponseOutput
}

// Preferences related to the order
type PreferencesResponseArgs struct {
	// Notification preferences.
	NotificationPreferences NotificationPreferenceResponseArrayInput `pulumi:"notificationPreferences"`
	// Preferences related to the shipment logistics of the order.
	TransportPreferences TransportPreferencesResponsePtrInput `pulumi:"transportPreferences"`
}

func (PreferencesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (i PreferencesResponseArgs) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return i.ToPreferencesResponseOutputWithContext(context.Background())
}

func (i PreferencesResponseArgs) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponseOutput)
}

func (i PreferencesResponseArgs) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return i.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i PreferencesResponseArgs) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponseOutput).ToPreferencesResponsePtrOutputWithContext(ctx)
}

// PreferencesResponsePtrInput is an input type that accepts PreferencesResponseArgs, PreferencesResponsePtr and PreferencesResponsePtrOutput values.
// You can construct a concrete instance of `PreferencesResponsePtrInput` via:
//
//          PreferencesResponseArgs{...}
//
//  or:
//
//          nil
type PreferencesResponsePtrInput interface {
	pulumi.Input

	ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput
	ToPreferencesResponsePtrOutputWithContext(context.Context) PreferencesResponsePtrOutput
}

type preferencesResponsePtrType PreferencesResponseArgs

func PreferencesResponsePtr(v *PreferencesResponseArgs) PreferencesResponsePtrInput {
	return (*preferencesResponsePtrType)(v)
}

func (*preferencesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (i *preferencesResponsePtrType) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return i.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i *preferencesResponsePtrType) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesResponsePtrOutput)
}

// Preferences related to the order
type PreferencesResponseOutput struct{ *pulumi.OutputState }

func (PreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutput() PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponseOutputWithContext(ctx context.Context) PreferencesResponseOutput {
	return o
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o.ToPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o PreferencesResponseOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *PreferencesResponse {
		return &v
	}).(PreferencesResponsePtrOutput)
}

// Notification preferences.
func (o PreferencesResponseOutput) NotificationPreferences() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v PreferencesResponse) []NotificationPreferenceResponse { return v.NotificationPreferences }).(NotificationPreferenceResponseArrayOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesResponseOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v PreferencesResponse) *TransportPreferencesResponse { return v.TransportPreferences }).(TransportPreferencesResponsePtrOutput)
}

type PreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (PreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreferencesResponse)(nil)).Elem()
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutput() PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) ToPreferencesResponsePtrOutputWithContext(ctx context.Context) PreferencesResponsePtrOutput {
	return o
}

func (o PreferencesResponsePtrOutput) Elem() PreferencesResponseOutput {
	return o.ApplyT(func(v *PreferencesResponse) PreferencesResponse { return *v }).(PreferencesResponseOutput)
}

// Notification preferences.
func (o PreferencesResponsePtrOutput) NotificationPreferences() NotificationPreferenceResponseArrayOutput {
	return o.ApplyT(func(v *PreferencesResponse) []NotificationPreferenceResponse {
		if v == nil {
			return nil
		}
		return v.NotificationPreferences
	}).(NotificationPreferenceResponseArrayOutput)
}

// Preferences related to the shipment logistics of the order.
func (o PreferencesResponsePtrOutput) TransportPreferences() TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v *PreferencesResponse) *TransportPreferencesResponse {
		if v == nil {
			return nil
		}
		return v.TransportPreferences
	}).(TransportPreferencesResponsePtrOutput)
}

// Represents product details
type ProductDetails struct {
	// Quantity of the product
	Count *int `pulumi:"count"`
	//  Hierarchy of the product which uniquely identifies the product
	HierarchyInformation HierarchyInformation `pulumi:"hierarchyInformation"`
}

// ProductDetailsInput is an input type that accepts ProductDetailsArgs and ProductDetailsOutput values.
// You can construct a concrete instance of `ProductDetailsInput` via:
//
//          ProductDetailsArgs{...}
type ProductDetailsInput interface {
	pulumi.Input

	ToProductDetailsOutput() ProductDetailsOutput
	ToProductDetailsOutputWithContext(context.Context) ProductDetailsOutput
}

// Represents product details
type ProductDetailsArgs struct {
	// Quantity of the product
	Count pulumi.IntPtrInput `pulumi:"count"`
	//  Hierarchy of the product which uniquely identifies the product
	HierarchyInformation HierarchyInformationInput `pulumi:"hierarchyInformation"`
}

func (ProductDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetails)(nil)).Elem()
}

func (i ProductDetailsArgs) ToProductDetailsOutput() ProductDetailsOutput {
	return i.ToProductDetailsOutputWithContext(context.Background())
}

func (i ProductDetailsArgs) ToProductDetailsOutputWithContext(ctx context.Context) ProductDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsOutput)
}

func (i ProductDetailsArgs) ToProductDetailsPtrOutput() ProductDetailsPtrOutput {
	return i.ToProductDetailsPtrOutputWithContext(context.Background())
}

func (i ProductDetailsArgs) ToProductDetailsPtrOutputWithContext(ctx context.Context) ProductDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsOutput).ToProductDetailsPtrOutputWithContext(ctx)
}

// ProductDetailsPtrInput is an input type that accepts ProductDetailsArgs, ProductDetailsPtr and ProductDetailsPtrOutput values.
// You can construct a concrete instance of `ProductDetailsPtrInput` via:
//
//          ProductDetailsArgs{...}
//
//  or:
//
//          nil
type ProductDetailsPtrInput interface {
	pulumi.Input

	ToProductDetailsPtrOutput() ProductDetailsPtrOutput
	ToProductDetailsPtrOutputWithContext(context.Context) ProductDetailsPtrOutput
}

type productDetailsPtrType ProductDetailsArgs

func ProductDetailsPtr(v *ProductDetailsArgs) ProductDetailsPtrInput {
	return (*productDetailsPtrType)(v)
}

func (*productDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDetails)(nil)).Elem()
}

func (i *productDetailsPtrType) ToProductDetailsPtrOutput() ProductDetailsPtrOutput {
	return i.ToProductDetailsPtrOutputWithContext(context.Background())
}

func (i *productDetailsPtrType) ToProductDetailsPtrOutputWithContext(ctx context.Context) ProductDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsPtrOutput)
}

// Represents product details
type ProductDetailsOutput struct{ *pulumi.OutputState }

func (ProductDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetails)(nil)).Elem()
}

func (o ProductDetailsOutput) ToProductDetailsOutput() ProductDetailsOutput {
	return o
}

func (o ProductDetailsOutput) ToProductDetailsOutputWithContext(ctx context.Context) ProductDetailsOutput {
	return o
}

func (o ProductDetailsOutput) ToProductDetailsPtrOutput() ProductDetailsPtrOutput {
	return o.ToProductDetailsPtrOutputWithContext(context.Background())
}

func (o ProductDetailsOutput) ToProductDetailsPtrOutputWithContext(ctx context.Context) ProductDetailsPtrOutput {
	return o.ApplyT(func(v ProductDetails) *ProductDetails {
		return &v
	}).(ProductDetailsPtrOutput)
}

// Quantity of the product
func (o ProductDetailsOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductDetails) *int { return v.Count }).(pulumi.IntPtrOutput)
}

//  Hierarchy of the product which uniquely identifies the product
func (o ProductDetailsOutput) HierarchyInformation() HierarchyInformationOutput {
	return o.ApplyT(func(v ProductDetails) HierarchyInformation { return v.HierarchyInformation }).(HierarchyInformationOutput)
}

type ProductDetailsPtrOutput struct{ *pulumi.OutputState }

func (ProductDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDetails)(nil)).Elem()
}

func (o ProductDetailsPtrOutput) ToProductDetailsPtrOutput() ProductDetailsPtrOutput {
	return o
}

func (o ProductDetailsPtrOutput) ToProductDetailsPtrOutputWithContext(ctx context.Context) ProductDetailsPtrOutput {
	return o
}

func (o ProductDetailsPtrOutput) Elem() ProductDetailsOutput {
	return o.ApplyT(func(v *ProductDetails) ProductDetails { return *v }).(ProductDetailsOutput)
}

// Quantity of the product
func (o ProductDetailsPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductDetails) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

//  Hierarchy of the product which uniquely identifies the product
func (o ProductDetailsPtrOutput) HierarchyInformation() HierarchyInformationPtrOutput {
	return o.ApplyT(func(v *ProductDetails) *HierarchyInformation {
		if v == nil {
			return nil
		}
		return &v.HierarchyInformation
	}).(HierarchyInformationPtrOutput)
}

// Represents product details
type ProductDetailsResponse struct {
	// Quantity of the product
	Count *int `pulumi:"count"`
	// list of device details
	DeviceDetails []DeviceDetailsResponse `pulumi:"deviceDetails"`
	//  Hierarchy of the product which uniquely identifies the product
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
}

// ProductDetailsResponseInput is an input type that accepts ProductDetailsResponseArgs and ProductDetailsResponseOutput values.
// You can construct a concrete instance of `ProductDetailsResponseInput` via:
//
//          ProductDetailsResponseArgs{...}
type ProductDetailsResponseInput interface {
	pulumi.Input

	ToProductDetailsResponseOutput() ProductDetailsResponseOutput
	ToProductDetailsResponseOutputWithContext(context.Context) ProductDetailsResponseOutput
}

// Represents product details
type ProductDetailsResponseArgs struct {
	// Quantity of the product
	Count pulumi.IntPtrInput `pulumi:"count"`
	// list of device details
	DeviceDetails DeviceDetailsResponseArrayInput `pulumi:"deviceDetails"`
	//  Hierarchy of the product which uniquely identifies the product
	HierarchyInformation HierarchyInformationResponseInput `pulumi:"hierarchyInformation"`
}

func (ProductDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetailsResponse)(nil)).Elem()
}

func (i ProductDetailsResponseArgs) ToProductDetailsResponseOutput() ProductDetailsResponseOutput {
	return i.ToProductDetailsResponseOutputWithContext(context.Background())
}

func (i ProductDetailsResponseArgs) ToProductDetailsResponseOutputWithContext(ctx context.Context) ProductDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsResponseOutput)
}

func (i ProductDetailsResponseArgs) ToProductDetailsResponsePtrOutput() ProductDetailsResponsePtrOutput {
	return i.ToProductDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ProductDetailsResponseArgs) ToProductDetailsResponsePtrOutputWithContext(ctx context.Context) ProductDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsResponseOutput).ToProductDetailsResponsePtrOutputWithContext(ctx)
}

// ProductDetailsResponsePtrInput is an input type that accepts ProductDetailsResponseArgs, ProductDetailsResponsePtr and ProductDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ProductDetailsResponsePtrInput` via:
//
//          ProductDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ProductDetailsResponsePtrInput interface {
	pulumi.Input

	ToProductDetailsResponsePtrOutput() ProductDetailsResponsePtrOutput
	ToProductDetailsResponsePtrOutputWithContext(context.Context) ProductDetailsResponsePtrOutput
}

type productDetailsResponsePtrType ProductDetailsResponseArgs

func ProductDetailsResponsePtr(v *ProductDetailsResponseArgs) ProductDetailsResponsePtrInput {
	return (*productDetailsResponsePtrType)(v)
}

func (*productDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDetailsResponse)(nil)).Elem()
}

func (i *productDetailsResponsePtrType) ToProductDetailsResponsePtrOutput() ProductDetailsResponsePtrOutput {
	return i.ToProductDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *productDetailsResponsePtrType) ToProductDetailsResponsePtrOutputWithContext(ctx context.Context) ProductDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductDetailsResponsePtrOutput)
}

// Represents product details
type ProductDetailsResponseOutput struct{ *pulumi.OutputState }

func (ProductDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductDetailsResponse)(nil)).Elem()
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponseOutput() ProductDetailsResponseOutput {
	return o
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponseOutputWithContext(ctx context.Context) ProductDetailsResponseOutput {
	return o
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponsePtrOutput() ProductDetailsResponsePtrOutput {
	return o.ToProductDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ProductDetailsResponseOutput) ToProductDetailsResponsePtrOutputWithContext(ctx context.Context) ProductDetailsResponsePtrOutput {
	return o.ApplyT(func(v ProductDetailsResponse) *ProductDetailsResponse {
		return &v
	}).(ProductDetailsResponsePtrOutput)
}

// Quantity of the product
func (o ProductDetailsResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProductDetailsResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// list of device details
func (o ProductDetailsResponseOutput) DeviceDetails() DeviceDetailsResponseArrayOutput {
	return o.ApplyT(func(v ProductDetailsResponse) []DeviceDetailsResponse { return v.DeviceDetails }).(DeviceDetailsResponseArrayOutput)
}

//  Hierarchy of the product which uniquely identifies the product
func (o ProductDetailsResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductDetailsResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

type ProductDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ProductDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProductDetailsResponse)(nil)).Elem()
}

func (o ProductDetailsResponsePtrOutput) ToProductDetailsResponsePtrOutput() ProductDetailsResponsePtrOutput {
	return o
}

func (o ProductDetailsResponsePtrOutput) ToProductDetailsResponsePtrOutputWithContext(ctx context.Context) ProductDetailsResponsePtrOutput {
	return o
}

func (o ProductDetailsResponsePtrOutput) Elem() ProductDetailsResponseOutput {
	return o.ApplyT(func(v *ProductDetailsResponse) ProductDetailsResponse { return *v }).(ProductDetailsResponseOutput)
}

// Quantity of the product
func (o ProductDetailsResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProductDetailsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// list of device details
func (o ProductDetailsResponsePtrOutput) DeviceDetails() DeviceDetailsResponseArrayOutput {
	return o.ApplyT(func(v *ProductDetailsResponse) []DeviceDetailsResponse {
		if v == nil {
			return nil
		}
		return v.DeviceDetails
	}).(DeviceDetailsResponseArrayOutput)
}

//  Hierarchy of the product which uniquely identifies the product
func (o ProductDetailsResponsePtrOutput) HierarchyInformation() HierarchyInformationResponsePtrOutput {
	return o.ApplyT(func(v *ProductDetailsResponse) *HierarchyInformationResponse {
		if v == nil {
			return nil
		}
		return &v.HierarchyInformation
	}).(HierarchyInformationResponsePtrOutput)
}

// Product Family
type ProductFamilyResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// List of product lines supported in the product family
	ProductLines []ProductLineResponse `pulumi:"productLines"`
}

// ProductFamilyResponseInput is an input type that accepts ProductFamilyResponseArgs and ProductFamilyResponseOutput values.
// You can construct a concrete instance of `ProductFamilyResponseInput` via:
//
//          ProductFamilyResponseArgs{...}
type ProductFamilyResponseInput interface {
	pulumi.Input

	ToProductFamilyResponseOutput() ProductFamilyResponseOutput
	ToProductFamilyResponseOutputWithContext(context.Context) ProductFamilyResponseOutput
}

// Product Family
type ProductFamilyResponseArgs struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponseInput `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponseInput `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponseInput `pulumi:"description"`
	// Display Name for the product system.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties FilterablePropertyResponseArrayInput `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponseInput `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation ImageInformationResponseArrayInput `pulumi:"imageInformation"`
	// List of product lines supported in the product family
	ProductLines ProductLineResponseArrayInput `pulumi:"productLines"`
}

func (ProductFamilyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductFamilyResponse)(nil)).Elem()
}

func (i ProductFamilyResponseArgs) ToProductFamilyResponseOutput() ProductFamilyResponseOutput {
	return i.ToProductFamilyResponseOutputWithContext(context.Background())
}

func (i ProductFamilyResponseArgs) ToProductFamilyResponseOutputWithContext(ctx context.Context) ProductFamilyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductFamilyResponseOutput)
}

// ProductFamilyResponseArrayInput is an input type that accepts ProductFamilyResponseArray and ProductFamilyResponseArrayOutput values.
// You can construct a concrete instance of `ProductFamilyResponseArrayInput` via:
//
//          ProductFamilyResponseArray{ ProductFamilyResponseArgs{...} }
type ProductFamilyResponseArrayInput interface {
	pulumi.Input

	ToProductFamilyResponseArrayOutput() ProductFamilyResponseArrayOutput
	ToProductFamilyResponseArrayOutputWithContext(context.Context) ProductFamilyResponseArrayOutput
}

type ProductFamilyResponseArray []ProductFamilyResponseInput

func (ProductFamilyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductFamilyResponse)(nil)).Elem()
}

func (i ProductFamilyResponseArray) ToProductFamilyResponseArrayOutput() ProductFamilyResponseArrayOutput {
	return i.ToProductFamilyResponseArrayOutputWithContext(context.Background())
}

func (i ProductFamilyResponseArray) ToProductFamilyResponseArrayOutputWithContext(ctx context.Context) ProductFamilyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductFamilyResponseArrayOutput)
}

// Product Family
type ProductFamilyResponseOutput struct{ *pulumi.OutputState }

func (ProductFamilyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductFamilyResponse)(nil)).Elem()
}

func (o ProductFamilyResponseOutput) ToProductFamilyResponseOutput() ProductFamilyResponseOutput {
	return o
}

func (o ProductFamilyResponseOutput) ToProductFamilyResponseOutputWithContext(ctx context.Context) ProductFamilyResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductFamilyResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Cost information for the product system.
func (o ProductFamilyResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductFamilyResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductFamilyResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductFamilyResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// list of filters supported for a product
func (o ProductFamilyResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// Hierarchy information of the product system.
func (o ProductFamilyResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductFamilyResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductFamilyResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// List of product lines supported in the product family
func (o ProductFamilyResponseOutput) ProductLines() ProductLineResponseArrayOutput {
	return o.ApplyT(func(v ProductFamilyResponse) []ProductLineResponse { return v.ProductLines }).(ProductLineResponseArrayOutput)
}

type ProductFamilyResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductFamilyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductFamilyResponse)(nil)).Elem()
}

func (o ProductFamilyResponseArrayOutput) ToProductFamilyResponseArrayOutput() ProductFamilyResponseArrayOutput {
	return o
}

func (o ProductFamilyResponseArrayOutput) ToProductFamilyResponseArrayOutputWithContext(ctx context.Context) ProductFamilyResponseArrayOutput {
	return o
}

func (o ProductFamilyResponseArrayOutput) Index(i pulumi.IntInput) ProductFamilyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductFamilyResponse {
		return vs[0].([]ProductFamilyResponse)[vs[1].(int)]
	}).(ProductFamilyResponseOutput)
}

// Product line
type ProductLineResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
	// List of products in the product line
	Products []ProductResponse `pulumi:"products"`
}

// ProductLineResponseInput is an input type that accepts ProductLineResponseArgs and ProductLineResponseOutput values.
// You can construct a concrete instance of `ProductLineResponseInput` via:
//
//          ProductLineResponseArgs{...}
type ProductLineResponseInput interface {
	pulumi.Input

	ToProductLineResponseOutput() ProductLineResponseOutput
	ToProductLineResponseOutputWithContext(context.Context) ProductLineResponseOutput
}

// Product line
type ProductLineResponseArgs struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponseInput `pulumi:"availabilityInformation"`
	// Cost information for the product system.
	CostInformation CostInformationResponseInput `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponseInput `pulumi:"description"`
	// Display Name for the product system.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties FilterablePropertyResponseArrayInput `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponseInput `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation ImageInformationResponseArrayInput `pulumi:"imageInformation"`
	// List of products in the product line
	Products ProductResponseArrayInput `pulumi:"products"`
}

func (ProductLineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLineResponse)(nil)).Elem()
}

func (i ProductLineResponseArgs) ToProductLineResponseOutput() ProductLineResponseOutput {
	return i.ToProductLineResponseOutputWithContext(context.Background())
}

func (i ProductLineResponseArgs) ToProductLineResponseOutputWithContext(ctx context.Context) ProductLineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLineResponseOutput)
}

// ProductLineResponseArrayInput is an input type that accepts ProductLineResponseArray and ProductLineResponseArrayOutput values.
// You can construct a concrete instance of `ProductLineResponseArrayInput` via:
//
//          ProductLineResponseArray{ ProductLineResponseArgs{...} }
type ProductLineResponseArrayInput interface {
	pulumi.Input

	ToProductLineResponseArrayOutput() ProductLineResponseArrayOutput
	ToProductLineResponseArrayOutputWithContext(context.Context) ProductLineResponseArrayOutput
}

type ProductLineResponseArray []ProductLineResponseInput

func (ProductLineResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLineResponse)(nil)).Elem()
}

func (i ProductLineResponseArray) ToProductLineResponseArrayOutput() ProductLineResponseArrayOutput {
	return i.ToProductLineResponseArrayOutputWithContext(context.Background())
}

func (i ProductLineResponseArray) ToProductLineResponseArrayOutputWithContext(ctx context.Context) ProductLineResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductLineResponseArrayOutput)
}

// Product line
type ProductLineResponseOutput struct{ *pulumi.OutputState }

func (ProductLineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductLineResponse)(nil)).Elem()
}

func (o ProductLineResponseOutput) ToProductLineResponseOutput() ProductLineResponseOutput {
	return o
}

func (o ProductLineResponseOutput) ToProductLineResponseOutputWithContext(ctx context.Context) ProductLineResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductLineResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// Cost information for the product system.
func (o ProductLineResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductLineResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductLineResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductLineResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// list of filters supported for a product
func (o ProductLineResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// Hierarchy information of the product system.
func (o ProductLineResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductLineResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductLineResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

// List of products in the product line
func (o ProductLineResponseOutput) Products() ProductResponseArrayOutput {
	return o.ApplyT(func(v ProductLineResponse) []ProductResponse { return v.Products }).(ProductResponseArrayOutput)
}

type ProductLineResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductLineResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductLineResponse)(nil)).Elem()
}

func (o ProductLineResponseArrayOutput) ToProductLineResponseArrayOutput() ProductLineResponseArrayOutput {
	return o
}

func (o ProductLineResponseArrayOutput) ToProductLineResponseArrayOutputWithContext(ctx context.Context) ProductLineResponseArrayOutput {
	return o
}

func (o ProductLineResponseArrayOutput) Index(i pulumi.IntInput) ProductLineResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductLineResponse {
		return vs[0].([]ProductLineResponse)[vs[1].(int)]
	}).(ProductLineResponseOutput)
}

// List of Products
type ProductResponse struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponse `pulumi:"availabilityInformation"`
	// List of configurations for the product
	Configurations []ConfigurationResponse `pulumi:"configurations"`
	// Cost information for the product system.
	CostInformation CostInformationResponse `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponse `pulumi:"description"`
	// Display Name for the product system.
	DisplayName string `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties []FilterablePropertyResponse `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponse `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation []ImageInformationResponse `pulumi:"imageInformation"`
}

// ProductResponseInput is an input type that accepts ProductResponseArgs and ProductResponseOutput values.
// You can construct a concrete instance of `ProductResponseInput` via:
//
//          ProductResponseArgs{...}
type ProductResponseInput interface {
	pulumi.Input

	ToProductResponseOutput() ProductResponseOutput
	ToProductResponseOutputWithContext(context.Context) ProductResponseOutput
}

// List of Products
type ProductResponseArgs struct {
	// Availability information of the product system.
	AvailabilityInformation AvailabilityInformationResponseInput `pulumi:"availabilityInformation"`
	// List of configurations for the product
	Configurations ConfigurationResponseArrayInput `pulumi:"configurations"`
	// Cost information for the product system.
	CostInformation CostInformationResponseInput `pulumi:"costInformation"`
	// Description related to the product system.
	Description DescriptionResponseInput `pulumi:"description"`
	// Display Name for the product system.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// list of filters supported for a product
	FilterableProperties FilterablePropertyResponseArrayInput `pulumi:"filterableProperties"`
	// Hierarchy information of the product system.
	HierarchyInformation HierarchyInformationResponseInput `pulumi:"hierarchyInformation"`
	// Image information for the product system.
	ImageInformation ImageInformationResponseArrayInput `pulumi:"imageInformation"`
}

func (ProductResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductResponse)(nil)).Elem()
}

func (i ProductResponseArgs) ToProductResponseOutput() ProductResponseOutput {
	return i.ToProductResponseOutputWithContext(context.Background())
}

func (i ProductResponseArgs) ToProductResponseOutputWithContext(ctx context.Context) ProductResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductResponseOutput)
}

// ProductResponseArrayInput is an input type that accepts ProductResponseArray and ProductResponseArrayOutput values.
// You can construct a concrete instance of `ProductResponseArrayInput` via:
//
//          ProductResponseArray{ ProductResponseArgs{...} }
type ProductResponseArrayInput interface {
	pulumi.Input

	ToProductResponseArrayOutput() ProductResponseArrayOutput
	ToProductResponseArrayOutputWithContext(context.Context) ProductResponseArrayOutput
}

type ProductResponseArray []ProductResponseInput

func (ProductResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductResponse)(nil)).Elem()
}

func (i ProductResponseArray) ToProductResponseArrayOutput() ProductResponseArrayOutput {
	return i.ToProductResponseArrayOutputWithContext(context.Background())
}

func (i ProductResponseArray) ToProductResponseArrayOutputWithContext(ctx context.Context) ProductResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProductResponseArrayOutput)
}

// List of Products
type ProductResponseOutput struct{ *pulumi.OutputState }

func (ProductResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProductResponse)(nil)).Elem()
}

func (o ProductResponseOutput) ToProductResponseOutput() ProductResponseOutput {
	return o
}

func (o ProductResponseOutput) ToProductResponseOutputWithContext(ctx context.Context) ProductResponseOutput {
	return o
}

// Availability information of the product system.
func (o ProductResponseOutput) AvailabilityInformation() AvailabilityInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) AvailabilityInformationResponse { return v.AvailabilityInformation }).(AvailabilityInformationResponseOutput)
}

// List of configurations for the product
func (o ProductResponseOutput) Configurations() ConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []ConfigurationResponse { return v.Configurations }).(ConfigurationResponseArrayOutput)
}

// Cost information for the product system.
func (o ProductResponseOutput) CostInformation() CostInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) CostInformationResponse { return v.CostInformation }).(CostInformationResponseOutput)
}

// Description related to the product system.
func (o ProductResponseOutput) Description() DescriptionResponseOutput {
	return o.ApplyT(func(v ProductResponse) DescriptionResponse { return v.Description }).(DescriptionResponseOutput)
}

// Display Name for the product system.
func (o ProductResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ProductResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// list of filters supported for a product
func (o ProductResponseOutput) FilterableProperties() FilterablePropertyResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []FilterablePropertyResponse { return v.FilterableProperties }).(FilterablePropertyResponseArrayOutput)
}

// Hierarchy information of the product system.
func (o ProductResponseOutput) HierarchyInformation() HierarchyInformationResponseOutput {
	return o.ApplyT(func(v ProductResponse) HierarchyInformationResponse { return v.HierarchyInformation }).(HierarchyInformationResponseOutput)
}

// Image information for the product system.
func (o ProductResponseOutput) ImageInformation() ImageInformationResponseArrayOutput {
	return o.ApplyT(func(v ProductResponse) []ImageInformationResponse { return v.ImageInformation }).(ImageInformationResponseArrayOutput)
}

type ProductResponseArrayOutput struct{ *pulumi.OutputState }

func (ProductResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProductResponse)(nil)).Elem()
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutput() ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) ToProductResponseArrayOutputWithContext(ctx context.Context) ProductResponseArrayOutput {
	return o
}

func (o ProductResponseArrayOutput) Index(i pulumi.IntInput) ProductResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProductResponse {
		return vs[0].([]ProductResponse)[vs[1].(int)]
	}).(ProductResponseOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddress struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressInput is an input type that accepts ShippingAddressArgs and ShippingAddressOutput values.
// You can construct a concrete instance of `ShippingAddressInput` via:
//
//          ShippingAddressArgs{...}
type ShippingAddressInput interface {
	pulumi.Input

	ToShippingAddressOutput() ShippingAddressOutput
	ToShippingAddressOutputWithContext(context.Context) ShippingAddressOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (i ShippingAddressArgs) ToShippingAddressOutput() ShippingAddressOutput {
	return i.ToShippingAddressOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput)
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i ShippingAddressArgs) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressOutput).ToShippingAddressPtrOutputWithContext(ctx)
}

// ShippingAddressPtrInput is an input type that accepts ShippingAddressArgs, ShippingAddressPtr and ShippingAddressPtrOutput values.
// You can construct a concrete instance of `ShippingAddressPtrInput` via:
//
//          ShippingAddressArgs{...}
//
//  or:
//
//          nil
type ShippingAddressPtrInput interface {
	pulumi.Input

	ToShippingAddressPtrOutput() ShippingAddressPtrOutput
	ToShippingAddressPtrOutputWithContext(context.Context) ShippingAddressPtrOutput
}

type shippingAddressPtrType ShippingAddressArgs

func ShippingAddressPtr(v *ShippingAddressArgs) ShippingAddressPtrInput {
	return (*shippingAddressPtrType)(v)
}

func (*shippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return i.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (i *shippingAddressPtrType) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressOutput struct{ *pulumi.OutputState }

func (ShippingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressOutput) ToShippingAddressOutput() ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressOutputWithContext(ctx context.Context) ShippingAddressOutput {
	return o
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o.ToShippingAddressPtrOutputWithContext(context.Background())
}

func (o ShippingAddressOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *ShippingAddress {
		return &v
	}).(ShippingAddressPtrOutput)
}

// Type of address.
func (o ShippingAddressOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddress) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddress) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressPtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddress)(nil)).Elem()
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutput() ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) ToShippingAddressPtrOutputWithContext(ctx context.Context) ShippingAddressPtrOutput {
	return o
}

func (o ShippingAddressPtrOutput) Elem() ShippingAddressOutput {
	return o.ApplyT(func(v *ShippingAddress) ShippingAddress { return *v }).(ShippingAddressOutput)
}

// Type of address.
func (o ShippingAddressPtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressPtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressPtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressPtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressPtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressPtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressPtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponse struct {
	// Type of address.
	AddressType *string `pulumi:"addressType"`
	// Name of the City.
	City *string `pulumi:"city"`
	// Name of the company.
	CompanyName *string `pulumi:"companyName"`
	// Name of the Country.
	Country string `pulumi:"country"`
	// Postal code.
	PostalCode *string `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince *string `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 string `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 *string `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 *string `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode *string `pulumi:"zipExtendedCode"`
}

// ShippingAddressResponseInput is an input type that accepts ShippingAddressResponseArgs and ShippingAddressResponseOutput values.
// You can construct a concrete instance of `ShippingAddressResponseInput` via:
//
//          ShippingAddressResponseArgs{...}
type ShippingAddressResponseInput interface {
	pulumi.Input

	ToShippingAddressResponseOutput() ShippingAddressResponseOutput
	ToShippingAddressResponseOutputWithContext(context.Context) ShippingAddressResponseOutput
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseArgs struct {
	// Type of address.
	AddressType pulumi.StringPtrInput `pulumi:"addressType"`
	// Name of the City.
	City pulumi.StringPtrInput `pulumi:"city"`
	// Name of the company.
	CompanyName pulumi.StringPtrInput `pulumi:"companyName"`
	// Name of the Country.
	Country pulumi.StringInput `pulumi:"country"`
	// Postal code.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// Name of the State or Province.
	StateOrProvince pulumi.StringPtrInput `pulumi:"stateOrProvince"`
	// Street Address line 1.
	StreetAddress1 pulumi.StringInput `pulumi:"streetAddress1"`
	// Street Address line 2.
	StreetAddress2 pulumi.StringPtrInput `pulumi:"streetAddress2"`
	// Street Address line 3.
	StreetAddress3 pulumi.StringPtrInput `pulumi:"streetAddress3"`
	// Extended Zip Code.
	ZipExtendedCode pulumi.StringPtrInput `pulumi:"zipExtendedCode"`
}

func (ShippingAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return i.ToShippingAddressResponseOutputWithContext(context.Background())
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponseOutput)
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return i.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (i ShippingAddressResponseArgs) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponseOutput).ToShippingAddressResponsePtrOutputWithContext(ctx)
}

// ShippingAddressResponsePtrInput is an input type that accepts ShippingAddressResponseArgs, ShippingAddressResponsePtr and ShippingAddressResponsePtrOutput values.
// You can construct a concrete instance of `ShippingAddressResponsePtrInput` via:
//
//          ShippingAddressResponseArgs{...}
//
//  or:
//
//          nil
type ShippingAddressResponsePtrInput interface {
	pulumi.Input

	ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput
	ToShippingAddressResponsePtrOutputWithContext(context.Context) ShippingAddressResponsePtrOutput
}

type shippingAddressResponsePtrType ShippingAddressResponseArgs

func ShippingAddressResponsePtr(v *ShippingAddressResponseArgs) ShippingAddressResponsePtrInput {
	return (*shippingAddressResponsePtrType)(v)
}

func (*shippingAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (i *shippingAddressResponsePtrType) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return i.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (i *shippingAddressResponsePtrType) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingAddressResponsePtrOutput)
}

// Shipping address where customer wishes to receive the device.
type ShippingAddressResponseOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutput() ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponseOutputWithContext(ctx context.Context) ShippingAddressResponseOutput {
	return o
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o.ToShippingAddressResponsePtrOutputWithContext(context.Background())
}

func (o ShippingAddressResponseOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *ShippingAddressResponse {
		return &v
	}).(ShippingAddressResponsePtrOutput)
}

// Type of address.
func (o ShippingAddressResponseOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.AddressType }).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponseOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.City }).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponseOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponseOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.Country }).(pulumi.StringOutput)
}

// Postal code.
func (o ShippingAddressResponseOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponseOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StateOrProvince }).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponseOutput) StreetAddress1() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingAddressResponse) string { return v.StreetAddress1 }).(pulumi.StringOutput)
}

// Street Address line 2.
func (o ShippingAddressResponseOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress2 }).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponseOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.StreetAddress3 }).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponseOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ShippingAddressResponse) *string { return v.ZipExtendedCode }).(pulumi.StringPtrOutput)
}

type ShippingAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingAddressResponse)(nil)).Elem()
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutput() ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) ToShippingAddressResponsePtrOutputWithContext(ctx context.Context) ShippingAddressResponsePtrOutput {
	return o
}

func (o ShippingAddressResponsePtrOutput) Elem() ShippingAddressResponseOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) ShippingAddressResponse { return *v }).(ShippingAddressResponseOutput)
}

// Type of address.
func (o ShippingAddressResponsePtrOutput) AddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressType
	}).(pulumi.StringPtrOutput)
}

// Name of the City.
func (o ShippingAddressResponsePtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// Name of the company.
func (o ShippingAddressResponsePtrOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.CompanyName
	}).(pulumi.StringPtrOutput)
}

// Name of the Country.
func (o ShippingAddressResponsePtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// Postal code.
func (o ShippingAddressResponsePtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// Name of the State or Province.
func (o ShippingAddressResponsePtrOutput) StateOrProvince() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StateOrProvince
	}).(pulumi.StringPtrOutput)
}

// Street Address line 1.
func (o ShippingAddressResponsePtrOutput) StreetAddress1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.StreetAddress1
	}).(pulumi.StringPtrOutput)
}

// Street Address line 2.
func (o ShippingAddressResponsePtrOutput) StreetAddress2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress2
	}).(pulumi.StringPtrOutput)
}

// Street Address line 3.
func (o ShippingAddressResponsePtrOutput) StreetAddress3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.StreetAddress3
	}).(pulumi.StringPtrOutput)
}

// Extended Zip Code.
func (o ShippingAddressResponsePtrOutput) ZipExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ZipExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Package shipping details
type ShippingDetailsResponse struct {
	// Carrier Name for display purpose. Not to be used for any processing.
	CarrierDisplayName string `pulumi:"carrierDisplayName"`
	// Name of the carrier.
	CarrierName string `pulumi:"carrierName"`
	// TrackingId of the package
	TrackingId string `pulumi:"trackingId"`
	// TrackingUrl of the package.
	TrackingUrl string `pulumi:"trackingUrl"`
}

// ShippingDetailsResponseInput is an input type that accepts ShippingDetailsResponseArgs and ShippingDetailsResponseOutput values.
// You can construct a concrete instance of `ShippingDetailsResponseInput` via:
//
//          ShippingDetailsResponseArgs{...}
type ShippingDetailsResponseInput interface {
	pulumi.Input

	ToShippingDetailsResponseOutput() ShippingDetailsResponseOutput
	ToShippingDetailsResponseOutputWithContext(context.Context) ShippingDetailsResponseOutput
}

// Package shipping details
type ShippingDetailsResponseArgs struct {
	// Carrier Name for display purpose. Not to be used for any processing.
	CarrierDisplayName pulumi.StringInput `pulumi:"carrierDisplayName"`
	// Name of the carrier.
	CarrierName pulumi.StringInput `pulumi:"carrierName"`
	// TrackingId of the package
	TrackingId pulumi.StringInput `pulumi:"trackingId"`
	// TrackingUrl of the package.
	TrackingUrl pulumi.StringInput `pulumi:"trackingUrl"`
}

func (ShippingDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingDetailsResponse)(nil)).Elem()
}

func (i ShippingDetailsResponseArgs) ToShippingDetailsResponseOutput() ShippingDetailsResponseOutput {
	return i.ToShippingDetailsResponseOutputWithContext(context.Background())
}

func (i ShippingDetailsResponseArgs) ToShippingDetailsResponseOutputWithContext(ctx context.Context) ShippingDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingDetailsResponseOutput)
}

func (i ShippingDetailsResponseArgs) ToShippingDetailsResponsePtrOutput() ShippingDetailsResponsePtrOutput {
	return i.ToShippingDetailsResponsePtrOutputWithContext(context.Background())
}

func (i ShippingDetailsResponseArgs) ToShippingDetailsResponsePtrOutputWithContext(ctx context.Context) ShippingDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingDetailsResponseOutput).ToShippingDetailsResponsePtrOutputWithContext(ctx)
}

// ShippingDetailsResponsePtrInput is an input type that accepts ShippingDetailsResponseArgs, ShippingDetailsResponsePtr and ShippingDetailsResponsePtrOutput values.
// You can construct a concrete instance of `ShippingDetailsResponsePtrInput` via:
//
//          ShippingDetailsResponseArgs{...}
//
//  or:
//
//          nil
type ShippingDetailsResponsePtrInput interface {
	pulumi.Input

	ToShippingDetailsResponsePtrOutput() ShippingDetailsResponsePtrOutput
	ToShippingDetailsResponsePtrOutputWithContext(context.Context) ShippingDetailsResponsePtrOutput
}

type shippingDetailsResponsePtrType ShippingDetailsResponseArgs

func ShippingDetailsResponsePtr(v *ShippingDetailsResponseArgs) ShippingDetailsResponsePtrInput {
	return (*shippingDetailsResponsePtrType)(v)
}

func (*shippingDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingDetailsResponse)(nil)).Elem()
}

func (i *shippingDetailsResponsePtrType) ToShippingDetailsResponsePtrOutput() ShippingDetailsResponsePtrOutput {
	return i.ToShippingDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *shippingDetailsResponsePtrType) ToShippingDetailsResponsePtrOutputWithContext(ctx context.Context) ShippingDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ShippingDetailsResponsePtrOutput)
}

// Package shipping details
type ShippingDetailsResponseOutput struct{ *pulumi.OutputState }

func (ShippingDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ShippingDetailsResponse)(nil)).Elem()
}

func (o ShippingDetailsResponseOutput) ToShippingDetailsResponseOutput() ShippingDetailsResponseOutput {
	return o
}

func (o ShippingDetailsResponseOutput) ToShippingDetailsResponseOutputWithContext(ctx context.Context) ShippingDetailsResponseOutput {
	return o
}

func (o ShippingDetailsResponseOutput) ToShippingDetailsResponsePtrOutput() ShippingDetailsResponsePtrOutput {
	return o.ToShippingDetailsResponsePtrOutputWithContext(context.Background())
}

func (o ShippingDetailsResponseOutput) ToShippingDetailsResponsePtrOutputWithContext(ctx context.Context) ShippingDetailsResponsePtrOutput {
	return o.ApplyT(func(v ShippingDetailsResponse) *ShippingDetailsResponse {
		return &v
	}).(ShippingDetailsResponsePtrOutput)
}

// Carrier Name for display purpose. Not to be used for any processing.
func (o ShippingDetailsResponseOutput) CarrierDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingDetailsResponse) string { return v.CarrierDisplayName }).(pulumi.StringOutput)
}

// Name of the carrier.
func (o ShippingDetailsResponseOutput) CarrierName() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingDetailsResponse) string { return v.CarrierName }).(pulumi.StringOutput)
}

// TrackingId of the package
func (o ShippingDetailsResponseOutput) TrackingId() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingDetailsResponse) string { return v.TrackingId }).(pulumi.StringOutput)
}

// TrackingUrl of the package.
func (o ShippingDetailsResponseOutput) TrackingUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ShippingDetailsResponse) string { return v.TrackingUrl }).(pulumi.StringOutput)
}

type ShippingDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (ShippingDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ShippingDetailsResponse)(nil)).Elem()
}

func (o ShippingDetailsResponsePtrOutput) ToShippingDetailsResponsePtrOutput() ShippingDetailsResponsePtrOutput {
	return o
}

func (o ShippingDetailsResponsePtrOutput) ToShippingDetailsResponsePtrOutputWithContext(ctx context.Context) ShippingDetailsResponsePtrOutput {
	return o
}

func (o ShippingDetailsResponsePtrOutput) Elem() ShippingDetailsResponseOutput {
	return o.ApplyT(func(v *ShippingDetailsResponse) ShippingDetailsResponse { return *v }).(ShippingDetailsResponseOutput)
}

// Carrier Name for display purpose. Not to be used for any processing.
func (o ShippingDetailsResponsePtrOutput) CarrierDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierDisplayName
	}).(pulumi.StringPtrOutput)
}

// Name of the carrier.
func (o ShippingDetailsResponsePtrOutput) CarrierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CarrierName
	}).(pulumi.StringPtrOutput)
}

// TrackingId of the package
func (o ShippingDetailsResponsePtrOutput) TrackingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingId
	}).(pulumi.StringPtrOutput)
}

// TrackingUrl of the package.
func (o ShippingDetailsResponsePtrOutput) TrackingUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ShippingDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TrackingUrl
	}).(pulumi.StringPtrOutput)
}

// Specifications of the configurations
type SpecificationResponse struct {
	// Name of the specification
	Name string `pulumi:"name"`
	// Value of the specification
	Value string `pulumi:"value"`
}

// SpecificationResponseInput is an input type that accepts SpecificationResponseArgs and SpecificationResponseOutput values.
// You can construct a concrete instance of `SpecificationResponseInput` via:
//
//          SpecificationResponseArgs{...}
type SpecificationResponseInput interface {
	pulumi.Input

	ToSpecificationResponseOutput() SpecificationResponseOutput
	ToSpecificationResponseOutputWithContext(context.Context) SpecificationResponseOutput
}

// Specifications of the configurations
type SpecificationResponseArgs struct {
	// Name of the specification
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the specification
	Value pulumi.StringInput `pulumi:"value"`
}

func (SpecificationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpecificationResponse)(nil)).Elem()
}

func (i SpecificationResponseArgs) ToSpecificationResponseOutput() SpecificationResponseOutput {
	return i.ToSpecificationResponseOutputWithContext(context.Background())
}

func (i SpecificationResponseArgs) ToSpecificationResponseOutputWithContext(ctx context.Context) SpecificationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpecificationResponseOutput)
}

// SpecificationResponseArrayInput is an input type that accepts SpecificationResponseArray and SpecificationResponseArrayOutput values.
// You can construct a concrete instance of `SpecificationResponseArrayInput` via:
//
//          SpecificationResponseArray{ SpecificationResponseArgs{...} }
type SpecificationResponseArrayInput interface {
	pulumi.Input

	ToSpecificationResponseArrayOutput() SpecificationResponseArrayOutput
	ToSpecificationResponseArrayOutputWithContext(context.Context) SpecificationResponseArrayOutput
}

type SpecificationResponseArray []SpecificationResponseInput

func (SpecificationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpecificationResponse)(nil)).Elem()
}

func (i SpecificationResponseArray) ToSpecificationResponseArrayOutput() SpecificationResponseArrayOutput {
	return i.ToSpecificationResponseArrayOutputWithContext(context.Background())
}

func (i SpecificationResponseArray) ToSpecificationResponseArrayOutputWithContext(ctx context.Context) SpecificationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpecificationResponseArrayOutput)
}

// Specifications of the configurations
type SpecificationResponseOutput struct{ *pulumi.OutputState }

func (SpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpecificationResponse)(nil)).Elem()
}

func (o SpecificationResponseOutput) ToSpecificationResponseOutput() SpecificationResponseOutput {
	return o
}

func (o SpecificationResponseOutput) ToSpecificationResponseOutputWithContext(ctx context.Context) SpecificationResponseOutput {
	return o
}

// Name of the specification
func (o SpecificationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SpecificationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the specification
func (o SpecificationResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SpecificationResponse) string { return v.Value }).(pulumi.StringOutput)
}

type SpecificationResponseArrayOutput struct{ *pulumi.OutputState }

func (SpecificationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpecificationResponse)(nil)).Elem()
}

func (o SpecificationResponseArrayOutput) ToSpecificationResponseArrayOutput() SpecificationResponseArrayOutput {
	return o
}

func (o SpecificationResponseArrayOutput) ToSpecificationResponseArrayOutputWithContext(ctx context.Context) SpecificationResponseArrayOutput {
	return o
}

func (o SpecificationResponseArrayOutput) Index(i pulumi.IntInput) SpecificationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpecificationResponse {
		return vs[0].([]SpecificationResponse)[vs[1].(int)]
	}).(SpecificationResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// SystemDataResponseInput is an input type that accepts SystemDataResponseArgs and SystemDataResponseOutput values.
// You can construct a concrete instance of `SystemDataResponseInput` via:
//
//          SystemDataResponseArgs{...}
type SystemDataResponseInput interface {
	pulumi.Input

	ToSystemDataResponseOutput() SystemDataResponseOutput
	ToSystemDataResponseOutputWithContext(context.Context) SystemDataResponseOutput
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseArgs struct {
	// The timestamp of resource creation (UTC).
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType pulumi.StringPtrInput `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt pulumi.StringPtrInput `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType pulumi.StringPtrInput `pulumi:"lastModifiedByType"`
}

func (SystemDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return i.ToSystemDataResponseOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput)
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i SystemDataResponseArgs) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponseOutput).ToSystemDataResponsePtrOutputWithContext(ctx)
}

// SystemDataResponsePtrInput is an input type that accepts SystemDataResponseArgs, SystemDataResponsePtr and SystemDataResponsePtrOutput values.
// You can construct a concrete instance of `SystemDataResponsePtrInput` via:
//
//          SystemDataResponseArgs{...}
//
//  or:
//
//          nil
type SystemDataResponsePtrInput interface {
	pulumi.Input

	ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput
	ToSystemDataResponsePtrOutputWithContext(context.Context) SystemDataResponsePtrOutput
}

type systemDataResponsePtrType SystemDataResponseArgs

func SystemDataResponsePtr(v *SystemDataResponseArgs) SystemDataResponsePtrInput {
	return (*systemDataResponsePtrType)(v)
}

func (*systemDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return i.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (i *systemDataResponsePtrType) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SystemDataResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o.ToSystemDataResponsePtrOutputWithContext(context.Background())
}

func (o SystemDataResponseOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *SystemDataResponse {
		return &v
	}).(SystemDataResponsePtrOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type SystemDataResponsePtrOutput struct{ *pulumi.OutputState }

func (SystemDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutput() SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) ToSystemDataResponsePtrOutputWithContext(ctx context.Context) SystemDataResponsePtrOutput {
	return o
}

func (o SystemDataResponsePtrOutput) Elem() SystemDataResponseOutput {
	return o.ApplyT(func(v *SystemDataResponse) SystemDataResponse { return *v }).(SystemDataResponseOutput)
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponsePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponsePtrOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.CreatedByType
	}).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponsePtrOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedAt
	}).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedBy
	}).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponsePtrOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SystemDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.LastModifiedByType
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferences struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesInput is an input type that accepts TransportPreferencesArgs and TransportPreferencesOutput values.
// You can construct a concrete instance of `TransportPreferencesInput` via:
//
//          TransportPreferencesArgs{...}
type TransportPreferencesInput interface {
	pulumi.Input

	ToTransportPreferencesOutput() TransportPreferencesOutput
	ToTransportPreferencesOutputWithContext(context.Context) TransportPreferencesOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return i.ToTransportPreferencesOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput)
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i TransportPreferencesArgs) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesOutput).ToTransportPreferencesPtrOutputWithContext(ctx)
}

// TransportPreferencesPtrInput is an input type that accepts TransportPreferencesArgs, TransportPreferencesPtr and TransportPreferencesPtrOutput values.
// You can construct a concrete instance of `TransportPreferencesPtrInput` via:
//
//          TransportPreferencesArgs{...}
//
//  or:
//
//          nil
type TransportPreferencesPtrInput interface {
	pulumi.Input

	ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput
	ToTransportPreferencesPtrOutputWithContext(context.Context) TransportPreferencesPtrOutput
}

type transportPreferencesPtrType TransportPreferencesArgs

func TransportPreferencesPtr(v *TransportPreferencesArgs) TransportPreferencesPtrInput {
	return (*transportPreferencesPtrType)(v)
}

func (*transportPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return i.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (i *transportPreferencesPtrType) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesOutput struct{ *pulumi.OutputState }

func (TransportPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutput() TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesOutputWithContext(ctx context.Context) TransportPreferencesOutput {
	return o
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o.ToTransportPreferencesPtrOutputWithContext(context.Background())
}

func (o TransportPreferencesOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o.ApplyT(func(v TransportPreferences) *TransportPreferences {
		return &v
	}).(TransportPreferencesPtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferences) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesPtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferences)(nil)).Elem()
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutput() TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) ToTransportPreferencesPtrOutputWithContext(ctx context.Context) TransportPreferencesPtrOutput {
	return o
}

func (o TransportPreferencesPtrOutput) Elem() TransportPreferencesOutput {
	return o.ApplyT(func(v *TransportPreferences) TransportPreferences { return *v }).(TransportPreferencesOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesPtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferences) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponse struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType string `pulumi:"preferredShipmentType"`
}

// TransportPreferencesResponseInput is an input type that accepts TransportPreferencesResponseArgs and TransportPreferencesResponseOutput values.
// You can construct a concrete instance of `TransportPreferencesResponseInput` via:
//
//          TransportPreferencesResponseArgs{...}
type TransportPreferencesResponseInput interface {
	pulumi.Input

	ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput
	ToTransportPreferencesResponseOutputWithContext(context.Context) TransportPreferencesResponseOutput
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseArgs struct {
	// Indicates Shipment Logistics type that the customer preferred.
	PreferredShipmentType pulumi.StringInput `pulumi:"preferredShipmentType"`
}

func (TransportPreferencesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return i.ToTransportPreferencesResponseOutputWithContext(context.Background())
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponseOutput)
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return i.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i TransportPreferencesResponseArgs) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponseOutput).ToTransportPreferencesResponsePtrOutputWithContext(ctx)
}

// TransportPreferencesResponsePtrInput is an input type that accepts TransportPreferencesResponseArgs, TransportPreferencesResponsePtr and TransportPreferencesResponsePtrOutput values.
// You can construct a concrete instance of `TransportPreferencesResponsePtrInput` via:
//
//          TransportPreferencesResponseArgs{...}
//
//  or:
//
//          nil
type TransportPreferencesResponsePtrInput interface {
	pulumi.Input

	ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput
	ToTransportPreferencesResponsePtrOutputWithContext(context.Context) TransportPreferencesResponsePtrOutput
}

type transportPreferencesResponsePtrType TransportPreferencesResponseArgs

func TransportPreferencesResponsePtr(v *TransportPreferencesResponseArgs) TransportPreferencesResponsePtrInput {
	return (*transportPreferencesResponsePtrType)(v)
}

func (*transportPreferencesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (i *transportPreferencesResponsePtrType) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return i.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (i *transportPreferencesResponsePtrType) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportPreferencesResponsePtrOutput)
}

// Preferences related to the shipment logistics of the sku
type TransportPreferencesResponseOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutput() TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponseOutputWithContext(ctx context.Context) TransportPreferencesResponseOutput {
	return o
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o.ToTransportPreferencesResponsePtrOutputWithContext(context.Background())
}

func (o TransportPreferencesResponseOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) *TransportPreferencesResponse {
		return &v
	}).(TransportPreferencesResponsePtrOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponseOutput) PreferredShipmentType() pulumi.StringOutput {
	return o.ApplyT(func(v TransportPreferencesResponse) string { return v.PreferredShipmentType }).(pulumi.StringOutput)
}

type TransportPreferencesResponsePtrOutput struct{ *pulumi.OutputState }

func (TransportPreferencesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportPreferencesResponse)(nil)).Elem()
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutput() TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) ToTransportPreferencesResponsePtrOutputWithContext(ctx context.Context) TransportPreferencesResponsePtrOutput {
	return o
}

func (o TransportPreferencesResponsePtrOutput) Elem() TransportPreferencesResponseOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) TransportPreferencesResponse { return *v }).(TransportPreferencesResponseOutput)
}

// Indicates Shipment Logistics type that the customer preferred.
func (o TransportPreferencesResponsePtrOutput) PreferredShipmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportPreferencesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PreferredShipmentType
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AdditionalErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(AddressDetailsOutput{})
	pulumi.RegisterOutputType(AddressDetailsPtrOutput{})
	pulumi.RegisterOutputType(AddressDetailsResponseOutput{})
	pulumi.RegisterOutputType(AddressDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(AddressPropertiesOutput{})
	pulumi.RegisterOutputType(AddressPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AddressPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AddressPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AvailabilityInformationResponseOutput{})
	pulumi.RegisterOutputType(BillingModelResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationFiltersOutput{})
	pulumi.RegisterOutputType(ConfigurationFiltersArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContactDetailsOutput{})
	pulumi.RegisterOutputType(ContactDetailsPtrOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponseOutput{})
	pulumi.RegisterOutputType(ContactDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(CostInformationResponseOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionDetailsOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionRegisteredFeaturesOutput{})
	pulumi.RegisterOutputType(CustomerSubscriptionRegisteredFeaturesArrayOutput{})
	pulumi.RegisterOutputType(DescriptionResponseOutput{})
	pulumi.RegisterOutputType(DeviceDetailsResponseOutput{})
	pulumi.RegisterOutputType(DeviceDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(FilterablePropertyOutput{})
	pulumi.RegisterOutputType(FilterablePropertyPtrOutput{})
	pulumi.RegisterOutputType(FilterablePropertyMapOutput{})
	pulumi.RegisterOutputType(FilterablePropertyResponseOutput{})
	pulumi.RegisterOutputType(FilterablePropertyResponseArrayOutput{})
	pulumi.RegisterOutputType(HierarchyInformationOutput{})
	pulumi.RegisterOutputType(HierarchyInformationPtrOutput{})
	pulumi.RegisterOutputType(HierarchyInformationResponseOutput{})
	pulumi.RegisterOutputType(HierarchyInformationResponsePtrOutput{})
	pulumi.RegisterOutputType(ImageInformationResponseOutput{})
	pulumi.RegisterOutputType(ImageInformationResponseArrayOutput{})
	pulumi.RegisterOutputType(LinkResponseOutput{})
	pulumi.RegisterOutputType(LinkResponseArrayOutput{})
	pulumi.RegisterOutputType(MeterDetailsResponseOutput{})
	pulumi.RegisterOutputType(MeterDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceArrayOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseOutput{})
	pulumi.RegisterOutputType(NotificationPreferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(OrderDetailsOutput{})
	pulumi.RegisterOutputType(OrderDetailsPtrOutput{})
	pulumi.RegisterOutputType(OrderDetailsResponseOutput{})
	pulumi.RegisterOutputType(OrderDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderStatusDetailsResponseOutput{})
	pulumi.RegisterOutputType(OrderStatusDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(OrderStatusDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesPtrOutput{})
	pulumi.RegisterOutputType(PreferencesResponseOutput{})
	pulumi.RegisterOutputType(PreferencesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductDetailsOutput{})
	pulumi.RegisterOutputType(ProductDetailsPtrOutput{})
	pulumi.RegisterOutputType(ProductDetailsResponseOutput{})
	pulumi.RegisterOutputType(ProductDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(ProductFamilyResponseOutput{})
	pulumi.RegisterOutputType(ProductFamilyResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductLineResponseOutput{})
	pulumi.RegisterOutputType(ProductLineResponseArrayOutput{})
	pulumi.RegisterOutputType(ProductResponseOutput{})
	pulumi.RegisterOutputType(ProductResponseArrayOutput{})
	pulumi.RegisterOutputType(ShippingAddressOutput{})
	pulumi.RegisterOutputType(ShippingAddressPtrOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponseOutput{})
	pulumi.RegisterOutputType(ShippingAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(ShippingDetailsResponseOutput{})
	pulumi.RegisterOutputType(ShippingDetailsResponsePtrOutput{})
	pulumi.RegisterOutputType(SpecificationResponseOutput{})
	pulumi.RegisterOutputType(SpecificationResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(SystemDataResponsePtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesOutput{})
	pulumi.RegisterOutputType(TransportPreferencesPtrOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponseOutput{})
	pulumi.RegisterOutputType(TransportPreferencesResponsePtrOutput{})
}
