// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthentication struct {
	// The location of the authentication key/value pair in the request.
	In string `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name string `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type string `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value string `pulumi:"value"`
}

// ApiKeyAuthenticationInput is an input type that accepts ApiKeyAuthenticationArgs and ApiKeyAuthenticationOutput values.
// You can construct a concrete instance of `ApiKeyAuthenticationInput` via:
//
//          ApiKeyAuthenticationArgs{...}
type ApiKeyAuthenticationInput interface {
	pulumi.Input

	ToApiKeyAuthenticationOutput() ApiKeyAuthenticationOutput
	ToApiKeyAuthenticationOutputWithContext(context.Context) ApiKeyAuthenticationOutput
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationArgs struct {
	// The location of the authentication key/value pair in the request.
	In RestAuthLocation `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name pulumi.StringInput `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiKeyAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthentication)(nil)).Elem()
}

func (i ApiKeyAuthenticationArgs) ToApiKeyAuthenticationOutput() ApiKeyAuthenticationOutput {
	return i.ToApiKeyAuthenticationOutputWithContext(context.Background())
}

func (i ApiKeyAuthenticationArgs) ToApiKeyAuthenticationOutputWithContext(ctx context.Context) ApiKeyAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyAuthenticationOutput)
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthentication)(nil)).Elem()
}

func (o ApiKeyAuthenticationOutput) ToApiKeyAuthenticationOutput() ApiKeyAuthenticationOutput {
	return o
}

func (o ApiKeyAuthenticationOutput) ToApiKeyAuthenticationOutputWithContext(ctx context.Context) ApiKeyAuthenticationOutput {
	return o
}

// The location of the authentication key/value pair in the request.
func (o ApiKeyAuthenticationOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthentication) string { return v.In }).(pulumi.StringOutput)
}

// The key name of the authentication key/value pair.
func (o ApiKeyAuthenticationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthentication) string { return v.Name }).(pulumi.StringOutput)
}

// The authentication type.
// Expected value is 'ApiKey'.
func (o ApiKeyAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the authentication key/value pair.
func (o ApiKeyAuthenticationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthentication) string { return v.Value }).(pulumi.StringOutput)
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationInvokeResponse struct {
	// The location of the authentication key/value pair in the request.
	In string `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name string `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type string `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value string `pulumi:"value"`
}

// ApiKeyAuthenticationInvokeResponseInput is an input type that accepts ApiKeyAuthenticationInvokeResponseArgs and ApiKeyAuthenticationInvokeResponseOutput values.
// You can construct a concrete instance of `ApiKeyAuthenticationInvokeResponseInput` via:
//
//          ApiKeyAuthenticationInvokeResponseArgs{...}
type ApiKeyAuthenticationInvokeResponseInput interface {
	pulumi.Input

	ToApiKeyAuthenticationInvokeResponseOutput() ApiKeyAuthenticationInvokeResponseOutput
	ToApiKeyAuthenticationInvokeResponseOutputWithContext(context.Context) ApiKeyAuthenticationInvokeResponseOutput
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationInvokeResponseArgs struct {
	// The location of the authentication key/value pair in the request.
	In pulumi.StringInput `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name pulumi.StringInput `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiKeyAuthenticationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthenticationInvokeResponse)(nil)).Elem()
}

func (i ApiKeyAuthenticationInvokeResponseArgs) ToApiKeyAuthenticationInvokeResponseOutput() ApiKeyAuthenticationInvokeResponseOutput {
	return i.ToApiKeyAuthenticationInvokeResponseOutputWithContext(context.Background())
}

func (i ApiKeyAuthenticationInvokeResponseArgs) ToApiKeyAuthenticationInvokeResponseOutputWithContext(ctx context.Context) ApiKeyAuthenticationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyAuthenticationInvokeResponseOutput)
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthenticationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthenticationInvokeResponse)(nil)).Elem()
}

func (o ApiKeyAuthenticationInvokeResponseOutput) ToApiKeyAuthenticationInvokeResponseOutput() ApiKeyAuthenticationInvokeResponseOutput {
	return o
}

func (o ApiKeyAuthenticationInvokeResponseOutput) ToApiKeyAuthenticationInvokeResponseOutputWithContext(ctx context.Context) ApiKeyAuthenticationInvokeResponseOutput {
	return o
}

// The location of the authentication key/value pair in the request.
func (o ApiKeyAuthenticationInvokeResponseOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationInvokeResponse) string { return v.In }).(pulumi.StringOutput)
}

// The key name of the authentication key/value pair.
func (o ApiKeyAuthenticationInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The authentication type.
// Expected value is 'ApiKey'.
func (o ApiKeyAuthenticationInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the authentication key/value pair.
func (o ApiKeyAuthenticationInvokeResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationInvokeResponse) string { return v.Value }).(pulumi.StringOutput)
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationResponse struct {
	// The location of the authentication key/value pair in the request.
	In string `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name string `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type string `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value string `pulumi:"value"`
}

// ApiKeyAuthenticationResponseInput is an input type that accepts ApiKeyAuthenticationResponseArgs and ApiKeyAuthenticationResponseOutput values.
// You can construct a concrete instance of `ApiKeyAuthenticationResponseInput` via:
//
//          ApiKeyAuthenticationResponseArgs{...}
type ApiKeyAuthenticationResponseInput interface {
	pulumi.Input

	ToApiKeyAuthenticationResponseOutput() ApiKeyAuthenticationResponseOutput
	ToApiKeyAuthenticationResponseOutputWithContext(context.Context) ApiKeyAuthenticationResponseOutput
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationResponseArgs struct {
	// The location of the authentication key/value pair in the request.
	In pulumi.StringInput `pulumi:"in"`
	// The key name of the authentication key/value pair.
	Name pulumi.StringInput `pulumi:"name"`
	// The authentication type.
	// Expected value is 'ApiKey'.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the authentication key/value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiKeyAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthenticationResponse)(nil)).Elem()
}

func (i ApiKeyAuthenticationResponseArgs) ToApiKeyAuthenticationResponseOutput() ApiKeyAuthenticationResponseOutput {
	return i.ToApiKeyAuthenticationResponseOutputWithContext(context.Background())
}

func (i ApiKeyAuthenticationResponseArgs) ToApiKeyAuthenticationResponseOutputWithContext(ctx context.Context) ApiKeyAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyAuthenticationResponseOutput)
}

// ApiKey authentication gives a name and a value that can be included in either the request header or query parameters.
type ApiKeyAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (ApiKeyAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyAuthenticationResponse)(nil)).Elem()
}

func (o ApiKeyAuthenticationResponseOutput) ToApiKeyAuthenticationResponseOutput() ApiKeyAuthenticationResponseOutput {
	return o
}

func (o ApiKeyAuthenticationResponseOutput) ToApiKeyAuthenticationResponseOutputWithContext(ctx context.Context) ApiKeyAuthenticationResponseOutput {
	return o
}

// The location of the authentication key/value pair in the request.
func (o ApiKeyAuthenticationResponseOutput) In() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationResponse) string { return v.In }).(pulumi.StringOutput)
}

// The key name of the authentication key/value pair.
func (o ApiKeyAuthenticationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The authentication type.
// Expected value is 'ApiKey'.
func (o ApiKeyAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the authentication key/value pair.
func (o ApiKeyAuthenticationResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyAuthenticationResponse) string { return v.Value }).(pulumi.StringOutput)
}

// Detailed error information of any failure.
type CloudErrorBodyInvokeResponse struct {
	// Error code string.
	Code string `pulumi:"code"`
	// More detailed error information.
	Details []CloudErrorBodyInvokeResponse `pulumi:"details"`
	// Descriptive error information.
	Message string `pulumi:"message"`
	// Error target
	Target *string `pulumi:"target"`
}

// CloudErrorBodyInvokeResponseInput is an input type that accepts CloudErrorBodyInvokeResponseArgs and CloudErrorBodyInvokeResponseOutput values.
// You can construct a concrete instance of `CloudErrorBodyInvokeResponseInput` via:
//
//          CloudErrorBodyInvokeResponseArgs{...}
type CloudErrorBodyInvokeResponseInput interface {
	pulumi.Input

	ToCloudErrorBodyInvokeResponseOutput() CloudErrorBodyInvokeResponseOutput
	ToCloudErrorBodyInvokeResponseOutputWithContext(context.Context) CloudErrorBodyInvokeResponseOutput
}

// Detailed error information of any failure.
type CloudErrorBodyInvokeResponseArgs struct {
	// Error code string.
	Code pulumi.StringInput `pulumi:"code"`
	// More detailed error information.
	Details CloudErrorBodyInvokeResponseArrayInput `pulumi:"details"`
	// Descriptive error information.
	Message pulumi.StringInput `pulumi:"message"`
	// Error target
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (CloudErrorBodyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (i CloudErrorBodyInvokeResponseArgs) ToCloudErrorBodyInvokeResponseOutput() CloudErrorBodyInvokeResponseOutput {
	return i.ToCloudErrorBodyInvokeResponseOutputWithContext(context.Background())
}

func (i CloudErrorBodyInvokeResponseArgs) ToCloudErrorBodyInvokeResponseOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyInvokeResponseOutput)
}

func (i CloudErrorBodyInvokeResponseArgs) ToCloudErrorBodyInvokeResponsePtrOutput() CloudErrorBodyInvokeResponsePtrOutput {
	return i.ToCloudErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CloudErrorBodyInvokeResponseArgs) ToCloudErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyInvokeResponseOutput).ToCloudErrorBodyInvokeResponsePtrOutputWithContext(ctx)
}

// CloudErrorBodyInvokeResponsePtrInput is an input type that accepts CloudErrorBodyInvokeResponseArgs, CloudErrorBodyInvokeResponsePtr and CloudErrorBodyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CloudErrorBodyInvokeResponsePtrInput` via:
//
//          CloudErrorBodyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CloudErrorBodyInvokeResponsePtrInput interface {
	pulumi.Input

	ToCloudErrorBodyInvokeResponsePtrOutput() CloudErrorBodyInvokeResponsePtrOutput
	ToCloudErrorBodyInvokeResponsePtrOutputWithContext(context.Context) CloudErrorBodyInvokeResponsePtrOutput
}

type cloudErrorBodyInvokeResponsePtrType CloudErrorBodyInvokeResponseArgs

func CloudErrorBodyInvokeResponsePtr(v *CloudErrorBodyInvokeResponseArgs) CloudErrorBodyInvokeResponsePtrInput {
	return (*cloudErrorBodyInvokeResponsePtrType)(v)
}

func (*cloudErrorBodyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (i *cloudErrorBodyInvokeResponsePtrType) ToCloudErrorBodyInvokeResponsePtrOutput() CloudErrorBodyInvokeResponsePtrOutput {
	return i.ToCloudErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *cloudErrorBodyInvokeResponsePtrType) ToCloudErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyInvokeResponsePtrOutput)
}

// CloudErrorBodyInvokeResponseArrayInput is an input type that accepts CloudErrorBodyInvokeResponseArray and CloudErrorBodyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CloudErrorBodyInvokeResponseArrayInput` via:
//
//          CloudErrorBodyInvokeResponseArray{ CloudErrorBodyInvokeResponseArgs{...} }
type CloudErrorBodyInvokeResponseArrayInput interface {
	pulumi.Input

	ToCloudErrorBodyInvokeResponseArrayOutput() CloudErrorBodyInvokeResponseArrayOutput
	ToCloudErrorBodyInvokeResponseArrayOutputWithContext(context.Context) CloudErrorBodyInvokeResponseArrayOutput
}

type CloudErrorBodyInvokeResponseArray []CloudErrorBodyInvokeResponseInput

func (CloudErrorBodyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (i CloudErrorBodyInvokeResponseArray) ToCloudErrorBodyInvokeResponseArrayOutput() CloudErrorBodyInvokeResponseArrayOutput {
	return i.ToCloudErrorBodyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CloudErrorBodyInvokeResponseArray) ToCloudErrorBodyInvokeResponseArrayOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudErrorBodyInvokeResponseArrayOutput)
}

// Detailed error information of any failure.
type CloudErrorBodyInvokeResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (o CloudErrorBodyInvokeResponseOutput) ToCloudErrorBodyInvokeResponseOutput() CloudErrorBodyInvokeResponseOutput {
	return o
}

func (o CloudErrorBodyInvokeResponseOutput) ToCloudErrorBodyInvokeResponseOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponseOutput {
	return o
}

func (o CloudErrorBodyInvokeResponseOutput) ToCloudErrorBodyInvokeResponsePtrOutput() CloudErrorBodyInvokeResponsePtrOutput {
	return o.ToCloudErrorBodyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CloudErrorBodyInvokeResponseOutput) ToCloudErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v CloudErrorBodyInvokeResponse) *CloudErrorBodyInvokeResponse {
		return &v
	}).(CloudErrorBodyInvokeResponsePtrOutput)
}

// Error code string.
func (o CloudErrorBodyInvokeResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyInvokeResponse) string { return v.Code }).(pulumi.StringOutput)
}

// More detailed error information.
func (o CloudErrorBodyInvokeResponseOutput) Details() CloudErrorBodyInvokeResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorBodyInvokeResponse) []CloudErrorBodyInvokeResponse { return v.Details }).(CloudErrorBodyInvokeResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Error target
func (o CloudErrorBodyInvokeResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorBodyInvokeResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorBodyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (o CloudErrorBodyInvokeResponsePtrOutput) ToCloudErrorBodyInvokeResponsePtrOutput() CloudErrorBodyInvokeResponsePtrOutput {
	return o
}

func (o CloudErrorBodyInvokeResponsePtrOutput) ToCloudErrorBodyInvokeResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponsePtrOutput {
	return o
}

func (o CloudErrorBodyInvokeResponsePtrOutput) Elem() CloudErrorBodyInvokeResponseOutput {
	return o.ApplyT(func(v *CloudErrorBodyInvokeResponse) CloudErrorBodyInvokeResponse { return *v }).(CloudErrorBodyInvokeResponseOutput)
}

// Error code string.
func (o CloudErrorBodyInvokeResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// More detailed error information.
func (o CloudErrorBodyInvokeResponsePtrOutput) Details() CloudErrorBodyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorBodyInvokeResponse) []CloudErrorBodyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorBodyInvokeResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyInvokeResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Error target
func (o CloudErrorBodyInvokeResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorBodyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorBodyInvokeResponse)(nil)).Elem()
}

func (o CloudErrorBodyInvokeResponseArrayOutput) ToCloudErrorBodyInvokeResponseArrayOutput() CloudErrorBodyInvokeResponseArrayOutput {
	return o
}

func (o CloudErrorBodyInvokeResponseArrayOutput) ToCloudErrorBodyInvokeResponseArrayOutputWithContext(ctx context.Context) CloudErrorBodyInvokeResponseArrayOutput {
	return o
}

func (o CloudErrorBodyInvokeResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorBodyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorBodyInvokeResponse {
		return vs[0].([]CloudErrorBodyInvokeResponse)[vs[1].(int)]
	}).(CloudErrorBodyInvokeResponseOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepProperties struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributes `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType string `pulumi:"stepType"`
}

// HealthCheckStepPropertiesInput is an input type that accepts HealthCheckStepPropertiesArgs and HealthCheckStepPropertiesOutput values.
// You can construct a concrete instance of `HealthCheckStepPropertiesInput` via:
//
//          HealthCheckStepPropertiesArgs{...}
type HealthCheckStepPropertiesInput interface {
	pulumi.Input

	ToHealthCheckStepPropertiesOutput() HealthCheckStepPropertiesOutput
	ToHealthCheckStepPropertiesOutputWithContext(context.Context) HealthCheckStepPropertiesOutput
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesArgs struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributesInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (HealthCheckStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepProperties)(nil)).Elem()
}

func (i HealthCheckStepPropertiesArgs) ToHealthCheckStepPropertiesOutput() HealthCheckStepPropertiesOutput {
	return i.ToHealthCheckStepPropertiesOutputWithContext(context.Background())
}

func (i HealthCheckStepPropertiesArgs) ToHealthCheckStepPropertiesOutputWithContext(ctx context.Context) HealthCheckStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckStepPropertiesOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesOutput struct{ *pulumi.OutputState }

func (HealthCheckStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepProperties)(nil)).Elem()
}

func (o HealthCheckStepPropertiesOutput) ToHealthCheckStepPropertiesOutput() HealthCheckStepPropertiesOutput {
	return o
}

func (o HealthCheckStepPropertiesOutput) ToHealthCheckStepPropertiesOutputWithContext(ctx context.Context) HealthCheckStepPropertiesOutput {
	return o
}

// The health check step attributes
func (o HealthCheckStepPropertiesOutput) Attributes() RestHealthCheckStepAttributesOutput {
	return o.ApplyT(func(v HealthCheckStepProperties) RestHealthCheckStepAttributes { return v.Attributes }).(RestHealthCheckStepAttributesOutput)
}

// The type of step.
// Expected value is 'HealthCheck'.
func (o HealthCheckStepPropertiesOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckStepProperties) string { return v.StepType }).(pulumi.StringOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesInvokeResponse struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributesInvokeResponse `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType string `pulumi:"stepType"`
}

// HealthCheckStepPropertiesInvokeResponseInput is an input type that accepts HealthCheckStepPropertiesInvokeResponseArgs and HealthCheckStepPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `HealthCheckStepPropertiesInvokeResponseInput` via:
//
//          HealthCheckStepPropertiesInvokeResponseArgs{...}
type HealthCheckStepPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToHealthCheckStepPropertiesInvokeResponseOutput() HealthCheckStepPropertiesInvokeResponseOutput
	ToHealthCheckStepPropertiesInvokeResponseOutputWithContext(context.Context) HealthCheckStepPropertiesInvokeResponseOutput
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesInvokeResponseArgs struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributesInvokeResponseInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (HealthCheckStepPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepPropertiesInvokeResponse)(nil)).Elem()
}

func (i HealthCheckStepPropertiesInvokeResponseArgs) ToHealthCheckStepPropertiesInvokeResponseOutput() HealthCheckStepPropertiesInvokeResponseOutput {
	return i.ToHealthCheckStepPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i HealthCheckStepPropertiesInvokeResponseArgs) ToHealthCheckStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) HealthCheckStepPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckStepPropertiesInvokeResponseOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (HealthCheckStepPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepPropertiesInvokeResponse)(nil)).Elem()
}

func (o HealthCheckStepPropertiesInvokeResponseOutput) ToHealthCheckStepPropertiesInvokeResponseOutput() HealthCheckStepPropertiesInvokeResponseOutput {
	return o
}

func (o HealthCheckStepPropertiesInvokeResponseOutput) ToHealthCheckStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) HealthCheckStepPropertiesInvokeResponseOutput {
	return o
}

// The health check step attributes
func (o HealthCheckStepPropertiesInvokeResponseOutput) Attributes() RestHealthCheckStepAttributesInvokeResponseOutput {
	return o.ApplyT(func(v HealthCheckStepPropertiesInvokeResponse) RestHealthCheckStepAttributesInvokeResponse {
		return v.Attributes
	}).(RestHealthCheckStepAttributesInvokeResponseOutput)
}

// The type of step.
// Expected value is 'HealthCheck'.
func (o HealthCheckStepPropertiesInvokeResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckStepPropertiesInvokeResponse) string { return v.StepType }).(pulumi.StringOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesResponse struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributesResponse `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType string `pulumi:"stepType"`
}

// HealthCheckStepPropertiesResponseInput is an input type that accepts HealthCheckStepPropertiesResponseArgs and HealthCheckStepPropertiesResponseOutput values.
// You can construct a concrete instance of `HealthCheckStepPropertiesResponseInput` via:
//
//          HealthCheckStepPropertiesResponseArgs{...}
type HealthCheckStepPropertiesResponseInput interface {
	pulumi.Input

	ToHealthCheckStepPropertiesResponseOutput() HealthCheckStepPropertiesResponseOutput
	ToHealthCheckStepPropertiesResponseOutputWithContext(context.Context) HealthCheckStepPropertiesResponseOutput
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesResponseArgs struct {
	// The health check step attributes
	Attributes RestHealthCheckStepAttributesResponseInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'HealthCheck'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (HealthCheckStepPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepPropertiesResponse)(nil)).Elem()
}

func (i HealthCheckStepPropertiesResponseArgs) ToHealthCheckStepPropertiesResponseOutput() HealthCheckStepPropertiesResponseOutput {
	return i.ToHealthCheckStepPropertiesResponseOutputWithContext(context.Background())
}

func (i HealthCheckStepPropertiesResponseArgs) ToHealthCheckStepPropertiesResponseOutputWithContext(ctx context.Context) HealthCheckStepPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthCheckStepPropertiesResponseOutput)
}

// Defines the properties of a health check step.
type HealthCheckStepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (HealthCheckStepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckStepPropertiesResponse)(nil)).Elem()
}

func (o HealthCheckStepPropertiesResponseOutput) ToHealthCheckStepPropertiesResponseOutput() HealthCheckStepPropertiesResponseOutput {
	return o
}

func (o HealthCheckStepPropertiesResponseOutput) ToHealthCheckStepPropertiesResponseOutputWithContext(ctx context.Context) HealthCheckStepPropertiesResponseOutput {
	return o
}

// The health check step attributes
func (o HealthCheckStepPropertiesResponseOutput) Attributes() RestHealthCheckStepAttributesResponseOutput {
	return o.ApplyT(func(v HealthCheckStepPropertiesResponse) RestHealthCheckStepAttributesResponse { return v.Attributes }).(RestHealthCheckStepAttributesResponseOutput)
}

// The type of step.
// Expected value is 'HealthCheck'.
func (o HealthCheckStepPropertiesResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v HealthCheckStepPropertiesResponse) string { return v.StepType }).(pulumi.StringOutput)
}

// Identity for the resource.
type Identity struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}

// The list of identities.
func (o IdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Identity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

// The list of identities.
func (o IdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Identity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type IdentityInvokeResponse struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInvokeResponseInput is an input type that accepts IdentityInvokeResponseArgs and IdentityInvokeResponseOutput values.
// You can construct a concrete instance of `IdentityInvokeResponseInput` via:
//
//          IdentityInvokeResponseArgs{...}
type IdentityInvokeResponseInput interface {
	pulumi.Input

	ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput
	ToIdentityInvokeResponseOutputWithContext(context.Context) IdentityInvokeResponseOutput
}

// Identity for the resource.
type IdentityInvokeResponseArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return i.ToIdentityInvokeResponseOutputWithContext(context.Background())
}

func (i IdentityInvokeResponseArgs) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityInvokeResponseOutput)
}

// Identity for the resource.
type IdentityInvokeResponseOutput struct{ *pulumi.OutputState }

func (IdentityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityInvokeResponse)(nil)).Elem()
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutput() IdentityInvokeResponseOutput {
	return o
}

func (o IdentityInvokeResponseOutput) ToIdentityInvokeResponseOutputWithContext(ctx context.Context) IdentityInvokeResponseOutput {
	return o
}

// The list of identities.
func (o IdentityInvokeResponseOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Identity for the resource.
type IdentityResponseArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}

// The list of identities.
func (o IdentityResponseOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityResponse) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

// The list of identities.
func (o IdentityResponsePtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityResponse) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Supplementary contextual messages during a rollout.
type MessageInvokeResponse struct {
	// The actual message text.
	Message string `pulumi:"message"`
	// Time in UTC this message was provided.
	TimeStamp string `pulumi:"timeStamp"`
}

// MessageInvokeResponseInput is an input type that accepts MessageInvokeResponseArgs and MessageInvokeResponseOutput values.
// You can construct a concrete instance of `MessageInvokeResponseInput` via:
//
//          MessageInvokeResponseArgs{...}
type MessageInvokeResponseInput interface {
	pulumi.Input

	ToMessageInvokeResponseOutput() MessageInvokeResponseOutput
	ToMessageInvokeResponseOutputWithContext(context.Context) MessageInvokeResponseOutput
}

// Supplementary contextual messages during a rollout.
type MessageInvokeResponseArgs struct {
	// The actual message text.
	Message pulumi.StringInput `pulumi:"message"`
	// Time in UTC this message was provided.
	TimeStamp pulumi.StringInput `pulumi:"timeStamp"`
}

func (MessageInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageInvokeResponse)(nil)).Elem()
}

func (i MessageInvokeResponseArgs) ToMessageInvokeResponseOutput() MessageInvokeResponseOutput {
	return i.ToMessageInvokeResponseOutputWithContext(context.Background())
}

func (i MessageInvokeResponseArgs) ToMessageInvokeResponseOutputWithContext(ctx context.Context) MessageInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageInvokeResponseOutput)
}

// MessageInvokeResponseArrayInput is an input type that accepts MessageInvokeResponseArray and MessageInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MessageInvokeResponseArrayInput` via:
//
//          MessageInvokeResponseArray{ MessageInvokeResponseArgs{...} }
type MessageInvokeResponseArrayInput interface {
	pulumi.Input

	ToMessageInvokeResponseArrayOutput() MessageInvokeResponseArrayOutput
	ToMessageInvokeResponseArrayOutputWithContext(context.Context) MessageInvokeResponseArrayOutput
}

type MessageInvokeResponseArray []MessageInvokeResponseInput

func (MessageInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MessageInvokeResponse)(nil)).Elem()
}

func (i MessageInvokeResponseArray) ToMessageInvokeResponseArrayOutput() MessageInvokeResponseArrayOutput {
	return i.ToMessageInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MessageInvokeResponseArray) ToMessageInvokeResponseArrayOutputWithContext(ctx context.Context) MessageInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageInvokeResponseArrayOutput)
}

// Supplementary contextual messages during a rollout.
type MessageInvokeResponseOutput struct{ *pulumi.OutputState }

func (MessageInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageInvokeResponse)(nil)).Elem()
}

func (o MessageInvokeResponseOutput) ToMessageInvokeResponseOutput() MessageInvokeResponseOutput {
	return o
}

func (o MessageInvokeResponseOutput) ToMessageInvokeResponseOutputWithContext(ctx context.Context) MessageInvokeResponseOutput {
	return o
}

// The actual message text.
func (o MessageInvokeResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MessageInvokeResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Time in UTC this message was provided.
func (o MessageInvokeResponseOutput) TimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v MessageInvokeResponse) string { return v.TimeStamp }).(pulumi.StringOutput)
}

type MessageInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MessageInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MessageInvokeResponse)(nil)).Elem()
}

func (o MessageInvokeResponseArrayOutput) ToMessageInvokeResponseArrayOutput() MessageInvokeResponseArrayOutput {
	return o
}

func (o MessageInvokeResponseArrayOutput) ToMessageInvokeResponseArrayOutputWithContext(ctx context.Context) MessageInvokeResponseArrayOutput {
	return o
}

func (o MessageInvokeResponseArrayOutput) Index(i pulumi.IntInput) MessageInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MessageInvokeResponse {
		return vs[0].([]MessageInvokeResponse)[vs[1].(int)]
	}).(MessageInvokeResponseOutput)
}

// The properties that define a step.
type PrePostStep struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepInput is an input type that accepts PrePostStepArgs and PrePostStepOutput values.
// You can construct a concrete instance of `PrePostStepInput` via:
//
//          PrePostStepArgs{...}
type PrePostStepInput interface {
	pulumi.Input

	ToPrePostStepOutput() PrePostStepOutput
	ToPrePostStepOutputWithContext(context.Context) PrePostStepOutput
}

// The properties that define a step.
type PrePostStepArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (i PrePostStepArgs) ToPrePostStepOutput() PrePostStepOutput {
	return i.ToPrePostStepOutputWithContext(context.Background())
}

func (i PrePostStepArgs) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepOutput)
}

// PrePostStepArrayInput is an input type that accepts PrePostStepArray and PrePostStepArrayOutput values.
// You can construct a concrete instance of `PrePostStepArrayInput` via:
//
//          PrePostStepArray{ PrePostStepArgs{...} }
type PrePostStepArrayInput interface {
	pulumi.Input

	ToPrePostStepArrayOutput() PrePostStepArrayOutput
	ToPrePostStepArrayOutputWithContext(context.Context) PrePostStepArrayOutput
}

type PrePostStepArray []PrePostStepInput

func (PrePostStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (i PrePostStepArray) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return i.ToPrePostStepArrayOutputWithContext(context.Background())
}

func (i PrePostStepArray) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepArrayOutput)
}

// The properties that define a step.
type PrePostStepOutput struct{ *pulumi.OutputState }

func (PrePostStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (o PrePostStepOutput) ToPrePostStepOutput() PrePostStepOutput {
	return o
}

func (o PrePostStepOutput) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStep) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) Index(i pulumi.IntInput) PrePostStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStep {
		return vs[0].([]PrePostStep)[vs[1].(int)]
	}).(PrePostStepOutput)
}

// The properties that define a step.
type PrePostStepInvokeResponse struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepInvokeResponseInput is an input type that accepts PrePostStepInvokeResponseArgs and PrePostStepInvokeResponseOutput values.
// You can construct a concrete instance of `PrePostStepInvokeResponseInput` via:
//
//          PrePostStepInvokeResponseArgs{...}
type PrePostStepInvokeResponseInput interface {
	pulumi.Input

	ToPrePostStepInvokeResponseOutput() PrePostStepInvokeResponseOutput
	ToPrePostStepInvokeResponseOutputWithContext(context.Context) PrePostStepInvokeResponseOutput
}

// The properties that define a step.
type PrePostStepInvokeResponseArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepInvokeResponse)(nil)).Elem()
}

func (i PrePostStepInvokeResponseArgs) ToPrePostStepInvokeResponseOutput() PrePostStepInvokeResponseOutput {
	return i.ToPrePostStepInvokeResponseOutputWithContext(context.Background())
}

func (i PrePostStepInvokeResponseArgs) ToPrePostStepInvokeResponseOutputWithContext(ctx context.Context) PrePostStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepInvokeResponseOutput)
}

// PrePostStepInvokeResponseArrayInput is an input type that accepts PrePostStepInvokeResponseArray and PrePostStepInvokeResponseArrayOutput values.
// You can construct a concrete instance of `PrePostStepInvokeResponseArrayInput` via:
//
//          PrePostStepInvokeResponseArray{ PrePostStepInvokeResponseArgs{...} }
type PrePostStepInvokeResponseArrayInput interface {
	pulumi.Input

	ToPrePostStepInvokeResponseArrayOutput() PrePostStepInvokeResponseArrayOutput
	ToPrePostStepInvokeResponseArrayOutputWithContext(context.Context) PrePostStepInvokeResponseArrayOutput
}

type PrePostStepInvokeResponseArray []PrePostStepInvokeResponseInput

func (PrePostStepInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepInvokeResponse)(nil)).Elem()
}

func (i PrePostStepInvokeResponseArray) ToPrePostStepInvokeResponseArrayOutput() PrePostStepInvokeResponseArrayOutput {
	return i.ToPrePostStepInvokeResponseArrayOutputWithContext(context.Background())
}

func (i PrePostStepInvokeResponseArray) ToPrePostStepInvokeResponseArrayOutputWithContext(ctx context.Context) PrePostStepInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepInvokeResponseArrayOutput)
}

// The properties that define a step.
type PrePostStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (PrePostStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepInvokeResponse)(nil)).Elem()
}

func (o PrePostStepInvokeResponseOutput) ToPrePostStepInvokeResponseOutput() PrePostStepInvokeResponseOutput {
	return o
}

func (o PrePostStepInvokeResponseOutput) ToPrePostStepInvokeResponseOutputWithContext(ctx context.Context) PrePostStepInvokeResponseOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepInvokeResponseOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStepInvokeResponse) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepInvokeResponse)(nil)).Elem()
}

func (o PrePostStepInvokeResponseArrayOutput) ToPrePostStepInvokeResponseArrayOutput() PrePostStepInvokeResponseArrayOutput {
	return o
}

func (o PrePostStepInvokeResponseArrayOutput) ToPrePostStepInvokeResponseArrayOutputWithContext(ctx context.Context) PrePostStepInvokeResponseArrayOutput {
	return o
}

func (o PrePostStepInvokeResponseArrayOutput) Index(i pulumi.IntInput) PrePostStepInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStepInvokeResponse {
		return vs[0].([]PrePostStepInvokeResponse)[vs[1].(int)]
	}).(PrePostStepInvokeResponseOutput)
}

// The properties that define a step.
type PrePostStepResponse struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepResponseInput is an input type that accepts PrePostStepResponseArgs and PrePostStepResponseOutput values.
// You can construct a concrete instance of `PrePostStepResponseInput` via:
//
//          PrePostStepResponseArgs{...}
type PrePostStepResponseInput interface {
	pulumi.Input

	ToPrePostStepResponseOutput() PrePostStepResponseOutput
	ToPrePostStepResponseOutputWithContext(context.Context) PrePostStepResponseOutput
}

// The properties that define a step.
type PrePostStepResponseArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepResponse)(nil)).Elem()
}

func (i PrePostStepResponseArgs) ToPrePostStepResponseOutput() PrePostStepResponseOutput {
	return i.ToPrePostStepResponseOutputWithContext(context.Background())
}

func (i PrePostStepResponseArgs) ToPrePostStepResponseOutputWithContext(ctx context.Context) PrePostStepResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepResponseOutput)
}

// PrePostStepResponseArrayInput is an input type that accepts PrePostStepResponseArray and PrePostStepResponseArrayOutput values.
// You can construct a concrete instance of `PrePostStepResponseArrayInput` via:
//
//          PrePostStepResponseArray{ PrePostStepResponseArgs{...} }
type PrePostStepResponseArrayInput interface {
	pulumi.Input

	ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput
	ToPrePostStepResponseArrayOutputWithContext(context.Context) PrePostStepResponseArrayOutput
}

type PrePostStepResponseArray []PrePostStepResponseInput

func (PrePostStepResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepResponse)(nil)).Elem()
}

func (i PrePostStepResponseArray) ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput {
	return i.ToPrePostStepResponseArrayOutputWithContext(context.Background())
}

func (i PrePostStepResponseArray) ToPrePostStepResponseArrayOutputWithContext(ctx context.Context) PrePostStepResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepResponseArrayOutput)
}

// The properties that define a step.
type PrePostStepResponseOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutput() PrePostStepResponseOutput {
	return o
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutputWithContext(ctx context.Context) PrePostStepResponseOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepResponseOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStepResponse) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepResponseArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutputWithContext(ctx context.Context) PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) Index(i pulumi.IntInput) PrePostStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStepResponse {
		return vs[0].([]PrePostStepResponse)[vs[1].(int)]
	}).(PrePostStepResponseOutput)
}

// Individual resource operation information.
type ResourceOperationInvokeResponse struct {
	// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
	OperationId string `pulumi:"operationId"`
	// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
	ResourceName *string `pulumi:"resourceName"`
	// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
	ResourceType *string `pulumi:"resourceType"`
	// Http status code of the operation.
	StatusCode string `pulumi:"statusCode"`
	// Descriptive information of the resource operation.
	StatusMessage string `pulumi:"statusMessage"`
}

// ResourceOperationInvokeResponseInput is an input type that accepts ResourceOperationInvokeResponseArgs and ResourceOperationInvokeResponseOutput values.
// You can construct a concrete instance of `ResourceOperationInvokeResponseInput` via:
//
//          ResourceOperationInvokeResponseArgs{...}
type ResourceOperationInvokeResponseInput interface {
	pulumi.Input

	ToResourceOperationInvokeResponseOutput() ResourceOperationInvokeResponseOutput
	ToResourceOperationInvokeResponseOutputWithContext(context.Context) ResourceOperationInvokeResponseOutput
}

// Individual resource operation information.
type ResourceOperationInvokeResponseArgs struct {
	// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
	OperationId pulumi.StringInput `pulumi:"operationId"`
	// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// Http status code of the operation.
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
	// Descriptive information of the resource operation.
	StatusMessage pulumi.StringInput `pulumi:"statusMessage"`
}

func (ResourceOperationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOperationInvokeResponse)(nil)).Elem()
}

func (i ResourceOperationInvokeResponseArgs) ToResourceOperationInvokeResponseOutput() ResourceOperationInvokeResponseOutput {
	return i.ToResourceOperationInvokeResponseOutputWithContext(context.Background())
}

func (i ResourceOperationInvokeResponseArgs) ToResourceOperationInvokeResponseOutputWithContext(ctx context.Context) ResourceOperationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOperationInvokeResponseOutput)
}

// ResourceOperationInvokeResponseArrayInput is an input type that accepts ResourceOperationInvokeResponseArray and ResourceOperationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ResourceOperationInvokeResponseArrayInput` via:
//
//          ResourceOperationInvokeResponseArray{ ResourceOperationInvokeResponseArgs{...} }
type ResourceOperationInvokeResponseArrayInput interface {
	pulumi.Input

	ToResourceOperationInvokeResponseArrayOutput() ResourceOperationInvokeResponseArrayOutput
	ToResourceOperationInvokeResponseArrayOutputWithContext(context.Context) ResourceOperationInvokeResponseArrayOutput
}

type ResourceOperationInvokeResponseArray []ResourceOperationInvokeResponseInput

func (ResourceOperationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceOperationInvokeResponse)(nil)).Elem()
}

func (i ResourceOperationInvokeResponseArray) ToResourceOperationInvokeResponseArrayOutput() ResourceOperationInvokeResponseArrayOutput {
	return i.ToResourceOperationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ResourceOperationInvokeResponseArray) ToResourceOperationInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceOperationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceOperationInvokeResponseArrayOutput)
}

// Individual resource operation information.
type ResourceOperationInvokeResponseOutput struct{ *pulumi.OutputState }

func (ResourceOperationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOperationInvokeResponse)(nil)).Elem()
}

func (o ResourceOperationInvokeResponseOutput) ToResourceOperationInvokeResponseOutput() ResourceOperationInvokeResponseOutput {
	return o
}

func (o ResourceOperationInvokeResponseOutput) ToResourceOperationInvokeResponseOutputWithContext(ctx context.Context) ResourceOperationInvokeResponseOutput {
	return o
}

// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
func (o ResourceOperationInvokeResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
func (o ResourceOperationInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
func (o ResourceOperationInvokeResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
func (o ResourceOperationInvokeResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Http status code of the operation.
func (o ResourceOperationInvokeResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

// Descriptive information of the resource operation.
func (o ResourceOperationInvokeResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationInvokeResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type ResourceOperationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceOperationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceOperationInvokeResponse)(nil)).Elem()
}

func (o ResourceOperationInvokeResponseArrayOutput) ToResourceOperationInvokeResponseArrayOutput() ResourceOperationInvokeResponseArrayOutput {
	return o
}

func (o ResourceOperationInvokeResponseArrayOutput) ToResourceOperationInvokeResponseArrayOutputWithContext(ctx context.Context) ResourceOperationInvokeResponseArrayOutput {
	return o
}

func (o ResourceOperationInvokeResponseArrayOutput) Index(i pulumi.IntInput) ResourceOperationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceOperationInvokeResponse {
		return vs[0].([]ResourceOperationInvokeResponse)[vs[1].(int)]
	}).(ResourceOperationInvokeResponseOutput)
}

// A REST based health check
type RestHealthCheck struct {
	// A unique name for this check.
	Name string `pulumi:"name"`
	// The request to the health provider.
	Request RestRequest `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response *RestResponse `pulumi:"response"`
}

// RestHealthCheckInput is an input type that accepts RestHealthCheckArgs and RestHealthCheckOutput values.
// You can construct a concrete instance of `RestHealthCheckInput` via:
//
//          RestHealthCheckArgs{...}
type RestHealthCheckInput interface {
	pulumi.Input

	ToRestHealthCheckOutput() RestHealthCheckOutput
	ToRestHealthCheckOutputWithContext(context.Context) RestHealthCheckOutput
}

// A REST based health check
type RestHealthCheckArgs struct {
	// A unique name for this check.
	Name pulumi.StringInput `pulumi:"name"`
	// The request to the health provider.
	Request RestRequestInput `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response RestResponsePtrInput `pulumi:"response"`
}

func (RestHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheck)(nil)).Elem()
}

func (i RestHealthCheckArgs) ToRestHealthCheckOutput() RestHealthCheckOutput {
	return i.ToRestHealthCheckOutputWithContext(context.Background())
}

func (i RestHealthCheckArgs) ToRestHealthCheckOutputWithContext(ctx context.Context) RestHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckOutput)
}

// RestHealthCheckArrayInput is an input type that accepts RestHealthCheckArray and RestHealthCheckArrayOutput values.
// You can construct a concrete instance of `RestHealthCheckArrayInput` via:
//
//          RestHealthCheckArray{ RestHealthCheckArgs{...} }
type RestHealthCheckArrayInput interface {
	pulumi.Input

	ToRestHealthCheckArrayOutput() RestHealthCheckArrayOutput
	ToRestHealthCheckArrayOutputWithContext(context.Context) RestHealthCheckArrayOutput
}

type RestHealthCheckArray []RestHealthCheckInput

func (RestHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheck)(nil)).Elem()
}

func (i RestHealthCheckArray) ToRestHealthCheckArrayOutput() RestHealthCheckArrayOutput {
	return i.ToRestHealthCheckArrayOutputWithContext(context.Background())
}

func (i RestHealthCheckArray) ToRestHealthCheckArrayOutputWithContext(ctx context.Context) RestHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckArrayOutput)
}

// A REST based health check
type RestHealthCheckOutput struct{ *pulumi.OutputState }

func (RestHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheck)(nil)).Elem()
}

func (o RestHealthCheckOutput) ToRestHealthCheckOutput() RestHealthCheckOutput {
	return o
}

func (o RestHealthCheckOutput) ToRestHealthCheckOutputWithContext(ctx context.Context) RestHealthCheckOutput {
	return o
}

// A unique name for this check.
func (o RestHealthCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheck) string { return v.Name }).(pulumi.StringOutput)
}

// The request to the health provider.
func (o RestHealthCheckOutput) Request() RestRequestOutput {
	return o.ApplyT(func(v RestHealthCheck) RestRequest { return v.Request }).(RestRequestOutput)
}

// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
func (o RestHealthCheckOutput) Response() RestResponsePtrOutput {
	return o.ApplyT(func(v RestHealthCheck) *RestResponse { return v.Response }).(RestResponsePtrOutput)
}

type RestHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (RestHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheck)(nil)).Elem()
}

func (o RestHealthCheckArrayOutput) ToRestHealthCheckArrayOutput() RestHealthCheckArrayOutput {
	return o
}

func (o RestHealthCheckArrayOutput) ToRestHealthCheckArrayOutputWithContext(ctx context.Context) RestHealthCheckArrayOutput {
	return o
}

func (o RestHealthCheckArrayOutput) Index(i pulumi.IntInput) RestHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestHealthCheck {
		return vs[0].([]RestHealthCheck)[vs[1].(int)]
	}).(RestHealthCheckOutput)
}

// A REST based health check
type RestHealthCheckInvokeResponse struct {
	// A unique name for this check.
	Name string `pulumi:"name"`
	// The request to the health provider.
	Request RestRequestInvokeResponse `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response *RestResponseInvokeResponse `pulumi:"response"`
}

// RestHealthCheckInvokeResponseInput is an input type that accepts RestHealthCheckInvokeResponseArgs and RestHealthCheckInvokeResponseOutput values.
// You can construct a concrete instance of `RestHealthCheckInvokeResponseInput` via:
//
//          RestHealthCheckInvokeResponseArgs{...}
type RestHealthCheckInvokeResponseInput interface {
	pulumi.Input

	ToRestHealthCheckInvokeResponseOutput() RestHealthCheckInvokeResponseOutput
	ToRestHealthCheckInvokeResponseOutputWithContext(context.Context) RestHealthCheckInvokeResponseOutput
}

// A REST based health check
type RestHealthCheckInvokeResponseArgs struct {
	// A unique name for this check.
	Name pulumi.StringInput `pulumi:"name"`
	// The request to the health provider.
	Request RestRequestInvokeResponseInput `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response RestResponseInvokeResponsePtrInput `pulumi:"response"`
}

func (RestHealthCheckInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckInvokeResponse)(nil)).Elem()
}

func (i RestHealthCheckInvokeResponseArgs) ToRestHealthCheckInvokeResponseOutput() RestHealthCheckInvokeResponseOutput {
	return i.ToRestHealthCheckInvokeResponseOutputWithContext(context.Background())
}

func (i RestHealthCheckInvokeResponseArgs) ToRestHealthCheckInvokeResponseOutputWithContext(ctx context.Context) RestHealthCheckInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckInvokeResponseOutput)
}

// RestHealthCheckInvokeResponseArrayInput is an input type that accepts RestHealthCheckInvokeResponseArray and RestHealthCheckInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RestHealthCheckInvokeResponseArrayInput` via:
//
//          RestHealthCheckInvokeResponseArray{ RestHealthCheckInvokeResponseArgs{...} }
type RestHealthCheckInvokeResponseArrayInput interface {
	pulumi.Input

	ToRestHealthCheckInvokeResponseArrayOutput() RestHealthCheckInvokeResponseArrayOutput
	ToRestHealthCheckInvokeResponseArrayOutputWithContext(context.Context) RestHealthCheckInvokeResponseArrayOutput
}

type RestHealthCheckInvokeResponseArray []RestHealthCheckInvokeResponseInput

func (RestHealthCheckInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheckInvokeResponse)(nil)).Elem()
}

func (i RestHealthCheckInvokeResponseArray) ToRestHealthCheckInvokeResponseArrayOutput() RestHealthCheckInvokeResponseArrayOutput {
	return i.ToRestHealthCheckInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RestHealthCheckInvokeResponseArray) ToRestHealthCheckInvokeResponseArrayOutputWithContext(ctx context.Context) RestHealthCheckInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckInvokeResponseArrayOutput)
}

// A REST based health check
type RestHealthCheckInvokeResponseOutput struct{ *pulumi.OutputState }

func (RestHealthCheckInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckInvokeResponse)(nil)).Elem()
}

func (o RestHealthCheckInvokeResponseOutput) ToRestHealthCheckInvokeResponseOutput() RestHealthCheckInvokeResponseOutput {
	return o
}

func (o RestHealthCheckInvokeResponseOutput) ToRestHealthCheckInvokeResponseOutputWithContext(ctx context.Context) RestHealthCheckInvokeResponseOutput {
	return o
}

// A unique name for this check.
func (o RestHealthCheckInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The request to the health provider.
func (o RestHealthCheckInvokeResponseOutput) Request() RestRequestInvokeResponseOutput {
	return o.ApplyT(func(v RestHealthCheckInvokeResponse) RestRequestInvokeResponse { return v.Request }).(RestRequestInvokeResponseOutput)
}

// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
func (o RestHealthCheckInvokeResponseOutput) Response() RestResponseInvokeResponsePtrOutput {
	return o.ApplyT(func(v RestHealthCheckInvokeResponse) *RestResponseInvokeResponse { return v.Response }).(RestResponseInvokeResponsePtrOutput)
}

type RestHealthCheckInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RestHealthCheckInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheckInvokeResponse)(nil)).Elem()
}

func (o RestHealthCheckInvokeResponseArrayOutput) ToRestHealthCheckInvokeResponseArrayOutput() RestHealthCheckInvokeResponseArrayOutput {
	return o
}

func (o RestHealthCheckInvokeResponseArrayOutput) ToRestHealthCheckInvokeResponseArrayOutputWithContext(ctx context.Context) RestHealthCheckInvokeResponseArrayOutput {
	return o
}

func (o RestHealthCheckInvokeResponseArrayOutput) Index(i pulumi.IntInput) RestHealthCheckInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestHealthCheckInvokeResponse {
		return vs[0].([]RestHealthCheckInvokeResponse)[vs[1].(int)]
	}).(RestHealthCheckInvokeResponseOutput)
}

// A REST based health check
type RestHealthCheckResponse struct {
	// A unique name for this check.
	Name string `pulumi:"name"`
	// The request to the health provider.
	Request RestRequestResponse `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response *RestResponseResponse `pulumi:"response"`
}

// RestHealthCheckResponseInput is an input type that accepts RestHealthCheckResponseArgs and RestHealthCheckResponseOutput values.
// You can construct a concrete instance of `RestHealthCheckResponseInput` via:
//
//          RestHealthCheckResponseArgs{...}
type RestHealthCheckResponseInput interface {
	pulumi.Input

	ToRestHealthCheckResponseOutput() RestHealthCheckResponseOutput
	ToRestHealthCheckResponseOutputWithContext(context.Context) RestHealthCheckResponseOutput
}

// A REST based health check
type RestHealthCheckResponseArgs struct {
	// A unique name for this check.
	Name pulumi.StringInput `pulumi:"name"`
	// The request to the health provider.
	Request RestRequestResponseInput `pulumi:"request"`
	// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
	Response RestResponseResponsePtrInput `pulumi:"response"`
}

func (RestHealthCheckResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckResponse)(nil)).Elem()
}

func (i RestHealthCheckResponseArgs) ToRestHealthCheckResponseOutput() RestHealthCheckResponseOutput {
	return i.ToRestHealthCheckResponseOutputWithContext(context.Background())
}

func (i RestHealthCheckResponseArgs) ToRestHealthCheckResponseOutputWithContext(ctx context.Context) RestHealthCheckResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckResponseOutput)
}

// RestHealthCheckResponseArrayInput is an input type that accepts RestHealthCheckResponseArray and RestHealthCheckResponseArrayOutput values.
// You can construct a concrete instance of `RestHealthCheckResponseArrayInput` via:
//
//          RestHealthCheckResponseArray{ RestHealthCheckResponseArgs{...} }
type RestHealthCheckResponseArrayInput interface {
	pulumi.Input

	ToRestHealthCheckResponseArrayOutput() RestHealthCheckResponseArrayOutput
	ToRestHealthCheckResponseArrayOutputWithContext(context.Context) RestHealthCheckResponseArrayOutput
}

type RestHealthCheckResponseArray []RestHealthCheckResponseInput

func (RestHealthCheckResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheckResponse)(nil)).Elem()
}

func (i RestHealthCheckResponseArray) ToRestHealthCheckResponseArrayOutput() RestHealthCheckResponseArrayOutput {
	return i.ToRestHealthCheckResponseArrayOutputWithContext(context.Background())
}

func (i RestHealthCheckResponseArray) ToRestHealthCheckResponseArrayOutputWithContext(ctx context.Context) RestHealthCheckResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckResponseArrayOutput)
}

// A REST based health check
type RestHealthCheckResponseOutput struct{ *pulumi.OutputState }

func (RestHealthCheckResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckResponse)(nil)).Elem()
}

func (o RestHealthCheckResponseOutput) ToRestHealthCheckResponseOutput() RestHealthCheckResponseOutput {
	return o
}

func (o RestHealthCheckResponseOutput) ToRestHealthCheckResponseOutputWithContext(ctx context.Context) RestHealthCheckResponseOutput {
	return o
}

// A unique name for this check.
func (o RestHealthCheckResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The request to the health provider.
func (o RestHealthCheckResponseOutput) Request() RestRequestResponseOutput {
	return o.ApplyT(func(v RestHealthCheckResponse) RestRequestResponse { return v.Request }).(RestRequestResponseOutput)
}

// The expected response from the health provider. If no expected response is provided, the default is to expect the received response to have an HTTP status code of 200 OK.
func (o RestHealthCheckResponseOutput) Response() RestResponseResponsePtrOutput {
	return o.ApplyT(func(v RestHealthCheckResponse) *RestResponseResponse { return v.Response }).(RestResponseResponsePtrOutput)
}

type RestHealthCheckResponseArrayOutput struct{ *pulumi.OutputState }

func (RestHealthCheckResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestHealthCheckResponse)(nil)).Elem()
}

func (o RestHealthCheckResponseArrayOutput) ToRestHealthCheckResponseArrayOutput() RestHealthCheckResponseArrayOutput {
	return o
}

func (o RestHealthCheckResponseArrayOutput) ToRestHealthCheckResponseArrayOutputWithContext(ctx context.Context) RestHealthCheckResponseArrayOutput {
	return o
}

func (o RestHealthCheckResponseArrayOutput) Index(i pulumi.IntInput) RestHealthCheckResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestHealthCheckResponse {
		return vs[0].([]RestHealthCheckResponse)[vs[1].(int)]
	}).(RestHealthCheckResponseOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributes struct {
	// The list of checks that form the health check step.
	HealthChecks []RestHealthCheck `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration string `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration *string `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type string `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration *string `pulumi:"waitDuration"`
}

// RestHealthCheckStepAttributesInput is an input type that accepts RestHealthCheckStepAttributesArgs and RestHealthCheckStepAttributesOutput values.
// You can construct a concrete instance of `RestHealthCheckStepAttributesInput` via:
//
//          RestHealthCheckStepAttributesArgs{...}
type RestHealthCheckStepAttributesInput interface {
	pulumi.Input

	ToRestHealthCheckStepAttributesOutput() RestHealthCheckStepAttributesOutput
	ToRestHealthCheckStepAttributesOutputWithContext(context.Context) RestHealthCheckStepAttributesOutput
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesArgs struct {
	// The list of checks that form the health check step.
	HealthChecks RestHealthCheckArrayInput `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration pulumi.StringInput `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration pulumi.StringPtrInput `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type pulumi.StringInput `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration pulumi.StringPtrInput `pulumi:"waitDuration"`
}

func (RestHealthCheckStepAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributes)(nil)).Elem()
}

func (i RestHealthCheckStepAttributesArgs) ToRestHealthCheckStepAttributesOutput() RestHealthCheckStepAttributesOutput {
	return i.ToRestHealthCheckStepAttributesOutputWithContext(context.Background())
}

func (i RestHealthCheckStepAttributesArgs) ToRestHealthCheckStepAttributesOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckStepAttributesOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesOutput struct{ *pulumi.OutputState }

func (RestHealthCheckStepAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributes)(nil)).Elem()
}

func (o RestHealthCheckStepAttributesOutput) ToRestHealthCheckStepAttributesOutput() RestHealthCheckStepAttributesOutput {
	return o
}

func (o RestHealthCheckStepAttributesOutput) ToRestHealthCheckStepAttributesOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesOutput {
	return o
}

// The list of checks that form the health check step.
func (o RestHealthCheckStepAttributesOutput) HealthChecks() RestHealthCheckArrayOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributes) []RestHealthCheck { return v.HealthChecks }).(RestHealthCheckArrayOutput)
}

// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
func (o RestHealthCheckStepAttributesOutput) HealthyStateDuration() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributes) string { return v.HealthyStateDuration }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
func (o RestHealthCheckStepAttributesOutput) MaxElasticDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributes) *string { return v.MaxElasticDuration }).(pulumi.StringPtrOutput)
}

// The type of health check.
// Expected value is 'REST'.
func (o RestHealthCheckStepAttributesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributes) string { return v.Type }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which health check waits idly without any checks.
func (o RestHealthCheckStepAttributesOutput) WaitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributes) *string { return v.WaitDuration }).(pulumi.StringPtrOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesInvokeResponse struct {
	// The list of checks that form the health check step.
	HealthChecks []RestHealthCheckInvokeResponse `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration string `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration *string `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type string `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration *string `pulumi:"waitDuration"`
}

// RestHealthCheckStepAttributesInvokeResponseInput is an input type that accepts RestHealthCheckStepAttributesInvokeResponseArgs and RestHealthCheckStepAttributesInvokeResponseOutput values.
// You can construct a concrete instance of `RestHealthCheckStepAttributesInvokeResponseInput` via:
//
//          RestHealthCheckStepAttributesInvokeResponseArgs{...}
type RestHealthCheckStepAttributesInvokeResponseInput interface {
	pulumi.Input

	ToRestHealthCheckStepAttributesInvokeResponseOutput() RestHealthCheckStepAttributesInvokeResponseOutput
	ToRestHealthCheckStepAttributesInvokeResponseOutputWithContext(context.Context) RestHealthCheckStepAttributesInvokeResponseOutput
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesInvokeResponseArgs struct {
	// The list of checks that form the health check step.
	HealthChecks RestHealthCheckInvokeResponseArrayInput `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration pulumi.StringInput `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration pulumi.StringPtrInput `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type pulumi.StringInput `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration pulumi.StringPtrInput `pulumi:"waitDuration"`
}

func (RestHealthCheckStepAttributesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributesInvokeResponse)(nil)).Elem()
}

func (i RestHealthCheckStepAttributesInvokeResponseArgs) ToRestHealthCheckStepAttributesInvokeResponseOutput() RestHealthCheckStepAttributesInvokeResponseOutput {
	return i.ToRestHealthCheckStepAttributesInvokeResponseOutputWithContext(context.Background())
}

func (i RestHealthCheckStepAttributesInvokeResponseArgs) ToRestHealthCheckStepAttributesInvokeResponseOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckStepAttributesInvokeResponseOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesInvokeResponseOutput struct{ *pulumi.OutputState }

func (RestHealthCheckStepAttributesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributesInvokeResponse)(nil)).Elem()
}

func (o RestHealthCheckStepAttributesInvokeResponseOutput) ToRestHealthCheckStepAttributesInvokeResponseOutput() RestHealthCheckStepAttributesInvokeResponseOutput {
	return o
}

func (o RestHealthCheckStepAttributesInvokeResponseOutput) ToRestHealthCheckStepAttributesInvokeResponseOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesInvokeResponseOutput {
	return o
}

// The list of checks that form the health check step.
func (o RestHealthCheckStepAttributesInvokeResponseOutput) HealthChecks() RestHealthCheckInvokeResponseArrayOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesInvokeResponse) []RestHealthCheckInvokeResponse {
		return v.HealthChecks
	}).(RestHealthCheckInvokeResponseArrayOutput)
}

// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
func (o RestHealthCheckStepAttributesInvokeResponseOutput) HealthyStateDuration() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesInvokeResponse) string { return v.HealthyStateDuration }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
func (o RestHealthCheckStepAttributesInvokeResponseOutput) MaxElasticDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesInvokeResponse) *string { return v.MaxElasticDuration }).(pulumi.StringPtrOutput)
}

// The type of health check.
// Expected value is 'REST'.
func (o RestHealthCheckStepAttributesInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which health check waits idly without any checks.
func (o RestHealthCheckStepAttributesInvokeResponseOutput) WaitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesInvokeResponse) *string { return v.WaitDuration }).(pulumi.StringPtrOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesResponse struct {
	// The list of checks that form the health check step.
	HealthChecks []RestHealthCheckResponse `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration string `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration *string `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type string `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration *string `pulumi:"waitDuration"`
}

// RestHealthCheckStepAttributesResponseInput is an input type that accepts RestHealthCheckStepAttributesResponseArgs and RestHealthCheckStepAttributesResponseOutput values.
// You can construct a concrete instance of `RestHealthCheckStepAttributesResponseInput` via:
//
//          RestHealthCheckStepAttributesResponseArgs{...}
type RestHealthCheckStepAttributesResponseInput interface {
	pulumi.Input

	ToRestHealthCheckStepAttributesResponseOutput() RestHealthCheckStepAttributesResponseOutput
	ToRestHealthCheckStepAttributesResponseOutputWithContext(context.Context) RestHealthCheckStepAttributesResponseOutput
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesResponseArgs struct {
	// The list of checks that form the health check step.
	HealthChecks RestHealthCheckResponseArrayInput `pulumi:"healthChecks"`
	// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
	HealthyStateDuration pulumi.StringInput `pulumi:"healthyStateDuration"`
	// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
	MaxElasticDuration pulumi.StringPtrInput `pulumi:"maxElasticDuration"`
	// The type of health check.
	// Expected value is 'REST'.
	Type pulumi.StringInput `pulumi:"type"`
	// The duration in ISO 8601 format for which health check waits idly without any checks.
	WaitDuration pulumi.StringPtrInput `pulumi:"waitDuration"`
}

func (RestHealthCheckStepAttributesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributesResponse)(nil)).Elem()
}

func (i RestHealthCheckStepAttributesResponseArgs) ToRestHealthCheckStepAttributesResponseOutput() RestHealthCheckStepAttributesResponseOutput {
	return i.ToRestHealthCheckStepAttributesResponseOutputWithContext(context.Background())
}

func (i RestHealthCheckStepAttributesResponseArgs) ToRestHealthCheckStepAttributesResponseOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestHealthCheckStepAttributesResponseOutput)
}

// Defines the REST health check step properties.
type RestHealthCheckStepAttributesResponseOutput struct{ *pulumi.OutputState }

func (RestHealthCheckStepAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestHealthCheckStepAttributesResponse)(nil)).Elem()
}

func (o RestHealthCheckStepAttributesResponseOutput) ToRestHealthCheckStepAttributesResponseOutput() RestHealthCheckStepAttributesResponseOutput {
	return o
}

func (o RestHealthCheckStepAttributesResponseOutput) ToRestHealthCheckStepAttributesResponseOutputWithContext(ctx context.Context) RestHealthCheckStepAttributesResponseOutput {
	return o
}

// The list of checks that form the health check step.
func (o RestHealthCheckStepAttributesResponseOutput) HealthChecks() RestHealthCheckResponseArrayOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesResponse) []RestHealthCheckResponse { return v.HealthChecks }).(RestHealthCheckResponseArrayOutput)
}

// The duration in ISO 8601 format for which the resource is expected to be continuously healthy. If maxElasticDuration is specified, healthy state duration is enforced after the detection of first healthy signal.
func (o RestHealthCheckStepAttributesResponseOutput) HealthyStateDuration() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesResponse) string { return v.HealthyStateDuration }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which the health check waits for the resource to become healthy. Health check fails if it doesn't. Health check starts to enforce healthyStateDuration once resource becomes healthy.
func (o RestHealthCheckStepAttributesResponseOutput) MaxElasticDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesResponse) *string { return v.MaxElasticDuration }).(pulumi.StringPtrOutput)
}

// The type of health check.
// Expected value is 'REST'.
func (o RestHealthCheckStepAttributesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The duration in ISO 8601 format for which health check waits idly without any checks.
func (o RestHealthCheckStepAttributesResponseOutput) WaitDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestHealthCheckStepAttributesResponse) *string { return v.WaitDuration }).(pulumi.StringPtrOutput)
}

// The properties that make up a REST request
type RestRequest struct {
	// The authentication information required in the request to the health provider.
	Authentication interface{} `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method string `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri string `pulumi:"uri"`
}

// RestRequestInput is an input type that accepts RestRequestArgs and RestRequestOutput values.
// You can construct a concrete instance of `RestRequestInput` via:
//
//          RestRequestArgs{...}
type RestRequestInput interface {
	pulumi.Input

	ToRestRequestOutput() RestRequestOutput
	ToRestRequestOutputWithContext(context.Context) RestRequestOutput
}

// The properties that make up a REST request
type RestRequestArgs struct {
	// The authentication information required in the request to the health provider.
	Authentication pulumi.Input `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method RestRequestMethod `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (RestRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequest)(nil)).Elem()
}

func (i RestRequestArgs) ToRestRequestOutput() RestRequestOutput {
	return i.ToRestRequestOutputWithContext(context.Background())
}

func (i RestRequestArgs) ToRestRequestOutputWithContext(ctx context.Context) RestRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestRequestOutput)
}

// The properties that make up a REST request
type RestRequestOutput struct{ *pulumi.OutputState }

func (RestRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequest)(nil)).Elem()
}

func (o RestRequestOutput) ToRestRequestOutput() RestRequestOutput {
	return o
}

func (o RestRequestOutput) ToRestRequestOutputWithContext(ctx context.Context) RestRequestOutput {
	return o
}

// The authentication information required in the request to the health provider.
func (o RestRequestOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v RestRequest) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The HTTP method to use for the request.
func (o RestRequestOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequest) string { return v.Method }).(pulumi.StringOutput)
}

// The HTTP URI to use for the request.
func (o RestRequestOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequest) string { return v.Uri }).(pulumi.StringOutput)
}

// The properties that make up a REST request
type RestRequestInvokeResponse struct {
	// The authentication information required in the request to the health provider.
	Authentication interface{} `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method string `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri string `pulumi:"uri"`
}

// RestRequestInvokeResponseInput is an input type that accepts RestRequestInvokeResponseArgs and RestRequestInvokeResponseOutput values.
// You can construct a concrete instance of `RestRequestInvokeResponseInput` via:
//
//          RestRequestInvokeResponseArgs{...}
type RestRequestInvokeResponseInput interface {
	pulumi.Input

	ToRestRequestInvokeResponseOutput() RestRequestInvokeResponseOutput
	ToRestRequestInvokeResponseOutputWithContext(context.Context) RestRequestInvokeResponseOutput
}

// The properties that make up a REST request
type RestRequestInvokeResponseArgs struct {
	// The authentication information required in the request to the health provider.
	Authentication pulumi.Input `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method pulumi.StringInput `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (RestRequestInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequestInvokeResponse)(nil)).Elem()
}

func (i RestRequestInvokeResponseArgs) ToRestRequestInvokeResponseOutput() RestRequestInvokeResponseOutput {
	return i.ToRestRequestInvokeResponseOutputWithContext(context.Background())
}

func (i RestRequestInvokeResponseArgs) ToRestRequestInvokeResponseOutputWithContext(ctx context.Context) RestRequestInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestRequestInvokeResponseOutput)
}

// The properties that make up a REST request
type RestRequestInvokeResponseOutput struct{ *pulumi.OutputState }

func (RestRequestInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequestInvokeResponse)(nil)).Elem()
}

func (o RestRequestInvokeResponseOutput) ToRestRequestInvokeResponseOutput() RestRequestInvokeResponseOutput {
	return o
}

func (o RestRequestInvokeResponseOutput) ToRestRequestInvokeResponseOutputWithContext(ctx context.Context) RestRequestInvokeResponseOutput {
	return o
}

// The authentication information required in the request to the health provider.
func (o RestRequestInvokeResponseOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v RestRequestInvokeResponse) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The HTTP method to use for the request.
func (o RestRequestInvokeResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequestInvokeResponse) string { return v.Method }).(pulumi.StringOutput)
}

// The HTTP URI to use for the request.
func (o RestRequestInvokeResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequestInvokeResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// The properties that make up a REST request
type RestRequestResponse struct {
	// The authentication information required in the request to the health provider.
	Authentication interface{} `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method string `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri string `pulumi:"uri"`
}

// RestRequestResponseInput is an input type that accepts RestRequestResponseArgs and RestRequestResponseOutput values.
// You can construct a concrete instance of `RestRequestResponseInput` via:
//
//          RestRequestResponseArgs{...}
type RestRequestResponseInput interface {
	pulumi.Input

	ToRestRequestResponseOutput() RestRequestResponseOutput
	ToRestRequestResponseOutputWithContext(context.Context) RestRequestResponseOutput
}

// The properties that make up a REST request
type RestRequestResponseArgs struct {
	// The authentication information required in the request to the health provider.
	Authentication pulumi.Input `pulumi:"authentication"`
	// The HTTP method to use for the request.
	Method pulumi.StringInput `pulumi:"method"`
	// The HTTP URI to use for the request.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (RestRequestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequestResponse)(nil)).Elem()
}

func (i RestRequestResponseArgs) ToRestRequestResponseOutput() RestRequestResponseOutput {
	return i.ToRestRequestResponseOutputWithContext(context.Background())
}

func (i RestRequestResponseArgs) ToRestRequestResponseOutputWithContext(ctx context.Context) RestRequestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestRequestResponseOutput)
}

// The properties that make up a REST request
type RestRequestResponseOutput struct{ *pulumi.OutputState }

func (RestRequestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestRequestResponse)(nil)).Elem()
}

func (o RestRequestResponseOutput) ToRestRequestResponseOutput() RestRequestResponseOutput {
	return o
}

func (o RestRequestResponseOutput) ToRestRequestResponseOutputWithContext(ctx context.Context) RestRequestResponseOutput {
	return o
}

// The authentication information required in the request to the health provider.
func (o RestRequestResponseOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v RestRequestResponse) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The HTTP method to use for the request.
func (o RestRequestResponseOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequestResponse) string { return v.Method }).(pulumi.StringOutput)
}

// The HTTP URI to use for the request.
func (o RestRequestResponseOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v RestRequestResponse) string { return v.Uri }).(pulumi.StringOutput)
}

// The properties that make up the expected REST response
type RestResponse struct {
	// The regular expressions to match the response content with.
	Regex *RestResponseRegex `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes []string `pulumi:"successStatusCodes"`
}

// RestResponseInput is an input type that accepts RestResponseArgs and RestResponseOutput values.
// You can construct a concrete instance of `RestResponseInput` via:
//
//          RestResponseArgs{...}
type RestResponseInput interface {
	pulumi.Input

	ToRestResponseOutput() RestResponseOutput
	ToRestResponseOutputWithContext(context.Context) RestResponseOutput
}

// The properties that make up the expected REST response
type RestResponseArgs struct {
	// The regular expressions to match the response content with.
	Regex RestResponseRegexPtrInput `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes pulumi.StringArrayInput `pulumi:"successStatusCodes"`
}

func (RestResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponse)(nil)).Elem()
}

func (i RestResponseArgs) ToRestResponseOutput() RestResponseOutput {
	return i.ToRestResponseOutputWithContext(context.Background())
}

func (i RestResponseArgs) ToRestResponseOutputWithContext(ctx context.Context) RestResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseOutput)
}

func (i RestResponseArgs) ToRestResponsePtrOutput() RestResponsePtrOutput {
	return i.ToRestResponsePtrOutputWithContext(context.Background())
}

func (i RestResponseArgs) ToRestResponsePtrOutputWithContext(ctx context.Context) RestResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseOutput).ToRestResponsePtrOutputWithContext(ctx)
}

// RestResponsePtrInput is an input type that accepts RestResponseArgs, RestResponsePtr and RestResponsePtrOutput values.
// You can construct a concrete instance of `RestResponsePtrInput` via:
//
//          RestResponseArgs{...}
//
//  or:
//
//          nil
type RestResponsePtrInput interface {
	pulumi.Input

	ToRestResponsePtrOutput() RestResponsePtrOutput
	ToRestResponsePtrOutputWithContext(context.Context) RestResponsePtrOutput
}

type restResponsePtrType RestResponseArgs

func RestResponsePtr(v *RestResponseArgs) RestResponsePtrInput {
	return (*restResponsePtrType)(v)
}

func (*restResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponse)(nil)).Elem()
}

func (i *restResponsePtrType) ToRestResponsePtrOutput() RestResponsePtrOutput {
	return i.ToRestResponsePtrOutputWithContext(context.Background())
}

func (i *restResponsePtrType) ToRestResponsePtrOutputWithContext(ctx context.Context) RestResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponsePtrOutput)
}

// The properties that make up the expected REST response
type RestResponseOutput struct{ *pulumi.OutputState }

func (RestResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponse)(nil)).Elem()
}

func (o RestResponseOutput) ToRestResponseOutput() RestResponseOutput {
	return o
}

func (o RestResponseOutput) ToRestResponseOutputWithContext(ctx context.Context) RestResponseOutput {
	return o
}

func (o RestResponseOutput) ToRestResponsePtrOutput() RestResponsePtrOutput {
	return o.ToRestResponsePtrOutputWithContext(context.Background())
}

func (o RestResponseOutput) ToRestResponsePtrOutputWithContext(ctx context.Context) RestResponsePtrOutput {
	return o.ApplyT(func(v RestResponse) *RestResponse {
		return &v
	}).(RestResponsePtrOutput)
}

// The regular expressions to match the response content with.
func (o RestResponseOutput) Regex() RestResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponse) *RestResponseRegex { return v.Regex }).(RestResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponseOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponse) []string { return v.SuccessStatusCodes }).(pulumi.StringArrayOutput)
}

type RestResponsePtrOutput struct{ *pulumi.OutputState }

func (RestResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponse)(nil)).Elem()
}

func (o RestResponsePtrOutput) ToRestResponsePtrOutput() RestResponsePtrOutput {
	return o
}

func (o RestResponsePtrOutput) ToRestResponsePtrOutputWithContext(ctx context.Context) RestResponsePtrOutput {
	return o
}

func (o RestResponsePtrOutput) Elem() RestResponseOutput {
	return o.ApplyT(func(v *RestResponse) RestResponse { return *v }).(RestResponseOutput)
}

// The regular expressions to match the response content with.
func (o RestResponsePtrOutput) Regex() RestResponseRegexPtrOutput {
	return o.ApplyT(func(v *RestResponse) *RestResponseRegex {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(RestResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponsePtrOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponse) []string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusCodes
	}).(pulumi.StringArrayOutput)
}

// The properties that make up the expected REST response
type RestResponseInvokeResponse struct {
	// The regular expressions to match the response content with.
	Regex *RestResponseInvokeResponseRegex `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes []string `pulumi:"successStatusCodes"`
}

// RestResponseInvokeResponseInput is an input type that accepts RestResponseInvokeResponseArgs and RestResponseInvokeResponseOutput values.
// You can construct a concrete instance of `RestResponseInvokeResponseInput` via:
//
//          RestResponseInvokeResponseArgs{...}
type RestResponseInvokeResponseInput interface {
	pulumi.Input

	ToRestResponseInvokeResponseOutput() RestResponseInvokeResponseOutput
	ToRestResponseInvokeResponseOutputWithContext(context.Context) RestResponseInvokeResponseOutput
}

// The properties that make up the expected REST response
type RestResponseInvokeResponseArgs struct {
	// The regular expressions to match the response content with.
	Regex RestResponseInvokeResponseRegexPtrInput `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes pulumi.StringArrayInput `pulumi:"successStatusCodes"`
}

func (RestResponseInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseInvokeResponse)(nil)).Elem()
}

func (i RestResponseInvokeResponseArgs) ToRestResponseInvokeResponseOutput() RestResponseInvokeResponseOutput {
	return i.ToRestResponseInvokeResponseOutputWithContext(context.Background())
}

func (i RestResponseInvokeResponseArgs) ToRestResponseInvokeResponseOutputWithContext(ctx context.Context) RestResponseInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponseOutput)
}

func (i RestResponseInvokeResponseArgs) ToRestResponseInvokeResponsePtrOutput() RestResponseInvokeResponsePtrOutput {
	return i.ToRestResponseInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RestResponseInvokeResponseArgs) ToRestResponseInvokeResponsePtrOutputWithContext(ctx context.Context) RestResponseInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponseOutput).ToRestResponseInvokeResponsePtrOutputWithContext(ctx)
}

// RestResponseInvokeResponsePtrInput is an input type that accepts RestResponseInvokeResponseArgs, RestResponseInvokeResponsePtr and RestResponseInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RestResponseInvokeResponsePtrInput` via:
//
//          RestResponseInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RestResponseInvokeResponsePtrInput interface {
	pulumi.Input

	ToRestResponseInvokeResponsePtrOutput() RestResponseInvokeResponsePtrOutput
	ToRestResponseInvokeResponsePtrOutputWithContext(context.Context) RestResponseInvokeResponsePtrOutput
}

type restResponseInvokeResponsePtrType RestResponseInvokeResponseArgs

func RestResponseInvokeResponsePtr(v *RestResponseInvokeResponseArgs) RestResponseInvokeResponsePtrInput {
	return (*restResponseInvokeResponsePtrType)(v)
}

func (*restResponseInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseInvokeResponse)(nil)).Elem()
}

func (i *restResponseInvokeResponsePtrType) ToRestResponseInvokeResponsePtrOutput() RestResponseInvokeResponsePtrOutput {
	return i.ToRestResponseInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *restResponseInvokeResponsePtrType) ToRestResponseInvokeResponsePtrOutputWithContext(ctx context.Context) RestResponseInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponsePtrOutput)
}

// The properties that make up the expected REST response
type RestResponseInvokeResponseOutput struct{ *pulumi.OutputState }

func (RestResponseInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseInvokeResponse)(nil)).Elem()
}

func (o RestResponseInvokeResponseOutput) ToRestResponseInvokeResponseOutput() RestResponseInvokeResponseOutput {
	return o
}

func (o RestResponseInvokeResponseOutput) ToRestResponseInvokeResponseOutputWithContext(ctx context.Context) RestResponseInvokeResponseOutput {
	return o
}

func (o RestResponseInvokeResponseOutput) ToRestResponseInvokeResponsePtrOutput() RestResponseInvokeResponsePtrOutput {
	return o.ToRestResponseInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RestResponseInvokeResponseOutput) ToRestResponseInvokeResponsePtrOutputWithContext(ctx context.Context) RestResponseInvokeResponsePtrOutput {
	return o.ApplyT(func(v RestResponseInvokeResponse) *RestResponseInvokeResponse {
		return &v
	}).(RestResponseInvokeResponsePtrOutput)
}

// The regular expressions to match the response content with.
func (o RestResponseInvokeResponseOutput) Regex() RestResponseInvokeResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponseInvokeResponse) *RestResponseInvokeResponseRegex { return v.Regex }).(RestResponseInvokeResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponseInvokeResponseOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponseInvokeResponse) []string { return v.SuccessStatusCodes }).(pulumi.StringArrayOutput)
}

type RestResponseInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RestResponseInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseInvokeResponse)(nil)).Elem()
}

func (o RestResponseInvokeResponsePtrOutput) ToRestResponseInvokeResponsePtrOutput() RestResponseInvokeResponsePtrOutput {
	return o
}

func (o RestResponseInvokeResponsePtrOutput) ToRestResponseInvokeResponsePtrOutputWithContext(ctx context.Context) RestResponseInvokeResponsePtrOutput {
	return o
}

func (o RestResponseInvokeResponsePtrOutput) Elem() RestResponseInvokeResponseOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponse) RestResponseInvokeResponse { return *v }).(RestResponseInvokeResponseOutput)
}

// The regular expressions to match the response content with.
func (o RestResponseInvokeResponsePtrOutput) Regex() RestResponseInvokeResponseRegexPtrOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponse) *RestResponseInvokeResponseRegex {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(RestResponseInvokeResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponseInvokeResponsePtrOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusCodes
	}).(pulumi.StringArrayOutput)
}

// The regular expressions to match the response content with.
type RestResponseInvokeResponseRegex struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier *string `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches []string `pulumi:"matches"`
}

// RestResponseInvokeResponseRegexInput is an input type that accepts RestResponseInvokeResponseRegexArgs and RestResponseInvokeResponseRegexOutput values.
// You can construct a concrete instance of `RestResponseInvokeResponseRegexInput` via:
//
//          RestResponseInvokeResponseRegexArgs{...}
type RestResponseInvokeResponseRegexInput interface {
	pulumi.Input

	ToRestResponseInvokeResponseRegexOutput() RestResponseInvokeResponseRegexOutput
	ToRestResponseInvokeResponseRegexOutputWithContext(context.Context) RestResponseInvokeResponseRegexOutput
}

// The regular expressions to match the response content with.
type RestResponseInvokeResponseRegexArgs struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier pulumi.StringPtrInput `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches pulumi.StringArrayInput `pulumi:"matches"`
}

func (RestResponseInvokeResponseRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseInvokeResponseRegex)(nil)).Elem()
}

func (i RestResponseInvokeResponseRegexArgs) ToRestResponseInvokeResponseRegexOutput() RestResponseInvokeResponseRegexOutput {
	return i.ToRestResponseInvokeResponseRegexOutputWithContext(context.Background())
}

func (i RestResponseInvokeResponseRegexArgs) ToRestResponseInvokeResponseRegexOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponseRegexOutput)
}

func (i RestResponseInvokeResponseRegexArgs) ToRestResponseInvokeResponseRegexPtrOutput() RestResponseInvokeResponseRegexPtrOutput {
	return i.ToRestResponseInvokeResponseRegexPtrOutputWithContext(context.Background())
}

func (i RestResponseInvokeResponseRegexArgs) ToRestResponseInvokeResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponseRegexOutput).ToRestResponseInvokeResponseRegexPtrOutputWithContext(ctx)
}

// RestResponseInvokeResponseRegexPtrInput is an input type that accepts RestResponseInvokeResponseRegexArgs, RestResponseInvokeResponseRegexPtr and RestResponseInvokeResponseRegexPtrOutput values.
// You can construct a concrete instance of `RestResponseInvokeResponseRegexPtrInput` via:
//
//          RestResponseInvokeResponseRegexArgs{...}
//
//  or:
//
//          nil
type RestResponseInvokeResponseRegexPtrInput interface {
	pulumi.Input

	ToRestResponseInvokeResponseRegexPtrOutput() RestResponseInvokeResponseRegexPtrOutput
	ToRestResponseInvokeResponseRegexPtrOutputWithContext(context.Context) RestResponseInvokeResponseRegexPtrOutput
}

type restResponseInvokeResponseRegexPtrType RestResponseInvokeResponseRegexArgs

func RestResponseInvokeResponseRegexPtr(v *RestResponseInvokeResponseRegexArgs) RestResponseInvokeResponseRegexPtrInput {
	return (*restResponseInvokeResponseRegexPtrType)(v)
}

func (*restResponseInvokeResponseRegexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseInvokeResponseRegex)(nil)).Elem()
}

func (i *restResponseInvokeResponseRegexPtrType) ToRestResponseInvokeResponseRegexPtrOutput() RestResponseInvokeResponseRegexPtrOutput {
	return i.ToRestResponseInvokeResponseRegexPtrOutputWithContext(context.Background())
}

func (i *restResponseInvokeResponseRegexPtrType) ToRestResponseInvokeResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseInvokeResponseRegexPtrOutput)
}

// The regular expressions to match the response content with.
type RestResponseInvokeResponseRegexOutput struct{ *pulumi.OutputState }

func (RestResponseInvokeResponseRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseInvokeResponseRegex)(nil)).Elem()
}

func (o RestResponseInvokeResponseRegexOutput) ToRestResponseInvokeResponseRegexOutput() RestResponseInvokeResponseRegexOutput {
	return o
}

func (o RestResponseInvokeResponseRegexOutput) ToRestResponseInvokeResponseRegexOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexOutput {
	return o
}

func (o RestResponseInvokeResponseRegexOutput) ToRestResponseInvokeResponseRegexPtrOutput() RestResponseInvokeResponseRegexPtrOutput {
	return o.ToRestResponseInvokeResponseRegexPtrOutputWithContext(context.Background())
}

func (o RestResponseInvokeResponseRegexOutput) ToRestResponseInvokeResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponseInvokeResponseRegex) *RestResponseInvokeResponseRegex {
		return &v
	}).(RestResponseInvokeResponseRegexPtrOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseInvokeResponseRegexOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestResponseInvokeResponseRegex) *string { return v.MatchQuantifier }).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseInvokeResponseRegexOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponseInvokeResponseRegex) []string { return v.Matches }).(pulumi.StringArrayOutput)
}

type RestResponseInvokeResponseRegexPtrOutput struct{ *pulumi.OutputState }

func (RestResponseInvokeResponseRegexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseInvokeResponseRegex)(nil)).Elem()
}

func (o RestResponseInvokeResponseRegexPtrOutput) ToRestResponseInvokeResponseRegexPtrOutput() RestResponseInvokeResponseRegexPtrOutput {
	return o
}

func (o RestResponseInvokeResponseRegexPtrOutput) ToRestResponseInvokeResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseInvokeResponseRegexPtrOutput {
	return o
}

func (o RestResponseInvokeResponseRegexPtrOutput) Elem() RestResponseInvokeResponseRegexOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponseRegex) RestResponseInvokeResponseRegex { return *v }).(RestResponseInvokeResponseRegexOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseInvokeResponseRegexPtrOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponseRegex) *string {
		if v == nil {
			return nil
		}
		return v.MatchQuantifier
	}).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseInvokeResponseRegexPtrOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponseInvokeResponseRegex) []string {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(pulumi.StringArrayOutput)
}

// The regular expressions to match the response content with.
type RestResponseRegex struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier *string `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches []string `pulumi:"matches"`
}

// RestResponseRegexInput is an input type that accepts RestResponseRegexArgs and RestResponseRegexOutput values.
// You can construct a concrete instance of `RestResponseRegexInput` via:
//
//          RestResponseRegexArgs{...}
type RestResponseRegexInput interface {
	pulumi.Input

	ToRestResponseRegexOutput() RestResponseRegexOutput
	ToRestResponseRegexOutputWithContext(context.Context) RestResponseRegexOutput
}

// The regular expressions to match the response content with.
type RestResponseRegexArgs struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier RestMatchQuantifier `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches pulumi.StringArrayInput `pulumi:"matches"`
}

func (RestResponseRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseRegex)(nil)).Elem()
}

func (i RestResponseRegexArgs) ToRestResponseRegexOutput() RestResponseRegexOutput {
	return i.ToRestResponseRegexOutputWithContext(context.Background())
}

func (i RestResponseRegexArgs) ToRestResponseRegexOutputWithContext(ctx context.Context) RestResponseRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseRegexOutput)
}

func (i RestResponseRegexArgs) ToRestResponseRegexPtrOutput() RestResponseRegexPtrOutput {
	return i.ToRestResponseRegexPtrOutputWithContext(context.Background())
}

func (i RestResponseRegexArgs) ToRestResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseRegexOutput).ToRestResponseRegexPtrOutputWithContext(ctx)
}

// RestResponseRegexPtrInput is an input type that accepts RestResponseRegexArgs, RestResponseRegexPtr and RestResponseRegexPtrOutput values.
// You can construct a concrete instance of `RestResponseRegexPtrInput` via:
//
//          RestResponseRegexArgs{...}
//
//  or:
//
//          nil
type RestResponseRegexPtrInput interface {
	pulumi.Input

	ToRestResponseRegexPtrOutput() RestResponseRegexPtrOutput
	ToRestResponseRegexPtrOutputWithContext(context.Context) RestResponseRegexPtrOutput
}

type restResponseRegexPtrType RestResponseRegexArgs

func RestResponseRegexPtr(v *RestResponseRegexArgs) RestResponseRegexPtrInput {
	return (*restResponseRegexPtrType)(v)
}

func (*restResponseRegexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseRegex)(nil)).Elem()
}

func (i *restResponseRegexPtrType) ToRestResponseRegexPtrOutput() RestResponseRegexPtrOutput {
	return i.ToRestResponseRegexPtrOutputWithContext(context.Background())
}

func (i *restResponseRegexPtrType) ToRestResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseRegexPtrOutput)
}

// The regular expressions to match the response content with.
type RestResponseRegexOutput struct{ *pulumi.OutputState }

func (RestResponseRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseRegex)(nil)).Elem()
}

func (o RestResponseRegexOutput) ToRestResponseRegexOutput() RestResponseRegexOutput {
	return o
}

func (o RestResponseRegexOutput) ToRestResponseRegexOutputWithContext(ctx context.Context) RestResponseRegexOutput {
	return o
}

func (o RestResponseRegexOutput) ToRestResponseRegexPtrOutput() RestResponseRegexPtrOutput {
	return o.ToRestResponseRegexPtrOutputWithContext(context.Background())
}

func (o RestResponseRegexOutput) ToRestResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponseRegex) *RestResponseRegex {
		return &v
	}).(RestResponseRegexPtrOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseRegexOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestResponseRegex) *string { return v.MatchQuantifier }).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseRegexOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponseRegex) []string { return v.Matches }).(pulumi.StringArrayOutput)
}

type RestResponseRegexPtrOutput struct{ *pulumi.OutputState }

func (RestResponseRegexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseRegex)(nil)).Elem()
}

func (o RestResponseRegexPtrOutput) ToRestResponseRegexPtrOutput() RestResponseRegexPtrOutput {
	return o
}

func (o RestResponseRegexPtrOutput) ToRestResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseRegexPtrOutput {
	return o
}

func (o RestResponseRegexPtrOutput) Elem() RestResponseRegexOutput {
	return o.ApplyT(func(v *RestResponseRegex) RestResponseRegex { return *v }).(RestResponseRegexOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseRegexPtrOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestResponseRegex) *string {
		if v == nil {
			return nil
		}
		return v.MatchQuantifier
	}).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseRegexPtrOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponseRegex) []string {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(pulumi.StringArrayOutput)
}

// The properties that make up the expected REST response
type RestResponseResponse struct {
	// The regular expressions to match the response content with.
	Regex *RestResponseResponseRegex `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes []string `pulumi:"successStatusCodes"`
}

// RestResponseResponseInput is an input type that accepts RestResponseResponseArgs and RestResponseResponseOutput values.
// You can construct a concrete instance of `RestResponseResponseInput` via:
//
//          RestResponseResponseArgs{...}
type RestResponseResponseInput interface {
	pulumi.Input

	ToRestResponseResponseOutput() RestResponseResponseOutput
	ToRestResponseResponseOutputWithContext(context.Context) RestResponseResponseOutput
}

// The properties that make up the expected REST response
type RestResponseResponseArgs struct {
	// The regular expressions to match the response content with.
	Regex RestResponseResponseRegexPtrInput `pulumi:"regex"`
	// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
	SuccessStatusCodes pulumi.StringArrayInput `pulumi:"successStatusCodes"`
}

func (RestResponseResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseResponse)(nil)).Elem()
}

func (i RestResponseResponseArgs) ToRestResponseResponseOutput() RestResponseResponseOutput {
	return i.ToRestResponseResponseOutputWithContext(context.Background())
}

func (i RestResponseResponseArgs) ToRestResponseResponseOutputWithContext(ctx context.Context) RestResponseResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponseOutput)
}

func (i RestResponseResponseArgs) ToRestResponseResponsePtrOutput() RestResponseResponsePtrOutput {
	return i.ToRestResponseResponsePtrOutputWithContext(context.Background())
}

func (i RestResponseResponseArgs) ToRestResponseResponsePtrOutputWithContext(ctx context.Context) RestResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponseOutput).ToRestResponseResponsePtrOutputWithContext(ctx)
}

// RestResponseResponsePtrInput is an input type that accepts RestResponseResponseArgs, RestResponseResponsePtr and RestResponseResponsePtrOutput values.
// You can construct a concrete instance of `RestResponseResponsePtrInput` via:
//
//          RestResponseResponseArgs{...}
//
//  or:
//
//          nil
type RestResponseResponsePtrInput interface {
	pulumi.Input

	ToRestResponseResponsePtrOutput() RestResponseResponsePtrOutput
	ToRestResponseResponsePtrOutputWithContext(context.Context) RestResponseResponsePtrOutput
}

type restResponseResponsePtrType RestResponseResponseArgs

func RestResponseResponsePtr(v *RestResponseResponseArgs) RestResponseResponsePtrInput {
	return (*restResponseResponsePtrType)(v)
}

func (*restResponseResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseResponse)(nil)).Elem()
}

func (i *restResponseResponsePtrType) ToRestResponseResponsePtrOutput() RestResponseResponsePtrOutput {
	return i.ToRestResponseResponsePtrOutputWithContext(context.Background())
}

func (i *restResponseResponsePtrType) ToRestResponseResponsePtrOutputWithContext(ctx context.Context) RestResponseResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponsePtrOutput)
}

// The properties that make up the expected REST response
type RestResponseResponseOutput struct{ *pulumi.OutputState }

func (RestResponseResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseResponse)(nil)).Elem()
}

func (o RestResponseResponseOutput) ToRestResponseResponseOutput() RestResponseResponseOutput {
	return o
}

func (o RestResponseResponseOutput) ToRestResponseResponseOutputWithContext(ctx context.Context) RestResponseResponseOutput {
	return o
}

func (o RestResponseResponseOutput) ToRestResponseResponsePtrOutput() RestResponseResponsePtrOutput {
	return o.ToRestResponseResponsePtrOutputWithContext(context.Background())
}

func (o RestResponseResponseOutput) ToRestResponseResponsePtrOutputWithContext(ctx context.Context) RestResponseResponsePtrOutput {
	return o.ApplyT(func(v RestResponseResponse) *RestResponseResponse {
		return &v
	}).(RestResponseResponsePtrOutput)
}

// The regular expressions to match the response content with.
func (o RestResponseResponseOutput) Regex() RestResponseResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponseResponse) *RestResponseResponseRegex { return v.Regex }).(RestResponseResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponseResponseOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponseResponse) []string { return v.SuccessStatusCodes }).(pulumi.StringArrayOutput)
}

type RestResponseResponsePtrOutput struct{ *pulumi.OutputState }

func (RestResponseResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseResponse)(nil)).Elem()
}

func (o RestResponseResponsePtrOutput) ToRestResponseResponsePtrOutput() RestResponseResponsePtrOutput {
	return o
}

func (o RestResponseResponsePtrOutput) ToRestResponseResponsePtrOutputWithContext(ctx context.Context) RestResponseResponsePtrOutput {
	return o
}

func (o RestResponseResponsePtrOutput) Elem() RestResponseResponseOutput {
	return o.ApplyT(func(v *RestResponseResponse) RestResponseResponse { return *v }).(RestResponseResponseOutput)
}

// The regular expressions to match the response content with.
func (o RestResponseResponsePtrOutput) Regex() RestResponseResponseRegexPtrOutput {
	return o.ApplyT(func(v *RestResponseResponse) *RestResponseResponseRegex {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(RestResponseResponseRegexPtrOutput)
}

// The HTTP status codes expected in a successful health check response. The response is expected to match one of the given status codes. If no expected status codes are provided, default expected status code is 200 OK.
func (o RestResponseResponsePtrOutput) SuccessStatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponseResponse) []string {
		if v == nil {
			return nil
		}
		return v.SuccessStatusCodes
	}).(pulumi.StringArrayOutput)
}

// The regular expressions to match the response content with.
type RestResponseResponseRegex struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier *string `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches []string `pulumi:"matches"`
}

// RestResponseResponseRegexInput is an input type that accepts RestResponseResponseRegexArgs and RestResponseResponseRegexOutput values.
// You can construct a concrete instance of `RestResponseResponseRegexInput` via:
//
//          RestResponseResponseRegexArgs{...}
type RestResponseResponseRegexInput interface {
	pulumi.Input

	ToRestResponseResponseRegexOutput() RestResponseResponseRegexOutput
	ToRestResponseResponseRegexOutputWithContext(context.Context) RestResponseResponseRegexOutput
}

// The regular expressions to match the response content with.
type RestResponseResponseRegexArgs struct {
	// Indicates whether any or all of the expressions should match with the response content.
	MatchQuantifier pulumi.StringPtrInput `pulumi:"matchQuantifier"`
	// The list of regular expressions.
	Matches pulumi.StringArrayInput `pulumi:"matches"`
}

func (RestResponseResponseRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseResponseRegex)(nil)).Elem()
}

func (i RestResponseResponseRegexArgs) ToRestResponseResponseRegexOutput() RestResponseResponseRegexOutput {
	return i.ToRestResponseResponseRegexOutputWithContext(context.Background())
}

func (i RestResponseResponseRegexArgs) ToRestResponseResponseRegexOutputWithContext(ctx context.Context) RestResponseResponseRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponseRegexOutput)
}

func (i RestResponseResponseRegexArgs) ToRestResponseResponseRegexPtrOutput() RestResponseResponseRegexPtrOutput {
	return i.ToRestResponseResponseRegexPtrOutputWithContext(context.Background())
}

func (i RestResponseResponseRegexArgs) ToRestResponseResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponseRegexOutput).ToRestResponseResponseRegexPtrOutputWithContext(ctx)
}

// RestResponseResponseRegexPtrInput is an input type that accepts RestResponseResponseRegexArgs, RestResponseResponseRegexPtr and RestResponseResponseRegexPtrOutput values.
// You can construct a concrete instance of `RestResponseResponseRegexPtrInput` via:
//
//          RestResponseResponseRegexArgs{...}
//
//  or:
//
//          nil
type RestResponseResponseRegexPtrInput interface {
	pulumi.Input

	ToRestResponseResponseRegexPtrOutput() RestResponseResponseRegexPtrOutput
	ToRestResponseResponseRegexPtrOutputWithContext(context.Context) RestResponseResponseRegexPtrOutput
}

type restResponseResponseRegexPtrType RestResponseResponseRegexArgs

func RestResponseResponseRegexPtr(v *RestResponseResponseRegexArgs) RestResponseResponseRegexPtrInput {
	return (*restResponseResponseRegexPtrType)(v)
}

func (*restResponseResponseRegexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseResponseRegex)(nil)).Elem()
}

func (i *restResponseResponseRegexPtrType) ToRestResponseResponseRegexPtrOutput() RestResponseResponseRegexPtrOutput {
	return i.ToRestResponseResponseRegexPtrOutputWithContext(context.Background())
}

func (i *restResponseResponseRegexPtrType) ToRestResponseResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseResponseRegexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestResponseResponseRegexPtrOutput)
}

// The regular expressions to match the response content with.
type RestResponseResponseRegexOutput struct{ *pulumi.OutputState }

func (RestResponseResponseRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestResponseResponseRegex)(nil)).Elem()
}

func (o RestResponseResponseRegexOutput) ToRestResponseResponseRegexOutput() RestResponseResponseRegexOutput {
	return o
}

func (o RestResponseResponseRegexOutput) ToRestResponseResponseRegexOutputWithContext(ctx context.Context) RestResponseResponseRegexOutput {
	return o
}

func (o RestResponseResponseRegexOutput) ToRestResponseResponseRegexPtrOutput() RestResponseResponseRegexPtrOutput {
	return o.ToRestResponseResponseRegexPtrOutputWithContext(context.Background())
}

func (o RestResponseResponseRegexOutput) ToRestResponseResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseResponseRegexPtrOutput {
	return o.ApplyT(func(v RestResponseResponseRegex) *RestResponseResponseRegex {
		return &v
	}).(RestResponseResponseRegexPtrOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseResponseRegexOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestResponseResponseRegex) *string { return v.MatchQuantifier }).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseResponseRegexOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestResponseResponseRegex) []string { return v.Matches }).(pulumi.StringArrayOutput)
}

type RestResponseResponseRegexPtrOutput struct{ *pulumi.OutputState }

func (RestResponseResponseRegexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestResponseResponseRegex)(nil)).Elem()
}

func (o RestResponseResponseRegexPtrOutput) ToRestResponseResponseRegexPtrOutput() RestResponseResponseRegexPtrOutput {
	return o
}

func (o RestResponseResponseRegexPtrOutput) ToRestResponseResponseRegexPtrOutputWithContext(ctx context.Context) RestResponseResponseRegexPtrOutput {
	return o
}

func (o RestResponseResponseRegexPtrOutput) Elem() RestResponseResponseRegexOutput {
	return o.ApplyT(func(v *RestResponseResponseRegex) RestResponseResponseRegex { return *v }).(RestResponseResponseRegexOutput)
}

// Indicates whether any or all of the expressions should match with the response content.
func (o RestResponseResponseRegexPtrOutput) MatchQuantifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestResponseResponseRegex) *string {
		if v == nil {
			return nil
		}
		return v.MatchQuantifier
	}).(pulumi.StringPtrOutput)
}

// The list of regular expressions.
func (o RestResponseResponseRegexPtrOutput) Matches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestResponseResponseRegex) []string {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(pulumi.StringArrayOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthentication struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type string `pulumi:"type"`
}

// RolloutIdentityAuthenticationInput is an input type that accepts RolloutIdentityAuthenticationArgs and RolloutIdentityAuthenticationOutput values.
// You can construct a concrete instance of `RolloutIdentityAuthenticationInput` via:
//
//          RolloutIdentityAuthenticationArgs{...}
type RolloutIdentityAuthenticationInput interface {
	pulumi.Input

	ToRolloutIdentityAuthenticationOutput() RolloutIdentityAuthenticationOutput
	ToRolloutIdentityAuthenticationOutputWithContext(context.Context) RolloutIdentityAuthenticationOutput
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationArgs struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RolloutIdentityAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthentication)(nil)).Elem()
}

func (i RolloutIdentityAuthenticationArgs) ToRolloutIdentityAuthenticationOutput() RolloutIdentityAuthenticationOutput {
	return i.ToRolloutIdentityAuthenticationOutputWithContext(context.Background())
}

func (i RolloutIdentityAuthenticationArgs) ToRolloutIdentityAuthenticationOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutIdentityAuthenticationOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationOutput struct{ *pulumi.OutputState }

func (RolloutIdentityAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthentication)(nil)).Elem()
}

func (o RolloutIdentityAuthenticationOutput) ToRolloutIdentityAuthenticationOutput() RolloutIdentityAuthenticationOutput {
	return o
}

func (o RolloutIdentityAuthenticationOutput) ToRolloutIdentityAuthenticationOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationOutput {
	return o
}

// The authentication type.
// Expected value is 'RolloutIdentity'.
func (o RolloutIdentityAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutIdentityAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationInvokeResponse struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type string `pulumi:"type"`
}

// RolloutIdentityAuthenticationInvokeResponseInput is an input type that accepts RolloutIdentityAuthenticationInvokeResponseArgs and RolloutIdentityAuthenticationInvokeResponseOutput values.
// You can construct a concrete instance of `RolloutIdentityAuthenticationInvokeResponseInput` via:
//
//          RolloutIdentityAuthenticationInvokeResponseArgs{...}
type RolloutIdentityAuthenticationInvokeResponseInput interface {
	pulumi.Input

	ToRolloutIdentityAuthenticationInvokeResponseOutput() RolloutIdentityAuthenticationInvokeResponseOutput
	ToRolloutIdentityAuthenticationInvokeResponseOutputWithContext(context.Context) RolloutIdentityAuthenticationInvokeResponseOutput
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationInvokeResponseArgs struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RolloutIdentityAuthenticationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthenticationInvokeResponse)(nil)).Elem()
}

func (i RolloutIdentityAuthenticationInvokeResponseArgs) ToRolloutIdentityAuthenticationInvokeResponseOutput() RolloutIdentityAuthenticationInvokeResponseOutput {
	return i.ToRolloutIdentityAuthenticationInvokeResponseOutputWithContext(context.Background())
}

func (i RolloutIdentityAuthenticationInvokeResponseArgs) ToRolloutIdentityAuthenticationInvokeResponseOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutIdentityAuthenticationInvokeResponseOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationInvokeResponseOutput struct{ *pulumi.OutputState }

func (RolloutIdentityAuthenticationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthenticationInvokeResponse)(nil)).Elem()
}

func (o RolloutIdentityAuthenticationInvokeResponseOutput) ToRolloutIdentityAuthenticationInvokeResponseOutput() RolloutIdentityAuthenticationInvokeResponseOutput {
	return o
}

func (o RolloutIdentityAuthenticationInvokeResponseOutput) ToRolloutIdentityAuthenticationInvokeResponseOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationInvokeResponseOutput {
	return o
}

// The authentication type.
// Expected value is 'RolloutIdentity'.
func (o RolloutIdentityAuthenticationInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutIdentityAuthenticationInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationResponse struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type string `pulumi:"type"`
}

// RolloutIdentityAuthenticationResponseInput is an input type that accepts RolloutIdentityAuthenticationResponseArgs and RolloutIdentityAuthenticationResponseOutput values.
// You can construct a concrete instance of `RolloutIdentityAuthenticationResponseInput` via:
//
//          RolloutIdentityAuthenticationResponseArgs{...}
type RolloutIdentityAuthenticationResponseInput interface {
	pulumi.Input

	ToRolloutIdentityAuthenticationResponseOutput() RolloutIdentityAuthenticationResponseOutput
	ToRolloutIdentityAuthenticationResponseOutputWithContext(context.Context) RolloutIdentityAuthenticationResponseOutput
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationResponseArgs struct {
	// The authentication type.
	// Expected value is 'RolloutIdentity'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RolloutIdentityAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthenticationResponse)(nil)).Elem()
}

func (i RolloutIdentityAuthenticationResponseArgs) ToRolloutIdentityAuthenticationResponseOutput() RolloutIdentityAuthenticationResponseOutput {
	return i.ToRolloutIdentityAuthenticationResponseOutputWithContext(context.Background())
}

func (i RolloutIdentityAuthenticationResponseArgs) ToRolloutIdentityAuthenticationResponseOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutIdentityAuthenticationResponseOutput)
}

// RolloutIdentity uses the user-assigned managed identity authentication context specified in the Identity property during rollout creation.
type RolloutIdentityAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (RolloutIdentityAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutIdentityAuthenticationResponse)(nil)).Elem()
}

func (o RolloutIdentityAuthenticationResponseOutput) ToRolloutIdentityAuthenticationResponseOutput() RolloutIdentityAuthenticationResponseOutput {
	return o
}

func (o RolloutIdentityAuthenticationResponseOutput) ToRolloutIdentityAuthenticationResponseOutputWithContext(ctx context.Context) RolloutIdentityAuthenticationResponseOutput {
	return o
}

// The authentication type.
// Expected value is 'RolloutIdentity'.
func (o RolloutIdentityAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutIdentityAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoInvokeResponse struct {
	// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
	EndTime string `pulumi:"endTime"`
	// The detailed error information for any failure.
	Error CloudErrorBodyInvokeResponse `pulumi:"error"`
	// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
	RetryAttempt int `pulumi:"retryAttempt"`
	// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
	SkipSucceededOnRetry bool `pulumi:"skipSucceededOnRetry"`
	// The start time of the rollout in UTC.
	StartTime string `pulumi:"startTime"`
}

// RolloutOperationInfoInvokeResponseInput is an input type that accepts RolloutOperationInfoInvokeResponseArgs and RolloutOperationInfoInvokeResponseOutput values.
// You can construct a concrete instance of `RolloutOperationInfoInvokeResponseInput` via:
//
//          RolloutOperationInfoInvokeResponseArgs{...}
type RolloutOperationInfoInvokeResponseInput interface {
	pulumi.Input

	ToRolloutOperationInfoInvokeResponseOutput() RolloutOperationInfoInvokeResponseOutput
	ToRolloutOperationInfoInvokeResponseOutputWithContext(context.Context) RolloutOperationInfoInvokeResponseOutput
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoInvokeResponseArgs struct {
	// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The detailed error information for any failure.
	Error CloudErrorBodyInvokeResponseInput `pulumi:"error"`
	// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
	RetryAttempt pulumi.IntInput `pulumi:"retryAttempt"`
	// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
	SkipSucceededOnRetry pulumi.BoolInput `pulumi:"skipSucceededOnRetry"`
	// The start time of the rollout in UTC.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (RolloutOperationInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutOperationInfoInvokeResponse)(nil)).Elem()
}

func (i RolloutOperationInfoInvokeResponseArgs) ToRolloutOperationInfoInvokeResponseOutput() RolloutOperationInfoInvokeResponseOutput {
	return i.ToRolloutOperationInfoInvokeResponseOutputWithContext(context.Background())
}

func (i RolloutOperationInfoInvokeResponseArgs) ToRolloutOperationInfoInvokeResponseOutputWithContext(ctx context.Context) RolloutOperationInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutOperationInfoInvokeResponseOutput)
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (RolloutOperationInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutOperationInfoInvokeResponse)(nil)).Elem()
}

func (o RolloutOperationInfoInvokeResponseOutput) ToRolloutOperationInfoInvokeResponseOutput() RolloutOperationInfoInvokeResponseOutput {
	return o
}

func (o RolloutOperationInfoInvokeResponseOutput) ToRolloutOperationInfoInvokeResponseOutputWithContext(ctx context.Context) RolloutOperationInfoInvokeResponseOutput {
	return o
}

// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
func (o RolloutOperationInfoInvokeResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoInvokeResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The detailed error information for any failure.
func (o RolloutOperationInfoInvokeResponseOutput) Error() CloudErrorBodyInvokeResponseOutput {
	return o.ApplyT(func(v RolloutOperationInfoInvokeResponse) CloudErrorBodyInvokeResponse { return v.Error }).(CloudErrorBodyInvokeResponseOutput)
}

// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
func (o RolloutOperationInfoInvokeResponseOutput) RetryAttempt() pulumi.IntOutput {
	return o.ApplyT(func(v RolloutOperationInfoInvokeResponse) int { return v.RetryAttempt }).(pulumi.IntOutput)
}

// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
func (o RolloutOperationInfoInvokeResponseOutput) SkipSucceededOnRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v RolloutOperationInfoInvokeResponse) bool { return v.SkipSucceededOnRetry }).(pulumi.BoolOutput)
}

// The start time of the rollout in UTC.
func (o RolloutOperationInfoInvokeResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoInvokeResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Defines a specific step on a target service unit.
type RolloutStepInvokeResponse struct {
	// Supplementary informative messages during rollout.
	Messages []MessageInvokeResponse `pulumi:"messages"`
	// Name of the step.
	Name string `pulumi:"name"`
	// Detailed information of specific action execution.
	OperationInfo StepOperationInfoInvokeResponse `pulumi:"operationInfo"`
	// Set of resource operations that were performed, if any, on an Azure resource.
	ResourceOperations []ResourceOperationInvokeResponse `pulumi:"resourceOperations"`
	// Current state of the step.
	Status string `pulumi:"status"`
	// The step group the current step is part of.
	StepGroup *string `pulumi:"stepGroup"`
}

// RolloutStepInvokeResponseInput is an input type that accepts RolloutStepInvokeResponseArgs and RolloutStepInvokeResponseOutput values.
// You can construct a concrete instance of `RolloutStepInvokeResponseInput` via:
//
//          RolloutStepInvokeResponseArgs{...}
type RolloutStepInvokeResponseInput interface {
	pulumi.Input

	ToRolloutStepInvokeResponseOutput() RolloutStepInvokeResponseOutput
	ToRolloutStepInvokeResponseOutputWithContext(context.Context) RolloutStepInvokeResponseOutput
}

// Defines a specific step on a target service unit.
type RolloutStepInvokeResponseArgs struct {
	// Supplementary informative messages during rollout.
	Messages MessageInvokeResponseArrayInput `pulumi:"messages"`
	// Name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// Detailed information of specific action execution.
	OperationInfo StepOperationInfoInvokeResponseInput `pulumi:"operationInfo"`
	// Set of resource operations that were performed, if any, on an Azure resource.
	ResourceOperations ResourceOperationInvokeResponseArrayInput `pulumi:"resourceOperations"`
	// Current state of the step.
	Status pulumi.StringInput `pulumi:"status"`
	// The step group the current step is part of.
	StepGroup pulumi.StringPtrInput `pulumi:"stepGroup"`
}

func (RolloutStepInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutStepInvokeResponse)(nil)).Elem()
}

func (i RolloutStepInvokeResponseArgs) ToRolloutStepInvokeResponseOutput() RolloutStepInvokeResponseOutput {
	return i.ToRolloutStepInvokeResponseOutputWithContext(context.Background())
}

func (i RolloutStepInvokeResponseArgs) ToRolloutStepInvokeResponseOutputWithContext(ctx context.Context) RolloutStepInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutStepInvokeResponseOutput)
}

// RolloutStepInvokeResponseArrayInput is an input type that accepts RolloutStepInvokeResponseArray and RolloutStepInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RolloutStepInvokeResponseArrayInput` via:
//
//          RolloutStepInvokeResponseArray{ RolloutStepInvokeResponseArgs{...} }
type RolloutStepInvokeResponseArrayInput interface {
	pulumi.Input

	ToRolloutStepInvokeResponseArrayOutput() RolloutStepInvokeResponseArrayOutput
	ToRolloutStepInvokeResponseArrayOutputWithContext(context.Context) RolloutStepInvokeResponseArrayOutput
}

type RolloutStepInvokeResponseArray []RolloutStepInvokeResponseInput

func (RolloutStepInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolloutStepInvokeResponse)(nil)).Elem()
}

func (i RolloutStepInvokeResponseArray) ToRolloutStepInvokeResponseArrayOutput() RolloutStepInvokeResponseArrayOutput {
	return i.ToRolloutStepInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RolloutStepInvokeResponseArray) ToRolloutStepInvokeResponseArrayOutputWithContext(ctx context.Context) RolloutStepInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolloutStepInvokeResponseArrayOutput)
}

// Defines a specific step on a target service unit.
type RolloutStepInvokeResponseOutput struct{ *pulumi.OutputState }

func (RolloutStepInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutStepInvokeResponse)(nil)).Elem()
}

func (o RolloutStepInvokeResponseOutput) ToRolloutStepInvokeResponseOutput() RolloutStepInvokeResponseOutput {
	return o
}

func (o RolloutStepInvokeResponseOutput) ToRolloutStepInvokeResponseOutputWithContext(ctx context.Context) RolloutStepInvokeResponseOutput {
	return o
}

// Supplementary informative messages during rollout.
func (o RolloutStepInvokeResponseOutput) Messages() MessageInvokeResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) []MessageInvokeResponse { return v.Messages }).(MessageInvokeResponseArrayOutput)
}

// Name of the step.
func (o RolloutStepInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Detailed information of specific action execution.
func (o RolloutStepInvokeResponseOutput) OperationInfo() StepOperationInfoInvokeResponseOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) StepOperationInfoInvokeResponse { return v.OperationInfo }).(StepOperationInfoInvokeResponseOutput)
}

// Set of resource operations that were performed, if any, on an Azure resource.
func (o RolloutStepInvokeResponseOutput) ResourceOperations() ResourceOperationInvokeResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) []ResourceOperationInvokeResponse { return v.ResourceOperations }).(ResourceOperationInvokeResponseArrayOutput)
}

// Current state of the step.
func (o RolloutStepInvokeResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The step group the current step is part of.
func (o RolloutStepInvokeResponseOutput) StepGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolloutStepInvokeResponse) *string { return v.StepGroup }).(pulumi.StringPtrOutput)
}

type RolloutStepInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RolloutStepInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolloutStepInvokeResponse)(nil)).Elem()
}

func (o RolloutStepInvokeResponseArrayOutput) ToRolloutStepInvokeResponseArrayOutput() RolloutStepInvokeResponseArrayOutput {
	return o
}

func (o RolloutStepInvokeResponseArrayOutput) ToRolloutStepInvokeResponseArrayOutputWithContext(ctx context.Context) RolloutStepInvokeResponseArrayOutput {
	return o
}

func (o RolloutStepInvokeResponseArrayOutput) Index(i pulumi.IntInput) RolloutStepInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolloutStepInvokeResponse {
		return vs[0].([]RolloutStepInvokeResponse)[vs[1].(int)]
	}).(RolloutStepInvokeResponseOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthentication struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri string `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type string `pulumi:"type"`
}

// SasAuthenticationInput is an input type that accepts SasAuthenticationArgs and SasAuthenticationOutput values.
// You can construct a concrete instance of `SasAuthenticationInput` via:
//
//          SasAuthenticationArgs{...}
type SasAuthenticationInput interface {
	pulumi.Input

	ToSasAuthenticationOutput() SasAuthenticationOutput
	ToSasAuthenticationOutputWithContext(context.Context) SasAuthenticationOutput
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationArgs struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SasAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthentication)(nil)).Elem()
}

func (i SasAuthenticationArgs) ToSasAuthenticationOutput() SasAuthenticationOutput {
	return i.ToSasAuthenticationOutputWithContext(context.Background())
}

func (i SasAuthenticationArgs) ToSasAuthenticationOutputWithContext(ctx context.Context) SasAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationOutput)
}

func (i SasAuthenticationArgs) ToSasAuthenticationPtrOutput() SasAuthenticationPtrOutput {
	return i.ToSasAuthenticationPtrOutputWithContext(context.Background())
}

func (i SasAuthenticationArgs) ToSasAuthenticationPtrOutputWithContext(ctx context.Context) SasAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationOutput).ToSasAuthenticationPtrOutputWithContext(ctx)
}

// SasAuthenticationPtrInput is an input type that accepts SasAuthenticationArgs, SasAuthenticationPtr and SasAuthenticationPtrOutput values.
// You can construct a concrete instance of `SasAuthenticationPtrInput` via:
//
//          SasAuthenticationArgs{...}
//
//  or:
//
//          nil
type SasAuthenticationPtrInput interface {
	pulumi.Input

	ToSasAuthenticationPtrOutput() SasAuthenticationPtrOutput
	ToSasAuthenticationPtrOutputWithContext(context.Context) SasAuthenticationPtrOutput
}

type sasAuthenticationPtrType SasAuthenticationArgs

func SasAuthenticationPtr(v *SasAuthenticationArgs) SasAuthenticationPtrInput {
	return (*sasAuthenticationPtrType)(v)
}

func (*sasAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SasAuthentication)(nil)).Elem()
}

func (i *sasAuthenticationPtrType) ToSasAuthenticationPtrOutput() SasAuthenticationPtrOutput {
	return i.ToSasAuthenticationPtrOutputWithContext(context.Background())
}

func (i *sasAuthenticationPtrType) ToSasAuthenticationPtrOutputWithContext(ctx context.Context) SasAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationPtrOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationOutput struct{ *pulumi.OutputState }

func (SasAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthentication)(nil)).Elem()
}

func (o SasAuthenticationOutput) ToSasAuthenticationOutput() SasAuthenticationOutput {
	return o
}

func (o SasAuthenticationOutput) ToSasAuthenticationOutputWithContext(ctx context.Context) SasAuthenticationOutput {
	return o
}

func (o SasAuthenticationOutput) ToSasAuthenticationPtrOutput() SasAuthenticationPtrOutput {
	return o.ToSasAuthenticationPtrOutputWithContext(context.Background())
}

func (o SasAuthenticationOutput) ToSasAuthenticationPtrOutputWithContext(ctx context.Context) SasAuthenticationPtrOutput {
	return o.ApplyT(func(v SasAuthentication) *SasAuthentication {
		return &v
	}).(SasAuthenticationPtrOutput)
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthentication) string { return v.SasUri }).(pulumi.StringOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type SasAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (SasAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasAuthentication)(nil)).Elem()
}

func (o SasAuthenticationPtrOutput) ToSasAuthenticationPtrOutput() SasAuthenticationPtrOutput {
	return o
}

func (o SasAuthenticationPtrOutput) ToSasAuthenticationPtrOutputWithContext(ctx context.Context) SasAuthenticationPtrOutput {
	return o
}

func (o SasAuthenticationPtrOutput) Elem() SasAuthenticationOutput {
	return o.ApplyT(func(v *SasAuthentication) SasAuthentication { return *v }).(SasAuthenticationOutput)
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationPtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationInvokeResponse struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri string `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type string `pulumi:"type"`
}

// SasAuthenticationInvokeResponseInput is an input type that accepts SasAuthenticationInvokeResponseArgs and SasAuthenticationInvokeResponseOutput values.
// You can construct a concrete instance of `SasAuthenticationInvokeResponseInput` via:
//
//          SasAuthenticationInvokeResponseArgs{...}
type SasAuthenticationInvokeResponseInput interface {
	pulumi.Input

	ToSasAuthenticationInvokeResponseOutput() SasAuthenticationInvokeResponseOutput
	ToSasAuthenticationInvokeResponseOutputWithContext(context.Context) SasAuthenticationInvokeResponseOutput
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationInvokeResponseArgs struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SasAuthenticationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthenticationInvokeResponse)(nil)).Elem()
}

func (i SasAuthenticationInvokeResponseArgs) ToSasAuthenticationInvokeResponseOutput() SasAuthenticationInvokeResponseOutput {
	return i.ToSasAuthenticationInvokeResponseOutputWithContext(context.Background())
}

func (i SasAuthenticationInvokeResponseArgs) ToSasAuthenticationInvokeResponseOutputWithContext(ctx context.Context) SasAuthenticationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationInvokeResponseOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationInvokeResponseOutput struct{ *pulumi.OutputState }

func (SasAuthenticationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthenticationInvokeResponse)(nil)).Elem()
}

func (o SasAuthenticationInvokeResponseOutput) ToSasAuthenticationInvokeResponseOutput() SasAuthenticationInvokeResponseOutput {
	return o
}

func (o SasAuthenticationInvokeResponseOutput) ToSasAuthenticationInvokeResponseOutputWithContext(ctx context.Context) SasAuthenticationInvokeResponseOutput {
	return o
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationInvokeResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationInvokeResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationResponse struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri string `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type string `pulumi:"type"`
}

// SasAuthenticationResponseInput is an input type that accepts SasAuthenticationResponseArgs and SasAuthenticationResponseOutput values.
// You can construct a concrete instance of `SasAuthenticationResponseInput` via:
//
//          SasAuthenticationResponseArgs{...}
type SasAuthenticationResponseInput interface {
	pulumi.Input

	ToSasAuthenticationResponseOutput() SasAuthenticationResponseOutput
	ToSasAuthenticationResponseOutputWithContext(context.Context) SasAuthenticationResponseOutput
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationResponseArgs struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SasAuthenticationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthenticationResponse)(nil)).Elem()
}

func (i SasAuthenticationResponseArgs) ToSasAuthenticationResponseOutput() SasAuthenticationResponseOutput {
	return i.ToSasAuthenticationResponseOutputWithContext(context.Background())
}

func (i SasAuthenticationResponseArgs) ToSasAuthenticationResponseOutputWithContext(ctx context.Context) SasAuthenticationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationResponseOutput)
}

func (i SasAuthenticationResponseArgs) ToSasAuthenticationResponsePtrOutput() SasAuthenticationResponsePtrOutput {
	return i.ToSasAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i SasAuthenticationResponseArgs) ToSasAuthenticationResponsePtrOutputWithContext(ctx context.Context) SasAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationResponseOutput).ToSasAuthenticationResponsePtrOutputWithContext(ctx)
}

// SasAuthenticationResponsePtrInput is an input type that accepts SasAuthenticationResponseArgs, SasAuthenticationResponsePtr and SasAuthenticationResponsePtrOutput values.
// You can construct a concrete instance of `SasAuthenticationResponsePtrInput` via:
//
//          SasAuthenticationResponseArgs{...}
//
//  or:
//
//          nil
type SasAuthenticationResponsePtrInput interface {
	pulumi.Input

	ToSasAuthenticationResponsePtrOutput() SasAuthenticationResponsePtrOutput
	ToSasAuthenticationResponsePtrOutputWithContext(context.Context) SasAuthenticationResponsePtrOutput
}

type sasAuthenticationResponsePtrType SasAuthenticationResponseArgs

func SasAuthenticationResponsePtr(v *SasAuthenticationResponseArgs) SasAuthenticationResponsePtrInput {
	return (*sasAuthenticationResponsePtrType)(v)
}

func (*sasAuthenticationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SasAuthenticationResponse)(nil)).Elem()
}

func (i *sasAuthenticationResponsePtrType) ToSasAuthenticationResponsePtrOutput() SasAuthenticationResponsePtrOutput {
	return i.ToSasAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (i *sasAuthenticationResponsePtrType) ToSasAuthenticationResponsePtrOutputWithContext(ctx context.Context) SasAuthenticationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationResponsePtrOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (SasAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthenticationResponse)(nil)).Elem()
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponseOutput() SasAuthenticationResponseOutput {
	return o
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponseOutputWithContext(ctx context.Context) SasAuthenticationResponseOutput {
	return o
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponsePtrOutput() SasAuthenticationResponsePtrOutput {
	return o.ToSasAuthenticationResponsePtrOutputWithContext(context.Background())
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponsePtrOutputWithContext(ctx context.Context) SasAuthenticationResponsePtrOutput {
	return o.ApplyT(func(v SasAuthenticationResponse) *SasAuthenticationResponse {
		return &v
	}).(SasAuthenticationResponsePtrOutput)
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type SasAuthenticationResponsePtrOutput struct{ *pulumi.OutputState }

func (SasAuthenticationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SasAuthenticationResponse)(nil)).Elem()
}

func (o SasAuthenticationResponsePtrOutput) ToSasAuthenticationResponsePtrOutput() SasAuthenticationResponsePtrOutput {
	return o
}

func (o SasAuthenticationResponsePtrOutput) ToSasAuthenticationResponsePtrOutputWithContext(ctx context.Context) SasAuthenticationResponsePtrOutput {
	return o
}

func (o SasAuthenticationResponsePtrOutput) Elem() SasAuthenticationResponseOutput {
	return o.ApplyT(func(v *SasAuthenticationResponse) SasAuthenticationResponse { return *v }).(SasAuthenticationResponseOutput)
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationResponsePtrOutput) SasUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUri
	}).(pulumi.StringPtrOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SasAuthenticationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Defines a service.
type ServiceInvokeResponse struct {
	// Name of the service.
	Name *string `pulumi:"name"`
	// The detailed information about the units that make up the service.
	ServiceUnits []ServiceUnitInvokeResponse `pulumi:"serviceUnits"`
	// The Azure location to which the resources in the service belong to or should be deployed to.
	TargetLocation string `pulumi:"targetLocation"`
	// The subscription to which the resources in the service belong to or should be deployed to.
	TargetSubscriptionId string `pulumi:"targetSubscriptionId"`
}

// ServiceInvokeResponseInput is an input type that accepts ServiceInvokeResponseArgs and ServiceInvokeResponseOutput values.
// You can construct a concrete instance of `ServiceInvokeResponseInput` via:
//
//          ServiceInvokeResponseArgs{...}
type ServiceInvokeResponseInput interface {
	pulumi.Input

	ToServiceInvokeResponseOutput() ServiceInvokeResponseOutput
	ToServiceInvokeResponseOutputWithContext(context.Context) ServiceInvokeResponseOutput
}

// Defines a service.
type ServiceInvokeResponseArgs struct {
	// Name of the service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The detailed information about the units that make up the service.
	ServiceUnits ServiceUnitInvokeResponseArrayInput `pulumi:"serviceUnits"`
	// The Azure location to which the resources in the service belong to or should be deployed to.
	TargetLocation pulumi.StringInput `pulumi:"targetLocation"`
	// The subscription to which the resources in the service belong to or should be deployed to.
	TargetSubscriptionId pulumi.StringInput `pulumi:"targetSubscriptionId"`
}

func (ServiceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInvokeResponse)(nil)).Elem()
}

func (i ServiceInvokeResponseArgs) ToServiceInvokeResponseOutput() ServiceInvokeResponseOutput {
	return i.ToServiceInvokeResponseOutputWithContext(context.Background())
}

func (i ServiceInvokeResponseArgs) ToServiceInvokeResponseOutputWithContext(ctx context.Context) ServiceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInvokeResponseOutput)
}

// ServiceInvokeResponseArrayInput is an input type that accepts ServiceInvokeResponseArray and ServiceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ServiceInvokeResponseArrayInput` via:
//
//          ServiceInvokeResponseArray{ ServiceInvokeResponseArgs{...} }
type ServiceInvokeResponseArrayInput interface {
	pulumi.Input

	ToServiceInvokeResponseArrayOutput() ServiceInvokeResponseArrayOutput
	ToServiceInvokeResponseArrayOutputWithContext(context.Context) ServiceInvokeResponseArrayOutput
}

type ServiceInvokeResponseArray []ServiceInvokeResponseInput

func (ServiceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceInvokeResponse)(nil)).Elem()
}

func (i ServiceInvokeResponseArray) ToServiceInvokeResponseArrayOutput() ServiceInvokeResponseArrayOutput {
	return i.ToServiceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ServiceInvokeResponseArray) ToServiceInvokeResponseArrayOutputWithContext(ctx context.Context) ServiceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInvokeResponseArrayOutput)
}

// Defines a service.
type ServiceInvokeResponseOutput struct{ *pulumi.OutputState }

func (ServiceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInvokeResponse)(nil)).Elem()
}

func (o ServiceInvokeResponseOutput) ToServiceInvokeResponseOutput() ServiceInvokeResponseOutput {
	return o
}

func (o ServiceInvokeResponseOutput) ToServiceInvokeResponseOutputWithContext(ctx context.Context) ServiceInvokeResponseOutput {
	return o
}

// Name of the service.
func (o ServiceInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The detailed information about the units that make up the service.
func (o ServiceInvokeResponseOutput) ServiceUnits() ServiceUnitInvokeResponseArrayOutput {
	return o.ApplyT(func(v ServiceInvokeResponse) []ServiceUnitInvokeResponse { return v.ServiceUnits }).(ServiceUnitInvokeResponseArrayOutput)
}

// The Azure location to which the resources in the service belong to or should be deployed to.
func (o ServiceInvokeResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceInvokeResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The subscription to which the resources in the service belong to or should be deployed to.
func (o ServiceInvokeResponseOutput) TargetSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceInvokeResponse) string { return v.TargetSubscriptionId }).(pulumi.StringOutput)
}

type ServiceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceInvokeResponse)(nil)).Elem()
}

func (o ServiceInvokeResponseArrayOutput) ToServiceInvokeResponseArrayOutput() ServiceInvokeResponseArrayOutput {
	return o
}

func (o ServiceInvokeResponseArrayOutput) ToServiceInvokeResponseArrayOutputWithContext(ctx context.Context) ServiceInvokeResponseArrayOutput {
	return o
}

func (o ServiceInvokeResponseArrayOutput) Index(i pulumi.IntInput) ServiceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceInvokeResponse {
		return vs[0].([]ServiceInvokeResponse)[vs[1].(int)]
	}).(ServiceInvokeResponseOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifacts struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsInput is an input type that accepts ServiceUnitArtifactsArgs and ServiceUnitArtifactsOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsInput` via:
//
//          ServiceUnitArtifactsArgs{...}
type ServiceUnitArtifactsInput interface {
	pulumi.Input

	ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput
	ToServiceUnitArtifactsOutputWithContext(context.Context) ServiceUnitArtifactsOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return i.ToServiceUnitArtifactsOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput)
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput).ToServiceUnitArtifactsPtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsPtrInput is an input type that accepts ServiceUnitArtifactsArgs, ServiceUnitArtifactsPtr and ServiceUnitArtifactsPtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsPtrInput` via:
//
//          ServiceUnitArtifactsArgs{...}
//
//  or:
//
//          nil
type ServiceUnitArtifactsPtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput
	ToServiceUnitArtifactsPtrOutputWithContext(context.Context) ServiceUnitArtifactsPtrOutput
}

type serviceUnitArtifactsPtrType ServiceUnitArtifactsArgs

func ServiceUnitArtifactsPtr(v *ServiceUnitArtifactsArgs) ServiceUnitArtifactsPtrInput {
	return (*serviceUnitArtifactsPtrType)(v)
}

func (*serviceUnitArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *ServiceUnitArtifacts {
		return &v
	}).(ServiceUnitArtifactsPtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsPtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) Elem() ServiceUnitArtifactsOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) ServiceUnitArtifacts { return *v }).(ServiceUnitArtifactsOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsInvokeResponse struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsInvokeResponseInput is an input type that accepts ServiceUnitArtifactsInvokeResponseArgs and ServiceUnitArtifactsInvokeResponseOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsInvokeResponseInput` via:
//
//          ServiceUnitArtifactsInvokeResponseArgs{...}
type ServiceUnitArtifactsInvokeResponseInput interface {
	pulumi.Input

	ToServiceUnitArtifactsInvokeResponseOutput() ServiceUnitArtifactsInvokeResponseOutput
	ToServiceUnitArtifactsInvokeResponseOutputWithContext(context.Context) ServiceUnitArtifactsInvokeResponseOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsInvokeResponseArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsInvokeResponse)(nil)).Elem()
}

func (i ServiceUnitArtifactsInvokeResponseArgs) ToServiceUnitArtifactsInvokeResponseOutput() ServiceUnitArtifactsInvokeResponseOutput {
	return i.ToServiceUnitArtifactsInvokeResponseOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsInvokeResponseArgs) ToServiceUnitArtifactsInvokeResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsInvokeResponseOutput)
}

func (i ServiceUnitArtifactsInvokeResponseArgs) ToServiceUnitArtifactsInvokeResponsePtrOutput() ServiceUnitArtifactsInvokeResponsePtrOutput {
	return i.ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsInvokeResponseArgs) ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsInvokeResponseOutput).ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsInvokeResponsePtrInput is an input type that accepts ServiceUnitArtifactsInvokeResponseArgs, ServiceUnitArtifactsInvokeResponsePtr and ServiceUnitArtifactsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsInvokeResponsePtrInput` via:
//
//          ServiceUnitArtifactsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ServiceUnitArtifactsInvokeResponsePtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsInvokeResponsePtrOutput() ServiceUnitArtifactsInvokeResponsePtrOutput
	ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(context.Context) ServiceUnitArtifactsInvokeResponsePtrOutput
}

type serviceUnitArtifactsInvokeResponsePtrType ServiceUnitArtifactsInvokeResponseArgs

func ServiceUnitArtifactsInvokeResponsePtr(v *ServiceUnitArtifactsInvokeResponseArgs) ServiceUnitArtifactsInvokeResponsePtrInput {
	return (*serviceUnitArtifactsInvokeResponsePtrType)(v)
}

func (*serviceUnitArtifactsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsInvokeResponse)(nil)).Elem()
}

func (i *serviceUnitArtifactsInvokeResponsePtrType) ToServiceUnitArtifactsInvokeResponsePtrOutput() ServiceUnitArtifactsInvokeResponsePtrOutput {
	return i.ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsInvokeResponsePtrType) ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsInvokeResponsePtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsInvokeResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsInvokeResponseOutput) ToServiceUnitArtifactsInvokeResponseOutput() ServiceUnitArtifactsInvokeResponseOutput {
	return o
}

func (o ServiceUnitArtifactsInvokeResponseOutput) ToServiceUnitArtifactsInvokeResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponseOutput {
	return o
}

func (o ServiceUnitArtifactsInvokeResponseOutput) ToServiceUnitArtifactsInvokeResponsePtrOutput() ServiceUnitArtifactsInvokeResponsePtrOutput {
	return o.ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsInvokeResponseOutput) ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsInvokeResponse) *ServiceUnitArtifactsInvokeResponse {
		return &v
	}).(ServiceUnitArtifactsInvokeResponsePtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsInvokeResponseOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsInvokeResponse) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsInvokeResponseOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsInvokeResponse) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsInvokeResponseOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsInvokeResponse) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsInvokeResponseOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsInvokeResponse) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsInvokeResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsInvokeResponsePtrOutput) ToServiceUnitArtifactsInvokeResponsePtrOutput() ServiceUnitArtifactsInvokeResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsInvokeResponsePtrOutput) ToServiceUnitArtifactsInvokeResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsInvokeResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsInvokeResponsePtrOutput) Elem() ServiceUnitArtifactsInvokeResponseOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsInvokeResponse) ServiceUnitArtifactsInvokeResponse { return *v }).(ServiceUnitArtifactsInvokeResponseOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsInvokeResponsePtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsInvokeResponsePtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsInvokeResponsePtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsInvokeResponsePtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponse struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsResponseInput is an input type that accepts ServiceUnitArtifactsResponseArgs and ServiceUnitArtifactsResponseOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsResponseInput` via:
//
//          ServiceUnitArtifactsResponseArgs{...}
type ServiceUnitArtifactsResponseInput interface {
	pulumi.Input

	ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput
	ToServiceUnitArtifactsResponseOutputWithContext(context.Context) ServiceUnitArtifactsResponseOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponseArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput {
	return i.ToServiceUnitArtifactsResponseOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponseOutput)
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return i.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsResponseArgs) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponseOutput).ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsResponsePtrInput is an input type that accepts ServiceUnitArtifactsResponseArgs, ServiceUnitArtifactsResponsePtr and ServiceUnitArtifactsResponsePtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsResponsePtrInput` via:
//
//          ServiceUnitArtifactsResponseArgs{...}
//
//  or:
//
//          nil
type ServiceUnitArtifactsResponsePtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput
	ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Context) ServiceUnitArtifactsResponsePtrOutput
}

type serviceUnitArtifactsResponsePtrType ServiceUnitArtifactsResponseArgs

func ServiceUnitArtifactsResponsePtr(v *ServiceUnitArtifactsResponseArgs) ServiceUnitArtifactsResponsePtrInput {
	return (*serviceUnitArtifactsResponsePtrType)(v)
}

func (*serviceUnitArtifactsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (i *serviceUnitArtifactsResponsePtrType) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return i.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsResponsePtrType) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsResponsePtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput {
	return o
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponseOutput {
	return o
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return o.ToServiceUnitArtifactsResponsePtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *ServiceUnitArtifactsResponse {
		return &v
	}).(ServiceUnitArtifactsResponsePtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) Elem() ServiceUnitArtifactsResponseOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) ServiceUnitArtifactsResponse { return *v }).(ServiceUnitArtifactsResponseOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines a service unit.
type ServiceUnitInvokeResponse struct {
	// The artifacts for the service unit.
	Artifacts *ServiceUnitArtifactsInvokeResponse `pulumi:"artifacts"`
	// Describes the type of ARM deployment to be performed on the resource.
	DeploymentMode string `pulumi:"deploymentMode"`
	// Name of the service unit.
	Name *string `pulumi:"name"`
	// Detailed step information, if present.
	Steps []RolloutStepInvokeResponse `pulumi:"steps"`
	// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
	TargetResourceGroup string `pulumi:"targetResourceGroup"`
}

// ServiceUnitInvokeResponseInput is an input type that accepts ServiceUnitInvokeResponseArgs and ServiceUnitInvokeResponseOutput values.
// You can construct a concrete instance of `ServiceUnitInvokeResponseInput` via:
//
//          ServiceUnitInvokeResponseArgs{...}
type ServiceUnitInvokeResponseInput interface {
	pulumi.Input

	ToServiceUnitInvokeResponseOutput() ServiceUnitInvokeResponseOutput
	ToServiceUnitInvokeResponseOutputWithContext(context.Context) ServiceUnitInvokeResponseOutput
}

// Defines a service unit.
type ServiceUnitInvokeResponseArgs struct {
	// The artifacts for the service unit.
	Artifacts ServiceUnitArtifactsInvokeResponsePtrInput `pulumi:"artifacts"`
	// Describes the type of ARM deployment to be performed on the resource.
	DeploymentMode pulumi.StringInput `pulumi:"deploymentMode"`
	// Name of the service unit.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Detailed step information, if present.
	Steps RolloutStepInvokeResponseArrayInput `pulumi:"steps"`
	// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
	TargetResourceGroup pulumi.StringInput `pulumi:"targetResourceGroup"`
}

func (ServiceUnitInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitInvokeResponse)(nil)).Elem()
}

func (i ServiceUnitInvokeResponseArgs) ToServiceUnitInvokeResponseOutput() ServiceUnitInvokeResponseOutput {
	return i.ToServiceUnitInvokeResponseOutputWithContext(context.Background())
}

func (i ServiceUnitInvokeResponseArgs) ToServiceUnitInvokeResponseOutputWithContext(ctx context.Context) ServiceUnitInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitInvokeResponseOutput)
}

// ServiceUnitInvokeResponseArrayInput is an input type that accepts ServiceUnitInvokeResponseArray and ServiceUnitInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ServiceUnitInvokeResponseArrayInput` via:
//
//          ServiceUnitInvokeResponseArray{ ServiceUnitInvokeResponseArgs{...} }
type ServiceUnitInvokeResponseArrayInput interface {
	pulumi.Input

	ToServiceUnitInvokeResponseArrayOutput() ServiceUnitInvokeResponseArrayOutput
	ToServiceUnitInvokeResponseArrayOutputWithContext(context.Context) ServiceUnitInvokeResponseArrayOutput
}

type ServiceUnitInvokeResponseArray []ServiceUnitInvokeResponseInput

func (ServiceUnitInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUnitInvokeResponse)(nil)).Elem()
}

func (i ServiceUnitInvokeResponseArray) ToServiceUnitInvokeResponseArrayOutput() ServiceUnitInvokeResponseArrayOutput {
	return i.ToServiceUnitInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ServiceUnitInvokeResponseArray) ToServiceUnitInvokeResponseArrayOutputWithContext(ctx context.Context) ServiceUnitInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitInvokeResponseArrayOutput)
}

// Defines a service unit.
type ServiceUnitInvokeResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitInvokeResponse)(nil)).Elem()
}

func (o ServiceUnitInvokeResponseOutput) ToServiceUnitInvokeResponseOutput() ServiceUnitInvokeResponseOutput {
	return o
}

func (o ServiceUnitInvokeResponseOutput) ToServiceUnitInvokeResponseOutputWithContext(ctx context.Context) ServiceUnitInvokeResponseOutput {
	return o
}

// The artifacts for the service unit.
func (o ServiceUnitInvokeResponseOutput) Artifacts() ServiceUnitArtifactsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitInvokeResponse) *ServiceUnitArtifactsInvokeResponse { return v.Artifacts }).(ServiceUnitArtifactsInvokeResponsePtrOutput)
}

// Describes the type of ARM deployment to be performed on the resource.
func (o ServiceUnitInvokeResponseOutput) DeploymentMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitInvokeResponse) string { return v.DeploymentMode }).(pulumi.StringOutput)
}

// Name of the service unit.
func (o ServiceUnitInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Detailed step information, if present.
func (o ServiceUnitInvokeResponseOutput) Steps() RolloutStepInvokeResponseArrayOutput {
	return o.ApplyT(func(v ServiceUnitInvokeResponse) []RolloutStepInvokeResponse { return v.Steps }).(RolloutStepInvokeResponseArrayOutput)
}

// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
func (o ServiceUnitInvokeResponseOutput) TargetResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitInvokeResponse) string { return v.TargetResourceGroup }).(pulumi.StringOutput)
}

type ServiceUnitInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceUnitInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUnitInvokeResponse)(nil)).Elem()
}

func (o ServiceUnitInvokeResponseArrayOutput) ToServiceUnitInvokeResponseArrayOutput() ServiceUnitInvokeResponseArrayOutput {
	return o
}

func (o ServiceUnitInvokeResponseArrayOutput) ToServiceUnitInvokeResponseArrayOutputWithContext(ctx context.Context) ServiceUnitInvokeResponseArrayOutput {
	return o
}

func (o ServiceUnitInvokeResponseArrayOutput) Index(i pulumi.IntInput) ServiceUnitInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceUnitInvokeResponse {
		return vs[0].([]ServiceUnitInvokeResponse)[vs[1].(int)]
	}).(ServiceUnitInvokeResponseOutput)
}

// The properties that define a Step group in a rollout.
type StepGroup struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStep `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStep `pulumi:"preDeploymentSteps"`
}

// StepGroupInput is an input type that accepts StepGroupArgs and StepGroupOutput values.
// You can construct a concrete instance of `StepGroupInput` via:
//
//          StepGroupArgs{...}
type StepGroupInput interface {
	pulumi.Input

	ToStepGroupOutput() StepGroupOutput
	ToStepGroupOutputWithContext(context.Context) StepGroupOutput
}

// The properties that define a Step group in a rollout.
type StepGroupArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroup)(nil)).Elem()
}

func (i StepGroupArgs) ToStepGroupOutput() StepGroupOutput {
	return i.ToStepGroupOutputWithContext(context.Background())
}

func (i StepGroupArgs) ToStepGroupOutputWithContext(ctx context.Context) StepGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupOutput)
}

// StepGroupArrayInput is an input type that accepts StepGroupArray and StepGroupArrayOutput values.
// You can construct a concrete instance of `StepGroupArrayInput` via:
//
//          StepGroupArray{ StepGroupArgs{...} }
type StepGroupArrayInput interface {
	pulumi.Input

	ToStepGroupArrayOutput() StepGroupArrayOutput
	ToStepGroupArrayOutputWithContext(context.Context) StepGroupArrayOutput
}

type StepGroupArray []StepGroupInput

func (StepGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroup)(nil)).Elem()
}

func (i StepGroupArray) ToStepGroupArrayOutput() StepGroupArrayOutput {
	return i.ToStepGroupArrayOutputWithContext(context.Background())
}

func (i StepGroupArray) ToStepGroupArrayOutputWithContext(ctx context.Context) StepGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupArrayOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupOutput struct{ *pulumi.OutputState }

func (StepGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroup)(nil)).Elem()
}

func (o StepGroupOutput) ToStepGroupOutput() StepGroupOutput {
	return o
}

func (o StepGroupOutput) ToStepGroupOutputWithContext(ctx context.Context) StepGroupOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepGroupOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepGroup) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepGroupOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroup) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepGroupOutput) PostDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepGroup) []PrePostStep { return v.PostDeploymentSteps }).(PrePostStepArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepGroupOutput) PreDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepGroup) []PrePostStep { return v.PreDeploymentSteps }).(PrePostStepArrayOutput)
}

type StepGroupArrayOutput struct{ *pulumi.OutputState }

func (StepGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroup)(nil)).Elem()
}

func (o StepGroupArrayOutput) ToStepGroupArrayOutput() StepGroupArrayOutput {
	return o
}

func (o StepGroupArrayOutput) ToStepGroupArrayOutputWithContext(ctx context.Context) StepGroupArrayOutput {
	return o
}

func (o StepGroupArrayOutput) Index(i pulumi.IntInput) StepGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepGroup {
		return vs[0].([]StepGroup)[vs[1].(int)]
	}).(StepGroupOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupInvokeResponse struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStepInvokeResponse `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStepInvokeResponse `pulumi:"preDeploymentSteps"`
}

// StepGroupInvokeResponseInput is an input type that accepts StepGroupInvokeResponseArgs and StepGroupInvokeResponseOutput values.
// You can construct a concrete instance of `StepGroupInvokeResponseInput` via:
//
//          StepGroupInvokeResponseArgs{...}
type StepGroupInvokeResponseInput interface {
	pulumi.Input

	ToStepGroupInvokeResponseOutput() StepGroupInvokeResponseOutput
	ToStepGroupInvokeResponseOutputWithContext(context.Context) StepGroupInvokeResponseOutput
}

// The properties that define a Step group in a rollout.
type StepGroupInvokeResponseArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepInvokeResponseArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepInvokeResponseArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepGroupInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupInvokeResponse)(nil)).Elem()
}

func (i StepGroupInvokeResponseArgs) ToStepGroupInvokeResponseOutput() StepGroupInvokeResponseOutput {
	return i.ToStepGroupInvokeResponseOutputWithContext(context.Background())
}

func (i StepGroupInvokeResponseArgs) ToStepGroupInvokeResponseOutputWithContext(ctx context.Context) StepGroupInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupInvokeResponseOutput)
}

// StepGroupInvokeResponseArrayInput is an input type that accepts StepGroupInvokeResponseArray and StepGroupInvokeResponseArrayOutput values.
// You can construct a concrete instance of `StepGroupInvokeResponseArrayInput` via:
//
//          StepGroupInvokeResponseArray{ StepGroupInvokeResponseArgs{...} }
type StepGroupInvokeResponseArrayInput interface {
	pulumi.Input

	ToStepGroupInvokeResponseArrayOutput() StepGroupInvokeResponseArrayOutput
	ToStepGroupInvokeResponseArrayOutputWithContext(context.Context) StepGroupInvokeResponseArrayOutput
}

type StepGroupInvokeResponseArray []StepGroupInvokeResponseInput

func (StepGroupInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupInvokeResponse)(nil)).Elem()
}

func (i StepGroupInvokeResponseArray) ToStepGroupInvokeResponseArrayOutput() StepGroupInvokeResponseArrayOutput {
	return i.ToStepGroupInvokeResponseArrayOutputWithContext(context.Background())
}

func (i StepGroupInvokeResponseArray) ToStepGroupInvokeResponseArrayOutputWithContext(ctx context.Context) StepGroupInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupInvokeResponseArrayOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupInvokeResponseOutput struct{ *pulumi.OutputState }

func (StepGroupInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupInvokeResponse)(nil)).Elem()
}

func (o StepGroupInvokeResponseOutput) ToStepGroupInvokeResponseOutput() StepGroupInvokeResponseOutput {
	return o
}

func (o StepGroupInvokeResponseOutput) ToStepGroupInvokeResponseOutputWithContext(ctx context.Context) StepGroupInvokeResponseOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepGroupInvokeResponseOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepGroupInvokeResponse) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepGroupInvokeResponseOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupInvokeResponse) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepGroupInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepGroupInvokeResponseOutput) PostDeploymentSteps() PrePostStepInvokeResponseArrayOutput {
	return o.ApplyT(func(v StepGroupInvokeResponse) []PrePostStepInvokeResponse { return v.PostDeploymentSteps }).(PrePostStepInvokeResponseArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepGroupInvokeResponseOutput) PreDeploymentSteps() PrePostStepInvokeResponseArrayOutput {
	return o.ApplyT(func(v StepGroupInvokeResponse) []PrePostStepInvokeResponse { return v.PreDeploymentSteps }).(PrePostStepInvokeResponseArrayOutput)
}

type StepGroupInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (StepGroupInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupInvokeResponse)(nil)).Elem()
}

func (o StepGroupInvokeResponseArrayOutput) ToStepGroupInvokeResponseArrayOutput() StepGroupInvokeResponseArrayOutput {
	return o
}

func (o StepGroupInvokeResponseArrayOutput) ToStepGroupInvokeResponseArrayOutputWithContext(ctx context.Context) StepGroupInvokeResponseArrayOutput {
	return o
}

func (o StepGroupInvokeResponseArrayOutput) Index(i pulumi.IntInput) StepGroupInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepGroupInvokeResponse {
		return vs[0].([]StepGroupInvokeResponse)[vs[1].(int)]
	}).(StepGroupInvokeResponseOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupResponse struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStepResponse `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStepResponse `pulumi:"preDeploymentSteps"`
}

// StepGroupResponseInput is an input type that accepts StepGroupResponseArgs and StepGroupResponseOutput values.
// You can construct a concrete instance of `StepGroupResponseInput` via:
//
//          StepGroupResponseArgs{...}
type StepGroupResponseInput interface {
	pulumi.Input

	ToStepGroupResponseOutput() StepGroupResponseOutput
	ToStepGroupResponseOutputWithContext(context.Context) StepGroupResponseOutput
}

// The properties that define a Step group in a rollout.
type StepGroupResponseArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepResponseArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepResponseArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupResponse)(nil)).Elem()
}

func (i StepGroupResponseArgs) ToStepGroupResponseOutput() StepGroupResponseOutput {
	return i.ToStepGroupResponseOutputWithContext(context.Background())
}

func (i StepGroupResponseArgs) ToStepGroupResponseOutputWithContext(ctx context.Context) StepGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupResponseOutput)
}

// StepGroupResponseArrayInput is an input type that accepts StepGroupResponseArray and StepGroupResponseArrayOutput values.
// You can construct a concrete instance of `StepGroupResponseArrayInput` via:
//
//          StepGroupResponseArray{ StepGroupResponseArgs{...} }
type StepGroupResponseArrayInput interface {
	pulumi.Input

	ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput
	ToStepGroupResponseArrayOutputWithContext(context.Context) StepGroupResponseArrayOutput
}

type StepGroupResponseArray []StepGroupResponseInput

func (StepGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupResponse)(nil)).Elem()
}

func (i StepGroupResponseArray) ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput {
	return i.ToStepGroupResponseArrayOutputWithContext(context.Background())
}

func (i StepGroupResponseArray) ToStepGroupResponseArrayOutputWithContext(ctx context.Context) StepGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepGroupResponseArrayOutput)
}

// The properties that define a Step group in a rollout.
type StepGroupResponseOutput struct{ *pulumi.OutputState }

func (StepGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepGroupResponse)(nil)).Elem()
}

func (o StepGroupResponseOutput) ToStepGroupResponseOutput() StepGroupResponseOutput {
	return o
}

func (o StepGroupResponseOutput) ToStepGroupResponseOutputWithContext(ctx context.Context) StepGroupResponseOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepGroupResponseOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepGroupResponseOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupResponse) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepGroupResponseOutput) PostDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []PrePostStepResponse { return v.PostDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepGroupResponseOutput) PreDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepGroupResponse) []PrePostStepResponse { return v.PreDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

type StepGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (StepGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepGroupResponse)(nil)).Elem()
}

func (o StepGroupResponseArrayOutput) ToStepGroupResponseArrayOutput() StepGroupResponseArrayOutput {
	return o
}

func (o StepGroupResponseArrayOutput) ToStepGroupResponseArrayOutputWithContext(ctx context.Context) StepGroupResponseArrayOutput {
	return o
}

func (o StepGroupResponseArrayOutput) Index(i pulumi.IntInput) StepGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepGroupResponse {
		return vs[0].([]StepGroupResponse)[vs[1].(int)]
	}).(StepGroupResponseOutput)
}

// Detailed information of a specific step run.
type StepOperationInfoInvokeResponse struct {
	// Unique identifier to track the request for ARM-based resources.
	CorrelationId string `pulumi:"correlationId"`
	// The name of the ARM deployment initiated as part of the step.
	DeploymentName string `pulumi:"deploymentName"`
	// End time of the action in UTC.
	EndTime string `pulumi:"endTime"`
	// The errors, if any, for the action.
	Error *CloudErrorBodyInvokeResponse `pulumi:"error"`
	// Last time in UTC this operation was updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Start time of the action in UTC.
	StartTime string `pulumi:"startTime"`
}

// StepOperationInfoInvokeResponseInput is an input type that accepts StepOperationInfoInvokeResponseArgs and StepOperationInfoInvokeResponseOutput values.
// You can construct a concrete instance of `StepOperationInfoInvokeResponseInput` via:
//
//          StepOperationInfoInvokeResponseArgs{...}
type StepOperationInfoInvokeResponseInput interface {
	pulumi.Input

	ToStepOperationInfoInvokeResponseOutput() StepOperationInfoInvokeResponseOutput
	ToStepOperationInfoInvokeResponseOutputWithContext(context.Context) StepOperationInfoInvokeResponseOutput
}

// Detailed information of a specific step run.
type StepOperationInfoInvokeResponseArgs struct {
	// Unique identifier to track the request for ARM-based resources.
	CorrelationId pulumi.StringInput `pulumi:"correlationId"`
	// The name of the ARM deployment initiated as part of the step.
	DeploymentName pulumi.StringInput `pulumi:"deploymentName"`
	// End time of the action in UTC.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// The errors, if any, for the action.
	Error CloudErrorBodyInvokeResponsePtrInput `pulumi:"error"`
	// Last time in UTC this operation was updated.
	LastUpdatedTime pulumi.StringInput `pulumi:"lastUpdatedTime"`
	// Start time of the action in UTC.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (StepOperationInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepOperationInfoInvokeResponse)(nil)).Elem()
}

func (i StepOperationInfoInvokeResponseArgs) ToStepOperationInfoInvokeResponseOutput() StepOperationInfoInvokeResponseOutput {
	return i.ToStepOperationInfoInvokeResponseOutputWithContext(context.Background())
}

func (i StepOperationInfoInvokeResponseArgs) ToStepOperationInfoInvokeResponseOutputWithContext(ctx context.Context) StepOperationInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepOperationInfoInvokeResponseOutput)
}

// Detailed information of a specific step run.
type StepOperationInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (StepOperationInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepOperationInfoInvokeResponse)(nil)).Elem()
}

func (o StepOperationInfoInvokeResponseOutput) ToStepOperationInfoInvokeResponseOutput() StepOperationInfoInvokeResponseOutput {
	return o
}

func (o StepOperationInfoInvokeResponseOutput) ToStepOperationInfoInvokeResponseOutputWithContext(ctx context.Context) StepOperationInfoInvokeResponseOutput {
	return o
}

// Unique identifier to track the request for ARM-based resources.
func (o StepOperationInfoInvokeResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// The name of the ARM deployment initiated as part of the step.
func (o StepOperationInfoInvokeResponseOutput) DeploymentName() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) string { return v.DeploymentName }).(pulumi.StringOutput)
}

// End time of the action in UTC.
func (o StepOperationInfoInvokeResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The errors, if any, for the action.
func (o StepOperationInfoInvokeResponseOutput) Error() CloudErrorBodyInvokeResponsePtrOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) *CloudErrorBodyInvokeResponse { return v.Error }).(CloudErrorBodyInvokeResponsePtrOutput)
}

// Last time in UTC this operation was updated.
func (o StepOperationInfoInvokeResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Start time of the action in UTC.
func (o StepOperationInfoInvokeResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoInvokeResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The parameters for the wait step.
type WaitStepAttributes struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration string `pulumi:"duration"`
}

// WaitStepAttributesInput is an input type that accepts WaitStepAttributesArgs and WaitStepAttributesOutput values.
// You can construct a concrete instance of `WaitStepAttributesInput` via:
//
//          WaitStepAttributesArgs{...}
type WaitStepAttributesInput interface {
	pulumi.Input

	ToWaitStepAttributesOutput() WaitStepAttributesOutput
	ToWaitStepAttributesOutputWithContext(context.Context) WaitStepAttributesOutput
}

// The parameters for the wait step.
type WaitStepAttributesArgs struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration pulumi.StringInput `pulumi:"duration"`
}

func (WaitStepAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributes)(nil)).Elem()
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesOutput() WaitStepAttributesOutput {
	return i.ToWaitStepAttributesOutputWithContext(context.Background())
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesOutputWithContext(ctx context.Context) WaitStepAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesOutput)
}

// The parameters for the wait step.
type WaitStepAttributesOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributes)(nil)).Elem()
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesOutput() WaitStepAttributesOutput {
	return o
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesOutputWithContext(ctx context.Context) WaitStepAttributesOutput {
	return o
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepAttributes) string { return v.Duration }).(pulumi.StringOutput)
}

// The parameters for the wait step.
type WaitStepAttributesInvokeResponse struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration string `pulumi:"duration"`
}

// WaitStepAttributesInvokeResponseInput is an input type that accepts WaitStepAttributesInvokeResponseArgs and WaitStepAttributesInvokeResponseOutput values.
// You can construct a concrete instance of `WaitStepAttributesInvokeResponseInput` via:
//
//          WaitStepAttributesInvokeResponseArgs{...}
type WaitStepAttributesInvokeResponseInput interface {
	pulumi.Input

	ToWaitStepAttributesInvokeResponseOutput() WaitStepAttributesInvokeResponseOutput
	ToWaitStepAttributesInvokeResponseOutputWithContext(context.Context) WaitStepAttributesInvokeResponseOutput
}

// The parameters for the wait step.
type WaitStepAttributesInvokeResponseArgs struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration pulumi.StringInput `pulumi:"duration"`
}

func (WaitStepAttributesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributesInvokeResponse)(nil)).Elem()
}

func (i WaitStepAttributesInvokeResponseArgs) ToWaitStepAttributesInvokeResponseOutput() WaitStepAttributesInvokeResponseOutput {
	return i.ToWaitStepAttributesInvokeResponseOutputWithContext(context.Background())
}

func (i WaitStepAttributesInvokeResponseArgs) ToWaitStepAttributesInvokeResponseOutputWithContext(ctx context.Context) WaitStepAttributesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesInvokeResponseOutput)
}

// The parameters for the wait step.
type WaitStepAttributesInvokeResponseOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributesInvokeResponse)(nil)).Elem()
}

func (o WaitStepAttributesInvokeResponseOutput) ToWaitStepAttributesInvokeResponseOutput() WaitStepAttributesInvokeResponseOutput {
	return o
}

func (o WaitStepAttributesInvokeResponseOutput) ToWaitStepAttributesInvokeResponseOutputWithContext(ctx context.Context) WaitStepAttributesInvokeResponseOutput {
	return o
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesInvokeResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepAttributesInvokeResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// The parameters for the wait step.
type WaitStepAttributesResponse struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration string `pulumi:"duration"`
}

// WaitStepAttributesResponseInput is an input type that accepts WaitStepAttributesResponseArgs and WaitStepAttributesResponseOutput values.
// You can construct a concrete instance of `WaitStepAttributesResponseInput` via:
//
//          WaitStepAttributesResponseArgs{...}
type WaitStepAttributesResponseInput interface {
	pulumi.Input

	ToWaitStepAttributesResponseOutput() WaitStepAttributesResponseOutput
	ToWaitStepAttributesResponseOutputWithContext(context.Context) WaitStepAttributesResponseOutput
}

// The parameters for the wait step.
type WaitStepAttributesResponseArgs struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration pulumi.StringInput `pulumi:"duration"`
}

func (WaitStepAttributesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributesResponse)(nil)).Elem()
}

func (i WaitStepAttributesResponseArgs) ToWaitStepAttributesResponseOutput() WaitStepAttributesResponseOutput {
	return i.ToWaitStepAttributesResponseOutputWithContext(context.Background())
}

func (i WaitStepAttributesResponseArgs) ToWaitStepAttributesResponseOutputWithContext(ctx context.Context) WaitStepAttributesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesResponseOutput)
}

// The parameters for the wait step.
type WaitStepAttributesResponseOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributesResponse)(nil)).Elem()
}

func (o WaitStepAttributesResponseOutput) ToWaitStepAttributesResponseOutput() WaitStepAttributesResponseOutput {
	return o
}

func (o WaitStepAttributesResponseOutput) ToWaitStepAttributesResponseOutputWithContext(ctx context.Context) WaitStepAttributesResponseOutput {
	return o
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepAttributesResponse) string { return v.Duration }).(pulumi.StringOutput)
}

// Defines the properties of a Wait step.
type WaitStepProperties struct {
	// The Wait attributes
	Attributes WaitStepAttributes `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType string `pulumi:"stepType"`
}

// WaitStepPropertiesInput is an input type that accepts WaitStepPropertiesArgs and WaitStepPropertiesOutput values.
// You can construct a concrete instance of `WaitStepPropertiesInput` via:
//
//          WaitStepPropertiesArgs{...}
type WaitStepPropertiesInput interface {
	pulumi.Input

	ToWaitStepPropertiesOutput() WaitStepPropertiesOutput
	ToWaitStepPropertiesOutputWithContext(context.Context) WaitStepPropertiesOutput
}

// Defines the properties of a Wait step.
type WaitStepPropertiesArgs struct {
	// The Wait attributes
	Attributes WaitStepAttributesInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (WaitStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepProperties)(nil)).Elem()
}

func (i WaitStepPropertiesArgs) ToWaitStepPropertiesOutput() WaitStepPropertiesOutput {
	return i.ToWaitStepPropertiesOutputWithContext(context.Background())
}

func (i WaitStepPropertiesArgs) ToWaitStepPropertiesOutputWithContext(ctx context.Context) WaitStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepPropertiesOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesOutput struct{ *pulumi.OutputState }

func (WaitStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepProperties)(nil)).Elem()
}

func (o WaitStepPropertiesOutput) ToWaitStepPropertiesOutput() WaitStepPropertiesOutput {
	return o
}

func (o WaitStepPropertiesOutput) ToWaitStepPropertiesOutputWithContext(ctx context.Context) WaitStepPropertiesOutput {
	return o
}

// The Wait attributes
func (o WaitStepPropertiesOutput) Attributes() WaitStepAttributesOutput {
	return o.ApplyT(func(v WaitStepProperties) WaitStepAttributes { return v.Attributes }).(WaitStepAttributesOutput)
}

// The type of step.
// Expected value is 'Wait'.
func (o WaitStepPropertiesOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepProperties) string { return v.StepType }).(pulumi.StringOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesInvokeResponse struct {
	// The Wait attributes
	Attributes WaitStepAttributesInvokeResponse `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType string `pulumi:"stepType"`
}

// WaitStepPropertiesInvokeResponseInput is an input type that accepts WaitStepPropertiesInvokeResponseArgs and WaitStepPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `WaitStepPropertiesInvokeResponseInput` via:
//
//          WaitStepPropertiesInvokeResponseArgs{...}
type WaitStepPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToWaitStepPropertiesInvokeResponseOutput() WaitStepPropertiesInvokeResponseOutput
	ToWaitStepPropertiesInvokeResponseOutputWithContext(context.Context) WaitStepPropertiesInvokeResponseOutput
}

// Defines the properties of a Wait step.
type WaitStepPropertiesInvokeResponseArgs struct {
	// The Wait attributes
	Attributes WaitStepAttributesInvokeResponseInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (WaitStepPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepPropertiesInvokeResponse)(nil)).Elem()
}

func (i WaitStepPropertiesInvokeResponseArgs) ToWaitStepPropertiesInvokeResponseOutput() WaitStepPropertiesInvokeResponseOutput {
	return i.ToWaitStepPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i WaitStepPropertiesInvokeResponseArgs) ToWaitStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) WaitStepPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepPropertiesInvokeResponseOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (WaitStepPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepPropertiesInvokeResponse)(nil)).Elem()
}

func (o WaitStepPropertiesInvokeResponseOutput) ToWaitStepPropertiesInvokeResponseOutput() WaitStepPropertiesInvokeResponseOutput {
	return o
}

func (o WaitStepPropertiesInvokeResponseOutput) ToWaitStepPropertiesInvokeResponseOutputWithContext(ctx context.Context) WaitStepPropertiesInvokeResponseOutput {
	return o
}

// The Wait attributes
func (o WaitStepPropertiesInvokeResponseOutput) Attributes() WaitStepAttributesInvokeResponseOutput {
	return o.ApplyT(func(v WaitStepPropertiesInvokeResponse) WaitStepAttributesInvokeResponse { return v.Attributes }).(WaitStepAttributesInvokeResponseOutput)
}

// The type of step.
// Expected value is 'Wait'.
func (o WaitStepPropertiesInvokeResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepPropertiesInvokeResponse) string { return v.StepType }).(pulumi.StringOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesResponse struct {
	// The Wait attributes
	Attributes WaitStepAttributesResponse `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType string `pulumi:"stepType"`
}

// WaitStepPropertiesResponseInput is an input type that accepts WaitStepPropertiesResponseArgs and WaitStepPropertiesResponseOutput values.
// You can construct a concrete instance of `WaitStepPropertiesResponseInput` via:
//
//          WaitStepPropertiesResponseArgs{...}
type WaitStepPropertiesResponseInput interface {
	pulumi.Input

	ToWaitStepPropertiesResponseOutput() WaitStepPropertiesResponseOutput
	ToWaitStepPropertiesResponseOutputWithContext(context.Context) WaitStepPropertiesResponseOutput
}

// Defines the properties of a Wait step.
type WaitStepPropertiesResponseArgs struct {
	// The Wait attributes
	Attributes WaitStepAttributesResponseInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (WaitStepPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepPropertiesResponse)(nil)).Elem()
}

func (i WaitStepPropertiesResponseArgs) ToWaitStepPropertiesResponseOutput() WaitStepPropertiesResponseOutput {
	return i.ToWaitStepPropertiesResponseOutputWithContext(context.Background())
}

func (i WaitStepPropertiesResponseArgs) ToWaitStepPropertiesResponseOutputWithContext(ctx context.Context) WaitStepPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepPropertiesResponseOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WaitStepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepPropertiesResponse)(nil)).Elem()
}

func (o WaitStepPropertiesResponseOutput) ToWaitStepPropertiesResponseOutput() WaitStepPropertiesResponseOutput {
	return o
}

func (o WaitStepPropertiesResponseOutput) ToWaitStepPropertiesResponseOutputWithContext(ctx context.Context) WaitStepPropertiesResponseOutput {
	return o
}

// The Wait attributes
func (o WaitStepPropertiesResponseOutput) Attributes() WaitStepAttributesResponseOutput {
	return o.ApplyT(func(v WaitStepPropertiesResponse) WaitStepAttributesResponse { return v.Attributes }).(WaitStepAttributesResponseOutput)
}

// The type of step.
// Expected value is 'Wait'.
func (o WaitStepPropertiesResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepPropertiesResponse) string { return v.StepType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthenticationInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApiKeyAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyInvokeResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(HealthCheckStepPropertiesOutput{})
	pulumi.RegisterOutputType(HealthCheckStepPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(HealthCheckStepPropertiesResponseOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityInvokeResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MessageInvokeResponseOutput{})
	pulumi.RegisterOutputType(MessageInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepOutput{})
	pulumi.RegisterOutputType(PrePostStepArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(PrePostStepInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceOperationInvokeResponseOutput{})
	pulumi.RegisterOutputType(ResourceOperationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RestHealthCheckOutput{})
	pulumi.RegisterOutputType(RestHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(RestHealthCheckInvokeResponseOutput{})
	pulumi.RegisterOutputType(RestHealthCheckInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RestHealthCheckResponseOutput{})
	pulumi.RegisterOutputType(RestHealthCheckResponseArrayOutput{})
	pulumi.RegisterOutputType(RestHealthCheckStepAttributesOutput{})
	pulumi.RegisterOutputType(RestHealthCheckStepAttributesInvokeResponseOutput{})
	pulumi.RegisterOutputType(RestHealthCheckStepAttributesResponseOutput{})
	pulumi.RegisterOutputType(RestRequestOutput{})
	pulumi.RegisterOutputType(RestRequestInvokeResponseOutput{})
	pulumi.RegisterOutputType(RestRequestResponseOutput{})
	pulumi.RegisterOutputType(RestResponseOutput{})
	pulumi.RegisterOutputType(RestResponsePtrOutput{})
	pulumi.RegisterOutputType(RestResponseInvokeResponseOutput{})
	pulumi.RegisterOutputType(RestResponseInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RestResponseInvokeResponseRegexOutput{})
	pulumi.RegisterOutputType(RestResponseInvokeResponseRegexPtrOutput{})
	pulumi.RegisterOutputType(RestResponseRegexOutput{})
	pulumi.RegisterOutputType(RestResponseRegexPtrOutput{})
	pulumi.RegisterOutputType(RestResponseResponseOutput{})
	pulumi.RegisterOutputType(RestResponseResponsePtrOutput{})
	pulumi.RegisterOutputType(RestResponseResponseRegexOutput{})
	pulumi.RegisterOutputType(RestResponseResponseRegexPtrOutput{})
	pulumi.RegisterOutputType(RolloutIdentityAuthenticationOutput{})
	pulumi.RegisterOutputType(RolloutIdentityAuthenticationInvokeResponseOutput{})
	pulumi.RegisterOutputType(RolloutIdentityAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(RolloutOperationInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepInvokeResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SasAuthenticationOutput{})
	pulumi.RegisterOutputType(SasAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(SasAuthenticationInvokeResponseOutput{})
	pulumi.RegisterOutputType(SasAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(SasAuthenticationResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceInvokeResponseOutput{})
	pulumi.RegisterOutputType(ServiceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsPtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitInvokeResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(StepGroupOutput{})
	pulumi.RegisterOutputType(StepGroupArrayOutput{})
	pulumi.RegisterOutputType(StepGroupInvokeResponseOutput{})
	pulumi.RegisterOutputType(StepGroupInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(StepGroupResponseOutput{})
	pulumi.RegisterOutputType(StepGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(StepOperationInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesInvokeResponseOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesResponseOutput{})
	pulumi.RegisterOutputType(WaitStepPropertiesOutput{})
	pulumi.RegisterOutputType(WaitStepPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(WaitStepPropertiesResponseOutput{})
}
