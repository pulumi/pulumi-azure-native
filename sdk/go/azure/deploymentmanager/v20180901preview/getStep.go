// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource representation of a rollout step.
//
// Deprecated: Version 2018-09-01-preview will be removed in v2 of the provider.
func LookupStep(ctx *pulumi.Context, args *LookupStepArgs, opts ...pulumi.InvokeOption) (*LookupStepResult, error) {
	var rv LookupStepResult
	err := ctx.Invoke("azure-native:deploymentmanager/v20180901preview:getStep", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStepArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the deployment step.
	StepName string `pulumi:"stepName"`
}

// The resource representation of a rollout step.
type LookupStepResult struct {
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The properties that define the step.
	Properties WaitStepPropertiesResponse `pulumi:"properties"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupStepOutput(ctx *pulumi.Context, args LookupStepOutputArgs, opts ...pulumi.InvokeOption) LookupStepResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStepResult, error) {
			args := v.(LookupStepArgs)
			r, err := LookupStep(ctx, &args, opts...)
			var s LookupStepResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStepResultOutput)
}

type LookupStepOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the deployment step.
	StepName pulumi.StringInput `pulumi:"stepName"`
}

func (LookupStepOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepArgs)(nil)).Elem()
}

// The resource representation of a rollout step.
type LookupStepResultOutput struct{ *pulumi.OutputState }

func (LookupStepResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStepResult)(nil)).Elem()
}

func (o LookupStepResultOutput) ToLookupStepResultOutput() LookupStepResultOutput {
	return o
}

func (o LookupStepResultOutput) ToLookupStepResultOutputWithContext(ctx context.Context) LookupStepResultOutput {
	return o
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupStepResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupStepResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupStepResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepResult) string { return v.Name }).(pulumi.StringOutput)
}

// The properties that define the step.
func (o LookupStepResultOutput) Properties() WaitStepPropertiesResponseOutput {
	return o.ApplyT(func(v LookupStepResult) WaitStepPropertiesResponse { return v.Properties }).(WaitStepPropertiesResponseOutput)
}

// Resource tags.
func (o LookupStepResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupStepResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupStepResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStepResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStepResultOutput{})
}
