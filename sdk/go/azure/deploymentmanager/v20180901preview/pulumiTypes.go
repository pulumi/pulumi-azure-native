// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20180901preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Detailed error information of any failure.
type CloudErrorBodyResponse struct {
	// Error code string.
	Code string `pulumi:"code"`
	// More detailed error information.
	Details []CloudErrorBodyResponse `pulumi:"details"`
	// Descriptive error information.
	Message string `pulumi:"message"`
	// Error target
	Target *string `pulumi:"target"`
}

// Detailed error information of any failure.
type CloudErrorBodyResponseOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponseOutput() CloudErrorBodyResponseOutput {
	return o
}

func (o CloudErrorBodyResponseOutput) ToCloudErrorBodyResponseOutputWithContext(ctx context.Context) CloudErrorBodyResponseOutput {
	return o
}

// Error code string.
func (o CloudErrorBodyResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) string { return v.Code }).(pulumi.StringOutput)
}

// More detailed error information.
func (o CloudErrorBodyResponseOutput) Details() CloudErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) []CloudErrorBodyResponse { return v.Details }).(CloudErrorBodyResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Error target
func (o CloudErrorBodyResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudErrorBodyResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type CloudErrorBodyResponsePtrOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponsePtrOutput) ToCloudErrorBodyResponsePtrOutput() CloudErrorBodyResponsePtrOutput {
	return o
}

func (o CloudErrorBodyResponsePtrOutput) ToCloudErrorBodyResponsePtrOutputWithContext(ctx context.Context) CloudErrorBodyResponsePtrOutput {
	return o
}

func (o CloudErrorBodyResponsePtrOutput) Elem() CloudErrorBodyResponseOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) CloudErrorBodyResponse {
		if v != nil {
			return *v
		}
		var ret CloudErrorBodyResponse
		return ret
	}).(CloudErrorBodyResponseOutput)
}

// Error code string.
func (o CloudErrorBodyResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// More detailed error information.
func (o CloudErrorBodyResponsePtrOutput) Details() CloudErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) []CloudErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(CloudErrorBodyResponseArrayOutput)
}

// Descriptive error information.
func (o CloudErrorBodyResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

// Error target
func (o CloudErrorBodyResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type CloudErrorBodyResponseArrayOutput struct{ *pulumi.OutputState }

func (CloudErrorBodyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudErrorBodyResponse)(nil)).Elem()
}

func (o CloudErrorBodyResponseArrayOutput) ToCloudErrorBodyResponseArrayOutput() CloudErrorBodyResponseArrayOutput {
	return o
}

func (o CloudErrorBodyResponseArrayOutput) ToCloudErrorBodyResponseArrayOutputWithContext(ctx context.Context) CloudErrorBodyResponseArrayOutput {
	return o
}

func (o CloudErrorBodyResponseArrayOutput) Index(i pulumi.IntInput) CloudErrorBodyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudErrorBodyResponse {
		return vs[0].([]CloudErrorBodyResponse)[vs[1].(int)]
	}).(CloudErrorBodyResponseOutput)
}

// Identity for the resource.
type Identity struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//	IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Identity for the resource.
type IdentityArgs struct {
	// The list of identities.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The identity type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

// Identity for the resource.
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

// The list of identities.
func (o IdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Identity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Identity) string { return v.Type }).(pulumi.StringOutput)
}

// Identity for the resource.
type IdentityResponse struct {
	// The list of identities.
	IdentityIds []string `pulumi:"identityIds"`
	// The identity type.
	Type string `pulumi:"type"`
}

// Identity for the resource.
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

// The list of identities.
func (o IdentityResponseOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IdentityResponse) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse {
		if v != nil {
			return *v
		}
		var ret IdentityResponse
		return ret
	}).(IdentityResponseOutput)
}

// The list of identities.
func (o IdentityResponsePtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IdentityResponse) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The identity type.
func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Supplementary contextual messages during a rollout.
type MessageResponse struct {
	// The actual message text.
	Message string `pulumi:"message"`
	// Time in UTC this message was provided.
	TimeStamp string `pulumi:"timeStamp"`
}

// Supplementary contextual messages during a rollout.
type MessageResponseOutput struct{ *pulumi.OutputState }

func (MessageResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageResponse)(nil)).Elem()
}

func (o MessageResponseOutput) ToMessageResponseOutput() MessageResponseOutput {
	return o
}

func (o MessageResponseOutput) ToMessageResponseOutputWithContext(ctx context.Context) MessageResponseOutput {
	return o
}

// The actual message text.
func (o MessageResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v MessageResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Time in UTC this message was provided.
func (o MessageResponseOutput) TimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v MessageResponse) string { return v.TimeStamp }).(pulumi.StringOutput)
}

type MessageResponseArrayOutput struct{ *pulumi.OutputState }

func (MessageResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MessageResponse)(nil)).Elem()
}

func (o MessageResponseArrayOutput) ToMessageResponseArrayOutput() MessageResponseArrayOutput {
	return o
}

func (o MessageResponseArrayOutput) ToMessageResponseArrayOutputWithContext(ctx context.Context) MessageResponseArrayOutput {
	return o
}

func (o MessageResponseArrayOutput) Index(i pulumi.IntInput) MessageResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MessageResponse {
		return vs[0].([]MessageResponse)[vs[1].(int)]
	}).(MessageResponseOutput)
}

// The properties that define a step.
type PrePostStep struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// PrePostStepInput is an input type that accepts PrePostStepArgs and PrePostStepOutput values.
// You can construct a concrete instance of `PrePostStepInput` via:
//
//	PrePostStepArgs{...}
type PrePostStepInput interface {
	pulumi.Input

	ToPrePostStepOutput() PrePostStepOutput
	ToPrePostStepOutputWithContext(context.Context) PrePostStepOutput
}

// The properties that define a step.
type PrePostStepArgs struct {
	// The resource Id of the step to be run.
	StepId pulumi.StringInput `pulumi:"stepId"`
}

func (PrePostStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (i PrePostStepArgs) ToPrePostStepOutput() PrePostStepOutput {
	return i.ToPrePostStepOutputWithContext(context.Background())
}

func (i PrePostStepArgs) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepOutput)
}

// PrePostStepArrayInput is an input type that accepts PrePostStepArray and PrePostStepArrayOutput values.
// You can construct a concrete instance of `PrePostStepArrayInput` via:
//
//	PrePostStepArray{ PrePostStepArgs{...} }
type PrePostStepArrayInput interface {
	pulumi.Input

	ToPrePostStepArrayOutput() PrePostStepArrayOutput
	ToPrePostStepArrayOutputWithContext(context.Context) PrePostStepArrayOutput
}

type PrePostStepArray []PrePostStepInput

func (PrePostStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (i PrePostStepArray) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return i.ToPrePostStepArrayOutputWithContext(context.Background())
}

func (i PrePostStepArray) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrePostStepArrayOutput)
}

// The properties that define a step.
type PrePostStepOutput struct{ *pulumi.OutputState }

func (PrePostStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStep)(nil)).Elem()
}

func (o PrePostStepOutput) ToPrePostStepOutput() PrePostStepOutput {
	return o
}

func (o PrePostStepOutput) ToPrePostStepOutputWithContext(ctx context.Context) PrePostStepOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStep) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStep)(nil)).Elem()
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutput() PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) ToPrePostStepArrayOutputWithContext(ctx context.Context) PrePostStepArrayOutput {
	return o
}

func (o PrePostStepArrayOutput) Index(i pulumi.IntInput) PrePostStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStep {
		return vs[0].([]PrePostStep)[vs[1].(int)]
	}).(PrePostStepOutput)
}

// The properties that define a step.
type PrePostStepResponse struct {
	// The resource Id of the step to be run.
	StepId string `pulumi:"stepId"`
}

// The properties that define a step.
type PrePostStepResponseOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutput() PrePostStepResponseOutput {
	return o
}

func (o PrePostStepResponseOutput) ToPrePostStepResponseOutputWithContext(ctx context.Context) PrePostStepResponseOutput {
	return o
}

// The resource Id of the step to be run.
func (o PrePostStepResponseOutput) StepId() pulumi.StringOutput {
	return o.ApplyT(func(v PrePostStepResponse) string { return v.StepId }).(pulumi.StringOutput)
}

type PrePostStepResponseArrayOutput struct{ *pulumi.OutputState }

func (PrePostStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrePostStepResponse)(nil)).Elem()
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutput() PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) ToPrePostStepResponseArrayOutputWithContext(ctx context.Context) PrePostStepResponseArrayOutput {
	return o
}

func (o PrePostStepResponseArrayOutput) Index(i pulumi.IntInput) PrePostStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrePostStepResponse {
		return vs[0].([]PrePostStepResponse)[vs[1].(int)]
	}).(PrePostStepResponseOutput)
}

// Individual resource operation information.
type ResourceOperationResponse struct {
	// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
	OperationId string `pulumi:"operationId"`
	// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
	ResourceName *string `pulumi:"resourceName"`
	// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
	ResourceType *string `pulumi:"resourceType"`
	// Http status code of the operation.
	StatusCode string `pulumi:"statusCode"`
	// Descriptive information of the resource operation.
	StatusMessage string `pulumi:"statusMessage"`
}

// Individual resource operation information.
type ResourceOperationResponseOutput struct{ *pulumi.OutputState }

func (ResourceOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceOperationResponse)(nil)).Elem()
}

func (o ResourceOperationResponseOutput) ToResourceOperationResponseOutput() ResourceOperationResponseOutput {
	return o
}

func (o ResourceOperationResponseOutput) ToResourceOperationResponseOutputWithContext(ctx context.Context) ResourceOperationResponseOutput {
	return o
}

// Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service.
func (o ResourceOperationResponseOutput) OperationId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.OperationId }).(pulumi.StringOutput)
}

// State of the resource deployment. For ARM resources, this is the current provisioning state of the resource.
func (o ResourceOperationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template.
func (o ResourceOperationResponseOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationResponse) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template.
func (o ResourceOperationResponseOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceOperationResponse) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// Http status code of the operation.
func (o ResourceOperationResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

// Descriptive information of the resource operation.
func (o ResourceOperationResponseOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceOperationResponse) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type ResourceOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceOperationResponse)(nil)).Elem()
}

func (o ResourceOperationResponseArrayOutput) ToResourceOperationResponseArrayOutput() ResourceOperationResponseArrayOutput {
	return o
}

func (o ResourceOperationResponseArrayOutput) ToResourceOperationResponseArrayOutputWithContext(ctx context.Context) ResourceOperationResponseArrayOutput {
	return o
}

func (o ResourceOperationResponseArrayOutput) Index(i pulumi.IntInput) ResourceOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceOperationResponse {
		return vs[0].([]ResourceOperationResponse)[vs[1].(int)]
	}).(ResourceOperationResponseOutput)
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoResponse struct {
	// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
	EndTime string `pulumi:"endTime"`
	// The detailed error information for any failure.
	Error CloudErrorBodyResponse `pulumi:"error"`
	// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
	RetryAttempt int `pulumi:"retryAttempt"`
	// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
	SkipSucceededOnRetry bool `pulumi:"skipSucceededOnRetry"`
	// The start time of the rollout in UTC.
	StartTime string `pulumi:"startTime"`
}

// Detailed runtime information of the rollout.
type RolloutOperationInfoResponseOutput struct{ *pulumi.OutputState }

func (RolloutOperationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutOperationInfoResponse)(nil)).Elem()
}

func (o RolloutOperationInfoResponseOutput) ToRolloutOperationInfoResponseOutput() RolloutOperationInfoResponseOutput {
	return o
}

func (o RolloutOperationInfoResponseOutput) ToRolloutOperationInfoResponseOutputWithContext(ctx context.Context) RolloutOperationInfoResponseOutput {
	return o
}

// The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet.
func (o RolloutOperationInfoResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The detailed error information for any failure.
func (o RolloutOperationInfoResponseOutput) Error() CloudErrorBodyResponseOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) CloudErrorBodyResponse { return v.Error }).(CloudErrorBodyResponseOutput)
}

// The ordinal count of the number of retry attempts on a rollout. 0 if no retries of the rollout have been performed. If the rollout is updated with a PUT, this count is reset to 0.
func (o RolloutOperationInfoResponseOutput) RetryAttempt() pulumi.IntOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) int { return v.RetryAttempt }).(pulumi.IntOutput)
}

// True, if all steps that succeeded on the previous run/attempt were chosen to be skipped in this retry attempt. False, otherwise.
func (o RolloutOperationInfoResponseOutput) SkipSucceededOnRetry() pulumi.BoolOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) bool { return v.SkipSucceededOnRetry }).(pulumi.BoolOutput)
}

// The start time of the rollout in UTC.
func (o RolloutOperationInfoResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutOperationInfoResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// Defines a specific step on a target service unit.
type RolloutStepResponse struct {
	// Supplementary informative messages during rollout.
	Messages []MessageResponse `pulumi:"messages"`
	// Name of the step.
	Name string `pulumi:"name"`
	// Detailed information of specific action execution.
	OperationInfo StepOperationInfoResponse `pulumi:"operationInfo"`
	// Set of resource operations that were performed, if any, on an Azure resource.
	ResourceOperations []ResourceOperationResponse `pulumi:"resourceOperations"`
	// Current state of the step.
	Status string `pulumi:"status"`
	// The step group the current step is part of.
	StepGroup *string `pulumi:"stepGroup"`
}

// Defines a specific step on a target service unit.
type RolloutStepResponseOutput struct{ *pulumi.OutputState }

func (RolloutStepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolloutStepResponse)(nil)).Elem()
}

func (o RolloutStepResponseOutput) ToRolloutStepResponseOutput() RolloutStepResponseOutput {
	return o
}

func (o RolloutStepResponseOutput) ToRolloutStepResponseOutputWithContext(ctx context.Context) RolloutStepResponseOutput {
	return o
}

// Supplementary informative messages during rollout.
func (o RolloutStepResponseOutput) Messages() MessageResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepResponse) []MessageResponse { return v.Messages }).(MessageResponseArrayOutput)
}

// Name of the step.
func (o RolloutStepResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Detailed information of specific action execution.
func (o RolloutStepResponseOutput) OperationInfo() StepOperationInfoResponseOutput {
	return o.ApplyT(func(v RolloutStepResponse) StepOperationInfoResponse { return v.OperationInfo }).(StepOperationInfoResponseOutput)
}

// Set of resource operations that were performed, if any, on an Azure resource.
func (o RolloutStepResponseOutput) ResourceOperations() ResourceOperationResponseArrayOutput {
	return o.ApplyT(func(v RolloutStepResponse) []ResourceOperationResponse { return v.ResourceOperations }).(ResourceOperationResponseArrayOutput)
}

// Current state of the step.
func (o RolloutStepResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v RolloutStepResponse) string { return v.Status }).(pulumi.StringOutput)
}

// The step group the current step is part of.
func (o RolloutStepResponseOutput) StepGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolloutStepResponse) *string { return v.StepGroup }).(pulumi.StringPtrOutput)
}

type RolloutStepResponseArrayOutput struct{ *pulumi.OutputState }

func (RolloutStepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolloutStepResponse)(nil)).Elem()
}

func (o RolloutStepResponseArrayOutput) ToRolloutStepResponseArrayOutput() RolloutStepResponseArrayOutput {
	return o
}

func (o RolloutStepResponseArrayOutput) ToRolloutStepResponseArrayOutputWithContext(ctx context.Context) RolloutStepResponseArrayOutput {
	return o
}

func (o RolloutStepResponseArrayOutput) Index(i pulumi.IntInput) RolloutStepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolloutStepResponse {
		return vs[0].([]RolloutStepResponse)[vs[1].(int)]
	}).(RolloutStepResponseOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthentication struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri string `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type string `pulumi:"type"`
}

// SasAuthenticationInput is an input type that accepts SasAuthenticationArgs and SasAuthenticationOutput values.
// You can construct a concrete instance of `SasAuthenticationInput` via:
//
//	SasAuthenticationArgs{...}
type SasAuthenticationInput interface {
	pulumi.Input

	ToSasAuthenticationOutput() SasAuthenticationOutput
	ToSasAuthenticationOutputWithContext(context.Context) SasAuthenticationOutput
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationArgs struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri pulumi.StringInput `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SasAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthentication)(nil)).Elem()
}

func (i SasAuthenticationArgs) ToSasAuthenticationOutput() SasAuthenticationOutput {
	return i.ToSasAuthenticationOutputWithContext(context.Background())
}

func (i SasAuthenticationArgs) ToSasAuthenticationOutputWithContext(ctx context.Context) SasAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SasAuthenticationOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationOutput struct{ *pulumi.OutputState }

func (SasAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthentication)(nil)).Elem()
}

func (o SasAuthenticationOutput) ToSasAuthenticationOutput() SasAuthenticationOutput {
	return o
}

func (o SasAuthenticationOutput) ToSasAuthenticationOutputWithContext(ctx context.Context) SasAuthenticationOutput {
	return o
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthentication) string { return v.SasUri }).(pulumi.StringOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationResponse struct {
	// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
	SasUri string `pulumi:"sasUri"`
	// The authentication type
	// Expected value is 'Sas'.
	Type string `pulumi:"type"`
}

// Defines the properties to access the artifacts using an Azure Storage SAS URI.
type SasAuthenticationResponseOutput struct{ *pulumi.OutputState }

func (SasAuthenticationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SasAuthenticationResponse)(nil)).Elem()
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponseOutput() SasAuthenticationResponseOutput {
	return o
}

func (o SasAuthenticationResponseOutput) ToSasAuthenticationResponseOutputWithContext(ctx context.Context) SasAuthenticationResponseOutput {
	return o
}

// The SAS URI to the Azure Storage blob container. Any offset from the root of the container to where the artifacts are located can be defined in the artifactRoot.
func (o SasAuthenticationResponseOutput) SasUri() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationResponse) string { return v.SasUri }).(pulumi.StringOutput)
}

// The authentication type
// Expected value is 'Sas'.
func (o SasAuthenticationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SasAuthenticationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines a service.
type ServiceResponse struct {
	// Name of the service.
	Name *string `pulumi:"name"`
	// The detailed information about the units that make up the service.
	ServiceUnits []ServiceUnitResponse `pulumi:"serviceUnits"`
	// The Azure location to which the resources in the service belong to or should be deployed to.
	TargetLocation string `pulumi:"targetLocation"`
	// The subscription to which the resources in the service belong to or should be deployed to.
	TargetSubscriptionId string `pulumi:"targetSubscriptionId"`
}

// Defines a service.
type ServiceResponseOutput struct{ *pulumi.OutputState }

func (ServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceResponse)(nil)).Elem()
}

func (o ServiceResponseOutput) ToServiceResponseOutput() ServiceResponseOutput {
	return o
}

func (o ServiceResponseOutput) ToServiceResponseOutputWithContext(ctx context.Context) ServiceResponseOutput {
	return o
}

// Name of the service.
func (o ServiceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The detailed information about the units that make up the service.
func (o ServiceResponseOutput) ServiceUnits() ServiceUnitResponseArrayOutput {
	return o.ApplyT(func(v ServiceResponse) []ServiceUnitResponse { return v.ServiceUnits }).(ServiceUnitResponseArrayOutput)
}

// The Azure location to which the resources in the service belong to or should be deployed to.
func (o ServiceResponseOutput) TargetLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.TargetLocation }).(pulumi.StringOutput)
}

// The subscription to which the resources in the service belong to or should be deployed to.
func (o ServiceResponseOutput) TargetSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceResponse) string { return v.TargetSubscriptionId }).(pulumi.StringOutput)
}

type ServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceResponse)(nil)).Elem()
}

func (o ServiceResponseArrayOutput) ToServiceResponseArrayOutput() ServiceResponseArrayOutput {
	return o
}

func (o ServiceResponseArrayOutput) ToServiceResponseArrayOutputWithContext(ctx context.Context) ServiceResponseArrayOutput {
	return o
}

func (o ServiceResponseArrayOutput) Index(i pulumi.IntInput) ServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceResponse {
		return vs[0].([]ServiceResponse)[vs[1].(int)]
	}).(ServiceResponseOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifacts struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// ServiceUnitArtifactsInput is an input type that accepts ServiceUnitArtifactsArgs and ServiceUnitArtifactsOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsInput` via:
//
//	ServiceUnitArtifactsArgs{...}
type ServiceUnitArtifactsInput interface {
	pulumi.Input

	ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput
	ToServiceUnitArtifactsOutputWithContext(context.Context) ServiceUnitArtifactsOutput
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsArgs struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri pulumi.StringPtrInput `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath pulumi.StringPtrInput `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri pulumi.StringPtrInput `pulumi:"templateUri"`
}

func (ServiceUnitArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return i.ToServiceUnitArtifactsOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput)
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i ServiceUnitArtifactsArgs) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsOutput).ToServiceUnitArtifactsPtrOutputWithContext(ctx)
}

// ServiceUnitArtifactsPtrInput is an input type that accepts ServiceUnitArtifactsArgs, ServiceUnitArtifactsPtr and ServiceUnitArtifactsPtrOutput values.
// You can construct a concrete instance of `ServiceUnitArtifactsPtrInput` via:
//
//	        ServiceUnitArtifactsArgs{...}
//
//	or:
//
//	        nil
type ServiceUnitArtifactsPtrInput interface {
	pulumi.Input

	ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput
	ToServiceUnitArtifactsPtrOutputWithContext(context.Context) ServiceUnitArtifactsPtrOutput
}

type serviceUnitArtifactsPtrType ServiceUnitArtifactsArgs

func ServiceUnitArtifactsPtr(v *ServiceUnitArtifactsArgs) ServiceUnitArtifactsPtrInput {
	return (*serviceUnitArtifactsPtrType)(v)
}

func (*serviceUnitArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return i.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (i *serviceUnitArtifactsPtrType) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUnitArtifactsPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutput() ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsOutputWithContext(ctx context.Context) ServiceUnitArtifactsOutput {
	return o
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o.ToServiceUnitArtifactsPtrOutputWithContext(context.Background())
}

func (o ServiceUnitArtifactsOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceUnitArtifacts) *ServiceUnitArtifacts {
		return &v
	}).(ServiceUnitArtifactsPtrOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifacts) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsPtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifacts)(nil)).Elem()
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutput() ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) ToServiceUnitArtifactsPtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsPtrOutput {
	return o
}

func (o ServiceUnitArtifactsPtrOutput) Elem() ServiceUnitArtifactsOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) ServiceUnitArtifacts {
		if v != nil {
			return *v
		}
		var ret ServiceUnitArtifacts
		return ret
	}).(ServiceUnitArtifactsOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsPtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsPtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponse struct {
	// The path to the ARM parameters file relative to the artifact source.
	ParametersArtifactSourceRelativePath *string `pulumi:"parametersArtifactSourceRelativePath"`
	// The full URI of the ARM parameters file with the SAS token.
	ParametersUri *string `pulumi:"parametersUri"`
	// The path to the ARM template file relative to the artifact source.
	TemplateArtifactSourceRelativePath *string `pulumi:"templateArtifactSourceRelativePath"`
	// The full URI of the ARM template file with the SAS token.
	TemplateUri *string `pulumi:"templateUri"`
}

// Defines the artifacts of a service unit.
type ServiceUnitArtifactsResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutput() ServiceUnitArtifactsResponseOutput {
	return o
}

func (o ServiceUnitArtifactsResponseOutput) ToServiceUnitArtifactsResponseOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponseOutput {
	return o
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.ParametersUri }).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponseOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateArtifactSourceRelativePath }).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponseOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitArtifactsResponse) *string { return v.TemplateUri }).(pulumi.StringPtrOutput)
}

type ServiceUnitArtifactsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServiceUnitArtifactsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceUnitArtifactsResponse)(nil)).Elem()
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutput() ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) ToServiceUnitArtifactsResponsePtrOutputWithContext(ctx context.Context) ServiceUnitArtifactsResponsePtrOutput {
	return o
}

func (o ServiceUnitArtifactsResponsePtrOutput) Elem() ServiceUnitArtifactsResponseOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) ServiceUnitArtifactsResponse {
		if v != nil {
			return *v
		}
		var ret ServiceUnitArtifactsResponse
		return ret
	}).(ServiceUnitArtifactsResponseOutput)
}

// The path to the ARM parameters file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM parameters file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) ParametersUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ParametersUri
	}).(pulumi.StringPtrOutput)
}

// The path to the ARM template file relative to the artifact source.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateArtifactSourceRelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateArtifactSourceRelativePath
	}).(pulumi.StringPtrOutput)
}

// The full URI of the ARM template file with the SAS token.
func (o ServiceUnitArtifactsResponsePtrOutput) TemplateUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceUnitArtifactsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateUri
	}).(pulumi.StringPtrOutput)
}

// Defines a service unit.
type ServiceUnitResponse struct {
	// The artifacts for the service unit.
	Artifacts *ServiceUnitArtifactsResponse `pulumi:"artifacts"`
	// Describes the type of ARM deployment to be performed on the resource.
	DeploymentMode string `pulumi:"deploymentMode"`
	// Name of the service unit.
	Name *string `pulumi:"name"`
	// Detailed step information, if present.
	Steps []RolloutStepResponse `pulumi:"steps"`
	// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
	TargetResourceGroup string `pulumi:"targetResourceGroup"`
}

// Defines a service unit.
type ServiceUnitResponseOutput struct{ *pulumi.OutputState }

func (ServiceUnitResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUnitResponse)(nil)).Elem()
}

func (o ServiceUnitResponseOutput) ToServiceUnitResponseOutput() ServiceUnitResponseOutput {
	return o
}

func (o ServiceUnitResponseOutput) ToServiceUnitResponseOutputWithContext(ctx context.Context) ServiceUnitResponseOutput {
	return o
}

// The artifacts for the service unit.
func (o ServiceUnitResponseOutput) Artifacts() ServiceUnitArtifactsResponsePtrOutput {
	return o.ApplyT(func(v ServiceUnitResponse) *ServiceUnitArtifactsResponse { return v.Artifacts }).(ServiceUnitArtifactsResponsePtrOutput)
}

// Describes the type of ARM deployment to be performed on the resource.
func (o ServiceUnitResponseOutput) DeploymentMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitResponse) string { return v.DeploymentMode }).(pulumi.StringOutput)
}

// Name of the service unit.
func (o ServiceUnitResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceUnitResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Detailed step information, if present.
func (o ServiceUnitResponseOutput) Steps() RolloutStepResponseArrayOutput {
	return o.ApplyT(func(v ServiceUnitResponse) []RolloutStepResponse { return v.Steps }).(RolloutStepResponseArrayOutput)
}

// The Azure Resource Group to which the resources in the service unit belong to or should be deployed to.
func (o ServiceUnitResponseOutput) TargetResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUnitResponse) string { return v.TargetResourceGroup }).(pulumi.StringOutput)
}

type ServiceUnitResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceUnitResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUnitResponse)(nil)).Elem()
}

func (o ServiceUnitResponseArrayOutput) ToServiceUnitResponseArrayOutput() ServiceUnitResponseArrayOutput {
	return o
}

func (o ServiceUnitResponseArrayOutput) ToServiceUnitResponseArrayOutputWithContext(ctx context.Context) ServiceUnitResponseArrayOutput {
	return o
}

func (o ServiceUnitResponseArrayOutput) Index(i pulumi.IntInput) ServiceUnitResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceUnitResponse {
		return vs[0].([]ServiceUnitResponse)[vs[1].(int)]
	}).(ServiceUnitResponseOutput)
}

// The properties that define an Azure Deployment Manager step.
type StepType struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStep `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStep `pulumi:"preDeploymentSteps"`
}

// StepTypeInput is an input type that accepts StepTypeArgs and StepTypeOutput values.
// You can construct a concrete instance of `StepTypeInput` via:
//
//	StepTypeArgs{...}
type StepTypeInput interface {
	pulumi.Input

	ToStepTypeOutput() StepTypeOutput
	ToStepTypeOutputWithContext(context.Context) StepTypeOutput
}

// The properties that define an Azure Deployment Manager step.
type StepTypeArgs struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups pulumi.StringArrayInput `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId pulumi.StringInput `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps PrePostStepArrayInput `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps PrePostStepArrayInput `pulumi:"preDeploymentSteps"`
}

func (StepTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StepType)(nil)).Elem()
}

func (i StepTypeArgs) ToStepTypeOutput() StepTypeOutput {
	return i.ToStepTypeOutputWithContext(context.Background())
}

func (i StepTypeArgs) ToStepTypeOutputWithContext(ctx context.Context) StepTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepTypeOutput)
}

// StepTypeArrayInput is an input type that accepts StepTypeArray and StepTypeArrayOutput values.
// You can construct a concrete instance of `StepTypeArrayInput` via:
//
//	StepTypeArray{ StepTypeArgs{...} }
type StepTypeArrayInput interface {
	pulumi.Input

	ToStepTypeArrayOutput() StepTypeArrayOutput
	ToStepTypeArrayOutputWithContext(context.Context) StepTypeArrayOutput
}

type StepTypeArray []StepTypeInput

func (StepTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepType)(nil)).Elem()
}

func (i StepTypeArray) ToStepTypeArrayOutput() StepTypeArrayOutput {
	return i.ToStepTypeArrayOutputWithContext(context.Background())
}

func (i StepTypeArray) ToStepTypeArrayOutputWithContext(ctx context.Context) StepTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StepTypeArrayOutput)
}

// The properties that define an Azure Deployment Manager step.
type StepTypeOutput struct{ *pulumi.OutputState }

func (StepTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepType)(nil)).Elem()
}

func (o StepTypeOutput) ToStepTypeOutput() StepTypeOutput {
	return o
}

func (o StepTypeOutput) ToStepTypeOutputWithContext(ctx context.Context) StepTypeOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepTypeOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepType) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepTypeOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepType) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepType) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepTypeOutput) PostDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepType) []PrePostStep { return v.PostDeploymentSteps }).(PrePostStepArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepTypeOutput) PreDeploymentSteps() PrePostStepArrayOutput {
	return o.ApplyT(func(v StepType) []PrePostStep { return v.PreDeploymentSteps }).(PrePostStepArrayOutput)
}

type StepTypeArrayOutput struct{ *pulumi.OutputState }

func (StepTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepType)(nil)).Elem()
}

func (o StepTypeArrayOutput) ToStepTypeArrayOutput() StepTypeArrayOutput {
	return o
}

func (o StepTypeArrayOutput) ToStepTypeArrayOutputWithContext(ctx context.Context) StepTypeArrayOutput {
	return o
}

func (o StepTypeArrayOutput) Index(i pulumi.IntInput) StepTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepType {
		return vs[0].([]StepType)[vs[1].(int)]
	}).(StepTypeOutput)
}

// Detailed information of a specific step run.
type StepOperationInfoResponse struct {
	// Unique identifier to track the request for ARM-based resources.
	CorrelationId string `pulumi:"correlationId"`
	// The name of the ARM deployment initiated as part of the step.
	DeploymentName string `pulumi:"deploymentName"`
	// End time of the action in UTC.
	EndTime string `pulumi:"endTime"`
	// The errors, if any, for the action.
	Error *CloudErrorBodyResponse `pulumi:"error"`
	// Last time in UTC this operation was updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Start time of the action in UTC.
	StartTime string `pulumi:"startTime"`
}

// Detailed information of a specific step run.
type StepOperationInfoResponseOutput struct{ *pulumi.OutputState }

func (StepOperationInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepOperationInfoResponse)(nil)).Elem()
}

func (o StepOperationInfoResponseOutput) ToStepOperationInfoResponseOutput() StepOperationInfoResponseOutput {
	return o
}

func (o StepOperationInfoResponseOutput) ToStepOperationInfoResponseOutputWithContext(ctx context.Context) StepOperationInfoResponseOutput {
	return o
}

// Unique identifier to track the request for ARM-based resources.
func (o StepOperationInfoResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// The name of the ARM deployment initiated as part of the step.
func (o StepOperationInfoResponseOutput) DeploymentName() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.DeploymentName }).(pulumi.StringOutput)
}

// End time of the action in UTC.
func (o StepOperationInfoResponseOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.EndTime }).(pulumi.StringOutput)
}

// The errors, if any, for the action.
func (o StepOperationInfoResponseOutput) Error() CloudErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) *CloudErrorBodyResponse { return v.Error }).(CloudErrorBodyResponsePtrOutput)
}

// Last time in UTC this operation was updated.
func (o StepOperationInfoResponseOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Start time of the action in UTC.
func (o StepOperationInfoResponseOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v StepOperationInfoResponse) string { return v.StartTime }).(pulumi.StringOutput)
}

// The properties that define an Azure Deployment Manager step.
type StepResponse struct {
	// The list of step group names on which this step group depends on.
	DependsOnStepGroups []string `pulumi:"dependsOnStepGroups"`
	// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
	DeploymentTargetId string `pulumi:"deploymentTargetId"`
	// The name of the step group.
	Name string `pulumi:"name"`
	// The list of steps to be run after deploying the target.
	PostDeploymentSteps []PrePostStepResponse `pulumi:"postDeploymentSteps"`
	// The list of steps to be run before deploying the target.
	PreDeploymentSteps []PrePostStepResponse `pulumi:"preDeploymentSteps"`
}

// The properties that define an Azure Deployment Manager step.
type StepResponseOutput struct{ *pulumi.OutputState }

func (StepResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StepResponse)(nil)).Elem()
}

func (o StepResponseOutput) ToStepResponseOutput() StepResponseOutput {
	return o
}

func (o StepResponseOutput) ToStepResponseOutputWithContext(ctx context.Context) StepResponseOutput {
	return o
}

// The list of step group names on which this step group depends on.
func (o StepResponseOutput) DependsOnStepGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StepResponse) []string { return v.DependsOnStepGroups }).(pulumi.StringArrayOutput)
}

// The resource Id of service unit to be deployed. The service unit should be from the service topology referenced in targetServiceTopologyId
func (o StepResponseOutput) DeploymentTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v StepResponse) string { return v.DeploymentTargetId }).(pulumi.StringOutput)
}

// The name of the step group.
func (o StepResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StepResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The list of steps to be run after deploying the target.
func (o StepResponseOutput) PostDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepResponse) []PrePostStepResponse { return v.PostDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

// The list of steps to be run before deploying the target.
func (o StepResponseOutput) PreDeploymentSteps() PrePostStepResponseArrayOutput {
	return o.ApplyT(func(v StepResponse) []PrePostStepResponse { return v.PreDeploymentSteps }).(PrePostStepResponseArrayOutput)
}

type StepResponseArrayOutput struct{ *pulumi.OutputState }

func (StepResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StepResponse)(nil)).Elem()
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutput() StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) ToStepResponseArrayOutputWithContext(ctx context.Context) StepResponseArrayOutput {
	return o
}

func (o StepResponseArrayOutput) Index(i pulumi.IntInput) StepResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StepResponse {
		return vs[0].([]StepResponse)[vs[1].(int)]
	}).(StepResponseOutput)
}

// The parameters for the wait step.
type WaitStepAttributes struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration string `pulumi:"duration"`
}

// WaitStepAttributesInput is an input type that accepts WaitStepAttributesArgs and WaitStepAttributesOutput values.
// You can construct a concrete instance of `WaitStepAttributesInput` via:
//
//	WaitStepAttributesArgs{...}
type WaitStepAttributesInput interface {
	pulumi.Input

	ToWaitStepAttributesOutput() WaitStepAttributesOutput
	ToWaitStepAttributesOutputWithContext(context.Context) WaitStepAttributesOutput
}

// The parameters for the wait step.
type WaitStepAttributesArgs struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration pulumi.StringInput `pulumi:"duration"`
}

func (WaitStepAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributes)(nil)).Elem()
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesOutput() WaitStepAttributesOutput {
	return i.ToWaitStepAttributesOutputWithContext(context.Background())
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesOutputWithContext(ctx context.Context) WaitStepAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesOutput)
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesPtrOutput() WaitStepAttributesPtrOutput {
	return i.ToWaitStepAttributesPtrOutputWithContext(context.Background())
}

func (i WaitStepAttributesArgs) ToWaitStepAttributesPtrOutputWithContext(ctx context.Context) WaitStepAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesOutput).ToWaitStepAttributesPtrOutputWithContext(ctx)
}

// WaitStepAttributesPtrInput is an input type that accepts WaitStepAttributesArgs, WaitStepAttributesPtr and WaitStepAttributesPtrOutput values.
// You can construct a concrete instance of `WaitStepAttributesPtrInput` via:
//
//	        WaitStepAttributesArgs{...}
//
//	or:
//
//	        nil
type WaitStepAttributesPtrInput interface {
	pulumi.Input

	ToWaitStepAttributesPtrOutput() WaitStepAttributesPtrOutput
	ToWaitStepAttributesPtrOutputWithContext(context.Context) WaitStepAttributesPtrOutput
}

type waitStepAttributesPtrType WaitStepAttributesArgs

func WaitStepAttributesPtr(v *WaitStepAttributesArgs) WaitStepAttributesPtrInput {
	return (*waitStepAttributesPtrType)(v)
}

func (*waitStepAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitStepAttributes)(nil)).Elem()
}

func (i *waitStepAttributesPtrType) ToWaitStepAttributesPtrOutput() WaitStepAttributesPtrOutput {
	return i.ToWaitStepAttributesPtrOutputWithContext(context.Background())
}

func (i *waitStepAttributesPtrType) ToWaitStepAttributesPtrOutputWithContext(ctx context.Context) WaitStepAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepAttributesPtrOutput)
}

// The parameters for the wait step.
type WaitStepAttributesOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributes)(nil)).Elem()
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesOutput() WaitStepAttributesOutput {
	return o
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesOutputWithContext(ctx context.Context) WaitStepAttributesOutput {
	return o
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesPtrOutput() WaitStepAttributesPtrOutput {
	return o.ToWaitStepAttributesPtrOutputWithContext(context.Background())
}

func (o WaitStepAttributesOutput) ToWaitStepAttributesPtrOutputWithContext(ctx context.Context) WaitStepAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WaitStepAttributes) *WaitStepAttributes {
		return &v
	}).(WaitStepAttributesPtrOutput)
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepAttributes) string { return v.Duration }).(pulumi.StringOutput)
}

type WaitStepAttributesPtrOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitStepAttributes)(nil)).Elem()
}

func (o WaitStepAttributesPtrOutput) ToWaitStepAttributesPtrOutput() WaitStepAttributesPtrOutput {
	return o
}

func (o WaitStepAttributesPtrOutput) ToWaitStepAttributesPtrOutputWithContext(ctx context.Context) WaitStepAttributesPtrOutput {
	return o
}

func (o WaitStepAttributesPtrOutput) Elem() WaitStepAttributesOutput {
	return o.ApplyT(func(v *WaitStepAttributes) WaitStepAttributes {
		if v != nil {
			return *v
		}
		var ret WaitStepAttributes
		return ret
	}).(WaitStepAttributesOutput)
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WaitStepAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// The parameters for the wait step.
type WaitStepAttributesResponse struct {
	// The duration in ISO 8601 format of how long the wait should be.
	Duration string `pulumi:"duration"`
}

// The parameters for the wait step.
type WaitStepAttributesResponseOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepAttributesResponse)(nil)).Elem()
}

func (o WaitStepAttributesResponseOutput) ToWaitStepAttributesResponseOutput() WaitStepAttributesResponseOutput {
	return o
}

func (o WaitStepAttributesResponseOutput) ToWaitStepAttributesResponseOutputWithContext(ctx context.Context) WaitStepAttributesResponseOutput {
	return o
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesResponseOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepAttributesResponse) string { return v.Duration }).(pulumi.StringOutput)
}

type WaitStepAttributesResponsePtrOutput struct{ *pulumi.OutputState }

func (WaitStepAttributesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WaitStepAttributesResponse)(nil)).Elem()
}

func (o WaitStepAttributesResponsePtrOutput) ToWaitStepAttributesResponsePtrOutput() WaitStepAttributesResponsePtrOutput {
	return o
}

func (o WaitStepAttributesResponsePtrOutput) ToWaitStepAttributesResponsePtrOutputWithContext(ctx context.Context) WaitStepAttributesResponsePtrOutput {
	return o
}

func (o WaitStepAttributesResponsePtrOutput) Elem() WaitStepAttributesResponseOutput {
	return o.ApplyT(func(v *WaitStepAttributesResponse) WaitStepAttributesResponse {
		if v != nil {
			return *v
		}
		var ret WaitStepAttributesResponse
		return ret
	}).(WaitStepAttributesResponseOutput)
}

// The duration in ISO 8601 format of how long the wait should be.
func (o WaitStepAttributesResponsePtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WaitStepAttributesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// Defines the properties of a Wait step.
type WaitStepProperties struct {
	// The Wait attributes
	Attributes *WaitStepAttributes `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType string `pulumi:"stepType"`
}

// WaitStepPropertiesInput is an input type that accepts WaitStepPropertiesArgs and WaitStepPropertiesOutput values.
// You can construct a concrete instance of `WaitStepPropertiesInput` via:
//
//	WaitStepPropertiesArgs{...}
type WaitStepPropertiesInput interface {
	pulumi.Input

	ToWaitStepPropertiesOutput() WaitStepPropertiesOutput
	ToWaitStepPropertiesOutputWithContext(context.Context) WaitStepPropertiesOutput
}

// Defines the properties of a Wait step.
type WaitStepPropertiesArgs struct {
	// The Wait attributes
	Attributes WaitStepAttributesPtrInput `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType pulumi.StringInput `pulumi:"stepType"`
}

func (WaitStepPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepProperties)(nil)).Elem()
}

func (i WaitStepPropertiesArgs) ToWaitStepPropertiesOutput() WaitStepPropertiesOutput {
	return i.ToWaitStepPropertiesOutputWithContext(context.Background())
}

func (i WaitStepPropertiesArgs) ToWaitStepPropertiesOutputWithContext(ctx context.Context) WaitStepPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WaitStepPropertiesOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesOutput struct{ *pulumi.OutputState }

func (WaitStepPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepProperties)(nil)).Elem()
}

func (o WaitStepPropertiesOutput) ToWaitStepPropertiesOutput() WaitStepPropertiesOutput {
	return o
}

func (o WaitStepPropertiesOutput) ToWaitStepPropertiesOutputWithContext(ctx context.Context) WaitStepPropertiesOutput {
	return o
}

// The Wait attributes
func (o WaitStepPropertiesOutput) Attributes() WaitStepAttributesPtrOutput {
	return o.ApplyT(func(v WaitStepProperties) *WaitStepAttributes { return v.Attributes }).(WaitStepAttributesPtrOutput)
}

// The type of step.
// Expected value is 'Wait'.
func (o WaitStepPropertiesOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepProperties) string { return v.StepType }).(pulumi.StringOutput)
}

// Defines the properties of a Wait step.
type WaitStepPropertiesResponse struct {
	// The Wait attributes
	Attributes *WaitStepAttributesResponse `pulumi:"attributes"`
	// The type of step.
	// Expected value is 'Wait'.
	StepType string `pulumi:"stepType"`
}

// Defines the properties of a Wait step.
type WaitStepPropertiesResponseOutput struct{ *pulumi.OutputState }

func (WaitStepPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WaitStepPropertiesResponse)(nil)).Elem()
}

func (o WaitStepPropertiesResponseOutput) ToWaitStepPropertiesResponseOutput() WaitStepPropertiesResponseOutput {
	return o
}

func (o WaitStepPropertiesResponseOutput) ToWaitStepPropertiesResponseOutputWithContext(ctx context.Context) WaitStepPropertiesResponseOutput {
	return o
}

// The Wait attributes
func (o WaitStepPropertiesResponseOutput) Attributes() WaitStepAttributesResponsePtrOutput {
	return o.ApplyT(func(v WaitStepPropertiesResponse) *WaitStepAttributesResponse { return v.Attributes }).(WaitStepAttributesResponsePtrOutput)
}

// The type of step.
// Expected value is 'Wait'.
func (o WaitStepPropertiesResponseOutput) StepType() pulumi.StringOutput {
	return o.ApplyT(func(v WaitStepPropertiesResponse) string { return v.StepType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CloudErrorBodyResponseOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyResponsePtrOutput{})
	pulumi.RegisterOutputType(CloudErrorBodyResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(MessageResponseOutput{})
	pulumi.RegisterOutputType(MessageResponseArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepOutput{})
	pulumi.RegisterOutputType(PrePostStepArrayOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseOutput{})
	pulumi.RegisterOutputType(PrePostStepResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceOperationResponseOutput{})
	pulumi.RegisterOutputType(ResourceOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(RolloutOperationInfoResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepResponseOutput{})
	pulumi.RegisterOutputType(RolloutStepResponseArrayOutput{})
	pulumi.RegisterOutputType(SasAuthenticationOutput{})
	pulumi.RegisterOutputType(SasAuthenticationResponseOutput{})
	pulumi.RegisterOutputType(ServiceResponseOutput{})
	pulumi.RegisterOutputType(ServiceResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsPtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitArtifactsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServiceUnitResponseOutput{})
	pulumi.RegisterOutputType(ServiceUnitResponseArrayOutput{})
	pulumi.RegisterOutputType(StepTypeOutput{})
	pulumi.RegisterOutputType(StepTypeArrayOutput{})
	pulumi.RegisterOutputType(StepOperationInfoResponseOutput{})
	pulumi.RegisterOutputType(StepResponseOutput{})
	pulumi.RegisterOutputType(StepResponseArrayOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesPtrOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesResponseOutput{})
	pulumi.RegisterOutputType(WaitStepAttributesResponsePtrOutput{})
	pulumi.RegisterOutputType(WaitStepPropertiesOutput{})
	pulumi.RegisterOutputType(WaitStepPropertiesResponseOutput{})
}
