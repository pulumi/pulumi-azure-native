// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type Authorization struct {
	// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
	DelegatedRoleDefinitionIds []string `pulumi:"delegatedRoleDefinitionIds"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// AuthorizationInput is an input type that accepts AuthorizationArgs and AuthorizationOutput values.
// You can construct a concrete instance of `AuthorizationInput` via:
//
//          AuthorizationArgs{...}
type AuthorizationInput interface {
	pulumi.Input

	ToAuthorizationOutput() AuthorizationOutput
	ToAuthorizationOutputWithContext(context.Context) AuthorizationOutput
}

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type AuthorizationArgs struct {
	// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
	DelegatedRoleDefinitionIds pulumi.StringArrayInput `pulumi:"delegatedRoleDefinitionIds"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorization)(nil)).Elem()
}

func (i AuthorizationArgs) ToAuthorizationOutput() AuthorizationOutput {
	return i.ToAuthorizationOutputWithContext(context.Background())
}

func (i AuthorizationArgs) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationOutput)
}

// AuthorizationArrayInput is an input type that accepts AuthorizationArray and AuthorizationArrayOutput values.
// You can construct a concrete instance of `AuthorizationArrayInput` via:
//
//          AuthorizationArray{ AuthorizationArgs{...} }
type AuthorizationArrayInput interface {
	pulumi.Input

	ToAuthorizationArrayOutput() AuthorizationArrayOutput
	ToAuthorizationArrayOutputWithContext(context.Context) AuthorizationArrayOutput
}

type AuthorizationArray []AuthorizationInput

func (AuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Authorization)(nil)).Elem()
}

func (i AuthorizationArray) ToAuthorizationArrayOutput() AuthorizationArrayOutput {
	return i.ToAuthorizationArrayOutputWithContext(context.Background())
}

func (i AuthorizationArray) ToAuthorizationArrayOutputWithContext(ctx context.Context) AuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationArrayOutput)
}

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type AuthorizationOutput struct{ *pulumi.OutputState }

func (AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Authorization)(nil)).Elem()
}

func (o AuthorizationOutput) ToAuthorizationOutput() AuthorizationOutput {
	return o
}

func (o AuthorizationOutput) ToAuthorizationOutputWithContext(ctx context.Context) AuthorizationOutput {
	return o
}

// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
func (o AuthorizationOutput) DelegatedRoleDefinitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Authorization) []string { return v.DelegatedRoleDefinitionIds }).(pulumi.StringArrayOutput)
}

// The identifier of the Azure Active Directory principal.
func (o AuthorizationOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v Authorization) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o AuthorizationOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Authorization) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
func (o AuthorizationOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v Authorization) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type AuthorizationArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Authorization)(nil)).Elem()
}

func (o AuthorizationArrayOutput) ToAuthorizationArrayOutput() AuthorizationArrayOutput {
	return o
}

func (o AuthorizationArrayOutput) ToAuthorizationArrayOutputWithContext(ctx context.Context) AuthorizationArrayOutput {
	return o
}

func (o AuthorizationArrayOutput) Index(i pulumi.IntInput) AuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Authorization {
		return vs[0].([]Authorization)[vs[1].(int)]
	}).(AuthorizationOutput)
}

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type AuthorizationResponse struct {
	// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
	DelegatedRoleDefinitionIds []string `pulumi:"delegatedRoleDefinitionIds"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// AuthorizationResponseInput is an input type that accepts AuthorizationResponseArgs and AuthorizationResponseOutput values.
// You can construct a concrete instance of `AuthorizationResponseInput` via:
//
//          AuthorizationResponseArgs{...}
type AuthorizationResponseInput interface {
	pulumi.Input

	ToAuthorizationResponseOutput() AuthorizationResponseOutput
	ToAuthorizationResponseOutputWithContext(context.Context) AuthorizationResponseOutput
}

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type AuthorizationResponseArgs struct {
	// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
	DelegatedRoleDefinitionIds pulumi.StringArrayInput `pulumi:"delegatedRoleDefinitionIds"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (AuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationResponse)(nil)).Elem()
}

func (i AuthorizationResponseArgs) ToAuthorizationResponseOutput() AuthorizationResponseOutput {
	return i.ToAuthorizationResponseOutputWithContext(context.Background())
}

func (i AuthorizationResponseArgs) ToAuthorizationResponseOutputWithContext(ctx context.Context) AuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationResponseOutput)
}

// AuthorizationResponseArrayInput is an input type that accepts AuthorizationResponseArray and AuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `AuthorizationResponseArrayInput` via:
//
//          AuthorizationResponseArray{ AuthorizationResponseArgs{...} }
type AuthorizationResponseArrayInput interface {
	pulumi.Input

	ToAuthorizationResponseArrayOutput() AuthorizationResponseArrayOutput
	ToAuthorizationResponseArrayOutputWithContext(context.Context) AuthorizationResponseArrayOutput
}

type AuthorizationResponseArray []AuthorizationResponseInput

func (AuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationResponse)(nil)).Elem()
}

func (i AuthorizationResponseArray) ToAuthorizationResponseArrayOutput() AuthorizationResponseArrayOutput {
	return i.ToAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i AuthorizationResponseArray) ToAuthorizationResponseArrayOutputWithContext(ctx context.Context) AuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationResponseArrayOutput)
}

// The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.
type AuthorizationResponseOutput struct{ *pulumi.OutputState }

func (AuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationResponse)(nil)).Elem()
}

func (o AuthorizationResponseOutput) ToAuthorizationResponseOutput() AuthorizationResponseOutput {
	return o
}

func (o AuthorizationResponseOutput) ToAuthorizationResponseOutputWithContext(ctx context.Context) AuthorizationResponseOutput {
	return o
}

// The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.
func (o AuthorizationResponseOutput) DelegatedRoleDefinitionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizationResponse) []string { return v.DelegatedRoleDefinitionIds }).(pulumi.StringArrayOutput)
}

// The identifier of the Azure Active Directory principal.
func (o AuthorizationResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o AuthorizationResponseOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizationResponse) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
func (o AuthorizationResponseOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationResponse) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type AuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationResponse)(nil)).Elem()
}

func (o AuthorizationResponseArrayOutput) ToAuthorizationResponseArrayOutput() AuthorizationResponseArrayOutput {
	return o
}

func (o AuthorizationResponseArrayOutput) ToAuthorizationResponseArrayOutputWithContext(ctx context.Context) AuthorizationResponseArrayOutput {
	return o
}

func (o AuthorizationResponseArrayOutput) Index(i pulumi.IntInput) AuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationResponse {
		return vs[0].([]AuthorizationResponse)[vs[1].(int)]
	}).(AuthorizationResponseOutput)
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApprover struct {
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
}

// EligibleApproverInput is an input type that accepts EligibleApproverArgs and EligibleApproverOutput values.
// You can construct a concrete instance of `EligibleApproverInput` via:
//
//          EligibleApproverArgs{...}
type EligibleApproverInput interface {
	pulumi.Input

	ToEligibleApproverOutput() EligibleApproverOutput
	ToEligibleApproverOutputWithContext(context.Context) EligibleApproverOutput
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApproverArgs struct {
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
}

func (EligibleApproverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApprover)(nil)).Elem()
}

func (i EligibleApproverArgs) ToEligibleApproverOutput() EligibleApproverOutput {
	return i.ToEligibleApproverOutputWithContext(context.Background())
}

func (i EligibleApproverArgs) ToEligibleApproverOutputWithContext(ctx context.Context) EligibleApproverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverOutput)
}

// EligibleApproverArrayInput is an input type that accepts EligibleApproverArray and EligibleApproverArrayOutput values.
// You can construct a concrete instance of `EligibleApproverArrayInput` via:
//
//          EligibleApproverArray{ EligibleApproverArgs{...} }
type EligibleApproverArrayInput interface {
	pulumi.Input

	ToEligibleApproverArrayOutput() EligibleApproverArrayOutput
	ToEligibleApproverArrayOutputWithContext(context.Context) EligibleApproverArrayOutput
}

type EligibleApproverArray []EligibleApproverInput

func (EligibleApproverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApprover)(nil)).Elem()
}

func (i EligibleApproverArray) ToEligibleApproverArrayOutput() EligibleApproverArrayOutput {
	return i.ToEligibleApproverArrayOutputWithContext(context.Background())
}

func (i EligibleApproverArray) ToEligibleApproverArrayOutputWithContext(ctx context.Context) EligibleApproverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverArrayOutput)
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApproverOutput struct{ *pulumi.OutputState }

func (EligibleApproverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApprover)(nil)).Elem()
}

func (o EligibleApproverOutput) ToEligibleApproverOutput() EligibleApproverOutput {
	return o
}

func (o EligibleApproverOutput) ToEligibleApproverOutputWithContext(ctx context.Context) EligibleApproverOutput {
	return o
}

// The identifier of the Azure Active Directory principal.
func (o EligibleApproverOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleApprover) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o EligibleApproverOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleApprover) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

type EligibleApproverArrayOutput struct{ *pulumi.OutputState }

func (EligibleApproverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApprover)(nil)).Elem()
}

func (o EligibleApproverArrayOutput) ToEligibleApproverArrayOutput() EligibleApproverArrayOutput {
	return o
}

func (o EligibleApproverArrayOutput) ToEligibleApproverArrayOutputWithContext(ctx context.Context) EligibleApproverArrayOutput {
	return o
}

func (o EligibleApproverArrayOutput) Index(i pulumi.IntInput) EligibleApproverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EligibleApprover {
		return vs[0].([]EligibleApprover)[vs[1].(int)]
	}).(EligibleApproverOutput)
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApproverResponse struct {
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
}

// EligibleApproverResponseInput is an input type that accepts EligibleApproverResponseArgs and EligibleApproverResponseOutput values.
// You can construct a concrete instance of `EligibleApproverResponseInput` via:
//
//          EligibleApproverResponseArgs{...}
type EligibleApproverResponseInput interface {
	pulumi.Input

	ToEligibleApproverResponseOutput() EligibleApproverResponseOutput
	ToEligibleApproverResponseOutputWithContext(context.Context) EligibleApproverResponseOutput
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApproverResponseArgs struct {
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
}

func (EligibleApproverResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApproverResponse)(nil)).Elem()
}

func (i EligibleApproverResponseArgs) ToEligibleApproverResponseOutput() EligibleApproverResponseOutput {
	return i.ToEligibleApproverResponseOutputWithContext(context.Background())
}

func (i EligibleApproverResponseArgs) ToEligibleApproverResponseOutputWithContext(ctx context.Context) EligibleApproverResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverResponseOutput)
}

// EligibleApproverResponseArrayInput is an input type that accepts EligibleApproverResponseArray and EligibleApproverResponseArrayOutput values.
// You can construct a concrete instance of `EligibleApproverResponseArrayInput` via:
//
//          EligibleApproverResponseArray{ EligibleApproverResponseArgs{...} }
type EligibleApproverResponseArrayInput interface {
	pulumi.Input

	ToEligibleApproverResponseArrayOutput() EligibleApproverResponseArrayOutput
	ToEligibleApproverResponseArrayOutputWithContext(context.Context) EligibleApproverResponseArrayOutput
}

type EligibleApproverResponseArray []EligibleApproverResponseInput

func (EligibleApproverResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApproverResponse)(nil)).Elem()
}

func (i EligibleApproverResponseArray) ToEligibleApproverResponseArrayOutput() EligibleApproverResponseArrayOutput {
	return i.ToEligibleApproverResponseArrayOutputWithContext(context.Background())
}

func (i EligibleApproverResponseArray) ToEligibleApproverResponseArrayOutputWithContext(ctx context.Context) EligibleApproverResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleApproverResponseArrayOutput)
}

// Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.
type EligibleApproverResponseOutput struct{ *pulumi.OutputState }

func (EligibleApproverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleApproverResponse)(nil)).Elem()
}

func (o EligibleApproverResponseOutput) ToEligibleApproverResponseOutput() EligibleApproverResponseOutput {
	return o
}

func (o EligibleApproverResponseOutput) ToEligibleApproverResponseOutputWithContext(ctx context.Context) EligibleApproverResponseOutput {
	return o
}

// The identifier of the Azure Active Directory principal.
func (o EligibleApproverResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleApproverResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o EligibleApproverResponseOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleApproverResponse) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

type EligibleApproverResponseArrayOutput struct{ *pulumi.OutputState }

func (EligibleApproverResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleApproverResponse)(nil)).Elem()
}

func (o EligibleApproverResponseArrayOutput) ToEligibleApproverResponseArrayOutput() EligibleApproverResponseArrayOutput {
	return o
}

func (o EligibleApproverResponseArrayOutput) ToEligibleApproverResponseArrayOutputWithContext(ctx context.Context) EligibleApproverResponseArrayOutput {
	return o
}

func (o EligibleApproverResponseArrayOutput) Index(i pulumi.IntInput) EligibleApproverResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EligibleApproverResponse {
		return vs[0].([]EligibleApproverResponse)[vs[1].(int)]
	}).(EligibleApproverResponseOutput)
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorization struct {
	// The just-in-time access policy setting.
	JustInTimeAccessPolicy *JustInTimeAccessPolicy `pulumi:"justInTimeAccessPolicy"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// EligibleAuthorizationInput is an input type that accepts EligibleAuthorizationArgs and EligibleAuthorizationOutput values.
// You can construct a concrete instance of `EligibleAuthorizationInput` via:
//
//          EligibleAuthorizationArgs{...}
type EligibleAuthorizationInput interface {
	pulumi.Input

	ToEligibleAuthorizationOutput() EligibleAuthorizationOutput
	ToEligibleAuthorizationOutputWithContext(context.Context) EligibleAuthorizationOutput
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorizationArgs struct {
	// The just-in-time access policy setting.
	JustInTimeAccessPolicy JustInTimeAccessPolicyPtrInput `pulumi:"justInTimeAccessPolicy"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (EligibleAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleAuthorization)(nil)).Elem()
}

func (i EligibleAuthorizationArgs) ToEligibleAuthorizationOutput() EligibleAuthorizationOutput {
	return i.ToEligibleAuthorizationOutputWithContext(context.Background())
}

func (i EligibleAuthorizationArgs) ToEligibleAuthorizationOutputWithContext(ctx context.Context) EligibleAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleAuthorizationOutput)
}

// EligibleAuthorizationArrayInput is an input type that accepts EligibleAuthorizationArray and EligibleAuthorizationArrayOutput values.
// You can construct a concrete instance of `EligibleAuthorizationArrayInput` via:
//
//          EligibleAuthorizationArray{ EligibleAuthorizationArgs{...} }
type EligibleAuthorizationArrayInput interface {
	pulumi.Input

	ToEligibleAuthorizationArrayOutput() EligibleAuthorizationArrayOutput
	ToEligibleAuthorizationArrayOutputWithContext(context.Context) EligibleAuthorizationArrayOutput
}

type EligibleAuthorizationArray []EligibleAuthorizationInput

func (EligibleAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleAuthorization)(nil)).Elem()
}

func (i EligibleAuthorizationArray) ToEligibleAuthorizationArrayOutput() EligibleAuthorizationArrayOutput {
	return i.ToEligibleAuthorizationArrayOutputWithContext(context.Background())
}

func (i EligibleAuthorizationArray) ToEligibleAuthorizationArrayOutputWithContext(ctx context.Context) EligibleAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleAuthorizationArrayOutput)
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorizationOutput struct{ *pulumi.OutputState }

func (EligibleAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleAuthorization)(nil)).Elem()
}

func (o EligibleAuthorizationOutput) ToEligibleAuthorizationOutput() EligibleAuthorizationOutput {
	return o
}

func (o EligibleAuthorizationOutput) ToEligibleAuthorizationOutputWithContext(ctx context.Context) EligibleAuthorizationOutput {
	return o
}

// The just-in-time access policy setting.
func (o EligibleAuthorizationOutput) JustInTimeAccessPolicy() JustInTimeAccessPolicyPtrOutput {
	return o.ApplyT(func(v EligibleAuthorization) *JustInTimeAccessPolicy { return v.JustInTimeAccessPolicy }).(JustInTimeAccessPolicyPtrOutput)
}

// The identifier of the Azure Active Directory principal.
func (o EligibleAuthorizationOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleAuthorization) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o EligibleAuthorizationOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleAuthorization) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
func (o EligibleAuthorizationOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleAuthorization) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type EligibleAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (EligibleAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleAuthorization)(nil)).Elem()
}

func (o EligibleAuthorizationArrayOutput) ToEligibleAuthorizationArrayOutput() EligibleAuthorizationArrayOutput {
	return o
}

func (o EligibleAuthorizationArrayOutput) ToEligibleAuthorizationArrayOutputWithContext(ctx context.Context) EligibleAuthorizationArrayOutput {
	return o
}

func (o EligibleAuthorizationArrayOutput) Index(i pulumi.IntInput) EligibleAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EligibleAuthorization {
		return vs[0].([]EligibleAuthorization)[vs[1].(int)]
	}).(EligibleAuthorizationOutput)
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorizationResponse struct {
	// The just-in-time access policy setting.
	JustInTimeAccessPolicy *JustInTimeAccessPolicyResponse `pulumi:"justInTimeAccessPolicy"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId string `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName *string `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// EligibleAuthorizationResponseInput is an input type that accepts EligibleAuthorizationResponseArgs and EligibleAuthorizationResponseOutput values.
// You can construct a concrete instance of `EligibleAuthorizationResponseInput` via:
//
//          EligibleAuthorizationResponseArgs{...}
type EligibleAuthorizationResponseInput interface {
	pulumi.Input

	ToEligibleAuthorizationResponseOutput() EligibleAuthorizationResponseOutput
	ToEligibleAuthorizationResponseOutputWithContext(context.Context) EligibleAuthorizationResponseOutput
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorizationResponseArgs struct {
	// The just-in-time access policy setting.
	JustInTimeAccessPolicy JustInTimeAccessPolicyResponsePtrInput `pulumi:"justInTimeAccessPolicy"`
	// The identifier of the Azure Active Directory principal.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The display name of the Azure Active Directory principal.
	PrincipalIdDisplayName pulumi.StringPtrInput `pulumi:"principalIdDisplayName"`
	// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
	RoleDefinitionId pulumi.StringInput `pulumi:"roleDefinitionId"`
}

func (EligibleAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleAuthorizationResponse)(nil)).Elem()
}

func (i EligibleAuthorizationResponseArgs) ToEligibleAuthorizationResponseOutput() EligibleAuthorizationResponseOutput {
	return i.ToEligibleAuthorizationResponseOutputWithContext(context.Background())
}

func (i EligibleAuthorizationResponseArgs) ToEligibleAuthorizationResponseOutputWithContext(ctx context.Context) EligibleAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleAuthorizationResponseOutput)
}

// EligibleAuthorizationResponseArrayInput is an input type that accepts EligibleAuthorizationResponseArray and EligibleAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `EligibleAuthorizationResponseArrayInput` via:
//
//          EligibleAuthorizationResponseArray{ EligibleAuthorizationResponseArgs{...} }
type EligibleAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToEligibleAuthorizationResponseArrayOutput() EligibleAuthorizationResponseArrayOutput
	ToEligibleAuthorizationResponseArrayOutputWithContext(context.Context) EligibleAuthorizationResponseArrayOutput
}

type EligibleAuthorizationResponseArray []EligibleAuthorizationResponseInput

func (EligibleAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleAuthorizationResponse)(nil)).Elem()
}

func (i EligibleAuthorizationResponseArray) ToEligibleAuthorizationResponseArrayOutput() EligibleAuthorizationResponseArrayOutput {
	return i.ToEligibleAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i EligibleAuthorizationResponseArray) ToEligibleAuthorizationResponseArrayOutputWithContext(ctx context.Context) EligibleAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleAuthorizationResponseArrayOutput)
}

// The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.
type EligibleAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (EligibleAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleAuthorizationResponse)(nil)).Elem()
}

func (o EligibleAuthorizationResponseOutput) ToEligibleAuthorizationResponseOutput() EligibleAuthorizationResponseOutput {
	return o
}

func (o EligibleAuthorizationResponseOutput) ToEligibleAuthorizationResponseOutputWithContext(ctx context.Context) EligibleAuthorizationResponseOutput {
	return o
}

// The just-in-time access policy setting.
func (o EligibleAuthorizationResponseOutput) JustInTimeAccessPolicy() JustInTimeAccessPolicyResponsePtrOutput {
	return o.ApplyT(func(v EligibleAuthorizationResponse) *JustInTimeAccessPolicyResponse { return v.JustInTimeAccessPolicy }).(JustInTimeAccessPolicyResponsePtrOutput)
}

// The identifier of the Azure Active Directory principal.
func (o EligibleAuthorizationResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleAuthorizationResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The display name of the Azure Active Directory principal.
func (o EligibleAuthorizationResponseOutput) PrincipalIdDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleAuthorizationResponse) *string { return v.PrincipalIdDisplayName }).(pulumi.StringPtrOutput)
}

// The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope.
func (o EligibleAuthorizationResponseOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v EligibleAuthorizationResponse) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

type EligibleAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (EligibleAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EligibleAuthorizationResponse)(nil)).Elem()
}

func (o EligibleAuthorizationResponseArrayOutput) ToEligibleAuthorizationResponseArrayOutput() EligibleAuthorizationResponseArrayOutput {
	return o
}

func (o EligibleAuthorizationResponseArrayOutput) ToEligibleAuthorizationResponseArrayOutputWithContext(ctx context.Context) EligibleAuthorizationResponseArrayOutput {
	return o
}

func (o EligibleAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) EligibleAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EligibleAuthorizationResponse {
		return vs[0].([]EligibleAuthorizationResponse)[vs[1].(int)]
	}).(EligibleAuthorizationResponseOutput)
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicy struct {
	// The list of managedByTenant approvers for the eligible authorization.
	ManagedByTenantApprovers []EligibleApprover `pulumi:"managedByTenantApprovers"`
	// The maximum access duration in ISO 8601 format for just-in-time access requests.
	MaximumActivationDuration *string `pulumi:"maximumActivationDuration"`
	// The multi-factor authorization provider to be used for just-in-time access requests.
	MultiFactorAuthProvider string `pulumi:"multiFactorAuthProvider"`
}

// JustInTimeAccessPolicyInput is an input type that accepts JustInTimeAccessPolicyArgs and JustInTimeAccessPolicyOutput values.
// You can construct a concrete instance of `JustInTimeAccessPolicyInput` via:
//
//          JustInTimeAccessPolicyArgs{...}
type JustInTimeAccessPolicyInput interface {
	pulumi.Input

	ToJustInTimeAccessPolicyOutput() JustInTimeAccessPolicyOutput
	ToJustInTimeAccessPolicyOutputWithContext(context.Context) JustInTimeAccessPolicyOutput
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicyArgs struct {
	// The list of managedByTenant approvers for the eligible authorization.
	ManagedByTenantApprovers EligibleApproverArrayInput `pulumi:"managedByTenantApprovers"`
	// The maximum access duration in ISO 8601 format for just-in-time access requests.
	MaximumActivationDuration pulumi.StringPtrInput `pulumi:"maximumActivationDuration"`
	// The multi-factor authorization provider to be used for just-in-time access requests.
	MultiFactorAuthProvider pulumi.StringInput `pulumi:"multiFactorAuthProvider"`
}

func (JustInTimeAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JustInTimeAccessPolicy)(nil)).Elem()
}

func (i JustInTimeAccessPolicyArgs) ToJustInTimeAccessPolicyOutput() JustInTimeAccessPolicyOutput {
	return i.ToJustInTimeAccessPolicyOutputWithContext(context.Background())
}

func (i JustInTimeAccessPolicyArgs) ToJustInTimeAccessPolicyOutputWithContext(ctx context.Context) JustInTimeAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyOutput)
}

func (i JustInTimeAccessPolicyArgs) ToJustInTimeAccessPolicyPtrOutput() JustInTimeAccessPolicyPtrOutput {
	return i.ToJustInTimeAccessPolicyPtrOutputWithContext(context.Background())
}

func (i JustInTimeAccessPolicyArgs) ToJustInTimeAccessPolicyPtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyOutput).ToJustInTimeAccessPolicyPtrOutputWithContext(ctx)
}

// JustInTimeAccessPolicyPtrInput is an input type that accepts JustInTimeAccessPolicyArgs, JustInTimeAccessPolicyPtr and JustInTimeAccessPolicyPtrOutput values.
// You can construct a concrete instance of `JustInTimeAccessPolicyPtrInput` via:
//
//          JustInTimeAccessPolicyArgs{...}
//
//  or:
//
//          nil
type JustInTimeAccessPolicyPtrInput interface {
	pulumi.Input

	ToJustInTimeAccessPolicyPtrOutput() JustInTimeAccessPolicyPtrOutput
	ToJustInTimeAccessPolicyPtrOutputWithContext(context.Context) JustInTimeAccessPolicyPtrOutput
}

type justInTimeAccessPolicyPtrType JustInTimeAccessPolicyArgs

func JustInTimeAccessPolicyPtr(v *JustInTimeAccessPolicyArgs) JustInTimeAccessPolicyPtrInput {
	return (*justInTimeAccessPolicyPtrType)(v)
}

func (*justInTimeAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JustInTimeAccessPolicy)(nil)).Elem()
}

func (i *justInTimeAccessPolicyPtrType) ToJustInTimeAccessPolicyPtrOutput() JustInTimeAccessPolicyPtrOutput {
	return i.ToJustInTimeAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *justInTimeAccessPolicyPtrType) ToJustInTimeAccessPolicyPtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyPtrOutput)
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicyOutput struct{ *pulumi.OutputState }

func (JustInTimeAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JustInTimeAccessPolicy)(nil)).Elem()
}

func (o JustInTimeAccessPolicyOutput) ToJustInTimeAccessPolicyOutput() JustInTimeAccessPolicyOutput {
	return o
}

func (o JustInTimeAccessPolicyOutput) ToJustInTimeAccessPolicyOutputWithContext(ctx context.Context) JustInTimeAccessPolicyOutput {
	return o
}

func (o JustInTimeAccessPolicyOutput) ToJustInTimeAccessPolicyPtrOutput() JustInTimeAccessPolicyPtrOutput {
	return o.ToJustInTimeAccessPolicyPtrOutputWithContext(context.Background())
}

func (o JustInTimeAccessPolicyOutput) ToJustInTimeAccessPolicyPtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyPtrOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicy) *JustInTimeAccessPolicy {
		return &v
	}).(JustInTimeAccessPolicyPtrOutput)
}

// The list of managedByTenant approvers for the eligible authorization.
func (o JustInTimeAccessPolicyOutput) ManagedByTenantApprovers() EligibleApproverArrayOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicy) []EligibleApprover { return v.ManagedByTenantApprovers }).(EligibleApproverArrayOutput)
}

// The maximum access duration in ISO 8601 format for just-in-time access requests.
func (o JustInTimeAccessPolicyOutput) MaximumActivationDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicy) *string { return v.MaximumActivationDuration }).(pulumi.StringPtrOutput)
}

// The multi-factor authorization provider to be used for just-in-time access requests.
func (o JustInTimeAccessPolicyOutput) MultiFactorAuthProvider() pulumi.StringOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicy) string { return v.MultiFactorAuthProvider }).(pulumi.StringOutput)
}

type JustInTimeAccessPolicyPtrOutput struct{ *pulumi.OutputState }

func (JustInTimeAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JustInTimeAccessPolicy)(nil)).Elem()
}

func (o JustInTimeAccessPolicyPtrOutput) ToJustInTimeAccessPolicyPtrOutput() JustInTimeAccessPolicyPtrOutput {
	return o
}

func (o JustInTimeAccessPolicyPtrOutput) ToJustInTimeAccessPolicyPtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyPtrOutput {
	return o
}

func (o JustInTimeAccessPolicyPtrOutput) Elem() JustInTimeAccessPolicyOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicy) JustInTimeAccessPolicy { return *v }).(JustInTimeAccessPolicyOutput)
}

// The list of managedByTenant approvers for the eligible authorization.
func (o JustInTimeAccessPolicyPtrOutput) ManagedByTenantApprovers() EligibleApproverArrayOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicy) []EligibleApprover {
		if v == nil {
			return nil
		}
		return v.ManagedByTenantApprovers
	}).(EligibleApproverArrayOutput)
}

// The maximum access duration in ISO 8601 format for just-in-time access requests.
func (o JustInTimeAccessPolicyPtrOutput) MaximumActivationDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MaximumActivationDuration
	}).(pulumi.StringPtrOutput)
}

// The multi-factor authorization provider to be used for just-in-time access requests.
func (o JustInTimeAccessPolicyPtrOutput) MultiFactorAuthProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.MultiFactorAuthProvider
	}).(pulumi.StringPtrOutput)
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicyResponse struct {
	// The list of managedByTenant approvers for the eligible authorization.
	ManagedByTenantApprovers []EligibleApproverResponse `pulumi:"managedByTenantApprovers"`
	// The maximum access duration in ISO 8601 format for just-in-time access requests.
	MaximumActivationDuration *string `pulumi:"maximumActivationDuration"`
	// The multi-factor authorization provider to be used for just-in-time access requests.
	MultiFactorAuthProvider string `pulumi:"multiFactorAuthProvider"`
}

// JustInTimeAccessPolicyResponseInput is an input type that accepts JustInTimeAccessPolicyResponseArgs and JustInTimeAccessPolicyResponseOutput values.
// You can construct a concrete instance of `JustInTimeAccessPolicyResponseInput` via:
//
//          JustInTimeAccessPolicyResponseArgs{...}
type JustInTimeAccessPolicyResponseInput interface {
	pulumi.Input

	ToJustInTimeAccessPolicyResponseOutput() JustInTimeAccessPolicyResponseOutput
	ToJustInTimeAccessPolicyResponseOutputWithContext(context.Context) JustInTimeAccessPolicyResponseOutput
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicyResponseArgs struct {
	// The list of managedByTenant approvers for the eligible authorization.
	ManagedByTenantApprovers EligibleApproverResponseArrayInput `pulumi:"managedByTenantApprovers"`
	// The maximum access duration in ISO 8601 format for just-in-time access requests.
	MaximumActivationDuration pulumi.StringPtrInput `pulumi:"maximumActivationDuration"`
	// The multi-factor authorization provider to be used for just-in-time access requests.
	MultiFactorAuthProvider pulumi.StringInput `pulumi:"multiFactorAuthProvider"`
}

func (JustInTimeAccessPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JustInTimeAccessPolicyResponse)(nil)).Elem()
}

func (i JustInTimeAccessPolicyResponseArgs) ToJustInTimeAccessPolicyResponseOutput() JustInTimeAccessPolicyResponseOutput {
	return i.ToJustInTimeAccessPolicyResponseOutputWithContext(context.Background())
}

func (i JustInTimeAccessPolicyResponseArgs) ToJustInTimeAccessPolicyResponseOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyResponseOutput)
}

func (i JustInTimeAccessPolicyResponseArgs) ToJustInTimeAccessPolicyResponsePtrOutput() JustInTimeAccessPolicyResponsePtrOutput {
	return i.ToJustInTimeAccessPolicyResponsePtrOutputWithContext(context.Background())
}

func (i JustInTimeAccessPolicyResponseArgs) ToJustInTimeAccessPolicyResponsePtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyResponseOutput).ToJustInTimeAccessPolicyResponsePtrOutputWithContext(ctx)
}

// JustInTimeAccessPolicyResponsePtrInput is an input type that accepts JustInTimeAccessPolicyResponseArgs, JustInTimeAccessPolicyResponsePtr and JustInTimeAccessPolicyResponsePtrOutput values.
// You can construct a concrete instance of `JustInTimeAccessPolicyResponsePtrInput` via:
//
//          JustInTimeAccessPolicyResponseArgs{...}
//
//  or:
//
//          nil
type JustInTimeAccessPolicyResponsePtrInput interface {
	pulumi.Input

	ToJustInTimeAccessPolicyResponsePtrOutput() JustInTimeAccessPolicyResponsePtrOutput
	ToJustInTimeAccessPolicyResponsePtrOutputWithContext(context.Context) JustInTimeAccessPolicyResponsePtrOutput
}

type justInTimeAccessPolicyResponsePtrType JustInTimeAccessPolicyResponseArgs

func JustInTimeAccessPolicyResponsePtr(v *JustInTimeAccessPolicyResponseArgs) JustInTimeAccessPolicyResponsePtrInput {
	return (*justInTimeAccessPolicyResponsePtrType)(v)
}

func (*justInTimeAccessPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JustInTimeAccessPolicyResponse)(nil)).Elem()
}

func (i *justInTimeAccessPolicyResponsePtrType) ToJustInTimeAccessPolicyResponsePtrOutput() JustInTimeAccessPolicyResponsePtrOutput {
	return i.ToJustInTimeAccessPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *justInTimeAccessPolicyResponsePtrType) ToJustInTimeAccessPolicyResponsePtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JustInTimeAccessPolicyResponsePtrOutput)
}

// Just-in-time access policy setting.
type JustInTimeAccessPolicyResponseOutput struct{ *pulumi.OutputState }

func (JustInTimeAccessPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JustInTimeAccessPolicyResponse)(nil)).Elem()
}

func (o JustInTimeAccessPolicyResponseOutput) ToJustInTimeAccessPolicyResponseOutput() JustInTimeAccessPolicyResponseOutput {
	return o
}

func (o JustInTimeAccessPolicyResponseOutput) ToJustInTimeAccessPolicyResponseOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponseOutput {
	return o
}

func (o JustInTimeAccessPolicyResponseOutput) ToJustInTimeAccessPolicyResponsePtrOutput() JustInTimeAccessPolicyResponsePtrOutput {
	return o.ToJustInTimeAccessPolicyResponsePtrOutputWithContext(context.Background())
}

func (o JustInTimeAccessPolicyResponseOutput) ToJustInTimeAccessPolicyResponsePtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponsePtrOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicyResponse) *JustInTimeAccessPolicyResponse {
		return &v
	}).(JustInTimeAccessPolicyResponsePtrOutput)
}

// The list of managedByTenant approvers for the eligible authorization.
func (o JustInTimeAccessPolicyResponseOutput) ManagedByTenantApprovers() EligibleApproverResponseArrayOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicyResponse) []EligibleApproverResponse { return v.ManagedByTenantApprovers }).(EligibleApproverResponseArrayOutput)
}

// The maximum access duration in ISO 8601 format for just-in-time access requests.
func (o JustInTimeAccessPolicyResponseOutput) MaximumActivationDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicyResponse) *string { return v.MaximumActivationDuration }).(pulumi.StringPtrOutput)
}

// The multi-factor authorization provider to be used for just-in-time access requests.
func (o JustInTimeAccessPolicyResponseOutput) MultiFactorAuthProvider() pulumi.StringOutput {
	return o.ApplyT(func(v JustInTimeAccessPolicyResponse) string { return v.MultiFactorAuthProvider }).(pulumi.StringOutput)
}

type JustInTimeAccessPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (JustInTimeAccessPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JustInTimeAccessPolicyResponse)(nil)).Elem()
}

func (o JustInTimeAccessPolicyResponsePtrOutput) ToJustInTimeAccessPolicyResponsePtrOutput() JustInTimeAccessPolicyResponsePtrOutput {
	return o
}

func (o JustInTimeAccessPolicyResponsePtrOutput) ToJustInTimeAccessPolicyResponsePtrOutputWithContext(ctx context.Context) JustInTimeAccessPolicyResponsePtrOutput {
	return o
}

func (o JustInTimeAccessPolicyResponsePtrOutput) Elem() JustInTimeAccessPolicyResponseOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicyResponse) JustInTimeAccessPolicyResponse { return *v }).(JustInTimeAccessPolicyResponseOutput)
}

// The list of managedByTenant approvers for the eligible authorization.
func (o JustInTimeAccessPolicyResponsePtrOutput) ManagedByTenantApprovers() EligibleApproverResponseArrayOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicyResponse) []EligibleApproverResponse {
		if v == nil {
			return nil
		}
		return v.ManagedByTenantApprovers
	}).(EligibleApproverResponseArrayOutput)
}

// The maximum access duration in ISO 8601 format for just-in-time access requests.
func (o JustInTimeAccessPolicyResponsePtrOutput) MaximumActivationDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaximumActivationDuration
	}).(pulumi.StringPtrOutput)
}

// The multi-factor authorization provider to be used for just-in-time access requests.
func (o JustInTimeAccessPolicyResponsePtrOutput) MultiFactorAuthProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JustInTimeAccessPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.MultiFactorAuthProvider
	}).(pulumi.StringPtrOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type Plan struct {
	// Azure Marketplace plan name.
	Name string `pulumi:"name"`
	// Azure Marketplace product code.
	Product string `pulumi:"product"`
	// Azure Marketplace publisher ID.
	Publisher string `pulumi:"publisher"`
	// Azure Marketplace plan's version.
	Version string `pulumi:"version"`
}

// PlanInput is an input type that accepts PlanArgs and PlanOutput values.
// You can construct a concrete instance of `PlanInput` via:
//
//          PlanArgs{...}
type PlanInput interface {
	pulumi.Input

	ToPlanOutput() PlanOutput
	ToPlanOutputWithContext(context.Context) PlanOutput
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type PlanArgs struct {
	// Azure Marketplace plan name.
	Name pulumi.StringInput `pulumi:"name"`
	// Azure Marketplace product code.
	Product pulumi.StringInput `pulumi:"product"`
	// Azure Marketplace publisher ID.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Azure Marketplace plan's version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (i PlanArgs) ToPlanOutput() PlanOutput {
	return i.ToPlanOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput)
}

func (i PlanArgs) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i PlanArgs) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanOutput).ToPlanPtrOutputWithContext(ctx)
}

// PlanPtrInput is an input type that accepts PlanArgs, PlanPtr and PlanPtrOutput values.
// You can construct a concrete instance of `PlanPtrInput` via:
//
//          PlanArgs{...}
//
//  or:
//
//          nil
type PlanPtrInput interface {
	pulumi.Input

	ToPlanPtrOutput() PlanPtrOutput
	ToPlanPtrOutputWithContext(context.Context) PlanPtrOutput
}

type planPtrType PlanArgs

func PlanPtr(v *PlanArgs) PlanPtrInput {
	return (*planPtrType)(v)
}

func (*planPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (i *planPtrType) ToPlanPtrOutput() PlanPtrOutput {
	return i.ToPlanPtrOutputWithContext(context.Background())
}

func (i *planPtrType) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanPtrOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type PlanOutput struct{ *pulumi.OutputState }

func (PlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Plan)(nil)).Elem()
}

func (o PlanOutput) ToPlanOutput() PlanOutput {
	return o
}

func (o PlanOutput) ToPlanOutputWithContext(ctx context.Context) PlanOutput {
	return o
}

func (o PlanOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o.ToPlanPtrOutputWithContext(context.Background())
}

func (o PlanOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o.ApplyT(func(v Plan) *Plan {
		return &v
	}).(PlanPtrOutput)
}

// Azure Marketplace plan name.
func (o PlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Marketplace product code.
func (o PlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Product }).(pulumi.StringOutput)
}

// Azure Marketplace publisher ID.
func (o PlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Publisher }).(pulumi.StringOutput)
}

// Azure Marketplace plan's version.
func (o PlanOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v Plan) string { return v.Version }).(pulumi.StringOutput)
}

type PlanPtrOutput struct{ *pulumi.OutputState }

func (PlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Plan)(nil)).Elem()
}

func (o PlanPtrOutput) ToPlanPtrOutput() PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) ToPlanPtrOutputWithContext(ctx context.Context) PlanPtrOutput {
	return o
}

func (o PlanPtrOutput) Elem() PlanOutput {
	return o.ApplyT(func(v *Plan) Plan { return *v }).(PlanOutput)
}

// Azure Marketplace plan name.
func (o PlanPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace product code.
func (o PlanPtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace publisher ID.
func (o PlanPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace plan's version.
func (o PlanPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Plan) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type PlanResponse struct {
	// Azure Marketplace plan name.
	Name string `pulumi:"name"`
	// Azure Marketplace product code.
	Product string `pulumi:"product"`
	// Azure Marketplace publisher ID.
	Publisher string `pulumi:"publisher"`
	// Azure Marketplace plan's version.
	Version string `pulumi:"version"`
}

// PlanResponseInput is an input type that accepts PlanResponseArgs and PlanResponseOutput values.
// You can construct a concrete instance of `PlanResponseInput` via:
//
//          PlanResponseArgs{...}
type PlanResponseInput interface {
	pulumi.Input

	ToPlanResponseOutput() PlanResponseOutput
	ToPlanResponseOutputWithContext(context.Context) PlanResponseOutput
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type PlanResponseArgs struct {
	// Azure Marketplace plan name.
	Name pulumi.StringInput `pulumi:"name"`
	// Azure Marketplace product code.
	Product pulumi.StringInput `pulumi:"product"`
	// Azure Marketplace publisher ID.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// Azure Marketplace plan's version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PlanResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (i PlanResponseArgs) ToPlanResponseOutput() PlanResponseOutput {
	return i.ToPlanResponseOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput)
}

func (i PlanResponseArgs) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i PlanResponseArgs) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponseOutput).ToPlanResponsePtrOutputWithContext(ctx)
}

// PlanResponsePtrInput is an input type that accepts PlanResponseArgs, PlanResponsePtr and PlanResponsePtrOutput values.
// You can construct a concrete instance of `PlanResponsePtrInput` via:
//
//          PlanResponseArgs{...}
//
//  or:
//
//          nil
type PlanResponsePtrInput interface {
	pulumi.Input

	ToPlanResponsePtrOutput() PlanResponsePtrOutput
	ToPlanResponsePtrOutputWithContext(context.Context) PlanResponsePtrOutput
}

type planResponsePtrType PlanResponseArgs

func PlanResponsePtr(v *PlanResponseArgs) PlanResponsePtrInput {
	return (*planResponsePtrType)(v)
}

func (*planResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (i *planResponsePtrType) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return i.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (i *planResponsePtrType) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanResponsePtrOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
type PlanResponseOutput struct{ *pulumi.OutputState }

func (PlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanResponse)(nil)).Elem()
}

func (o PlanResponseOutput) ToPlanResponseOutput() PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponseOutputWithContext(ctx context.Context) PlanResponseOutput {
	return o
}

func (o PlanResponseOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o.ToPlanResponsePtrOutputWithContext(context.Background())
}

func (o PlanResponseOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o.ApplyT(func(v PlanResponse) *PlanResponse {
		return &v
	}).(PlanResponsePtrOutput)
}

// Azure Marketplace plan name.
func (o PlanResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Azure Marketplace product code.
func (o PlanResponseOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Product }).(pulumi.StringOutput)
}

// Azure Marketplace publisher ID.
func (o PlanResponseOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Publisher }).(pulumi.StringOutput)
}

// Azure Marketplace plan's version.
func (o PlanResponseOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PlanResponse) string { return v.Version }).(pulumi.StringOutput)
}

type PlanResponsePtrOutput struct{ *pulumi.OutputState }

func (PlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanResponse)(nil)).Elem()
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutput() PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) ToPlanResponsePtrOutputWithContext(ctx context.Context) PlanResponsePtrOutput {
	return o
}

func (o PlanResponsePtrOutput) Elem() PlanResponseOutput {
	return o.ApplyT(func(v *PlanResponse) PlanResponse { return *v }).(PlanResponseOutput)
}

// Azure Marketplace plan name.
func (o PlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace product code.
func (o PlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Product
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace publisher ID.
func (o PlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Azure Marketplace plan's version.
func (o PlanResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlanResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// The properties of the registration assignment.
type RegistrationAssignmentProperties struct {
	// The fully qualified path of the registration definition.
	RegistrationDefinitionId string `pulumi:"registrationDefinitionId"`
}

// RegistrationAssignmentPropertiesInput is an input type that accepts RegistrationAssignmentPropertiesArgs and RegistrationAssignmentPropertiesOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesInput` via:
//
//          RegistrationAssignmentPropertiesArgs{...}
type RegistrationAssignmentPropertiesInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesOutput() RegistrationAssignmentPropertiesOutput
	ToRegistrationAssignmentPropertiesOutputWithContext(context.Context) RegistrationAssignmentPropertiesOutput
}

// The properties of the registration assignment.
type RegistrationAssignmentPropertiesArgs struct {
	// The fully qualified path of the registration definition.
	RegistrationDefinitionId pulumi.StringInput `pulumi:"registrationDefinitionId"`
}

func (RegistrationAssignmentPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentProperties)(nil)).Elem()
}

func (i RegistrationAssignmentPropertiesArgs) ToRegistrationAssignmentPropertiesOutput() RegistrationAssignmentPropertiesOutput {
	return i.ToRegistrationAssignmentPropertiesOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesArgs) ToRegistrationAssignmentPropertiesOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesOutput)
}

func (i RegistrationAssignmentPropertiesArgs) ToRegistrationAssignmentPropertiesPtrOutput() RegistrationAssignmentPropertiesPtrOutput {
	return i.ToRegistrationAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesArgs) ToRegistrationAssignmentPropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesOutput).ToRegistrationAssignmentPropertiesPtrOutputWithContext(ctx)
}

// RegistrationAssignmentPropertiesPtrInput is an input type that accepts RegistrationAssignmentPropertiesArgs, RegistrationAssignmentPropertiesPtr and RegistrationAssignmentPropertiesPtrOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesPtrInput` via:
//
//          RegistrationAssignmentPropertiesArgs{...}
//
//  or:
//
//          nil
type RegistrationAssignmentPropertiesPtrInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesPtrOutput() RegistrationAssignmentPropertiesPtrOutput
	ToRegistrationAssignmentPropertiesPtrOutputWithContext(context.Context) RegistrationAssignmentPropertiesPtrOutput
}

type registrationAssignmentPropertiesPtrType RegistrationAssignmentPropertiesArgs

func RegistrationAssignmentPropertiesPtr(v *RegistrationAssignmentPropertiesArgs) RegistrationAssignmentPropertiesPtrInput {
	return (*registrationAssignmentPropertiesPtrType)(v)
}

func (*registrationAssignmentPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentProperties)(nil)).Elem()
}

func (i *registrationAssignmentPropertiesPtrType) ToRegistrationAssignmentPropertiesPtrOutput() RegistrationAssignmentPropertiesPtrOutput {
	return i.ToRegistrationAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (i *registrationAssignmentPropertiesPtrType) ToRegistrationAssignmentPropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesPtrOutput)
}

// The properties of the registration assignment.
type RegistrationAssignmentPropertiesOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentProperties)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesOutput) ToRegistrationAssignmentPropertiesOutput() RegistrationAssignmentPropertiesOutput {
	return o
}

func (o RegistrationAssignmentPropertiesOutput) ToRegistrationAssignmentPropertiesOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesOutput {
	return o
}

func (o RegistrationAssignmentPropertiesOutput) ToRegistrationAssignmentPropertiesPtrOutput() RegistrationAssignmentPropertiesPtrOutput {
	return o.ToRegistrationAssignmentPropertiesPtrOutputWithContext(context.Background())
}

func (o RegistrationAssignmentPropertiesOutput) ToRegistrationAssignmentPropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentProperties) *RegistrationAssignmentProperties {
		return &v
	}).(RegistrationAssignmentPropertiesPtrOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesOutput) RegistrationDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentProperties) string { return v.RegistrationDefinitionId }).(pulumi.StringOutput)
}

type RegistrationAssignmentPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentProperties)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesPtrOutput) ToRegistrationAssignmentPropertiesPtrOutput() RegistrationAssignmentPropertiesPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesPtrOutput) ToRegistrationAssignmentPropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesPtrOutput) Elem() RegistrationAssignmentPropertiesOutput {
	return o.ApplyT(func(v *RegistrationAssignmentProperties) RegistrationAssignmentProperties { return *v }).(RegistrationAssignmentPropertiesOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesPtrOutput) RegistrationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrationDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The properties of the registration assignment.
type RegistrationAssignmentPropertiesResponse struct {
	// The current provisioning state of the registration assignment.
	ProvisioningState string `pulumi:"provisioningState"`
	// The registration definition associated with the registration assignment.
	RegistrationDefinition RegistrationAssignmentPropertiesResponseRegistrationDefinition `pulumi:"registrationDefinition"`
	// The fully qualified path of the registration definition.
	RegistrationDefinitionId string `pulumi:"registrationDefinitionId"`
}

// RegistrationAssignmentPropertiesResponseInput is an input type that accepts RegistrationAssignmentPropertiesResponseArgs and RegistrationAssignmentPropertiesResponseOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponseInput` via:
//
//          RegistrationAssignmentPropertiesResponseArgs{...}
type RegistrationAssignmentPropertiesResponseInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponseOutput() RegistrationAssignmentPropertiesResponseOutput
	ToRegistrationAssignmentPropertiesResponseOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponseOutput
}

// The properties of the registration assignment.
type RegistrationAssignmentPropertiesResponseArgs struct {
	// The current provisioning state of the registration assignment.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The registration definition associated with the registration assignment.
	RegistrationDefinition RegistrationAssignmentPropertiesResponseRegistrationDefinitionInput `pulumi:"registrationDefinition"`
	// The fully qualified path of the registration definition.
	RegistrationDefinitionId pulumi.StringInput `pulumi:"registrationDefinitionId"`
}

func (RegistrationAssignmentPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponse)(nil)).Elem()
}

func (i RegistrationAssignmentPropertiesResponseArgs) ToRegistrationAssignmentPropertiesResponseOutput() RegistrationAssignmentPropertiesResponseOutput {
	return i.ToRegistrationAssignmentPropertiesResponseOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponseArgs) ToRegistrationAssignmentPropertiesResponseOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponseOutput)
}

func (i RegistrationAssignmentPropertiesResponseArgs) ToRegistrationAssignmentPropertiesResponsePtrOutput() RegistrationAssignmentPropertiesResponsePtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponseArgs) ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponseOutput).ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(ctx)
}

// RegistrationAssignmentPropertiesResponsePtrInput is an input type that accepts RegistrationAssignmentPropertiesResponseArgs, RegistrationAssignmentPropertiesResponsePtr and RegistrationAssignmentPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponsePtrInput` via:
//
//          RegistrationAssignmentPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RegistrationAssignmentPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponsePtrOutput() RegistrationAssignmentPropertiesResponsePtrOutput
	ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponsePtrOutput
}

type registrationAssignmentPropertiesResponsePtrType RegistrationAssignmentPropertiesResponseArgs

func RegistrationAssignmentPropertiesResponsePtr(v *RegistrationAssignmentPropertiesResponseArgs) RegistrationAssignmentPropertiesResponsePtrInput {
	return (*registrationAssignmentPropertiesResponsePtrType)(v)
}

func (*registrationAssignmentPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponse)(nil)).Elem()
}

func (i *registrationAssignmentPropertiesResponsePtrType) ToRegistrationAssignmentPropertiesResponsePtrOutput() RegistrationAssignmentPropertiesResponsePtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *registrationAssignmentPropertiesResponsePtrType) ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponsePtrOutput)
}

// The properties of the registration assignment.
type RegistrationAssignmentPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponse)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponseOutput) ToRegistrationAssignmentPropertiesResponseOutput() RegistrationAssignmentPropertiesResponseOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseOutput) ToRegistrationAssignmentPropertiesResponseOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseOutput) ToRegistrationAssignmentPropertiesResponsePtrOutput() RegistrationAssignmentPropertiesResponsePtrOutput {
	return o.ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RegistrationAssignmentPropertiesResponseOutput) ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponse) *RegistrationAssignmentPropertiesResponse {
		return &v
	}).(RegistrationAssignmentPropertiesResponsePtrOutput)
}

// The current provisioning state of the registration assignment.
func (o RegistrationAssignmentPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The registration definition associated with the registration assignment.
func (o RegistrationAssignmentPropertiesResponseOutput) RegistrationDefinition() RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponse) RegistrationAssignmentPropertiesResponseRegistrationDefinition {
		return v.RegistrationDefinition
	}).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesResponseOutput) RegistrationDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponse) string { return v.RegistrationDefinitionId }).(pulumi.StringOutput)
}

type RegistrationAssignmentPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponse)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponsePtrOutput) ToRegistrationAssignmentPropertiesResponsePtrOutput() RegistrationAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePtrOutput) ToRegistrationAssignmentPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePtrOutput) Elem() RegistrationAssignmentPropertiesResponseOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponse) RegistrationAssignmentPropertiesResponse { return *v }).(RegistrationAssignmentPropertiesResponseOutput)
}

// The current provisioning state of the registration assignment.
func (o RegistrationAssignmentPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The registration definition associated with the registration assignment.
func (o RegistrationAssignmentPropertiesResponsePtrOutput) RegistrationDefinition() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponse) *RegistrationAssignmentPropertiesResponseRegistrationDefinition {
		if v == nil {
			return nil
		}
		return &v.RegistrationDefinition
	}).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePtrOutput) RegistrationDefinitionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegistrationDefinitionId
	}).(pulumi.StringPtrOutput)
}

// The properties of the registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponseProperties struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations []AuthorizationResponse `pulumi:"authorizations"`
	// The description of the registration definition.
	Description *string `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations []EligibleAuthorizationResponse `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId *string `pulumi:"managedByTenantId"`
	// The name of the managedBy tenant.
	ManagedByTenantName *string `pulumi:"managedByTenantName"`
	// The identifier of the managed tenant.
	ManageeTenantId *string `pulumi:"manageeTenantId"`
	// The name of the managed tenant.
	ManageeTenantName *string `pulumi:"manageeTenantName"`
	// The current provisioning state of the registration definition.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the registration definition.
	RegistrationDefinitionName *string `pulumi:"registrationDefinitionName"`
}

// RegistrationAssignmentPropertiesResponsePropertiesInput is an input type that accepts RegistrationAssignmentPropertiesResponsePropertiesArgs and RegistrationAssignmentPropertiesResponsePropertiesOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponsePropertiesInput` via:
//
//          RegistrationAssignmentPropertiesResponsePropertiesArgs{...}
type RegistrationAssignmentPropertiesResponsePropertiesInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponsePropertiesOutput() RegistrationAssignmentPropertiesResponsePropertiesOutput
	ToRegistrationAssignmentPropertiesResponsePropertiesOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponsePropertiesOutput
}

// The properties of the registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponsePropertiesArgs struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations AuthorizationResponseArrayInput `pulumi:"authorizations"`
	// The description of the registration definition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations EligibleAuthorizationResponseArrayInput `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId pulumi.StringPtrInput `pulumi:"managedByTenantId"`
	// The name of the managedBy tenant.
	ManagedByTenantName pulumi.StringPtrInput `pulumi:"managedByTenantName"`
	// The identifier of the managed tenant.
	ManageeTenantId pulumi.StringPtrInput `pulumi:"manageeTenantId"`
	// The name of the managed tenant.
	ManageeTenantName pulumi.StringPtrInput `pulumi:"manageeTenantName"`
	// The current provisioning state of the registration definition.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The name of the registration definition.
	RegistrationDefinitionName pulumi.StringPtrInput `pulumi:"registrationDefinitionName"`
}

func (RegistrationAssignmentPropertiesResponsePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponseProperties)(nil)).Elem()
}

func (i RegistrationAssignmentPropertiesResponsePropertiesArgs) ToRegistrationAssignmentPropertiesResponsePropertiesOutput() RegistrationAssignmentPropertiesResponsePropertiesOutput {
	return i.ToRegistrationAssignmentPropertiesResponsePropertiesOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponsePropertiesArgs) ToRegistrationAssignmentPropertiesResponsePropertiesOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponsePropertiesOutput)
}

func (i RegistrationAssignmentPropertiesResponsePropertiesArgs) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutput() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponsePropertiesArgs) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponsePropertiesOutput).ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(ctx)
}

// RegistrationAssignmentPropertiesResponsePropertiesPtrInput is an input type that accepts RegistrationAssignmentPropertiesResponsePropertiesArgs, RegistrationAssignmentPropertiesResponsePropertiesPtr and RegistrationAssignmentPropertiesResponsePropertiesPtrOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponsePropertiesPtrInput` via:
//
//          RegistrationAssignmentPropertiesResponsePropertiesArgs{...}
//
//  or:
//
//          nil
type RegistrationAssignmentPropertiesResponsePropertiesPtrInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutput() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput
	ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponsePropertiesPtrOutput
}

type registrationAssignmentPropertiesResponsePropertiesPtrType RegistrationAssignmentPropertiesResponsePropertiesArgs

func RegistrationAssignmentPropertiesResponsePropertiesPtr(v *RegistrationAssignmentPropertiesResponsePropertiesArgs) RegistrationAssignmentPropertiesResponsePropertiesPtrInput {
	return (*registrationAssignmentPropertiesResponsePropertiesPtrType)(v)
}

func (*registrationAssignmentPropertiesResponsePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponseProperties)(nil)).Elem()
}

func (i *registrationAssignmentPropertiesResponsePropertiesPtrType) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutput() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (i *registrationAssignmentPropertiesResponsePropertiesPtrType) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponsePropertiesPtrOutput)
}

// The properties of the registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponsePropertiesOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponseProperties)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ToRegistrationAssignmentPropertiesResponsePropertiesOutput() RegistrationAssignmentPropertiesResponsePropertiesOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ToRegistrationAssignmentPropertiesResponsePropertiesOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutput() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o.ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(context.Background())
}

func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *RegistrationAssignmentPropertiesResponseProperties {
		return &v
	}).(RegistrationAssignmentPropertiesResponsePropertiesPtrOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) Authorizations() AuthorizationResponseArrayOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) []AuthorizationResponse {
		return v.Authorizations
	}).(AuthorizationResponseArrayOutput)
}

// The description of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) EligibleAuthorizations() EligibleAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) []EligibleAuthorizationResponse {
		return v.EligibleAuthorizations
	}).(EligibleAuthorizationResponseArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ManagedByTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.ManagedByTenantId }).(pulumi.StringPtrOutput)
}

// The name of the managedBy tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ManagedByTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.ManagedByTenantName }).(pulumi.StringPtrOutput)
}

// The identifier of the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ManageeTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.ManageeTenantId }).(pulumi.StringPtrOutput)
}

// The name of the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ManageeTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.ManageeTenantName }).(pulumi.StringPtrOutput)
}

// The current provisioning state of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The name of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseProperties) *string {
		return v.RegistrationDefinitionName
	}).(pulumi.StringPtrOutput)
}

type RegistrationAssignmentPropertiesResponsePropertiesPtrOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponseProperties)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutput() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ToRegistrationAssignmentPropertiesResponsePropertiesPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) Elem() RegistrationAssignmentPropertiesResponsePropertiesOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) RegistrationAssignmentPropertiesResponseProperties {
		return *v
	}).(RegistrationAssignmentPropertiesResponsePropertiesOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) Authorizations() AuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) []AuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(AuthorizationResponseArrayOutput)
}

// The description of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) EligibleAuthorizations() EligibleAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) []EligibleAuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.EligibleAuthorizations
	}).(EligibleAuthorizationResponseArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ManagedByTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedByTenantId
	}).(pulumi.StringPtrOutput)
}

// The name of the managedBy tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ManagedByTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedByTenantName
	}).(pulumi.StringPtrOutput)
}

// The identifier of the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ManageeTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManageeTenantId
	}).(pulumi.StringPtrOutput)
}

// The name of the managed tenant.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ManageeTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManageeTenantName
	}).(pulumi.StringPtrOutput)
}

// The current provisioning state of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The name of the registration definition.
func (o RegistrationAssignmentPropertiesResponsePropertiesPtrOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseProperties) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDefinitionName
	}).(pulumi.StringPtrOutput)
}

// The registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponseRegistrationDefinition struct {
	// The fully qualified path of the registration definition.
	Id string `pulumi:"id"`
	// The name of the registration definition.
	Name string `pulumi:"name"`
	// The details for the Managed Services offer’s plan in Azure Marketplace.
	Plan *PlanResponse `pulumi:"plan"`
	// The properties of the registration definition associated with the registration assignment.
	Properties *RegistrationAssignmentPropertiesResponseProperties `pulumi:"properties"`
	// The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
	Type string `pulumi:"type"`
}

// RegistrationAssignmentPropertiesResponseRegistrationDefinitionInput is an input type that accepts RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs and RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponseRegistrationDefinitionInput` via:
//
//          RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs{...}
type RegistrationAssignmentPropertiesResponseRegistrationDefinitionInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput
	ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput
}

// The registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs struct {
	// The fully qualified path of the registration definition.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the registration definition.
	Name pulumi.StringInput `pulumi:"name"`
	// The details for the Managed Services offer’s plan in Azure Marketplace.
	Plan PlanResponsePtrInput `pulumi:"plan"`
	// The properties of the registration definition associated with the registration assignment.
	Properties RegistrationAssignmentPropertiesResponsePropertiesPtrInput `pulumi:"properties"`
	// The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
	Type pulumi.StringInput `pulumi:"type"`
}

func (RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponseRegistrationDefinition)(nil)).Elem()
}

func (i RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return i.ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput)
}

func (i RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(context.Background())
}

func (i RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput).ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(ctx)
}

// RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrInput is an input type that accepts RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs, RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtr and RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput values.
// You can construct a concrete instance of `RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrInput` via:
//
//          RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs{...}
//
//  or:
//
//          nil
type RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrInput interface {
	pulumi.Input

	ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput
	ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput
}

type registrationAssignmentPropertiesResponseRegistrationDefinitionPtrType RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs

func RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtr(v *RegistrationAssignmentPropertiesResponseRegistrationDefinitionArgs) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrInput {
	return (*registrationAssignmentPropertiesResponseRegistrationDefinitionPtrType)(v)
}

func (*registrationAssignmentPropertiesResponseRegistrationDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponseRegistrationDefinition)(nil)).Elem()
}

func (i *registrationAssignmentPropertiesResponseRegistrationDefinitionPtrType) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return i.ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(context.Background())
}

func (i *registrationAssignmentPropertiesResponseRegistrationDefinitionPtrType) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput)
}

// The registration definition associated with the registration assignment.
type RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationAssignmentPropertiesResponseRegistrationDefinition)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return o.ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(context.Background())
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) *RegistrationAssignmentPropertiesResponseRegistrationDefinition {
		return &v
	}).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the registration definition.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) *PlanResponse { return v.Plan }).(PlanResponsePtrOutput)
}

// The properties of the registration definition associated with the registration assignment.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) Properties() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) *RegistrationAssignmentPropertiesResponseProperties {
		return v.Properties
	}).(RegistrationAssignmentPropertiesResponsePropertiesPtrOutput)
}

// The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationAssignmentPropertiesResponseRegistrationDefinition) string { return v.Type }).(pulumi.StringOutput)
}

type RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput struct{ *pulumi.OutputState }

func (RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationAssignmentPropertiesResponseRegistrationDefinition)(nil)).Elem()
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput() RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) ToRegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutputWithContext(ctx context.Context) RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput {
	return o
}

func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Elem() RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) RegistrationAssignmentPropertiesResponseRegistrationDefinition {
		return *v
	}).(RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput)
}

// The fully qualified path of the registration definition.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the registration definition.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The details for the Managed Services offer’s plan in Azure Marketplace.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Plan() PlanResponsePtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) *PlanResponse {
		if v == nil {
			return nil
		}
		return v.Plan
	}).(PlanResponsePtrOutput)
}

// The properties of the registration definition associated with the registration assignment.
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Properties() RegistrationAssignmentPropertiesResponsePropertiesPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) *RegistrationAssignmentPropertiesResponseProperties {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(RegistrationAssignmentPropertiesResponsePropertiesPtrOutput)
}

// The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).
func (o RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationAssignmentPropertiesResponseRegistrationDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The properties of a registration definition.
type RegistrationDefinitionProperties struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations []Authorization `pulumi:"authorizations"`
	// The description of the registration definition.
	Description *string `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations []EligibleAuthorization `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId string `pulumi:"managedByTenantId"`
	// The name of the registration definition.
	RegistrationDefinitionName *string `pulumi:"registrationDefinitionName"`
}

// RegistrationDefinitionPropertiesInput is an input type that accepts RegistrationDefinitionPropertiesArgs and RegistrationDefinitionPropertiesOutput values.
// You can construct a concrete instance of `RegistrationDefinitionPropertiesInput` via:
//
//          RegistrationDefinitionPropertiesArgs{...}
type RegistrationDefinitionPropertiesInput interface {
	pulumi.Input

	ToRegistrationDefinitionPropertiesOutput() RegistrationDefinitionPropertiesOutput
	ToRegistrationDefinitionPropertiesOutputWithContext(context.Context) RegistrationDefinitionPropertiesOutput
}

// The properties of a registration definition.
type RegistrationDefinitionPropertiesArgs struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations AuthorizationArrayInput `pulumi:"authorizations"`
	// The description of the registration definition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations EligibleAuthorizationArrayInput `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId pulumi.StringInput `pulumi:"managedByTenantId"`
	// The name of the registration definition.
	RegistrationDefinitionName pulumi.StringPtrInput `pulumi:"registrationDefinitionName"`
}

func (RegistrationDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationDefinitionProperties)(nil)).Elem()
}

func (i RegistrationDefinitionPropertiesArgs) ToRegistrationDefinitionPropertiesOutput() RegistrationDefinitionPropertiesOutput {
	return i.ToRegistrationDefinitionPropertiesOutputWithContext(context.Background())
}

func (i RegistrationDefinitionPropertiesArgs) ToRegistrationDefinitionPropertiesOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesOutput)
}

func (i RegistrationDefinitionPropertiesArgs) ToRegistrationDefinitionPropertiesPtrOutput() RegistrationDefinitionPropertiesPtrOutput {
	return i.ToRegistrationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i RegistrationDefinitionPropertiesArgs) ToRegistrationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesOutput).ToRegistrationDefinitionPropertiesPtrOutputWithContext(ctx)
}

// RegistrationDefinitionPropertiesPtrInput is an input type that accepts RegistrationDefinitionPropertiesArgs, RegistrationDefinitionPropertiesPtr and RegistrationDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `RegistrationDefinitionPropertiesPtrInput` via:
//
//          RegistrationDefinitionPropertiesArgs{...}
//
//  or:
//
//          nil
type RegistrationDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToRegistrationDefinitionPropertiesPtrOutput() RegistrationDefinitionPropertiesPtrOutput
	ToRegistrationDefinitionPropertiesPtrOutputWithContext(context.Context) RegistrationDefinitionPropertiesPtrOutput
}

type registrationDefinitionPropertiesPtrType RegistrationDefinitionPropertiesArgs

func RegistrationDefinitionPropertiesPtr(v *RegistrationDefinitionPropertiesArgs) RegistrationDefinitionPropertiesPtrInput {
	return (*registrationDefinitionPropertiesPtrType)(v)
}

func (*registrationDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationDefinitionProperties)(nil)).Elem()
}

func (i *registrationDefinitionPropertiesPtrType) ToRegistrationDefinitionPropertiesPtrOutput() RegistrationDefinitionPropertiesPtrOutput {
	return i.ToRegistrationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *registrationDefinitionPropertiesPtrType) ToRegistrationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesPtrOutput)
}

// The properties of a registration definition.
type RegistrationDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (RegistrationDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationDefinitionProperties)(nil)).Elem()
}

func (o RegistrationDefinitionPropertiesOutput) ToRegistrationDefinitionPropertiesOutput() RegistrationDefinitionPropertiesOutput {
	return o
}

func (o RegistrationDefinitionPropertiesOutput) ToRegistrationDefinitionPropertiesOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesOutput {
	return o
}

func (o RegistrationDefinitionPropertiesOutput) ToRegistrationDefinitionPropertiesPtrOutput() RegistrationDefinitionPropertiesPtrOutput {
	return o.ToRegistrationDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o RegistrationDefinitionPropertiesOutput) ToRegistrationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesPtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) *RegistrationDefinitionProperties {
		return &v
	}).(RegistrationDefinitionPropertiesPtrOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesOutput) Authorizations() AuthorizationArrayOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) []Authorization { return v.Authorizations }).(AuthorizationArrayOutput)
}

// The description of the registration definition.
func (o RegistrationDefinitionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesOutput) EligibleAuthorizations() EligibleAuthorizationArrayOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) []EligibleAuthorization { return v.EligibleAuthorizations }).(EligibleAuthorizationArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationDefinitionPropertiesOutput) ManagedByTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) string { return v.ManagedByTenantId }).(pulumi.StringOutput)
}

// The name of the registration definition.
func (o RegistrationDefinitionPropertiesOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionProperties) *string { return v.RegistrationDefinitionName }).(pulumi.StringPtrOutput)
}

type RegistrationDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RegistrationDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationDefinitionProperties)(nil)).Elem()
}

func (o RegistrationDefinitionPropertiesPtrOutput) ToRegistrationDefinitionPropertiesPtrOutput() RegistrationDefinitionPropertiesPtrOutput {
	return o
}

func (o RegistrationDefinitionPropertiesPtrOutput) ToRegistrationDefinitionPropertiesPtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesPtrOutput {
	return o
}

func (o RegistrationDefinitionPropertiesPtrOutput) Elem() RegistrationDefinitionPropertiesOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) RegistrationDefinitionProperties { return *v }).(RegistrationDefinitionPropertiesOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesPtrOutput) Authorizations() AuthorizationArrayOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) []Authorization {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(AuthorizationArrayOutput)
}

// The description of the registration definition.
func (o RegistrationDefinitionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesPtrOutput) EligibleAuthorizations() EligibleAuthorizationArrayOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) []EligibleAuthorization {
		if v == nil {
			return nil
		}
		return v.EligibleAuthorizations
	}).(EligibleAuthorizationArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationDefinitionPropertiesPtrOutput) ManagedByTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedByTenantId
	}).(pulumi.StringPtrOutput)
}

// The name of the registration definition.
func (o RegistrationDefinitionPropertiesPtrOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDefinitionName
	}).(pulumi.StringPtrOutput)
}

// The properties of a registration definition.
type RegistrationDefinitionPropertiesResponse struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations []AuthorizationResponse `pulumi:"authorizations"`
	// The description of the registration definition.
	Description *string `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations []EligibleAuthorizationResponse `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId string `pulumi:"managedByTenantId"`
	// The name of the managedBy tenant.
	ManagedByTenantName string `pulumi:"managedByTenantName"`
	// The current provisioning state of the registration definition.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the registration definition.
	RegistrationDefinitionName *string `pulumi:"registrationDefinitionName"`
}

// RegistrationDefinitionPropertiesResponseInput is an input type that accepts RegistrationDefinitionPropertiesResponseArgs and RegistrationDefinitionPropertiesResponseOutput values.
// You can construct a concrete instance of `RegistrationDefinitionPropertiesResponseInput` via:
//
//          RegistrationDefinitionPropertiesResponseArgs{...}
type RegistrationDefinitionPropertiesResponseInput interface {
	pulumi.Input

	ToRegistrationDefinitionPropertiesResponseOutput() RegistrationDefinitionPropertiesResponseOutput
	ToRegistrationDefinitionPropertiesResponseOutputWithContext(context.Context) RegistrationDefinitionPropertiesResponseOutput
}

// The properties of a registration definition.
type RegistrationDefinitionPropertiesResponseArgs struct {
	// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	Authorizations AuthorizationResponseArrayInput `pulumi:"authorizations"`
	// The description of the registration definition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
	EligibleAuthorizations EligibleAuthorizationResponseArrayInput `pulumi:"eligibleAuthorizations"`
	// The identifier of the managedBy tenant.
	ManagedByTenantId pulumi.StringInput `pulumi:"managedByTenantId"`
	// The name of the managedBy tenant.
	ManagedByTenantName pulumi.StringInput `pulumi:"managedByTenantName"`
	// The current provisioning state of the registration definition.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the registration definition.
	RegistrationDefinitionName pulumi.StringPtrInput `pulumi:"registrationDefinitionName"`
}

func (RegistrationDefinitionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationDefinitionPropertiesResponse)(nil)).Elem()
}

func (i RegistrationDefinitionPropertiesResponseArgs) ToRegistrationDefinitionPropertiesResponseOutput() RegistrationDefinitionPropertiesResponseOutput {
	return i.ToRegistrationDefinitionPropertiesResponseOutputWithContext(context.Background())
}

func (i RegistrationDefinitionPropertiesResponseArgs) ToRegistrationDefinitionPropertiesResponseOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesResponseOutput)
}

func (i RegistrationDefinitionPropertiesResponseArgs) ToRegistrationDefinitionPropertiesResponsePtrOutput() RegistrationDefinitionPropertiesResponsePtrOutput {
	return i.ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i RegistrationDefinitionPropertiesResponseArgs) ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesResponseOutput).ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(ctx)
}

// RegistrationDefinitionPropertiesResponsePtrInput is an input type that accepts RegistrationDefinitionPropertiesResponseArgs, RegistrationDefinitionPropertiesResponsePtr and RegistrationDefinitionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `RegistrationDefinitionPropertiesResponsePtrInput` via:
//
//          RegistrationDefinitionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type RegistrationDefinitionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToRegistrationDefinitionPropertiesResponsePtrOutput() RegistrationDefinitionPropertiesResponsePtrOutput
	ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(context.Context) RegistrationDefinitionPropertiesResponsePtrOutput
}

type registrationDefinitionPropertiesResponsePtrType RegistrationDefinitionPropertiesResponseArgs

func RegistrationDefinitionPropertiesResponsePtr(v *RegistrationDefinitionPropertiesResponseArgs) RegistrationDefinitionPropertiesResponsePtrInput {
	return (*registrationDefinitionPropertiesResponsePtrType)(v)
}

func (*registrationDefinitionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationDefinitionPropertiesResponse)(nil)).Elem()
}

func (i *registrationDefinitionPropertiesResponsePtrType) ToRegistrationDefinitionPropertiesResponsePtrOutput() RegistrationDefinitionPropertiesResponsePtrOutput {
	return i.ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *registrationDefinitionPropertiesResponsePtrType) ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistrationDefinitionPropertiesResponsePtrOutput)
}

// The properties of a registration definition.
type RegistrationDefinitionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (RegistrationDefinitionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrationDefinitionPropertiesResponse)(nil)).Elem()
}

func (o RegistrationDefinitionPropertiesResponseOutput) ToRegistrationDefinitionPropertiesResponseOutput() RegistrationDefinitionPropertiesResponseOutput {
	return o
}

func (o RegistrationDefinitionPropertiesResponseOutput) ToRegistrationDefinitionPropertiesResponseOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponseOutput {
	return o
}

func (o RegistrationDefinitionPropertiesResponseOutput) ToRegistrationDefinitionPropertiesResponsePtrOutput() RegistrationDefinitionPropertiesResponsePtrOutput {
	return o.ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o RegistrationDefinitionPropertiesResponseOutput) ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) *RegistrationDefinitionPropertiesResponse {
		return &v
	}).(RegistrationDefinitionPropertiesResponsePtrOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesResponseOutput) Authorizations() AuthorizationResponseArrayOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) []AuthorizationResponse { return v.Authorizations }).(AuthorizationResponseArrayOutput)
}

// The description of the registration definition.
func (o RegistrationDefinitionPropertiesResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesResponseOutput) EligibleAuthorizations() EligibleAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) []EligibleAuthorizationResponse {
		return v.EligibleAuthorizations
	}).(EligibleAuthorizationResponseArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationDefinitionPropertiesResponseOutput) ManagedByTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) string { return v.ManagedByTenantId }).(pulumi.StringOutput)
}

// The name of the managedBy tenant.
func (o RegistrationDefinitionPropertiesResponseOutput) ManagedByTenantName() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) string { return v.ManagedByTenantName }).(pulumi.StringOutput)
}

// The current provisioning state of the registration definition.
func (o RegistrationDefinitionPropertiesResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the registration definition.
func (o RegistrationDefinitionPropertiesResponseOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistrationDefinitionPropertiesResponse) *string { return v.RegistrationDefinitionName }).(pulumi.StringPtrOutput)
}

type RegistrationDefinitionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (RegistrationDefinitionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrationDefinitionPropertiesResponse)(nil)).Elem()
}

func (o RegistrationDefinitionPropertiesResponsePtrOutput) ToRegistrationDefinitionPropertiesResponsePtrOutput() RegistrationDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o RegistrationDefinitionPropertiesResponsePtrOutput) ToRegistrationDefinitionPropertiesResponsePtrOutputWithContext(ctx context.Context) RegistrationDefinitionPropertiesResponsePtrOutput {
	return o
}

func (o RegistrationDefinitionPropertiesResponsePtrOutput) Elem() RegistrationDefinitionPropertiesResponseOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) RegistrationDefinitionPropertiesResponse { return *v }).(RegistrationDefinitionPropertiesResponseOutput)
}

// The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) Authorizations() AuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) []AuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.Authorizations
	}).(AuthorizationResponseArrayOutput)
}

// The description of the registration definition.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) EligibleAuthorizations() EligibleAuthorizationResponseArrayOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) []EligibleAuthorizationResponse {
		if v == nil {
			return nil
		}
		return v.EligibleAuthorizations
	}).(EligibleAuthorizationResponseArrayOutput)
}

// The identifier of the managedBy tenant.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) ManagedByTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedByTenantId
	}).(pulumi.StringPtrOutput)
}

// The name of the managedBy tenant.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) ManagedByTenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ManagedByTenantName
	}).(pulumi.StringPtrOutput)
}

// The current provisioning state of the registration definition.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The name of the registration definition.
func (o RegistrationDefinitionPropertiesResponsePtrOutput) RegistrationDefinitionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistrationDefinitionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RegistrationDefinitionName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthorizationOutput{})
	pulumi.RegisterOutputType(AuthorizationArrayOutput{})
	pulumi.RegisterOutputType(AuthorizationResponseOutput{})
	pulumi.RegisterOutputType(AuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(EligibleApproverOutput{})
	pulumi.RegisterOutputType(EligibleApproverArrayOutput{})
	pulumi.RegisterOutputType(EligibleApproverResponseOutput{})
	pulumi.RegisterOutputType(EligibleApproverResponseArrayOutput{})
	pulumi.RegisterOutputType(EligibleAuthorizationOutput{})
	pulumi.RegisterOutputType(EligibleAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(EligibleAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(EligibleAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(JustInTimeAccessPolicyOutput{})
	pulumi.RegisterOutputType(JustInTimeAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(JustInTimeAccessPolicyResponseOutput{})
	pulumi.RegisterOutputType(JustInTimeAccessPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(PlanOutput{})
	pulumi.RegisterOutputType(PlanPtrOutput{})
	pulumi.RegisterOutputType(PlanResponseOutput{})
	pulumi.RegisterOutputType(PlanResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponsePropertiesOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponsePropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponseRegistrationDefinitionOutput{})
	pulumi.RegisterOutputType(RegistrationAssignmentPropertiesResponseRegistrationDefinitionPtrOutput{})
	pulumi.RegisterOutputType(RegistrationDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(RegistrationDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegistrationDefinitionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(RegistrationDefinitionPropertiesResponsePtrOutput{})
}
