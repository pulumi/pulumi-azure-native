// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200101

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data connector.
//
// Deprecated: Please use one of the variants: AADDataConnector, AATPDataConnector, ASCDataConnector, AwsCloudTrailDataConnector, MCASDataConnector, MDATPDataConnector, OfficeDataConnector, TIDataConnector.
func LookupDataConnector(ctx *pulumi.Context, args *LookupDataConnectorArgs, opts ...pulumi.InvokeOption) (*LookupDataConnectorResult, error) {
	var rv LookupDataConnectorResult
	err := ctx.Invoke("azure-native:securityinsights/v20200101:getDataConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataConnectorArgs struct {
	// Connector ID
	DataConnectorId string `pulumi:"dataConnectorId"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Data connector.
type LookupDataConnectorResult struct {
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Azure resource Id
	Id string `pulumi:"id"`
	// The data connector kind
	Kind string `pulumi:"kind"`
	// Azure resource name
	Name string `pulumi:"name"`
	// Azure resource type
	Type string `pulumi:"type"`
}

func LookupDataConnectorOutput(ctx *pulumi.Context, args LookupDataConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupDataConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataConnectorResult, error) {
			args := v.(LookupDataConnectorArgs)
			r, err := LookupDataConnector(ctx, &args, opts...)
			var s LookupDataConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataConnectorResultOutput)
}

type LookupDataConnectorOutputArgs struct {
	// Connector ID
	DataConnectorId pulumi.StringInput `pulumi:"dataConnectorId"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupDataConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataConnectorArgs)(nil)).Elem()
}

// Data connector.
type LookupDataConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupDataConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataConnectorResult)(nil)).Elem()
}

func (o LookupDataConnectorResultOutput) ToLookupDataConnectorResultOutput() LookupDataConnectorResultOutput {
	return o
}

func (o LookupDataConnectorResultOutput) ToLookupDataConnectorResultOutputWithContext(ctx context.Context) LookupDataConnectorResultOutput {
	return o
}

// Etag of the azure resource
func (o LookupDataConnectorResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataConnectorResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Azure resource Id
func (o LookupDataConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// The data connector kind
func (o LookupDataConnectorResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataConnectorResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Azure resource name
func (o LookupDataConnectorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataConnectorResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure resource type
func (o LookupDataConnectorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataConnectorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataConnectorResultOutput{})
}
