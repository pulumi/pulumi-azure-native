// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210401

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a Watchlist in Azure Security Insights.
type Watchlist struct {
	pulumi.CustomResourceState

	// The content type of the raw content. For now, only text/csv is valid
	ContentType pulumi.StringPtrOutput `pulumi:"contentType"`
	// The time the watchlist was created
	Created pulumi.StringPtrOutput `pulumi:"created"`
	// Describes a user that created the watchlist
	CreatedBy WatchlistUserInfoResponsePtrOutput `pulumi:"createdBy"`
	// The default duration of a watchlist (in ISO 8601 duration format)
	DefaultDuration pulumi.StringPtrOutput `pulumi:"defaultDuration"`
	// A description of the watchlist
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the watchlist
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// A flag that indicates if the watchlist is deleted or not
	IsDeleted pulumi.BoolPtrOutput `pulumi:"isDeleted"`
	// The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.
	ItemsSearchKey pulumi.StringOutput `pulumi:"itemsSearchKey"`
	// List of labels relevant to this watchlist
	Labels pulumi.StringArrayOutput `pulumi:"labels"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of lines in a csv content to skip before the header
	NumberOfLinesToSkip pulumi.IntPtrOutput `pulumi:"numberOfLinesToSkip"`
	// The provider of the watchlist
	Provider pulumi.StringOutput `pulumi:"provider"`
	// The raw content that represents to watchlist items to create. Example : This line will be skipped
	// header1,header2
	// value1,value2
	RawContent pulumi.StringPtrOutput `pulumi:"rawContent"`
	// The source of the watchlist
	Source pulumi.StringOutput `pulumi:"source"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The tenantId where the watchlist belongs to
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
	// The last time the watchlist was updated
	Updated pulumi.StringPtrOutput `pulumi:"updated"`
	// Describes a user that updated the watchlist
	UpdatedBy WatchlistUserInfoResponsePtrOutput `pulumi:"updatedBy"`
	// The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted
	UploadStatus pulumi.StringPtrOutput `pulumi:"uploadStatus"`
	// The alias of the watchlist
	WatchlistAlias pulumi.StringPtrOutput `pulumi:"watchlistAlias"`
	// The id (a Guid) of the watchlist
	WatchlistId pulumi.StringPtrOutput `pulumi:"watchlistId"`
	// The type of the watchlist
	WatchlistType pulumi.StringPtrOutput `pulumi:"watchlistType"`
}

// NewWatchlist registers a new resource with the given unique name, arguments, and options.
func NewWatchlist(ctx *pulumi.Context,
	name string, args *WatchlistArgs, opts ...pulumi.ResourceOption) (*Watchlist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ItemsSearchKey == nil {
		return nil, errors.New("invalid value for required argument 'ItemsSearchKey'")
	}
	if args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("invalid value for required argument 'OperationalInsightsResourceProvider'")
	}
	if args.Provider == nil {
		return nil, errors.New("invalid value for required argument 'Provider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210401:Watchlist"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights:Watchlist"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights:Watchlist"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20190101preview:Watchlist"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20190101preview:Watchlist"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20210301preview:Watchlist"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210301preview:Watchlist"),
		},
	})
	opts = append(opts, aliases)
	var resource Watchlist
	err := ctx.RegisterResource("azure-native:securityinsights/v20210401:Watchlist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWatchlist gets an existing Watchlist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWatchlist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WatchlistState, opts ...pulumi.ResourceOption) (*Watchlist, error) {
	var resource Watchlist
	err := ctx.ReadResource("azure-native:securityinsights/v20210401:Watchlist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Watchlist resources.
type watchlistState struct {
}

type WatchlistState struct {
}

func (WatchlistState) ElementType() reflect.Type {
	return reflect.TypeOf((*watchlistState)(nil)).Elem()
}

type watchlistArgs struct {
	// The content type of the raw content. For now, only text/csv is valid
	ContentType *string `pulumi:"contentType"`
	// The time the watchlist was created
	Created *string `pulumi:"created"`
	// Describes a user that created the watchlist
	CreatedBy *WatchlistUserInfo `pulumi:"createdBy"`
	// The default duration of a watchlist (in ISO 8601 duration format)
	DefaultDuration *string `pulumi:"defaultDuration"`
	// A description of the watchlist
	Description *string `pulumi:"description"`
	// The display name of the watchlist
	DisplayName string `pulumi:"displayName"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// A flag that indicates if the watchlist is deleted or not
	IsDeleted *bool `pulumi:"isDeleted"`
	// The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.
	ItemsSearchKey string `pulumi:"itemsSearchKey"`
	// List of labels relevant to this watchlist
	Labels []string `pulumi:"labels"`
	// The number of lines in a csv content to skip before the header
	NumberOfLinesToSkip *int `pulumi:"numberOfLinesToSkip"`
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// The provider of the watchlist
	Provider string `pulumi:"provider"`
	// The raw content that represents to watchlist items to create. Example : This line will be skipped
	// header1,header2
	// value1,value2
	RawContent *string `pulumi:"rawContent"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The source of the watchlist
	Source string `pulumi:"source"`
	// The tenantId where the watchlist belongs to
	TenantId *string `pulumi:"tenantId"`
	// The last time the watchlist was updated
	Updated *string `pulumi:"updated"`
	// Describes a user that updated the watchlist
	UpdatedBy *WatchlistUserInfo `pulumi:"updatedBy"`
	// The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted
	UploadStatus *string `pulumi:"uploadStatus"`
	// The alias of the watchlist
	WatchlistAlias *string `pulumi:"watchlistAlias"`
	// The id (a Guid) of the watchlist
	WatchlistId *string `pulumi:"watchlistId"`
	// The type of the watchlist
	WatchlistType *string `pulumi:"watchlistType"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Watchlist resource.
type WatchlistArgs struct {
	// The content type of the raw content. For now, only text/csv is valid
	ContentType pulumi.StringPtrInput
	// The time the watchlist was created
	Created pulumi.StringPtrInput
	// Describes a user that created the watchlist
	CreatedBy WatchlistUserInfoPtrInput
	// The default duration of a watchlist (in ISO 8601 duration format)
	DefaultDuration pulumi.StringPtrInput
	// A description of the watchlist
	Description pulumi.StringPtrInput
	// The display name of the watchlist
	DisplayName pulumi.StringInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// A flag that indicates if the watchlist is deleted or not
	IsDeleted pulumi.BoolPtrInput
	// The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.
	ItemsSearchKey pulumi.StringInput
	// List of labels relevant to this watchlist
	Labels pulumi.StringArrayInput
	// The number of lines in a csv content to skip before the header
	NumberOfLinesToSkip pulumi.IntPtrInput
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput
	// The provider of the watchlist
	Provider pulumi.StringInput
	// The raw content that represents to watchlist items to create. Example : This line will be skipped
	// header1,header2
	// value1,value2
	RawContent pulumi.StringPtrInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The source of the watchlist
	Source pulumi.StringInput
	// The tenantId where the watchlist belongs to
	TenantId pulumi.StringPtrInput
	// The last time the watchlist was updated
	Updated pulumi.StringPtrInput
	// Describes a user that updated the watchlist
	UpdatedBy WatchlistUserInfoPtrInput
	// The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted
	UploadStatus pulumi.StringPtrInput
	// The alias of the watchlist
	WatchlistAlias pulumi.StringPtrInput
	// The id (a Guid) of the watchlist
	WatchlistId pulumi.StringPtrInput
	// The type of the watchlist
	WatchlistType pulumi.StringPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (WatchlistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*watchlistArgs)(nil)).Elem()
}

type WatchlistInput interface {
	pulumi.Input

	ToWatchlistOutput() WatchlistOutput
	ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput
}

func (*Watchlist) ElementType() reflect.Type {
	return reflect.TypeOf((*Watchlist)(nil))
}

func (i *Watchlist) ToWatchlistOutput() WatchlistOutput {
	return i.ToWatchlistOutputWithContext(context.Background())
}

func (i *Watchlist) ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatchlistOutput)
}

type WatchlistOutput struct {
	*pulumi.OutputState
}

func (WatchlistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Watchlist)(nil))
}

func (o WatchlistOutput) ToWatchlistOutput() WatchlistOutput {
	return o
}

func (o WatchlistOutput) ToWatchlistOutputWithContext(ctx context.Context) WatchlistOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WatchlistOutput{})
}
