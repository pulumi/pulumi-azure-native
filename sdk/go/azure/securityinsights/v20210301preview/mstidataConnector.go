// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210301preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents Microsoft Threat Intelligence data connector.
type MSTIDataConnector struct {
	pulumi.CustomResourceState

	// The available data types for the connector.
	DataTypes MSTIDataConnectorDataTypesResponseOutput `pulumi:"dataTypes"`
	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The kind of the data connector
	// Expected value is 'MicrosoftThreatIntelligence'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The tenant id to connect to, and get the data from.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMSTIDataConnector registers a new resource with the given unique name, arguments, and options.
func NewMSTIDataConnector(ctx *pulumi.Context,
	name string, args *MSTIDataConnectorArgs, opts ...pulumi.ResourceOption) (*MSTIDataConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataTypes == nil {
		return nil, errors.New("invalid value for required argument 'DataTypes'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("invalid value for required argument 'OperationalInsightsResourceProvider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	args.Kind = pulumi.String("MicrosoftThreatIntelligence")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210301preview:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20190101preview:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20190101preview:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20200101:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20200101:MSTIDataConnector"),
		},
	})
	opts = append(opts, aliases)
	var resource MSTIDataConnector
	err := ctx.RegisterResource("azure-native:securityinsights/v20210301preview:MSTIDataConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMSTIDataConnector gets an existing MSTIDataConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMSTIDataConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MSTIDataConnectorState, opts ...pulumi.ResourceOption) (*MSTIDataConnector, error) {
	var resource MSTIDataConnector
	err := ctx.ReadResource("azure-native:securityinsights/v20210301preview:MSTIDataConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MSTIDataConnector resources.
type mstidataConnectorState struct {
}

type MSTIDataConnectorState struct {
}

func (MSTIDataConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*mstidataConnectorState)(nil)).Elem()
}

type mstidataConnectorArgs struct {
	// Connector ID
	DataConnectorId *string `pulumi:"dataConnectorId"`
	// The available data types for the connector.
	DataTypes MSTIDataConnectorDataTypes `pulumi:"dataTypes"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// The kind of the data connector
	// Expected value is 'MicrosoftThreatIntelligence'.
	Kind string `pulumi:"kind"`
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tenant id to connect to, and get the data from.
	TenantId string `pulumi:"tenantId"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a MSTIDataConnector resource.
type MSTIDataConnectorArgs struct {
	// Connector ID
	DataConnectorId pulumi.StringPtrInput
	// The available data types for the connector.
	DataTypes MSTIDataConnectorDataTypesInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// The kind of the data connector
	// Expected value is 'MicrosoftThreatIntelligence'.
	Kind pulumi.StringInput
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The tenant id to connect to, and get the data from.
	TenantId pulumi.StringInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (MSTIDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mstidataConnectorArgs)(nil)).Elem()
}

type MSTIDataConnectorInput interface {
	pulumi.Input

	ToMSTIDataConnectorOutput() MSTIDataConnectorOutput
	ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput
}

func (*MSTIDataConnector) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnector)(nil))
}

func (i *MSTIDataConnector) ToMSTIDataConnectorOutput() MSTIDataConnectorOutput {
	return i.ToMSTIDataConnectorOutputWithContext(context.Background())
}

func (i *MSTIDataConnector) ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MSTIDataConnectorOutput)
}

type MSTIDataConnectorOutput struct {
	*pulumi.OutputState
}

func (MSTIDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnector)(nil))
}

func (o MSTIDataConnectorOutput) ToMSTIDataConnectorOutput() MSTIDataConnectorOutput {
	return o
}

func (o MSTIDataConnectorOutput) ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MSTIDataConnectorOutput{})
}
