// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Represents a SourceControl in Azure Security Insights.
func LookupSourceControl(ctx *pulumi.Context, args *LookupSourceControlArgs, opts ...pulumi.InvokeOption) (*LookupSourceControlResult, error) {
	var rv LookupSourceControlResult
	err := ctx.Invoke("azure-native:securityinsights/v20211001preview:getSourceControl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSourceControlArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Source control Id
	SourceControlId string `pulumi:"sourceControlId"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Represents a SourceControl in Azure Security Insights.
type LookupSourceControlResult struct {
	// Array of source control content types.
	ContentTypes []string `pulumi:"contentTypes"`
	// A description of the source control
	Description *string `pulumi:"description"`
	// The display name of the source control
	DisplayName string `pulumi:"displayName"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The repository type of the source control
	RepoType string `pulumi:"repoType"`
	// Repository metadata.
	Repository RepositoryResponse `pulumi:"repository"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupSourceControlOutput(ctx *pulumi.Context, args LookupSourceControlOutputArgs, opts ...pulumi.InvokeOption) LookupSourceControlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceControlResult, error) {
			args := v.(LookupSourceControlArgs)
			r, err := LookupSourceControl(ctx, &args, opts...)
			var s LookupSourceControlResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceControlResultOutput)
}

type LookupSourceControlOutputArgs struct {
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Source control Id
	SourceControlId pulumi.StringInput `pulumi:"sourceControlId"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupSourceControlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceControlArgs)(nil)).Elem()
}

// Represents a SourceControl in Azure Security Insights.
type LookupSourceControlResultOutput struct{ *pulumi.OutputState }

func (LookupSourceControlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceControlResult)(nil)).Elem()
}

func (o LookupSourceControlResultOutput) ToLookupSourceControlResultOutput() LookupSourceControlResultOutput {
	return o
}

func (o LookupSourceControlResultOutput) ToLookupSourceControlResultOutputWithContext(ctx context.Context) LookupSourceControlResultOutput {
	return o
}

// Array of source control content types.
func (o LookupSourceControlResultOutput) ContentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSourceControlResult) []string { return v.ContentTypes }).(pulumi.StringArrayOutput)
}

// A description of the source control
func (o LookupSourceControlResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceControlResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the source control
func (o LookupSourceControlResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Etag of the azure resource
func (o LookupSourceControlResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceControlResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSourceControlResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSourceControlResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlResult) string { return v.Name }).(pulumi.StringOutput)
}

// The repository type of the source control
func (o LookupSourceControlResultOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlResult) string { return v.RepoType }).(pulumi.StringOutput)
}

// Repository metadata.
func (o LookupSourceControlResultOutput) Repository() RepositoryResponseOutput {
	return o.ApplyT(func(v LookupSourceControlResult) RepositoryResponse { return v.Repository }).(RepositoryResponseOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSourceControlResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSourceControlResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSourceControlResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceControlResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceControlResultOutput{})
}
