// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityinsights

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents a bookmark in Azure Security Insights.
// API Version: 2020-01-01.
type Bookmark struct {
	pulumi.CustomResourceState

	// The time the bookmark was created
	Created pulumi.StringPtrOutput `pulumi:"created"`
	// Describes a user that created the bookmark
	CreatedBy UserInfoResponsePtrOutput `pulumi:"createdBy"`
	// The display name of the bookmark
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// The bookmark event time
	EventTime pulumi.StringPtrOutput `pulumi:"eventTime"`
	// Describes an incident that relates to bookmark
	IncidentInfo IncidentInfoResponsePtrOutput `pulumi:"incidentInfo"`
	// List of labels relevant to this bookmark
	Labels pulumi.StringArrayOutput `pulumi:"labels"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// The notes of the bookmark
	Notes pulumi.StringPtrOutput `pulumi:"notes"`
	// The query of the bookmark.
	Query pulumi.StringOutput `pulumi:"query"`
	// The end time for the query
	QueryEndTime pulumi.StringPtrOutput `pulumi:"queryEndTime"`
	// The query result of the bookmark.
	QueryResult pulumi.StringPtrOutput `pulumi:"queryResult"`
	// The start time for the query
	QueryStartTime pulumi.StringPtrOutput `pulumi:"queryStartTime"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
	// The last time the bookmark was updated
	Updated pulumi.StringPtrOutput `pulumi:"updated"`
	// Describes a user that updated the bookmark
	UpdatedBy UserInfoResponsePtrOutput `pulumi:"updatedBy"`
}

// NewBookmark registers a new resource with the given unique name, arguments, and options.
func NewBookmark(ctx *pulumi.Context,
	name string, args *BookmarkArgs, opts ...pulumi.ResourceOption) (*Bookmark, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Query == nil {
		return nil, errors.New("invalid value for required argument 'Query'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/latest:Bookmark"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20200101:Bookmark"),
		},
	})
	opts = append(opts, aliases)
	var resource Bookmark
	err := ctx.RegisterResource("azure-nextgen:securityinsights:Bookmark", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBookmark gets an existing Bookmark resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBookmark(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BookmarkState, opts ...pulumi.ResourceOption) (*Bookmark, error) {
	var resource Bookmark
	err := ctx.ReadResource("azure-nextgen:securityinsights:Bookmark", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bookmark resources.
type bookmarkState struct {
	// The time the bookmark was created
	Created *string `pulumi:"created"`
	// Describes a user that created the bookmark
	CreatedBy *UserInfoResponse `pulumi:"createdBy"`
	// The display name of the bookmark
	DisplayName *string `pulumi:"displayName"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// The bookmark event time
	EventTime *string `pulumi:"eventTime"`
	// Describes an incident that relates to bookmark
	IncidentInfo *IncidentInfoResponse `pulumi:"incidentInfo"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// The notes of the bookmark
	Notes *string `pulumi:"notes"`
	// The query of the bookmark.
	Query *string `pulumi:"query"`
	// The end time for the query
	QueryEndTime *string `pulumi:"queryEndTime"`
	// The query result of the bookmark.
	QueryResult *string `pulumi:"queryResult"`
	// The start time for the query
	QueryStartTime *string `pulumi:"queryStartTime"`
	// Azure resource type
	Type *string `pulumi:"type"`
	// The last time the bookmark was updated
	Updated *string `pulumi:"updated"`
	// Describes a user that updated the bookmark
	UpdatedBy *UserInfoResponse `pulumi:"updatedBy"`
}

type BookmarkState struct {
	// The time the bookmark was created
	Created pulumi.StringPtrInput
	// Describes a user that created the bookmark
	CreatedBy UserInfoResponsePtrInput
	// The display name of the bookmark
	DisplayName pulumi.StringPtrInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// The bookmark event time
	EventTime pulumi.StringPtrInput
	// Describes an incident that relates to bookmark
	IncidentInfo IncidentInfoResponsePtrInput
	// List of labels relevant to this bookmark
	Labels pulumi.StringArrayInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// The notes of the bookmark
	Notes pulumi.StringPtrInput
	// The query of the bookmark.
	Query pulumi.StringPtrInput
	// The end time for the query
	QueryEndTime pulumi.StringPtrInput
	// The query result of the bookmark.
	QueryResult pulumi.StringPtrInput
	// The start time for the query
	QueryStartTime pulumi.StringPtrInput
	// Azure resource type
	Type pulumi.StringPtrInput
	// The last time the bookmark was updated
	Updated pulumi.StringPtrInput
	// Describes a user that updated the bookmark
	UpdatedBy UserInfoResponsePtrInput
}

func (BookmarkState) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkState)(nil)).Elem()
}

type bookmarkArgs struct {
	// Bookmark ID
	BookmarkId *string `pulumi:"bookmarkId"`
	// The time the bookmark was created
	Created *string `pulumi:"created"`
	// Describes a user that created the bookmark
	CreatedBy *UserInfo `pulumi:"createdBy"`
	// The display name of the bookmark
	DisplayName string `pulumi:"displayName"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// The bookmark event time
	EventTime *string `pulumi:"eventTime"`
	// Describes an incident that relates to bookmark
	IncidentInfo *IncidentInfo `pulumi:"incidentInfo"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes *string `pulumi:"notes"`
	// The query of the bookmark.
	Query string `pulumi:"query"`
	// The end time for the query
	QueryEndTime *string `pulumi:"queryEndTime"`
	// The query result of the bookmark.
	QueryResult *string `pulumi:"queryResult"`
	// The start time for the query
	QueryStartTime *string `pulumi:"queryStartTime"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The last time the bookmark was updated
	Updated *string `pulumi:"updated"`
	// Describes a user that updated the bookmark
	UpdatedBy *UserInfo `pulumi:"updatedBy"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Bookmark resource.
type BookmarkArgs struct {
	// Bookmark ID
	BookmarkId pulumi.StringPtrInput
	// The time the bookmark was created
	Created pulumi.StringPtrInput
	// Describes a user that created the bookmark
	CreatedBy UserInfoPtrInput
	// The display name of the bookmark
	DisplayName pulumi.StringInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// The bookmark event time
	EventTime pulumi.StringPtrInput
	// Describes an incident that relates to bookmark
	IncidentInfo IncidentInfoPtrInput
	// List of labels relevant to this bookmark
	Labels pulumi.StringArrayInput
	// The notes of the bookmark
	Notes pulumi.StringPtrInput
	// The query of the bookmark.
	Query pulumi.StringInput
	// The end time for the query
	QueryEndTime pulumi.StringPtrInput
	// The query result of the bookmark.
	QueryResult pulumi.StringPtrInput
	// The start time for the query
	QueryStartTime pulumi.StringPtrInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The last time the bookmark was updated
	Updated pulumi.StringPtrInput
	// Describes a user that updated the bookmark
	UpdatedBy UserInfoPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (BookmarkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bookmarkArgs)(nil)).Elem()
}

type BookmarkInput interface {
	pulumi.Input

	ToBookmarkOutput() BookmarkOutput
	ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput
}

func (*Bookmark) ElementType() reflect.Type {
	return reflect.TypeOf((*Bookmark)(nil))
}

func (i *Bookmark) ToBookmarkOutput() BookmarkOutput {
	return i.ToBookmarkOutputWithContext(context.Background())
}

func (i *Bookmark) ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkOutput)
}

type BookmarkOutput struct {
	*pulumi.OutputState
}

func (BookmarkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Bookmark)(nil))
}

func (o BookmarkOutput) ToBookmarkOutput() BookmarkOutput {
	return o
}

func (o BookmarkOutput) ToBookmarkOutputWithContext(ctx context.Context) BookmarkOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BookmarkOutput{})
}
