// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents Activity timeline item.
type ActivityTimelineItemResponse struct {
	// The grouping bucket end time.
	BucketEndTimeUTC string `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC string `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content string `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC string `pulumi:"firstActivityTimeUTC"`
	// The entity query kind type.
	// Expected value is 'Activity'.
	Kind string `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC string `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId string `pulumi:"queryId"`
	// The activity timeline title.
	Title string `pulumi:"title"`
}

// ActivityTimelineItemResponseInput is an input type that accepts ActivityTimelineItemResponseArgs and ActivityTimelineItemResponseOutput values.
// You can construct a concrete instance of `ActivityTimelineItemResponseInput` via:
//
//          ActivityTimelineItemResponseArgs{...}
type ActivityTimelineItemResponseInput interface {
	pulumi.Input

	ToActivityTimelineItemResponseOutput() ActivityTimelineItemResponseOutput
	ToActivityTimelineItemResponseOutputWithContext(context.Context) ActivityTimelineItemResponseOutput
}

// Represents Activity timeline item.
type ActivityTimelineItemResponseArgs struct {
	// The grouping bucket end time.
	BucketEndTimeUTC pulumi.StringInput `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC pulumi.StringInput `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content pulumi.StringInput `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC pulumi.StringInput `pulumi:"firstActivityTimeUTC"`
	// The entity query kind type.
	// Expected value is 'Activity'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC pulumi.StringInput `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId pulumi.StringInput `pulumi:"queryId"`
	// The activity timeline title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ActivityTimelineItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityTimelineItemResponse)(nil)).Elem()
}

func (i ActivityTimelineItemResponseArgs) ToActivityTimelineItemResponseOutput() ActivityTimelineItemResponseOutput {
	return i.ToActivityTimelineItemResponseOutputWithContext(context.Background())
}

func (i ActivityTimelineItemResponseArgs) ToActivityTimelineItemResponseOutputWithContext(ctx context.Context) ActivityTimelineItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityTimelineItemResponseOutput)
}

// Represents Activity timeline item.
type ActivityTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (ActivityTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityTimelineItemResponse)(nil)).Elem()
}

func (o ActivityTimelineItemResponseOutput) ToActivityTimelineItemResponseOutput() ActivityTimelineItemResponseOutput {
	return o
}

func (o ActivityTimelineItemResponseOutput) ToActivityTimelineItemResponseOutputWithContext(ctx context.Context) ActivityTimelineItemResponseOutput {
	return o
}

// The grouping bucket end time.
func (o ActivityTimelineItemResponseOutput) BucketEndTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.BucketEndTimeUTC }).(pulumi.StringOutput)
}

// The grouping bucket start time.
func (o ActivityTimelineItemResponseOutput) BucketStartTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.BucketStartTimeUTC }).(pulumi.StringOutput)
}

// The activity timeline content.
func (o ActivityTimelineItemResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Content }).(pulumi.StringOutput)
}

// The time of the first activity in the grouping bucket.
func (o ActivityTimelineItemResponseOutput) FirstActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.FirstActivityTimeUTC }).(pulumi.StringOutput)
}

// The entity query kind type.
// Expected value is 'Activity'.
func (o ActivityTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The time of the last activity in the grouping bucket.
func (o ActivityTimelineItemResponseOutput) LastActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.LastActivityTimeUTC }).(pulumi.StringOutput)
}

// The activity query id.
func (o ActivityTimelineItemResponseOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.QueryId }).(pulumi.StringOutput)
}

// The activity timeline title.
func (o ActivityTimelineItemResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponse struct {
	// The bookmark azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy UserInfoResponse `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName string `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime *string `pulumi:"eventTime"`
	// The entity query kind type.
	// Expected value is 'Bookmark'.
	Kind string `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes string `pulumi:"notes"`
	// TThe bookmark start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
}

// BookmarkTimelineItemResponseInput is an input type that accepts BookmarkTimelineItemResponseArgs and BookmarkTimelineItemResponseOutput values.
// You can construct a concrete instance of `BookmarkTimelineItemResponseInput` via:
//
//          BookmarkTimelineItemResponseArgs{...}
type BookmarkTimelineItemResponseInput interface {
	pulumi.Input

	ToBookmarkTimelineItemResponseOutput() BookmarkTimelineItemResponseOutput
	ToBookmarkTimelineItemResponseOutputWithContext(context.Context) BookmarkTimelineItemResponseOutput
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponseArgs struct {
	// The bookmark azure resource id.
	AzureResourceId pulumi.StringInput `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy UserInfoResponseInput `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc pulumi.StringInput `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime pulumi.StringPtrInput `pulumi:"eventTime"`
	// The entity query kind type.
	// Expected value is 'Bookmark'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The notes of the bookmark
	Notes pulumi.StringInput `pulumi:"notes"`
	// TThe bookmark start time.
	StartTimeUtc pulumi.StringInput `pulumi:"startTimeUtc"`
}

func (BookmarkTimelineItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkTimelineItemResponse)(nil)).Elem()
}

func (i BookmarkTimelineItemResponseArgs) ToBookmarkTimelineItemResponseOutput() BookmarkTimelineItemResponseOutput {
	return i.ToBookmarkTimelineItemResponseOutputWithContext(context.Background())
}

func (i BookmarkTimelineItemResponseArgs) ToBookmarkTimelineItemResponseOutputWithContext(ctx context.Context) BookmarkTimelineItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkTimelineItemResponseOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (BookmarkTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkTimelineItemResponse)(nil)).Elem()
}

func (o BookmarkTimelineItemResponseOutput) ToBookmarkTimelineItemResponseOutput() BookmarkTimelineItemResponseOutput {
	return o
}

func (o BookmarkTimelineItemResponseOutput) ToBookmarkTimelineItemResponseOutputWithContext(ctx context.Context) BookmarkTimelineItemResponseOutput {
	return o
}

// The bookmark azure resource id.
func (o BookmarkTimelineItemResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// Describes a user that created the bookmark
func (o BookmarkTimelineItemResponseOutput) CreatedBy() UserInfoResponseOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) UserInfoResponse { return v.CreatedBy }).(UserInfoResponseOutput)
}

// The bookmark display name.
func (o BookmarkTimelineItemResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The bookmark end time.
func (o BookmarkTimelineItemResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The bookmark event time.
func (o BookmarkTimelineItemResponseOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) *string { return v.EventTime }).(pulumi.StringPtrOutput)
}

// The entity query kind type.
// Expected value is 'Bookmark'.
func (o BookmarkTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// List of labels relevant to this bookmark
func (o BookmarkTimelineItemResponseOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The notes of the bookmark
func (o BookmarkTimelineItemResponseOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.Notes }).(pulumi.StringOutput)
}

// TThe bookmark start time.
func (o BookmarkTimelineItemResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoResponse struct {
	// The email of the client.
	Email *string `pulumi:"email"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The object id of the client.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// ClientInfoResponseInput is an input type that accepts ClientInfoResponseArgs and ClientInfoResponseOutput values.
// You can construct a concrete instance of `ClientInfoResponseInput` via:
//
//          ClientInfoResponseArgs{...}
type ClientInfoResponseInput interface {
	pulumi.Input

	ToClientInfoResponseOutput() ClientInfoResponseOutput
	ToClientInfoResponseOutputWithContext(context.Context) ClientInfoResponseOutput
}

// Information on the client (user or application) that made some action
type ClientInfoResponseArgs struct {
	// The email of the client.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The object id of the client.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (ClientInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoResponse)(nil)).Elem()
}

func (i ClientInfoResponseArgs) ToClientInfoResponseOutput() ClientInfoResponseOutput {
	return i.ToClientInfoResponseOutputWithContext(context.Background())
}

func (i ClientInfoResponseArgs) ToClientInfoResponseOutputWithContext(ctx context.Context) ClientInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponseOutput)
}

func (i ClientInfoResponseArgs) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return i.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (i ClientInfoResponseArgs) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponseOutput).ToClientInfoResponsePtrOutputWithContext(ctx)
}

// ClientInfoResponsePtrInput is an input type that accepts ClientInfoResponseArgs, ClientInfoResponsePtr and ClientInfoResponsePtrOutput values.
// You can construct a concrete instance of `ClientInfoResponsePtrInput` via:
//
//          ClientInfoResponseArgs{...}
//
//  or:
//
//          nil
type ClientInfoResponsePtrInput interface {
	pulumi.Input

	ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput
	ToClientInfoResponsePtrOutputWithContext(context.Context) ClientInfoResponsePtrOutput
}

type clientInfoResponsePtrType ClientInfoResponseArgs

func ClientInfoResponsePtr(v *ClientInfoResponseArgs) ClientInfoResponsePtrInput {
	return (*clientInfoResponsePtrType)(v)
}

func (*clientInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfoResponse)(nil)).Elem()
}

func (i *clientInfoResponsePtrType) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return i.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (i *clientInfoResponsePtrType) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponsePtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoResponseOutput struct{ *pulumi.OutputState }

func (ClientInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutput() ClientInfoResponseOutput {
	return o
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutputWithContext(ctx context.Context) ClientInfoResponseOutput {
	return o
}

func (o ClientInfoResponseOutput) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return o.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (o ClientInfoResponseOutput) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *ClientInfoResponse {
		return &v
	}).(ClientInfoResponsePtrOutput)
}

// The email of the client.
func (o ClientInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ClientInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) Elem() ClientInfoResponseOutput {
	return o.ApplyT(func(v *ClientInfoResponse) ClientInfoResponse { return *v }).(ClientInfoResponseOutput)
}

// The email of the client.
func (o ClientInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Entity insight Item.
type EntityInsightItemResponse struct {
	// Query results for table insights query.
	ChartQueryResults []InsightsTableResultResponse `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId *string `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval *EntityInsightItemResponseQueryTimeInterval `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults *InsightsTableResultResponse `pulumi:"tableQueryResults"`
}

// EntityInsightItemResponseInput is an input type that accepts EntityInsightItemResponseArgs and EntityInsightItemResponseOutput values.
// You can construct a concrete instance of `EntityInsightItemResponseInput` via:
//
//          EntityInsightItemResponseArgs{...}
type EntityInsightItemResponseInput interface {
	pulumi.Input

	ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput
	ToEntityInsightItemResponseOutputWithContext(context.Context) EntityInsightItemResponseOutput
}

// Entity insight Item.
type EntityInsightItemResponseArgs struct {
	// Query results for table insights query.
	ChartQueryResults InsightsTableResultResponseArrayInput `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval EntityInsightItemResponseQueryTimeIntervalPtrInput `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults InsightsTableResultResponsePtrInput `pulumi:"tableQueryResults"`
}

func (EntityInsightItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponse)(nil)).Elem()
}

func (i EntityInsightItemResponseArgs) ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput {
	return i.ToEntityInsightItemResponseOutputWithContext(context.Background())
}

func (i EntityInsightItemResponseArgs) ToEntityInsightItemResponseOutputWithContext(ctx context.Context) EntityInsightItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemResponseOutput)
}

// EntityInsightItemResponseArrayInput is an input type that accepts EntityInsightItemResponseArray and EntityInsightItemResponseArrayOutput values.
// You can construct a concrete instance of `EntityInsightItemResponseArrayInput` via:
//
//          EntityInsightItemResponseArray{ EntityInsightItemResponseArgs{...} }
type EntityInsightItemResponseArrayInput interface {
	pulumi.Input

	ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput
	ToEntityInsightItemResponseArrayOutputWithContext(context.Context) EntityInsightItemResponseArrayOutput
}

type EntityInsightItemResponseArray []EntityInsightItemResponseInput

func (EntityInsightItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemResponse)(nil)).Elem()
}

func (i EntityInsightItemResponseArray) ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput {
	return i.ToEntityInsightItemResponseArrayOutputWithContext(context.Background())
}

func (i EntityInsightItemResponseArray) ToEntityInsightItemResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemResponseArrayOutput)
}

// Entity insight Item.
type EntityInsightItemResponseOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutput() EntityInsightItemResponseOutput {
	return o
}

func (o EntityInsightItemResponseOutput) ToEntityInsightItemResponseOutputWithContext(ctx context.Context) EntityInsightItemResponseOutput {
	return o
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) ChartQueryResults() InsightsTableResultResponseArrayOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) []InsightsTableResultResponse { return v.ChartQueryResults }).(InsightsTableResultResponseArrayOutput)
}

// The query id of the insight
func (o EntityInsightItemResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

// The Time interval that the query actually executed on.
func (o EntityInsightItemResponseOutput) QueryTimeInterval() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *EntityInsightItemResponseQueryTimeInterval {
		return v.QueryTimeInterval
	}).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// Query results for table insights query.
func (o EntityInsightItemResponseOutput) TableQueryResults() InsightsTableResultResponsePtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponse) *InsightsTableResultResponse { return v.TableQueryResults }).(InsightsTableResultResponsePtrOutput)
}

type EntityInsightItemResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemResponse)(nil)).Elem()
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutput() EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) ToEntityInsightItemResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemResponseArrayOutput {
	return o
}

func (o EntityInsightItemResponseArrayOutput) Index(i pulumi.IntInput) EntityInsightItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInsightItemResponse {
		return vs[0].([]EntityInsightItemResponse)[vs[1].(int)]
	}).(EntityInsightItemResponseOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeInterval struct {
	// Insight query end time
	EndTime *string `pulumi:"endTime"`
	// Insight query start time
	StartTime *string `pulumi:"startTime"`
}

// EntityInsightItemResponseQueryTimeIntervalInput is an input type that accepts EntityInsightItemResponseQueryTimeIntervalArgs and EntityInsightItemResponseQueryTimeIntervalOutput values.
// You can construct a concrete instance of `EntityInsightItemResponseQueryTimeIntervalInput` via:
//
//          EntityInsightItemResponseQueryTimeIntervalArgs{...}
type EntityInsightItemResponseQueryTimeIntervalInput interface {
	pulumi.Input

	ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput
	ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(context.Context) EntityInsightItemResponseQueryTimeIntervalOutput
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeIntervalArgs struct {
	// Insight query end time
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Insight query start time
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (EntityInsightItemResponseQueryTimeIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (i EntityInsightItemResponseQueryTimeIntervalArgs) ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput {
	return i.ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(context.Background())
}

func (i EntityInsightItemResponseQueryTimeIntervalArgs) ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemResponseQueryTimeIntervalOutput)
}

func (i EntityInsightItemResponseQueryTimeIntervalArgs) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return i.ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (i EntityInsightItemResponseQueryTimeIntervalArgs) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemResponseQueryTimeIntervalOutput).ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx)
}

// EntityInsightItemResponseQueryTimeIntervalPtrInput is an input type that accepts EntityInsightItemResponseQueryTimeIntervalArgs, EntityInsightItemResponseQueryTimeIntervalPtr and EntityInsightItemResponseQueryTimeIntervalPtrOutput values.
// You can construct a concrete instance of `EntityInsightItemResponseQueryTimeIntervalPtrInput` via:
//
//          EntityInsightItemResponseQueryTimeIntervalArgs{...}
//
//  or:
//
//          nil
type EntityInsightItemResponseQueryTimeIntervalPtrInput interface {
	pulumi.Input

	ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput
	ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput
}

type entityInsightItemResponseQueryTimeIntervalPtrType EntityInsightItemResponseQueryTimeIntervalArgs

func EntityInsightItemResponseQueryTimeIntervalPtr(v *EntityInsightItemResponseQueryTimeIntervalArgs) EntityInsightItemResponseQueryTimeIntervalPtrInput {
	return (*entityInsightItemResponseQueryTimeIntervalPtrType)(v)
}

func (*entityInsightItemResponseQueryTimeIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (i *entityInsightItemResponseQueryTimeIntervalPtrType) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return i.ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (i *entityInsightItemResponseQueryTimeIntervalPtrType) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemResponseQueryTimeIntervalOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutput() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (o EntityInsightItemResponseQueryTimeIntervalOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *EntityInsightItemResponseQueryTimeInterval {
		return &v
	}).(EntityInsightItemResponseQueryTimeIntervalPtrOutput)
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemResponseQueryTimeInterval) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type EntityInsightItemResponseQueryTimeIntervalPtrOutput struct{ *pulumi.OutputState }

func (EntityInsightItemResponseQueryTimeIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutput() EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) Elem() EntityInsightItemResponseQueryTimeIntervalOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) EntityInsightItemResponseQueryTimeInterval {
		return *v
	}).(EntityInsightItemResponseQueryTimeIntervalOutput)
}

// Insight query end time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemResponseQueryTimeIntervalPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// GetInsightsErrorResponseInput is an input type that accepts GetInsightsErrorResponseArgs and GetInsightsErrorResponseOutput values.
// You can construct a concrete instance of `GetInsightsErrorResponseInput` via:
//
//          GetInsightsErrorResponseArgs{...}
type GetInsightsErrorResponseInput interface {
	pulumi.Input

	ToGetInsightsErrorResponseOutput() GetInsightsErrorResponseOutput
	ToGetInsightsErrorResponseOutputWithContext(context.Context) GetInsightsErrorResponseOutput
}

// GetInsights Query Errors.
type GetInsightsErrorResponseArgs struct {
	// the error message
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
	// the query id
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
}

func (GetInsightsErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorResponse)(nil)).Elem()
}

func (i GetInsightsErrorResponseArgs) ToGetInsightsErrorResponseOutput() GetInsightsErrorResponseOutput {
	return i.ToGetInsightsErrorResponseOutputWithContext(context.Background())
}

func (i GetInsightsErrorResponseArgs) ToGetInsightsErrorResponseOutputWithContext(ctx context.Context) GetInsightsErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsErrorResponseOutput)
}

// GetInsightsErrorResponseArrayInput is an input type that accepts GetInsightsErrorResponseArray and GetInsightsErrorResponseArrayOutput values.
// You can construct a concrete instance of `GetInsightsErrorResponseArrayInput` via:
//
//          GetInsightsErrorResponseArray{ GetInsightsErrorResponseArgs{...} }
type GetInsightsErrorResponseArrayInput interface {
	pulumi.Input

	ToGetInsightsErrorResponseArrayOutput() GetInsightsErrorResponseArrayOutput
	ToGetInsightsErrorResponseArrayOutputWithContext(context.Context) GetInsightsErrorResponseArrayOutput
}

type GetInsightsErrorResponseArray []GetInsightsErrorResponseInput

func (GetInsightsErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorResponse)(nil)).Elem()
}

func (i GetInsightsErrorResponseArray) ToGetInsightsErrorResponseArrayOutput() GetInsightsErrorResponseArrayOutput {
	return i.ToGetInsightsErrorResponseArrayOutputWithContext(context.Background())
}

func (i GetInsightsErrorResponseArray) ToGetInsightsErrorResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsErrorResponseArrayOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorResponse)(nil)).Elem()
}

func (o GetInsightsErrorResponseOutput) ToGetInsightsErrorResponseOutput() GetInsightsErrorResponseOutput {
	return o
}

func (o GetInsightsErrorResponseOutput) ToGetInsightsErrorResponseOutputWithContext(ctx context.Context) GetInsightsErrorResponseOutput {
	return o
}

// the error message
func (o GetInsightsErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o GetInsightsErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o GetInsightsErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInsightsErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type GetInsightsErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorResponse)(nil)).Elem()
}

func (o GetInsightsErrorResponseArrayOutput) ToGetInsightsErrorResponseArrayOutput() GetInsightsErrorResponseArrayOutput {
	return o
}

func (o GetInsightsErrorResponseArrayOutput) ToGetInsightsErrorResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorResponseArrayOutput {
	return o
}

func (o GetInsightsErrorResponseArrayOutput) Index(i pulumi.IntInput) GetInsightsErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightsErrorResponse {
		return vs[0].([]GetInsightsErrorResponse)[vs[1].(int)]
	}).(GetInsightsErrorResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponse struct {
	// information about the failed queries
	Errors []GetInsightsErrorResponse `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount int `pulumi:"totalCount"`
}

// GetInsightsResultsMetadataResponseInput is an input type that accepts GetInsightsResultsMetadataResponseArgs and GetInsightsResultsMetadataResponseOutput values.
// You can construct a concrete instance of `GetInsightsResultsMetadataResponseInput` via:
//
//          GetInsightsResultsMetadataResponseArgs{...}
type GetInsightsResultsMetadataResponseInput interface {
	pulumi.Input

	ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput
	ToGetInsightsResultsMetadataResponseOutputWithContext(context.Context) GetInsightsResultsMetadataResponseOutput
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponseArgs struct {
	// information about the failed queries
	Errors GetInsightsErrorResponseArrayInput `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetInsightsResultsMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (i GetInsightsResultsMetadataResponseArgs) ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput {
	return i.ToGetInsightsResultsMetadataResponseOutputWithContext(context.Background())
}

func (i GetInsightsResultsMetadataResponseArgs) ToGetInsightsResultsMetadataResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsResultsMetadataResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutput() GetInsightsResultsMetadataResponseOutput {
	return o
}

func (o GetInsightsResultsMetadataResponseOutput) ToGetInsightsResultsMetadataResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataResponseOutput {
	return o
}

// information about the failed queries
func (o GetInsightsResultsMetadataResponseOutput) Errors() GetInsightsErrorResponseArrayOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) []GetInsightsErrorResponse { return v.Errors }).(GetInsightsErrorResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponse struct {
	// List of product names of alerts in the incident
	AlertProductNames []string `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount int `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount int `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount int `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics []string `pulumi:"tactics"`
}

// IncidentAdditionalDataResponseInput is an input type that accepts IncidentAdditionalDataResponseArgs and IncidentAdditionalDataResponseOutput values.
// You can construct a concrete instance of `IncidentAdditionalDataResponseInput` via:
//
//          IncidentAdditionalDataResponseArgs{...}
type IncidentAdditionalDataResponseInput interface {
	pulumi.Input

	ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput
	ToIncidentAdditionalDataResponseOutputWithContext(context.Context) IncidentAdditionalDataResponseOutput
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseArgs struct {
	// List of product names of alerts in the incident
	AlertProductNames pulumi.StringArrayInput `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount pulumi.IntInput `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount pulumi.IntInput `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount pulumi.IntInput `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics pulumi.StringArrayInput `pulumi:"tactics"`
}

func (IncidentAdditionalDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return i.ToIncidentAdditionalDataResponseOutputWithContext(context.Background())
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponseOutput)
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return i.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponseOutput).ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx)
}

// IncidentAdditionalDataResponsePtrInput is an input type that accepts IncidentAdditionalDataResponseArgs, IncidentAdditionalDataResponsePtr and IncidentAdditionalDataResponsePtrOutput values.
// You can construct a concrete instance of `IncidentAdditionalDataResponsePtrInput` via:
//
//          IncidentAdditionalDataResponseArgs{...}
//
//  or:
//
//          nil
type IncidentAdditionalDataResponsePtrInput interface {
	pulumi.Input

	ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput
	ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Context) IncidentAdditionalDataResponsePtrOutput
}

type incidentAdditionalDataResponsePtrType IncidentAdditionalDataResponseArgs

func IncidentAdditionalDataResponsePtr(v *IncidentAdditionalDataResponseArgs) IncidentAdditionalDataResponsePtrInput {
	return (*incidentAdditionalDataResponsePtrType)(v)
}

func (*incidentAdditionalDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentAdditionalDataResponse)(nil)).Elem()
}

func (i *incidentAdditionalDataResponsePtrType) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return i.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (i *incidentAdditionalDataResponsePtrType) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponsePtrOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return o.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) *IncidentAdditionalDataResponse {
		return &v
	}).(IncidentAdditionalDataResponsePtrOutput)
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.AlertProductNames }).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.AlertsCount }).(pulumi.IntOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponseOutput) BookmarksCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.BookmarksCount }).(pulumi.IntOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponseOutput) CommentsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.CommentsCount }).(pulumi.IntOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponseOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

type IncidentAdditionalDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponsePtrOutput) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return o
}

func (o IncidentAdditionalDataResponsePtrOutput) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return o
}

func (o IncidentAdditionalDataResponsePtrOutput) Elem() IncidentAdditionalDataResponseOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) IncidentAdditionalDataResponse { return *v }).(IncidentAdditionalDataResponseOutput)
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponsePtrOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) []string {
		if v == nil {
			return nil
		}
		return v.AlertProductNames
	}).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponsePtrOutput) AlertsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AlertsCount
	}).(pulumi.IntPtrOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponsePtrOutput) BookmarksCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BookmarksCount
	}).(pulumi.IntPtrOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponsePtrOutput) CommentsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CommentsCount
	}).(pulumi.IntPtrOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponsePtrOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tactics
	}).(pulumi.StringArrayOutput)
}

// Describes related incident information for the bookmark
type IncidentInfo struct {
	// Incident Id
	IncidentId string `pulumi:"incidentId"`
	// Relation Name
	RelationName string `pulumi:"relationName"`
	// The severity of the incident
	Severity string `pulumi:"severity"`
	// The title of the incident
	Title string `pulumi:"title"`
}

// IncidentInfoInput is an input type that accepts IncidentInfoArgs and IncidentInfoOutput values.
// You can construct a concrete instance of `IncidentInfoInput` via:
//
//          IncidentInfoArgs{...}
type IncidentInfoInput interface {
	pulumi.Input

	ToIncidentInfoOutput() IncidentInfoOutput
	ToIncidentInfoOutputWithContext(context.Context) IncidentInfoOutput
}

// Describes related incident information for the bookmark
type IncidentInfoArgs struct {
	// Incident Id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringInput `pulumi:"title"`
}

func (IncidentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (i IncidentInfoArgs) ToIncidentInfoOutput() IncidentInfoOutput {
	return i.ToIncidentInfoOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput)
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput).ToIncidentInfoPtrOutputWithContext(ctx)
}

// IncidentInfoPtrInput is an input type that accepts IncidentInfoArgs, IncidentInfoPtr and IncidentInfoPtrOutput values.
// You can construct a concrete instance of `IncidentInfoPtrInput` via:
//
//          IncidentInfoArgs{...}
//
//  or:
//
//          nil
type IncidentInfoPtrInput interface {
	pulumi.Input

	ToIncidentInfoPtrOutput() IncidentInfoPtrOutput
	ToIncidentInfoPtrOutputWithContext(context.Context) IncidentInfoPtrOutput
}

type incidentInfoPtrType IncidentInfoArgs

func IncidentInfoPtr(v *IncidentInfoArgs) IncidentInfoPtrInput {
	return (*incidentInfoPtrType)(v)
}

func (*incidentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoOutput struct{ *pulumi.OutputState }

func (IncidentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoOutput) ToIncidentInfoOutput() IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *IncidentInfo {
		return &v
	}).(IncidentInfoPtrOutput)
}

// Incident Id
func (o IncidentInfoOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Relation Name
func (o IncidentInfoOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.RelationName }).(pulumi.StringOutput)
}

// The severity of the incident
func (o IncidentInfoOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.Severity }).(pulumi.StringOutput)
}

// The title of the incident
func (o IncidentInfoOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.Title }).(pulumi.StringOutput)
}

type IncidentInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) Elem() IncidentInfoOutput {
	return o.ApplyT(func(v *IncidentInfo) IncidentInfo { return *v }).(IncidentInfoOutput)
}

// Incident Id
func (o IncidentInfoPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoPtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoResponse struct {
	// Incident Id
	IncidentId string `pulumi:"incidentId"`
	// Relation Name
	RelationName string `pulumi:"relationName"`
	// The severity of the incident
	Severity string `pulumi:"severity"`
	// The title of the incident
	Title string `pulumi:"title"`
}

// IncidentInfoResponseInput is an input type that accepts IncidentInfoResponseArgs and IncidentInfoResponseOutput values.
// You can construct a concrete instance of `IncidentInfoResponseInput` via:
//
//          IncidentInfoResponseArgs{...}
type IncidentInfoResponseInput interface {
	pulumi.Input

	ToIncidentInfoResponseOutput() IncidentInfoResponseOutput
	ToIncidentInfoResponseOutputWithContext(context.Context) IncidentInfoResponseOutput
}

// Describes related incident information for the bookmark
type IncidentInfoResponseArgs struct {
	// Incident Id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringInput `pulumi:"title"`
}

func (IncidentInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoResponse)(nil)).Elem()
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponseOutput() IncidentInfoResponseOutput {
	return i.ToIncidentInfoResponseOutputWithContext(context.Background())
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponseOutputWithContext(ctx context.Context) IncidentInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponseOutput)
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return i.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponseOutput).ToIncidentInfoResponsePtrOutputWithContext(ctx)
}

// IncidentInfoResponsePtrInput is an input type that accepts IncidentInfoResponseArgs, IncidentInfoResponsePtr and IncidentInfoResponsePtrOutput values.
// You can construct a concrete instance of `IncidentInfoResponsePtrInput` via:
//
//          IncidentInfoResponseArgs{...}
//
//  or:
//
//          nil
type IncidentInfoResponsePtrInput interface {
	pulumi.Input

	ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput
	ToIncidentInfoResponsePtrOutputWithContext(context.Context) IncidentInfoResponsePtrOutput
}

type incidentInfoResponsePtrType IncidentInfoResponseArgs

func IncidentInfoResponsePtr(v *IncidentInfoResponseArgs) IncidentInfoResponsePtrInput {
	return (*incidentInfoResponsePtrType)(v)
}

func (*incidentInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfoResponse)(nil)).Elem()
}

func (i *incidentInfoResponsePtrType) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return i.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (i *incidentInfoResponsePtrType) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponsePtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutput() IncidentInfoResponseOutput {
	return o
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutputWithContext(ctx context.Context) IncidentInfoResponseOutput {
	return o
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return o.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *IncidentInfoResponse {
		return &v
	}).(IncidentInfoResponsePtrOutput)
}

// Incident Id
func (o IncidentInfoResponseOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Relation Name
func (o IncidentInfoResponseOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.RelationName }).(pulumi.StringOutput)
}

// The severity of the incident
func (o IncidentInfoResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The title of the incident
func (o IncidentInfoResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.Title }).(pulumi.StringOutput)
}

type IncidentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) Elem() IncidentInfoResponseOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) IncidentInfoResponse { return *v }).(IncidentInfoResponseOutput)
}

// Incident Id
func (o IncidentInfoResponsePtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoResponsePtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoResponsePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents an incident label
type IncidentLabel struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
}

// IncidentLabelInput is an input type that accepts IncidentLabelArgs and IncidentLabelOutput values.
// You can construct a concrete instance of `IncidentLabelInput` via:
//
//          IncidentLabelArgs{...}
type IncidentLabelInput interface {
	pulumi.Input

	ToIncidentLabelOutput() IncidentLabelOutput
	ToIncidentLabelOutputWithContext(context.Context) IncidentLabelOutput
}

// Represents an incident label
type IncidentLabelArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
}

func (IncidentLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArgs) ToIncidentLabelOutput() IncidentLabelOutput {
	return i.ToIncidentLabelOutputWithContext(context.Background())
}

func (i IncidentLabelArgs) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelOutput)
}

// IncidentLabelArrayInput is an input type that accepts IncidentLabelArray and IncidentLabelArrayOutput values.
// You can construct a concrete instance of `IncidentLabelArrayInput` via:
//
//          IncidentLabelArray{ IncidentLabelArgs{...} }
type IncidentLabelArrayInput interface {
	pulumi.Input

	ToIncidentLabelArrayOutput() IncidentLabelArrayOutput
	ToIncidentLabelArrayOutputWithContext(context.Context) IncidentLabelArrayOutput
}

type IncidentLabelArray []IncidentLabelInput

func (IncidentLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return i.ToIncidentLabelArrayOutputWithContext(context.Background())
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelArrayOutput)
}

// Represents an incident label
type IncidentLabelOutput struct{ *pulumi.OutputState }

func (IncidentLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelOutput) ToIncidentLabelOutput() IncidentLabelOutput {
	return o
}

func (o IncidentLabelOutput) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return o
}

// The name of the label
func (o IncidentLabelOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabel) string { return v.LabelName }).(pulumi.StringOutput)
}

type IncidentLabelArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) Index(i pulumi.IntInput) IncidentLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabel {
		return vs[0].([]IncidentLabel)[vs[1].(int)]
	}).(IncidentLabelOutput)
}

// Represents an incident label
type IncidentLabelResponse struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
	// The type of the label
	LabelType string `pulumi:"labelType"`
}

// IncidentLabelResponseInput is an input type that accepts IncidentLabelResponseArgs and IncidentLabelResponseOutput values.
// You can construct a concrete instance of `IncidentLabelResponseInput` via:
//
//          IncidentLabelResponseArgs{...}
type IncidentLabelResponseInput interface {
	pulumi.Input

	ToIncidentLabelResponseOutput() IncidentLabelResponseOutput
	ToIncidentLabelResponseOutputWithContext(context.Context) IncidentLabelResponseOutput
}

// Represents an incident label
type IncidentLabelResponseArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
	// The type of the label
	LabelType pulumi.StringInput `pulumi:"labelType"`
}

func (IncidentLabelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (i IncidentLabelResponseArgs) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return i.ToIncidentLabelResponseOutputWithContext(context.Background())
}

func (i IncidentLabelResponseArgs) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelResponseOutput)
}

// IncidentLabelResponseArrayInput is an input type that accepts IncidentLabelResponseArray and IncidentLabelResponseArrayOutput values.
// You can construct a concrete instance of `IncidentLabelResponseArrayInput` via:
//
//          IncidentLabelResponseArray{ IncidentLabelResponseArgs{...} }
type IncidentLabelResponseArrayInput interface {
	pulumi.Input

	ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput
	ToIncidentLabelResponseArrayOutputWithContext(context.Context) IncidentLabelResponseArrayOutput
}

type IncidentLabelResponseArray []IncidentLabelResponseInput

func (IncidentLabelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (i IncidentLabelResponseArray) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return i.ToIncidentLabelResponseArrayOutputWithContext(context.Background())
}

func (i IncidentLabelResponseArray) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelResponseArrayOutput)
}

// Represents an incident label
type IncidentLabelResponseOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return o
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return o
}

// The name of the label
func (o IncidentLabelResponseOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelName }).(pulumi.StringOutput)
}

// The type of the label
func (o IncidentLabelResponseOutput) LabelType() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelType }).(pulumi.StringOutput)
}

type IncidentLabelResponseArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) Index(i pulumi.IntInput) IncidentLabelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabelResponse {
		return vs[0].([]IncidentLabelResponse)[vs[1].(int)]
	}).(IncidentLabelResponseOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfo struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoInput is an input type that accepts IncidentOwnerInfoArgs and IncidentOwnerInfoOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoInput` via:
//
//          IncidentOwnerInfoArgs{...}
type IncidentOwnerInfoInput interface {
	pulumi.Input

	ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput
	ToIncidentOwnerInfoOutputWithContext(context.Context) IncidentOwnerInfoOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return i.ToIncidentOwnerInfoOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput)
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput).ToIncidentOwnerInfoPtrOutputWithContext(ctx)
}

// IncidentOwnerInfoPtrInput is an input type that accepts IncidentOwnerInfoArgs, IncidentOwnerInfoPtr and IncidentOwnerInfoPtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoPtrInput` via:
//
//          IncidentOwnerInfoArgs{...}
//
//  or:
//
//          nil
type IncidentOwnerInfoPtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput
	ToIncidentOwnerInfoPtrOutputWithContext(context.Context) IncidentOwnerInfoPtrOutput
}

type incidentOwnerInfoPtrType IncidentOwnerInfoArgs

func IncidentOwnerInfoPtr(v *IncidentOwnerInfoArgs) IncidentOwnerInfoPtrInput {
	return (*incidentOwnerInfoPtrType)(v)
}

func (*incidentOwnerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *IncidentOwnerInfo {
		return &v
	}).(IncidentOwnerInfoPtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) Elem() IncidentOwnerInfoOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) IncidentOwnerInfo { return *v }).(IncidentOwnerInfoOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponse struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoResponseInput is an input type that accepts IncidentOwnerInfoResponseArgs and IncidentOwnerInfoResponseOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoResponseInput` via:
//
//          IncidentOwnerInfoResponseArgs{...}
type IncidentOwnerInfoResponseInput interface {
	pulumi.Input

	ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput
	ToIncidentOwnerInfoResponseOutputWithContext(context.Context) IncidentOwnerInfoResponseOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return i.ToIncidentOwnerInfoResponseOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponseOutput)
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return i.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponseOutput).ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx)
}

// IncidentOwnerInfoResponsePtrInput is an input type that accepts IncidentOwnerInfoResponseArgs, IncidentOwnerInfoResponsePtr and IncidentOwnerInfoResponsePtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoResponsePtrInput` via:
//
//          IncidentOwnerInfoResponseArgs{...}
//
//  or:
//
//          nil
type IncidentOwnerInfoResponsePtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput
	ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Context) IncidentOwnerInfoResponsePtrOutput
}

type incidentOwnerInfoResponsePtrType IncidentOwnerInfoResponseArgs

func IncidentOwnerInfoResponsePtr(v *IncidentOwnerInfoResponseArgs) IncidentOwnerInfoResponsePtrInput {
	return (*incidentOwnerInfoResponsePtrType)(v)
}

func (*incidentOwnerInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (i *incidentOwnerInfoResponsePtrType) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return i.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoResponsePtrType) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponsePtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *IncidentOwnerInfoResponse {
		return &v
	}).(IncidentOwnerInfoResponsePtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) Elem() IncidentOwnerInfoResponseOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) IncidentOwnerInfoResponse { return *v }).(IncidentOwnerInfoResponseOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Query results for table insights query.
type InsightsTableResultResponse struct {
	// Columns Metadata of the table
	Columns []InsightsTableResultResponseColumns `pulumi:"columns"`
	// Rows data of the table
	Rows [][]string `pulumi:"rows"`
}

// InsightsTableResultResponseInput is an input type that accepts InsightsTableResultResponseArgs and InsightsTableResultResponseOutput values.
// You can construct a concrete instance of `InsightsTableResultResponseInput` via:
//
//          InsightsTableResultResponseArgs{...}
type InsightsTableResultResponseInput interface {
	pulumi.Input

	ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput
	ToInsightsTableResultResponseOutputWithContext(context.Context) InsightsTableResultResponseOutput
}

// Query results for table insights query.
type InsightsTableResultResponseArgs struct {
	// Columns Metadata of the table
	Columns InsightsTableResultResponseColumnsArrayInput `pulumi:"columns"`
	// Rows data of the table
	Rows pulumi.StringArrayArrayInput `pulumi:"rows"`
}

func (InsightsTableResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponse)(nil)).Elem()
}

func (i InsightsTableResultResponseArgs) ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput {
	return i.ToInsightsTableResultResponseOutputWithContext(context.Background())
}

func (i InsightsTableResultResponseArgs) ToInsightsTableResultResponseOutputWithContext(ctx context.Context) InsightsTableResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponseOutput)
}

func (i InsightsTableResultResponseArgs) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return i.ToInsightsTableResultResponsePtrOutputWithContext(context.Background())
}

func (i InsightsTableResultResponseArgs) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponseOutput).ToInsightsTableResultResponsePtrOutputWithContext(ctx)
}

// InsightsTableResultResponsePtrInput is an input type that accepts InsightsTableResultResponseArgs, InsightsTableResultResponsePtr and InsightsTableResultResponsePtrOutput values.
// You can construct a concrete instance of `InsightsTableResultResponsePtrInput` via:
//
//          InsightsTableResultResponseArgs{...}
//
//  or:
//
//          nil
type InsightsTableResultResponsePtrInput interface {
	pulumi.Input

	ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput
	ToInsightsTableResultResponsePtrOutputWithContext(context.Context) InsightsTableResultResponsePtrOutput
}

type insightsTableResultResponsePtrType InsightsTableResultResponseArgs

func InsightsTableResultResponsePtr(v *InsightsTableResultResponseArgs) InsightsTableResultResponsePtrInput {
	return (*insightsTableResultResponsePtrType)(v)
}

func (*insightsTableResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultResponse)(nil)).Elem()
}

func (i *insightsTableResultResponsePtrType) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return i.ToInsightsTableResultResponsePtrOutputWithContext(context.Background())
}

func (i *insightsTableResultResponsePtrType) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponsePtrOutput)
}

// InsightsTableResultResponseArrayInput is an input type that accepts InsightsTableResultResponseArray and InsightsTableResultResponseArrayOutput values.
// You can construct a concrete instance of `InsightsTableResultResponseArrayInput` via:
//
//          InsightsTableResultResponseArray{ InsightsTableResultResponseArgs{...} }
type InsightsTableResultResponseArrayInput interface {
	pulumi.Input

	ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput
	ToInsightsTableResultResponseArrayOutputWithContext(context.Context) InsightsTableResultResponseArrayOutput
}

type InsightsTableResultResponseArray []InsightsTableResultResponseInput

func (InsightsTableResultResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponse)(nil)).Elem()
}

func (i InsightsTableResultResponseArray) ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput {
	return i.ToInsightsTableResultResponseArrayOutputWithContext(context.Background())
}

func (i InsightsTableResultResponseArray) ToInsightsTableResultResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponseArrayOutput)
}

// Query results for table insights query.
type InsightsTableResultResponseOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutput() InsightsTableResultResponseOutput {
	return o
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponseOutputWithContext(ctx context.Context) InsightsTableResultResponseOutput {
	return o
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return o.ToInsightsTableResultResponsePtrOutputWithContext(context.Background())
}

func (o InsightsTableResultResponseOutput) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) *InsightsTableResultResponse {
		return &v
	}).(InsightsTableResultResponsePtrOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultResponseOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) []InsightsTableResultResponseColumns { return v.Columns }).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponseOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v InsightsTableResultResponse) [][]string { return v.Rows }).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponsePtrOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutput() InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) ToInsightsTableResultResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultResponsePtrOutput {
	return o
}

func (o InsightsTableResultResponsePtrOutput) Elem() InsightsTableResultResponseOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) InsightsTableResultResponse { return *v }).(InsightsTableResultResponseOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultResponsePtrOutput) Columns() InsightsTableResultResponseColumnsArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) []InsightsTableResultResponseColumns {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(InsightsTableResultResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultResponsePtrOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultResponse) [][]string {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultResponseArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponse)(nil)).Elem()
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutput() InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) ToInsightsTableResultResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseArrayOutput {
	return o
}

func (o InsightsTableResultResponseArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponse {
		return vs[0].([]InsightsTableResultResponse)[vs[1].(int)]
	}).(InsightsTableResultResponseOutput)
}

type InsightsTableResultResponseColumns struct {
	// the name of the colum
	Name *string `pulumi:"name"`
	// the type of the colum
	Type *string `pulumi:"type"`
}

// InsightsTableResultResponseColumnsInput is an input type that accepts InsightsTableResultResponseColumnsArgs and InsightsTableResultResponseColumnsOutput values.
// You can construct a concrete instance of `InsightsTableResultResponseColumnsInput` via:
//
//          InsightsTableResultResponseColumnsArgs{...}
type InsightsTableResultResponseColumnsInput interface {
	pulumi.Input

	ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput
	ToInsightsTableResultResponseColumnsOutputWithContext(context.Context) InsightsTableResultResponseColumnsOutput
}

type InsightsTableResultResponseColumnsArgs struct {
	// the name of the colum
	Name pulumi.StringPtrInput `pulumi:"name"`
	// the type of the colum
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InsightsTableResultResponseColumnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponseColumns)(nil)).Elem()
}

func (i InsightsTableResultResponseColumnsArgs) ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput {
	return i.ToInsightsTableResultResponseColumnsOutputWithContext(context.Background())
}

func (i InsightsTableResultResponseColumnsArgs) ToInsightsTableResultResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponseColumnsOutput)
}

// InsightsTableResultResponseColumnsArrayInput is an input type that accepts InsightsTableResultResponseColumnsArray and InsightsTableResultResponseColumnsArrayOutput values.
// You can construct a concrete instance of `InsightsTableResultResponseColumnsArrayInput` via:
//
//          InsightsTableResultResponseColumnsArray{ InsightsTableResultResponseColumnsArgs{...} }
type InsightsTableResultResponseColumnsArrayInput interface {
	pulumi.Input

	ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput
	ToInsightsTableResultResponseColumnsArrayOutputWithContext(context.Context) InsightsTableResultResponseColumnsArrayOutput
}

type InsightsTableResultResponseColumnsArray []InsightsTableResultResponseColumnsInput

func (InsightsTableResultResponseColumnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponseColumns)(nil)).Elem()
}

func (i InsightsTableResultResponseColumnsArray) ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput {
	return i.ToInsightsTableResultResponseColumnsArrayOutputWithContext(context.Background())
}

func (i InsightsTableResultResponseColumnsArray) ToInsightsTableResultResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultResponseColumnsArrayOutput)
}

type InsightsTableResultResponseColumnsOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutput() InsightsTableResultResponseColumnsOutput {
	return o
}

func (o InsightsTableResultResponseColumnsOutput) ToInsightsTableResultResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsOutput {
	return o
}

// the name of the colum
func (o InsightsTableResultResponseColumnsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the type of the colum
func (o InsightsTableResultResponseColumnsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultResponseColumns) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InsightsTableResultResponseColumnsArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultResponseColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutput() InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) ToInsightsTableResultResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultResponseColumnsArrayOutput) Index(i pulumi.IntInput) InsightsTableResultResponseColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultResponseColumns {
		return vs[0].([]InsightsTableResultResponseColumns)[vs[1].(int)]
	}).(InsightsTableResultResponseColumnsOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponse struct {
	// The name of the alert type.
	AlertType string `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The alert name.
	DisplayName string `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The entity query kind type.
	// Expected value is 'SecurityAlert'.
	Kind string `pulumi:"kind"`
	// The alert product name.
	ProductName string `pulumi:"productName"`
	// The alert severity.
	Severity string `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The alert generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
}

// SecurityAlertTimelineItemResponseInput is an input type that accepts SecurityAlertTimelineItemResponseArgs and SecurityAlertTimelineItemResponseOutput values.
// You can construct a concrete instance of `SecurityAlertTimelineItemResponseInput` via:
//
//          SecurityAlertTimelineItemResponseArgs{...}
type SecurityAlertTimelineItemResponseInput interface {
	pulumi.Input

	ToSecurityAlertTimelineItemResponseOutput() SecurityAlertTimelineItemResponseOutput
	ToSecurityAlertTimelineItemResponseOutputWithContext(context.Context) SecurityAlertTimelineItemResponseOutput
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponseArgs struct {
	// The name of the alert type.
	AlertType pulumi.StringInput `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId pulumi.StringInput `pulumi:"azureResourceId"`
	// The alert name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc pulumi.StringInput `pulumi:"endTimeUtc"`
	// The entity query kind type.
	// Expected value is 'SecurityAlert'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The alert product name.
	ProductName pulumi.StringInput `pulumi:"productName"`
	// The alert severity.
	Severity pulumi.StringInput `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc pulumi.StringInput `pulumi:"startTimeUtc"`
	// The alert generated time.
	TimeGenerated pulumi.StringInput `pulumi:"timeGenerated"`
}

func (SecurityAlertTimelineItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityAlertTimelineItemResponse)(nil)).Elem()
}

func (i SecurityAlertTimelineItemResponseArgs) ToSecurityAlertTimelineItemResponseOutput() SecurityAlertTimelineItemResponseOutput {
	return i.ToSecurityAlertTimelineItemResponseOutputWithContext(context.Background())
}

func (i SecurityAlertTimelineItemResponseArgs) ToSecurityAlertTimelineItemResponseOutputWithContext(ctx context.Context) SecurityAlertTimelineItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAlertTimelineItemResponseOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemResponseOutput struct{ *pulumi.OutputState }

func (SecurityAlertTimelineItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityAlertTimelineItemResponse)(nil)).Elem()
}

func (o SecurityAlertTimelineItemResponseOutput) ToSecurityAlertTimelineItemResponseOutput() SecurityAlertTimelineItemResponseOutput {
	return o
}

func (o SecurityAlertTimelineItemResponseOutput) ToSecurityAlertTimelineItemResponseOutputWithContext(ctx context.Context) SecurityAlertTimelineItemResponseOutput {
	return o
}

// The name of the alert type.
func (o SecurityAlertTimelineItemResponseOutput) AlertType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.AlertType }).(pulumi.StringOutput)
}

// The alert azure resource id.
func (o SecurityAlertTimelineItemResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// The alert name.
func (o SecurityAlertTimelineItemResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The alert end time.
func (o SecurityAlertTimelineItemResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The entity query kind type.
// Expected value is 'SecurityAlert'.
func (o SecurityAlertTimelineItemResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The alert product name.
func (o SecurityAlertTimelineItemResponseOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.ProductName }).(pulumi.StringOutput)
}

// The alert severity.
func (o SecurityAlertTimelineItemResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The alert start time.
func (o SecurityAlertTimelineItemResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// The alert generated time.
func (o SecurityAlertTimelineItemResponseOutput) TimeGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemResponse) string { return v.TimeGenerated }).(pulumi.StringOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModel struct {
	// Language granular marking model
	Language *string `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef *int `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors []string `pulumi:"selectors"`
}

// ThreatIntelligenceGranularMarkingModelInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArgs and ThreatIntelligenceGranularMarkingModelOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelInput` via:
//
//          ThreatIntelligenceGranularMarkingModelArgs{...}
type ThreatIntelligenceGranularMarkingModelInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput
	ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelOutput
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelArgs struct {
	// Language granular marking model
	Language pulumi.StringPtrInput `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef pulumi.IntPtrInput `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors pulumi.StringArrayInput `pulumi:"selectors"`
}

func (ThreatIntelligenceGranularMarkingModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return i.ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelOutput)
}

// ThreatIntelligenceGranularMarkingModelArrayInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArray and ThreatIntelligenceGranularMarkingModelArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelArrayInput` via:
//
//          ThreatIntelligenceGranularMarkingModelArray{ ThreatIntelligenceGranularMarkingModelArgs{...} }
type ThreatIntelligenceGranularMarkingModelArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput
	ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput
}

type ThreatIntelligenceGranularMarkingModelArray []ThreatIntelligenceGranularMarkingModelInput

func (ThreatIntelligenceGranularMarkingModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return i.ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelArrayOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

// Language granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// marking reference granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) MarkingRef() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *int { return v.MarkingRef }).(pulumi.IntPtrOutput)
}

// granular marking model selectors
func (o ThreatIntelligenceGranularMarkingModelOutput) Selectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) []string { return v.Selectors }).(pulumi.StringArrayOutput)
}

type ThreatIntelligenceGranularMarkingModelArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceGranularMarkingModel {
		return vs[0].([]ThreatIntelligenceGranularMarkingModel)[vs[1].(int)]
	}).(ThreatIntelligenceGranularMarkingModelOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhase struct {
	// Kill chainName name
	KillChainName *string `pulumi:"killChainName"`
	// Phase name
	PhaseName *string `pulumi:"phaseName"`
}

// ThreatIntelligenceKillChainPhaseInput is an input type that accepts ThreatIntelligenceKillChainPhaseArgs and ThreatIntelligenceKillChainPhaseOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseInput` via:
//
//          ThreatIntelligenceKillChainPhaseArgs{...}
type ThreatIntelligenceKillChainPhaseInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput
	ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseArgs struct {
	// Kill chainName name
	KillChainName pulumi.StringPtrInput `pulumi:"killChainName"`
	// Phase name
	PhaseName pulumi.StringPtrInput `pulumi:"phaseName"`
}

func (ThreatIntelligenceKillChainPhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return i.ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseOutput)
}

// ThreatIntelligenceKillChainPhaseArrayInput is an input type that accepts ThreatIntelligenceKillChainPhaseArray and ThreatIntelligenceKillChainPhaseArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseArrayInput` via:
//
//          ThreatIntelligenceKillChainPhaseArray{ ThreatIntelligenceKillChainPhaseArgs{...} }
type ThreatIntelligenceKillChainPhaseArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput
	ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseArrayOutput
}

type ThreatIntelligenceKillChainPhaseArray []ThreatIntelligenceKillChainPhaseInput

func (ThreatIntelligenceKillChainPhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return i.ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return o
}

// Kill chainName name
func (o ThreatIntelligenceKillChainPhaseOutput) KillChainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.KillChainName }).(pulumi.StringPtrOutput)
}

// Phase name
func (o ThreatIntelligenceKillChainPhaseOutput) PhaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.PhaseName }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceKillChainPhaseArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceKillChainPhase {
		return vs[0].([]ThreatIntelligenceKillChainPhase)[vs[1].(int)]
	}).(ThreatIntelligenceKillChainPhaseOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPattern struct {
	// Pattern type key
	PatternTypeKey *string `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues []ThreatIntelligenceParsedPatternTypeValue `pulumi:"patternTypeValues"`
}

// ThreatIntelligenceParsedPatternInput is an input type that accepts ThreatIntelligenceParsedPatternArgs and ThreatIntelligenceParsedPatternOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternInput` via:
//
//          ThreatIntelligenceParsedPatternArgs{...}
type ThreatIntelligenceParsedPatternInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput
	ToThreatIntelligenceParsedPatternOutputWithContext(context.Context) ThreatIntelligenceParsedPatternOutput
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternArgs struct {
	// Pattern type key
	PatternTypeKey pulumi.StringPtrInput `pulumi:"patternTypeKey"`
	// Pattern type keys
	PatternTypeValues ThreatIntelligenceParsedPatternTypeValueArrayInput `pulumi:"patternTypeValues"`
}

func (ThreatIntelligenceParsedPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return i.ToThreatIntelligenceParsedPatternOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArgs) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternOutput)
}

// ThreatIntelligenceParsedPatternArrayInput is an input type that accepts ThreatIntelligenceParsedPatternArray and ThreatIntelligenceParsedPatternArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternArrayInput` via:
//
//          ThreatIntelligenceParsedPatternArray{ ThreatIntelligenceParsedPatternArgs{...} }
type ThreatIntelligenceParsedPatternArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput
	ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternArrayOutput
}

type ThreatIntelligenceParsedPatternArray []ThreatIntelligenceParsedPatternInput

func (ThreatIntelligenceParsedPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return i.ToThreatIntelligenceParsedPatternArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternArray) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternArrayOutput)
}

// Describes parsed pattern entity
type ThreatIntelligenceParsedPatternOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutput() ThreatIntelligenceParsedPatternOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternOutput) ToThreatIntelligenceParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternOutput {
	return o
}

// Pattern type key
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) *string { return v.PatternTypeKey }).(pulumi.StringPtrOutput)
}

// Pattern type keys
func (o ThreatIntelligenceParsedPatternOutput) PatternTypeValues() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPattern) []ThreatIntelligenceParsedPatternTypeValue {
		return v.PatternTypeValues
	}).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

type ThreatIntelligenceParsedPatternArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutput() ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) ToThreatIntelligenceParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPattern {
		return vs[0].([]ThreatIntelligenceParsedPattern)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValue struct {
	// Value of parsed pattern
	Value *string `pulumi:"value"`
	// Type of the value
	ValueType *string `pulumi:"valueType"`
}

// ThreatIntelligenceParsedPatternTypeValueInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArgs and ThreatIntelligenceParsedPatternTypeValueOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueInput` via:
//
//          ThreatIntelligenceParsedPatternTypeValueArgs{...}
type ThreatIntelligenceParsedPatternTypeValueInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput
	ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueArgs struct {
	// Value of parsed pattern
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Type of the value
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ThreatIntelligenceParsedPatternTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArgs) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// ThreatIntelligenceParsedPatternTypeValueArrayInput is an input type that accepts ThreatIntelligenceParsedPatternTypeValueArray and ThreatIntelligenceParsedPatternTypeValueArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceParsedPatternTypeValueArrayInput` via:
//
//          ThreatIntelligenceParsedPatternTypeValueArray{ ThreatIntelligenceParsedPatternTypeValueArgs{...} }
type ThreatIntelligenceParsedPatternTypeValueArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput
	ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput
}

type ThreatIntelligenceParsedPatternTypeValueArray []ThreatIntelligenceParsedPatternTypeValueInput

func (ThreatIntelligenceParsedPatternTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return i.ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceParsedPatternTypeValueArray) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceParsedPatternTypeValueArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceParsedPatternTypeValueOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutput() ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueOutput) ToThreatIntelligenceParsedPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueOutput {
	return o
}

// Value of parsed pattern
func (o ThreatIntelligenceParsedPatternTypeValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Type of the value
func (o ThreatIntelligenceParsedPatternTypeValueOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceParsedPatternTypeValue) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceParsedPatternTypeValueArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceParsedPatternTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceParsedPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutput() ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) ToThreatIntelligenceParsedPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceParsedPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceParsedPatternTypeValueArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceParsedPatternTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceParsedPatternTypeValue {
		return vs[0].([]ThreatIntelligenceParsedPatternTypeValue)[vs[1].(int)]
	}).(ThreatIntelligenceParsedPatternTypeValueOutput)
}

// timeline aggregation information per kind
type TimelineAggregationResponse struct {
	// the total items found for a kind
	Count int `pulumi:"count"`
	// the query kind
	Kind string `pulumi:"kind"`
}

// TimelineAggregationResponseInput is an input type that accepts TimelineAggregationResponseArgs and TimelineAggregationResponseOutput values.
// You can construct a concrete instance of `TimelineAggregationResponseInput` via:
//
//          TimelineAggregationResponseArgs{...}
type TimelineAggregationResponseInput interface {
	pulumi.Input

	ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput
	ToTimelineAggregationResponseOutputWithContext(context.Context) TimelineAggregationResponseOutput
}

// timeline aggregation information per kind
type TimelineAggregationResponseArgs struct {
	// the total items found for a kind
	Count pulumi.IntInput `pulumi:"count"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (TimelineAggregationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationResponse)(nil)).Elem()
}

func (i TimelineAggregationResponseArgs) ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput {
	return i.ToTimelineAggregationResponseOutputWithContext(context.Background())
}

func (i TimelineAggregationResponseArgs) ToTimelineAggregationResponseOutputWithContext(ctx context.Context) TimelineAggregationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineAggregationResponseOutput)
}

// TimelineAggregationResponseArrayInput is an input type that accepts TimelineAggregationResponseArray and TimelineAggregationResponseArrayOutput values.
// You can construct a concrete instance of `TimelineAggregationResponseArrayInput` via:
//
//          TimelineAggregationResponseArray{ TimelineAggregationResponseArgs{...} }
type TimelineAggregationResponseArrayInput interface {
	pulumi.Input

	ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput
	ToTimelineAggregationResponseArrayOutputWithContext(context.Context) TimelineAggregationResponseArrayOutput
}

type TimelineAggregationResponseArray []TimelineAggregationResponseInput

func (TimelineAggregationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationResponse)(nil)).Elem()
}

func (i TimelineAggregationResponseArray) ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput {
	return i.ToTimelineAggregationResponseArrayOutputWithContext(context.Background())
}

func (i TimelineAggregationResponseArray) ToTimelineAggregationResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineAggregationResponseArrayOutput)
}

// timeline aggregation information per kind
type TimelineAggregationResponseOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutput() TimelineAggregationResponseOutput {
	return o
}

func (o TimelineAggregationResponseOutput) ToTimelineAggregationResponseOutputWithContext(ctx context.Context) TimelineAggregationResponseOutput {
	return o
}

// the total items found for a kind
func (o TimelineAggregationResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) int { return v.Count }).(pulumi.IntOutput)
}

// the query kind
func (o TimelineAggregationResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineAggregationResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type TimelineAggregationResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineAggregationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationResponse)(nil)).Elem()
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutput() TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) ToTimelineAggregationResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationResponseArrayOutput {
	return o
}

func (o TimelineAggregationResponseArrayOutput) Index(i pulumi.IntInput) TimelineAggregationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineAggregationResponse {
		return vs[0].([]TimelineAggregationResponse)[vs[1].(int)]
	}).(TimelineAggregationResponseOutput)
}

// Timeline Query Errors.
type TimelineErrorResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// TimelineErrorResponseInput is an input type that accepts TimelineErrorResponseArgs and TimelineErrorResponseOutput values.
// You can construct a concrete instance of `TimelineErrorResponseInput` via:
//
//          TimelineErrorResponseArgs{...}
type TimelineErrorResponseInput interface {
	pulumi.Input

	ToTimelineErrorResponseOutput() TimelineErrorResponseOutput
	ToTimelineErrorResponseOutputWithContext(context.Context) TimelineErrorResponseOutput
}

// Timeline Query Errors.
type TimelineErrorResponseArgs struct {
	// the error message
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
	// the query id
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
}

func (TimelineErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorResponse)(nil)).Elem()
}

func (i TimelineErrorResponseArgs) ToTimelineErrorResponseOutput() TimelineErrorResponseOutput {
	return i.ToTimelineErrorResponseOutputWithContext(context.Background())
}

func (i TimelineErrorResponseArgs) ToTimelineErrorResponseOutputWithContext(ctx context.Context) TimelineErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineErrorResponseOutput)
}

// TimelineErrorResponseArrayInput is an input type that accepts TimelineErrorResponseArray and TimelineErrorResponseArrayOutput values.
// You can construct a concrete instance of `TimelineErrorResponseArrayInput` via:
//
//          TimelineErrorResponseArray{ TimelineErrorResponseArgs{...} }
type TimelineErrorResponseArrayInput interface {
	pulumi.Input

	ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput
	ToTimelineErrorResponseArrayOutputWithContext(context.Context) TimelineErrorResponseArrayOutput
}

type TimelineErrorResponseArray []TimelineErrorResponseInput

func (TimelineErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorResponse)(nil)).Elem()
}

func (i TimelineErrorResponseArray) ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput {
	return i.ToTimelineErrorResponseArrayOutputWithContext(context.Background())
}

func (i TimelineErrorResponseArray) ToTimelineErrorResponseArrayOutputWithContext(ctx context.Context) TimelineErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineErrorResponseArrayOutput)
}

// Timeline Query Errors.
type TimelineErrorResponseOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutput() TimelineErrorResponseOutput {
	return o
}

func (o TimelineErrorResponseOutput) ToTimelineErrorResponseOutputWithContext(ctx context.Context) TimelineErrorResponseOutput {
	return o
}

// the error message
func (o TimelineErrorResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o TimelineErrorResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o TimelineErrorResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimelineErrorResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type TimelineErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorResponse)(nil)).Elem()
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutput() TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) ToTimelineErrorResponseArrayOutputWithContext(ctx context.Context) TimelineErrorResponseArrayOutput {
	return o
}

func (o TimelineErrorResponseArrayOutput) Index(i pulumi.IntInput) TimelineErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineErrorResponse {
		return vs[0].([]TimelineErrorResponse)[vs[1].(int)]
	}).(TimelineErrorResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataResponse struct {
	// timeline aggregation per kind
	Aggregations []TimelineAggregationResponse `pulumi:"aggregations"`
	// information about the failure queries
	Errors []TimelineErrorResponse `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount int `pulumi:"totalCount"`
}

// TimelineResultsMetadataResponseInput is an input type that accepts TimelineResultsMetadataResponseArgs and TimelineResultsMetadataResponseOutput values.
// You can construct a concrete instance of `TimelineResultsMetadataResponseInput` via:
//
//          TimelineResultsMetadataResponseArgs{...}
type TimelineResultsMetadataResponseInput interface {
	pulumi.Input

	ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput
	ToTimelineResultsMetadataResponseOutputWithContext(context.Context) TimelineResultsMetadataResponseOutput
}

// Expansion result metadata.
type TimelineResultsMetadataResponseArgs struct {
	// timeline aggregation per kind
	Aggregations TimelineAggregationResponseArrayInput `pulumi:"aggregations"`
	// information about the failure queries
	Errors TimelineErrorResponseArrayInput `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (TimelineResultsMetadataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataResponse)(nil)).Elem()
}

func (i TimelineResultsMetadataResponseArgs) ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput {
	return i.ToTimelineResultsMetadataResponseOutputWithContext(context.Background())
}

func (i TimelineResultsMetadataResponseArgs) ToTimelineResultsMetadataResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineResultsMetadataResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataResponseOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutput() TimelineResultsMetadataResponseOutput {
	return o
}

func (o TimelineResultsMetadataResponseOutput) ToTimelineResultsMetadataResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataResponseOutput {
	return o
}

// timeline aggregation per kind
func (o TimelineResultsMetadataResponseOutput) Aggregations() TimelineAggregationResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineAggregationResponse { return v.Aggregations }).(TimelineAggregationResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataResponseOutput) Errors() TimelineErrorResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) []TimelineErrorResponse { return v.Errors }).(TimelineErrorResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineResultsMetadataResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

// User information that made some action
type UserInfo struct {
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoInput is an input type that accepts UserInfoArgs and UserInfoOutput values.
// You can construct a concrete instance of `UserInfoInput` via:
//
//          UserInfoArgs{...}
type UserInfoInput interface {
	pulumi.Input

	ToUserInfoOutput() UserInfoOutput
	ToUserInfoOutputWithContext(context.Context) UserInfoOutput
}

// User information that made some action
type UserInfoArgs struct {
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (i UserInfoArgs) ToUserInfoOutput() UserInfoOutput {
	return i.ToUserInfoOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput)
}

func (i UserInfoArgs) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput).ToUserInfoPtrOutputWithContext(ctx)
}

// UserInfoPtrInput is an input type that accepts UserInfoArgs, UserInfoPtr and UserInfoPtrOutput values.
// You can construct a concrete instance of `UserInfoPtrInput` via:
//
//          UserInfoArgs{...}
//
//  or:
//
//          nil
type UserInfoPtrInput interface {
	pulumi.Input

	ToUserInfoPtrOutput() UserInfoPtrOutput
	ToUserInfoPtrOutputWithContext(context.Context) UserInfoPtrOutput
}

type userInfoPtrType UserInfoArgs

func UserInfoPtr(v *UserInfoArgs) UserInfoPtrInput {
	return (*userInfoPtrType)(v)
}

func (*userInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (i *userInfoPtrType) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i *userInfoPtrType) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoPtrOutput)
}

// User information that made some action
type UserInfoOutput struct{ *pulumi.OutputState }

func (UserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (o UserInfoOutput) ToUserInfoOutput() UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o.ToUserInfoPtrOutputWithContext(context.Background())
}

func (o UserInfoOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o.ApplyT(func(v UserInfo) *UserInfo {
		return &v
	}).(UserInfoPtrOutput)
}

// The object id of the user.
func (o UserInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoPtrOutput struct{ *pulumi.OutputState }

func (UserInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) Elem() UserInfoOutput {
	return o.ApplyT(func(v *UserInfo) UserInfo { return *v }).(UserInfoOutput)
}

// The object id of the user.
func (o UserInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoResponseInput is an input type that accepts UserInfoResponseArgs and UserInfoResponseOutput values.
// You can construct a concrete instance of `UserInfoResponseInput` via:
//
//          UserInfoResponseArgs{...}
type UserInfoResponseInput interface {
	pulumi.Input

	ToUserInfoResponseOutput() UserInfoResponseOutput
	ToUserInfoResponseOutputWithContext(context.Context) UserInfoResponseOutput
}

// User information that made some action
type UserInfoResponseArgs struct {
	// The email of the user.
	Email pulumi.StringInput `pulumi:"email"`
	// The name of the user.
	Name pulumi.StringInput `pulumi:"name"`
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return i.ToUserInfoResponseOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput)
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput).ToUserInfoResponsePtrOutputWithContext(ctx)
}

// UserInfoResponsePtrInput is an input type that accepts UserInfoResponseArgs, UserInfoResponsePtr and UserInfoResponsePtrOutput values.
// You can construct a concrete instance of `UserInfoResponsePtrInput` via:
//
//          UserInfoResponseArgs{...}
//
//  or:
//
//          nil
type UserInfoResponsePtrInput interface {
	pulumi.Input

	ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput
	ToUserInfoResponsePtrOutputWithContext(context.Context) UserInfoResponsePtrOutput
}

type userInfoResponsePtrType UserInfoResponseArgs

func UserInfoResponsePtr(v *UserInfoResponseArgs) UserInfoResponsePtrInput {
	return (*userInfoResponsePtrType)(v)
}

func (*userInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponsePtrOutput)
}

// User information that made some action
type UserInfoResponseOutput struct{ *pulumi.OutputState }

func (UserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *UserInfoResponse {
		return &v
	}).(UserInfoResponsePtrOutput)
}

// The email of the user.
func (o UserInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o UserInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o UserInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) Elem() UserInfoResponseOutput {
	return o.ApplyT(func(v *UserInfoResponse) UserInfoResponse { return *v }).(UserInfoResponseOutput)
}

// The email of the user.
func (o UserInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o UserInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o UserInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActivityTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(BookmarkTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalOutput{})
	pulumi.RegisterOutputType(EntityInsightItemResponseQueryTimeIntervalPtrOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponseOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoOutput{})
	pulumi.RegisterOutputType(IncidentInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentLabelOutput{})
	pulumi.RegisterOutputType(IncidentLabelArrayOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseArrayOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseArrayOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsOutput{})
	pulumi.RegisterOutputType(InsightsTableResultResponseColumnsArrayOutput{})
	pulumi.RegisterOutputType(SecurityAlertTimelineItemResponseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceParsedPatternTypeValueArrayOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseOutput{})
	pulumi.RegisterOutputType(TimelineErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataResponseOutput{})
	pulumi.RegisterOutputType(UserInfoOutput{})
	pulumi.RegisterOutputType(UserInfoPtrOutput{})
	pulumi.RegisterOutputType(UserInfoResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponsePtrOutput{})
}
