// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents Activity timeline item.
type ActivityTimelineItemInvokeResponse struct {
	// The grouping bucket end time.
	BucketEndTimeUTC string `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC string `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content string `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC string `pulumi:"firstActivityTimeUTC"`
	// The entity query kind type.
	// Expected value is 'Activity'.
	Kind string `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC string `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId string `pulumi:"queryId"`
	// The activity timeline title.
	Title string `pulumi:"title"`
}

// ActivityTimelineItemInvokeResponseInput is an input type that accepts ActivityTimelineItemInvokeResponseArgs and ActivityTimelineItemInvokeResponseOutput values.
// You can construct a concrete instance of `ActivityTimelineItemInvokeResponseInput` via:
//
//          ActivityTimelineItemInvokeResponseArgs{...}
type ActivityTimelineItemInvokeResponseInput interface {
	pulumi.Input

	ToActivityTimelineItemInvokeResponseOutput() ActivityTimelineItemInvokeResponseOutput
	ToActivityTimelineItemInvokeResponseOutputWithContext(context.Context) ActivityTimelineItemInvokeResponseOutput
}

// Represents Activity timeline item.
type ActivityTimelineItemInvokeResponseArgs struct {
	// The grouping bucket end time.
	BucketEndTimeUTC pulumi.StringInput `pulumi:"bucketEndTimeUTC"`
	// The grouping bucket start time.
	BucketStartTimeUTC pulumi.StringInput `pulumi:"bucketStartTimeUTC"`
	// The activity timeline content.
	Content pulumi.StringInput `pulumi:"content"`
	// The time of the first activity in the grouping bucket.
	FirstActivityTimeUTC pulumi.StringInput `pulumi:"firstActivityTimeUTC"`
	// The entity query kind type.
	// Expected value is 'Activity'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The time of the last activity in the grouping bucket.
	LastActivityTimeUTC pulumi.StringInput `pulumi:"lastActivityTimeUTC"`
	// The activity query id.
	QueryId pulumi.StringInput `pulumi:"queryId"`
	// The activity timeline title.
	Title pulumi.StringInput `pulumi:"title"`
}

func (ActivityTimelineItemInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityTimelineItemInvokeResponse)(nil)).Elem()
}

func (i ActivityTimelineItemInvokeResponseArgs) ToActivityTimelineItemInvokeResponseOutput() ActivityTimelineItemInvokeResponseOutput {
	return i.ToActivityTimelineItemInvokeResponseOutputWithContext(context.Background())
}

func (i ActivityTimelineItemInvokeResponseArgs) ToActivityTimelineItemInvokeResponseOutputWithContext(ctx context.Context) ActivityTimelineItemInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityTimelineItemInvokeResponseOutput)
}

// Represents Activity timeline item.
type ActivityTimelineItemInvokeResponseOutput struct{ *pulumi.OutputState }

func (ActivityTimelineItemInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityTimelineItemInvokeResponse)(nil)).Elem()
}

func (o ActivityTimelineItemInvokeResponseOutput) ToActivityTimelineItemInvokeResponseOutput() ActivityTimelineItemInvokeResponseOutput {
	return o
}

func (o ActivityTimelineItemInvokeResponseOutput) ToActivityTimelineItemInvokeResponseOutputWithContext(ctx context.Context) ActivityTimelineItemInvokeResponseOutput {
	return o
}

// The grouping bucket end time.
func (o ActivityTimelineItemInvokeResponseOutput) BucketEndTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.BucketEndTimeUTC }).(pulumi.StringOutput)
}

// The grouping bucket start time.
func (o ActivityTimelineItemInvokeResponseOutput) BucketStartTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.BucketStartTimeUTC }).(pulumi.StringOutput)
}

// The activity timeline content.
func (o ActivityTimelineItemInvokeResponseOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.Content }).(pulumi.StringOutput)
}

// The time of the first activity in the grouping bucket.
func (o ActivityTimelineItemInvokeResponseOutput) FirstActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.FirstActivityTimeUTC }).(pulumi.StringOutput)
}

// The entity query kind type.
// Expected value is 'Activity'.
func (o ActivityTimelineItemInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The time of the last activity in the grouping bucket.
func (o ActivityTimelineItemInvokeResponseOutput) LastActivityTimeUTC() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.LastActivityTimeUTC }).(pulumi.StringOutput)
}

// The activity query id.
func (o ActivityTimelineItemInvokeResponseOutput) QueryId() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.QueryId }).(pulumi.StringOutput)
}

// The activity timeline title.
func (o ActivityTimelineItemInvokeResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ActivityTimelineItemInvokeResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemInvokeResponse struct {
	// The bookmark azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy UserInfoInvokeResponse `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName string `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime *string `pulumi:"eventTime"`
	// The entity query kind type.
	// Expected value is 'Bookmark'.
	Kind string `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels []string `pulumi:"labels"`
	// The notes of the bookmark
	Notes string `pulumi:"notes"`
	// TThe bookmark start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
}

// BookmarkTimelineItemInvokeResponseInput is an input type that accepts BookmarkTimelineItemInvokeResponseArgs and BookmarkTimelineItemInvokeResponseOutput values.
// You can construct a concrete instance of `BookmarkTimelineItemInvokeResponseInput` via:
//
//          BookmarkTimelineItemInvokeResponseArgs{...}
type BookmarkTimelineItemInvokeResponseInput interface {
	pulumi.Input

	ToBookmarkTimelineItemInvokeResponseOutput() BookmarkTimelineItemInvokeResponseOutput
	ToBookmarkTimelineItemInvokeResponseOutputWithContext(context.Context) BookmarkTimelineItemInvokeResponseOutput
}

// Represents bookmark timeline item.
type BookmarkTimelineItemInvokeResponseArgs struct {
	// The bookmark azure resource id.
	AzureResourceId pulumi.StringInput `pulumi:"azureResourceId"`
	// Describes a user that created the bookmark
	CreatedBy UserInfoInvokeResponseInput `pulumi:"createdBy"`
	// The bookmark display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The bookmark end time.
	EndTimeUtc pulumi.StringInput `pulumi:"endTimeUtc"`
	// The bookmark event time.
	EventTime pulumi.StringPtrInput `pulumi:"eventTime"`
	// The entity query kind type.
	// Expected value is 'Bookmark'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// List of labels relevant to this bookmark
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The notes of the bookmark
	Notes pulumi.StringInput `pulumi:"notes"`
	// TThe bookmark start time.
	StartTimeUtc pulumi.StringInput `pulumi:"startTimeUtc"`
}

func (BookmarkTimelineItemInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkTimelineItemInvokeResponse)(nil)).Elem()
}

func (i BookmarkTimelineItemInvokeResponseArgs) ToBookmarkTimelineItemInvokeResponseOutput() BookmarkTimelineItemInvokeResponseOutput {
	return i.ToBookmarkTimelineItemInvokeResponseOutputWithContext(context.Background())
}

func (i BookmarkTimelineItemInvokeResponseArgs) ToBookmarkTimelineItemInvokeResponseOutputWithContext(ctx context.Context) BookmarkTimelineItemInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BookmarkTimelineItemInvokeResponseOutput)
}

// Represents bookmark timeline item.
type BookmarkTimelineItemInvokeResponseOutput struct{ *pulumi.OutputState }

func (BookmarkTimelineItemInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BookmarkTimelineItemInvokeResponse)(nil)).Elem()
}

func (o BookmarkTimelineItemInvokeResponseOutput) ToBookmarkTimelineItemInvokeResponseOutput() BookmarkTimelineItemInvokeResponseOutput {
	return o
}

func (o BookmarkTimelineItemInvokeResponseOutput) ToBookmarkTimelineItemInvokeResponseOutputWithContext(ctx context.Context) BookmarkTimelineItemInvokeResponseOutput {
	return o
}

// The bookmark azure resource id.
func (o BookmarkTimelineItemInvokeResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// Describes a user that created the bookmark
func (o BookmarkTimelineItemInvokeResponseOutput) CreatedBy() UserInfoInvokeResponseOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) UserInfoInvokeResponse { return v.CreatedBy }).(UserInfoInvokeResponseOutput)
}

// The bookmark display name.
func (o BookmarkTimelineItemInvokeResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The bookmark end time.
func (o BookmarkTimelineItemInvokeResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The bookmark event time.
func (o BookmarkTimelineItemInvokeResponseOutput) EventTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) *string { return v.EventTime }).(pulumi.StringPtrOutput)
}

// The entity query kind type.
// Expected value is 'Bookmark'.
func (o BookmarkTimelineItemInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// List of labels relevant to this bookmark
func (o BookmarkTimelineItemInvokeResponseOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The notes of the bookmark
func (o BookmarkTimelineItemInvokeResponseOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.Notes }).(pulumi.StringOutput)
}

// TThe bookmark start time.
func (o BookmarkTimelineItemInvokeResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v BookmarkTimelineItemInvokeResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoInvokeResponse struct {
	// The email of the client.
	Email *string `pulumi:"email"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The object id of the client.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// ClientInfoInvokeResponseInput is an input type that accepts ClientInfoInvokeResponseArgs and ClientInfoInvokeResponseOutput values.
// You can construct a concrete instance of `ClientInfoInvokeResponseInput` via:
//
//          ClientInfoInvokeResponseArgs{...}
type ClientInfoInvokeResponseInput interface {
	pulumi.Input

	ToClientInfoInvokeResponseOutput() ClientInfoInvokeResponseOutput
	ToClientInfoInvokeResponseOutputWithContext(context.Context) ClientInfoInvokeResponseOutput
}

// Information on the client (user or application) that made some action
type ClientInfoInvokeResponseArgs struct {
	// The email of the client.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The object id of the client.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (ClientInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoInvokeResponse)(nil)).Elem()
}

func (i ClientInfoInvokeResponseArgs) ToClientInfoInvokeResponseOutput() ClientInfoInvokeResponseOutput {
	return i.ToClientInfoInvokeResponseOutputWithContext(context.Background())
}

func (i ClientInfoInvokeResponseArgs) ToClientInfoInvokeResponseOutputWithContext(ctx context.Context) ClientInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoInvokeResponseOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (ClientInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoInvokeResponse)(nil)).Elem()
}

func (o ClientInfoInvokeResponseOutput) ToClientInfoInvokeResponseOutput() ClientInfoInvokeResponseOutput {
	return o
}

func (o ClientInfoInvokeResponseOutput) ToClientInfoInvokeResponseOutputWithContext(ctx context.Context) ClientInfoInvokeResponseOutput {
	return o
}

// The email of the client.
func (o ClientInfoInvokeResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoInvokeResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoInvokeResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoInvokeResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoInvokeResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoInvokeResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoResponse struct {
	// The email of the client.
	Email *string `pulumi:"email"`
	// The name of the client.
	Name *string `pulumi:"name"`
	// The object id of the client.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// ClientInfoResponseInput is an input type that accepts ClientInfoResponseArgs and ClientInfoResponseOutput values.
// You can construct a concrete instance of `ClientInfoResponseInput` via:
//
//          ClientInfoResponseArgs{...}
type ClientInfoResponseInput interface {
	pulumi.Input

	ToClientInfoResponseOutput() ClientInfoResponseOutput
	ToClientInfoResponseOutputWithContext(context.Context) ClientInfoResponseOutput
}

// Information on the client (user or application) that made some action
type ClientInfoResponseArgs struct {
	// The email of the client.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the client.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The object id of the client.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the client.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (ClientInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoResponse)(nil)).Elem()
}

func (i ClientInfoResponseArgs) ToClientInfoResponseOutput() ClientInfoResponseOutput {
	return i.ToClientInfoResponseOutputWithContext(context.Background())
}

func (i ClientInfoResponseArgs) ToClientInfoResponseOutputWithContext(ctx context.Context) ClientInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponseOutput)
}

func (i ClientInfoResponseArgs) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return i.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (i ClientInfoResponseArgs) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponseOutput).ToClientInfoResponsePtrOutputWithContext(ctx)
}

// ClientInfoResponsePtrInput is an input type that accepts ClientInfoResponseArgs, ClientInfoResponsePtr and ClientInfoResponsePtrOutput values.
// You can construct a concrete instance of `ClientInfoResponsePtrInput` via:
//
//          ClientInfoResponseArgs{...}
//
//  or:
//
//          nil
type ClientInfoResponsePtrInput interface {
	pulumi.Input

	ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput
	ToClientInfoResponsePtrOutputWithContext(context.Context) ClientInfoResponsePtrOutput
}

type clientInfoResponsePtrType ClientInfoResponseArgs

func ClientInfoResponsePtr(v *ClientInfoResponseArgs) ClientInfoResponsePtrInput {
	return (*clientInfoResponsePtrType)(v)
}

func (*clientInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfoResponse)(nil)).Elem()
}

func (i *clientInfoResponsePtrType) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return i.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (i *clientInfoResponsePtrType) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientInfoResponsePtrOutput)
}

// Information on the client (user or application) that made some action
type ClientInfoResponseOutput struct{ *pulumi.OutputState }

func (ClientInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutput() ClientInfoResponseOutput {
	return o
}

func (o ClientInfoResponseOutput) ToClientInfoResponseOutputWithContext(ctx context.Context) ClientInfoResponseOutput {
	return o
}

func (o ClientInfoResponseOutput) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return o.ToClientInfoResponsePtrOutputWithContext(context.Background())
}

func (o ClientInfoResponseOutput) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *ClientInfoResponse {
		return &v
	}).(ClientInfoResponsePtrOutput)
}

// The email of the client.
func (o ClientInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type ClientInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientInfoResponse)(nil)).Elem()
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutput() ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) ToClientInfoResponsePtrOutputWithContext(ctx context.Context) ClientInfoResponsePtrOutput {
	return o
}

func (o ClientInfoResponsePtrOutput) Elem() ClientInfoResponseOutput {
	return o.ApplyT(func(v *ClientInfoResponse) ClientInfoResponse { return *v }).(ClientInfoResponseOutput)
}

// The email of the client.
func (o ClientInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the client.
func (o ClientInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the client.
func (o ClientInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the client.
func (o ClientInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Entity insight Item.
type EntityInsightItemInvokeResponse struct {
	// Query results for table insights query.
	ChartQueryResults []InsightsTableResultInvokeResponse `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId *string `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval *EntityInsightItemInvokeResponseQueryTimeInterval `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults *InsightsTableResultInvokeResponse `pulumi:"tableQueryResults"`
}

// EntityInsightItemInvokeResponseInput is an input type that accepts EntityInsightItemInvokeResponseArgs and EntityInsightItemInvokeResponseOutput values.
// You can construct a concrete instance of `EntityInsightItemInvokeResponseInput` via:
//
//          EntityInsightItemInvokeResponseArgs{...}
type EntityInsightItemInvokeResponseInput interface {
	pulumi.Input

	ToEntityInsightItemInvokeResponseOutput() EntityInsightItemInvokeResponseOutput
	ToEntityInsightItemInvokeResponseOutputWithContext(context.Context) EntityInsightItemInvokeResponseOutput
}

// Entity insight Item.
type EntityInsightItemInvokeResponseArgs struct {
	// Query results for table insights query.
	ChartQueryResults InsightsTableResultInvokeResponseArrayInput `pulumi:"chartQueryResults"`
	// The query id of the insight
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
	// The Time interval that the query actually executed on.
	QueryTimeInterval EntityInsightItemInvokeResponseQueryTimeIntervalPtrInput `pulumi:"queryTimeInterval"`
	// Query results for table insights query.
	TableQueryResults InsightsTableResultInvokeResponsePtrInput `pulumi:"tableQueryResults"`
}

func (EntityInsightItemInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemInvokeResponse)(nil)).Elem()
}

func (i EntityInsightItemInvokeResponseArgs) ToEntityInsightItemInvokeResponseOutput() EntityInsightItemInvokeResponseOutput {
	return i.ToEntityInsightItemInvokeResponseOutputWithContext(context.Background())
}

func (i EntityInsightItemInvokeResponseArgs) ToEntityInsightItemInvokeResponseOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemInvokeResponseOutput)
}

// EntityInsightItemInvokeResponseArrayInput is an input type that accepts EntityInsightItemInvokeResponseArray and EntityInsightItemInvokeResponseArrayOutput values.
// You can construct a concrete instance of `EntityInsightItemInvokeResponseArrayInput` via:
//
//          EntityInsightItemInvokeResponseArray{ EntityInsightItemInvokeResponseArgs{...} }
type EntityInsightItemInvokeResponseArrayInput interface {
	pulumi.Input

	ToEntityInsightItemInvokeResponseArrayOutput() EntityInsightItemInvokeResponseArrayOutput
	ToEntityInsightItemInvokeResponseArrayOutputWithContext(context.Context) EntityInsightItemInvokeResponseArrayOutput
}

type EntityInsightItemInvokeResponseArray []EntityInsightItemInvokeResponseInput

func (EntityInsightItemInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemInvokeResponse)(nil)).Elem()
}

func (i EntityInsightItemInvokeResponseArray) ToEntityInsightItemInvokeResponseArrayOutput() EntityInsightItemInvokeResponseArrayOutput {
	return i.ToEntityInsightItemInvokeResponseArrayOutputWithContext(context.Background())
}

func (i EntityInsightItemInvokeResponseArray) ToEntityInsightItemInvokeResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemInvokeResponseArrayOutput)
}

// Entity insight Item.
type EntityInsightItemInvokeResponseOutput struct{ *pulumi.OutputState }

func (EntityInsightItemInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemInvokeResponse)(nil)).Elem()
}

func (o EntityInsightItemInvokeResponseOutput) ToEntityInsightItemInvokeResponseOutput() EntityInsightItemInvokeResponseOutput {
	return o
}

func (o EntityInsightItemInvokeResponseOutput) ToEntityInsightItemInvokeResponseOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseOutput {
	return o
}

// Query results for table insights query.
func (o EntityInsightItemInvokeResponseOutput) ChartQueryResults() InsightsTableResultInvokeResponseArrayOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponse) []InsightsTableResultInvokeResponse {
		return v.ChartQueryResults
	}).(InsightsTableResultInvokeResponseArrayOutput)
}

// The query id of the insight
func (o EntityInsightItemInvokeResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

// The Time interval that the query actually executed on.
func (o EntityInsightItemInvokeResponseOutput) QueryTimeInterval() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponse) *EntityInsightItemInvokeResponseQueryTimeInterval {
		return v.QueryTimeInterval
	}).(EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput)
}

// Query results for table insights query.
func (o EntityInsightItemInvokeResponseOutput) TableQueryResults() InsightsTableResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponse) *InsightsTableResultInvokeResponse { return v.TableQueryResults }).(InsightsTableResultInvokeResponsePtrOutput)
}

type EntityInsightItemInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (EntityInsightItemInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityInsightItemInvokeResponse)(nil)).Elem()
}

func (o EntityInsightItemInvokeResponseArrayOutput) ToEntityInsightItemInvokeResponseArrayOutput() EntityInsightItemInvokeResponseArrayOutput {
	return o
}

func (o EntityInsightItemInvokeResponseArrayOutput) ToEntityInsightItemInvokeResponseArrayOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseArrayOutput {
	return o
}

func (o EntityInsightItemInvokeResponseArrayOutput) Index(i pulumi.IntInput) EntityInsightItemInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityInsightItemInvokeResponse {
		return vs[0].([]EntityInsightItemInvokeResponse)[vs[1].(int)]
	}).(EntityInsightItemInvokeResponseOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemInvokeResponseQueryTimeInterval struct {
	// Insight query end time
	EndTime *string `pulumi:"endTime"`
	// Insight query start time
	StartTime *string `pulumi:"startTime"`
}

// EntityInsightItemInvokeResponseQueryTimeIntervalInput is an input type that accepts EntityInsightItemInvokeResponseQueryTimeIntervalArgs and EntityInsightItemInvokeResponseQueryTimeIntervalOutput values.
// You can construct a concrete instance of `EntityInsightItemInvokeResponseQueryTimeIntervalInput` via:
//
//          EntityInsightItemInvokeResponseQueryTimeIntervalArgs{...}
type EntityInsightItemInvokeResponseQueryTimeIntervalInput interface {
	pulumi.Input

	ToEntityInsightItemInvokeResponseQueryTimeIntervalOutput() EntityInsightItemInvokeResponseQueryTimeIntervalOutput
	ToEntityInsightItemInvokeResponseQueryTimeIntervalOutputWithContext(context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalOutput
}

// The Time interval that the query actually executed on.
type EntityInsightItemInvokeResponseQueryTimeIntervalArgs struct {
	// Insight query end time
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// Insight query start time
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (EntityInsightItemInvokeResponseQueryTimeIntervalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemInvokeResponseQueryTimeInterval)(nil)).Elem()
}

func (i EntityInsightItemInvokeResponseQueryTimeIntervalArgs) ToEntityInsightItemInvokeResponseQueryTimeIntervalOutput() EntityInsightItemInvokeResponseQueryTimeIntervalOutput {
	return i.ToEntityInsightItemInvokeResponseQueryTimeIntervalOutputWithContext(context.Background())
}

func (i EntityInsightItemInvokeResponseQueryTimeIntervalArgs) ToEntityInsightItemInvokeResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemInvokeResponseQueryTimeIntervalOutput)
}

func (i EntityInsightItemInvokeResponseQueryTimeIntervalArgs) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return i.ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (i EntityInsightItemInvokeResponseQueryTimeIntervalArgs) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemInvokeResponseQueryTimeIntervalOutput).ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(ctx)
}

// EntityInsightItemInvokeResponseQueryTimeIntervalPtrInput is an input type that accepts EntityInsightItemInvokeResponseQueryTimeIntervalArgs, EntityInsightItemInvokeResponseQueryTimeIntervalPtr and EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput values.
// You can construct a concrete instance of `EntityInsightItemInvokeResponseQueryTimeIntervalPtrInput` via:
//
//          EntityInsightItemInvokeResponseQueryTimeIntervalArgs{...}
//
//  or:
//
//          nil
type EntityInsightItemInvokeResponseQueryTimeIntervalPtrInput interface {
	pulumi.Input

	ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput
	ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput
}

type entityInsightItemInvokeResponseQueryTimeIntervalPtrType EntityInsightItemInvokeResponseQueryTimeIntervalArgs

func EntityInsightItemInvokeResponseQueryTimeIntervalPtr(v *EntityInsightItemInvokeResponseQueryTimeIntervalArgs) EntityInsightItemInvokeResponseQueryTimeIntervalPtrInput {
	return (*entityInsightItemInvokeResponseQueryTimeIntervalPtrType)(v)
}

func (*entityInsightItemInvokeResponseQueryTimeIntervalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemInvokeResponseQueryTimeInterval)(nil)).Elem()
}

func (i *entityInsightItemInvokeResponseQueryTimeIntervalPtrType) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return i.ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (i *entityInsightItemInvokeResponseQueryTimeIntervalPtrType) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput)
}

// The Time interval that the query actually executed on.
type EntityInsightItemInvokeResponseQueryTimeIntervalOutput struct{ *pulumi.OutputState }

func (EntityInsightItemInvokeResponseQueryTimeIntervalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityInsightItemInvokeResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalOutput() EntityInsightItemInvokeResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalOutput {
	return o
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return o.ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(context.Background())
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponseQueryTimeInterval) *EntityInsightItemInvokeResponseQueryTimeInterval {
		return &v
	}).(EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput)
}

// Insight query end time
func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponseQueryTimeInterval) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemInvokeResponseQueryTimeIntervalOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EntityInsightItemInvokeResponseQueryTimeInterval) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput struct{ *pulumi.OutputState }

func (EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityInsightItemInvokeResponseQueryTimeInterval)(nil)).Elem()
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput() EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) ToEntityInsightItemInvokeResponseQueryTimeIntervalPtrOutputWithContext(ctx context.Context) EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput {
	return o
}

func (o EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) Elem() EntityInsightItemInvokeResponseQueryTimeIntervalOutput {
	return o.ApplyT(func(v *EntityInsightItemInvokeResponseQueryTimeInterval) EntityInsightItemInvokeResponseQueryTimeInterval {
		return *v
	}).(EntityInsightItemInvokeResponseQueryTimeIntervalOutput)
}

// Insight query end time
func (o EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemInvokeResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// Insight query start time
func (o EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EntityInsightItemInvokeResponseQueryTimeInterval) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorInvokeResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// GetInsightsErrorInvokeResponseInput is an input type that accepts GetInsightsErrorInvokeResponseArgs and GetInsightsErrorInvokeResponseOutput values.
// You can construct a concrete instance of `GetInsightsErrorInvokeResponseInput` via:
//
//          GetInsightsErrorInvokeResponseArgs{...}
type GetInsightsErrorInvokeResponseInput interface {
	pulumi.Input

	ToGetInsightsErrorInvokeResponseOutput() GetInsightsErrorInvokeResponseOutput
	ToGetInsightsErrorInvokeResponseOutputWithContext(context.Context) GetInsightsErrorInvokeResponseOutput
}

// GetInsights Query Errors.
type GetInsightsErrorInvokeResponseArgs struct {
	// the error message
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
	// the query id
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
}

func (GetInsightsErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorInvokeResponse)(nil)).Elem()
}

func (i GetInsightsErrorInvokeResponseArgs) ToGetInsightsErrorInvokeResponseOutput() GetInsightsErrorInvokeResponseOutput {
	return i.ToGetInsightsErrorInvokeResponseOutputWithContext(context.Background())
}

func (i GetInsightsErrorInvokeResponseArgs) ToGetInsightsErrorInvokeResponseOutputWithContext(ctx context.Context) GetInsightsErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsErrorInvokeResponseOutput)
}

// GetInsightsErrorInvokeResponseArrayInput is an input type that accepts GetInsightsErrorInvokeResponseArray and GetInsightsErrorInvokeResponseArrayOutput values.
// You can construct a concrete instance of `GetInsightsErrorInvokeResponseArrayInput` via:
//
//          GetInsightsErrorInvokeResponseArray{ GetInsightsErrorInvokeResponseArgs{...} }
type GetInsightsErrorInvokeResponseArrayInput interface {
	pulumi.Input

	ToGetInsightsErrorInvokeResponseArrayOutput() GetInsightsErrorInvokeResponseArrayOutput
	ToGetInsightsErrorInvokeResponseArrayOutputWithContext(context.Context) GetInsightsErrorInvokeResponseArrayOutput
}

type GetInsightsErrorInvokeResponseArray []GetInsightsErrorInvokeResponseInput

func (GetInsightsErrorInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorInvokeResponse)(nil)).Elem()
}

func (i GetInsightsErrorInvokeResponseArray) ToGetInsightsErrorInvokeResponseArrayOutput() GetInsightsErrorInvokeResponseArrayOutput {
	return i.ToGetInsightsErrorInvokeResponseArrayOutputWithContext(context.Background())
}

func (i GetInsightsErrorInvokeResponseArray) ToGetInsightsErrorInvokeResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsErrorInvokeResponseArrayOutput)
}

// GetInsights Query Errors.
type GetInsightsErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsErrorInvokeResponse)(nil)).Elem()
}

func (o GetInsightsErrorInvokeResponseOutput) ToGetInsightsErrorInvokeResponseOutput() GetInsightsErrorInvokeResponseOutput {
	return o
}

func (o GetInsightsErrorInvokeResponseOutput) ToGetInsightsErrorInvokeResponseOutputWithContext(ctx context.Context) GetInsightsErrorInvokeResponseOutput {
	return o
}

// the error message
func (o GetInsightsErrorInvokeResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorInvokeResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o GetInsightsErrorInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInsightsErrorInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o GetInsightsErrorInvokeResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInsightsErrorInvokeResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type GetInsightsErrorInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (GetInsightsErrorInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInsightsErrorInvokeResponse)(nil)).Elem()
}

func (o GetInsightsErrorInvokeResponseArrayOutput) ToGetInsightsErrorInvokeResponseArrayOutput() GetInsightsErrorInvokeResponseArrayOutput {
	return o
}

func (o GetInsightsErrorInvokeResponseArrayOutput) ToGetInsightsErrorInvokeResponseArrayOutputWithContext(ctx context.Context) GetInsightsErrorInvokeResponseArrayOutput {
	return o
}

func (o GetInsightsErrorInvokeResponseArrayOutput) Index(i pulumi.IntInput) GetInsightsErrorInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInsightsErrorInvokeResponse {
		return vs[0].([]GetInsightsErrorInvokeResponse)[vs[1].(int)]
	}).(GetInsightsErrorInvokeResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataInvokeResponse struct {
	// information about the failed queries
	Errors []GetInsightsErrorInvokeResponse `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount int `pulumi:"totalCount"`
}

// GetInsightsResultsMetadataInvokeResponseInput is an input type that accepts GetInsightsResultsMetadataInvokeResponseArgs and GetInsightsResultsMetadataInvokeResponseOutput values.
// You can construct a concrete instance of `GetInsightsResultsMetadataInvokeResponseInput` via:
//
//          GetInsightsResultsMetadataInvokeResponseArgs{...}
type GetInsightsResultsMetadataInvokeResponseInput interface {
	pulumi.Input

	ToGetInsightsResultsMetadataInvokeResponseOutput() GetInsightsResultsMetadataInvokeResponseOutput
	ToGetInsightsResultsMetadataInvokeResponseOutputWithContext(context.Context) GetInsightsResultsMetadataInvokeResponseOutput
}

// Get Insights result metadata.
type GetInsightsResultsMetadataInvokeResponseArgs struct {
	// information about the failed queries
	Errors GetInsightsErrorInvokeResponseArrayInput `pulumi:"errors"`
	// the total items found for the insights request
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetInsightsResultsMetadataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataInvokeResponse)(nil)).Elem()
}

func (i GetInsightsResultsMetadataInvokeResponseArgs) ToGetInsightsResultsMetadataInvokeResponseOutput() GetInsightsResultsMetadataInvokeResponseOutput {
	return i.ToGetInsightsResultsMetadataInvokeResponseOutputWithContext(context.Background())
}

func (i GetInsightsResultsMetadataInvokeResponseArgs) ToGetInsightsResultsMetadataInvokeResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInsightsResultsMetadataInvokeResponseOutput)
}

// Get Insights result metadata.
type GetInsightsResultsMetadataInvokeResponseOutput struct{ *pulumi.OutputState }

func (GetInsightsResultsMetadataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInsightsResultsMetadataInvokeResponse)(nil)).Elem()
}

func (o GetInsightsResultsMetadataInvokeResponseOutput) ToGetInsightsResultsMetadataInvokeResponseOutput() GetInsightsResultsMetadataInvokeResponseOutput {
	return o
}

func (o GetInsightsResultsMetadataInvokeResponseOutput) ToGetInsightsResultsMetadataInvokeResponseOutputWithContext(ctx context.Context) GetInsightsResultsMetadataInvokeResponseOutput {
	return o
}

// information about the failed queries
func (o GetInsightsResultsMetadataInvokeResponseOutput) Errors() GetInsightsErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataInvokeResponse) []GetInsightsErrorInvokeResponse { return v.Errors }).(GetInsightsErrorInvokeResponseArrayOutput)
}

// the total items found for the insights request
func (o GetInsightsResultsMetadataInvokeResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInsightsResultsMetadataInvokeResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataInvokeResponse struct {
	// List of product names of alerts in the incident
	AlertProductNames []string `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount int `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount int `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount int `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics []string `pulumi:"tactics"`
}

// IncidentAdditionalDataInvokeResponseInput is an input type that accepts IncidentAdditionalDataInvokeResponseArgs and IncidentAdditionalDataInvokeResponseOutput values.
// You can construct a concrete instance of `IncidentAdditionalDataInvokeResponseInput` via:
//
//          IncidentAdditionalDataInvokeResponseArgs{...}
type IncidentAdditionalDataInvokeResponseInput interface {
	pulumi.Input

	ToIncidentAdditionalDataInvokeResponseOutput() IncidentAdditionalDataInvokeResponseOutput
	ToIncidentAdditionalDataInvokeResponseOutputWithContext(context.Context) IncidentAdditionalDataInvokeResponseOutput
}

// Incident additional data property bag.
type IncidentAdditionalDataInvokeResponseArgs struct {
	// List of product names of alerts in the incident
	AlertProductNames pulumi.StringArrayInput `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount pulumi.IntInput `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount pulumi.IntInput `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount pulumi.IntInput `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics pulumi.StringArrayInput `pulumi:"tactics"`
}

func (IncidentAdditionalDataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataInvokeResponse)(nil)).Elem()
}

func (i IncidentAdditionalDataInvokeResponseArgs) ToIncidentAdditionalDataInvokeResponseOutput() IncidentAdditionalDataInvokeResponseOutput {
	return i.ToIncidentAdditionalDataInvokeResponseOutputWithContext(context.Background())
}

func (i IncidentAdditionalDataInvokeResponseArgs) ToIncidentAdditionalDataInvokeResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataInvokeResponseOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataInvokeResponseOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataInvokeResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataInvokeResponseOutput) ToIncidentAdditionalDataInvokeResponseOutput() IncidentAdditionalDataInvokeResponseOutput {
	return o
}

func (o IncidentAdditionalDataInvokeResponseOutput) ToIncidentAdditionalDataInvokeResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataInvokeResponseOutput {
	return o
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataInvokeResponseOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataInvokeResponse) []string { return v.AlertProductNames }).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataInvokeResponseOutput) AlertsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataInvokeResponse) int { return v.AlertsCount }).(pulumi.IntOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataInvokeResponseOutput) BookmarksCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataInvokeResponse) int { return v.BookmarksCount }).(pulumi.IntOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataInvokeResponseOutput) CommentsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataInvokeResponse) int { return v.CommentsCount }).(pulumi.IntOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataInvokeResponseOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataInvokeResponse) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponse struct {
	// List of product names of alerts in the incident
	AlertProductNames []string `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount int `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount int `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount int `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics []string `pulumi:"tactics"`
}

// IncidentAdditionalDataResponseInput is an input type that accepts IncidentAdditionalDataResponseArgs and IncidentAdditionalDataResponseOutput values.
// You can construct a concrete instance of `IncidentAdditionalDataResponseInput` via:
//
//          IncidentAdditionalDataResponseArgs{...}
type IncidentAdditionalDataResponseInput interface {
	pulumi.Input

	ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput
	ToIncidentAdditionalDataResponseOutputWithContext(context.Context) IncidentAdditionalDataResponseOutput
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseArgs struct {
	// List of product names of alerts in the incident
	AlertProductNames pulumi.StringArrayInput `pulumi:"alertProductNames"`
	// The number of alerts in the incident
	AlertsCount pulumi.IntInput `pulumi:"alertsCount"`
	// The number of bookmarks in the incident
	BookmarksCount pulumi.IntInput `pulumi:"bookmarksCount"`
	// The number of comments in the incident
	CommentsCount pulumi.IntInput `pulumi:"commentsCount"`
	// The tactics associated with incident
	Tactics pulumi.StringArrayInput `pulumi:"tactics"`
}

func (IncidentAdditionalDataResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return i.ToIncidentAdditionalDataResponseOutputWithContext(context.Background())
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponseOutput)
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return i.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (i IncidentAdditionalDataResponseArgs) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponseOutput).ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx)
}

// IncidentAdditionalDataResponsePtrInput is an input type that accepts IncidentAdditionalDataResponseArgs, IncidentAdditionalDataResponsePtr and IncidentAdditionalDataResponsePtrOutput values.
// You can construct a concrete instance of `IncidentAdditionalDataResponsePtrInput` via:
//
//          IncidentAdditionalDataResponseArgs{...}
//
//  or:
//
//          nil
type IncidentAdditionalDataResponsePtrInput interface {
	pulumi.Input

	ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput
	ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Context) IncidentAdditionalDataResponsePtrOutput
}

type incidentAdditionalDataResponsePtrType IncidentAdditionalDataResponseArgs

func IncidentAdditionalDataResponsePtr(v *IncidentAdditionalDataResponseArgs) IncidentAdditionalDataResponsePtrInput {
	return (*incidentAdditionalDataResponsePtrType)(v)
}

func (*incidentAdditionalDataResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentAdditionalDataResponse)(nil)).Elem()
}

func (i *incidentAdditionalDataResponsePtrType) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return i.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (i *incidentAdditionalDataResponsePtrType) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentAdditionalDataResponsePtrOutput)
}

// Incident additional data property bag.
type IncidentAdditionalDataResponseOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutput() IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponseOutputWithContext(ctx context.Context) IncidentAdditionalDataResponseOutput {
	return o
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return o.ToIncidentAdditionalDataResponsePtrOutputWithContext(context.Background())
}

func (o IncidentAdditionalDataResponseOutput) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) *IncidentAdditionalDataResponse {
		return &v
	}).(IncidentAdditionalDataResponsePtrOutput)
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.AlertProductNames }).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponseOutput) AlertsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.AlertsCount }).(pulumi.IntOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponseOutput) BookmarksCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.BookmarksCount }).(pulumi.IntOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponseOutput) CommentsCount() pulumi.IntOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) int { return v.CommentsCount }).(pulumi.IntOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponseOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IncidentAdditionalDataResponse) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

type IncidentAdditionalDataResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentAdditionalDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentAdditionalDataResponse)(nil)).Elem()
}

func (o IncidentAdditionalDataResponsePtrOutput) ToIncidentAdditionalDataResponsePtrOutput() IncidentAdditionalDataResponsePtrOutput {
	return o
}

func (o IncidentAdditionalDataResponsePtrOutput) ToIncidentAdditionalDataResponsePtrOutputWithContext(ctx context.Context) IncidentAdditionalDataResponsePtrOutput {
	return o
}

func (o IncidentAdditionalDataResponsePtrOutput) Elem() IncidentAdditionalDataResponseOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) IncidentAdditionalDataResponse { return *v }).(IncidentAdditionalDataResponseOutput)
}

// List of product names of alerts in the incident
func (o IncidentAdditionalDataResponsePtrOutput) AlertProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) []string {
		if v == nil {
			return nil
		}
		return v.AlertProductNames
	}).(pulumi.StringArrayOutput)
}

// The number of alerts in the incident
func (o IncidentAdditionalDataResponsePtrOutput) AlertsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.AlertsCount
	}).(pulumi.IntPtrOutput)
}

// The number of bookmarks in the incident
func (o IncidentAdditionalDataResponsePtrOutput) BookmarksCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.BookmarksCount
	}).(pulumi.IntPtrOutput)
}

// The number of comments in the incident
func (o IncidentAdditionalDataResponsePtrOutput) CommentsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) *int {
		if v == nil {
			return nil
		}
		return &v.CommentsCount
	}).(pulumi.IntPtrOutput)
}

// The tactics associated with incident
func (o IncidentAdditionalDataResponsePtrOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IncidentAdditionalDataResponse) []string {
		if v == nil {
			return nil
		}
		return v.Tactics
	}).(pulumi.StringArrayOutput)
}

// Describes related incident information for the bookmark
type IncidentInfo struct {
	// Incident Id
	IncidentId string `pulumi:"incidentId"`
	// Relation Name
	RelationName string `pulumi:"relationName"`
	// The severity of the incident
	Severity string `pulumi:"severity"`
	// The title of the incident
	Title string `pulumi:"title"`
}

// IncidentInfoInput is an input type that accepts IncidentInfoArgs and IncidentInfoOutput values.
// You can construct a concrete instance of `IncidentInfoInput` via:
//
//          IncidentInfoArgs{...}
type IncidentInfoInput interface {
	pulumi.Input

	ToIncidentInfoOutput() IncidentInfoOutput
	ToIncidentInfoOutputWithContext(context.Context) IncidentInfoOutput
}

// Describes related incident information for the bookmark
type IncidentInfoArgs struct {
	// Incident Id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringInput `pulumi:"title"`
}

func (IncidentInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (i IncidentInfoArgs) ToIncidentInfoOutput() IncidentInfoOutput {
	return i.ToIncidentInfoOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput)
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i IncidentInfoArgs) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoOutput).ToIncidentInfoPtrOutputWithContext(ctx)
}

// IncidentInfoPtrInput is an input type that accepts IncidentInfoArgs, IncidentInfoPtr and IncidentInfoPtrOutput values.
// You can construct a concrete instance of `IncidentInfoPtrInput` via:
//
//          IncidentInfoArgs{...}
//
//  or:
//
//          nil
type IncidentInfoPtrInput interface {
	pulumi.Input

	ToIncidentInfoPtrOutput() IncidentInfoPtrOutput
	ToIncidentInfoPtrOutputWithContext(context.Context) IncidentInfoPtrOutput
}

type incidentInfoPtrType IncidentInfoArgs

func IncidentInfoPtr(v *IncidentInfoArgs) IncidentInfoPtrInput {
	return (*incidentInfoPtrType)(v)
}

func (*incidentInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return i.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (i *incidentInfoPtrType) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoOutput struct{ *pulumi.OutputState }

func (IncidentInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoOutput) ToIncidentInfoOutput() IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoOutputWithContext(ctx context.Context) IncidentInfoOutput {
	return o
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o.ToIncidentInfoPtrOutputWithContext(context.Background())
}

func (o IncidentInfoOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o.ApplyT(func(v IncidentInfo) *IncidentInfo {
		return &v
	}).(IncidentInfoPtrOutput)
}

// Incident Id
func (o IncidentInfoOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Relation Name
func (o IncidentInfoOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.RelationName }).(pulumi.StringOutput)
}

// The severity of the incident
func (o IncidentInfoOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.Severity }).(pulumi.StringOutput)
}

// The title of the incident
func (o IncidentInfoOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfo) string { return v.Title }).(pulumi.StringOutput)
}

type IncidentInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfo)(nil)).Elem()
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutput() IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) ToIncidentInfoPtrOutputWithContext(ctx context.Context) IncidentInfoPtrOutput {
	return o
}

func (o IncidentInfoPtrOutput) Elem() IncidentInfoOutput {
	return o.ApplyT(func(v *IncidentInfo) IncidentInfo { return *v }).(IncidentInfoOutput)
}

// Incident Id
func (o IncidentInfoPtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoPtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoPtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoInvokeResponse struct {
	// Incident Id
	IncidentId string `pulumi:"incidentId"`
	// Relation Name
	RelationName string `pulumi:"relationName"`
	// The severity of the incident
	Severity string `pulumi:"severity"`
	// The title of the incident
	Title string `pulumi:"title"`
}

// IncidentInfoInvokeResponseInput is an input type that accepts IncidentInfoInvokeResponseArgs and IncidentInfoInvokeResponseOutput values.
// You can construct a concrete instance of `IncidentInfoInvokeResponseInput` via:
//
//          IncidentInfoInvokeResponseArgs{...}
type IncidentInfoInvokeResponseInput interface {
	pulumi.Input

	ToIncidentInfoInvokeResponseOutput() IncidentInfoInvokeResponseOutput
	ToIncidentInfoInvokeResponseOutputWithContext(context.Context) IncidentInfoInvokeResponseOutput
}

// Describes related incident information for the bookmark
type IncidentInfoInvokeResponseArgs struct {
	// Incident Id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringInput `pulumi:"title"`
}

func (IncidentInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoInvokeResponse)(nil)).Elem()
}

func (i IncidentInfoInvokeResponseArgs) ToIncidentInfoInvokeResponseOutput() IncidentInfoInvokeResponseOutput {
	return i.ToIncidentInfoInvokeResponseOutputWithContext(context.Background())
}

func (i IncidentInfoInvokeResponseArgs) ToIncidentInfoInvokeResponseOutputWithContext(ctx context.Context) IncidentInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoInvokeResponseOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (IncidentInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoInvokeResponse)(nil)).Elem()
}

func (o IncidentInfoInvokeResponseOutput) ToIncidentInfoInvokeResponseOutput() IncidentInfoInvokeResponseOutput {
	return o
}

func (o IncidentInfoInvokeResponseOutput) ToIncidentInfoInvokeResponseOutputWithContext(ctx context.Context) IncidentInfoInvokeResponseOutput {
	return o
}

// Incident Id
func (o IncidentInfoInvokeResponseOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoInvokeResponse) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Relation Name
func (o IncidentInfoInvokeResponseOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoInvokeResponse) string { return v.RelationName }).(pulumi.StringOutput)
}

// The severity of the incident
func (o IncidentInfoInvokeResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoInvokeResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The title of the incident
func (o IncidentInfoInvokeResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoInvokeResponse) string { return v.Title }).(pulumi.StringOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoResponse struct {
	// Incident Id
	IncidentId string `pulumi:"incidentId"`
	// Relation Name
	RelationName string `pulumi:"relationName"`
	// The severity of the incident
	Severity string `pulumi:"severity"`
	// The title of the incident
	Title string `pulumi:"title"`
}

// IncidentInfoResponseInput is an input type that accepts IncidentInfoResponseArgs and IncidentInfoResponseOutput values.
// You can construct a concrete instance of `IncidentInfoResponseInput` via:
//
//          IncidentInfoResponseArgs{...}
type IncidentInfoResponseInput interface {
	pulumi.Input

	ToIncidentInfoResponseOutput() IncidentInfoResponseOutput
	ToIncidentInfoResponseOutputWithContext(context.Context) IncidentInfoResponseOutput
}

// Describes related incident information for the bookmark
type IncidentInfoResponseArgs struct {
	// Incident Id
	IncidentId pulumi.StringInput `pulumi:"incidentId"`
	// Relation Name
	RelationName pulumi.StringInput `pulumi:"relationName"`
	// The severity of the incident
	Severity pulumi.StringInput `pulumi:"severity"`
	// The title of the incident
	Title pulumi.StringInput `pulumi:"title"`
}

func (IncidentInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoResponse)(nil)).Elem()
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponseOutput() IncidentInfoResponseOutput {
	return i.ToIncidentInfoResponseOutputWithContext(context.Background())
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponseOutputWithContext(ctx context.Context) IncidentInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponseOutput)
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return i.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (i IncidentInfoResponseArgs) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponseOutput).ToIncidentInfoResponsePtrOutputWithContext(ctx)
}

// IncidentInfoResponsePtrInput is an input type that accepts IncidentInfoResponseArgs, IncidentInfoResponsePtr and IncidentInfoResponsePtrOutput values.
// You can construct a concrete instance of `IncidentInfoResponsePtrInput` via:
//
//          IncidentInfoResponseArgs{...}
//
//  or:
//
//          nil
type IncidentInfoResponsePtrInput interface {
	pulumi.Input

	ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput
	ToIncidentInfoResponsePtrOutputWithContext(context.Context) IncidentInfoResponsePtrOutput
}

type incidentInfoResponsePtrType IncidentInfoResponseArgs

func IncidentInfoResponsePtr(v *IncidentInfoResponseArgs) IncidentInfoResponsePtrInput {
	return (*incidentInfoResponsePtrType)(v)
}

func (*incidentInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfoResponse)(nil)).Elem()
}

func (i *incidentInfoResponsePtrType) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return i.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (i *incidentInfoResponsePtrType) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentInfoResponsePtrOutput)
}

// Describes related incident information for the bookmark
type IncidentInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutput() IncidentInfoResponseOutput {
	return o
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponseOutputWithContext(ctx context.Context) IncidentInfoResponseOutput {
	return o
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return o.ToIncidentInfoResponsePtrOutputWithContext(context.Background())
}

func (o IncidentInfoResponseOutput) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return o.ApplyT(func(v IncidentInfoResponse) *IncidentInfoResponse {
		return &v
	}).(IncidentInfoResponsePtrOutput)
}

// Incident Id
func (o IncidentInfoResponseOutput) IncidentId() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.IncidentId }).(pulumi.StringOutput)
}

// Relation Name
func (o IncidentInfoResponseOutput) RelationName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.RelationName }).(pulumi.StringOutput)
}

// The severity of the incident
func (o IncidentInfoResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The title of the incident
func (o IncidentInfoResponseOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentInfoResponse) string { return v.Title }).(pulumi.StringOutput)
}

type IncidentInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentInfoResponse)(nil)).Elem()
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutput() IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) ToIncidentInfoResponsePtrOutputWithContext(ctx context.Context) IncidentInfoResponsePtrOutput {
	return o
}

func (o IncidentInfoResponsePtrOutput) Elem() IncidentInfoResponseOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) IncidentInfoResponse { return *v }).(IncidentInfoResponseOutput)
}

// Incident Id
func (o IncidentInfoResponsePtrOutput) IncidentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IncidentId
	}).(pulumi.StringPtrOutput)
}

// Relation Name
func (o IncidentInfoResponsePtrOutput) RelationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RelationName
	}).(pulumi.StringPtrOutput)
}

// The severity of the incident
func (o IncidentInfoResponsePtrOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Severity
	}).(pulumi.StringPtrOutput)
}

// The title of the incident
func (o IncidentInfoResponsePtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

// Represents an incident label
type IncidentLabel struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
}

// IncidentLabelInput is an input type that accepts IncidentLabelArgs and IncidentLabelOutput values.
// You can construct a concrete instance of `IncidentLabelInput` via:
//
//          IncidentLabelArgs{...}
type IncidentLabelInput interface {
	pulumi.Input

	ToIncidentLabelOutput() IncidentLabelOutput
	ToIncidentLabelOutputWithContext(context.Context) IncidentLabelOutput
}

// Represents an incident label
type IncidentLabelArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
}

func (IncidentLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArgs) ToIncidentLabelOutput() IncidentLabelOutput {
	return i.ToIncidentLabelOutputWithContext(context.Background())
}

func (i IncidentLabelArgs) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelOutput)
}

// IncidentLabelArrayInput is an input type that accepts IncidentLabelArray and IncidentLabelArrayOutput values.
// You can construct a concrete instance of `IncidentLabelArrayInput` via:
//
//          IncidentLabelArray{ IncidentLabelArgs{...} }
type IncidentLabelArrayInput interface {
	pulumi.Input

	ToIncidentLabelArrayOutput() IncidentLabelArrayOutput
	ToIncidentLabelArrayOutputWithContext(context.Context) IncidentLabelArrayOutput
}

type IncidentLabelArray []IncidentLabelInput

func (IncidentLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return i.ToIncidentLabelArrayOutputWithContext(context.Background())
}

func (i IncidentLabelArray) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelArrayOutput)
}

// Represents an incident label
type IncidentLabelOutput struct{ *pulumi.OutputState }

func (IncidentLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelOutput) ToIncidentLabelOutput() IncidentLabelOutput {
	return o
}

func (o IncidentLabelOutput) ToIncidentLabelOutputWithContext(ctx context.Context) IncidentLabelOutput {
	return o
}

// The name of the label
func (o IncidentLabelOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabel) string { return v.LabelName }).(pulumi.StringOutput)
}

type IncidentLabelArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabel)(nil)).Elem()
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutput() IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) ToIncidentLabelArrayOutputWithContext(ctx context.Context) IncidentLabelArrayOutput {
	return o
}

func (o IncidentLabelArrayOutput) Index(i pulumi.IntInput) IncidentLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabel {
		return vs[0].([]IncidentLabel)[vs[1].(int)]
	}).(IncidentLabelOutput)
}

// Represents an incident label
type IncidentLabelInvokeResponse struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
	// The type of the label
	LabelType string `pulumi:"labelType"`
}

// IncidentLabelInvokeResponseInput is an input type that accepts IncidentLabelInvokeResponseArgs and IncidentLabelInvokeResponseOutput values.
// You can construct a concrete instance of `IncidentLabelInvokeResponseInput` via:
//
//          IncidentLabelInvokeResponseArgs{...}
type IncidentLabelInvokeResponseInput interface {
	pulumi.Input

	ToIncidentLabelInvokeResponseOutput() IncidentLabelInvokeResponseOutput
	ToIncidentLabelInvokeResponseOutputWithContext(context.Context) IncidentLabelInvokeResponseOutput
}

// Represents an incident label
type IncidentLabelInvokeResponseArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
	// The type of the label
	LabelType pulumi.StringInput `pulumi:"labelType"`
}

func (IncidentLabelInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelInvokeResponse)(nil)).Elem()
}

func (i IncidentLabelInvokeResponseArgs) ToIncidentLabelInvokeResponseOutput() IncidentLabelInvokeResponseOutput {
	return i.ToIncidentLabelInvokeResponseOutputWithContext(context.Background())
}

func (i IncidentLabelInvokeResponseArgs) ToIncidentLabelInvokeResponseOutputWithContext(ctx context.Context) IncidentLabelInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelInvokeResponseOutput)
}

// IncidentLabelInvokeResponseArrayInput is an input type that accepts IncidentLabelInvokeResponseArray and IncidentLabelInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IncidentLabelInvokeResponseArrayInput` via:
//
//          IncidentLabelInvokeResponseArray{ IncidentLabelInvokeResponseArgs{...} }
type IncidentLabelInvokeResponseArrayInput interface {
	pulumi.Input

	ToIncidentLabelInvokeResponseArrayOutput() IncidentLabelInvokeResponseArrayOutput
	ToIncidentLabelInvokeResponseArrayOutputWithContext(context.Context) IncidentLabelInvokeResponseArrayOutput
}

type IncidentLabelInvokeResponseArray []IncidentLabelInvokeResponseInput

func (IncidentLabelInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelInvokeResponse)(nil)).Elem()
}

func (i IncidentLabelInvokeResponseArray) ToIncidentLabelInvokeResponseArrayOutput() IncidentLabelInvokeResponseArrayOutput {
	return i.ToIncidentLabelInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IncidentLabelInvokeResponseArray) ToIncidentLabelInvokeResponseArrayOutputWithContext(ctx context.Context) IncidentLabelInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelInvokeResponseArrayOutput)
}

// Represents an incident label
type IncidentLabelInvokeResponseOutput struct{ *pulumi.OutputState }

func (IncidentLabelInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelInvokeResponse)(nil)).Elem()
}

func (o IncidentLabelInvokeResponseOutput) ToIncidentLabelInvokeResponseOutput() IncidentLabelInvokeResponseOutput {
	return o
}

func (o IncidentLabelInvokeResponseOutput) ToIncidentLabelInvokeResponseOutputWithContext(ctx context.Context) IncidentLabelInvokeResponseOutput {
	return o
}

// The name of the label
func (o IncidentLabelInvokeResponseOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelInvokeResponse) string { return v.LabelName }).(pulumi.StringOutput)
}

// The type of the label
func (o IncidentLabelInvokeResponseOutput) LabelType() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelInvokeResponse) string { return v.LabelType }).(pulumi.StringOutput)
}

type IncidentLabelInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelInvokeResponse)(nil)).Elem()
}

func (o IncidentLabelInvokeResponseArrayOutput) ToIncidentLabelInvokeResponseArrayOutput() IncidentLabelInvokeResponseArrayOutput {
	return o
}

func (o IncidentLabelInvokeResponseArrayOutput) ToIncidentLabelInvokeResponseArrayOutputWithContext(ctx context.Context) IncidentLabelInvokeResponseArrayOutput {
	return o
}

func (o IncidentLabelInvokeResponseArrayOutput) Index(i pulumi.IntInput) IncidentLabelInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabelInvokeResponse {
		return vs[0].([]IncidentLabelInvokeResponse)[vs[1].(int)]
	}).(IncidentLabelInvokeResponseOutput)
}

// Represents an incident label
type IncidentLabelResponse struct {
	// The name of the label
	LabelName string `pulumi:"labelName"`
	// The type of the label
	LabelType string `pulumi:"labelType"`
}

// IncidentLabelResponseInput is an input type that accepts IncidentLabelResponseArgs and IncidentLabelResponseOutput values.
// You can construct a concrete instance of `IncidentLabelResponseInput` via:
//
//          IncidentLabelResponseArgs{...}
type IncidentLabelResponseInput interface {
	pulumi.Input

	ToIncidentLabelResponseOutput() IncidentLabelResponseOutput
	ToIncidentLabelResponseOutputWithContext(context.Context) IncidentLabelResponseOutput
}

// Represents an incident label
type IncidentLabelResponseArgs struct {
	// The name of the label
	LabelName pulumi.StringInput `pulumi:"labelName"`
	// The type of the label
	LabelType pulumi.StringInput `pulumi:"labelType"`
}

func (IncidentLabelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (i IncidentLabelResponseArgs) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return i.ToIncidentLabelResponseOutputWithContext(context.Background())
}

func (i IncidentLabelResponseArgs) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelResponseOutput)
}

// IncidentLabelResponseArrayInput is an input type that accepts IncidentLabelResponseArray and IncidentLabelResponseArrayOutput values.
// You can construct a concrete instance of `IncidentLabelResponseArrayInput` via:
//
//          IncidentLabelResponseArray{ IncidentLabelResponseArgs{...} }
type IncidentLabelResponseArrayInput interface {
	pulumi.Input

	ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput
	ToIncidentLabelResponseArrayOutputWithContext(context.Context) IncidentLabelResponseArrayOutput
}

type IncidentLabelResponseArray []IncidentLabelResponseInput

func (IncidentLabelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (i IncidentLabelResponseArray) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return i.ToIncidentLabelResponseArrayOutputWithContext(context.Background())
}

func (i IncidentLabelResponseArray) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentLabelResponseArrayOutput)
}

// Represents an incident label
type IncidentLabelResponseOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutput() IncidentLabelResponseOutput {
	return o
}

func (o IncidentLabelResponseOutput) ToIncidentLabelResponseOutputWithContext(ctx context.Context) IncidentLabelResponseOutput {
	return o
}

// The name of the label
func (o IncidentLabelResponseOutput) LabelName() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelName }).(pulumi.StringOutput)
}

// The type of the label
func (o IncidentLabelResponseOutput) LabelType() pulumi.StringOutput {
	return o.ApplyT(func(v IncidentLabelResponse) string { return v.LabelType }).(pulumi.StringOutput)
}

type IncidentLabelResponseArrayOutput struct{ *pulumi.OutputState }

func (IncidentLabelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncidentLabelResponse)(nil)).Elem()
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutput() IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) ToIncidentLabelResponseArrayOutputWithContext(ctx context.Context) IncidentLabelResponseArrayOutput {
	return o
}

func (o IncidentLabelResponseArrayOutput) Index(i pulumi.IntInput) IncidentLabelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncidentLabelResponse {
		return vs[0].([]IncidentLabelResponse)[vs[1].(int)]
	}).(IncidentLabelResponseOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfo struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoInput is an input type that accepts IncidentOwnerInfoArgs and IncidentOwnerInfoOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoInput` via:
//
//          IncidentOwnerInfoArgs{...}
type IncidentOwnerInfoInput interface {
	pulumi.Input

	ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput
	ToIncidentOwnerInfoOutputWithContext(context.Context) IncidentOwnerInfoOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return i.ToIncidentOwnerInfoOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput)
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoArgs) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoOutput).ToIncidentOwnerInfoPtrOutputWithContext(ctx)
}

// IncidentOwnerInfoPtrInput is an input type that accepts IncidentOwnerInfoArgs, IncidentOwnerInfoPtr and IncidentOwnerInfoPtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoPtrInput` via:
//
//          IncidentOwnerInfoArgs{...}
//
//  or:
//
//          nil
type IncidentOwnerInfoPtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput
	ToIncidentOwnerInfoPtrOutputWithContext(context.Context) IncidentOwnerInfoPtrOutput
}

type incidentOwnerInfoPtrType IncidentOwnerInfoArgs

func IncidentOwnerInfoPtr(v *IncidentOwnerInfoArgs) IncidentOwnerInfoPtrInput {
	return (*incidentOwnerInfoPtrType)(v)
}

func (*incidentOwnerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return i.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoPtrType) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutput() IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoOutputWithContext(ctx context.Context) IncidentOwnerInfoOutput {
	return o
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o.ToIncidentOwnerInfoPtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *IncidentOwnerInfo {
		return &v
	}).(IncidentOwnerInfoPtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfo) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoPtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfo)(nil)).Elem()
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutput() IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) ToIncidentOwnerInfoPtrOutputWithContext(ctx context.Context) IncidentOwnerInfoPtrOutput {
	return o
}

func (o IncidentOwnerInfoPtrOutput) Elem() IncidentOwnerInfoOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) IncidentOwnerInfo { return *v }).(IncidentOwnerInfoOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoPtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfo) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoInvokeResponse struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoInvokeResponseInput is an input type that accepts IncidentOwnerInfoInvokeResponseArgs and IncidentOwnerInfoInvokeResponseOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoInvokeResponseInput` via:
//
//          IncidentOwnerInfoInvokeResponseArgs{...}
type IncidentOwnerInfoInvokeResponseInput interface {
	pulumi.Input

	ToIncidentOwnerInfoInvokeResponseOutput() IncidentOwnerInfoInvokeResponseOutput
	ToIncidentOwnerInfoInvokeResponseOutputWithContext(context.Context) IncidentOwnerInfoInvokeResponseOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoInvokeResponseArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoInvokeResponse)(nil)).Elem()
}

func (i IncidentOwnerInfoInvokeResponseArgs) ToIncidentOwnerInfoInvokeResponseOutput() IncidentOwnerInfoInvokeResponseOutput {
	return i.ToIncidentOwnerInfoInvokeResponseOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoInvokeResponseArgs) ToIncidentOwnerInfoInvokeResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoInvokeResponseOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoInvokeResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoInvokeResponseOutput) ToIncidentOwnerInfoInvokeResponseOutput() IncidentOwnerInfoInvokeResponseOutput {
	return o
}

func (o IncidentOwnerInfoInvokeResponseOutput) ToIncidentOwnerInfoInvokeResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoInvokeResponseOutput {
	return o
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoInvokeResponseOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoInvokeResponse) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoInvokeResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoInvokeResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoInvokeResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoInvokeResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoInvokeResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoInvokeResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponse struct {
	// The name of the user the incident is assigned to.
	AssignedTo *string `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email *string `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId *string `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName *string `pulumi:"userPrincipalName"`
}

// IncidentOwnerInfoResponseInput is an input type that accepts IncidentOwnerInfoResponseArgs and IncidentOwnerInfoResponseOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoResponseInput` via:
//
//          IncidentOwnerInfoResponseArgs{...}
type IncidentOwnerInfoResponseInput interface {
	pulumi.Input

	ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput
	ToIncidentOwnerInfoResponseOutputWithContext(context.Context) IncidentOwnerInfoResponseOutput
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseArgs struct {
	// The name of the user the incident is assigned to.
	AssignedTo pulumi.StringPtrInput `pulumi:"assignedTo"`
	// The email of the user the incident is assigned to.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The object id of the user the incident is assigned to.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The user principal name of the user the incident is assigned to.
	UserPrincipalName pulumi.StringPtrInput `pulumi:"userPrincipalName"`
}

func (IncidentOwnerInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return i.ToIncidentOwnerInfoResponseOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponseOutput)
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return i.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (i IncidentOwnerInfoResponseArgs) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponseOutput).ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx)
}

// IncidentOwnerInfoResponsePtrInput is an input type that accepts IncidentOwnerInfoResponseArgs, IncidentOwnerInfoResponsePtr and IncidentOwnerInfoResponsePtrOutput values.
// You can construct a concrete instance of `IncidentOwnerInfoResponsePtrInput` via:
//
//          IncidentOwnerInfoResponseArgs{...}
//
//  or:
//
//          nil
type IncidentOwnerInfoResponsePtrInput interface {
	pulumi.Input

	ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput
	ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Context) IncidentOwnerInfoResponsePtrOutput
}

type incidentOwnerInfoResponsePtrType IncidentOwnerInfoResponseArgs

func IncidentOwnerInfoResponsePtr(v *IncidentOwnerInfoResponseArgs) IncidentOwnerInfoResponsePtrInput {
	return (*incidentOwnerInfoResponsePtrType)(v)
}

func (*incidentOwnerInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (i *incidentOwnerInfoResponsePtrType) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return i.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (i *incidentOwnerInfoResponsePtrType) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncidentOwnerInfoResponsePtrOutput)
}

// Information on the user an incident is assigned to
type IncidentOwnerInfoResponseOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutput() IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponseOutputWithContext(ctx context.Context) IncidentOwnerInfoResponseOutput {
	return o
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o.ToIncidentOwnerInfoResponsePtrOutputWithContext(context.Background())
}

func (o IncidentOwnerInfoResponseOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *IncidentOwnerInfoResponse {
		return &v
	}).(IncidentOwnerInfoResponsePtrOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.AssignedTo }).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponseOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncidentOwnerInfoResponse) *string { return v.UserPrincipalName }).(pulumi.StringPtrOutput)
}

type IncidentOwnerInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (IncidentOwnerInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IncidentOwnerInfoResponse)(nil)).Elem()
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutput() IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) ToIncidentOwnerInfoResponsePtrOutputWithContext(ctx context.Context) IncidentOwnerInfoResponsePtrOutput {
	return o
}

func (o IncidentOwnerInfoResponsePtrOutput) Elem() IncidentOwnerInfoResponseOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) IncidentOwnerInfoResponse { return *v }).(IncidentOwnerInfoResponseOutput)
}

// The name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) AssignedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.AssignedTo
	}).(pulumi.StringPtrOutput)
}

// The email of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The object id of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// The user principal name of the user the incident is assigned to.
func (o IncidentOwnerInfoResponsePtrOutput) UserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IncidentOwnerInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.UserPrincipalName
	}).(pulumi.StringPtrOutput)
}

// Query results for table insights query.
type InsightsTableResultInvokeResponse struct {
	// Columns Metadata of the table
	Columns []InsightsTableResultInvokeResponseColumns `pulumi:"columns"`
	// Rows data of the table
	Rows [][]string `pulumi:"rows"`
}

// InsightsTableResultInvokeResponseInput is an input type that accepts InsightsTableResultInvokeResponseArgs and InsightsTableResultInvokeResponseOutput values.
// You can construct a concrete instance of `InsightsTableResultInvokeResponseInput` via:
//
//          InsightsTableResultInvokeResponseArgs{...}
type InsightsTableResultInvokeResponseInput interface {
	pulumi.Input

	ToInsightsTableResultInvokeResponseOutput() InsightsTableResultInvokeResponseOutput
	ToInsightsTableResultInvokeResponseOutputWithContext(context.Context) InsightsTableResultInvokeResponseOutput
}

// Query results for table insights query.
type InsightsTableResultInvokeResponseArgs struct {
	// Columns Metadata of the table
	Columns InsightsTableResultInvokeResponseColumnsArrayInput `pulumi:"columns"`
	// Rows data of the table
	Rows pulumi.StringArrayArrayInput `pulumi:"rows"`
}

func (InsightsTableResultInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (i InsightsTableResultInvokeResponseArgs) ToInsightsTableResultInvokeResponseOutput() InsightsTableResultInvokeResponseOutput {
	return i.ToInsightsTableResultInvokeResponseOutputWithContext(context.Background())
}

func (i InsightsTableResultInvokeResponseArgs) ToInsightsTableResultInvokeResponseOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponseOutput)
}

func (i InsightsTableResultInvokeResponseArgs) ToInsightsTableResultInvokeResponsePtrOutput() InsightsTableResultInvokeResponsePtrOutput {
	return i.ToInsightsTableResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i InsightsTableResultInvokeResponseArgs) ToInsightsTableResultInvokeResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponseOutput).ToInsightsTableResultInvokeResponsePtrOutputWithContext(ctx)
}

// InsightsTableResultInvokeResponsePtrInput is an input type that accepts InsightsTableResultInvokeResponseArgs, InsightsTableResultInvokeResponsePtr and InsightsTableResultInvokeResponsePtrOutput values.
// You can construct a concrete instance of `InsightsTableResultInvokeResponsePtrInput` via:
//
//          InsightsTableResultInvokeResponseArgs{...}
//
//  or:
//
//          nil
type InsightsTableResultInvokeResponsePtrInput interface {
	pulumi.Input

	ToInsightsTableResultInvokeResponsePtrOutput() InsightsTableResultInvokeResponsePtrOutput
	ToInsightsTableResultInvokeResponsePtrOutputWithContext(context.Context) InsightsTableResultInvokeResponsePtrOutput
}

type insightsTableResultInvokeResponsePtrType InsightsTableResultInvokeResponseArgs

func InsightsTableResultInvokeResponsePtr(v *InsightsTableResultInvokeResponseArgs) InsightsTableResultInvokeResponsePtrInput {
	return (*insightsTableResultInvokeResponsePtrType)(v)
}

func (*insightsTableResultInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (i *insightsTableResultInvokeResponsePtrType) ToInsightsTableResultInvokeResponsePtrOutput() InsightsTableResultInvokeResponsePtrOutput {
	return i.ToInsightsTableResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *insightsTableResultInvokeResponsePtrType) ToInsightsTableResultInvokeResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponsePtrOutput)
}

// InsightsTableResultInvokeResponseArrayInput is an input type that accepts InsightsTableResultInvokeResponseArray and InsightsTableResultInvokeResponseArrayOutput values.
// You can construct a concrete instance of `InsightsTableResultInvokeResponseArrayInput` via:
//
//          InsightsTableResultInvokeResponseArray{ InsightsTableResultInvokeResponseArgs{...} }
type InsightsTableResultInvokeResponseArrayInput interface {
	pulumi.Input

	ToInsightsTableResultInvokeResponseArrayOutput() InsightsTableResultInvokeResponseArrayOutput
	ToInsightsTableResultInvokeResponseArrayOutputWithContext(context.Context) InsightsTableResultInvokeResponseArrayOutput
}

type InsightsTableResultInvokeResponseArray []InsightsTableResultInvokeResponseInput

func (InsightsTableResultInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (i InsightsTableResultInvokeResponseArray) ToInsightsTableResultInvokeResponseArrayOutput() InsightsTableResultInvokeResponseArrayOutput {
	return i.ToInsightsTableResultInvokeResponseArrayOutputWithContext(context.Background())
}

func (i InsightsTableResultInvokeResponseArray) ToInsightsTableResultInvokeResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponseArrayOutput)
}

// Query results for table insights query.
type InsightsTableResultInvokeResponseOutput struct{ *pulumi.OutputState }

func (InsightsTableResultInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (o InsightsTableResultInvokeResponseOutput) ToInsightsTableResultInvokeResponseOutput() InsightsTableResultInvokeResponseOutput {
	return o
}

func (o InsightsTableResultInvokeResponseOutput) ToInsightsTableResultInvokeResponseOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseOutput {
	return o
}

func (o InsightsTableResultInvokeResponseOutput) ToInsightsTableResultInvokeResponsePtrOutput() InsightsTableResultInvokeResponsePtrOutput {
	return o.ToInsightsTableResultInvokeResponsePtrOutputWithContext(context.Background())
}

func (o InsightsTableResultInvokeResponseOutput) ToInsightsTableResultInvokeResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponsePtrOutput {
	return o.ApplyT(func(v InsightsTableResultInvokeResponse) *InsightsTableResultInvokeResponse {
		return &v
	}).(InsightsTableResultInvokeResponsePtrOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultInvokeResponseOutput) Columns() InsightsTableResultInvokeResponseColumnsArrayOutput {
	return o.ApplyT(func(v InsightsTableResultInvokeResponse) []InsightsTableResultInvokeResponseColumns { return v.Columns }).(InsightsTableResultInvokeResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultInvokeResponseOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v InsightsTableResultInvokeResponse) [][]string { return v.Rows }).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (InsightsTableResultInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (o InsightsTableResultInvokeResponsePtrOutput) ToInsightsTableResultInvokeResponsePtrOutput() InsightsTableResultInvokeResponsePtrOutput {
	return o
}

func (o InsightsTableResultInvokeResponsePtrOutput) ToInsightsTableResultInvokeResponsePtrOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponsePtrOutput {
	return o
}

func (o InsightsTableResultInvokeResponsePtrOutput) Elem() InsightsTableResultInvokeResponseOutput {
	return o.ApplyT(func(v *InsightsTableResultInvokeResponse) InsightsTableResultInvokeResponse { return *v }).(InsightsTableResultInvokeResponseOutput)
}

// Columns Metadata of the table
func (o InsightsTableResultInvokeResponsePtrOutput) Columns() InsightsTableResultInvokeResponseColumnsArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultInvokeResponse) []InsightsTableResultInvokeResponseColumns {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(InsightsTableResultInvokeResponseColumnsArrayOutput)
}

// Rows data of the table
func (o InsightsTableResultInvokeResponsePtrOutput) Rows() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *InsightsTableResultInvokeResponse) [][]string {
		if v == nil {
			return nil
		}
		return v.Rows
	}).(pulumi.StringArrayArrayOutput)
}

type InsightsTableResultInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultInvokeResponse)(nil)).Elem()
}

func (o InsightsTableResultInvokeResponseArrayOutput) ToInsightsTableResultInvokeResponseArrayOutput() InsightsTableResultInvokeResponseArrayOutput {
	return o
}

func (o InsightsTableResultInvokeResponseArrayOutput) ToInsightsTableResultInvokeResponseArrayOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseArrayOutput {
	return o
}

func (o InsightsTableResultInvokeResponseArrayOutput) Index(i pulumi.IntInput) InsightsTableResultInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultInvokeResponse {
		return vs[0].([]InsightsTableResultInvokeResponse)[vs[1].(int)]
	}).(InsightsTableResultInvokeResponseOutput)
}

type InsightsTableResultInvokeResponseColumns struct {
	// the name of the colum
	Name *string `pulumi:"name"`
	// the type of the colum
	Type *string `pulumi:"type"`
}

// InsightsTableResultInvokeResponseColumnsInput is an input type that accepts InsightsTableResultInvokeResponseColumnsArgs and InsightsTableResultInvokeResponseColumnsOutput values.
// You can construct a concrete instance of `InsightsTableResultInvokeResponseColumnsInput` via:
//
//          InsightsTableResultInvokeResponseColumnsArgs{...}
type InsightsTableResultInvokeResponseColumnsInput interface {
	pulumi.Input

	ToInsightsTableResultInvokeResponseColumnsOutput() InsightsTableResultInvokeResponseColumnsOutput
	ToInsightsTableResultInvokeResponseColumnsOutputWithContext(context.Context) InsightsTableResultInvokeResponseColumnsOutput
}

type InsightsTableResultInvokeResponseColumnsArgs struct {
	// the name of the colum
	Name pulumi.StringPtrInput `pulumi:"name"`
	// the type of the colum
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (InsightsTableResultInvokeResponseColumnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultInvokeResponseColumns)(nil)).Elem()
}

func (i InsightsTableResultInvokeResponseColumnsArgs) ToInsightsTableResultInvokeResponseColumnsOutput() InsightsTableResultInvokeResponseColumnsOutput {
	return i.ToInsightsTableResultInvokeResponseColumnsOutputWithContext(context.Background())
}

func (i InsightsTableResultInvokeResponseColumnsArgs) ToInsightsTableResultInvokeResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseColumnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponseColumnsOutput)
}

// InsightsTableResultInvokeResponseColumnsArrayInput is an input type that accepts InsightsTableResultInvokeResponseColumnsArray and InsightsTableResultInvokeResponseColumnsArrayOutput values.
// You can construct a concrete instance of `InsightsTableResultInvokeResponseColumnsArrayInput` via:
//
//          InsightsTableResultInvokeResponseColumnsArray{ InsightsTableResultInvokeResponseColumnsArgs{...} }
type InsightsTableResultInvokeResponseColumnsArrayInput interface {
	pulumi.Input

	ToInsightsTableResultInvokeResponseColumnsArrayOutput() InsightsTableResultInvokeResponseColumnsArrayOutput
	ToInsightsTableResultInvokeResponseColumnsArrayOutputWithContext(context.Context) InsightsTableResultInvokeResponseColumnsArrayOutput
}

type InsightsTableResultInvokeResponseColumnsArray []InsightsTableResultInvokeResponseColumnsInput

func (InsightsTableResultInvokeResponseColumnsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultInvokeResponseColumns)(nil)).Elem()
}

func (i InsightsTableResultInvokeResponseColumnsArray) ToInsightsTableResultInvokeResponseColumnsArrayOutput() InsightsTableResultInvokeResponseColumnsArrayOutput {
	return i.ToInsightsTableResultInvokeResponseColumnsArrayOutputWithContext(context.Background())
}

func (i InsightsTableResultInvokeResponseColumnsArray) ToInsightsTableResultInvokeResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseColumnsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InsightsTableResultInvokeResponseColumnsArrayOutput)
}

type InsightsTableResultInvokeResponseColumnsOutput struct{ *pulumi.OutputState }

func (InsightsTableResultInvokeResponseColumnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InsightsTableResultInvokeResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultInvokeResponseColumnsOutput) ToInsightsTableResultInvokeResponseColumnsOutput() InsightsTableResultInvokeResponseColumnsOutput {
	return o
}

func (o InsightsTableResultInvokeResponseColumnsOutput) ToInsightsTableResultInvokeResponseColumnsOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseColumnsOutput {
	return o
}

// the name of the colum
func (o InsightsTableResultInvokeResponseColumnsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultInvokeResponseColumns) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// the type of the colum
func (o InsightsTableResultInvokeResponseColumnsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InsightsTableResultInvokeResponseColumns) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InsightsTableResultInvokeResponseColumnsArrayOutput struct{ *pulumi.OutputState }

func (InsightsTableResultInvokeResponseColumnsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InsightsTableResultInvokeResponseColumns)(nil)).Elem()
}

func (o InsightsTableResultInvokeResponseColumnsArrayOutput) ToInsightsTableResultInvokeResponseColumnsArrayOutput() InsightsTableResultInvokeResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultInvokeResponseColumnsArrayOutput) ToInsightsTableResultInvokeResponseColumnsArrayOutputWithContext(ctx context.Context) InsightsTableResultInvokeResponseColumnsArrayOutput {
	return o
}

func (o InsightsTableResultInvokeResponseColumnsArrayOutput) Index(i pulumi.IntInput) InsightsTableResultInvokeResponseColumnsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InsightsTableResultInvokeResponseColumns {
		return vs[0].([]InsightsTableResultInvokeResponseColumns)[vs[1].(int)]
	}).(InsightsTableResultInvokeResponseColumnsOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemInvokeResponse struct {
	// The name of the alert type.
	AlertType string `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId string `pulumi:"azureResourceId"`
	// The alert name.
	DisplayName string `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc string `pulumi:"endTimeUtc"`
	// The entity query kind type.
	// Expected value is 'SecurityAlert'.
	Kind string `pulumi:"kind"`
	// The alert product name.
	ProductName string `pulumi:"productName"`
	// The alert severity.
	Severity string `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The alert generated time.
	TimeGenerated string `pulumi:"timeGenerated"`
}

// SecurityAlertTimelineItemInvokeResponseInput is an input type that accepts SecurityAlertTimelineItemInvokeResponseArgs and SecurityAlertTimelineItemInvokeResponseOutput values.
// You can construct a concrete instance of `SecurityAlertTimelineItemInvokeResponseInput` via:
//
//          SecurityAlertTimelineItemInvokeResponseArgs{...}
type SecurityAlertTimelineItemInvokeResponseInput interface {
	pulumi.Input

	ToSecurityAlertTimelineItemInvokeResponseOutput() SecurityAlertTimelineItemInvokeResponseOutput
	ToSecurityAlertTimelineItemInvokeResponseOutputWithContext(context.Context) SecurityAlertTimelineItemInvokeResponseOutput
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemInvokeResponseArgs struct {
	// The name of the alert type.
	AlertType pulumi.StringInput `pulumi:"alertType"`
	// The alert azure resource id.
	AzureResourceId pulumi.StringInput `pulumi:"azureResourceId"`
	// The alert name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The alert end time.
	EndTimeUtc pulumi.StringInput `pulumi:"endTimeUtc"`
	// The entity query kind type.
	// Expected value is 'SecurityAlert'.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The alert product name.
	ProductName pulumi.StringInput `pulumi:"productName"`
	// The alert severity.
	Severity pulumi.StringInput `pulumi:"severity"`
	// The alert start time.
	StartTimeUtc pulumi.StringInput `pulumi:"startTimeUtc"`
	// The alert generated time.
	TimeGenerated pulumi.StringInput `pulumi:"timeGenerated"`
}

func (SecurityAlertTimelineItemInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityAlertTimelineItemInvokeResponse)(nil)).Elem()
}

func (i SecurityAlertTimelineItemInvokeResponseArgs) ToSecurityAlertTimelineItemInvokeResponseOutput() SecurityAlertTimelineItemInvokeResponseOutput {
	return i.ToSecurityAlertTimelineItemInvokeResponseOutputWithContext(context.Background())
}

func (i SecurityAlertTimelineItemInvokeResponseArgs) ToSecurityAlertTimelineItemInvokeResponseOutputWithContext(ctx context.Context) SecurityAlertTimelineItemInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityAlertTimelineItemInvokeResponseOutput)
}

// Represents security alert timeline item.
type SecurityAlertTimelineItemInvokeResponseOutput struct{ *pulumi.OutputState }

func (SecurityAlertTimelineItemInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityAlertTimelineItemInvokeResponse)(nil)).Elem()
}

func (o SecurityAlertTimelineItemInvokeResponseOutput) ToSecurityAlertTimelineItemInvokeResponseOutput() SecurityAlertTimelineItemInvokeResponseOutput {
	return o
}

func (o SecurityAlertTimelineItemInvokeResponseOutput) ToSecurityAlertTimelineItemInvokeResponseOutputWithContext(ctx context.Context) SecurityAlertTimelineItemInvokeResponseOutput {
	return o
}

// The name of the alert type.
func (o SecurityAlertTimelineItemInvokeResponseOutput) AlertType() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.AlertType }).(pulumi.StringOutput)
}

// The alert azure resource id.
func (o SecurityAlertTimelineItemInvokeResponseOutput) AzureResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.AzureResourceId }).(pulumi.StringOutput)
}

// The alert name.
func (o SecurityAlertTimelineItemInvokeResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The alert end time.
func (o SecurityAlertTimelineItemInvokeResponseOutput) EndTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.EndTimeUtc }).(pulumi.StringOutput)
}

// The entity query kind type.
// Expected value is 'SecurityAlert'.
func (o SecurityAlertTimelineItemInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// The alert product name.
func (o SecurityAlertTimelineItemInvokeResponseOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.ProductName }).(pulumi.StringOutput)
}

// The alert severity.
func (o SecurityAlertTimelineItemInvokeResponseOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.Severity }).(pulumi.StringOutput)
}

// The alert start time.
func (o SecurityAlertTimelineItemInvokeResponseOutput) StartTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.StartTimeUtc }).(pulumi.StringOutput)
}

// The alert generated time.
func (o SecurityAlertTimelineItemInvokeResponseOutput) TimeGenerated() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityAlertTimelineItemInvokeResponse) string { return v.TimeGenerated }).(pulumi.StringOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModel struct {
	// Language granular marking model
	Language *string `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef *int `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors []string `pulumi:"selectors"`
}

// ThreatIntelligenceGranularMarkingModelInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArgs and ThreatIntelligenceGranularMarkingModelOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelInput` via:
//
//          ThreatIntelligenceGranularMarkingModelArgs{...}
type ThreatIntelligenceGranularMarkingModelInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput
	ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelOutput
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelArgs struct {
	// Language granular marking model
	Language pulumi.StringPtrInput `pulumi:"language"`
	// marking reference granular marking model
	MarkingRef pulumi.IntPtrInput `pulumi:"markingRef"`
	// granular marking model selectors
	Selectors pulumi.StringArrayInput `pulumi:"selectors"`
}

func (ThreatIntelligenceGranularMarkingModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return i.ToThreatIntelligenceGranularMarkingModelOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArgs) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelOutput)
}

// ThreatIntelligenceGranularMarkingModelArrayInput is an input type that accepts ThreatIntelligenceGranularMarkingModelArray and ThreatIntelligenceGranularMarkingModelArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceGranularMarkingModelArrayInput` via:
//
//          ThreatIntelligenceGranularMarkingModelArray{ ThreatIntelligenceGranularMarkingModelArgs{...} }
type ThreatIntelligenceGranularMarkingModelArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput
	ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput
}

type ThreatIntelligenceGranularMarkingModelArray []ThreatIntelligenceGranularMarkingModelInput

func (ThreatIntelligenceGranularMarkingModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return i.ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceGranularMarkingModelArray) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceGranularMarkingModelArrayOutput)
}

// Describes threat granular marking model entity
type ThreatIntelligenceGranularMarkingModelOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutput() ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelOutput) ToThreatIntelligenceGranularMarkingModelOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelOutput {
	return o
}

// Language granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// marking reference granular marking model
func (o ThreatIntelligenceGranularMarkingModelOutput) MarkingRef() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) *int { return v.MarkingRef }).(pulumi.IntPtrOutput)
}

// granular marking model selectors
func (o ThreatIntelligenceGranularMarkingModelOutput) Selectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceGranularMarkingModel) []string { return v.Selectors }).(pulumi.StringArrayOutput)
}

type ThreatIntelligenceGranularMarkingModelArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceGranularMarkingModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceGranularMarkingModel)(nil)).Elem()
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutput() ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) ToThreatIntelligenceGranularMarkingModelArrayOutputWithContext(ctx context.Context) ThreatIntelligenceGranularMarkingModelArrayOutput {
	return o
}

func (o ThreatIntelligenceGranularMarkingModelArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceGranularMarkingModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceGranularMarkingModel {
		return vs[0].([]ThreatIntelligenceGranularMarkingModel)[vs[1].(int)]
	}).(ThreatIntelligenceGranularMarkingModelOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhase struct {
	// Kill chainName name
	KillChainName *string `pulumi:"killChainName"`
	// Phase name
	PhaseName *int `pulumi:"phaseName"`
}

// ThreatIntelligenceKillChainPhaseInput is an input type that accepts ThreatIntelligenceKillChainPhaseArgs and ThreatIntelligenceKillChainPhaseOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseInput` via:
//
//          ThreatIntelligenceKillChainPhaseArgs{...}
type ThreatIntelligenceKillChainPhaseInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput
	ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseOutput
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseArgs struct {
	// Kill chainName name
	KillChainName pulumi.StringPtrInput `pulumi:"killChainName"`
	// Phase name
	PhaseName pulumi.IntPtrInput `pulumi:"phaseName"`
}

func (ThreatIntelligenceKillChainPhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return i.ToThreatIntelligenceKillChainPhaseOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArgs) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseOutput)
}

// ThreatIntelligenceKillChainPhaseArrayInput is an input type that accepts ThreatIntelligenceKillChainPhaseArray and ThreatIntelligenceKillChainPhaseArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceKillChainPhaseArrayInput` via:
//
//          ThreatIntelligenceKillChainPhaseArray{ ThreatIntelligenceKillChainPhaseArgs{...} }
type ThreatIntelligenceKillChainPhaseArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput
	ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Context) ThreatIntelligenceKillChainPhaseArrayOutput
}

type ThreatIntelligenceKillChainPhaseArray []ThreatIntelligenceKillChainPhaseInput

func (ThreatIntelligenceKillChainPhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return i.ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceKillChainPhaseArray) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceKillChainPhaseArrayOutput)
}

// Describes threat kill chain phase entity
type ThreatIntelligenceKillChainPhaseOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutput() ThreatIntelligenceKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseOutput) ToThreatIntelligenceKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseOutput {
	return o
}

// Kill chainName name
func (o ThreatIntelligenceKillChainPhaseOutput) KillChainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *string { return v.KillChainName }).(pulumi.StringPtrOutput)
}

// Phase name
func (o ThreatIntelligenceKillChainPhaseOutput) PhaseName() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceKillChainPhase) *int { return v.PhaseName }).(pulumi.IntPtrOutput)
}

type ThreatIntelligenceKillChainPhaseArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceKillChainPhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutput() ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) ToThreatIntelligenceKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceKillChainPhaseArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceKillChainPhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceKillChainPhase {
		return vs[0].([]ThreatIntelligenceKillChainPhase)[vs[1].(int)]
	}).(ThreatIntelligenceKillChainPhaseOutput)
}

// timeline aggregation information per kind
type TimelineAggregationInvokeResponse struct {
	// the total items found for a kind
	Count int `pulumi:"count"`
	// the query kind
	Kind string `pulumi:"kind"`
}

// TimelineAggregationInvokeResponseInput is an input type that accepts TimelineAggregationInvokeResponseArgs and TimelineAggregationInvokeResponseOutput values.
// You can construct a concrete instance of `TimelineAggregationInvokeResponseInput` via:
//
//          TimelineAggregationInvokeResponseArgs{...}
type TimelineAggregationInvokeResponseInput interface {
	pulumi.Input

	ToTimelineAggregationInvokeResponseOutput() TimelineAggregationInvokeResponseOutput
	ToTimelineAggregationInvokeResponseOutputWithContext(context.Context) TimelineAggregationInvokeResponseOutput
}

// timeline aggregation information per kind
type TimelineAggregationInvokeResponseArgs struct {
	// the total items found for a kind
	Count pulumi.IntInput `pulumi:"count"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (TimelineAggregationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationInvokeResponse)(nil)).Elem()
}

func (i TimelineAggregationInvokeResponseArgs) ToTimelineAggregationInvokeResponseOutput() TimelineAggregationInvokeResponseOutput {
	return i.ToTimelineAggregationInvokeResponseOutputWithContext(context.Background())
}

func (i TimelineAggregationInvokeResponseArgs) ToTimelineAggregationInvokeResponseOutputWithContext(ctx context.Context) TimelineAggregationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineAggregationInvokeResponseOutput)
}

// TimelineAggregationInvokeResponseArrayInput is an input type that accepts TimelineAggregationInvokeResponseArray and TimelineAggregationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TimelineAggregationInvokeResponseArrayInput` via:
//
//          TimelineAggregationInvokeResponseArray{ TimelineAggregationInvokeResponseArgs{...} }
type TimelineAggregationInvokeResponseArrayInput interface {
	pulumi.Input

	ToTimelineAggregationInvokeResponseArrayOutput() TimelineAggregationInvokeResponseArrayOutput
	ToTimelineAggregationInvokeResponseArrayOutputWithContext(context.Context) TimelineAggregationInvokeResponseArrayOutput
}

type TimelineAggregationInvokeResponseArray []TimelineAggregationInvokeResponseInput

func (TimelineAggregationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationInvokeResponse)(nil)).Elem()
}

func (i TimelineAggregationInvokeResponseArray) ToTimelineAggregationInvokeResponseArrayOutput() TimelineAggregationInvokeResponseArrayOutput {
	return i.ToTimelineAggregationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TimelineAggregationInvokeResponseArray) ToTimelineAggregationInvokeResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineAggregationInvokeResponseArrayOutput)
}

// timeline aggregation information per kind
type TimelineAggregationInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimelineAggregationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineAggregationInvokeResponse)(nil)).Elem()
}

func (o TimelineAggregationInvokeResponseOutput) ToTimelineAggregationInvokeResponseOutput() TimelineAggregationInvokeResponseOutput {
	return o
}

func (o TimelineAggregationInvokeResponseOutput) ToTimelineAggregationInvokeResponseOutputWithContext(ctx context.Context) TimelineAggregationInvokeResponseOutput {
	return o
}

// the total items found for a kind
func (o TimelineAggregationInvokeResponseOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineAggregationInvokeResponse) int { return v.Count }).(pulumi.IntOutput)
}

// the query kind
func (o TimelineAggregationInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineAggregationInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

type TimelineAggregationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineAggregationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineAggregationInvokeResponse)(nil)).Elem()
}

func (o TimelineAggregationInvokeResponseArrayOutput) ToTimelineAggregationInvokeResponseArrayOutput() TimelineAggregationInvokeResponseArrayOutput {
	return o
}

func (o TimelineAggregationInvokeResponseArrayOutput) ToTimelineAggregationInvokeResponseArrayOutputWithContext(ctx context.Context) TimelineAggregationInvokeResponseArrayOutput {
	return o
}

func (o TimelineAggregationInvokeResponseArrayOutput) Index(i pulumi.IntInput) TimelineAggregationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineAggregationInvokeResponse {
		return vs[0].([]TimelineAggregationInvokeResponse)[vs[1].(int)]
	}).(TimelineAggregationInvokeResponseOutput)
}

// Timeline Query Errors.
type TimelineErrorInvokeResponse struct {
	// the error message
	ErrorMessage string `pulumi:"errorMessage"`
	// the query kind
	Kind string `pulumi:"kind"`
	// the query id
	QueryId *string `pulumi:"queryId"`
}

// TimelineErrorInvokeResponseInput is an input type that accepts TimelineErrorInvokeResponseArgs and TimelineErrorInvokeResponseOutput values.
// You can construct a concrete instance of `TimelineErrorInvokeResponseInput` via:
//
//          TimelineErrorInvokeResponseArgs{...}
type TimelineErrorInvokeResponseInput interface {
	pulumi.Input

	ToTimelineErrorInvokeResponseOutput() TimelineErrorInvokeResponseOutput
	ToTimelineErrorInvokeResponseOutputWithContext(context.Context) TimelineErrorInvokeResponseOutput
}

// Timeline Query Errors.
type TimelineErrorInvokeResponseArgs struct {
	// the error message
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// the query kind
	Kind pulumi.StringInput `pulumi:"kind"`
	// the query id
	QueryId pulumi.StringPtrInput `pulumi:"queryId"`
}

func (TimelineErrorInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorInvokeResponse)(nil)).Elem()
}

func (i TimelineErrorInvokeResponseArgs) ToTimelineErrorInvokeResponseOutput() TimelineErrorInvokeResponseOutput {
	return i.ToTimelineErrorInvokeResponseOutputWithContext(context.Background())
}

func (i TimelineErrorInvokeResponseArgs) ToTimelineErrorInvokeResponseOutputWithContext(ctx context.Context) TimelineErrorInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineErrorInvokeResponseOutput)
}

// TimelineErrorInvokeResponseArrayInput is an input type that accepts TimelineErrorInvokeResponseArray and TimelineErrorInvokeResponseArrayOutput values.
// You can construct a concrete instance of `TimelineErrorInvokeResponseArrayInput` via:
//
//          TimelineErrorInvokeResponseArray{ TimelineErrorInvokeResponseArgs{...} }
type TimelineErrorInvokeResponseArrayInput interface {
	pulumi.Input

	ToTimelineErrorInvokeResponseArrayOutput() TimelineErrorInvokeResponseArrayOutput
	ToTimelineErrorInvokeResponseArrayOutputWithContext(context.Context) TimelineErrorInvokeResponseArrayOutput
}

type TimelineErrorInvokeResponseArray []TimelineErrorInvokeResponseInput

func (TimelineErrorInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorInvokeResponse)(nil)).Elem()
}

func (i TimelineErrorInvokeResponseArray) ToTimelineErrorInvokeResponseArrayOutput() TimelineErrorInvokeResponseArrayOutput {
	return i.ToTimelineErrorInvokeResponseArrayOutputWithContext(context.Background())
}

func (i TimelineErrorInvokeResponseArray) ToTimelineErrorInvokeResponseArrayOutputWithContext(ctx context.Context) TimelineErrorInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineErrorInvokeResponseArrayOutput)
}

// Timeline Query Errors.
type TimelineErrorInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimelineErrorInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineErrorInvokeResponse)(nil)).Elem()
}

func (o TimelineErrorInvokeResponseOutput) ToTimelineErrorInvokeResponseOutput() TimelineErrorInvokeResponseOutput {
	return o
}

func (o TimelineErrorInvokeResponseOutput) ToTimelineErrorInvokeResponseOutputWithContext(ctx context.Context) TimelineErrorInvokeResponseOutput {
	return o
}

// the error message
func (o TimelineErrorInvokeResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorInvokeResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// the query kind
func (o TimelineErrorInvokeResponseOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v TimelineErrorInvokeResponse) string { return v.Kind }).(pulumi.StringOutput)
}

// the query id
func (o TimelineErrorInvokeResponseOutput) QueryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimelineErrorInvokeResponse) *string { return v.QueryId }).(pulumi.StringPtrOutput)
}

type TimelineErrorInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (TimelineErrorInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimelineErrorInvokeResponse)(nil)).Elem()
}

func (o TimelineErrorInvokeResponseArrayOutput) ToTimelineErrorInvokeResponseArrayOutput() TimelineErrorInvokeResponseArrayOutput {
	return o
}

func (o TimelineErrorInvokeResponseArrayOutput) ToTimelineErrorInvokeResponseArrayOutputWithContext(ctx context.Context) TimelineErrorInvokeResponseArrayOutput {
	return o
}

func (o TimelineErrorInvokeResponseArrayOutput) Index(i pulumi.IntInput) TimelineErrorInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimelineErrorInvokeResponse {
		return vs[0].([]TimelineErrorInvokeResponse)[vs[1].(int)]
	}).(TimelineErrorInvokeResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataInvokeResponse struct {
	// timeline aggregation per kind
	Aggregations []TimelineAggregationInvokeResponse `pulumi:"aggregations"`
	// information about the failure queries
	Errors []TimelineErrorInvokeResponse `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount int `pulumi:"totalCount"`
}

// TimelineResultsMetadataInvokeResponseInput is an input type that accepts TimelineResultsMetadataInvokeResponseArgs and TimelineResultsMetadataInvokeResponseOutput values.
// You can construct a concrete instance of `TimelineResultsMetadataInvokeResponseInput` via:
//
//          TimelineResultsMetadataInvokeResponseArgs{...}
type TimelineResultsMetadataInvokeResponseInput interface {
	pulumi.Input

	ToTimelineResultsMetadataInvokeResponseOutput() TimelineResultsMetadataInvokeResponseOutput
	ToTimelineResultsMetadataInvokeResponseOutputWithContext(context.Context) TimelineResultsMetadataInvokeResponseOutput
}

// Expansion result metadata.
type TimelineResultsMetadataInvokeResponseArgs struct {
	// timeline aggregation per kind
	Aggregations TimelineAggregationInvokeResponseArrayInput `pulumi:"aggregations"`
	// information about the failure queries
	Errors TimelineErrorInvokeResponseArrayInput `pulumi:"errors"`
	// the total items found for the timeline request
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (TimelineResultsMetadataInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataInvokeResponse)(nil)).Elem()
}

func (i TimelineResultsMetadataInvokeResponseArgs) ToTimelineResultsMetadataInvokeResponseOutput() TimelineResultsMetadataInvokeResponseOutput {
	return i.ToTimelineResultsMetadataInvokeResponseOutputWithContext(context.Background())
}

func (i TimelineResultsMetadataInvokeResponseArgs) ToTimelineResultsMetadataInvokeResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimelineResultsMetadataInvokeResponseOutput)
}

// Expansion result metadata.
type TimelineResultsMetadataInvokeResponseOutput struct{ *pulumi.OutputState }

func (TimelineResultsMetadataInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimelineResultsMetadataInvokeResponse)(nil)).Elem()
}

func (o TimelineResultsMetadataInvokeResponseOutput) ToTimelineResultsMetadataInvokeResponseOutput() TimelineResultsMetadataInvokeResponseOutput {
	return o
}

func (o TimelineResultsMetadataInvokeResponseOutput) ToTimelineResultsMetadataInvokeResponseOutputWithContext(ctx context.Context) TimelineResultsMetadataInvokeResponseOutput {
	return o
}

// timeline aggregation per kind
func (o TimelineResultsMetadataInvokeResponseOutput) Aggregations() TimelineAggregationInvokeResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataInvokeResponse) []TimelineAggregationInvokeResponse {
		return v.Aggregations
	}).(TimelineAggregationInvokeResponseArrayOutput)
}

// information about the failure queries
func (o TimelineResultsMetadataInvokeResponseOutput) Errors() TimelineErrorInvokeResponseArrayOutput {
	return o.ApplyT(func(v TimelineResultsMetadataInvokeResponse) []TimelineErrorInvokeResponse { return v.Errors }).(TimelineErrorInvokeResponseArrayOutput)
}

// the total items found for the timeline request
func (o TimelineResultsMetadataInvokeResponseOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v TimelineResultsMetadataInvokeResponse) int { return v.TotalCount }).(pulumi.IntOutput)
}

// User information that made some action
type UserInfo struct {
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoInput is an input type that accepts UserInfoArgs and UserInfoOutput values.
// You can construct a concrete instance of `UserInfoInput` via:
//
//          UserInfoArgs{...}
type UserInfoInput interface {
	pulumi.Input

	ToUserInfoOutput() UserInfoOutput
	ToUserInfoOutputWithContext(context.Context) UserInfoOutput
}

// User information that made some action
type UserInfoArgs struct {
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (i UserInfoArgs) ToUserInfoOutput() UserInfoOutput {
	return i.ToUserInfoOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput)
}

func (i UserInfoArgs) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i UserInfoArgs) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoOutput).ToUserInfoPtrOutputWithContext(ctx)
}

// UserInfoPtrInput is an input type that accepts UserInfoArgs, UserInfoPtr and UserInfoPtrOutput values.
// You can construct a concrete instance of `UserInfoPtrInput` via:
//
//          UserInfoArgs{...}
//
//  or:
//
//          nil
type UserInfoPtrInput interface {
	pulumi.Input

	ToUserInfoPtrOutput() UserInfoPtrOutput
	ToUserInfoPtrOutputWithContext(context.Context) UserInfoPtrOutput
}

type userInfoPtrType UserInfoArgs

func UserInfoPtr(v *UserInfoArgs) UserInfoPtrInput {
	return (*userInfoPtrType)(v)
}

func (*userInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (i *userInfoPtrType) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return i.ToUserInfoPtrOutputWithContext(context.Background())
}

func (i *userInfoPtrType) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoPtrOutput)
}

// User information that made some action
type UserInfoOutput struct{ *pulumi.OutputState }

func (UserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfo)(nil)).Elem()
}

func (o UserInfoOutput) ToUserInfoOutput() UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoOutputWithContext(ctx context.Context) UserInfoOutput {
	return o
}

func (o UserInfoOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o.ToUserInfoPtrOutputWithContext(context.Background())
}

func (o UserInfoOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o.ApplyT(func(v UserInfo) *UserInfo {
		return &v
	}).(UserInfoPtrOutput)
}

// The object id of the user.
func (o UserInfoOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfo) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoPtrOutput struct{ *pulumi.OutputState }

func (UserInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfo)(nil)).Elem()
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutput() UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) ToUserInfoPtrOutputWithContext(ctx context.Context) UserInfoPtrOutput {
	return o
}

func (o UserInfoPtrOutput) Elem() UserInfoOutput {
	return o.ApplyT(func(v *UserInfo) UserInfo { return *v }).(UserInfoOutput)
}

// The object id of the user.
func (o UserInfoPtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfo) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

// User information that made some action
type UserInfoInvokeResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoInvokeResponseInput is an input type that accepts UserInfoInvokeResponseArgs and UserInfoInvokeResponseOutput values.
// You can construct a concrete instance of `UserInfoInvokeResponseInput` via:
//
//          UserInfoInvokeResponseArgs{...}
type UserInfoInvokeResponseInput interface {
	pulumi.Input

	ToUserInfoInvokeResponseOutput() UserInfoInvokeResponseOutput
	ToUserInfoInvokeResponseOutputWithContext(context.Context) UserInfoInvokeResponseOutput
}

// User information that made some action
type UserInfoInvokeResponseArgs struct {
	// The email of the user.
	Email pulumi.StringInput `pulumi:"email"`
	// The name of the user.
	Name pulumi.StringInput `pulumi:"name"`
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoInvokeResponse)(nil)).Elem()
}

func (i UserInfoInvokeResponseArgs) ToUserInfoInvokeResponseOutput() UserInfoInvokeResponseOutput {
	return i.ToUserInfoInvokeResponseOutputWithContext(context.Background())
}

func (i UserInfoInvokeResponseArgs) ToUserInfoInvokeResponseOutputWithContext(ctx context.Context) UserInfoInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoInvokeResponseOutput)
}

// User information that made some action
type UserInfoInvokeResponseOutput struct{ *pulumi.OutputState }

func (UserInfoInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoInvokeResponse)(nil)).Elem()
}

func (o UserInfoInvokeResponseOutput) ToUserInfoInvokeResponseOutput() UserInfoInvokeResponseOutput {
	return o
}

func (o UserInfoInvokeResponseOutput) ToUserInfoInvokeResponseOutputWithContext(ctx context.Context) UserInfoInvokeResponseOutput {
	return o
}

// The email of the user.
func (o UserInfoInvokeResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoInvokeResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o UserInfoInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o UserInfoInvokeResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoInvokeResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// User information that made some action
type UserInfoResponse struct {
	// The email of the user.
	Email string `pulumi:"email"`
	// The name of the user.
	Name string `pulumi:"name"`
	// The object id of the user.
	ObjectId *string `pulumi:"objectId"`
}

// UserInfoResponseInput is an input type that accepts UserInfoResponseArgs and UserInfoResponseOutput values.
// You can construct a concrete instance of `UserInfoResponseInput` via:
//
//          UserInfoResponseArgs{...}
type UserInfoResponseInput interface {
	pulumi.Input

	ToUserInfoResponseOutput() UserInfoResponseOutput
	ToUserInfoResponseOutputWithContext(context.Context) UserInfoResponseOutput
}

// User information that made some action
type UserInfoResponseArgs struct {
	// The email of the user.
	Email pulumi.StringInput `pulumi:"email"`
	// The name of the user.
	Name pulumi.StringInput `pulumi:"name"`
	// The object id of the user.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
}

func (UserInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return i.ToUserInfoResponseOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput)
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i UserInfoResponseArgs) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponseOutput).ToUserInfoResponsePtrOutputWithContext(ctx)
}

// UserInfoResponsePtrInput is an input type that accepts UserInfoResponseArgs, UserInfoResponsePtr and UserInfoResponsePtrOutput values.
// You can construct a concrete instance of `UserInfoResponsePtrInput` via:
//
//          UserInfoResponseArgs{...}
//
//  or:
//
//          nil
type UserInfoResponsePtrInput interface {
	pulumi.Input

	ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput
	ToUserInfoResponsePtrOutputWithContext(context.Context) UserInfoResponsePtrOutput
}

type userInfoResponsePtrType UserInfoResponseArgs

func UserInfoResponsePtr(v *UserInfoResponseArgs) UserInfoResponsePtrInput {
	return (*userInfoResponsePtrType)(v)
}

func (*userInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return i.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (i *userInfoResponsePtrType) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserInfoResponsePtrOutput)
}

// User information that made some action
type UserInfoResponseOutput struct{ *pulumi.OutputState }

func (UserInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutput() UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponseOutputWithContext(ctx context.Context) UserInfoResponseOutput {
	return o
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o.ToUserInfoResponsePtrOutputWithContext(context.Background())
}

func (o UserInfoResponseOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *UserInfoResponse {
		return &v
	}).(UserInfoResponsePtrOutput)
}

// The email of the user.
func (o UserInfoResponseOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Email }).(pulumi.StringOutput)
}

// The name of the user.
func (o UserInfoResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserInfoResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The object id of the user.
func (o UserInfoResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserInfoResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

type UserInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (UserInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserInfoResponse)(nil)).Elem()
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutput() UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) ToUserInfoResponsePtrOutputWithContext(ctx context.Context) UserInfoResponsePtrOutput {
	return o
}

func (o UserInfoResponsePtrOutput) Elem() UserInfoResponseOutput {
	return o.ApplyT(func(v *UserInfoResponse) UserInfoResponse { return *v }).(UserInfoResponseOutput)
}

// The email of the user.
func (o UserInfoResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the user.
func (o UserInfoResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The object id of the user.
func (o UserInfoResponsePtrOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.ObjectId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ActivityTimelineItemInvokeResponseOutput{})
	pulumi.RegisterOutputType(BookmarkTimelineItemInvokeResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoResponseOutput{})
	pulumi.RegisterOutputType(ClientInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(EntityInsightItemInvokeResponseOutput{})
	pulumi.RegisterOutputType(EntityInsightItemInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(EntityInsightItemInvokeResponseQueryTimeIntervalOutput{})
	pulumi.RegisterOutputType(EntityInsightItemInvokeResponseQueryTimeIntervalPtrOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(GetInsightsErrorInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(GetInsightsResultsMetadataInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponseOutput{})
	pulumi.RegisterOutputType(IncidentAdditionalDataResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoOutput{})
	pulumi.RegisterOutputType(IncidentInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(IncidentLabelOutput{})
	pulumi.RegisterOutputType(IncidentLabelArrayOutput{})
	pulumi.RegisterOutputType(IncidentLabelInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncidentLabelInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseOutput{})
	pulumi.RegisterOutputType(IncidentLabelResponseArrayOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoPtrOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponseOutput{})
	pulumi.RegisterOutputType(IncidentOwnerInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultInvokeResponseOutput{})
	pulumi.RegisterOutputType(InsightsTableResultInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(InsightsTableResultInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(InsightsTableResultInvokeResponseColumnsOutput{})
	pulumi.RegisterOutputType(InsightsTableResultInvokeResponseColumnsArrayOutput{})
	pulumi.RegisterOutputType(SecurityAlertTimelineItemInvokeResponseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceGranularMarkingModelArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceKillChainPhaseArrayOutput{})
	pulumi.RegisterOutputType(TimelineAggregationInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimelineAggregationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineErrorInvokeResponseOutput{})
	pulumi.RegisterOutputType(TimelineErrorInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(TimelineResultsMetadataInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserInfoOutput{})
	pulumi.RegisterOutputType(UserInfoPtrOutput{})
	pulumi.RegisterOutputType(UserInfoInvokeResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponseOutput{})
	pulumi.RegisterOutputType(UserInfoResponsePtrOutput{})
}
