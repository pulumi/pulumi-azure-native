// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings with single toggle.
func LookupIPSyncer(ctx *pulumi.Context, args *LookupIPSyncerArgs, opts ...pulumi.InvokeOption) (*LookupIPSyncerResult, error) {
	var rv LookupIPSyncerResult
	err := ctx.Invoke("azure-native:securityinsights/v20190101preview:getIPSyncer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIPSyncerArgs struct {
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
	SettingsName string `pulumi:"settingsName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// Settings with single toggle.
type LookupIPSyncerResult struct {
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Azure resource Id
	Id string `pulumi:"id"`
	// Determines whether the setting is enable or disabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Expected value is 'IPSyncer'.
	Kind string `pulumi:"kind"`
	// Azure resource name
	Name string `pulumi:"name"`
	// Azure resource type
	Type string `pulumi:"type"`
}

func LookupIPSyncerOutput(ctx *pulumi.Context, args LookupIPSyncerOutputArgs, opts ...pulumi.InvokeOption) LookupIPSyncerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIPSyncerResult, error) {
			args := v.(LookupIPSyncerArgs)
			r, err := LookupIPSyncer(ctx, &args, opts...)
			var s LookupIPSyncerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIPSyncerResultOutput)
}

type LookupIPSyncerOutputArgs struct {
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput `pulumi:"operationalInsightsResourceProvider"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba
	SettingsName pulumi.StringInput `pulumi:"settingsName"`
	// The name of the workspace.
	WorkspaceName pulumi.StringInput `pulumi:"workspaceName"`
}

func (LookupIPSyncerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSyncerArgs)(nil)).Elem()
}

// Settings with single toggle.
type LookupIPSyncerResultOutput struct{ *pulumi.OutputState }

func (LookupIPSyncerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPSyncerResult)(nil)).Elem()
}

func (o LookupIPSyncerResultOutput) ToLookupIPSyncerResultOutput() LookupIPSyncerResultOutput {
	return o
}

func (o LookupIPSyncerResultOutput) ToLookupIPSyncerResultOutputWithContext(ctx context.Context) LookupIPSyncerResultOutput {
	return o
}

// Etag of the azure resource
func (o LookupIPSyncerResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Azure resource Id
func (o LookupIPSyncerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Determines whether the setting is enable or disabled.
func (o LookupIPSyncerResultOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Expected value is 'IPSyncer'.
func (o LookupIPSyncerResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) string { return v.Kind }).(pulumi.StringOutput)
}

// Azure resource name
func (o LookupIPSyncerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) string { return v.Name }).(pulumi.StringOutput)
}

// Azure resource type
func (o LookupIPSyncerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIPSyncerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPSyncerResultOutput{})
}
