// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings with single toggle.
type IPSyncer struct {
	pulumi.CustomResourceState

	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Determines whether the setting is enable or disabled.
	IsEnabled pulumi.BoolOutput `pulumi:"isEnabled"`
	// Expected value is 'IPSyncer'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewIPSyncer registers a new resource with the given unique name, arguments, and options.
func NewIPSyncer(ctx *pulumi.Context,
	name string, args *IPSyncerArgs, opts ...pulumi.ResourceOption) (*IPSyncer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("invalid value for required argument 'OperationalInsightsResourceProvider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	args.Kind = pulumi.String("IPSyncer")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20190101preview:IPSyncer"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights:IPSyncer"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights:IPSyncer"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20210301preview:IPSyncer"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210301preview:IPSyncer"),
		},
	})
	opts = append(opts, aliases)
	var resource IPSyncer
	err := ctx.RegisterResource("azure-native:securityinsights/v20190101preview:IPSyncer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPSyncer gets an existing IPSyncer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPSyncer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPSyncerState, opts ...pulumi.ResourceOption) (*IPSyncer, error) {
	var resource IPSyncer
	err := ctx.ReadResource("azure-native:securityinsights/v20190101preview:IPSyncer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPSyncer resources.
type ipsyncerState struct {
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Determines whether the setting is enable or disabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Expected value is 'IPSyncer'.
	Kind *string `pulumi:"kind"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// Azure resource type
	Type *string `pulumi:"type"`
}

type IPSyncerState struct {
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// Determines whether the setting is enable or disabled.
	IsEnabled pulumi.BoolPtrInput
	// Expected value is 'IPSyncer'.
	Kind pulumi.StringPtrInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// Azure resource type
	Type pulumi.StringPtrInput
}

func (IPSyncerState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsyncerState)(nil)).Elem()
}

type ipsyncerArgs struct {
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Expected value is 'IPSyncer'.
	Kind string `pulumi:"kind"`
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The setting name. Supports - EyesOn, EntityAnalytics, Ueba
	SettingsName *string `pulumi:"settingsName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a IPSyncer resource.
type IPSyncerArgs struct {
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// Expected value is 'IPSyncer'.
	Kind pulumi.StringInput
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The setting name. Supports - EyesOn, EntityAnalytics, Ueba
	SettingsName pulumi.StringPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (IPSyncerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipsyncerArgs)(nil)).Elem()
}

type IPSyncerInput interface {
	pulumi.Input

	ToIPSyncerOutput() IPSyncerOutput
	ToIPSyncerOutputWithContext(ctx context.Context) IPSyncerOutput
}

func (*IPSyncer) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSyncer)(nil))
}

func (i *IPSyncer) ToIPSyncerOutput() IPSyncerOutput {
	return i.ToIPSyncerOutputWithContext(context.Background())
}

func (i *IPSyncer) ToIPSyncerOutputWithContext(ctx context.Context) IPSyncerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSyncerOutput)
}

type IPSyncerOutput struct {
	*pulumi.OutputState
}

func (IPSyncerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSyncer)(nil))
}

func (o IPSyncerOutput) ToIPSyncerOutput() IPSyncerOutput {
	return o
}

func (o IPSyncerOutput) ToIPSyncerOutputWithContext(ctx context.Context) IPSyncerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(IPSyncerOutput{})
}
