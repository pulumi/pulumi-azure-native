// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MSTIDataConnector struct {
	pulumi.CustomResourceState

	DataTypes MSTIDataConnectorDataTypesResponseOutput `pulumi:"dataTypes"`
	Etag      pulumi.StringPtrOutput                   `pulumi:"etag"`
	Kind      pulumi.StringOutput                      `pulumi:"kind"`
	Name      pulumi.StringOutput                      `pulumi:"name"`
	TenantId  pulumi.StringOutput                      `pulumi:"tenantId"`
	Type      pulumi.StringOutput                      `pulumi:"type"`
}

// NewMSTIDataConnector registers a new resource with the given unique name, arguments, and options.
func NewMSTIDataConnector(ctx *pulumi.Context,
	name string, args *MSTIDataConnectorArgs, opts ...pulumi.ResourceOption) (*MSTIDataConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataTypes == nil {
		return nil, errors.New("invalid value for required argument 'DataTypes'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("invalid value for required argument 'OperationalInsightsResourceProvider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	args.Kind = pulumi.String("MicrosoftThreatIntelligence")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20190101preview:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20200101:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20200101:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20210301preview:MSTIDataConnector"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210301preview:MSTIDataConnector"),
		},
	})
	opts = append(opts, aliases)
	var resource MSTIDataConnector
	err := ctx.RegisterResource("azure-native:securityinsights/v20190101preview:MSTIDataConnector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMSTIDataConnector gets an existing MSTIDataConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMSTIDataConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MSTIDataConnectorState, opts ...pulumi.ResourceOption) (*MSTIDataConnector, error) {
	var resource MSTIDataConnector
	err := ctx.ReadResource("azure-native:securityinsights/v20190101preview:MSTIDataConnector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MSTIDataConnector resources.
type mstidataConnectorState struct {
}

type MSTIDataConnectorState struct {
}

func (MSTIDataConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*mstidataConnectorState)(nil)).Elem()
}

type mstidataConnectorArgs struct {
	DataConnectorId                     *string                    `pulumi:"dataConnectorId"`
	DataTypes                           MSTIDataConnectorDataTypes `pulumi:"dataTypes"`
	Etag                                *string                    `pulumi:"etag"`
	Kind                                string                     `pulumi:"kind"`
	OperationalInsightsResourceProvider string                     `pulumi:"operationalInsightsResourceProvider"`
	ResourceGroupName                   string                     `pulumi:"resourceGroupName"`
	TenantId                            string                     `pulumi:"tenantId"`
	WorkspaceName                       string                     `pulumi:"workspaceName"`
}

// The set of arguments for constructing a MSTIDataConnector resource.
type MSTIDataConnectorArgs struct {
	DataConnectorId                     pulumi.StringPtrInput
	DataTypes                           MSTIDataConnectorDataTypesInput
	Etag                                pulumi.StringPtrInput
	Kind                                pulumi.StringInput
	OperationalInsightsResourceProvider pulumi.StringInput
	ResourceGroupName                   pulumi.StringInput
	TenantId                            pulumi.StringInput
	WorkspaceName                       pulumi.StringInput
}

func (MSTIDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mstidataConnectorArgs)(nil)).Elem()
}

type MSTIDataConnectorInput interface {
	pulumi.Input

	ToMSTIDataConnectorOutput() MSTIDataConnectorOutput
	ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput
}

func (*MSTIDataConnector) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnector)(nil))
}

func (i *MSTIDataConnector) ToMSTIDataConnectorOutput() MSTIDataConnectorOutput {
	return i.ToMSTIDataConnectorOutputWithContext(context.Background())
}

func (i *MSTIDataConnector) ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MSTIDataConnectorOutput)
}

type MSTIDataConnectorOutput struct{ *pulumi.OutputState }

func (MSTIDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MSTIDataConnector)(nil))
}

func (o MSTIDataConnectorOutput) ToMSTIDataConnectorOutput() MSTIDataConnectorOutput {
	return o
}

func (o MSTIDataConnectorOutput) ToMSTIDataConnectorOutputWithContext(ctx context.Context) MSTIDataConnectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MSTIDataConnectorOutput{})
}
