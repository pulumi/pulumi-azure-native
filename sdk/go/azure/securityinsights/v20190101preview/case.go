// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents a case in Azure Security Insights.
type Case struct {
	pulumi.CustomResourceState

	// a sequential number
	CaseNumber pulumi.IntOutput `pulumi:"caseNumber"`
	// The reason the case was closed
	CloseReason pulumi.StringPtrOutput `pulumi:"closeReason"`
	// the case close reason details
	ClosedReasonText pulumi.StringPtrOutput `pulumi:"closedReasonText"`
	// The time the case was created
	CreatedTimeUtc pulumi.StringOutput `pulumi:"createdTimeUtc"`
	// The description of the case
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The end time of the case
	EndTimeUtc pulumi.StringPtrOutput `pulumi:"endTimeUtc"`
	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// List of labels relevant to this case
	Labels pulumi.StringArrayOutput `pulumi:"labels"`
	// the last comment in the case
	LastComment pulumi.StringOutput `pulumi:"lastComment"`
	// The last time the case was updated
	LastUpdatedTimeUtc pulumi.StringOutput `pulumi:"lastUpdatedTimeUtc"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Describes a user that the case is assigned to
	Owner UserInfoResponsePtrOutput `pulumi:"owner"`
	// List of related alert identifiers
	RelatedAlertIds pulumi.StringArrayOutput `pulumi:"relatedAlertIds"`
	// The severity of the case
	Severity pulumi.StringOutput `pulumi:"severity"`
	// The start time of the case
	StartTimeUtc pulumi.StringOutput `pulumi:"startTimeUtc"`
	// The status of the case
	Status pulumi.StringOutput `pulumi:"status"`
	// The tactics associated with case
	Tactics pulumi.StringArrayOutput `pulumi:"tactics"`
	// The title of the case
	Title pulumi.StringOutput `pulumi:"title"`
	// the number of total comments in the case
	TotalComments pulumi.IntOutput `pulumi:"totalComments"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewCase registers a new resource with the given unique name, arguments, and options.
func NewCase(ctx *pulumi.Context,
	name string, args *CaseArgs, opts ...pulumi.ResourceOption) (*Case, error) {
	if args == nil || args.CaseId == nil {
		return nil, errors.New("missing required argument 'CaseId'")
	}
	if args == nil || args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("missing required argument 'OperationalInsightsResourceProvider'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Severity == nil {
		return nil, errors.New("missing required argument 'Severity'")
	}
	if args == nil || args.StartTimeUtc == nil {
		return nil, errors.New("missing required argument 'StartTimeUtc'")
	}
	if args == nil || args.Status == nil {
		return nil, errors.New("missing required argument 'Status'")
	}
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	if args == nil || args.WorkspaceName == nil {
		return nil, errors.New("missing required argument 'WorkspaceName'")
	}
	if args == nil {
		args = &CaseArgs{}
	}
	var resource Case
	err := ctx.RegisterResource("azure-nextgen:securityinsights/v20190101preview:Case", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCase gets an existing Case resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CaseState, opts ...pulumi.ResourceOption) (*Case, error) {
	var resource Case
	err := ctx.ReadResource("azure-nextgen:securityinsights/v20190101preview:Case", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Case resources.
type caseState struct {
	// a sequential number
	CaseNumber *int `pulumi:"caseNumber"`
	// The reason the case was closed
	CloseReason *string `pulumi:"closeReason"`
	// the case close reason details
	ClosedReasonText *string `pulumi:"closedReasonText"`
	// The time the case was created
	CreatedTimeUtc *string `pulumi:"createdTimeUtc"`
	// The description of the case
	Description *string `pulumi:"description"`
	// The end time of the case
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// List of labels relevant to this case
	Labels []string `pulumi:"labels"`
	// the last comment in the case
	LastComment *string `pulumi:"lastComment"`
	// The last time the case was updated
	LastUpdatedTimeUtc *string `pulumi:"lastUpdatedTimeUtc"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// Describes a user that the case is assigned to
	Owner *UserInfoResponse `pulumi:"owner"`
	// List of related alert identifiers
	RelatedAlertIds []string `pulumi:"relatedAlertIds"`
	// The severity of the case
	Severity *string `pulumi:"severity"`
	// The start time of the case
	StartTimeUtc *string `pulumi:"startTimeUtc"`
	// The status of the case
	Status *string `pulumi:"status"`
	// The tactics associated with case
	Tactics []string `pulumi:"tactics"`
	// The title of the case
	Title *string `pulumi:"title"`
	// the number of total comments in the case
	TotalComments *int `pulumi:"totalComments"`
	// Azure resource type
	Type *string `pulumi:"type"`
}

type CaseState struct {
	// a sequential number
	CaseNumber pulumi.IntPtrInput
	// The reason the case was closed
	CloseReason pulumi.StringPtrInput
	// the case close reason details
	ClosedReasonText pulumi.StringPtrInput
	// The time the case was created
	CreatedTimeUtc pulumi.StringPtrInput
	// The description of the case
	Description pulumi.StringPtrInput
	// The end time of the case
	EndTimeUtc pulumi.StringPtrInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// List of labels relevant to this case
	Labels pulumi.StringArrayInput
	// the last comment in the case
	LastComment pulumi.StringPtrInput
	// The last time the case was updated
	LastUpdatedTimeUtc pulumi.StringPtrInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// Describes a user that the case is assigned to
	Owner UserInfoResponsePtrInput
	// List of related alert identifiers
	RelatedAlertIds pulumi.StringArrayInput
	// The severity of the case
	Severity pulumi.StringPtrInput
	// The start time of the case
	StartTimeUtc pulumi.StringPtrInput
	// The status of the case
	Status pulumi.StringPtrInput
	// The tactics associated with case
	Tactics pulumi.StringArrayInput
	// The title of the case
	Title pulumi.StringPtrInput
	// the number of total comments in the case
	TotalComments pulumi.IntPtrInput
	// Azure resource type
	Type pulumi.StringPtrInput
}

func (CaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*caseState)(nil)).Elem()
}

type caseArgs struct {
	// Case ID
	CaseId string `pulumi:"caseId"`
	// The reason the case was closed
	CloseReason *string `pulumi:"closeReason"`
	// the case close reason details
	ClosedReasonText *string `pulumi:"closedReasonText"`
	// The description of the case
	Description *string `pulumi:"description"`
	// The end time of the case
	EndTimeUtc *string `pulumi:"endTimeUtc"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// List of labels relevant to this case
	Labels []string `pulumi:"labels"`
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// Describes a user that the case is assigned to
	Owner *UserInfo `pulumi:"owner"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The severity of the case
	Severity string `pulumi:"severity"`
	// The start time of the case
	StartTimeUtc string `pulumi:"startTimeUtc"`
	// The status of the case
	Status string `pulumi:"status"`
	// The title of the case
	Title string `pulumi:"title"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Case resource.
type CaseArgs struct {
	// Case ID
	CaseId pulumi.StringInput
	// The reason the case was closed
	CloseReason pulumi.StringPtrInput
	// the case close reason details
	ClosedReasonText pulumi.StringPtrInput
	// The description of the case
	Description pulumi.StringPtrInput
	// The end time of the case
	EndTimeUtc pulumi.StringPtrInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// List of labels relevant to this case
	Labels pulumi.StringArrayInput
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput
	// Describes a user that the case is assigned to
	Owner UserInfoPtrInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The severity of the case
	Severity pulumi.StringInput
	// The start time of the case
	StartTimeUtc pulumi.StringInput
	// The status of the case
	Status pulumi.StringInput
	// The title of the case
	Title pulumi.StringInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (CaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*caseArgs)(nil)).Elem()
}
