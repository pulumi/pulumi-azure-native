// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190101preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings with single toggle.
type Ueba struct {
	pulumi.CustomResourceState

	// The relevant data sources that enriched by ueba
	DataSources pulumi.StringArrayOutput `pulumi:"dataSources"`
	// Etag of the azure resource
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Expected value is 'Ueba'.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Azure resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Azure resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewUeba registers a new resource with the given unique name, arguments, and options.
func NewUeba(ctx *pulumi.Context,
	name string, args *UebaArgs, opts ...pulumi.ResourceOption) (*Ueba, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.OperationalInsightsResourceProvider == nil {
		return nil, errors.New("invalid value for required argument 'OperationalInsightsResourceProvider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceName == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceName'")
	}
	args.Kind = pulumi.String("Ueba")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20190101preview:Ueba"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights:Ueba"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights:Ueba"),
		},
		{
			Type: pulumi.String("azure-native:securityinsights/v20210301preview:Ueba"),
		},
		{
			Type: pulumi.String("azure-nextgen:securityinsights/v20210301preview:Ueba"),
		},
	})
	opts = append(opts, aliases)
	var resource Ueba
	err := ctx.RegisterResource("azure-native:securityinsights/v20190101preview:Ueba", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUeba gets an existing Ueba resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUeba(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UebaState, opts ...pulumi.ResourceOption) (*Ueba, error) {
	var resource Ueba
	err := ctx.ReadResource("azure-native:securityinsights/v20190101preview:Ueba", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ueba resources.
type uebaState struct {
	// The relevant data sources that enriched by ueba
	DataSources []string `pulumi:"dataSources"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Expected value is 'Ueba'.
	Kind *string `pulumi:"kind"`
	// Azure resource name
	Name *string `pulumi:"name"`
	// Azure resource type
	Type *string `pulumi:"type"`
}

type UebaState struct {
	// The relevant data sources that enriched by ueba
	DataSources pulumi.StringArrayInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// Expected value is 'Ueba'.
	Kind pulumi.StringPtrInput
	// Azure resource name
	Name pulumi.StringPtrInput
	// Azure resource type
	Type pulumi.StringPtrInput
}

func (UebaState) ElementType() reflect.Type {
	return reflect.TypeOf((*uebaState)(nil)).Elem()
}

type uebaArgs struct {
	// The relevant data sources that enriched by ueba
	DataSources []string `pulumi:"dataSources"`
	// Etag of the azure resource
	Etag *string `pulumi:"etag"`
	// Expected value is 'Ueba'.
	Kind string `pulumi:"kind"`
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider string `pulumi:"operationalInsightsResourceProvider"`
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The setting name. Supports - EyesOn, EntityAnalytics, Ueba
	SettingsName *string `pulumi:"settingsName"`
	// The name of the workspace.
	WorkspaceName string `pulumi:"workspaceName"`
}

// The set of arguments for constructing a Ueba resource.
type UebaArgs struct {
	// The relevant data sources that enriched by ueba
	DataSources pulumi.StringArrayInput
	// Etag of the azure resource
	Etag pulumi.StringPtrInput
	// Expected value is 'Ueba'.
	Kind pulumi.StringInput
	// The namespace of workspaces resource provider- Microsoft.OperationalInsights.
	OperationalInsightsResourceProvider pulumi.StringInput
	// The name of the resource group within the user's subscription. The name is case insensitive.
	ResourceGroupName pulumi.StringInput
	// The setting name. Supports - EyesOn, EntityAnalytics, Ueba
	SettingsName pulumi.StringPtrInput
	// The name of the workspace.
	WorkspaceName pulumi.StringInput
}

func (UebaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*uebaArgs)(nil)).Elem()
}

type UebaInput interface {
	pulumi.Input

	ToUebaOutput() UebaOutput
	ToUebaOutputWithContext(ctx context.Context) UebaOutput
}

func (*Ueba) ElementType() reflect.Type {
	return reflect.TypeOf((*Ueba)(nil))
}

func (i *Ueba) ToUebaOutput() UebaOutput {
	return i.ToUebaOutputWithContext(context.Background())
}

func (i *Ueba) ToUebaOutputWithContext(ctx context.Context) UebaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UebaOutput)
}

type UebaOutput struct {
	*pulumi.OutputState
}

func (UebaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ueba)(nil))
}

func (o UebaOutput) ToUebaOutput() UebaOutput {
	return o
}

func (o UebaOutput) ToUebaOutputWithContext(ctx context.Context) UebaOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(UebaOutput{})
}
