// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200701preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupMaintenanceConfiguration(ctx *pulumi.Context, args *LookupMaintenanceConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupMaintenanceConfigurationResult, error) {
	var rv LookupMaintenanceConfigurationResult
	err := ctx.Invoke("azure-nextgen:maintenance/v20200701preview:getMaintenanceConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMaintenanceConfigurationArgs struct {
	// Resource Group Name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource Identifier
	ResourceName string `pulumi:"resourceName"`
}

// Maintenance configuration record type
type LookupMaintenanceConfigurationResult struct {
	// Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.
	Duration *string `pulumi:"duration"`
	// Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.
	ExpirationDateTime *string `pulumi:"expirationDateTime"`
	// Gets or sets extensionProperties of the maintenanceConfiguration
	ExtensionProperties map[string]string `pulumi:"extensionProperties"`
	// Gets or sets location of the resource
	Location *string `pulumi:"location"`
	// Gets or sets maintenanceScope of the configuration
	MaintenanceScope *string `pulumi:"maintenanceScope"`
	// Name of the resource
	Name string `pulumi:"name"`
	// Gets or sets namespace of the resource
	Namespace *string `pulumi:"namespace"`
	// Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday]. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday.
	RecurEvery *string `pulumi:"recurEvery"`
	// Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.
	StartDateTime *string `pulumi:"startDateTime"`
	// Gets or sets tags of the resource
	Tags map[string]string `pulumi:"tags"`
	// Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.
	TimeZone *string `pulumi:"timeZone"`
	// Type of the resource
	Type string `pulumi:"type"`
	// Gets or sets the visibility of the configuration
	Visibility *string `pulumi:"visibility"`
}
