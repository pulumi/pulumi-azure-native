// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workloads

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define the SAP Central Server Instance.
// API Version: 2021-12-01-preview.
func LookupSAPCentralInstance(ctx *pulumi.Context, args *LookupSAPCentralInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSAPCentralInstanceResult, error) {
	var rv LookupSAPCentralInstanceResult
	err := ctx.Invoke("azure-native:workloads:getSAPCentralInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSAPCentralInstanceArgs struct {
	// Central Instance name string modeled as parameter for auto generation to work correctly.
	CentralInstanceName string `pulumi:"centralInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP.
	SapVirtualInstanceName string `pulumi:"sapVirtualInstanceName"`
}

// Define the SAP Central Server Instance.
type LookupSAPCentralInstanceResult struct {
	// Defines the SAP ERS Server properties.
	EnqueueReplicationServerProperties *EnqueueReplicationServerPropertiesResponse `pulumi:"enqueueReplicationServerProperties"`
	// Defines the SAP enqueue server properties.
	EnqueueServerProperties *EnqueueServerPropertiesResponse `pulumi:"enqueueServerProperties"`
	// Defines the Central Instance errors.
	Errors SAPVirtualInstanceErrorResponse `pulumi:"errors"`
	// Defines the SAP Gateway Server properties.
	GatewayServerProperties *GatewayServerPropertiesResponse `pulumi:"gatewayServerProperties"`
	// Defines the SAP Instance health.
	Health string `pulumi:"health"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The central server instance id.
	InstanceNo string `pulumi:"instanceNo"`
	// The central server kernel patch.
	KernelPatch string `pulumi:"kernelPatch"`
	// The central server kernel version.
	KernelVersion string `pulumi:"kernelVersion"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// Defines the SAP message server properties.
	MessageServerProperties *MessageServerPropertiesResponse `pulumi:"messageServerProperties"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines the SAP Instance status.
	Status string `pulumi:"status"`
	// The central server subnet.
	Subnet string `pulumi:"subnet"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The list of virtual machines.
	VmDetails []CentralServerVmDetailsResponse `pulumi:"vmDetails"`
}

func LookupSAPCentralInstanceOutput(ctx *pulumi.Context, args LookupSAPCentralInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSAPCentralInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSAPCentralInstanceResult, error) {
			args := v.(LookupSAPCentralInstanceArgs)
			r, err := LookupSAPCentralInstance(ctx, &args, opts...)
			var s LookupSAPCentralInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSAPCentralInstanceResultOutput)
}

type LookupSAPCentralInstanceOutputArgs struct {
	// Central Instance name string modeled as parameter for auto generation to work correctly.
	CentralInstanceName pulumi.StringInput `pulumi:"centralInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP.
	SapVirtualInstanceName pulumi.StringInput `pulumi:"sapVirtualInstanceName"`
}

func (LookupSAPCentralInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSAPCentralInstanceArgs)(nil)).Elem()
}

// Define the SAP Central Server Instance.
type LookupSAPCentralInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSAPCentralInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSAPCentralInstanceResult)(nil)).Elem()
}

func (o LookupSAPCentralInstanceResultOutput) ToLookupSAPCentralInstanceResultOutput() LookupSAPCentralInstanceResultOutput {
	return o
}

func (o LookupSAPCentralInstanceResultOutput) ToLookupSAPCentralInstanceResultOutputWithContext(ctx context.Context) LookupSAPCentralInstanceResultOutput {
	return o
}

// Defines the SAP ERS Server properties.
func (o LookupSAPCentralInstanceResultOutput) EnqueueReplicationServerProperties() EnqueueReplicationServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) *EnqueueReplicationServerPropertiesResponse {
		return v.EnqueueReplicationServerProperties
	}).(EnqueueReplicationServerPropertiesResponsePtrOutput)
}

// Defines the SAP enqueue server properties.
func (o LookupSAPCentralInstanceResultOutput) EnqueueServerProperties() EnqueueServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) *EnqueueServerPropertiesResponse {
		return v.EnqueueServerProperties
	}).(EnqueueServerPropertiesResponsePtrOutput)
}

// Defines the Central Instance errors.
func (o LookupSAPCentralInstanceResultOutput) Errors() SAPVirtualInstanceErrorResponseOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) SAPVirtualInstanceErrorResponse { return v.Errors }).(SAPVirtualInstanceErrorResponseOutput)
}

// Defines the SAP Gateway Server properties.
func (o LookupSAPCentralInstanceResultOutput) GatewayServerProperties() GatewayServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) *GatewayServerPropertiesResponse {
		return v.GatewayServerProperties
	}).(GatewayServerPropertiesResponsePtrOutput)
}

// Defines the SAP Instance health.
func (o LookupSAPCentralInstanceResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Health }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSAPCentralInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The central server instance id.
func (o LookupSAPCentralInstanceResultOutput) InstanceNo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.InstanceNo }).(pulumi.StringOutput)
}

// The central server kernel patch.
func (o LookupSAPCentralInstanceResultOutput) KernelPatch() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.KernelPatch }).(pulumi.StringOutput)
}

// The central server kernel version.
func (o LookupSAPCentralInstanceResultOutput) KernelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.KernelVersion }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSAPCentralInstanceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Location }).(pulumi.StringOutput)
}

// Defines the SAP message server properties.
func (o LookupSAPCentralInstanceResultOutput) MessageServerProperties() MessageServerPropertiesResponsePtrOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) *MessageServerPropertiesResponse {
		return v.MessageServerProperties
	}).(MessageServerPropertiesResponsePtrOutput)
}

// The name of the resource
func (o LookupSAPCentralInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the provisioning states.
func (o LookupSAPCentralInstanceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines the SAP Instance status.
func (o LookupSAPCentralInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// The central server subnet.
func (o LookupSAPCentralInstanceResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSAPCentralInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSAPCentralInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSAPCentralInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of virtual machines.
func (o LookupSAPCentralInstanceResultOutput) VmDetails() CentralServerVmDetailsResponseArrayOutput {
	return o.ApplyT(func(v LookupSAPCentralInstanceResult) []CentralServerVmDetailsResponse { return v.VmDetails }).(CentralServerVmDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSAPCentralInstanceResultOutput{})
}
