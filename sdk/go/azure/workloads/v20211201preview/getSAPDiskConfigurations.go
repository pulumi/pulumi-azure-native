// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The list of disk configuration for vmSku which are part of SAP deployment.
func GetSAPDiskConfigurations(ctx *pulumi.Context, args *GetSAPDiskConfigurationsArgs, opts ...pulumi.InvokeOption) (*GetSAPDiskConfigurationsResult, error) {
	var rv GetSAPDiskConfigurationsResult
	err := ctx.Invoke("azure-native:workloads/v20211201preview:getSAPDiskConfigurations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetSAPDiskConfigurationsArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation string `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType string `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku string `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType string `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment string `pulumi:"environment"`
	// The name of Azure region.
	Location string `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct string `pulumi:"sapProduct"`
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSAPDiskConfigurationsResult struct {
	// Gets the list of Disk Configurations.
	DiskConfigurations []SAPDiskConfigurationResponse `pulumi:"diskConfigurations"`
}

func GetSAPDiskConfigurationsOutput(ctx *pulumi.Context, args GetSAPDiskConfigurationsOutputArgs, opts ...pulumi.InvokeOption) GetSAPDiskConfigurationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSAPDiskConfigurationsResult, error) {
			args := v.(GetSAPDiskConfigurationsArgs)
			r, err := GetSAPDiskConfigurations(ctx, &args, opts...)
			var s GetSAPDiskConfigurationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSAPDiskConfigurationsResultOutput)
}

type GetSAPDiskConfigurationsOutputArgs struct {
	// The geo-location where the SAP resources will be created.
	AppLocation pulumi.StringInput `pulumi:"appLocation"`
	// The database type. Eg: HANA, DB2, etc
	DatabaseType pulumi.StringInput `pulumi:"databaseType"`
	// The VM SKU for database instance.
	DbVmSku pulumi.StringInput `pulumi:"dbVmSku"`
	// The deployment type. Eg: SingleServer/ThreeTier
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// Defines the environment type - Production/Non Production.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The name of Azure region.
	Location pulumi.StringInput `pulumi:"location"`
	// Defines the SAP Product type.
	SapProduct pulumi.StringInput `pulumi:"sapProduct"`
}

func (GetSAPDiskConfigurationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSAPDiskConfigurationsArgs)(nil)).Elem()
}

// The list of disk configuration for vmSku which are part of SAP deployment.
type GetSAPDiskConfigurationsResultOutput struct{ *pulumi.OutputState }

func (GetSAPDiskConfigurationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSAPDiskConfigurationsResult)(nil)).Elem()
}

func (o GetSAPDiskConfigurationsResultOutput) ToGetSAPDiskConfigurationsResultOutput() GetSAPDiskConfigurationsResultOutput {
	return o
}

func (o GetSAPDiskConfigurationsResultOutput) ToGetSAPDiskConfigurationsResultOutputWithContext(ctx context.Context) GetSAPDiskConfigurationsResultOutput {
	return o
}

// Gets the list of Disk Configurations.
func (o GetSAPDiskConfigurationsResultOutput) DiskConfigurations() SAPDiskConfigurationResponseArrayOutput {
	return o.ApplyT(func(v GetSAPDiskConfigurationsResult) []SAPDiskConfigurationResponse { return v.DiskConfigurations }).(SAPDiskConfigurationResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSAPDiskConfigurationsResultOutput{})
}
