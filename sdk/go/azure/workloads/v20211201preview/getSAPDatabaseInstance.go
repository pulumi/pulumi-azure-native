// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define the SAP Database Instance.
func LookupSAPDatabaseInstance(ctx *pulumi.Context, args *LookupSAPDatabaseInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSAPDatabaseInstanceResult, error) {
	var rv LookupSAPDatabaseInstanceResult
	err := ctx.Invoke("azure-native:workloads/v20211201preview:getSAPDatabaseInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSAPDatabaseInstanceArgs struct {
	// Database Instance string modeled as parameter for auto generation to work correctly.
	DatabaseInstanceName string `pulumi:"databaseInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP.
	SapVirtualInstanceName string `pulumi:"sapVirtualInstanceName"`
}

// Define the SAP Database Instance.
type LookupSAPDatabaseInstanceResult struct {
	// The database SID.
	DatabaseSid string `pulumi:"databaseSid"`
	// The SAP database type.
	DatabaseType string `pulumi:"databaseType"`
	// Defines the Database Instance errors.
	Errors SAPVirtualInstanceErrorResponse `pulumi:"errors"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The database IP Address.
	IpAddress string `pulumi:"ipAddress"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Defines the provisioning states.
	ProvisioningState string `pulumi:"provisioningState"`
	// Defines the SAP Instance status.
	Status string `pulumi:"status"`
	// The database subnet.
	Subnet string `pulumi:"subnet"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
	// The list of virtual machines.
	VmDetails []DatabaseVmDetailsResponse `pulumi:"vmDetails"`
}

func LookupSAPDatabaseInstanceOutput(ctx *pulumi.Context, args LookupSAPDatabaseInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSAPDatabaseInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSAPDatabaseInstanceResult, error) {
			args := v.(LookupSAPDatabaseInstanceArgs)
			r, err := LookupSAPDatabaseInstance(ctx, &args, opts...)
			var s LookupSAPDatabaseInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSAPDatabaseInstanceResultOutput)
}

type LookupSAPDatabaseInstanceOutputArgs struct {
	// Database Instance string modeled as parameter for auto generation to work correctly.
	DatabaseInstanceName pulumi.StringInput `pulumi:"databaseInstanceName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Virtual Instances for SAP.
	SapVirtualInstanceName pulumi.StringInput `pulumi:"sapVirtualInstanceName"`
}

func (LookupSAPDatabaseInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSAPDatabaseInstanceArgs)(nil)).Elem()
}

// Define the SAP Database Instance.
type LookupSAPDatabaseInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSAPDatabaseInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSAPDatabaseInstanceResult)(nil)).Elem()
}

func (o LookupSAPDatabaseInstanceResultOutput) ToLookupSAPDatabaseInstanceResultOutput() LookupSAPDatabaseInstanceResultOutput {
	return o
}

func (o LookupSAPDatabaseInstanceResultOutput) ToLookupSAPDatabaseInstanceResultOutputWithContext(ctx context.Context) LookupSAPDatabaseInstanceResultOutput {
	return o
}

// The database SID.
func (o LookupSAPDatabaseInstanceResultOutput) DatabaseSid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.DatabaseSid }).(pulumi.StringOutput)
}

// The SAP database type.
func (o LookupSAPDatabaseInstanceResultOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.DatabaseType }).(pulumi.StringOutput)
}

// Defines the Database Instance errors.
func (o LookupSAPDatabaseInstanceResultOutput) Errors() SAPVirtualInstanceErrorResponseOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) SAPVirtualInstanceErrorResponse { return v.Errors }).(SAPVirtualInstanceErrorResponseOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupSAPDatabaseInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The database IP Address.
func (o LookupSAPDatabaseInstanceResultOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.IpAddress }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o LookupSAPDatabaseInstanceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupSAPDatabaseInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Defines the provisioning states.
func (o LookupSAPDatabaseInstanceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Defines the SAP Instance status.
func (o LookupSAPDatabaseInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// The database subnet.
func (o LookupSAPDatabaseInstanceResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Subnet }).(pulumi.StringOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupSAPDatabaseInstanceResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupSAPDatabaseInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupSAPDatabaseInstanceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) string { return v.Type }).(pulumi.StringOutput)
}

// The list of virtual machines.
func (o LookupSAPDatabaseInstanceResultOutput) VmDetails() DatabaseVmDetailsResponseArrayOutput {
	return o.ApplyT(func(v LookupSAPDatabaseInstanceResult) []DatabaseVmDetailsResponse { return v.VmDetails }).(DatabaseVmDetailsResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSAPDatabaseInstanceResultOutput{})
}
