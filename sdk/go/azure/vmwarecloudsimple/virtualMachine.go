// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmwarecloudsimple

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Virtual machine model
// API Version: 2019-04-01.
type VirtualMachine struct {
	pulumi.CustomResourceState

	// The amount of memory
	AmountOfRam pulumi.IntOutput `pulumi:"amountOfRam"`
	// The list of Virtual Disks' Controllers
	Controllers VirtualDiskControllerResponseArrayOutput `pulumi:"controllers"`
	// Virtual machine properties
	Customization GuestOSCustomizationResponsePtrOutput `pulumi:"customization"`
	// The list of Virtual Disks
	Disks VirtualDiskResponseArrayOutput `pulumi:"disks"`
	// The DNS name of Virtual Machine in VCenter
	Dnsname pulumi.StringOutput `pulumi:"dnsname"`
	// Expose Guest OS or not
	ExposeToGuestVM pulumi.BoolPtrOutput `pulumi:"exposeToGuestVM"`
	// The path to virtual machine folder in VCenter
	Folder pulumi.StringOutput `pulumi:"folder"`
	// The name of Guest OS
	GuestOS pulumi.StringOutput `pulumi:"guestOS"`
	// The Guest OS type
	GuestOSType pulumi.StringOutput `pulumi:"guestOSType"`
	// Azure region
	Location pulumi.StringOutput `pulumi:"location"`
	// {virtualMachineName}
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of Virtual NICs
	Nics VirtualNicResponseArrayOutput `pulumi:"nics"`
	// The number of CPU cores
	NumberOfCores pulumi.IntOutput `pulumi:"numberOfCores"`
	// Password for login. Deprecated - use customization property
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Private Cloud Id
	PrivateCloudId pulumi.StringOutput `pulumi:"privateCloudId"`
	// The provisioning status of the resource
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// The public ip of Virtual Machine
	PublicIP pulumi.StringOutput `pulumi:"publicIP"`
	// Virtual Machines Resource Pool
	ResourcePool ResourcePoolResponsePtrOutput `pulumi:"resourcePool"`
	// The status of Virtual machine
	Status pulumi.StringOutput `pulumi:"status"`
	// The list of tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Virtual Machine Template Id
	TemplateId pulumi.StringPtrOutput `pulumi:"templateId"`
	// {resourceProviderNamespace}/{resourceType}
	Type pulumi.StringOutput `pulumi:"type"`
	// Username for login. Deprecated - use customization property
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// The list of Virtual VSphere Networks
	VSphereNetworks pulumi.StringArrayOutput `pulumi:"vSphereNetworks"`
	// The internal id of Virtual Machine in VCenter
	VmId pulumi.StringOutput `pulumi:"vmId"`
	// VMware tools version
	Vmwaretools pulumi.StringOutput `pulumi:"vmwaretools"`
}

// NewVirtualMachine registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachine(ctx *pulumi.Context,
	name string, args *VirtualMachineArgs, opts ...pulumi.ResourceOption) (*VirtualMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AmountOfRam == nil {
		return nil, errors.New("invalid value for required argument 'AmountOfRam'")
	}
	if args.NumberOfCores == nil {
		return nil, errors.New("invalid value for required argument 'NumberOfCores'")
	}
	if args.PrivateCloudId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateCloudId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:vmwarecloudsimple/v20190401:VirtualMachine"),
		},
	})
	opts = append(opts, aliases)
	var resource VirtualMachine
	err := ctx.RegisterResource("azure-native:vmwarecloudsimple:VirtualMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachine gets an existing VirtualMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineState, opts ...pulumi.ResourceOption) (*VirtualMachine, error) {
	var resource VirtualMachine
	err := ctx.ReadResource("azure-native:vmwarecloudsimple:VirtualMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachine resources.
type virtualMachineState struct {
}

type VirtualMachineState struct {
}

func (VirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineState)(nil)).Elem()
}

type virtualMachineArgs struct {
	// The amount of memory
	AmountOfRam int `pulumi:"amountOfRam"`
	// Virtual machine properties
	Customization *GuestOSCustomization `pulumi:"customization"`
	// The list of Virtual Disks
	Disks []VirtualDisk `pulumi:"disks"`
	// Expose Guest OS or not
	ExposeToGuestVM *bool `pulumi:"exposeToGuestVM"`
	// Azure region
	Location *string `pulumi:"location"`
	// The list of Virtual NICs
	Nics []VirtualNic `pulumi:"nics"`
	// The number of CPU cores
	NumberOfCores int `pulumi:"numberOfCores"`
	// Password for login. Deprecated - use customization property
	Password *string `pulumi:"password"`
	// Private Cloud Id
	PrivateCloudId string `pulumi:"privateCloudId"`
	// The name of the resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Virtual Machines Resource Pool
	ResourcePool *ResourcePool `pulumi:"resourcePool"`
	// The list of tags
	Tags map[string]string `pulumi:"tags"`
	// Virtual Machine Template Id
	TemplateId *string `pulumi:"templateId"`
	// Username for login. Deprecated - use customization property
	Username *string `pulumi:"username"`
	// The list of Virtual VSphere Networks
	VSphereNetworks []string `pulumi:"vSphereNetworks"`
	// virtual machine name
	VirtualMachineName *string `pulumi:"virtualMachineName"`
}

// The set of arguments for constructing a VirtualMachine resource.
type VirtualMachineArgs struct {
	// The amount of memory
	AmountOfRam pulumi.IntInput
	// Virtual machine properties
	Customization GuestOSCustomizationPtrInput
	// The list of Virtual Disks
	Disks VirtualDiskArrayInput
	// Expose Guest OS or not
	ExposeToGuestVM pulumi.BoolPtrInput
	// Azure region
	Location pulumi.StringPtrInput
	// The list of Virtual NICs
	Nics VirtualNicArrayInput
	// The number of CPU cores
	NumberOfCores pulumi.IntInput
	// Password for login. Deprecated - use customization property
	Password pulumi.StringPtrInput
	// Private Cloud Id
	PrivateCloudId pulumi.StringInput
	// The name of the resource group
	ResourceGroupName pulumi.StringInput
	// Virtual Machines Resource Pool
	ResourcePool ResourcePoolPtrInput
	// The list of tags
	Tags pulumi.StringMapInput
	// Virtual Machine Template Id
	TemplateId pulumi.StringPtrInput
	// Username for login. Deprecated - use customization property
	Username pulumi.StringPtrInput
	// The list of Virtual VSphere Networks
	VSphereNetworks pulumi.StringArrayInput
	// virtual machine name
	VirtualMachineName pulumi.StringPtrInput
}

func (VirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineArgs)(nil)).Elem()
}

type VirtualMachineInput interface {
	pulumi.Input

	ToVirtualMachineOutput() VirtualMachineOutput
	ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput
}

func (*VirtualMachine) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachine)(nil)).Elem()
}

func (i *VirtualMachine) ToVirtualMachineOutput() VirtualMachineOutput {
	return i.ToVirtualMachineOutputWithContext(context.Background())
}

func (i *VirtualMachine) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineOutput)
}

type VirtualMachineOutput struct{ *pulumi.OutputState }

func (VirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachine)(nil)).Elem()
}

func (o VirtualMachineOutput) ToVirtualMachineOutput() VirtualMachineOutput {
	return o
}

func (o VirtualMachineOutput) ToVirtualMachineOutputWithContext(ctx context.Context) VirtualMachineOutput {
	return o
}

// The amount of memory
func (o VirtualMachineOutput) AmountOfRam() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.IntOutput { return v.AmountOfRam }).(pulumi.IntOutput)
}

// The list of Virtual Disks' Controllers
func (o VirtualMachineOutput) Controllers() VirtualDiskControllerResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachine) VirtualDiskControllerResponseArrayOutput { return v.Controllers }).(VirtualDiskControllerResponseArrayOutput)
}

// Virtual machine properties
func (o VirtualMachineOutput) Customization() GuestOSCustomizationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachine) GuestOSCustomizationResponsePtrOutput { return v.Customization }).(GuestOSCustomizationResponsePtrOutput)
}

// The list of Virtual Disks
func (o VirtualMachineOutput) Disks() VirtualDiskResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachine) VirtualDiskResponseArrayOutput { return v.Disks }).(VirtualDiskResponseArrayOutput)
}

// The DNS name of Virtual Machine in VCenter
func (o VirtualMachineOutput) Dnsname() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Dnsname }).(pulumi.StringOutput)
}

// Expose Guest OS or not
func (o VirtualMachineOutput) ExposeToGuestVM() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.BoolPtrOutput { return v.ExposeToGuestVM }).(pulumi.BoolPtrOutput)
}

// The path to virtual machine folder in VCenter
func (o VirtualMachineOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

// The name of Guest OS
func (o VirtualMachineOutput) GuestOS() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.GuestOS }).(pulumi.StringOutput)
}

// The Guest OS type
func (o VirtualMachineOutput) GuestOSType() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.GuestOSType }).(pulumi.StringOutput)
}

// Azure region
func (o VirtualMachineOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// {virtualMachineName}
func (o VirtualMachineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of Virtual NICs
func (o VirtualMachineOutput) Nics() VirtualNicResponseArrayOutput {
	return o.ApplyT(func(v *VirtualMachine) VirtualNicResponseArrayOutput { return v.Nics }).(VirtualNicResponseArrayOutput)
}

// The number of CPU cores
func (o VirtualMachineOutput) NumberOfCores() pulumi.IntOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.IntOutput { return v.NumberOfCores }).(pulumi.IntOutput)
}

// Password for login. Deprecated - use customization property
func (o VirtualMachineOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Private Cloud Id
func (o VirtualMachineOutput) PrivateCloudId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.PrivateCloudId }).(pulumi.StringOutput)
}

// The provisioning status of the resource
func (o VirtualMachineOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The public ip of Virtual Machine
func (o VirtualMachineOutput) PublicIP() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.PublicIP }).(pulumi.StringOutput)
}

// Virtual Machines Resource Pool
func (o VirtualMachineOutput) ResourcePool() ResourcePoolResponsePtrOutput {
	return o.ApplyT(func(v *VirtualMachine) ResourcePoolResponsePtrOutput { return v.ResourcePool }).(ResourcePoolResponsePtrOutput)
}

// The status of Virtual machine
func (o VirtualMachineOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The list of tags
func (o VirtualMachineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Virtual Machine Template Id
func (o VirtualMachineOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringPtrOutput { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// {resourceProviderNamespace}/{resourceType}
func (o VirtualMachineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Username for login. Deprecated - use customization property
func (o VirtualMachineOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// The list of Virtual VSphere Networks
func (o VirtualMachineOutput) VSphereNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringArrayOutput { return v.VSphereNetworks }).(pulumi.StringArrayOutput)
}

// The internal id of Virtual Machine in VCenter
func (o VirtualMachineOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.VmId }).(pulumi.StringOutput)
}

// VMware tools version
func (o VirtualMachineOutput) Vmwaretools() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachine) pulumi.StringOutput { return v.Vmwaretools }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualMachineOutput{})
}
