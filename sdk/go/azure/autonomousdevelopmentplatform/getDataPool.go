// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autonomousdevelopmentplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ADP Data Pool
// API Version: 2021-02-01-preview.
func LookupDataPool(ctx *pulumi.Context, args *LookupDataPoolArgs, opts ...pulumi.InvokeOption) (*LookupDataPoolResult, error) {
	var rv LookupDataPoolResult
	err := ctx.Invoke("azure-native:autonomousdevelopmentplatform:getDataPool", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataPoolArgs struct {
	// The name of the ADP account
	AccountName string `pulumi:"accountName"`
	// The name of the Data Pool
	DataPoolName string `pulumi:"dataPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// ADP Data Pool
type LookupDataPoolResult struct {
	// The Data Pool's data-plane ID
	DataPoolId string `pulumi:"dataPoolId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Gets or sets the collection of locations where Data Pool resources should be created
	Locations []DataPoolLocationResponse `pulumi:"locations"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Gets the status of the data pool at the time the operation was called
	ProvisioningState string `pulumi:"provisioningState"`
	// The system meta data relating to this resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

func LookupDataPoolOutput(ctx *pulumi.Context, args LookupDataPoolOutputArgs, opts ...pulumi.InvokeOption) LookupDataPoolResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataPoolResult, error) {
			args := v.(LookupDataPoolArgs)
			r, err := LookupDataPool(ctx, &args, opts...)
			var s LookupDataPoolResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataPoolResultOutput)
}

type LookupDataPoolOutputArgs struct {
	// The name of the ADP account
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the Data Pool
	DataPoolName pulumi.StringInput `pulumi:"dataPoolName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDataPoolOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataPoolArgs)(nil)).Elem()
}

// ADP Data Pool
type LookupDataPoolResultOutput struct{ *pulumi.OutputState }

func (LookupDataPoolResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataPoolResult)(nil)).Elem()
}

func (o LookupDataPoolResultOutput) ToLookupDataPoolResultOutput() LookupDataPoolResultOutput {
	return o
}

func (o LookupDataPoolResultOutput) ToLookupDataPoolResultOutputWithContext(ctx context.Context) LookupDataPoolResultOutput {
	return o
}

// The Data Pool's data-plane ID
func (o LookupDataPoolResultOutput) DataPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataPoolResult) string { return v.DataPoolId }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupDataPoolResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataPoolResult) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets the collection of locations where Data Pool resources should be created
func (o LookupDataPoolResultOutput) Locations() DataPoolLocationResponseArrayOutput {
	return o.ApplyT(func(v LookupDataPoolResult) []DataPoolLocationResponse { return v.Locations }).(DataPoolLocationResponseArrayOutput)
}

// The name of the resource
func (o LookupDataPoolResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataPoolResult) string { return v.Name }).(pulumi.StringOutput)
}

// Gets the status of the data pool at the time the operation was called
func (o LookupDataPoolResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataPoolResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The system meta data relating to this resource
func (o LookupDataPoolResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDataPoolResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupDataPoolResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataPoolResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataPoolResultOutput{})
}
