// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201020

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Bot resource definition
//
// Deprecated: Version 2020-10-20 will be removed in v2 of the provider.
func Getgetbot(ctx *pulumi.Context, args *GetgetbotArgs, opts ...pulumi.InvokeOption) (*GetgetbotResult, error) {
	var rv GetgetbotResult
	err := ctx.Invoke("azure-native:healthbot/v20201020:getgetbot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetgetbotArgs struct {
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Bot resource.
	ResourceName string `pulumi:"resourceName"`
}

// Bot resource definition
type GetgetbotResult struct {
	// Fully qualified resource Id for the resource.
	Id string `pulumi:"id"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// The set of properties specific to healthcare bot resource.
	Properties HealthBotPropertiesResponse `pulumi:"properties"`
	// SKU of the HealthBot.
	Sku *SkuResponse `pulumi:"sku"`
	// Metadata pertaining to creation and last modification of the resource
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type string `pulumi:"type"`
}

func GetgetbotOutput(ctx *pulumi.Context, args GetgetbotOutputArgs, opts ...pulumi.InvokeOption) GetgetbotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetgetbotResult, error) {
			args := v.(GetgetbotArgs)
			r, err := Getgetbot(ctx, &args, opts...)
			var s GetgetbotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetgetbotResultOutput)
}

type GetgetbotOutputArgs struct {
	// The name of the Bot resource group in the user subscription.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the Bot resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (GetgetbotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetgetbotArgs)(nil)).Elem()
}

// Bot resource definition
type GetgetbotResultOutput struct{ *pulumi.OutputState }

func (GetgetbotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetgetbotResult)(nil)).Elem()
}

func (o GetgetbotResultOutput) ToGetgetbotResultOutput() GetgetbotResultOutput {
	return o
}

func (o GetgetbotResultOutput) ToGetgetbotResultOutputWithContext(ctx context.Context) GetgetbotResultOutput {
	return o
}

// Fully qualified resource Id for the resource.
func (o GetgetbotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetgetbotResult) string { return v.Id }).(pulumi.StringOutput)
}

// The geo-location where the resource lives
func (o GetgetbotResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetgetbotResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o GetgetbotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetgetbotResult) string { return v.Name }).(pulumi.StringOutput)
}

// The set of properties specific to healthcare bot resource.
func (o GetgetbotResultOutput) Properties() HealthBotPropertiesResponseOutput {
	return o.ApplyT(func(v GetgetbotResult) HealthBotPropertiesResponse { return v.Properties }).(HealthBotPropertiesResponseOutput)
}

// SKU of the HealthBot.
func (o GetgetbotResultOutput) Sku() SkuResponsePtrOutput {
	return o.ApplyT(func(v GetgetbotResult) *SkuResponse { return v.Sku }).(SkuResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the resource
func (o GetgetbotResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v GetgetbotResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o GetgetbotResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetgetbotResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o GetgetbotResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetgetbotResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetgetbotResultOutput{})
}
