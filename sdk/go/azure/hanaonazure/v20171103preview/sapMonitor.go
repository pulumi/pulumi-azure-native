// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20171103preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SAP monitor info on Azure (ARM properties and SAP monitor properties)
type SapMonitor struct {
	pulumi.CustomResourceState

	// The value indicating whether to send analytics to Microsoft
	EnableCustomerAnalytics pulumi.BoolPtrOutput `pulumi:"enableCustomerAnalytics"`
	// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
	HanaDbCredentialsMsiId pulumi.StringPtrOutput `pulumi:"hanaDbCredentialsMsiId"`
	// Database name of the HANA instance.
	HanaDbName pulumi.StringPtrOutput `pulumi:"hanaDbName"`
	// Database password of the HANA instance.
	HanaDbPassword pulumi.StringPtrOutput `pulumi:"hanaDbPassword"`
	// KeyVault URL link to the password for the HANA database.
	HanaDbPasswordKeyVaultUrl pulumi.StringPtrOutput `pulumi:"hanaDbPasswordKeyVaultUrl"`
	// Database port of the HANA instance.
	HanaDbSqlPort pulumi.IntPtrOutput `pulumi:"hanaDbSqlPort"`
	// Database username of the HANA instance.
	HanaDbUsername pulumi.StringPtrOutput `pulumi:"hanaDbUsername"`
	// Hostname of the HANA instance.
	HanaHostname pulumi.StringPtrOutput `pulumi:"hanaHostname"`
	// Specifies the SAP monitor unique ID.
	HanaSubnet pulumi.StringPtrOutput `pulumi:"hanaSubnet"`
	// Key Vault ID containing customer's HANA credentials.
	KeyVaultId pulumi.StringPtrOutput `pulumi:"keyVaultId"`
	// Resource location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The ARM ID of the Log Analytics Workspace that is used for monitoring
	LogAnalyticsWorkspaceArmId pulumi.StringPtrOutput `pulumi:"logAnalyticsWorkspaceArmId"`
	// The workspace ID of the log analytics workspace to be used for monitoring
	LogAnalyticsWorkspaceId pulumi.StringPtrOutput `pulumi:"logAnalyticsWorkspaceId"`
	// The shared key of the log analytics workspace that is used for monitoring
	LogAnalyticsWorkspaceSharedKey pulumi.StringPtrOutput `pulumi:"logAnalyticsWorkspaceSharedKey"`
	// The name of the resource group the SAP Monitor resources get deployed into.
	ManagedResourceGroupName pulumi.StringOutput `pulumi:"managedResourceGroupName"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// State of provisioning of the HanaInstance
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSapMonitor registers a new resource with the given unique name, arguments, and options.
func NewSapMonitor(ctx *pulumi.Context,
	name string, args *SapMonitorArgs, opts ...pulumi.ResourceOption) (*SapMonitor, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SapMonitorName == nil {
		return nil, errors.New("missing required argument 'SapMonitorName'")
	}
	if args == nil {
		args = &SapMonitorArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:hanaonazure/v20200207preview:SapMonitor"),
		},
	})
	opts = append(opts, aliases)
	var resource SapMonitor
	err := ctx.RegisterResource("azure-nextgen:hanaonazure/v20171103preview:SapMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSapMonitor gets an existing SapMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSapMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SapMonitorState, opts ...pulumi.ResourceOption) (*SapMonitor, error) {
	var resource SapMonitor
	err := ctx.ReadResource("azure-nextgen:hanaonazure/v20171103preview:SapMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SapMonitor resources.
type sapMonitorState struct {
	// The value indicating whether to send analytics to Microsoft
	EnableCustomerAnalytics *bool `pulumi:"enableCustomerAnalytics"`
	// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
	HanaDbCredentialsMsiId *string `pulumi:"hanaDbCredentialsMsiId"`
	// Database name of the HANA instance.
	HanaDbName *string `pulumi:"hanaDbName"`
	// Database password of the HANA instance.
	HanaDbPassword *string `pulumi:"hanaDbPassword"`
	// KeyVault URL link to the password for the HANA database.
	HanaDbPasswordKeyVaultUrl *string `pulumi:"hanaDbPasswordKeyVaultUrl"`
	// Database port of the HANA instance.
	HanaDbSqlPort *int `pulumi:"hanaDbSqlPort"`
	// Database username of the HANA instance.
	HanaDbUsername *string `pulumi:"hanaDbUsername"`
	// Hostname of the HANA instance.
	HanaHostname *string `pulumi:"hanaHostname"`
	// Specifies the SAP monitor unique ID.
	HanaSubnet *string `pulumi:"hanaSubnet"`
	// Key Vault ID containing customer's HANA credentials.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Resource location
	Location *string `pulumi:"location"`
	// The ARM ID of the Log Analytics Workspace that is used for monitoring
	LogAnalyticsWorkspaceArmId *string `pulumi:"logAnalyticsWorkspaceArmId"`
	// The workspace ID of the log analytics workspace to be used for monitoring
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// The shared key of the log analytics workspace that is used for monitoring
	LogAnalyticsWorkspaceSharedKey *string `pulumi:"logAnalyticsWorkspaceSharedKey"`
	// The name of the resource group the SAP Monitor resources get deployed into.
	ManagedResourceGroupName *string `pulumi:"managedResourceGroupName"`
	// Resource name
	Name *string `pulumi:"name"`
	// State of provisioning of the HanaInstance
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

type SapMonitorState struct {
	// The value indicating whether to send analytics to Microsoft
	EnableCustomerAnalytics pulumi.BoolPtrInput
	// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
	HanaDbCredentialsMsiId pulumi.StringPtrInput
	// Database name of the HANA instance.
	HanaDbName pulumi.StringPtrInput
	// Database password of the HANA instance.
	HanaDbPassword pulumi.StringPtrInput
	// KeyVault URL link to the password for the HANA database.
	HanaDbPasswordKeyVaultUrl pulumi.StringPtrInput
	// Database port of the HANA instance.
	HanaDbSqlPort pulumi.IntPtrInput
	// Database username of the HANA instance.
	HanaDbUsername pulumi.StringPtrInput
	// Hostname of the HANA instance.
	HanaHostname pulumi.StringPtrInput
	// Specifies the SAP monitor unique ID.
	HanaSubnet pulumi.StringPtrInput
	// Key Vault ID containing customer's HANA credentials.
	KeyVaultId pulumi.StringPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// The ARM ID of the Log Analytics Workspace that is used for monitoring
	LogAnalyticsWorkspaceArmId pulumi.StringPtrInput
	// The workspace ID of the log analytics workspace to be used for monitoring
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// The shared key of the log analytics workspace that is used for monitoring
	LogAnalyticsWorkspaceSharedKey pulumi.StringPtrInput
	// The name of the resource group the SAP Monitor resources get deployed into.
	ManagedResourceGroupName pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// State of provisioning of the HanaInstance
	ProvisioningState pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (SapMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*sapMonitorState)(nil)).Elem()
}

type sapMonitorArgs struct {
	// The value indicating whether to send analytics to Microsoft
	EnableCustomerAnalytics *bool `pulumi:"enableCustomerAnalytics"`
	// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
	HanaDbCredentialsMsiId *string `pulumi:"hanaDbCredentialsMsiId"`
	// Database name of the HANA instance.
	HanaDbName *string `pulumi:"hanaDbName"`
	// Database password of the HANA instance.
	HanaDbPassword *string `pulumi:"hanaDbPassword"`
	// KeyVault URL link to the password for the HANA database.
	HanaDbPasswordKeyVaultUrl *string `pulumi:"hanaDbPasswordKeyVaultUrl"`
	// Database port of the HANA instance.
	HanaDbSqlPort *int `pulumi:"hanaDbSqlPort"`
	// Database username of the HANA instance.
	HanaDbUsername *string `pulumi:"hanaDbUsername"`
	// Hostname of the HANA instance.
	HanaHostname *string `pulumi:"hanaHostname"`
	// Specifies the SAP monitor unique ID.
	HanaSubnet *string `pulumi:"hanaSubnet"`
	// Key Vault ID containing customer's HANA credentials.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Resource location
	Location *string `pulumi:"location"`
	// The ARM ID of the Log Analytics Workspace that is used for monitoring
	LogAnalyticsWorkspaceArmId *string `pulumi:"logAnalyticsWorkspaceArmId"`
	// The workspace ID of the log analytics workspace to be used for monitoring
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// The shared key of the log analytics workspace that is used for monitoring
	LogAnalyticsWorkspaceSharedKey *string `pulumi:"logAnalyticsWorkspaceSharedKey"`
	// Name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the SAP monitor resource.
	SapMonitorName string `pulumi:"sapMonitorName"`
}

// The set of arguments for constructing a SapMonitor resource.
type SapMonitorArgs struct {
	// The value indicating whether to send analytics to Microsoft
	EnableCustomerAnalytics pulumi.BoolPtrInput
	// MSI ID passed by customer which has access to customer's KeyVault and to be assigned to the Collector VM.
	HanaDbCredentialsMsiId pulumi.StringPtrInput
	// Database name of the HANA instance.
	HanaDbName pulumi.StringPtrInput
	// Database password of the HANA instance.
	HanaDbPassword pulumi.StringPtrInput
	// KeyVault URL link to the password for the HANA database.
	HanaDbPasswordKeyVaultUrl pulumi.StringPtrInput
	// Database port of the HANA instance.
	HanaDbSqlPort pulumi.IntPtrInput
	// Database username of the HANA instance.
	HanaDbUsername pulumi.StringPtrInput
	// Hostname of the HANA instance.
	HanaHostname pulumi.StringPtrInput
	// Specifies the SAP monitor unique ID.
	HanaSubnet pulumi.StringPtrInput
	// Key Vault ID containing customer's HANA credentials.
	KeyVaultId pulumi.StringPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// The ARM ID of the Log Analytics Workspace that is used for monitoring
	LogAnalyticsWorkspaceArmId pulumi.StringPtrInput
	// The workspace ID of the log analytics workspace to be used for monitoring
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// The shared key of the log analytics workspace that is used for monitoring
	LogAnalyticsWorkspaceSharedKey pulumi.StringPtrInput
	// Name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Name of the SAP monitor resource.
	SapMonitorName pulumi.StringInput
}

func (SapMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sapMonitorArgs)(nil)).Elem()
}
