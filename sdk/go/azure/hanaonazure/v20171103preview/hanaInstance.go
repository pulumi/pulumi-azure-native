// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20171103preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// HANA instance info on Azure (ARM properties and HANA properties)
type HanaInstance struct {
	pulumi.CustomResourceState

	// Specifies the HANA instance unique ID.
	HanaInstanceId pulumi.StringOutput `pulumi:"hanaInstanceId"`
	// Specifies the hardware settings for the HANA instance.
	HardwareProfile HardwareProfileResponsePtrOutput `pulumi:"hardwareProfile"`
	// Hardware revision of a HANA instance
	HwRevision pulumi.StringOutput `pulumi:"hwRevision"`
	// Resource location
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the network settings for the HANA instance.
	NetworkProfile NetworkProfileResponsePtrOutput `pulumi:"networkProfile"`
	// Specifies the operating system settings for the HANA instance.
	OsProfile OSProfileResponsePtrOutput `pulumi:"osProfile"`
	// ARM ID of another HanaInstance that will share a network with this HanaInstance
	PartnerNodeId pulumi.StringPtrOutput `pulumi:"partnerNodeId"`
	// Resource power state
	PowerState pulumi.StringOutput `pulumi:"powerState"`
	// State of provisioning of the HanaInstance
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource proximity placement group
	ProximityPlacementGroup pulumi.StringOutput `pulumi:"proximityPlacementGroup"`
	// Specifies the storage settings for the HANA instance disks.
	StorageProfile StorageProfileResponsePtrOutput `pulumi:"storageProfile"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewHanaInstance registers a new resource with the given unique name, arguments, and options.
func NewHanaInstance(ctx *pulumi.Context,
	name string, args *HanaInstanceArgs, opts ...pulumi.ResourceOption) (*HanaInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:hanaonazure:HanaInstance"),
		},
	})
	opts = append(opts, aliases)
	var resource HanaInstance
	err := ctx.RegisterResource("azure-native:hanaonazure/v20171103preview:HanaInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHanaInstance gets an existing HanaInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHanaInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HanaInstanceState, opts ...pulumi.ResourceOption) (*HanaInstance, error) {
	var resource HanaInstance
	err := ctx.ReadResource("azure-native:hanaonazure/v20171103preview:HanaInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HanaInstance resources.
type hanaInstanceState struct {
}

type HanaInstanceState struct {
}

func (HanaInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*hanaInstanceState)(nil)).Elem()
}

type hanaInstanceArgs struct {
	// Name of the SAP HANA on Azure instance.
	HanaInstanceName *string `pulumi:"hanaInstanceName"`
	// Resource location
	Location *string `pulumi:"location"`
	// Specifies the network settings for the HANA instance.
	NetworkProfile *NetworkProfile `pulumi:"networkProfile"`
	// Specifies the operating system settings for the HANA instance.
	OsProfile *OSProfile `pulumi:"osProfile"`
	// ARM ID of another HanaInstance that will share a network with this HanaInstance
	PartnerNodeId *string `pulumi:"partnerNodeId"`
	// Name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the storage settings for the HANA instance disks.
	StorageProfile *StorageProfile `pulumi:"storageProfile"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a HanaInstance resource.
type HanaInstanceArgs struct {
	// Name of the SAP HANA on Azure instance.
	HanaInstanceName pulumi.StringPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// Specifies the network settings for the HANA instance.
	NetworkProfile NetworkProfilePtrInput
	// Specifies the operating system settings for the HANA instance.
	OsProfile OSProfilePtrInput
	// ARM ID of another HanaInstance that will share a network with this HanaInstance
	PartnerNodeId pulumi.StringPtrInput
	// Name of the resource group.
	ResourceGroupName pulumi.StringInput
	// Specifies the storage settings for the HANA instance disks.
	StorageProfile StorageProfilePtrInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (HanaInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hanaInstanceArgs)(nil)).Elem()
}

type HanaInstanceInput interface {
	pulumi.Input

	ToHanaInstanceOutput() HanaInstanceOutput
	ToHanaInstanceOutputWithContext(ctx context.Context) HanaInstanceOutput
}

func (*HanaInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**HanaInstance)(nil)).Elem()
}

func (i *HanaInstance) ToHanaInstanceOutput() HanaInstanceOutput {
	return i.ToHanaInstanceOutputWithContext(context.Background())
}

func (i *HanaInstance) ToHanaInstanceOutputWithContext(ctx context.Context) HanaInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HanaInstanceOutput)
}

type HanaInstanceOutput struct{ *pulumi.OutputState }

func (HanaInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HanaInstance)(nil)).Elem()
}

func (o HanaInstanceOutput) ToHanaInstanceOutput() HanaInstanceOutput {
	return o
}

func (o HanaInstanceOutput) ToHanaInstanceOutputWithContext(ctx context.Context) HanaInstanceOutput {
	return o
}

// Specifies the HANA instance unique ID.
func (o HanaInstanceOutput) HanaInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.HanaInstanceId }).(pulumi.StringOutput)
}

// Specifies the hardware settings for the HANA instance.
func (o HanaInstanceOutput) HardwareProfile() HardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v *HanaInstance) HardwareProfileResponsePtrOutput { return v.HardwareProfile }).(HardwareProfileResponsePtrOutput)
}

// Hardware revision of a HANA instance
func (o HanaInstanceOutput) HwRevision() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.HwRevision }).(pulumi.StringOutput)
}

// Resource location
func (o HanaInstanceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name
func (o HanaInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the network settings for the HANA instance.
func (o HanaInstanceOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v *HanaInstance) NetworkProfileResponsePtrOutput { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// Specifies the operating system settings for the HANA instance.
func (o HanaInstanceOutput) OsProfile() OSProfileResponsePtrOutput {
	return o.ApplyT(func(v *HanaInstance) OSProfileResponsePtrOutput { return v.OsProfile }).(OSProfileResponsePtrOutput)
}

// ARM ID of another HanaInstance that will share a network with this HanaInstance
func (o HanaInstanceOutput) PartnerNodeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringPtrOutput { return v.PartnerNodeId }).(pulumi.StringPtrOutput)
}

// Resource power state
func (o HanaInstanceOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.PowerState }).(pulumi.StringOutput)
}

// State of provisioning of the HanaInstance
func (o HanaInstanceOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource proximity placement group
func (o HanaInstanceOutput) ProximityPlacementGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.ProximityPlacementGroup }).(pulumi.StringOutput)
}

// Specifies the storage settings for the HANA instance disks.
func (o HanaInstanceOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v *HanaInstance) StorageProfileResponsePtrOutput { return v.StorageProfile }).(StorageProfileResponsePtrOutput)
}

// Resource tags
func (o HanaInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o HanaInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *HanaInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(HanaInstanceOutput{})
}
