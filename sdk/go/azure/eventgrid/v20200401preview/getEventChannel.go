// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200401preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupEventChannel(ctx *pulumi.Context, args *LookupEventChannelArgs, opts ...pulumi.InvokeOption) (*LookupEventChannelResult, error) {
	var rv LookupEventChannelResult
	err := ctx.Invoke("azure-nextgen:eventgrid/v20200401preview:getEventChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEventChannelArgs struct {
	// Name of the event channel.
	EventChannelName string `pulumi:"eventChannelName"`
	// Name of the partner namespace.
	PartnerNamespaceName string `pulumi:"partnerNamespaceName"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Event Channel.
type LookupEventChannelResult struct {
	// Represents the destination of an event channel.
	Destination *EventChannelDestinationResponse `pulumi:"destination"`
	// Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,
	// the event channel and corresponding partner topic are deleted.
	ExpirationTimeIfNotActivatedUtc *string `pulumi:"expirationTimeIfNotActivatedUtc"`
	// Information about the filter for the event channel.
	Filter *EventChannelFilterResponse `pulumi:"filter"`
	// Name of the resource
	Name string `pulumi:"name"`
	// Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.
	// This will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.
	PartnerTopicFriendlyDescription *string `pulumi:"partnerTopicFriendlyDescription"`
	// The readiness state of the corresponding partner topic.
	PartnerTopicReadinessState string `pulumi:"partnerTopicReadinessState"`
	// Provisioning state of the event channel.
	ProvisioningState string `pulumi:"provisioningState"`
	// Source of the event channel. This represents a unique resource in the partner's resource model.
	Source *EventChannelSourceResponse `pulumi:"source"`
	// Type of the resource
	Type string `pulumi:"type"`
}
