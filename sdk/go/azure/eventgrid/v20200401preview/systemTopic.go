// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200401preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// EventGrid System Topic.
type SystemTopic struct {
	pulumi.CustomResourceState

	// Location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Metric resource id for the system topic.
	MetricResourceId pulumi.StringOutput `pulumi:"metricResourceId"`
	// Name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Provisioning state of the system topic.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Source for the system topic.
	Source pulumi.StringPtrOutput `pulumi:"source"`
	// Tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// TopicType for the system topic.
	TopicType pulumi.StringPtrOutput `pulumi:"topicType"`
	// Type of the resource
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSystemTopic registers a new resource with the given unique name, arguments, and options.
func NewSystemTopic(ctx *pulumi.Context,
	name string, args *SystemTopicArgs, opts ...pulumi.ResourceOption) (*SystemTopic, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SystemTopicName == nil {
		return nil, errors.New("missing required argument 'SystemTopicName'")
	}
	if args == nil {
		args = &SystemTopicArgs{}
	}
	var resource SystemTopic
	err := ctx.RegisterResource("azure-nextgen:eventgrid/v20200401preview:SystemTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSystemTopic gets an existing SystemTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSystemTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SystemTopicState, opts ...pulumi.ResourceOption) (*SystemTopic, error) {
	var resource SystemTopic
	err := ctx.ReadResource("azure-nextgen:eventgrid/v20200401preview:SystemTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SystemTopic resources.
type systemTopicState struct {
	// Location of the resource.
	Location *string `pulumi:"location"`
	// Metric resource id for the system topic.
	MetricResourceId *string `pulumi:"metricResourceId"`
	// Name of the resource
	Name *string `pulumi:"name"`
	// Provisioning state of the system topic.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Source for the system topic.
	Source *string `pulumi:"source"`
	// Tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// TopicType for the system topic.
	TopicType *string `pulumi:"topicType"`
	// Type of the resource
	Type *string `pulumi:"type"`
}

type SystemTopicState struct {
	// Location of the resource.
	Location pulumi.StringPtrInput
	// Metric resource id for the system topic.
	MetricResourceId pulumi.StringPtrInput
	// Name of the resource
	Name pulumi.StringPtrInput
	// Provisioning state of the system topic.
	ProvisioningState pulumi.StringPtrInput
	// Source for the system topic.
	Source pulumi.StringPtrInput
	// Tags of the resource.
	Tags pulumi.StringMapInput
	// TopicType for the system topic.
	TopicType pulumi.StringPtrInput
	// Type of the resource
	Type pulumi.StringPtrInput
}

func (SystemTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*systemTopicState)(nil)).Elem()
}

type systemTopicArgs struct {
	// Location of the resource.
	Location string `pulumi:"location"`
	// The name of the resource group within the user's subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Source for the system topic.
	Source *string `pulumi:"source"`
	// Name of the system topic.
	SystemTopicName string `pulumi:"systemTopicName"`
	// Tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// TopicType for the system topic.
	TopicType *string `pulumi:"topicType"`
}

// The set of arguments for constructing a SystemTopic resource.
type SystemTopicArgs struct {
	// Location of the resource.
	Location pulumi.StringInput
	// The name of the resource group within the user's subscription.
	ResourceGroupName pulumi.StringInput
	// Source for the system topic.
	Source pulumi.StringPtrInput
	// Name of the system topic.
	SystemTopicName pulumi.StringInput
	// Tags of the resource.
	Tags pulumi.StringMapInput
	// TopicType for the system topic.
	TopicType pulumi.StringPtrInput
}

func (SystemTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*systemTopicArgs)(nil)).Elem()
}
