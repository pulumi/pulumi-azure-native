// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200820preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A class representing a CommunicationService resource.
type CommunicationService struct {
	pulumi.CustomResourceState

	// The location where the communication service stores its data at rest.
	DataLocation pulumi.StringOutput `pulumi:"dataLocation"`
	// FQDN of the CommunicationService instance.
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// The immutable resource Id of the communication service.
	ImmutableResourceId pulumi.StringOutput `pulumi:"immutableResourceId"`
	// The Azure location where the CommunicationService is running.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource ID of an Azure Notification Hub linked to this resource.
	NotificationHubId pulumi.StringOutput `pulumi:"notificationHubId"`
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
	Type pulumi.StringOutput `pulumi:"type"`
	// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewCommunicationService registers a new resource with the given unique name, arguments, and options.
func NewCommunicationService(ctx *pulumi.Context,
	name string, args *CommunicationServiceArgs, opts ...pulumi.ResourceOption) (*CommunicationService, error) {
	if args == nil || args.CommunicationServiceName == nil {
		return nil, errors.New("missing required argument 'CommunicationServiceName'")
	}
	if args == nil || args.DataLocation == nil {
		return nil, errors.New("missing required argument 'DataLocation'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &CommunicationServiceArgs{}
	}
	var resource CommunicationService
	err := ctx.RegisterResource("azure-nextgen:communication/v20200820preview:CommunicationService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCommunicationService gets an existing CommunicationService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCommunicationService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CommunicationServiceState, opts ...pulumi.ResourceOption) (*CommunicationService, error) {
	var resource CommunicationService
	err := ctx.ReadResource("azure-nextgen:communication/v20200820preview:CommunicationService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CommunicationService resources.
type communicationServiceState struct {
	// The location where the communication service stores its data at rest.
	DataLocation *string `pulumi:"dataLocation"`
	// FQDN of the CommunicationService instance.
	HostName *string `pulumi:"hostName"`
	// The immutable resource Id of the communication service.
	ImmutableResourceId *string `pulumi:"immutableResourceId"`
	// The Azure location where the CommunicationService is running.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// Resource ID of an Azure Notification Hub linked to this resource.
	NotificationHubId *string `pulumi:"notificationHubId"`
	// Provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
	Type *string `pulumi:"type"`
	// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
	Version *string `pulumi:"version"`
}

type CommunicationServiceState struct {
	// The location where the communication service stores its data at rest.
	DataLocation pulumi.StringPtrInput
	// FQDN of the CommunicationService instance.
	HostName pulumi.StringPtrInput
	// The immutable resource Id of the communication service.
	ImmutableResourceId pulumi.StringPtrInput
	// The Azure location where the CommunicationService is running.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// Resource ID of an Azure Notification Hub linked to this resource.
	NotificationHubId pulumi.StringPtrInput
	// Provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags pulumi.StringMapInput
	// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
	Type pulumi.StringPtrInput
	// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
	Version pulumi.StringPtrInput
}

func (CommunicationServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*communicationServiceState)(nil)).Elem()
}

type communicationServiceArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName string `pulumi:"communicationServiceName"`
	// The location where the communication service stores its data at rest.
	DataLocation string `pulumi:"dataLocation"`
	// The Azure location where the CommunicationService is running.
	Location *string `pulumi:"location"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CommunicationService resource.
type CommunicationServiceArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName pulumi.StringInput
	// The location where the communication service stores its data at rest.
	DataLocation pulumi.StringInput
	// The Azure location where the CommunicationService is running.
	Location pulumi.StringPtrInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags pulumi.StringMapInput
}

func (CommunicationServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*communicationServiceArgs)(nil)).Elem()
}
