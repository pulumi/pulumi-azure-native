// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200820preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A class representing a CommunicationService resource.
func LookupCommunicationService(ctx *pulumi.Context, args *LookupCommunicationServiceArgs, opts ...pulumi.InvokeOption) (*LookupCommunicationServiceResult, error) {
	var rv LookupCommunicationServiceResult
	err := ctx.Invoke("azure-native:communication/v20200820preview:getCommunicationService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCommunicationServiceArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName string `pulumi:"communicationServiceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A class representing a CommunicationService resource.
type LookupCommunicationServiceResult struct {
	// The location where the communication service stores its data at rest.
	DataLocation string `pulumi:"dataLocation"`
	// FQDN of the CommunicationService instance.
	HostName string `pulumi:"hostName"`
	// Fully qualified resource ID for the resource.
	Id string `pulumi:"id"`
	// The immutable resource Id of the communication service.
	ImmutableResourceId string `pulumi:"immutableResourceId"`
	// The Azure location where the CommunicationService is running.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// Resource ID of an Azure Notification Hub linked to this resource.
	NotificationHubId string `pulumi:"notificationHubId"`
	// Provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Tags of the service which is a list of key value pairs that describe the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
	Type string `pulumi:"type"`
	// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
	Version string `pulumi:"version"`
}

func LookupCommunicationServiceOutput(ctx *pulumi.Context, args LookupCommunicationServiceOutputArgs, opts ...pulumi.InvokeOption) LookupCommunicationServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCommunicationServiceResult, error) {
			args := v.(LookupCommunicationServiceArgs)
			r, err := LookupCommunicationService(ctx, &args, opts...)
			var s LookupCommunicationServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCommunicationServiceResultOutput)
}

type LookupCommunicationServiceOutputArgs struct {
	// The name of the CommunicationService resource.
	CommunicationServiceName pulumi.StringInput `pulumi:"communicationServiceName"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCommunicationServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunicationServiceArgs)(nil)).Elem()
}

// A class representing a CommunicationService resource.
type LookupCommunicationServiceResultOutput struct{ *pulumi.OutputState }

func (LookupCommunicationServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommunicationServiceResult)(nil)).Elem()
}

func (o LookupCommunicationServiceResultOutput) ToLookupCommunicationServiceResultOutput() LookupCommunicationServiceResultOutput {
	return o
}

func (o LookupCommunicationServiceResultOutput) ToLookupCommunicationServiceResultOutputWithContext(ctx context.Context) LookupCommunicationServiceResultOutput {
	return o
}

// The location where the communication service stores its data at rest.
func (o LookupCommunicationServiceResultOutput) DataLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.DataLocation }).(pulumi.StringOutput)
}

// FQDN of the CommunicationService instance.
func (o LookupCommunicationServiceResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.HostName }).(pulumi.StringOutput)
}

// Fully qualified resource ID for the resource.
func (o LookupCommunicationServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The immutable resource Id of the communication service.
func (o LookupCommunicationServiceResultOutput) ImmutableResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.ImmutableResourceId }).(pulumi.StringOutput)
}

// The Azure location where the CommunicationService is running.
func (o LookupCommunicationServiceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o LookupCommunicationServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID of an Azure Notification Hub linked to this resource.
func (o LookupCommunicationServiceResultOutput) NotificationHubId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.NotificationHubId }).(pulumi.StringOutput)
}

// Provisioning state of the resource.
func (o LookupCommunicationServiceResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Tags of the service which is a list of key value pairs that describe the resource.
func (o LookupCommunicationServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the service - e.g. "Microsoft.Communication/CommunicationServices"
func (o LookupCommunicationServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

// Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.
func (o LookupCommunicationServiceResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommunicationServiceResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCommunicationServiceResultOutput{})
}
