// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20200113preview

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the source control.
type SourceControl struct {
	pulumi.CustomResourceState

	// The auto sync of the source control. Default is false.
	AutoSync pulumi.BoolPtrOutput `pulumi:"autoSync"`
	// The repo branch of the source control. Include branch as empty string for VsoTfvc.
	Branch pulumi.StringPtrOutput `pulumi:"branch"`
	// The creation time.
	CreationTime pulumi.StringPtrOutput `pulumi:"creationTime"`
	// The description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder path of the source control.
	FolderPath pulumi.StringPtrOutput `pulumi:"folderPath"`
	// The last modified time.
	LastModifiedTime pulumi.StringPtrOutput `pulumi:"lastModifiedTime"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// The auto publish of the source control. Default is true.
	PublishRunbook pulumi.BoolPtrOutput `pulumi:"publishRunbook"`
	// The repo url of the source control.
	RepoUrl pulumi.StringPtrOutput `pulumi:"repoUrl"`
	// The source type. Must be one of VsoGit, VsoTfvc, GitHub.
	SourceType pulumi.StringPtrOutput `pulumi:"sourceType"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewSourceControl registers a new resource with the given unique name, arguments, and options.
func NewSourceControl(ctx *pulumi.Context,
	name string, args *SourceControlArgs, opts ...pulumi.ResourceOption) (*SourceControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:automation:SourceControl"),
		},
		{
			Type: pulumi.String("azure-native:automation/v20170515preview:SourceControl"),
		},
		{
			Type: pulumi.String("azure-native:automation/v20190601:SourceControl"),
		},
	})
	opts = append(opts, aliases)
	var resource SourceControl
	err := ctx.RegisterResource("azure-native:automation/v20200113preview:SourceControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceControl gets an existing SourceControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceControlState, opts ...pulumi.ResourceOption) (*SourceControl, error) {
	var resource SourceControl
	err := ctx.ReadResource("azure-native:automation/v20200113preview:SourceControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceControl resources.
type sourceControlState struct {
}

type SourceControlState struct {
}

func (SourceControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceControlState)(nil)).Elem()
}

type sourceControlArgs struct {
	// The auto async of the source control. Default is false.
	AutoSync *bool `pulumi:"autoSync"`
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The repo branch of the source control. Include branch as empty string for VsoTfvc.
	Branch *string `pulumi:"branch"`
	// The user description of the source control.
	Description *string `pulumi:"description"`
	// The folder path of the source control. Path must be relative.
	FolderPath *string `pulumi:"folderPath"`
	// The auto publish of the source control. Default is true.
	PublishRunbook *bool `pulumi:"publishRunbook"`
	// The repo url of the source control.
	RepoUrl *string `pulumi:"repoUrl"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The authorization token for the repo of the source control.
	SecurityToken *SourceControlSecurityTokenProperties `pulumi:"securityToken"`
	// The source control name.
	SourceControlName *string `pulumi:"sourceControlName"`
	// The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.
	SourceType *string `pulumi:"sourceType"`
}

// The set of arguments for constructing a SourceControl resource.
type SourceControlArgs struct {
	// The auto async of the source control. Default is false.
	AutoSync pulumi.BoolPtrInput
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// The repo branch of the source control. Include branch as empty string for VsoTfvc.
	Branch pulumi.StringPtrInput
	// The user description of the source control.
	Description pulumi.StringPtrInput
	// The folder path of the source control. Path must be relative.
	FolderPath pulumi.StringPtrInput
	// The auto publish of the source control. Default is true.
	PublishRunbook pulumi.BoolPtrInput
	// The repo url of the source control.
	RepoUrl pulumi.StringPtrInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// The authorization token for the repo of the source control.
	SecurityToken SourceControlSecurityTokenPropertiesPtrInput
	// The source control name.
	SourceControlName pulumi.StringPtrInput
	// The source type. Must be one of VsoGit, VsoTfvc, GitHub, case sensitive.
	SourceType pulumi.StringPtrInput
}

func (SourceControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceControlArgs)(nil)).Elem()
}

type SourceControlInput interface {
	pulumi.Input

	ToSourceControlOutput() SourceControlOutput
	ToSourceControlOutputWithContext(ctx context.Context) SourceControlOutput
}

func (*SourceControl) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceControl)(nil)).Elem()
}

func (i *SourceControl) ToSourceControlOutput() SourceControlOutput {
	return i.ToSourceControlOutputWithContext(context.Background())
}

func (i *SourceControl) ToSourceControlOutputWithContext(ctx context.Context) SourceControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceControlOutput)
}

type SourceControlOutput struct{ *pulumi.OutputState }

func (SourceControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceControl)(nil)).Elem()
}

func (o SourceControlOutput) ToSourceControlOutput() SourceControlOutput {
	return o
}

func (o SourceControlOutput) ToSourceControlOutputWithContext(ctx context.Context) SourceControlOutput {
	return o
}

// The auto sync of the source control. Default is false.
func (o SourceControlOutput) AutoSync() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.BoolPtrOutput { return v.AutoSync }).(pulumi.BoolPtrOutput)
}

// The repo branch of the source control. Include branch as empty string for VsoTfvc.
func (o SourceControlOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.Branch }).(pulumi.StringPtrOutput)
}

// The creation time.
func (o SourceControlOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The description.
func (o SourceControlOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder path of the source control.
func (o SourceControlOutput) FolderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.FolderPath }).(pulumi.StringPtrOutput)
}

// The last modified time.
func (o SourceControlOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o SourceControlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The auto publish of the source control. Default is true.
func (o SourceControlOutput) PublishRunbook() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.BoolPtrOutput { return v.PublishRunbook }).(pulumi.BoolPtrOutput)
}

// The repo url of the source control.
func (o SourceControlOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

// The source type. Must be one of VsoGit, VsoTfvc, GitHub.
func (o SourceControlOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringPtrOutput { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o SourceControlOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceControl) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(SourceControlOutput{})
}
