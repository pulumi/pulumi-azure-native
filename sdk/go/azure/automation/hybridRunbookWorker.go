// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of hybrid runbook worker.
// API Version: 2021-06-22.
type HybridRunbookWorker struct {
	pulumi.CustomResourceState

	// Gets or sets the assigned machine IP address.
	Ip pulumi.StringPtrOutput `pulumi:"ip"`
	// Last Heartbeat from the Worker
	LastSeenDateTime pulumi.StringPtrOutput `pulumi:"lastSeenDateTime"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the registration time of the worker machine.
	RegisteredDateTime pulumi.StringPtrOutput `pulumi:"registeredDateTime"`
	// Resource system metadata.
	SystemData SystemDataResponseOutput `pulumi:"systemData"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Azure Resource Manager Id for a virtual machine.
	VmResourceId pulumi.StringPtrOutput `pulumi:"vmResourceId"`
	// Name of the HybridWorker.
	WorkerName pulumi.StringPtrOutput `pulumi:"workerName"`
	// Type of the HybridWorker.
	WorkerType pulumi.StringPtrOutput `pulumi:"workerType"`
}

// NewHybridRunbookWorker registers a new resource with the given unique name, arguments, and options.
func NewHybridRunbookWorker(ctx *pulumi.Context,
	name string, args *HybridRunbookWorkerArgs, opts ...pulumi.ResourceOption) (*HybridRunbookWorker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.HybridRunbookWorkerGroupName == nil {
		return nil, errors.New("invalid value for required argument 'HybridRunbookWorkerGroupName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:automation:HybridRunbookWorker"),
		},
		{
			Type: pulumi.String("azure-native:automation/v20210622:HybridRunbookWorker"),
		},
		{
			Type: pulumi.String("azure-nextgen:automation/v20210622:HybridRunbookWorker"),
		},
	})
	opts = append(opts, aliases)
	var resource HybridRunbookWorker
	err := ctx.RegisterResource("azure-native:automation:HybridRunbookWorker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHybridRunbookWorker gets an existing HybridRunbookWorker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHybridRunbookWorker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HybridRunbookWorkerState, opts ...pulumi.ResourceOption) (*HybridRunbookWorker, error) {
	var resource HybridRunbookWorker
	err := ctx.ReadResource("azure-native:automation:HybridRunbookWorker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HybridRunbookWorker resources.
type hybridRunbookWorkerState struct {
}

type HybridRunbookWorkerState struct {
}

func (HybridRunbookWorkerState) ElementType() reflect.Type {
	return reflect.TypeOf((*hybridRunbookWorkerState)(nil)).Elem()
}

type hybridRunbookWorkerArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The hybrid runbook worker group name
	HybridRunbookWorkerGroupName string `pulumi:"hybridRunbookWorkerGroupName"`
	// The hybrid runbook worker id
	HybridRunbookWorkerId *string `pulumi:"hybridRunbookWorkerId"`
	// Gets or sets the name of the resource.
	Name *string `pulumi:"name"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Azure Resource Manager Id for a virtual machine.
	VmResourceId *string `pulumi:"vmResourceId"`
}

// The set of arguments for constructing a HybridRunbookWorker resource.
type HybridRunbookWorkerArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// The hybrid runbook worker group name
	HybridRunbookWorkerGroupName pulumi.StringInput
	// The hybrid runbook worker id
	HybridRunbookWorkerId pulumi.StringPtrInput
	// Gets or sets the name of the resource.
	Name pulumi.StringPtrInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// Azure Resource Manager Id for a virtual machine.
	VmResourceId pulumi.StringPtrInput
}

func (HybridRunbookWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hybridRunbookWorkerArgs)(nil)).Elem()
}

type HybridRunbookWorkerInput interface {
	pulumi.Input

	ToHybridRunbookWorkerOutput() HybridRunbookWorkerOutput
	ToHybridRunbookWorkerOutputWithContext(ctx context.Context) HybridRunbookWorkerOutput
}

func (*HybridRunbookWorker) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridRunbookWorker)(nil))
}

func (i *HybridRunbookWorker) ToHybridRunbookWorkerOutput() HybridRunbookWorkerOutput {
	return i.ToHybridRunbookWorkerOutputWithContext(context.Background())
}

func (i *HybridRunbookWorker) ToHybridRunbookWorkerOutputWithContext(ctx context.Context) HybridRunbookWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridRunbookWorkerOutput)
}

type HybridRunbookWorkerOutput struct {
	*pulumi.OutputState
}

func (HybridRunbookWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HybridRunbookWorker)(nil))
}

func (o HybridRunbookWorkerOutput) ToHybridRunbookWorkerOutput() HybridRunbookWorkerOutput {
	return o
}

func (o HybridRunbookWorkerOutput) ToHybridRunbookWorkerOutputWithContext(ctx context.Context) HybridRunbookWorkerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(HybridRunbookWorkerOutput{})
}
