// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Definition of the watcher type.
// Latest API Version: 2019-06-01.
//
// Deprecated: The 'latest' version is deprecated. Please migrate to the resource in the top-level module: 'azure-nextgen:automation:Watcher'.
type Watcher struct {
	pulumi.CustomResourceState

	// Gets or sets the creation time.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// Gets or sets the description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Gets or sets the frequency at which the watcher is invoked.
	ExecutionFrequencyInSeconds pulumi.Float64PtrOutput `pulumi:"executionFrequencyInSeconds"`
	// Details of the user who last modified the watcher.
	LastModifiedBy pulumi.StringOutput `pulumi:"lastModifiedBy"`
	// Gets or sets the last modified time.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The geo-location where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
	ScriptName pulumi.StringPtrOutput `pulumi:"scriptName"`
	// Gets or sets the parameters of the script.
	ScriptParameters pulumi.StringMapOutput `pulumi:"scriptParameters"`
	// Gets or sets the name of the hybrid worker group the watcher will run on.
	ScriptRunOn pulumi.StringPtrOutput `pulumi:"scriptRunOn"`
	// Gets the current status of the watcher.
	Status pulumi.StringOutput `pulumi:"status"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewWatcher registers a new resource with the given unique name, arguments, and options.
func NewWatcher(ctx *pulumi.Context,
	name string, args *WatcherArgs, opts ...pulumi.ResourceOption) (*Watcher, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WatcherName == nil {
		return nil, errors.New("invalid value for required argument 'WatcherName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:automation:Watcher"),
		},
		{
			Type: pulumi.String("azure-nextgen:automation/v20151031:Watcher"),
		},
		{
			Type: pulumi.String("azure-nextgen:automation/v20190601:Watcher"),
		},
		{
			Type: pulumi.String("azure-nextgen:automation/v20200113preview:Watcher"),
		},
	})
	opts = append(opts, aliases)
	var resource Watcher
	err := ctx.RegisterResource("azure-nextgen:automation/latest:Watcher", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWatcher gets an existing Watcher resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWatcher(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WatcherState, opts ...pulumi.ResourceOption) (*Watcher, error) {
	var resource Watcher
	err := ctx.ReadResource("azure-nextgen:automation/latest:Watcher", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Watcher resources.
type watcherState struct {
	// Gets or sets the creation time.
	CreationTime *string `pulumi:"creationTime"`
	// Gets or sets the description.
	Description *string `pulumi:"description"`
	// Gets or sets the etag of the resource.
	Etag *string `pulumi:"etag"`
	// Gets or sets the frequency at which the watcher is invoked.
	ExecutionFrequencyInSeconds *float64 `pulumi:"executionFrequencyInSeconds"`
	// Details of the user who last modified the watcher.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// Gets or sets the last modified time.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
	ScriptName *string `pulumi:"scriptName"`
	// Gets or sets the parameters of the script.
	ScriptParameters map[string]string `pulumi:"scriptParameters"`
	// Gets or sets the name of the hybrid worker group the watcher will run on.
	ScriptRunOn *string `pulumi:"scriptRunOn"`
	// Gets the current status of the watcher.
	Status *string `pulumi:"status"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

type WatcherState struct {
	// Gets or sets the creation time.
	CreationTime pulumi.StringPtrInput
	// Gets or sets the description.
	Description pulumi.StringPtrInput
	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrInput
	// Gets or sets the frequency at which the watcher is invoked.
	ExecutionFrequencyInSeconds pulumi.Float64PtrInput
	// Details of the user who last modified the watcher.
	LastModifiedBy pulumi.StringPtrInput
	// Gets or sets the last modified time.
	LastModifiedTime pulumi.StringPtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// The name of the resource
	Name pulumi.StringPtrInput
	// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
	ScriptName pulumi.StringPtrInput
	// Gets or sets the parameters of the script.
	ScriptParameters pulumi.StringMapInput
	// Gets or sets the name of the hybrid worker group the watcher will run on.
	ScriptRunOn pulumi.StringPtrInput
	// Gets the current status of the watcher.
	Status pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The type of the resource.
	Type pulumi.StringPtrInput
}

func (WatcherState) ElementType() reflect.Type {
	return reflect.TypeOf((*watcherState)(nil)).Elem()
}

type watcherArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// Gets or sets the description.
	Description *string `pulumi:"description"`
	// Gets or sets the etag of the resource.
	Etag *string `pulumi:"etag"`
	// Gets or sets the frequency at which the watcher is invoked.
	ExecutionFrequencyInSeconds *float64 `pulumi:"executionFrequencyInSeconds"`
	// The geo-location where the resource lives
	Location *string `pulumi:"location"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
	ScriptName *string `pulumi:"scriptName"`
	// Gets or sets the parameters of the script.
	ScriptParameters map[string]string `pulumi:"scriptParameters"`
	// Gets or sets the name of the hybrid worker group the watcher will run on.
	ScriptRunOn *string `pulumi:"scriptRunOn"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The watcher name.
	WatcherName string `pulumi:"watcherName"`
}

// The set of arguments for constructing a Watcher resource.
type WatcherArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// Gets or sets the description.
	Description pulumi.StringPtrInput
	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrInput
	// Gets or sets the frequency at which the watcher is invoked.
	ExecutionFrequencyInSeconds pulumi.Float64PtrInput
	// The geo-location where the resource lives
	Location pulumi.StringPtrInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// Gets or sets the name of the script the watcher is attached to, i.e. the name of an existing runbook.
	ScriptName pulumi.StringPtrInput
	// Gets or sets the parameters of the script.
	ScriptParameters pulumi.StringMapInput
	// Gets or sets the name of the hybrid worker group the watcher will run on.
	ScriptRunOn pulumi.StringPtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// The watcher name.
	WatcherName pulumi.StringInput
}

func (WatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*watcherArgs)(nil)).Elem()
}

type WatcherInput interface {
	pulumi.Input

	ToWatcherOutput() WatcherOutput
	ToWatcherOutputWithContext(ctx context.Context) WatcherOutput
}

func (*Watcher) ElementType() reflect.Type {
	return reflect.TypeOf((*Watcher)(nil))
}

func (i *Watcher) ToWatcherOutput() WatcherOutput {
	return i.ToWatcherOutputWithContext(context.Background())
}

func (i *Watcher) ToWatcherOutputWithContext(ctx context.Context) WatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatcherOutput)
}

type WatcherOutput struct {
	*pulumi.OutputState
}

func (WatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Watcher)(nil))
}

func (o WatcherOutput) ToWatcherOutput() WatcherOutput {
	return o
}

func (o WatcherOutput) ToWatcherOutputWithContext(ctx context.Context) WatcherOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WatcherOutput{})
}
