// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of the module type.
// API Version: 2019-06-01.
type Python2Package struct {
	pulumi.CustomResourceState

	// Gets or sets the activity count of the module.
	ActivityCount pulumi.IntPtrOutput `pulumi:"activityCount"`
	// Gets or sets the contentLink of the module.
	ContentLink ContentLinkResponsePtrOutput `pulumi:"contentLink"`
	// Gets or sets the creation time.
	CreationTime pulumi.StringPtrOutput `pulumi:"creationTime"`
	// Gets or sets the description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Gets or sets the error info of the module.
	Error ModuleErrorInfoResponsePtrOutput `pulumi:"error"`
	// Gets or sets the etag of the resource.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Gets or sets type of module, if its composite or not.
	IsComposite pulumi.BoolPtrOutput `pulumi:"isComposite"`
	// Gets or sets the isGlobal flag of the module.
	IsGlobal pulumi.BoolPtrOutput `pulumi:"isGlobal"`
	// Gets or sets the last modified time.
	LastModifiedTime pulumi.StringPtrOutput `pulumi:"lastModifiedTime"`
	// The Azure Region where the resource lives
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets the provisioning state of the module.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Gets or sets the size in bytes of the module.
	SizeInBytes pulumi.Float64PtrOutput `pulumi:"sizeInBytes"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// Gets or sets the version of the module.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewPython2Package registers a new resource with the given unique name, arguments, and options.
func NewPython2Package(ctx *pulumi.Context,
	name string, args *Python2PackageArgs, opts ...pulumi.ResourceOption) (*Python2Package, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ContentLink == nil {
		return nil, errors.New("invalid value for required argument 'ContentLink'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:automation/v20180630:Python2Package"),
		},
		{
			Type: pulumi.String("azure-native:automation/v20190601:Python2Package"),
		},
		{
			Type: pulumi.String("azure-native:automation/v20200113preview:Python2Package"),
		},
	})
	opts = append(opts, aliases)
	var resource Python2Package
	err := ctx.RegisterResource("azure-native:automation:Python2Package", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPython2Package gets an existing Python2Package resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPython2Package(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Python2PackageState, opts ...pulumi.ResourceOption) (*Python2Package, error) {
	var resource Python2Package
	err := ctx.ReadResource("azure-native:automation:Python2Package", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Python2Package resources.
type python2PackageState struct {
}

type Python2PackageState struct {
}

func (Python2PackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*python2PackageState)(nil)).Elem()
}

type python2PackageArgs struct {
	// The name of the automation account.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// Gets or sets the module content link.
	ContentLink ContentLink `pulumi:"contentLink"`
	// The name of python package.
	PackageName *string `pulumi:"packageName"`
	// Name of an Azure Resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Gets or sets the tags attached to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Python2Package resource.
type Python2PackageArgs struct {
	// The name of the automation account.
	AutomationAccountName pulumi.StringInput
	// Gets or sets the module content link.
	ContentLink ContentLinkInput
	// The name of python package.
	PackageName pulumi.StringPtrInput
	// Name of an Azure Resource group.
	ResourceGroupName pulumi.StringInput
	// Gets or sets the tags attached to the resource.
	Tags pulumi.StringMapInput
}

func (Python2PackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*python2PackageArgs)(nil)).Elem()
}

type Python2PackageInput interface {
	pulumi.Input

	ToPython2PackageOutput() Python2PackageOutput
	ToPython2PackageOutputWithContext(ctx context.Context) Python2PackageOutput
}

func (*Python2Package) ElementType() reflect.Type {
	return reflect.TypeOf((**Python2Package)(nil)).Elem()
}

func (i *Python2Package) ToPython2PackageOutput() Python2PackageOutput {
	return i.ToPython2PackageOutputWithContext(context.Background())
}

func (i *Python2Package) ToPython2PackageOutputWithContext(ctx context.Context) Python2PackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Python2PackageOutput)
}

type Python2PackageOutput struct{ *pulumi.OutputState }

func (Python2PackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Python2Package)(nil)).Elem()
}

func (o Python2PackageOutput) ToPython2PackageOutput() Python2PackageOutput {
	return o
}

func (o Python2PackageOutput) ToPython2PackageOutputWithContext(ctx context.Context) Python2PackageOutput {
	return o
}

// Gets or sets the activity count of the module.
func (o Python2PackageOutput) ActivityCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.IntPtrOutput { return v.ActivityCount }).(pulumi.IntPtrOutput)
}

// Gets or sets the contentLink of the module.
func (o Python2PackageOutput) ContentLink() ContentLinkResponsePtrOutput {
	return o.ApplyT(func(v *Python2Package) ContentLinkResponsePtrOutput { return v.ContentLink }).(ContentLinkResponsePtrOutput)
}

// Gets or sets the creation time.
func (o Python2PackageOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// Gets or sets the description.
func (o Python2PackageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Gets or sets the error info of the module.
func (o Python2PackageOutput) Error() ModuleErrorInfoResponsePtrOutput {
	return o.ApplyT(func(v *Python2Package) ModuleErrorInfoResponsePtrOutput { return v.Error }).(ModuleErrorInfoResponsePtrOutput)
}

// Gets or sets the etag of the resource.
func (o Python2PackageOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Gets or sets type of module, if its composite or not.
func (o Python2PackageOutput) IsComposite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.BoolPtrOutput { return v.IsComposite }).(pulumi.BoolPtrOutput)
}

// Gets or sets the isGlobal flag of the module.
func (o Python2PackageOutput) IsGlobal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.BoolPtrOutput { return v.IsGlobal }).(pulumi.BoolPtrOutput)
}

// Gets or sets the last modified time.
func (o Python2PackageOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

// The Azure Region where the resource lives
func (o Python2PackageOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource
func (o Python2PackageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state of the module.
func (o Python2PackageOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the size in bytes of the module.
func (o Python2PackageOutput) SizeInBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.Float64PtrOutput { return v.SizeInBytes }).(pulumi.Float64PtrOutput)
}

// Resource tags.
func (o Python2PackageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource.
func (o Python2PackageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets the version of the module.
func (o Python2PackageOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Python2Package) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(Python2PackageOutput{})
}
