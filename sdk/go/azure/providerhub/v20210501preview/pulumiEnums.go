// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20210501preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExtensionCategory string

const (
	ExtensionCategoryNotSpecified                      = ExtensionCategory("NotSpecified")
	ExtensionCategoryResourceCreationValidate          = ExtensionCategory("ResourceCreationValidate")
	ExtensionCategoryResourceCreationBegin             = ExtensionCategory("ResourceCreationBegin")
	ExtensionCategoryResourceCreationCompleted         = ExtensionCategory("ResourceCreationCompleted")
	ExtensionCategoryResourceReadValidate              = ExtensionCategory("ResourceReadValidate")
	ExtensionCategoryResourceReadBegin                 = ExtensionCategory("ResourceReadBegin")
	ExtensionCategoryResourcePatchValidate             = ExtensionCategory("ResourcePatchValidate")
	ExtensionCategoryResourcePatchCompleted            = ExtensionCategory("ResourcePatchCompleted")
	ExtensionCategoryResourceDeletionValidate          = ExtensionCategory("ResourceDeletionValidate")
	ExtensionCategoryResourceDeletionBegin             = ExtensionCategory("ResourceDeletionBegin")
	ExtensionCategoryResourceDeletionCompleted         = ExtensionCategory("ResourceDeletionCompleted")
	ExtensionCategoryResourcePostAction                = ExtensionCategory("ResourcePostAction")
	ExtensionCategorySubscriptionLifecycleNotification = ExtensionCategory("SubscriptionLifecycleNotification")
	ExtensionCategoryResourcePatchBegin                = ExtensionCategory("ResourcePatchBegin")
	ExtensionCategoryResourceMoveBegin                 = ExtensionCategory("ResourceMoveBegin")
	ExtensionCategoryResourceMoveCompleted             = ExtensionCategory("ResourceMoveCompleted")
)

func (ExtensionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionCategory)(nil)).Elem()
}

func (e ExtensionCategory) ToExtensionCategoryOutput() ExtensionCategoryOutput {
	return pulumi.ToOutput(e).(ExtensionCategoryOutput)
}

func (e ExtensionCategory) ToExtensionCategoryOutputWithContext(ctx context.Context) ExtensionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtensionCategoryOutput)
}

func (e ExtensionCategory) ToExtensionCategoryPtrOutput() ExtensionCategoryPtrOutput {
	return e.ToExtensionCategoryPtrOutputWithContext(context.Background())
}

func (e ExtensionCategory) ToExtensionCategoryPtrOutputWithContext(ctx context.Context) ExtensionCategoryPtrOutput {
	return ExtensionCategory(e).ToExtensionCategoryOutputWithContext(ctx).ToExtensionCategoryPtrOutputWithContext(ctx)
}

func (e ExtensionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtensionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtensionCategoryOutput struct{ *pulumi.OutputState }

func (ExtensionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionCategory)(nil)).Elem()
}

func (o ExtensionCategoryOutput) ToExtensionCategoryOutput() ExtensionCategoryOutput {
	return o
}

func (o ExtensionCategoryOutput) ToExtensionCategoryOutputWithContext(ctx context.Context) ExtensionCategoryOutput {
	return o
}

func (o ExtensionCategoryOutput) ToExtensionCategoryPtrOutput() ExtensionCategoryPtrOutput {
	return o.ToExtensionCategoryPtrOutputWithContext(context.Background())
}

func (o ExtensionCategoryOutput) ToExtensionCategoryPtrOutputWithContext(ctx context.Context) ExtensionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionCategory) *ExtensionCategory {
		return &v
	}).(ExtensionCategoryPtrOutput)
}

func (o ExtensionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtensionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtensionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtensionCategoryPtrOutput struct{ *pulumi.OutputState }

func (ExtensionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionCategory)(nil)).Elem()
}

func (o ExtensionCategoryPtrOutput) ToExtensionCategoryPtrOutput() ExtensionCategoryPtrOutput {
	return o
}

func (o ExtensionCategoryPtrOutput) ToExtensionCategoryPtrOutputWithContext(ctx context.Context) ExtensionCategoryPtrOutput {
	return o
}

func (o ExtensionCategoryPtrOutput) Elem() ExtensionCategoryOutput {
	return o.ApplyT(func(v *ExtensionCategory) ExtensionCategory {
		if v != nil {
			return *v
		}
		var ret ExtensionCategory
		return ret
	}).(ExtensionCategoryOutput)
}

func (o ExtensionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtensionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtensionCategoryInput is an input type that accepts ExtensionCategoryArgs and ExtensionCategoryOutput values.
// You can construct a concrete instance of `ExtensionCategoryInput` via:
//
//          ExtensionCategoryArgs{...}
type ExtensionCategoryInput interface {
	pulumi.Input

	ToExtensionCategoryOutput() ExtensionCategoryOutput
	ToExtensionCategoryOutputWithContext(context.Context) ExtensionCategoryOutput
}

var extensionCategoryPtrType = reflect.TypeOf((**ExtensionCategory)(nil)).Elem()

type ExtensionCategoryPtrInput interface {
	pulumi.Input

	ToExtensionCategoryPtrOutput() ExtensionCategoryPtrOutput
	ToExtensionCategoryPtrOutputWithContext(context.Context) ExtensionCategoryPtrOutput
}

type extensionCategoryPtr string

func ExtensionCategoryPtr(v string) ExtensionCategoryPtrInput {
	return (*extensionCategoryPtr)(&v)
}

func (*extensionCategoryPtr) ElementType() reflect.Type {
	return extensionCategoryPtrType
}

func (in *extensionCategoryPtr) ToExtensionCategoryPtrOutput() ExtensionCategoryPtrOutput {
	return pulumi.ToOutput(in).(ExtensionCategoryPtrOutput)
}

func (in *extensionCategoryPtr) ToExtensionCategoryPtrOutputWithContext(ctx context.Context) ExtensionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtensionCategoryPtrOutput)
}

type ExtensionOptionType string

const (
	ExtensionOptionTypeNotSpecified                                  = ExtensionOptionType("NotSpecified")
	ExtensionOptionTypeDoNotMergeExistingReadOnlyAndSecretProperties = ExtensionOptionType("DoNotMergeExistingReadOnlyAndSecretProperties")
	ExtensionOptionTypeIncludeInternalMetadata                       = ExtensionOptionType("IncludeInternalMetadata")
)

func (ExtensionOptionType) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionOptionType)(nil)).Elem()
}

func (e ExtensionOptionType) ToExtensionOptionTypeOutput() ExtensionOptionTypeOutput {
	return pulumi.ToOutput(e).(ExtensionOptionTypeOutput)
}

func (e ExtensionOptionType) ToExtensionOptionTypeOutputWithContext(ctx context.Context) ExtensionOptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExtensionOptionTypeOutput)
}

func (e ExtensionOptionType) ToExtensionOptionTypePtrOutput() ExtensionOptionTypePtrOutput {
	return e.ToExtensionOptionTypePtrOutputWithContext(context.Background())
}

func (e ExtensionOptionType) ToExtensionOptionTypePtrOutputWithContext(ctx context.Context) ExtensionOptionTypePtrOutput {
	return ExtensionOptionType(e).ToExtensionOptionTypeOutputWithContext(ctx).ToExtensionOptionTypePtrOutputWithContext(ctx)
}

func (e ExtensionOptionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionOptionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExtensionOptionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExtensionOptionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExtensionOptionTypeOutput struct{ *pulumi.OutputState }

func (ExtensionOptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionOptionType)(nil)).Elem()
}

func (o ExtensionOptionTypeOutput) ToExtensionOptionTypeOutput() ExtensionOptionTypeOutput {
	return o
}

func (o ExtensionOptionTypeOutput) ToExtensionOptionTypeOutputWithContext(ctx context.Context) ExtensionOptionTypeOutput {
	return o
}

func (o ExtensionOptionTypeOutput) ToExtensionOptionTypePtrOutput() ExtensionOptionTypePtrOutput {
	return o.ToExtensionOptionTypePtrOutputWithContext(context.Background())
}

func (o ExtensionOptionTypeOutput) ToExtensionOptionTypePtrOutputWithContext(ctx context.Context) ExtensionOptionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtensionOptionType) *ExtensionOptionType {
		return &v
	}).(ExtensionOptionTypePtrOutput)
}

func (o ExtensionOptionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExtensionOptionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionOptionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExtensionOptionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionOptionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExtensionOptionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExtensionOptionTypePtrOutput struct{ *pulumi.OutputState }

func (ExtensionOptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtensionOptionType)(nil)).Elem()
}

func (o ExtensionOptionTypePtrOutput) ToExtensionOptionTypePtrOutput() ExtensionOptionTypePtrOutput {
	return o
}

func (o ExtensionOptionTypePtrOutput) ToExtensionOptionTypePtrOutputWithContext(ctx context.Context) ExtensionOptionTypePtrOutput {
	return o
}

func (o ExtensionOptionTypePtrOutput) Elem() ExtensionOptionTypeOutput {
	return o.ApplyT(func(v *ExtensionOptionType) ExtensionOptionType {
		if v != nil {
			return *v
		}
		var ret ExtensionOptionType
		return ret
	}).(ExtensionOptionTypeOutput)
}

func (o ExtensionOptionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExtensionOptionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExtensionOptionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExtensionOptionTypeInput is an input type that accepts ExtensionOptionTypeArgs and ExtensionOptionTypeOutput values.
// You can construct a concrete instance of `ExtensionOptionTypeInput` via:
//
//          ExtensionOptionTypeArgs{...}
type ExtensionOptionTypeInput interface {
	pulumi.Input

	ToExtensionOptionTypeOutput() ExtensionOptionTypeOutput
	ToExtensionOptionTypeOutputWithContext(context.Context) ExtensionOptionTypeOutput
}

var extensionOptionTypePtrType = reflect.TypeOf((**ExtensionOptionType)(nil)).Elem()

type ExtensionOptionTypePtrInput interface {
	pulumi.Input

	ToExtensionOptionTypePtrOutput() ExtensionOptionTypePtrOutput
	ToExtensionOptionTypePtrOutputWithContext(context.Context) ExtensionOptionTypePtrOutput
}

type extensionOptionTypePtr string

func ExtensionOptionTypePtr(v string) ExtensionOptionTypePtrInput {
	return (*extensionOptionTypePtr)(&v)
}

func (*extensionOptionTypePtr) ElementType() reflect.Type {
	return extensionOptionTypePtrType
}

func (in *extensionOptionTypePtr) ToExtensionOptionTypePtrOutput() ExtensionOptionTypePtrOutput {
	return pulumi.ToOutput(in).(ExtensionOptionTypePtrOutput)
}

func (in *extensionOptionTypePtr) ToExtensionOptionTypePtrOutputWithContext(ctx context.Context) ExtensionOptionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExtensionOptionTypePtrOutput)
}

type FeaturesPolicy string

const (
	FeaturesPolicyAny = FeaturesPolicy("Any")
	FeaturesPolicyAll = FeaturesPolicy("All")
)

func (FeaturesPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*FeaturesPolicy)(nil)).Elem()
}

func (e FeaturesPolicy) ToFeaturesPolicyOutput() FeaturesPolicyOutput {
	return pulumi.ToOutput(e).(FeaturesPolicyOutput)
}

func (e FeaturesPolicy) ToFeaturesPolicyOutputWithContext(ctx context.Context) FeaturesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FeaturesPolicyOutput)
}

func (e FeaturesPolicy) ToFeaturesPolicyPtrOutput() FeaturesPolicyPtrOutput {
	return e.ToFeaturesPolicyPtrOutputWithContext(context.Background())
}

func (e FeaturesPolicy) ToFeaturesPolicyPtrOutputWithContext(ctx context.Context) FeaturesPolicyPtrOutput {
	return FeaturesPolicy(e).ToFeaturesPolicyOutputWithContext(ctx).ToFeaturesPolicyPtrOutputWithContext(ctx)
}

func (e FeaturesPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeaturesPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeaturesPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FeaturesPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FeaturesPolicyOutput struct{ *pulumi.OutputState }

func (FeaturesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeaturesPolicy)(nil)).Elem()
}

func (o FeaturesPolicyOutput) ToFeaturesPolicyOutput() FeaturesPolicyOutput {
	return o
}

func (o FeaturesPolicyOutput) ToFeaturesPolicyOutputWithContext(ctx context.Context) FeaturesPolicyOutput {
	return o
}

func (o FeaturesPolicyOutput) ToFeaturesPolicyPtrOutput() FeaturesPolicyPtrOutput {
	return o.ToFeaturesPolicyPtrOutputWithContext(context.Background())
}

func (o FeaturesPolicyOutput) ToFeaturesPolicyPtrOutputWithContext(ctx context.Context) FeaturesPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeaturesPolicy) *FeaturesPolicy {
		return &v
	}).(FeaturesPolicyPtrOutput)
}

func (o FeaturesPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FeaturesPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeaturesPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FeaturesPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeaturesPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeaturesPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FeaturesPolicyPtrOutput struct{ *pulumi.OutputState }

func (FeaturesPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeaturesPolicy)(nil)).Elem()
}

func (o FeaturesPolicyPtrOutput) ToFeaturesPolicyPtrOutput() FeaturesPolicyPtrOutput {
	return o
}

func (o FeaturesPolicyPtrOutput) ToFeaturesPolicyPtrOutputWithContext(ctx context.Context) FeaturesPolicyPtrOutput {
	return o
}

func (o FeaturesPolicyPtrOutput) Elem() FeaturesPolicyOutput {
	return o.ApplyT(func(v *FeaturesPolicy) FeaturesPolicy {
		if v != nil {
			return *v
		}
		var ret FeaturesPolicy
		return ret
	}).(FeaturesPolicyOutput)
}

func (o FeaturesPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeaturesPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FeaturesPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FeaturesPolicyInput is an input type that accepts FeaturesPolicyArgs and FeaturesPolicyOutput values.
// You can construct a concrete instance of `FeaturesPolicyInput` via:
//
//          FeaturesPolicyArgs{...}
type FeaturesPolicyInput interface {
	pulumi.Input

	ToFeaturesPolicyOutput() FeaturesPolicyOutput
	ToFeaturesPolicyOutputWithContext(context.Context) FeaturesPolicyOutput
}

var featuresPolicyPtrType = reflect.TypeOf((**FeaturesPolicy)(nil)).Elem()

type FeaturesPolicyPtrInput interface {
	pulumi.Input

	ToFeaturesPolicyPtrOutput() FeaturesPolicyPtrOutput
	ToFeaturesPolicyPtrOutputWithContext(context.Context) FeaturesPolicyPtrOutput
}

type featuresPolicyPtr string

func FeaturesPolicyPtr(v string) FeaturesPolicyPtrInput {
	return (*featuresPolicyPtr)(&v)
}

func (*featuresPolicyPtr) ElementType() reflect.Type {
	return featuresPolicyPtrType
}

func (in *featuresPolicyPtr) ToFeaturesPolicyPtrOutput() FeaturesPolicyPtrOutput {
	return pulumi.ToOutput(in).(FeaturesPolicyPtrOutput)
}

func (in *featuresPolicyPtr) ToFeaturesPolicyPtrOutputWithContext(ctx context.Context) FeaturesPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FeaturesPolicyPtrOutput)
}

type IdentityManagementTypes string

const (
	IdentityManagementTypesNotSpecified              = IdentityManagementTypes("NotSpecified")
	IdentityManagementTypesSystemAssigned            = IdentityManagementTypes("SystemAssigned")
	IdentityManagementTypesUserAssigned              = IdentityManagementTypes("UserAssigned")
	IdentityManagementTypesActor                     = IdentityManagementTypes("Actor")
	IdentityManagementTypesDelegatedResourceIdentity = IdentityManagementTypes("DelegatedResourceIdentity")
)

func (IdentityManagementTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityManagementTypes)(nil)).Elem()
}

func (e IdentityManagementTypes) ToIdentityManagementTypesOutput() IdentityManagementTypesOutput {
	return pulumi.ToOutput(e).(IdentityManagementTypesOutput)
}

func (e IdentityManagementTypes) ToIdentityManagementTypesOutputWithContext(ctx context.Context) IdentityManagementTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IdentityManagementTypesOutput)
}

func (e IdentityManagementTypes) ToIdentityManagementTypesPtrOutput() IdentityManagementTypesPtrOutput {
	return e.ToIdentityManagementTypesPtrOutputWithContext(context.Background())
}

func (e IdentityManagementTypes) ToIdentityManagementTypesPtrOutputWithContext(ctx context.Context) IdentityManagementTypesPtrOutput {
	return IdentityManagementTypes(e).ToIdentityManagementTypesOutputWithContext(ctx).ToIdentityManagementTypesPtrOutputWithContext(ctx)
}

func (e IdentityManagementTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityManagementTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IdentityManagementTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IdentityManagementTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IdentityManagementTypesOutput struct{ *pulumi.OutputState }

func (IdentityManagementTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityManagementTypes)(nil)).Elem()
}

func (o IdentityManagementTypesOutput) ToIdentityManagementTypesOutput() IdentityManagementTypesOutput {
	return o
}

func (o IdentityManagementTypesOutput) ToIdentityManagementTypesOutputWithContext(ctx context.Context) IdentityManagementTypesOutput {
	return o
}

func (o IdentityManagementTypesOutput) ToIdentityManagementTypesPtrOutput() IdentityManagementTypesPtrOutput {
	return o.ToIdentityManagementTypesPtrOutputWithContext(context.Background())
}

func (o IdentityManagementTypesOutput) ToIdentityManagementTypesPtrOutputWithContext(ctx context.Context) IdentityManagementTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityManagementTypes) *IdentityManagementTypes {
		return &v
	}).(IdentityManagementTypesPtrOutput)
}

func (o IdentityManagementTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IdentityManagementTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityManagementTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IdentityManagementTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityManagementTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IdentityManagementTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IdentityManagementTypesPtrOutput struct{ *pulumi.OutputState }

func (IdentityManagementTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityManagementTypes)(nil)).Elem()
}

func (o IdentityManagementTypesPtrOutput) ToIdentityManagementTypesPtrOutput() IdentityManagementTypesPtrOutput {
	return o
}

func (o IdentityManagementTypesPtrOutput) ToIdentityManagementTypesPtrOutputWithContext(ctx context.Context) IdentityManagementTypesPtrOutput {
	return o
}

func (o IdentityManagementTypesPtrOutput) Elem() IdentityManagementTypesOutput {
	return o.ApplyT(func(v *IdentityManagementTypes) IdentityManagementTypes {
		if v != nil {
			return *v
		}
		var ret IdentityManagementTypes
		return ret
	}).(IdentityManagementTypesOutput)
}

func (o IdentityManagementTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IdentityManagementTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IdentityManagementTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IdentityManagementTypesInput is an input type that accepts IdentityManagementTypesArgs and IdentityManagementTypesOutput values.
// You can construct a concrete instance of `IdentityManagementTypesInput` via:
//
//          IdentityManagementTypesArgs{...}
type IdentityManagementTypesInput interface {
	pulumi.Input

	ToIdentityManagementTypesOutput() IdentityManagementTypesOutput
	ToIdentityManagementTypesOutputWithContext(context.Context) IdentityManagementTypesOutput
}

var identityManagementTypesPtrType = reflect.TypeOf((**IdentityManagementTypes)(nil)).Elem()

type IdentityManagementTypesPtrInput interface {
	pulumi.Input

	ToIdentityManagementTypesPtrOutput() IdentityManagementTypesPtrOutput
	ToIdentityManagementTypesPtrOutputWithContext(context.Context) IdentityManagementTypesPtrOutput
}

type identityManagementTypesPtr string

func IdentityManagementTypesPtr(v string) IdentityManagementTypesPtrInput {
	return (*identityManagementTypesPtr)(&v)
}

func (*identityManagementTypesPtr) ElementType() reflect.Type {
	return identityManagementTypesPtrType
}

func (in *identityManagementTypesPtr) ToIdentityManagementTypesPtrOutput() IdentityManagementTypesPtrOutput {
	return pulumi.ToOutput(in).(IdentityManagementTypesPtrOutput)
}

func (in *identityManagementTypesPtr) ToIdentityManagementTypesPtrOutputWithContext(ctx context.Context) IdentityManagementTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IdentityManagementTypesPtrOutput)
}

type LoggingDetails string

const (
	LoggingDetailsNone = LoggingDetails("None")
	LoggingDetailsBody = LoggingDetails("Body")
)

func (LoggingDetails) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingDetails)(nil)).Elem()
}

func (e LoggingDetails) ToLoggingDetailsOutput() LoggingDetailsOutput {
	return pulumi.ToOutput(e).(LoggingDetailsOutput)
}

func (e LoggingDetails) ToLoggingDetailsOutputWithContext(ctx context.Context) LoggingDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingDetailsOutput)
}

func (e LoggingDetails) ToLoggingDetailsPtrOutput() LoggingDetailsPtrOutput {
	return e.ToLoggingDetailsPtrOutputWithContext(context.Background())
}

func (e LoggingDetails) ToLoggingDetailsPtrOutputWithContext(ctx context.Context) LoggingDetailsPtrOutput {
	return LoggingDetails(e).ToLoggingDetailsOutputWithContext(ctx).ToLoggingDetailsPtrOutputWithContext(ctx)
}

func (e LoggingDetails) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingDetails) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingDetails) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingDetails) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingDetailsOutput struct{ *pulumi.OutputState }

func (LoggingDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingDetails)(nil)).Elem()
}

func (o LoggingDetailsOutput) ToLoggingDetailsOutput() LoggingDetailsOutput {
	return o
}

func (o LoggingDetailsOutput) ToLoggingDetailsOutputWithContext(ctx context.Context) LoggingDetailsOutput {
	return o
}

func (o LoggingDetailsOutput) ToLoggingDetailsPtrOutput() LoggingDetailsPtrOutput {
	return o.ToLoggingDetailsPtrOutputWithContext(context.Background())
}

func (o LoggingDetailsOutput) ToLoggingDetailsPtrOutputWithContext(ctx context.Context) LoggingDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingDetails) *LoggingDetails {
		return &v
	}).(LoggingDetailsPtrOutput)
}

func (o LoggingDetailsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingDetailsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingDetails) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingDetailsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingDetailsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingDetails) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingDetailsPtrOutput struct{ *pulumi.OutputState }

func (LoggingDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingDetails)(nil)).Elem()
}

func (o LoggingDetailsPtrOutput) ToLoggingDetailsPtrOutput() LoggingDetailsPtrOutput {
	return o
}

func (o LoggingDetailsPtrOutput) ToLoggingDetailsPtrOutputWithContext(ctx context.Context) LoggingDetailsPtrOutput {
	return o
}

func (o LoggingDetailsPtrOutput) Elem() LoggingDetailsOutput {
	return o.ApplyT(func(v *LoggingDetails) LoggingDetails {
		if v != nil {
			return *v
		}
		var ret LoggingDetails
		return ret
	}).(LoggingDetailsOutput)
}

func (o LoggingDetailsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingDetailsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingDetails) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingDetailsInput is an input type that accepts LoggingDetailsArgs and LoggingDetailsOutput values.
// You can construct a concrete instance of `LoggingDetailsInput` via:
//
//          LoggingDetailsArgs{...}
type LoggingDetailsInput interface {
	pulumi.Input

	ToLoggingDetailsOutput() LoggingDetailsOutput
	ToLoggingDetailsOutputWithContext(context.Context) LoggingDetailsOutput
}

var loggingDetailsPtrType = reflect.TypeOf((**LoggingDetails)(nil)).Elem()

type LoggingDetailsPtrInput interface {
	pulumi.Input

	ToLoggingDetailsPtrOutput() LoggingDetailsPtrOutput
	ToLoggingDetailsPtrOutputWithContext(context.Context) LoggingDetailsPtrOutput
}

type loggingDetailsPtr string

func LoggingDetailsPtr(v string) LoggingDetailsPtrInput {
	return (*loggingDetailsPtr)(&v)
}

func (*loggingDetailsPtr) ElementType() reflect.Type {
	return loggingDetailsPtrType
}

func (in *loggingDetailsPtr) ToLoggingDetailsPtrOutput() LoggingDetailsPtrOutput {
	return pulumi.ToOutput(in).(LoggingDetailsPtrOutput)
}

func (in *loggingDetailsPtr) ToLoggingDetailsPtrOutputWithContext(ctx context.Context) LoggingDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingDetailsPtrOutput)
}

type LoggingDirections string

const (
	LoggingDirectionsNone     = LoggingDirections("None")
	LoggingDirectionsRequest  = LoggingDirections("Request")
	LoggingDirectionsResponse = LoggingDirections("Response")
)

func (LoggingDirections) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingDirections)(nil)).Elem()
}

func (e LoggingDirections) ToLoggingDirectionsOutput() LoggingDirectionsOutput {
	return pulumi.ToOutput(e).(LoggingDirectionsOutput)
}

func (e LoggingDirections) ToLoggingDirectionsOutputWithContext(ctx context.Context) LoggingDirectionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingDirectionsOutput)
}

func (e LoggingDirections) ToLoggingDirectionsPtrOutput() LoggingDirectionsPtrOutput {
	return e.ToLoggingDirectionsPtrOutputWithContext(context.Background())
}

func (e LoggingDirections) ToLoggingDirectionsPtrOutputWithContext(ctx context.Context) LoggingDirectionsPtrOutput {
	return LoggingDirections(e).ToLoggingDirectionsOutputWithContext(ctx).ToLoggingDirectionsPtrOutputWithContext(ctx)
}

func (e LoggingDirections) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingDirections) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingDirections) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingDirections) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingDirectionsOutput struct{ *pulumi.OutputState }

func (LoggingDirectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingDirections)(nil)).Elem()
}

func (o LoggingDirectionsOutput) ToLoggingDirectionsOutput() LoggingDirectionsOutput {
	return o
}

func (o LoggingDirectionsOutput) ToLoggingDirectionsOutputWithContext(ctx context.Context) LoggingDirectionsOutput {
	return o
}

func (o LoggingDirectionsOutput) ToLoggingDirectionsPtrOutput() LoggingDirectionsPtrOutput {
	return o.ToLoggingDirectionsPtrOutputWithContext(context.Background())
}

func (o LoggingDirectionsOutput) ToLoggingDirectionsPtrOutputWithContext(ctx context.Context) LoggingDirectionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingDirections) *LoggingDirections {
		return &v
	}).(LoggingDirectionsPtrOutput)
}

func (o LoggingDirectionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingDirectionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingDirections) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingDirectionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingDirectionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingDirections) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingDirectionsPtrOutput struct{ *pulumi.OutputState }

func (LoggingDirectionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingDirections)(nil)).Elem()
}

func (o LoggingDirectionsPtrOutput) ToLoggingDirectionsPtrOutput() LoggingDirectionsPtrOutput {
	return o
}

func (o LoggingDirectionsPtrOutput) ToLoggingDirectionsPtrOutputWithContext(ctx context.Context) LoggingDirectionsPtrOutput {
	return o
}

func (o LoggingDirectionsPtrOutput) Elem() LoggingDirectionsOutput {
	return o.ApplyT(func(v *LoggingDirections) LoggingDirections {
		if v != nil {
			return *v
		}
		var ret LoggingDirections
		return ret
	}).(LoggingDirectionsOutput)
}

func (o LoggingDirectionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingDirectionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingDirections) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingDirectionsInput is an input type that accepts LoggingDirectionsArgs and LoggingDirectionsOutput values.
// You can construct a concrete instance of `LoggingDirectionsInput` via:
//
//          LoggingDirectionsArgs{...}
type LoggingDirectionsInput interface {
	pulumi.Input

	ToLoggingDirectionsOutput() LoggingDirectionsOutput
	ToLoggingDirectionsOutputWithContext(context.Context) LoggingDirectionsOutput
}

var loggingDirectionsPtrType = reflect.TypeOf((**LoggingDirections)(nil)).Elem()

type LoggingDirectionsPtrInput interface {
	pulumi.Input

	ToLoggingDirectionsPtrOutput() LoggingDirectionsPtrOutput
	ToLoggingDirectionsPtrOutputWithContext(context.Context) LoggingDirectionsPtrOutput
}

type loggingDirectionsPtr string

func LoggingDirectionsPtr(v string) LoggingDirectionsPtrInput {
	return (*loggingDirectionsPtr)(&v)
}

func (*loggingDirectionsPtr) ElementType() reflect.Type {
	return loggingDirectionsPtrType
}

func (in *loggingDirectionsPtr) ToLoggingDirectionsPtrOutput() LoggingDirectionsPtrOutput {
	return pulumi.ToOutput(in).(LoggingDirectionsPtrOutput)
}

func (in *loggingDirectionsPtr) ToLoggingDirectionsPtrOutputWithContext(ctx context.Context) LoggingDirectionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingDirectionsPtrOutput)
}

type MessageScope string

const (
	MessageScopeNotSpecified            = MessageScope("NotSpecified")
	MessageScopeRegisteredSubscriptions = MessageScope("RegisteredSubscriptions")
)

func (MessageScope) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageScope)(nil)).Elem()
}

func (e MessageScope) ToMessageScopeOutput() MessageScopeOutput {
	return pulumi.ToOutput(e).(MessageScopeOutput)
}

func (e MessageScope) ToMessageScopeOutputWithContext(ctx context.Context) MessageScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MessageScopeOutput)
}

func (e MessageScope) ToMessageScopePtrOutput() MessageScopePtrOutput {
	return e.ToMessageScopePtrOutputWithContext(context.Background())
}

func (e MessageScope) ToMessageScopePtrOutputWithContext(ctx context.Context) MessageScopePtrOutput {
	return MessageScope(e).ToMessageScopeOutputWithContext(ctx).ToMessageScopePtrOutputWithContext(ctx)
}

func (e MessageScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MessageScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MessageScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MessageScopeOutput struct{ *pulumi.OutputState }

func (MessageScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageScope)(nil)).Elem()
}

func (o MessageScopeOutput) ToMessageScopeOutput() MessageScopeOutput {
	return o
}

func (o MessageScopeOutput) ToMessageScopeOutputWithContext(ctx context.Context) MessageScopeOutput {
	return o
}

func (o MessageScopeOutput) ToMessageScopePtrOutput() MessageScopePtrOutput {
	return o.ToMessageScopePtrOutputWithContext(context.Background())
}

func (o MessageScopeOutput) ToMessageScopePtrOutputWithContext(ctx context.Context) MessageScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MessageScope) *MessageScope {
		return &v
	}).(MessageScopePtrOutput)
}

func (o MessageScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MessageScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MessageScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MessageScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MessageScopePtrOutput struct{ *pulumi.OutputState }

func (MessageScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MessageScope)(nil)).Elem()
}

func (o MessageScopePtrOutput) ToMessageScopePtrOutput() MessageScopePtrOutput {
	return o
}

func (o MessageScopePtrOutput) ToMessageScopePtrOutputWithContext(ctx context.Context) MessageScopePtrOutput {
	return o
}

func (o MessageScopePtrOutput) Elem() MessageScopeOutput {
	return o.ApplyT(func(v *MessageScope) MessageScope {
		if v != nil {
			return *v
		}
		var ret MessageScope
		return ret
	}).(MessageScopeOutput)
}

func (o MessageScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MessageScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MessageScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MessageScopeInput is an input type that accepts MessageScopeArgs and MessageScopeOutput values.
// You can construct a concrete instance of `MessageScopeInput` via:
//
//          MessageScopeArgs{...}
type MessageScopeInput interface {
	pulumi.Input

	ToMessageScopeOutput() MessageScopeOutput
	ToMessageScopeOutputWithContext(context.Context) MessageScopeOutput
}

var messageScopePtrType = reflect.TypeOf((**MessageScope)(nil)).Elem()

type MessageScopePtrInput interface {
	pulumi.Input

	ToMessageScopePtrOutput() MessageScopePtrOutput
	ToMessageScopePtrOutputWithContext(context.Context) MessageScopePtrOutput
}

type messageScopePtr string

func MessageScopePtr(v string) MessageScopePtrInput {
	return (*messageScopePtr)(&v)
}

func (*messageScopePtr) ElementType() reflect.Type {
	return messageScopePtrType
}

func (in *messageScopePtr) ToMessageScopePtrOutput() MessageScopePtrOutput {
	return pulumi.ToOutput(in).(MessageScopePtrOutput)
}

func (in *messageScopePtr) ToMessageScopePtrOutputWithContext(ctx context.Context) MessageScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MessageScopePtrOutput)
}

type NotificationMode string

const (
	NotificationModeNotSpecified = NotificationMode("NotSpecified")
	NotificationModeEventHub     = NotificationMode("EventHub")
	NotificationModeWebHook      = NotificationMode("WebHook")
)

func (NotificationMode) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationMode)(nil)).Elem()
}

func (e NotificationMode) ToNotificationModeOutput() NotificationModeOutput {
	return pulumi.ToOutput(e).(NotificationModeOutput)
}

func (e NotificationMode) ToNotificationModeOutputWithContext(ctx context.Context) NotificationModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NotificationModeOutput)
}

func (e NotificationMode) ToNotificationModePtrOutput() NotificationModePtrOutput {
	return e.ToNotificationModePtrOutputWithContext(context.Background())
}

func (e NotificationMode) ToNotificationModePtrOutputWithContext(ctx context.Context) NotificationModePtrOutput {
	return NotificationMode(e).ToNotificationModeOutputWithContext(ctx).ToNotificationModePtrOutputWithContext(ctx)
}

func (e NotificationMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NotificationMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NotificationMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NotificationModeOutput struct{ *pulumi.OutputState }

func (NotificationModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationMode)(nil)).Elem()
}

func (o NotificationModeOutput) ToNotificationModeOutput() NotificationModeOutput {
	return o
}

func (o NotificationModeOutput) ToNotificationModeOutputWithContext(ctx context.Context) NotificationModeOutput {
	return o
}

func (o NotificationModeOutput) ToNotificationModePtrOutput() NotificationModePtrOutput {
	return o.ToNotificationModePtrOutputWithContext(context.Background())
}

func (o NotificationModeOutput) ToNotificationModePtrOutputWithContext(ctx context.Context) NotificationModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationMode) *NotificationMode {
		return &v
	}).(NotificationModePtrOutput)
}

func (o NotificationModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NotificationModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NotificationModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NotificationMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NotificationModePtrOutput struct{ *pulumi.OutputState }

func (NotificationModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationMode)(nil)).Elem()
}

func (o NotificationModePtrOutput) ToNotificationModePtrOutput() NotificationModePtrOutput {
	return o
}

func (o NotificationModePtrOutput) ToNotificationModePtrOutputWithContext(ctx context.Context) NotificationModePtrOutput {
	return o
}

func (o NotificationModePtrOutput) Elem() NotificationModeOutput {
	return o.ApplyT(func(v *NotificationMode) NotificationMode {
		if v != nil {
			return *v
		}
		var ret NotificationMode
		return ret
	}).(NotificationModeOutput)
}

func (o NotificationModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NotificationModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NotificationMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// NotificationModeInput is an input type that accepts NotificationModeArgs and NotificationModeOutput values.
// You can construct a concrete instance of `NotificationModeInput` via:
//
//          NotificationModeArgs{...}
type NotificationModeInput interface {
	pulumi.Input

	ToNotificationModeOutput() NotificationModeOutput
	ToNotificationModeOutputWithContext(context.Context) NotificationModeOutput
}

var notificationModePtrType = reflect.TypeOf((**NotificationMode)(nil)).Elem()

type NotificationModePtrInput interface {
	pulumi.Input

	ToNotificationModePtrOutput() NotificationModePtrOutput
	ToNotificationModePtrOutputWithContext(context.Context) NotificationModePtrOutput
}

type notificationModePtr string

func NotificationModePtr(v string) NotificationModePtrInput {
	return (*notificationModePtr)(&v)
}

func (*notificationModePtr) ElementType() reflect.Type {
	return notificationModePtrType
}

func (in *notificationModePtr) ToNotificationModePtrOutput() NotificationModePtrOutput {
	return pulumi.ToOutput(in).(NotificationModePtrOutput)
}

func (in *notificationModePtr) ToNotificationModePtrOutputWithContext(ctx context.Context) NotificationModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NotificationModePtrOutput)
}

type OptInHeaderType string

const (
	OptInHeaderTypeNotSpecified                   = OptInHeaderType("NotSpecified")
	OptInHeaderTypeSignedUserToken                = OptInHeaderType("SignedUserToken")
	OptInHeaderTypeClientGroupMembership          = OptInHeaderType("ClientGroupMembership")
	OptInHeaderTypeSignedAuxiliaryTokens          = OptInHeaderType("SignedAuxiliaryTokens")
	OptInHeaderTypeUnboundedClientGroupMembership = OptInHeaderType("UnboundedClientGroupMembership")
)

func (OptInHeaderType) ElementType() reflect.Type {
	return reflect.TypeOf((*OptInHeaderType)(nil)).Elem()
}

func (e OptInHeaderType) ToOptInHeaderTypeOutput() OptInHeaderTypeOutput {
	return pulumi.ToOutput(e).(OptInHeaderTypeOutput)
}

func (e OptInHeaderType) ToOptInHeaderTypeOutputWithContext(ctx context.Context) OptInHeaderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(OptInHeaderTypeOutput)
}

func (e OptInHeaderType) ToOptInHeaderTypePtrOutput() OptInHeaderTypePtrOutput {
	return e.ToOptInHeaderTypePtrOutputWithContext(context.Background())
}

func (e OptInHeaderType) ToOptInHeaderTypePtrOutputWithContext(ctx context.Context) OptInHeaderTypePtrOutput {
	return OptInHeaderType(e).ToOptInHeaderTypeOutputWithContext(ctx).ToOptInHeaderTypePtrOutputWithContext(ctx)
}

func (e OptInHeaderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptInHeaderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e OptInHeaderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e OptInHeaderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type OptInHeaderTypeOutput struct{ *pulumi.OutputState }

func (OptInHeaderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptInHeaderType)(nil)).Elem()
}

func (o OptInHeaderTypeOutput) ToOptInHeaderTypeOutput() OptInHeaderTypeOutput {
	return o
}

func (o OptInHeaderTypeOutput) ToOptInHeaderTypeOutputWithContext(ctx context.Context) OptInHeaderTypeOutput {
	return o
}

func (o OptInHeaderTypeOutput) ToOptInHeaderTypePtrOutput() OptInHeaderTypePtrOutput {
	return o.ToOptInHeaderTypePtrOutputWithContext(context.Background())
}

func (o OptInHeaderTypeOutput) ToOptInHeaderTypePtrOutputWithContext(ctx context.Context) OptInHeaderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OptInHeaderType) *OptInHeaderType {
		return &v
	}).(OptInHeaderTypePtrOutput)
}

func (o OptInHeaderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o OptInHeaderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptInHeaderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o OptInHeaderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptInHeaderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e OptInHeaderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type OptInHeaderTypePtrOutput struct{ *pulumi.OutputState }

func (OptInHeaderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptInHeaderType)(nil)).Elem()
}

func (o OptInHeaderTypePtrOutput) ToOptInHeaderTypePtrOutput() OptInHeaderTypePtrOutput {
	return o
}

func (o OptInHeaderTypePtrOutput) ToOptInHeaderTypePtrOutputWithContext(ctx context.Context) OptInHeaderTypePtrOutput {
	return o
}

func (o OptInHeaderTypePtrOutput) Elem() OptInHeaderTypeOutput {
	return o.ApplyT(func(v *OptInHeaderType) OptInHeaderType {
		if v != nil {
			return *v
		}
		var ret OptInHeaderType
		return ret
	}).(OptInHeaderTypeOutput)
}

func (o OptInHeaderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o OptInHeaderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *OptInHeaderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// OptInHeaderTypeInput is an input type that accepts OptInHeaderTypeArgs and OptInHeaderTypeOutput values.
// You can construct a concrete instance of `OptInHeaderTypeInput` via:
//
//          OptInHeaderTypeArgs{...}
type OptInHeaderTypeInput interface {
	pulumi.Input

	ToOptInHeaderTypeOutput() OptInHeaderTypeOutput
	ToOptInHeaderTypeOutputWithContext(context.Context) OptInHeaderTypeOutput
}

var optInHeaderTypePtrType = reflect.TypeOf((**OptInHeaderType)(nil)).Elem()

type OptInHeaderTypePtrInput interface {
	pulumi.Input

	ToOptInHeaderTypePtrOutput() OptInHeaderTypePtrOutput
	ToOptInHeaderTypePtrOutputWithContext(context.Context) OptInHeaderTypePtrOutput
}

type optInHeaderTypePtr string

func OptInHeaderTypePtr(v string) OptInHeaderTypePtrInput {
	return (*optInHeaderTypePtr)(&v)
}

func (*optInHeaderTypePtr) ElementType() reflect.Type {
	return optInHeaderTypePtrType
}

func (in *optInHeaderTypePtr) ToOptInHeaderTypePtrOutput() OptInHeaderTypePtrOutput {
	return pulumi.ToOutput(in).(OptInHeaderTypePtrOutput)
}

func (in *optInHeaderTypePtr) ToOptInHeaderTypePtrOutputWithContext(ctx context.Context) OptInHeaderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(OptInHeaderTypePtrOutput)
}

type Policy string

const (
	PolicyNotSpecified              = Policy("NotSpecified")
	PolicySynchronizeBeginExtension = Policy("SynchronizeBeginExtension")
)

func (Policy) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil)).Elem()
}

func (e Policy) ToPolicyOutput() PolicyOutput {
	return pulumi.ToOutput(e).(PolicyOutput)
}

func (e Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PolicyOutput)
}

func (e Policy) ToPolicyPtrOutput() PolicyPtrOutput {
	return e.ToPolicyPtrOutputWithContext(context.Background())
}

func (e Policy) ToPolicyPtrOutputWithContext(ctx context.Context) PolicyPtrOutput {
	return Policy(e).ToPolicyOutputWithContext(ctx).ToPolicyPtrOutputWithContext(ctx)
}

func (e Policy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Policy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Policy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Policy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyPtrOutput() PolicyPtrOutput {
	return o.ToPolicyPtrOutputWithContext(context.Background())
}

func (o PolicyOutput) ToPolicyPtrOutputWithContext(ctx context.Context) PolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Policy) *Policy {
		return &v
	}).(PolicyPtrOutput)
}

func (o PolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Policy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Policy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PolicyPtrOutput struct{ *pulumi.OutputState }

func (PolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (o PolicyPtrOutput) ToPolicyPtrOutput() PolicyPtrOutput {
	return o
}

func (o PolicyPtrOutput) ToPolicyPtrOutputWithContext(ctx context.Context) PolicyPtrOutput {
	return o
}

func (o PolicyPtrOutput) Elem() PolicyOutput {
	return o.ApplyT(func(v *Policy) Policy {
		if v != nil {
			return *v
		}
		var ret Policy
		return ret
	}).(PolicyOutput)
}

func (o PolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Policy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PolicyInput is an input type that accepts PolicyArgs and PolicyOutput values.
// You can construct a concrete instance of `PolicyInput` via:
//
//          PolicyArgs{...}
type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(context.Context) PolicyOutput
}

var policyPtrType = reflect.TypeOf((**Policy)(nil)).Elem()

type PolicyPtrInput interface {
	pulumi.Input

	ToPolicyPtrOutput() PolicyPtrOutput
	ToPolicyPtrOutputWithContext(context.Context) PolicyPtrOutput
}

type policyPtr string

func PolicyPtr(v string) PolicyPtrInput {
	return (*policyPtr)(&v)
}

func (*policyPtr) ElementType() reflect.Type {
	return policyPtrType
}

func (in *policyPtr) ToPolicyPtrOutput() PolicyPtrOutput {
	return pulumi.ToOutput(in).(PolicyPtrOutput)
}

func (in *policyPtr) ToPolicyPtrOutputWithContext(ctx context.Context) PolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PolicyPtrOutput)
}

type PreflightOption string

const (
	PreflightOptionNone                        = PreflightOption("None")
	PreflightOptionContinueDeploymentOnFailure = PreflightOption("ContinueDeploymentOnFailure")
	PreflightOptionDefaultValidationOnly       = PreflightOption("DefaultValidationOnly")
)

func (PreflightOption) ElementType() reflect.Type {
	return reflect.TypeOf((*PreflightOption)(nil)).Elem()
}

func (e PreflightOption) ToPreflightOptionOutput() PreflightOptionOutput {
	return pulumi.ToOutput(e).(PreflightOptionOutput)
}

func (e PreflightOption) ToPreflightOptionOutputWithContext(ctx context.Context) PreflightOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PreflightOptionOutput)
}

func (e PreflightOption) ToPreflightOptionPtrOutput() PreflightOptionPtrOutput {
	return e.ToPreflightOptionPtrOutputWithContext(context.Background())
}

func (e PreflightOption) ToPreflightOptionPtrOutputWithContext(ctx context.Context) PreflightOptionPtrOutput {
	return PreflightOption(e).ToPreflightOptionOutputWithContext(ctx).ToPreflightOptionPtrOutputWithContext(ctx)
}

func (e PreflightOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreflightOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PreflightOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PreflightOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PreflightOptionOutput struct{ *pulumi.OutputState }

func (PreflightOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreflightOption)(nil)).Elem()
}

func (o PreflightOptionOutput) ToPreflightOptionOutput() PreflightOptionOutput {
	return o
}

func (o PreflightOptionOutput) ToPreflightOptionOutputWithContext(ctx context.Context) PreflightOptionOutput {
	return o
}

func (o PreflightOptionOutput) ToPreflightOptionPtrOutput() PreflightOptionPtrOutput {
	return o.ToPreflightOptionPtrOutputWithContext(context.Background())
}

func (o PreflightOptionOutput) ToPreflightOptionPtrOutputWithContext(ctx context.Context) PreflightOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PreflightOption) *PreflightOption {
		return &v
	}).(PreflightOptionPtrOutput)
}

func (o PreflightOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PreflightOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreflightOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PreflightOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreflightOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PreflightOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PreflightOptionPtrOutput struct{ *pulumi.OutputState }

func (PreflightOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreflightOption)(nil)).Elem()
}

func (o PreflightOptionPtrOutput) ToPreflightOptionPtrOutput() PreflightOptionPtrOutput {
	return o
}

func (o PreflightOptionPtrOutput) ToPreflightOptionPtrOutputWithContext(ctx context.Context) PreflightOptionPtrOutput {
	return o
}

func (o PreflightOptionPtrOutput) Elem() PreflightOptionOutput {
	return o.ApplyT(func(v *PreflightOption) PreflightOption {
		if v != nil {
			return *v
		}
		var ret PreflightOption
		return ret
	}).(PreflightOptionOutput)
}

func (o PreflightOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PreflightOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PreflightOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PreflightOptionInput is an input type that accepts PreflightOptionArgs and PreflightOptionOutput values.
// You can construct a concrete instance of `PreflightOptionInput` via:
//
//          PreflightOptionArgs{...}
type PreflightOptionInput interface {
	pulumi.Input

	ToPreflightOptionOutput() PreflightOptionOutput
	ToPreflightOptionOutputWithContext(context.Context) PreflightOptionOutput
}

var preflightOptionPtrType = reflect.TypeOf((**PreflightOption)(nil)).Elem()

type PreflightOptionPtrInput interface {
	pulumi.Input

	ToPreflightOptionPtrOutput() PreflightOptionPtrOutput
	ToPreflightOptionPtrOutputWithContext(context.Context) PreflightOptionPtrOutput
}

type preflightOptionPtr string

func PreflightOptionPtr(v string) PreflightOptionPtrInput {
	return (*preflightOptionPtr)(&v)
}

func (*preflightOptionPtr) ElementType() reflect.Type {
	return preflightOptionPtrType
}

func (in *preflightOptionPtr) ToPreflightOptionPtrOutput() PreflightOptionPtrOutput {
	return pulumi.ToOutput(in).(PreflightOptionPtrOutput)
}

func (in *preflightOptionPtr) ToPreflightOptionPtrOutputWithContext(ctx context.Context) PreflightOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PreflightOptionPtrOutput)
}

// The provisioned state of the resource.
type ProvisioningState string

const (
	ProvisioningStateNotSpecified      = ProvisioningState("NotSpecified")
	ProvisioningStateAccepted          = ProvisioningState("Accepted")
	ProvisioningStateRunning           = ProvisioningState("Running")
	ProvisioningStateCreating          = ProvisioningState("Creating")
	ProvisioningStateCreated           = ProvisioningState("Created")
	ProvisioningStateDeleting          = ProvisioningState("Deleting")
	ProvisioningStateDeleted           = ProvisioningState("Deleted")
	ProvisioningStateCanceled          = ProvisioningState("Canceled")
	ProvisioningStateFailed            = ProvisioningState("Failed")
	ProvisioningStateSucceeded         = ProvisioningState("Succeeded")
	ProvisioningStateMovingResources   = ProvisioningState("MovingResources")
	ProvisioningStateTransientFailure  = ProvisioningState("TransientFailure")
	ProvisioningStateRolloutInProgress = ProvisioningState("RolloutInProgress")
)

func (ProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (e ProvisioningState) ToProvisioningStateOutput() ProvisioningStateOutput {
	return pulumi.ToOutput(e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProvisioningStateOutput)
}

func (e ProvisioningState) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return e.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return ProvisioningState(e).ToProvisioningStateOutputWithContext(ctx).ToProvisioningStatePtrOutputWithContext(ctx)
}

func (e ProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProvisioningStateOutput struct{ *pulumi.OutputState }

func (ProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStateOutput) ToProvisioningStateOutput() ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStateOutputWithContext(ctx context.Context) ProvisioningStateOutput {
	return o
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o.ToProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProvisioningState) *ProvisioningState {
		return &v
	}).(ProvisioningStatePtrOutput)
}

func (o ProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ProvisioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningState)(nil)).Elem()
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return o
}

func (o ProvisioningStatePtrOutput) Elem() ProvisioningStateOutput {
	return o.ApplyT(func(v *ProvisioningState) ProvisioningState {
		if v != nil {
			return *v
		}
		var ret ProvisioningState
		return ret
	}).(ProvisioningStateOutput)
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProvisioningStateInput is an input type that accepts ProvisioningStateArgs and ProvisioningStateOutput values.
// You can construct a concrete instance of `ProvisioningStateInput` via:
//
//          ProvisioningStateArgs{...}
type ProvisioningStateInput interface {
	pulumi.Input

	ToProvisioningStateOutput() ProvisioningStateOutput
	ToProvisioningStateOutputWithContext(context.Context) ProvisioningStateOutput
}

var provisioningStatePtrType = reflect.TypeOf((**ProvisioningState)(nil)).Elem()

type ProvisioningStatePtrInput interface {
	pulumi.Input

	ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput
	ToProvisioningStatePtrOutputWithContext(context.Context) ProvisioningStatePtrOutput
}

type provisioningStatePtr string

func ProvisioningStatePtr(v string) ProvisioningStatePtrInput {
	return (*provisioningStatePtr)(&v)
}

func (*provisioningStatePtr) ElementType() reflect.Type {
	return provisioningStatePtrType
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutput() ProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ProvisioningStatePtrOutput)
}

func (in *provisioningStatePtr) ToProvisioningStatePtrOutputWithContext(ctx context.Context) ProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProvisioningStatePtrOutput)
}

type Regionality string

const (
	RegionalityNotSpecified = Regionality("NotSpecified")
	RegionalityGlobal       = Regionality("Global")
	RegionalityRegional     = Regionality("Regional")
)

func (Regionality) ElementType() reflect.Type {
	return reflect.TypeOf((*Regionality)(nil)).Elem()
}

func (e Regionality) ToRegionalityOutput() RegionalityOutput {
	return pulumi.ToOutput(e).(RegionalityOutput)
}

func (e Regionality) ToRegionalityOutputWithContext(ctx context.Context) RegionalityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegionalityOutput)
}

func (e Regionality) ToRegionalityPtrOutput() RegionalityPtrOutput {
	return e.ToRegionalityPtrOutputWithContext(context.Background())
}

func (e Regionality) ToRegionalityPtrOutputWithContext(ctx context.Context) RegionalityPtrOutput {
	return Regionality(e).ToRegionalityOutputWithContext(ctx).ToRegionalityPtrOutputWithContext(ctx)
}

func (e Regionality) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Regionality) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Regionality) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Regionality) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegionalityOutput struct{ *pulumi.OutputState }

func (RegionalityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Regionality)(nil)).Elem()
}

func (o RegionalityOutput) ToRegionalityOutput() RegionalityOutput {
	return o
}

func (o RegionalityOutput) ToRegionalityOutputWithContext(ctx context.Context) RegionalityOutput {
	return o
}

func (o RegionalityOutput) ToRegionalityPtrOutput() RegionalityPtrOutput {
	return o.ToRegionalityPtrOutputWithContext(context.Background())
}

func (o RegionalityOutput) ToRegionalityPtrOutputWithContext(ctx context.Context) RegionalityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Regionality) *Regionality {
		return &v
	}).(RegionalityPtrOutput)
}

func (o RegionalityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegionalityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Regionality) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegionalityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionalityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Regionality) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegionalityPtrOutput struct{ *pulumi.OutputState }

func (RegionalityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Regionality)(nil)).Elem()
}

func (o RegionalityPtrOutput) ToRegionalityPtrOutput() RegionalityPtrOutput {
	return o
}

func (o RegionalityPtrOutput) ToRegionalityPtrOutputWithContext(ctx context.Context) RegionalityPtrOutput {
	return o
}

func (o RegionalityPtrOutput) Elem() RegionalityOutput {
	return o.ApplyT(func(v *Regionality) Regionality {
		if v != nil {
			return *v
		}
		var ret Regionality
		return ret
	}).(RegionalityOutput)
}

func (o RegionalityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegionalityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Regionality) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegionalityInput is an input type that accepts RegionalityArgs and RegionalityOutput values.
// You can construct a concrete instance of `RegionalityInput` via:
//
//          RegionalityArgs{...}
type RegionalityInput interface {
	pulumi.Input

	ToRegionalityOutput() RegionalityOutput
	ToRegionalityOutputWithContext(context.Context) RegionalityOutput
}

var regionalityPtrType = reflect.TypeOf((**Regionality)(nil)).Elem()

type RegionalityPtrInput interface {
	pulumi.Input

	ToRegionalityPtrOutput() RegionalityPtrOutput
	ToRegionalityPtrOutputWithContext(context.Context) RegionalityPtrOutput
}

type regionalityPtr string

func RegionalityPtr(v string) RegionalityPtrInput {
	return (*regionalityPtr)(&v)
}

func (*regionalityPtr) ElementType() reflect.Type {
	return regionalityPtrType
}

func (in *regionalityPtr) ToRegionalityPtrOutput() RegionalityPtrOutput {
	return pulumi.ToOutput(in).(RegionalityPtrOutput)
}

func (in *regionalityPtr) ToRegionalityPtrOutputWithContext(ctx context.Context) RegionalityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegionalityPtrOutput)
}

type ResourceDeletionPolicy string

const (
	ResourceDeletionPolicyNotSpecified                   = ResourceDeletionPolicy("NotSpecified")
	ResourceDeletionPolicyCascadeDeleteAll               = ResourceDeletionPolicy("CascadeDeleteAll")
	ResourceDeletionPolicyCascadeDeleteProxyOnlyChildren = ResourceDeletionPolicy("CascadeDeleteProxyOnlyChildren")
)

func (ResourceDeletionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeletionPolicy)(nil)).Elem()
}

func (e ResourceDeletionPolicy) ToResourceDeletionPolicyOutput() ResourceDeletionPolicyOutput {
	return pulumi.ToOutput(e).(ResourceDeletionPolicyOutput)
}

func (e ResourceDeletionPolicy) ToResourceDeletionPolicyOutputWithContext(ctx context.Context) ResourceDeletionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceDeletionPolicyOutput)
}

func (e ResourceDeletionPolicy) ToResourceDeletionPolicyPtrOutput() ResourceDeletionPolicyPtrOutput {
	return e.ToResourceDeletionPolicyPtrOutputWithContext(context.Background())
}

func (e ResourceDeletionPolicy) ToResourceDeletionPolicyPtrOutputWithContext(ctx context.Context) ResourceDeletionPolicyPtrOutput {
	return ResourceDeletionPolicy(e).ToResourceDeletionPolicyOutputWithContext(ctx).ToResourceDeletionPolicyPtrOutputWithContext(ctx)
}

func (e ResourceDeletionPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceDeletionPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceDeletionPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceDeletionPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceDeletionPolicyOutput struct{ *pulumi.OutputState }

func (ResourceDeletionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceDeletionPolicy)(nil)).Elem()
}

func (o ResourceDeletionPolicyOutput) ToResourceDeletionPolicyOutput() ResourceDeletionPolicyOutput {
	return o
}

func (o ResourceDeletionPolicyOutput) ToResourceDeletionPolicyOutputWithContext(ctx context.Context) ResourceDeletionPolicyOutput {
	return o
}

func (o ResourceDeletionPolicyOutput) ToResourceDeletionPolicyPtrOutput() ResourceDeletionPolicyPtrOutput {
	return o.ToResourceDeletionPolicyPtrOutputWithContext(context.Background())
}

func (o ResourceDeletionPolicyOutput) ToResourceDeletionPolicyPtrOutputWithContext(ctx context.Context) ResourceDeletionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceDeletionPolicy) *ResourceDeletionPolicy {
		return &v
	}).(ResourceDeletionPolicyPtrOutput)
}

func (o ResourceDeletionPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceDeletionPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceDeletionPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceDeletionPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceDeletionPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceDeletionPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceDeletionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ResourceDeletionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceDeletionPolicy)(nil)).Elem()
}

func (o ResourceDeletionPolicyPtrOutput) ToResourceDeletionPolicyPtrOutput() ResourceDeletionPolicyPtrOutput {
	return o
}

func (o ResourceDeletionPolicyPtrOutput) ToResourceDeletionPolicyPtrOutputWithContext(ctx context.Context) ResourceDeletionPolicyPtrOutput {
	return o
}

func (o ResourceDeletionPolicyPtrOutput) Elem() ResourceDeletionPolicyOutput {
	return o.ApplyT(func(v *ResourceDeletionPolicy) ResourceDeletionPolicy {
		if v != nil {
			return *v
		}
		var ret ResourceDeletionPolicy
		return ret
	}).(ResourceDeletionPolicyOutput)
}

func (o ResourceDeletionPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceDeletionPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceDeletionPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceDeletionPolicyInput is an input type that accepts ResourceDeletionPolicyArgs and ResourceDeletionPolicyOutput values.
// You can construct a concrete instance of `ResourceDeletionPolicyInput` via:
//
//          ResourceDeletionPolicyArgs{...}
type ResourceDeletionPolicyInput interface {
	pulumi.Input

	ToResourceDeletionPolicyOutput() ResourceDeletionPolicyOutput
	ToResourceDeletionPolicyOutputWithContext(context.Context) ResourceDeletionPolicyOutput
}

var resourceDeletionPolicyPtrType = reflect.TypeOf((**ResourceDeletionPolicy)(nil)).Elem()

type ResourceDeletionPolicyPtrInput interface {
	pulumi.Input

	ToResourceDeletionPolicyPtrOutput() ResourceDeletionPolicyPtrOutput
	ToResourceDeletionPolicyPtrOutputWithContext(context.Context) ResourceDeletionPolicyPtrOutput
}

type resourceDeletionPolicyPtr string

func ResourceDeletionPolicyPtr(v string) ResourceDeletionPolicyPtrInput {
	return (*resourceDeletionPolicyPtr)(&v)
}

func (*resourceDeletionPolicyPtr) ElementType() reflect.Type {
	return resourceDeletionPolicyPtrType
}

func (in *resourceDeletionPolicyPtr) ToResourceDeletionPolicyPtrOutput() ResourceDeletionPolicyPtrOutput {
	return pulumi.ToOutput(in).(ResourceDeletionPolicyPtrOutput)
}

func (in *resourceDeletionPolicyPtr) ToResourceDeletionPolicyPtrOutputWithContext(ctx context.Context) ResourceDeletionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceDeletionPolicyPtrOutput)
}

type ResourceProviderCapabilitiesEffect string

const (
	ResourceProviderCapabilitiesEffectNotSpecified = ResourceProviderCapabilitiesEffect("NotSpecified")
	ResourceProviderCapabilitiesEffectAllow        = ResourceProviderCapabilitiesEffect("Allow")
	ResourceProviderCapabilitiesEffectDisallow     = ResourceProviderCapabilitiesEffect("Disallow")
)

func (ResourceProviderCapabilitiesEffect) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderCapabilitiesEffect)(nil)).Elem()
}

func (e ResourceProviderCapabilitiesEffect) ToResourceProviderCapabilitiesEffectOutput() ResourceProviderCapabilitiesEffectOutput {
	return pulumi.ToOutput(e).(ResourceProviderCapabilitiesEffectOutput)
}

func (e ResourceProviderCapabilitiesEffect) ToResourceProviderCapabilitiesEffectOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceProviderCapabilitiesEffectOutput)
}

func (e ResourceProviderCapabilitiesEffect) ToResourceProviderCapabilitiesEffectPtrOutput() ResourceProviderCapabilitiesEffectPtrOutput {
	return e.ToResourceProviderCapabilitiesEffectPtrOutputWithContext(context.Background())
}

func (e ResourceProviderCapabilitiesEffect) ToResourceProviderCapabilitiesEffectPtrOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectPtrOutput {
	return ResourceProviderCapabilitiesEffect(e).ToResourceProviderCapabilitiesEffectOutputWithContext(ctx).ToResourceProviderCapabilitiesEffectPtrOutputWithContext(ctx)
}

func (e ResourceProviderCapabilitiesEffect) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderCapabilitiesEffect) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderCapabilitiesEffect) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceProviderCapabilitiesEffect) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceProviderCapabilitiesEffectOutput struct{ *pulumi.OutputState }

func (ResourceProviderCapabilitiesEffectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderCapabilitiesEffect)(nil)).Elem()
}

func (o ResourceProviderCapabilitiesEffectOutput) ToResourceProviderCapabilitiesEffectOutput() ResourceProviderCapabilitiesEffectOutput {
	return o
}

func (o ResourceProviderCapabilitiesEffectOutput) ToResourceProviderCapabilitiesEffectOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectOutput {
	return o
}

func (o ResourceProviderCapabilitiesEffectOutput) ToResourceProviderCapabilitiesEffectPtrOutput() ResourceProviderCapabilitiesEffectPtrOutput {
	return o.ToResourceProviderCapabilitiesEffectPtrOutputWithContext(context.Background())
}

func (o ResourceProviderCapabilitiesEffectOutput) ToResourceProviderCapabilitiesEffectPtrOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceProviderCapabilitiesEffect) *ResourceProviderCapabilitiesEffect {
		return &v
	}).(ResourceProviderCapabilitiesEffectPtrOutput)
}

func (o ResourceProviderCapabilitiesEffectOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceProviderCapabilitiesEffectOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderCapabilitiesEffect) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceProviderCapabilitiesEffectOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderCapabilitiesEffectOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderCapabilitiesEffect) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceProviderCapabilitiesEffectPtrOutput struct{ *pulumi.OutputState }

func (ResourceProviderCapabilitiesEffectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceProviderCapabilitiesEffect)(nil)).Elem()
}

func (o ResourceProviderCapabilitiesEffectPtrOutput) ToResourceProviderCapabilitiesEffectPtrOutput() ResourceProviderCapabilitiesEffectPtrOutput {
	return o
}

func (o ResourceProviderCapabilitiesEffectPtrOutput) ToResourceProviderCapabilitiesEffectPtrOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectPtrOutput {
	return o
}

func (o ResourceProviderCapabilitiesEffectPtrOutput) Elem() ResourceProviderCapabilitiesEffectOutput {
	return o.ApplyT(func(v *ResourceProviderCapabilitiesEffect) ResourceProviderCapabilitiesEffect {
		if v != nil {
			return *v
		}
		var ret ResourceProviderCapabilitiesEffect
		return ret
	}).(ResourceProviderCapabilitiesEffectOutput)
}

func (o ResourceProviderCapabilitiesEffectPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderCapabilitiesEffectPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceProviderCapabilitiesEffect) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceProviderCapabilitiesEffectInput is an input type that accepts ResourceProviderCapabilitiesEffectArgs and ResourceProviderCapabilitiesEffectOutput values.
// You can construct a concrete instance of `ResourceProviderCapabilitiesEffectInput` via:
//
//          ResourceProviderCapabilitiesEffectArgs{...}
type ResourceProviderCapabilitiesEffectInput interface {
	pulumi.Input

	ToResourceProviderCapabilitiesEffectOutput() ResourceProviderCapabilitiesEffectOutput
	ToResourceProviderCapabilitiesEffectOutputWithContext(context.Context) ResourceProviderCapabilitiesEffectOutput
}

var resourceProviderCapabilitiesEffectPtrType = reflect.TypeOf((**ResourceProviderCapabilitiesEffect)(nil)).Elem()

type ResourceProviderCapabilitiesEffectPtrInput interface {
	pulumi.Input

	ToResourceProviderCapabilitiesEffectPtrOutput() ResourceProviderCapabilitiesEffectPtrOutput
	ToResourceProviderCapabilitiesEffectPtrOutputWithContext(context.Context) ResourceProviderCapabilitiesEffectPtrOutput
}

type resourceProviderCapabilitiesEffectPtr string

func ResourceProviderCapabilitiesEffectPtr(v string) ResourceProviderCapabilitiesEffectPtrInput {
	return (*resourceProviderCapabilitiesEffectPtr)(&v)
}

func (*resourceProviderCapabilitiesEffectPtr) ElementType() reflect.Type {
	return resourceProviderCapabilitiesEffectPtrType
}

func (in *resourceProviderCapabilitiesEffectPtr) ToResourceProviderCapabilitiesEffectPtrOutput() ResourceProviderCapabilitiesEffectPtrOutput {
	return pulumi.ToOutput(in).(ResourceProviderCapabilitiesEffectPtrOutput)
}

func (in *resourceProviderCapabilitiesEffectPtr) ToResourceProviderCapabilitiesEffectPtrOutputWithContext(ctx context.Context) ResourceProviderCapabilitiesEffectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceProviderCapabilitiesEffectPtrOutput)
}

type ResourceProviderType string

const (
	ResourceProviderTypeNotSpecified               = ResourceProviderType("NotSpecified")
	ResourceProviderTypeInternal                   = ResourceProviderType("Internal")
	ResourceProviderTypeExternal                   = ResourceProviderType("External")
	ResourceProviderTypeHidden                     = ResourceProviderType("Hidden")
	ResourceProviderTypeRegistrationFree           = ResourceProviderType("RegistrationFree")
	ResourceProviderTypeLegacyRegistrationRequired = ResourceProviderType("LegacyRegistrationRequired")
	ResourceProviderTypeTenantOnly                 = ResourceProviderType("TenantOnly")
	ResourceProviderTypeAuthorizationFree          = ResourceProviderType("AuthorizationFree")
)

func (ResourceProviderType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderType)(nil)).Elem()
}

func (e ResourceProviderType) ToResourceProviderTypeOutput() ResourceProviderTypeOutput {
	return pulumi.ToOutput(e).(ResourceProviderTypeOutput)
}

func (e ResourceProviderType) ToResourceProviderTypeOutputWithContext(ctx context.Context) ResourceProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceProviderTypeOutput)
}

func (e ResourceProviderType) ToResourceProviderTypePtrOutput() ResourceProviderTypePtrOutput {
	return e.ToResourceProviderTypePtrOutputWithContext(context.Background())
}

func (e ResourceProviderType) ToResourceProviderTypePtrOutputWithContext(ctx context.Context) ResourceProviderTypePtrOutput {
	return ResourceProviderType(e).ToResourceProviderTypeOutputWithContext(ctx).ToResourceProviderTypePtrOutputWithContext(ctx)
}

func (e ResourceProviderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceProviderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceProviderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceProviderTypeOutput struct{ *pulumi.OutputState }

func (ResourceProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceProviderType)(nil)).Elem()
}

func (o ResourceProviderTypeOutput) ToResourceProviderTypeOutput() ResourceProviderTypeOutput {
	return o
}

func (o ResourceProviderTypeOutput) ToResourceProviderTypeOutputWithContext(ctx context.Context) ResourceProviderTypeOutput {
	return o
}

func (o ResourceProviderTypeOutput) ToResourceProviderTypePtrOutput() ResourceProviderTypePtrOutput {
	return o.ToResourceProviderTypePtrOutputWithContext(context.Background())
}

func (o ResourceProviderTypeOutput) ToResourceProviderTypePtrOutputWithContext(ctx context.Context) ResourceProviderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceProviderType) *ResourceProviderType {
		return &v
	}).(ResourceProviderTypePtrOutput)
}

func (o ResourceProviderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceProviderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceProviderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceProviderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceProviderTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceProviderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceProviderType)(nil)).Elem()
}

func (o ResourceProviderTypePtrOutput) ToResourceProviderTypePtrOutput() ResourceProviderTypePtrOutput {
	return o
}

func (o ResourceProviderTypePtrOutput) ToResourceProviderTypePtrOutputWithContext(ctx context.Context) ResourceProviderTypePtrOutput {
	return o
}

func (o ResourceProviderTypePtrOutput) Elem() ResourceProviderTypeOutput {
	return o.ApplyT(func(v *ResourceProviderType) ResourceProviderType {
		if v != nil {
			return *v
		}
		var ret ResourceProviderType
		return ret
	}).(ResourceProviderTypeOutput)
}

func (o ResourceProviderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceProviderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceProviderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ResourceProviderTypeInput is an input type that accepts ResourceProviderTypeArgs and ResourceProviderTypeOutput values.
// You can construct a concrete instance of `ResourceProviderTypeInput` via:
//
//          ResourceProviderTypeArgs{...}
type ResourceProviderTypeInput interface {
	pulumi.Input

	ToResourceProviderTypeOutput() ResourceProviderTypeOutput
	ToResourceProviderTypeOutputWithContext(context.Context) ResourceProviderTypeOutput
}

var resourceProviderTypePtrType = reflect.TypeOf((**ResourceProviderType)(nil)).Elem()

type ResourceProviderTypePtrInput interface {
	pulumi.Input

	ToResourceProviderTypePtrOutput() ResourceProviderTypePtrOutput
	ToResourceProviderTypePtrOutputWithContext(context.Context) ResourceProviderTypePtrOutput
}

type resourceProviderTypePtr string

func ResourceProviderTypePtr(v string) ResourceProviderTypePtrInput {
	return (*resourceProviderTypePtr)(&v)
}

func (*resourceProviderTypePtr) ElementType() reflect.Type {
	return resourceProviderTypePtrType
}

func (in *resourceProviderTypePtr) ToResourceProviderTypePtrOutput() ResourceProviderTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceProviderTypePtrOutput)
}

func (in *resourceProviderTypePtr) ToResourceProviderTypePtrOutputWithContext(ctx context.Context) ResourceProviderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceProviderTypePtrOutput)
}

type RoutingType string

const (
	RoutingTypeDefault          = RoutingType("Default")
	RoutingTypeProxyOnly        = RoutingType("ProxyOnly")
	RoutingTypeHostBased        = RoutingType("HostBased")
	RoutingTypeExtension        = RoutingType("Extension")
	RoutingTypeTenant           = RoutingType("Tenant")
	RoutingTypeFanout           = RoutingType("Fanout")
	RoutingTypeLocationBased    = RoutingType("LocationBased")
	RoutingTypeFailover         = RoutingType("Failover")
	RoutingTypeCascadeExtension = RoutingType("CascadeExtension")
)

func (RoutingType) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingType)(nil)).Elem()
}

func (e RoutingType) ToRoutingTypeOutput() RoutingTypeOutput {
	return pulumi.ToOutput(e).(RoutingTypeOutput)
}

func (e RoutingType) ToRoutingTypeOutputWithContext(ctx context.Context) RoutingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoutingTypeOutput)
}

func (e RoutingType) ToRoutingTypePtrOutput() RoutingTypePtrOutput {
	return e.ToRoutingTypePtrOutputWithContext(context.Background())
}

func (e RoutingType) ToRoutingTypePtrOutputWithContext(ctx context.Context) RoutingTypePtrOutput {
	return RoutingType(e).ToRoutingTypeOutputWithContext(ctx).ToRoutingTypePtrOutputWithContext(ctx)
}

func (e RoutingType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoutingType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoutingType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoutingTypeOutput struct{ *pulumi.OutputState }

func (RoutingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingType)(nil)).Elem()
}

func (o RoutingTypeOutput) ToRoutingTypeOutput() RoutingTypeOutput {
	return o
}

func (o RoutingTypeOutput) ToRoutingTypeOutputWithContext(ctx context.Context) RoutingTypeOutput {
	return o
}

func (o RoutingTypeOutput) ToRoutingTypePtrOutput() RoutingTypePtrOutput {
	return o.ToRoutingTypePtrOutputWithContext(context.Background())
}

func (o RoutingTypeOutput) ToRoutingTypePtrOutputWithContext(ctx context.Context) RoutingTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoutingType) *RoutingType {
		return &v
	}).(RoutingTypePtrOutput)
}

func (o RoutingTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoutingTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoutingTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoutingType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoutingTypePtrOutput struct{ *pulumi.OutputState }

func (RoutingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingType)(nil)).Elem()
}

func (o RoutingTypePtrOutput) ToRoutingTypePtrOutput() RoutingTypePtrOutput {
	return o
}

func (o RoutingTypePtrOutput) ToRoutingTypePtrOutputWithContext(ctx context.Context) RoutingTypePtrOutput {
	return o
}

func (o RoutingTypePtrOutput) Elem() RoutingTypeOutput {
	return o.ApplyT(func(v *RoutingType) RoutingType {
		if v != nil {
			return *v
		}
		var ret RoutingType
		return ret
	}).(RoutingTypeOutput)
}

func (o RoutingTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoutingTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoutingType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RoutingTypeInput is an input type that accepts RoutingTypeArgs and RoutingTypeOutput values.
// You can construct a concrete instance of `RoutingTypeInput` via:
//
//          RoutingTypeArgs{...}
type RoutingTypeInput interface {
	pulumi.Input

	ToRoutingTypeOutput() RoutingTypeOutput
	ToRoutingTypeOutputWithContext(context.Context) RoutingTypeOutput
}

var routingTypePtrType = reflect.TypeOf((**RoutingType)(nil)).Elem()

type RoutingTypePtrInput interface {
	pulumi.Input

	ToRoutingTypePtrOutput() RoutingTypePtrOutput
	ToRoutingTypePtrOutputWithContext(context.Context) RoutingTypePtrOutput
}

type routingTypePtr string

func RoutingTypePtr(v string) RoutingTypePtrInput {
	return (*routingTypePtr)(&v)
}

func (*routingTypePtr) ElementType() reflect.Type {
	return routingTypePtrType
}

func (in *routingTypePtr) ToRoutingTypePtrOutput() RoutingTypePtrOutput {
	return pulumi.ToOutput(in).(RoutingTypePtrOutput)
}

func (in *routingTypePtr) ToRoutingTypePtrOutputWithContext(ctx context.Context) RoutingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoutingTypePtrOutput)
}

type SkuScaleType string

const (
	SkuScaleTypeNone      = SkuScaleType("None")
	SkuScaleTypeManual    = SkuScaleType("Manual")
	SkuScaleTypeAutomatic = SkuScaleType("Automatic")
)

func (SkuScaleType) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuScaleType)(nil)).Elem()
}

func (e SkuScaleType) ToSkuScaleTypeOutput() SkuScaleTypeOutput {
	return pulumi.ToOutput(e).(SkuScaleTypeOutput)
}

func (e SkuScaleType) ToSkuScaleTypeOutputWithContext(ctx context.Context) SkuScaleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SkuScaleTypeOutput)
}

func (e SkuScaleType) ToSkuScaleTypePtrOutput() SkuScaleTypePtrOutput {
	return e.ToSkuScaleTypePtrOutputWithContext(context.Background())
}

func (e SkuScaleType) ToSkuScaleTypePtrOutputWithContext(ctx context.Context) SkuScaleTypePtrOutput {
	return SkuScaleType(e).ToSkuScaleTypeOutputWithContext(ctx).ToSkuScaleTypePtrOutputWithContext(ctx)
}

func (e SkuScaleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuScaleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuScaleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuScaleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SkuScaleTypeOutput struct{ *pulumi.OutputState }

func (SkuScaleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuScaleType)(nil)).Elem()
}

func (o SkuScaleTypeOutput) ToSkuScaleTypeOutput() SkuScaleTypeOutput {
	return o
}

func (o SkuScaleTypeOutput) ToSkuScaleTypeOutputWithContext(ctx context.Context) SkuScaleTypeOutput {
	return o
}

func (o SkuScaleTypeOutput) ToSkuScaleTypePtrOutput() SkuScaleTypePtrOutput {
	return o.ToSkuScaleTypePtrOutputWithContext(context.Background())
}

func (o SkuScaleTypeOutput) ToSkuScaleTypePtrOutputWithContext(ctx context.Context) SkuScaleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuScaleType) *SkuScaleType {
		return &v
	}).(SkuScaleTypePtrOutput)
}

func (o SkuScaleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SkuScaleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuScaleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SkuScaleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuScaleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SkuScaleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SkuScaleTypePtrOutput struct{ *pulumi.OutputState }

func (SkuScaleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuScaleType)(nil)).Elem()
}

func (o SkuScaleTypePtrOutput) ToSkuScaleTypePtrOutput() SkuScaleTypePtrOutput {
	return o
}

func (o SkuScaleTypePtrOutput) ToSkuScaleTypePtrOutputWithContext(ctx context.Context) SkuScaleTypePtrOutput {
	return o
}

func (o SkuScaleTypePtrOutput) Elem() SkuScaleTypeOutput {
	return o.ApplyT(func(v *SkuScaleType) SkuScaleType {
		if v != nil {
			return *v
		}
		var ret SkuScaleType
		return ret
	}).(SkuScaleTypeOutput)
}

func (o SkuScaleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SkuScaleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SkuScaleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SkuScaleTypeInput is an input type that accepts SkuScaleTypeArgs and SkuScaleTypeOutput values.
// You can construct a concrete instance of `SkuScaleTypeInput` via:
//
//          SkuScaleTypeArgs{...}
type SkuScaleTypeInput interface {
	pulumi.Input

	ToSkuScaleTypeOutput() SkuScaleTypeOutput
	ToSkuScaleTypeOutputWithContext(context.Context) SkuScaleTypeOutput
}

var skuScaleTypePtrType = reflect.TypeOf((**SkuScaleType)(nil)).Elem()

type SkuScaleTypePtrInput interface {
	pulumi.Input

	ToSkuScaleTypePtrOutput() SkuScaleTypePtrOutput
	ToSkuScaleTypePtrOutputWithContext(context.Context) SkuScaleTypePtrOutput
}

type skuScaleTypePtr string

func SkuScaleTypePtr(v string) SkuScaleTypePtrInput {
	return (*skuScaleTypePtr)(&v)
}

func (*skuScaleTypePtr) ElementType() reflect.Type {
	return skuScaleTypePtrType
}

func (in *skuScaleTypePtr) ToSkuScaleTypePtrOutput() SkuScaleTypePtrOutput {
	return pulumi.ToOutput(in).(SkuScaleTypePtrOutput)
}

func (in *skuScaleTypePtr) ToSkuScaleTypePtrOutputWithContext(ctx context.Context) SkuScaleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SkuScaleTypePtrOutput)
}

type SubscriptionNotificationOperation string

const (
	SubscriptionNotificationOperationNotDefined             = SubscriptionNotificationOperation("NotDefined")
	SubscriptionNotificationOperationDeleteAllResources     = SubscriptionNotificationOperation("DeleteAllResources")
	SubscriptionNotificationOperationSoftDeleteAllResources = SubscriptionNotificationOperation("SoftDeleteAllResources")
	SubscriptionNotificationOperationNoOp                   = SubscriptionNotificationOperation("NoOp")
	SubscriptionNotificationOperationBillingCancellation    = SubscriptionNotificationOperation("BillingCancellation")
	SubscriptionNotificationOperationUndoSoftDelete         = SubscriptionNotificationOperation("UndoSoftDelete")
)

func (SubscriptionNotificationOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionNotificationOperation)(nil)).Elem()
}

func (e SubscriptionNotificationOperation) ToSubscriptionNotificationOperationOutput() SubscriptionNotificationOperationOutput {
	return pulumi.ToOutput(e).(SubscriptionNotificationOperationOutput)
}

func (e SubscriptionNotificationOperation) ToSubscriptionNotificationOperationOutputWithContext(ctx context.Context) SubscriptionNotificationOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionNotificationOperationOutput)
}

func (e SubscriptionNotificationOperation) ToSubscriptionNotificationOperationPtrOutput() SubscriptionNotificationOperationPtrOutput {
	return e.ToSubscriptionNotificationOperationPtrOutputWithContext(context.Background())
}

func (e SubscriptionNotificationOperation) ToSubscriptionNotificationOperationPtrOutputWithContext(ctx context.Context) SubscriptionNotificationOperationPtrOutput {
	return SubscriptionNotificationOperation(e).ToSubscriptionNotificationOperationOutputWithContext(ctx).ToSubscriptionNotificationOperationPtrOutputWithContext(ctx)
}

func (e SubscriptionNotificationOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionNotificationOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionNotificationOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionNotificationOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionNotificationOperationOutput struct{ *pulumi.OutputState }

func (SubscriptionNotificationOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionNotificationOperation)(nil)).Elem()
}

func (o SubscriptionNotificationOperationOutput) ToSubscriptionNotificationOperationOutput() SubscriptionNotificationOperationOutput {
	return o
}

func (o SubscriptionNotificationOperationOutput) ToSubscriptionNotificationOperationOutputWithContext(ctx context.Context) SubscriptionNotificationOperationOutput {
	return o
}

func (o SubscriptionNotificationOperationOutput) ToSubscriptionNotificationOperationPtrOutput() SubscriptionNotificationOperationPtrOutput {
	return o.ToSubscriptionNotificationOperationPtrOutputWithContext(context.Background())
}

func (o SubscriptionNotificationOperationOutput) ToSubscriptionNotificationOperationPtrOutputWithContext(ctx context.Context) SubscriptionNotificationOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionNotificationOperation) *SubscriptionNotificationOperation {
		return &v
	}).(SubscriptionNotificationOperationPtrOutput)
}

func (o SubscriptionNotificationOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionNotificationOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionNotificationOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionNotificationOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionNotificationOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionNotificationOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionNotificationOperationPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionNotificationOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionNotificationOperation)(nil)).Elem()
}

func (o SubscriptionNotificationOperationPtrOutput) ToSubscriptionNotificationOperationPtrOutput() SubscriptionNotificationOperationPtrOutput {
	return o
}

func (o SubscriptionNotificationOperationPtrOutput) ToSubscriptionNotificationOperationPtrOutputWithContext(ctx context.Context) SubscriptionNotificationOperationPtrOutput {
	return o
}

func (o SubscriptionNotificationOperationPtrOutput) Elem() SubscriptionNotificationOperationOutput {
	return o.ApplyT(func(v *SubscriptionNotificationOperation) SubscriptionNotificationOperation {
		if v != nil {
			return *v
		}
		var ret SubscriptionNotificationOperation
		return ret
	}).(SubscriptionNotificationOperationOutput)
}

func (o SubscriptionNotificationOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionNotificationOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionNotificationOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionNotificationOperationInput is an input type that accepts SubscriptionNotificationOperationArgs and SubscriptionNotificationOperationOutput values.
// You can construct a concrete instance of `SubscriptionNotificationOperationInput` via:
//
//          SubscriptionNotificationOperationArgs{...}
type SubscriptionNotificationOperationInput interface {
	pulumi.Input

	ToSubscriptionNotificationOperationOutput() SubscriptionNotificationOperationOutput
	ToSubscriptionNotificationOperationOutputWithContext(context.Context) SubscriptionNotificationOperationOutput
}

var subscriptionNotificationOperationPtrType = reflect.TypeOf((**SubscriptionNotificationOperation)(nil)).Elem()

type SubscriptionNotificationOperationPtrInput interface {
	pulumi.Input

	ToSubscriptionNotificationOperationPtrOutput() SubscriptionNotificationOperationPtrOutput
	ToSubscriptionNotificationOperationPtrOutputWithContext(context.Context) SubscriptionNotificationOperationPtrOutput
}

type subscriptionNotificationOperationPtr string

func SubscriptionNotificationOperationPtr(v string) SubscriptionNotificationOperationPtrInput {
	return (*subscriptionNotificationOperationPtr)(&v)
}

func (*subscriptionNotificationOperationPtr) ElementType() reflect.Type {
	return subscriptionNotificationOperationPtrType
}

func (in *subscriptionNotificationOperationPtr) ToSubscriptionNotificationOperationPtrOutput() SubscriptionNotificationOperationPtrOutput {
	return pulumi.ToOutput(in).(SubscriptionNotificationOperationPtrOutput)
}

func (in *subscriptionNotificationOperationPtr) ToSubscriptionNotificationOperationPtrOutputWithContext(ctx context.Context) SubscriptionNotificationOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionNotificationOperationPtrOutput)
}

type SubscriptionReregistrationResult string

const (
	SubscriptionReregistrationResultNotApplicable     = SubscriptionReregistrationResult("NotApplicable")
	SubscriptionReregistrationResultConditionalUpdate = SubscriptionReregistrationResult("ConditionalUpdate")
	SubscriptionReregistrationResultForcedUpdate      = SubscriptionReregistrationResult("ForcedUpdate")
	SubscriptionReregistrationResultFailed            = SubscriptionReregistrationResult("Failed")
)

func (SubscriptionReregistrationResult) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionReregistrationResult)(nil)).Elem()
}

func (e SubscriptionReregistrationResult) ToSubscriptionReregistrationResultOutput() SubscriptionReregistrationResultOutput {
	return pulumi.ToOutput(e).(SubscriptionReregistrationResultOutput)
}

func (e SubscriptionReregistrationResult) ToSubscriptionReregistrationResultOutputWithContext(ctx context.Context) SubscriptionReregistrationResultOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionReregistrationResultOutput)
}

func (e SubscriptionReregistrationResult) ToSubscriptionReregistrationResultPtrOutput() SubscriptionReregistrationResultPtrOutput {
	return e.ToSubscriptionReregistrationResultPtrOutputWithContext(context.Background())
}

func (e SubscriptionReregistrationResult) ToSubscriptionReregistrationResultPtrOutputWithContext(ctx context.Context) SubscriptionReregistrationResultPtrOutput {
	return SubscriptionReregistrationResult(e).ToSubscriptionReregistrationResultOutputWithContext(ctx).ToSubscriptionReregistrationResultPtrOutputWithContext(ctx)
}

func (e SubscriptionReregistrationResult) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionReregistrationResult) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionReregistrationResult) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionReregistrationResult) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionReregistrationResultOutput struct{ *pulumi.OutputState }

func (SubscriptionReregistrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionReregistrationResult)(nil)).Elem()
}

func (o SubscriptionReregistrationResultOutput) ToSubscriptionReregistrationResultOutput() SubscriptionReregistrationResultOutput {
	return o
}

func (o SubscriptionReregistrationResultOutput) ToSubscriptionReregistrationResultOutputWithContext(ctx context.Context) SubscriptionReregistrationResultOutput {
	return o
}

func (o SubscriptionReregistrationResultOutput) ToSubscriptionReregistrationResultPtrOutput() SubscriptionReregistrationResultPtrOutput {
	return o.ToSubscriptionReregistrationResultPtrOutputWithContext(context.Background())
}

func (o SubscriptionReregistrationResultOutput) ToSubscriptionReregistrationResultPtrOutputWithContext(ctx context.Context) SubscriptionReregistrationResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionReregistrationResult) *SubscriptionReregistrationResult {
		return &v
	}).(SubscriptionReregistrationResultPtrOutput)
}

func (o SubscriptionReregistrationResultOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionReregistrationResultOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionReregistrationResult) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionReregistrationResultOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionReregistrationResultOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionReregistrationResult) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionReregistrationResultPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionReregistrationResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionReregistrationResult)(nil)).Elem()
}

func (o SubscriptionReregistrationResultPtrOutput) ToSubscriptionReregistrationResultPtrOutput() SubscriptionReregistrationResultPtrOutput {
	return o
}

func (o SubscriptionReregistrationResultPtrOutput) ToSubscriptionReregistrationResultPtrOutputWithContext(ctx context.Context) SubscriptionReregistrationResultPtrOutput {
	return o
}

func (o SubscriptionReregistrationResultPtrOutput) Elem() SubscriptionReregistrationResultOutput {
	return o.ApplyT(func(v *SubscriptionReregistrationResult) SubscriptionReregistrationResult {
		if v != nil {
			return *v
		}
		var ret SubscriptionReregistrationResult
		return ret
	}).(SubscriptionReregistrationResultOutput)
}

func (o SubscriptionReregistrationResultPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionReregistrationResultPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionReregistrationResult) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionReregistrationResultInput is an input type that accepts SubscriptionReregistrationResultArgs and SubscriptionReregistrationResultOutput values.
// You can construct a concrete instance of `SubscriptionReregistrationResultInput` via:
//
//          SubscriptionReregistrationResultArgs{...}
type SubscriptionReregistrationResultInput interface {
	pulumi.Input

	ToSubscriptionReregistrationResultOutput() SubscriptionReregistrationResultOutput
	ToSubscriptionReregistrationResultOutputWithContext(context.Context) SubscriptionReregistrationResultOutput
}

var subscriptionReregistrationResultPtrType = reflect.TypeOf((**SubscriptionReregistrationResult)(nil)).Elem()

type SubscriptionReregistrationResultPtrInput interface {
	pulumi.Input

	ToSubscriptionReregistrationResultPtrOutput() SubscriptionReregistrationResultPtrOutput
	ToSubscriptionReregistrationResultPtrOutputWithContext(context.Context) SubscriptionReregistrationResultPtrOutput
}

type subscriptionReregistrationResultPtr string

func SubscriptionReregistrationResultPtr(v string) SubscriptionReregistrationResultPtrInput {
	return (*subscriptionReregistrationResultPtr)(&v)
}

func (*subscriptionReregistrationResultPtr) ElementType() reflect.Type {
	return subscriptionReregistrationResultPtrType
}

func (in *subscriptionReregistrationResultPtr) ToSubscriptionReregistrationResultPtrOutput() SubscriptionReregistrationResultPtrOutput {
	return pulumi.ToOutput(in).(SubscriptionReregistrationResultPtrOutput)
}

func (in *subscriptionReregistrationResultPtr) ToSubscriptionReregistrationResultPtrOutputWithContext(ctx context.Context) SubscriptionReregistrationResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionReregistrationResultPtrOutput)
}

type SubscriptionState string

const (
	SubscriptionStateNotDefined = SubscriptionState("NotDefined")
	SubscriptionStateEnabled    = SubscriptionState("Enabled")
	SubscriptionStateWarned     = SubscriptionState("Warned")
	SubscriptionStatePastDue    = SubscriptionState("PastDue")
	SubscriptionStateDisabled   = SubscriptionState("Disabled")
	SubscriptionStateDeleted    = SubscriptionState("Deleted")
)

func (SubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionState)(nil)).Elem()
}

func (e SubscriptionState) ToSubscriptionStateOutput() SubscriptionStateOutput {
	return pulumi.ToOutput(e).(SubscriptionStateOutput)
}

func (e SubscriptionState) ToSubscriptionStateOutputWithContext(ctx context.Context) SubscriptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionStateOutput)
}

func (e SubscriptionState) ToSubscriptionStatePtrOutput() SubscriptionStatePtrOutput {
	return e.ToSubscriptionStatePtrOutputWithContext(context.Background())
}

func (e SubscriptionState) ToSubscriptionStatePtrOutputWithContext(ctx context.Context) SubscriptionStatePtrOutput {
	return SubscriptionState(e).ToSubscriptionStateOutputWithContext(ctx).ToSubscriptionStatePtrOutputWithContext(ctx)
}

func (e SubscriptionState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionStateOutput struct{ *pulumi.OutputState }

func (SubscriptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionState)(nil)).Elem()
}

func (o SubscriptionStateOutput) ToSubscriptionStateOutput() SubscriptionStateOutput {
	return o
}

func (o SubscriptionStateOutput) ToSubscriptionStateOutputWithContext(ctx context.Context) SubscriptionStateOutput {
	return o
}

func (o SubscriptionStateOutput) ToSubscriptionStatePtrOutput() SubscriptionStatePtrOutput {
	return o.ToSubscriptionStatePtrOutputWithContext(context.Background())
}

func (o SubscriptionStateOutput) ToSubscriptionStatePtrOutputWithContext(ctx context.Context) SubscriptionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionState) *SubscriptionState {
		return &v
	}).(SubscriptionStatePtrOutput)
}

func (o SubscriptionStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionStatePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionState)(nil)).Elem()
}

func (o SubscriptionStatePtrOutput) ToSubscriptionStatePtrOutput() SubscriptionStatePtrOutput {
	return o
}

func (o SubscriptionStatePtrOutput) ToSubscriptionStatePtrOutputWithContext(ctx context.Context) SubscriptionStatePtrOutput {
	return o
}

func (o SubscriptionStatePtrOutput) Elem() SubscriptionStateOutput {
	return o.ApplyT(func(v *SubscriptionState) SubscriptionState {
		if v != nil {
			return *v
		}
		var ret SubscriptionState
		return ret
	}).(SubscriptionStateOutput)
}

func (o SubscriptionStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionStateInput is an input type that accepts SubscriptionStateArgs and SubscriptionStateOutput values.
// You can construct a concrete instance of `SubscriptionStateInput` via:
//
//          SubscriptionStateArgs{...}
type SubscriptionStateInput interface {
	pulumi.Input

	ToSubscriptionStateOutput() SubscriptionStateOutput
	ToSubscriptionStateOutputWithContext(context.Context) SubscriptionStateOutput
}

var subscriptionStatePtrType = reflect.TypeOf((**SubscriptionState)(nil)).Elem()

type SubscriptionStatePtrInput interface {
	pulumi.Input

	ToSubscriptionStatePtrOutput() SubscriptionStatePtrOutput
	ToSubscriptionStatePtrOutputWithContext(context.Context) SubscriptionStatePtrOutput
}

type subscriptionStatePtr string

func SubscriptionStatePtr(v string) SubscriptionStatePtrInput {
	return (*subscriptionStatePtr)(&v)
}

func (*subscriptionStatePtr) ElementType() reflect.Type {
	return subscriptionStatePtrType
}

func (in *subscriptionStatePtr) ToSubscriptionStatePtrOutput() SubscriptionStatePtrOutput {
	return pulumi.ToOutput(in).(SubscriptionStatePtrOutput)
}

func (in *subscriptionStatePtr) ToSubscriptionStatePtrOutputWithContext(ctx context.Context) SubscriptionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionStatePtrOutput)
}

type SubscriptionTransitioningState string

const (
	SubscriptionTransitioningStateRegistered              = SubscriptionTransitioningState("Registered")
	SubscriptionTransitioningStateUnregistered            = SubscriptionTransitioningState("Unregistered")
	SubscriptionTransitioningStateWarned                  = SubscriptionTransitioningState("Warned")
	SubscriptionTransitioningStateSuspended               = SubscriptionTransitioningState("Suspended")
	SubscriptionTransitioningStateDeleted                 = SubscriptionTransitioningState("Deleted")
	SubscriptionTransitioningStateWarnedToRegistered      = SubscriptionTransitioningState("WarnedToRegistered")
	SubscriptionTransitioningStateWarnedToSuspended       = SubscriptionTransitioningState("WarnedToSuspended")
	SubscriptionTransitioningStateWarnedToDeleted         = SubscriptionTransitioningState("WarnedToDeleted")
	SubscriptionTransitioningStateWarnedToUnregistered    = SubscriptionTransitioningState("WarnedToUnregistered")
	SubscriptionTransitioningStateSuspendedToRegistered   = SubscriptionTransitioningState("SuspendedToRegistered")
	SubscriptionTransitioningStateSuspendedToWarned       = SubscriptionTransitioningState("SuspendedToWarned")
	SubscriptionTransitioningStateSuspendedToDeleted      = SubscriptionTransitioningState("SuspendedToDeleted")
	SubscriptionTransitioningStateSuspendedToUnregistered = SubscriptionTransitioningState("SuspendedToUnregistered")
)

func (SubscriptionTransitioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionTransitioningState)(nil)).Elem()
}

func (e SubscriptionTransitioningState) ToSubscriptionTransitioningStateOutput() SubscriptionTransitioningStateOutput {
	return pulumi.ToOutput(e).(SubscriptionTransitioningStateOutput)
}

func (e SubscriptionTransitioningState) ToSubscriptionTransitioningStateOutputWithContext(ctx context.Context) SubscriptionTransitioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriptionTransitioningStateOutput)
}

func (e SubscriptionTransitioningState) ToSubscriptionTransitioningStatePtrOutput() SubscriptionTransitioningStatePtrOutput {
	return e.ToSubscriptionTransitioningStatePtrOutputWithContext(context.Background())
}

func (e SubscriptionTransitioningState) ToSubscriptionTransitioningStatePtrOutputWithContext(ctx context.Context) SubscriptionTransitioningStatePtrOutput {
	return SubscriptionTransitioningState(e).ToSubscriptionTransitioningStateOutputWithContext(ctx).ToSubscriptionTransitioningStatePtrOutputWithContext(ctx)
}

func (e SubscriptionTransitioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionTransitioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriptionTransitioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriptionTransitioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriptionTransitioningStateOutput struct{ *pulumi.OutputState }

func (SubscriptionTransitioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionTransitioningState)(nil)).Elem()
}

func (o SubscriptionTransitioningStateOutput) ToSubscriptionTransitioningStateOutput() SubscriptionTransitioningStateOutput {
	return o
}

func (o SubscriptionTransitioningStateOutput) ToSubscriptionTransitioningStateOutputWithContext(ctx context.Context) SubscriptionTransitioningStateOutput {
	return o
}

func (o SubscriptionTransitioningStateOutput) ToSubscriptionTransitioningStatePtrOutput() SubscriptionTransitioningStatePtrOutput {
	return o.ToSubscriptionTransitioningStatePtrOutputWithContext(context.Background())
}

func (o SubscriptionTransitioningStateOutput) ToSubscriptionTransitioningStatePtrOutputWithContext(ctx context.Context) SubscriptionTransitioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionTransitioningState) *SubscriptionTransitioningState {
		return &v
	}).(SubscriptionTransitioningStatePtrOutput)
}

func (o SubscriptionTransitioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionTransitioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionTransitioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionTransitioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTransitioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionTransitioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionTransitioningStatePtrOutput struct{ *pulumi.OutputState }

func (SubscriptionTransitioningStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionTransitioningState)(nil)).Elem()
}

func (o SubscriptionTransitioningStatePtrOutput) ToSubscriptionTransitioningStatePtrOutput() SubscriptionTransitioningStatePtrOutput {
	return o
}

func (o SubscriptionTransitioningStatePtrOutput) ToSubscriptionTransitioningStatePtrOutputWithContext(ctx context.Context) SubscriptionTransitioningStatePtrOutput {
	return o
}

func (o SubscriptionTransitioningStatePtrOutput) Elem() SubscriptionTransitioningStateOutput {
	return o.ApplyT(func(v *SubscriptionTransitioningState) SubscriptionTransitioningState {
		if v != nil {
			return *v
		}
		var ret SubscriptionTransitioningState
		return ret
	}).(SubscriptionTransitioningStateOutput)
}

func (o SubscriptionTransitioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTransitioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionTransitioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriptionTransitioningStateInput is an input type that accepts SubscriptionTransitioningStateArgs and SubscriptionTransitioningStateOutput values.
// You can construct a concrete instance of `SubscriptionTransitioningStateInput` via:
//
//          SubscriptionTransitioningStateArgs{...}
type SubscriptionTransitioningStateInput interface {
	pulumi.Input

	ToSubscriptionTransitioningStateOutput() SubscriptionTransitioningStateOutput
	ToSubscriptionTransitioningStateOutputWithContext(context.Context) SubscriptionTransitioningStateOutput
}

var subscriptionTransitioningStatePtrType = reflect.TypeOf((**SubscriptionTransitioningState)(nil)).Elem()

type SubscriptionTransitioningStatePtrInput interface {
	pulumi.Input

	ToSubscriptionTransitioningStatePtrOutput() SubscriptionTransitioningStatePtrOutput
	ToSubscriptionTransitioningStatePtrOutputWithContext(context.Context) SubscriptionTransitioningStatePtrOutput
}

type subscriptionTransitioningStatePtr string

func SubscriptionTransitioningStatePtr(v string) SubscriptionTransitioningStatePtrInput {
	return (*subscriptionTransitioningStatePtr)(&v)
}

func (*subscriptionTransitioningStatePtr) ElementType() reflect.Type {
	return subscriptionTransitioningStatePtrType
}

func (in *subscriptionTransitioningStatePtr) ToSubscriptionTransitioningStatePtrOutput() SubscriptionTransitioningStatePtrOutput {
	return pulumi.ToOutput(in).(SubscriptionTransitioningStatePtrOutput)
}

func (in *subscriptionTransitioningStatePtr) ToSubscriptionTransitioningStatePtrOutputWithContext(ctx context.Context) SubscriptionTransitioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriptionTransitioningStatePtrOutput)
}

type ThrottlingMetricType string

const (
	ThrottlingMetricTypeNotSpecified      = ThrottlingMetricType("NotSpecified")
	ThrottlingMetricTypeNumberOfRequests  = ThrottlingMetricType("NumberOfRequests")
	ThrottlingMetricTypeNumberOfResources = ThrottlingMetricType("NumberOfResources")
)

func (ThrottlingMetricType) ElementType() reflect.Type {
	return reflect.TypeOf((*ThrottlingMetricType)(nil)).Elem()
}

func (e ThrottlingMetricType) ToThrottlingMetricTypeOutput() ThrottlingMetricTypeOutput {
	return pulumi.ToOutput(e).(ThrottlingMetricTypeOutput)
}

func (e ThrottlingMetricType) ToThrottlingMetricTypeOutputWithContext(ctx context.Context) ThrottlingMetricTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ThrottlingMetricTypeOutput)
}

func (e ThrottlingMetricType) ToThrottlingMetricTypePtrOutput() ThrottlingMetricTypePtrOutput {
	return e.ToThrottlingMetricTypePtrOutputWithContext(context.Background())
}

func (e ThrottlingMetricType) ToThrottlingMetricTypePtrOutputWithContext(ctx context.Context) ThrottlingMetricTypePtrOutput {
	return ThrottlingMetricType(e).ToThrottlingMetricTypeOutputWithContext(ctx).ToThrottlingMetricTypePtrOutputWithContext(ctx)
}

func (e ThrottlingMetricType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThrottlingMetricType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ThrottlingMetricType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ThrottlingMetricType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ThrottlingMetricTypeOutput struct{ *pulumi.OutputState }

func (ThrottlingMetricTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThrottlingMetricType)(nil)).Elem()
}

func (o ThrottlingMetricTypeOutput) ToThrottlingMetricTypeOutput() ThrottlingMetricTypeOutput {
	return o
}

func (o ThrottlingMetricTypeOutput) ToThrottlingMetricTypeOutputWithContext(ctx context.Context) ThrottlingMetricTypeOutput {
	return o
}

func (o ThrottlingMetricTypeOutput) ToThrottlingMetricTypePtrOutput() ThrottlingMetricTypePtrOutput {
	return o.ToThrottlingMetricTypePtrOutputWithContext(context.Background())
}

func (o ThrottlingMetricTypeOutput) ToThrottlingMetricTypePtrOutputWithContext(ctx context.Context) ThrottlingMetricTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ThrottlingMetricType) *ThrottlingMetricType {
		return &v
	}).(ThrottlingMetricTypePtrOutput)
}

func (o ThrottlingMetricTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ThrottlingMetricTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThrottlingMetricType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ThrottlingMetricTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThrottlingMetricTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ThrottlingMetricType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ThrottlingMetricTypePtrOutput struct{ *pulumi.OutputState }

func (ThrottlingMetricTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThrottlingMetricType)(nil)).Elem()
}

func (o ThrottlingMetricTypePtrOutput) ToThrottlingMetricTypePtrOutput() ThrottlingMetricTypePtrOutput {
	return o
}

func (o ThrottlingMetricTypePtrOutput) ToThrottlingMetricTypePtrOutputWithContext(ctx context.Context) ThrottlingMetricTypePtrOutput {
	return o
}

func (o ThrottlingMetricTypePtrOutput) Elem() ThrottlingMetricTypeOutput {
	return o.ApplyT(func(v *ThrottlingMetricType) ThrottlingMetricType {
		if v != nil {
			return *v
		}
		var ret ThrottlingMetricType
		return ret
	}).(ThrottlingMetricTypeOutput)
}

func (o ThrottlingMetricTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ThrottlingMetricTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ThrottlingMetricType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ThrottlingMetricTypeInput is an input type that accepts ThrottlingMetricTypeArgs and ThrottlingMetricTypeOutput values.
// You can construct a concrete instance of `ThrottlingMetricTypeInput` via:
//
//          ThrottlingMetricTypeArgs{...}
type ThrottlingMetricTypeInput interface {
	pulumi.Input

	ToThrottlingMetricTypeOutput() ThrottlingMetricTypeOutput
	ToThrottlingMetricTypeOutputWithContext(context.Context) ThrottlingMetricTypeOutput
}

var throttlingMetricTypePtrType = reflect.TypeOf((**ThrottlingMetricType)(nil)).Elem()

type ThrottlingMetricTypePtrInput interface {
	pulumi.Input

	ToThrottlingMetricTypePtrOutput() ThrottlingMetricTypePtrOutput
	ToThrottlingMetricTypePtrOutputWithContext(context.Context) ThrottlingMetricTypePtrOutput
}

type throttlingMetricTypePtr string

func ThrottlingMetricTypePtr(v string) ThrottlingMetricTypePtrInput {
	return (*throttlingMetricTypePtr)(&v)
}

func (*throttlingMetricTypePtr) ElementType() reflect.Type {
	return throttlingMetricTypePtrType
}

func (in *throttlingMetricTypePtr) ToThrottlingMetricTypePtrOutput() ThrottlingMetricTypePtrOutput {
	return pulumi.ToOutput(in).(ThrottlingMetricTypePtrOutput)
}

func (in *throttlingMetricTypePtr) ToThrottlingMetricTypePtrOutputWithContext(ctx context.Context) ThrottlingMetricTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ThrottlingMetricTypePtrOutput)
}

type TrafficRegionCategory string

const (
	TrafficRegionCategoryNotSpecified           = TrafficRegionCategory("NotSpecified")
	TrafficRegionCategoryCanary                 = TrafficRegionCategory("Canary")
	TrafficRegionCategoryLowTraffic             = TrafficRegionCategory("LowTraffic")
	TrafficRegionCategoryMediumTraffic          = TrafficRegionCategory("MediumTraffic")
	TrafficRegionCategoryHighTraffic            = TrafficRegionCategory("HighTraffic")
	TrafficRegionCategoryNone                   = TrafficRegionCategory("None")
	TrafficRegionCategoryRestOfTheWorldGroupOne = TrafficRegionCategory("RestOfTheWorldGroupOne")
	TrafficRegionCategoryRestOfTheWorldGroupTwo = TrafficRegionCategory("RestOfTheWorldGroupTwo")
)

func (TrafficRegionCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficRegionCategory)(nil)).Elem()
}

func (e TrafficRegionCategory) ToTrafficRegionCategoryOutput() TrafficRegionCategoryOutput {
	return pulumi.ToOutput(e).(TrafficRegionCategoryOutput)
}

func (e TrafficRegionCategory) ToTrafficRegionCategoryOutputWithContext(ctx context.Context) TrafficRegionCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrafficRegionCategoryOutput)
}

func (e TrafficRegionCategory) ToTrafficRegionCategoryPtrOutput() TrafficRegionCategoryPtrOutput {
	return e.ToTrafficRegionCategoryPtrOutputWithContext(context.Background())
}

func (e TrafficRegionCategory) ToTrafficRegionCategoryPtrOutputWithContext(ctx context.Context) TrafficRegionCategoryPtrOutput {
	return TrafficRegionCategory(e).ToTrafficRegionCategoryOutputWithContext(ctx).ToTrafficRegionCategoryPtrOutputWithContext(ctx)
}

func (e TrafficRegionCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficRegionCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrafficRegionCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrafficRegionCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrafficRegionCategoryOutput struct{ *pulumi.OutputState }

func (TrafficRegionCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficRegionCategory)(nil)).Elem()
}

func (o TrafficRegionCategoryOutput) ToTrafficRegionCategoryOutput() TrafficRegionCategoryOutput {
	return o
}

func (o TrafficRegionCategoryOutput) ToTrafficRegionCategoryOutputWithContext(ctx context.Context) TrafficRegionCategoryOutput {
	return o
}

func (o TrafficRegionCategoryOutput) ToTrafficRegionCategoryPtrOutput() TrafficRegionCategoryPtrOutput {
	return o.ToTrafficRegionCategoryPtrOutputWithContext(context.Background())
}

func (o TrafficRegionCategoryOutput) ToTrafficRegionCategoryPtrOutputWithContext(ctx context.Context) TrafficRegionCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrafficRegionCategory) *TrafficRegionCategory {
		return &v
	}).(TrafficRegionCategoryPtrOutput)
}

func (o TrafficRegionCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrafficRegionCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficRegionCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrafficRegionCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficRegionCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrafficRegionCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrafficRegionCategoryPtrOutput struct{ *pulumi.OutputState }

func (TrafficRegionCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficRegionCategory)(nil)).Elem()
}

func (o TrafficRegionCategoryPtrOutput) ToTrafficRegionCategoryPtrOutput() TrafficRegionCategoryPtrOutput {
	return o
}

func (o TrafficRegionCategoryPtrOutput) ToTrafficRegionCategoryPtrOutputWithContext(ctx context.Context) TrafficRegionCategoryPtrOutput {
	return o
}

func (o TrafficRegionCategoryPtrOutput) Elem() TrafficRegionCategoryOutput {
	return o.ApplyT(func(v *TrafficRegionCategory) TrafficRegionCategory {
		if v != nil {
			return *v
		}
		var ret TrafficRegionCategory
		return ret
	}).(TrafficRegionCategoryOutput)
}

func (o TrafficRegionCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrafficRegionCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrafficRegionCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrafficRegionCategoryInput is an input type that accepts TrafficRegionCategoryArgs and TrafficRegionCategoryOutput values.
// You can construct a concrete instance of `TrafficRegionCategoryInput` via:
//
//          TrafficRegionCategoryArgs{...}
type TrafficRegionCategoryInput interface {
	pulumi.Input

	ToTrafficRegionCategoryOutput() TrafficRegionCategoryOutput
	ToTrafficRegionCategoryOutputWithContext(context.Context) TrafficRegionCategoryOutput
}

var trafficRegionCategoryPtrType = reflect.TypeOf((**TrafficRegionCategory)(nil)).Elem()

type TrafficRegionCategoryPtrInput interface {
	pulumi.Input

	ToTrafficRegionCategoryPtrOutput() TrafficRegionCategoryPtrOutput
	ToTrafficRegionCategoryPtrOutputWithContext(context.Context) TrafficRegionCategoryPtrOutput
}

type trafficRegionCategoryPtr string

func TrafficRegionCategoryPtr(v string) TrafficRegionCategoryPtrInput {
	return (*trafficRegionCategoryPtr)(&v)
}

func (*trafficRegionCategoryPtr) ElementType() reflect.Type {
	return trafficRegionCategoryPtrType
}

func (in *trafficRegionCategoryPtr) ToTrafficRegionCategoryPtrOutput() TrafficRegionCategoryPtrOutput {
	return pulumi.ToOutput(in).(TrafficRegionCategoryPtrOutput)
}

func (in *trafficRegionCategoryPtr) ToTrafficRegionCategoryPtrOutputWithContext(ctx context.Context) TrafficRegionCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrafficRegionCategoryPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ExtensionCategoryOutput{})
	pulumi.RegisterOutputType(ExtensionCategoryPtrOutput{})
	pulumi.RegisterOutputType(ExtensionOptionTypeOutput{})
	pulumi.RegisterOutputType(ExtensionOptionTypePtrOutput{})
	pulumi.RegisterOutputType(FeaturesPolicyOutput{})
	pulumi.RegisterOutputType(FeaturesPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityManagementTypesOutput{})
	pulumi.RegisterOutputType(IdentityManagementTypesPtrOutput{})
	pulumi.RegisterOutputType(LoggingDetailsOutput{})
	pulumi.RegisterOutputType(LoggingDetailsPtrOutput{})
	pulumi.RegisterOutputType(LoggingDirectionsOutput{})
	pulumi.RegisterOutputType(LoggingDirectionsPtrOutput{})
	pulumi.RegisterOutputType(MessageScopeOutput{})
	pulumi.RegisterOutputType(MessageScopePtrOutput{})
	pulumi.RegisterOutputType(NotificationModeOutput{})
	pulumi.RegisterOutputType(NotificationModePtrOutput{})
	pulumi.RegisterOutputType(OptInHeaderTypeOutput{})
	pulumi.RegisterOutputType(OptInHeaderTypePtrOutput{})
	pulumi.RegisterOutputType(PolicyOutput{})
	pulumi.RegisterOutputType(PolicyPtrOutput{})
	pulumi.RegisterOutputType(PreflightOptionOutput{})
	pulumi.RegisterOutputType(PreflightOptionPtrOutput{})
	pulumi.RegisterOutputType(ProvisioningStateOutput{})
	pulumi.RegisterOutputType(ProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(RegionalityOutput{})
	pulumi.RegisterOutputType(RegionalityPtrOutput{})
	pulumi.RegisterOutputType(ResourceDeletionPolicyOutput{})
	pulumi.RegisterOutputType(ResourceDeletionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ResourceProviderCapabilitiesEffectOutput{})
	pulumi.RegisterOutputType(ResourceProviderCapabilitiesEffectPtrOutput{})
	pulumi.RegisterOutputType(ResourceProviderTypeOutput{})
	pulumi.RegisterOutputType(ResourceProviderTypePtrOutput{})
	pulumi.RegisterOutputType(RoutingTypeOutput{})
	pulumi.RegisterOutputType(RoutingTypePtrOutput{})
	pulumi.RegisterOutputType(SkuScaleTypeOutput{})
	pulumi.RegisterOutputType(SkuScaleTypePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionNotificationOperationOutput{})
	pulumi.RegisterOutputType(SubscriptionNotificationOperationPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionReregistrationResultOutput{})
	pulumi.RegisterOutputType(SubscriptionReregistrationResultPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionStateOutput{})
	pulumi.RegisterOutputType(SubscriptionStatePtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTransitioningStateOutput{})
	pulumi.RegisterOutputType(SubscriptionTransitioningStatePtrOutput{})
	pulumi.RegisterOutputType(ThrottlingMetricTypeOutput{})
	pulumi.RegisterOutputType(ThrottlingMetricTypePtrOutput{})
	pulumi.RegisterOutputType(TrafficRegionCategoryOutput{})
	pulumi.RegisterOutputType(TrafficRegionCategoryPtrOutput{})
}
