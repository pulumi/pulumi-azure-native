// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170401preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The properties that are associated with an aggregate function.
type AggregateFunctionProperties struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding interface{}     `pulumi:"binding"`
	Inputs  []FunctionInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output *FunctionOutput `pulumi:"output"`
	// Indicates the type of function.
	Type string `pulumi:"type"`
}

// AggregateFunctionPropertiesInput is an input type that accepts AggregateFunctionPropertiesArgs and AggregateFunctionPropertiesOutput values.
// You can construct a concrete instance of `AggregateFunctionPropertiesInput` via:
//
//          AggregateFunctionPropertiesArgs{...}
type AggregateFunctionPropertiesInput interface {
	pulumi.Input

	ToAggregateFunctionPropertiesOutput() AggregateFunctionPropertiesOutput
	ToAggregateFunctionPropertiesOutputWithContext(context.Context) AggregateFunctionPropertiesOutput
}

// The properties that are associated with an aggregate function.
type AggregateFunctionPropertiesArgs struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding pulumi.Input            `pulumi:"binding"`
	Inputs  FunctionInputArrayInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output FunctionOutputPtrInput `pulumi:"output"`
	// Indicates the type of function.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AggregateFunctionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateFunctionProperties)(nil)).Elem()
}

func (i AggregateFunctionPropertiesArgs) ToAggregateFunctionPropertiesOutput() AggregateFunctionPropertiesOutput {
	return i.ToAggregateFunctionPropertiesOutputWithContext(context.Background())
}

func (i AggregateFunctionPropertiesArgs) ToAggregateFunctionPropertiesOutputWithContext(ctx context.Context) AggregateFunctionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateFunctionPropertiesOutput)
}

// The properties that are associated with an aggregate function.
type AggregateFunctionPropertiesOutput struct{ *pulumi.OutputState }

func (AggregateFunctionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateFunctionProperties)(nil)).Elem()
}

func (o AggregateFunctionPropertiesOutput) ToAggregateFunctionPropertiesOutput() AggregateFunctionPropertiesOutput {
	return o
}

func (o AggregateFunctionPropertiesOutput) ToAggregateFunctionPropertiesOutputWithContext(ctx context.Context) AggregateFunctionPropertiesOutput {
	return o
}

// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
func (o AggregateFunctionPropertiesOutput) Binding() pulumi.AnyOutput {
	return o.ApplyT(func(v AggregateFunctionProperties) interface{} { return v.Binding }).(pulumi.AnyOutput)
}

func (o AggregateFunctionPropertiesOutput) Inputs() FunctionInputArrayOutput {
	return o.ApplyT(func(v AggregateFunctionProperties) []FunctionInput { return v.Inputs }).(FunctionInputArrayOutput)
}

// Describes the output of a function.
func (o AggregateFunctionPropertiesOutput) Output() FunctionOutputPtrOutput {
	return o.ApplyT(func(v AggregateFunctionProperties) *FunctionOutput { return v.Output }).(FunctionOutputPtrOutput)
}

// Indicates the type of function.
func (o AggregateFunctionPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AggregateFunctionProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an aggregate function.
type AggregateFunctionPropertiesResponse struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding interface{} `pulumi:"binding"`
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag   string                  `pulumi:"etag"`
	Inputs []FunctionInputResponse `pulumi:"inputs"`
	// Describes the output of a function.
	Output *FunctionOutputResponse `pulumi:"output"`
	// Indicates the type of function.
	Type string `pulumi:"type"`
}

// AggregateFunctionPropertiesResponseInput is an input type that accepts AggregateFunctionPropertiesResponseArgs and AggregateFunctionPropertiesResponseOutput values.
// You can construct a concrete instance of `AggregateFunctionPropertiesResponseInput` via:
//
//          AggregateFunctionPropertiesResponseArgs{...}
type AggregateFunctionPropertiesResponseInput interface {
	pulumi.Input

	ToAggregateFunctionPropertiesResponseOutput() AggregateFunctionPropertiesResponseOutput
	ToAggregateFunctionPropertiesResponseOutputWithContext(context.Context) AggregateFunctionPropertiesResponseOutput
}

// The properties that are associated with an aggregate function.
type AggregateFunctionPropertiesResponseArgs struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding pulumi.Input `pulumi:"binding"`
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag   pulumi.StringInput              `pulumi:"etag"`
	Inputs FunctionInputResponseArrayInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output FunctionOutputResponsePtrInput `pulumi:"output"`
	// Indicates the type of function.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AggregateFunctionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateFunctionPropertiesResponse)(nil)).Elem()
}

func (i AggregateFunctionPropertiesResponseArgs) ToAggregateFunctionPropertiesResponseOutput() AggregateFunctionPropertiesResponseOutput {
	return i.ToAggregateFunctionPropertiesResponseOutputWithContext(context.Background())
}

func (i AggregateFunctionPropertiesResponseArgs) ToAggregateFunctionPropertiesResponseOutputWithContext(ctx context.Context) AggregateFunctionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AggregateFunctionPropertiesResponseOutput)
}

// The properties that are associated with an aggregate function.
type AggregateFunctionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AggregateFunctionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AggregateFunctionPropertiesResponse)(nil)).Elem()
}

func (o AggregateFunctionPropertiesResponseOutput) ToAggregateFunctionPropertiesResponseOutput() AggregateFunctionPropertiesResponseOutput {
	return o
}

func (o AggregateFunctionPropertiesResponseOutput) ToAggregateFunctionPropertiesResponseOutputWithContext(ctx context.Context) AggregateFunctionPropertiesResponseOutput {
	return o
}

// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
func (o AggregateFunctionPropertiesResponseOutput) Binding() pulumi.AnyOutput {
	return o.ApplyT(func(v AggregateFunctionPropertiesResponse) interface{} { return v.Binding }).(pulumi.AnyOutput)
}

// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o AggregateFunctionPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AggregateFunctionPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

func (o AggregateFunctionPropertiesResponseOutput) Inputs() FunctionInputResponseArrayOutput {
	return o.ApplyT(func(v AggregateFunctionPropertiesResponse) []FunctionInputResponse { return v.Inputs }).(FunctionInputResponseArrayOutput)
}

// Describes the output of a function.
func (o AggregateFunctionPropertiesResponseOutput) Output() FunctionOutputResponsePtrOutput {
	return o.ApplyT(func(v AggregateFunctionPropertiesResponse) *FunctionOutputResponse { return v.Output }).(FunctionOutputResponsePtrOutput)
}

// Indicates the type of function.
func (o AggregateFunctionPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AggregateFunctionPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerialization struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AvroSerializationInput is an input type that accepts AvroSerializationArgs and AvroSerializationOutput values.
// You can construct a concrete instance of `AvroSerializationInput` via:
//
//          AvroSerializationArgs{...}
type AvroSerializationInput interface {
	pulumi.Input

	ToAvroSerializationOutput() AvroSerializationOutput
	ToAvroSerializationOutputWithContext(context.Context) AvroSerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerializationArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AvroSerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroSerialization)(nil)).Elem()
}

func (i AvroSerializationArgs) ToAvroSerializationOutput() AvroSerializationOutput {
	return i.ToAvroSerializationOutputWithContext(context.Background())
}

func (i AvroSerializationArgs) ToAvroSerializationOutputWithContext(ctx context.Context) AvroSerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvroSerializationOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerializationOutput struct{ *pulumi.OutputState }

func (AvroSerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroSerialization)(nil)).Elem()
}

func (o AvroSerializationOutput) ToAvroSerializationOutput() AvroSerializationOutput {
	return o
}

func (o AvroSerializationOutput) ToAvroSerializationOutputWithContext(ctx context.Context) AvroSerializationOutput {
	return o
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o AvroSerializationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AvroSerialization) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerializationResponse struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AvroSerializationResponseInput is an input type that accepts AvroSerializationResponseArgs and AvroSerializationResponseOutput values.
// You can construct a concrete instance of `AvroSerializationResponseInput` via:
//
//          AvroSerializationResponseArgs{...}
type AvroSerializationResponseInput interface {
	pulumi.Input

	ToAvroSerializationResponseOutput() AvroSerializationResponseOutput
	ToAvroSerializationResponseOutputWithContext(context.Context) AvroSerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerializationResponseArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AvroSerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroSerializationResponse)(nil)).Elem()
}

func (i AvroSerializationResponseArgs) ToAvroSerializationResponseOutput() AvroSerializationResponseOutput {
	return i.ToAvroSerializationResponseOutputWithContext(context.Background())
}

func (i AvroSerializationResponseArgs) ToAvroSerializationResponseOutputWithContext(ctx context.Context) AvroSerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AvroSerializationResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
type AvroSerializationResponseOutput struct{ *pulumi.OutputState }

func (AvroSerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AvroSerializationResponse)(nil)).Elem()
}

func (o AvroSerializationResponseOutput) ToAvroSerializationResponseOutput() AvroSerializationResponseOutput {
	return o
}

func (o AvroSerializationResponseOutput) ToAvroSerializationResponseOutputWithContext(ctx context.Context) AvroSerializationResponseOutput {
	return o
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o AvroSerializationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AvroSerializationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSource struct {
	// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
	FilePathPrefix *string `pulumi:"filePathPrefix"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken *string `pulumi:"refreshToken"`
	// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
	TenantId *string `pulumi:"tenantId"`
	// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName *string `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName *string `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreOutputDataSourceInput is an input type that accepts AzureDataLakeStoreOutputDataSourceArgs and AzureDataLakeStoreOutputDataSourceOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreOutputDataSourceInput` via:
//
//          AzureDataLakeStoreOutputDataSourceArgs{...}
type AzureDataLakeStoreOutputDataSourceInput interface {
	pulumi.Input

	ToAzureDataLakeStoreOutputDataSourceOutput() AzureDataLakeStoreOutputDataSourceOutput
	ToAzureDataLakeStoreOutputDataSourceOutputWithContext(context.Context) AzureDataLakeStoreOutputDataSourceOutput
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSourceArgs struct {
	// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
	FilePathPrefix pulumi.StringPtrInput `pulumi:"filePathPrefix"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName pulumi.StringPtrInput `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName pulumi.StringPtrInput `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreOutputDataSource)(nil)).Elem()
}

func (i AzureDataLakeStoreOutputDataSourceArgs) ToAzureDataLakeStoreOutputDataSourceOutput() AzureDataLakeStoreOutputDataSourceOutput {
	return i.ToAzureDataLakeStoreOutputDataSourceOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreOutputDataSourceArgs) ToAzureDataLakeStoreOutputDataSourceOutputWithContext(ctx context.Context) AzureDataLakeStoreOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreOutputDataSourceOutput)
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreOutputDataSource)(nil)).Elem()
}

func (o AzureDataLakeStoreOutputDataSourceOutput) ToAzureDataLakeStoreOutputDataSourceOutput() AzureDataLakeStoreOutputDataSourceOutput {
	return o
}

func (o AzureDataLakeStoreOutputDataSourceOutput) ToAzureDataLakeStoreOutputDataSourceOutputWithContext(ctx context.Context) AzureDataLakeStoreOutputDataSourceOutput {
	return o
}

// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o AzureDataLakeStoreOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
func (o AzureDataLakeStoreOutputDataSourceOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceOutput) FilePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.FilePathPrefix }).(pulumi.StringPtrOutput)
}

// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
func (o AzureDataLakeStoreOutputDataSourceOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o AzureDataLakeStoreOutputDataSourceOutput) TokenUserDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.TokenUserDisplayName }).(pulumi.StringPtrOutput)
}

// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o AzureDataLakeStoreOutputDataSourceOutput) TokenUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) *string { return v.TokenUserPrincipalName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSourceResponse struct {
	// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
	FilePathPrefix *string `pulumi:"filePathPrefix"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken *string `pulumi:"refreshToken"`
	// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
	TenantId *string `pulumi:"tenantId"`
	// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName *string `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName *string `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureDataLakeStoreOutputDataSourceResponseInput is an input type that accepts AzureDataLakeStoreOutputDataSourceResponseArgs and AzureDataLakeStoreOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureDataLakeStoreOutputDataSourceResponseInput` via:
//
//          AzureDataLakeStoreOutputDataSourceResponseArgs{...}
type AzureDataLakeStoreOutputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureDataLakeStoreOutputDataSourceResponseOutput() AzureDataLakeStoreOutputDataSourceResponseOutput
	ToAzureDataLakeStoreOutputDataSourceResponseOutputWithContext(context.Context) AzureDataLakeStoreOutputDataSourceResponseOutput
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSourceResponseArgs struct {
	// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
	FilePathPrefix pulumi.StringPtrInput `pulumi:"filePathPrefix"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName pulumi.StringPtrInput `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName pulumi.StringPtrInput `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureDataLakeStoreOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreOutputDataSourceResponse)(nil)).Elem()
}

func (i AzureDataLakeStoreOutputDataSourceResponseArgs) ToAzureDataLakeStoreOutputDataSourceResponseOutput() AzureDataLakeStoreOutputDataSourceResponseOutput {
	return i.ToAzureDataLakeStoreOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureDataLakeStoreOutputDataSourceResponseArgs) ToAzureDataLakeStoreOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureDataLakeStoreOutputDataSourceResponseOutput)
}

// Describes an Azure Data Lake Store output data source.
type AzureDataLakeStoreOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureDataLakeStoreOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureDataLakeStoreOutputDataSourceResponse)(nil)).Elem()
}

func (o AzureDataLakeStoreOutputDataSourceResponseOutput) ToAzureDataLakeStoreOutputDataSourceResponseOutput() AzureDataLakeStoreOutputDataSourceResponseOutput {
	return o
}

func (o AzureDataLakeStoreOutputDataSourceResponseOutput) ToAzureDataLakeStoreOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureDataLakeStoreOutputDataSourceResponseOutput {
	return o
}

// The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) FilePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.FilePathPrefix }).(pulumi.StringPtrOutput)
}

// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) TokenUserDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.TokenUserDisplayName }).(pulumi.StringPtrOutput)
}

// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) TokenUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) *string { return v.TokenUserPrincipalName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureDataLakeStoreOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureDataLakeStoreOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSource struct {
	// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
	ApiKey *string `pulumi:"apiKey"`
	// The name of your Azure Functions app.
	FunctionAppName *string `pulumi:"functionAppName"`
	// The name of the function in your Azure Functions app.
	FunctionName *string `pulumi:"functionName"`
	// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
	MaxBatchCount *float64 `pulumi:"maxBatchCount"`
	// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
	MaxBatchSize *float64 `pulumi:"maxBatchSize"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureFunctionOutputDataSourceInput is an input type that accepts AzureFunctionOutputDataSourceArgs and AzureFunctionOutputDataSourceOutput values.
// You can construct a concrete instance of `AzureFunctionOutputDataSourceInput` via:
//
//          AzureFunctionOutputDataSourceArgs{...}
type AzureFunctionOutputDataSourceInput interface {
	pulumi.Input

	ToAzureFunctionOutputDataSourceOutput() AzureFunctionOutputDataSourceOutput
	ToAzureFunctionOutputDataSourceOutputWithContext(context.Context) AzureFunctionOutputDataSourceOutput
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSourceArgs struct {
	// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The name of your Azure Functions app.
	FunctionAppName pulumi.StringPtrInput `pulumi:"functionAppName"`
	// The name of the function in your Azure Functions app.
	FunctionName pulumi.StringPtrInput `pulumi:"functionName"`
	// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
	MaxBatchCount pulumi.Float64PtrInput `pulumi:"maxBatchCount"`
	// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
	MaxBatchSize pulumi.Float64PtrInput `pulumi:"maxBatchSize"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureFunctionOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFunctionOutputDataSource)(nil)).Elem()
}

func (i AzureFunctionOutputDataSourceArgs) ToAzureFunctionOutputDataSourceOutput() AzureFunctionOutputDataSourceOutput {
	return i.ToAzureFunctionOutputDataSourceOutputWithContext(context.Background())
}

func (i AzureFunctionOutputDataSourceArgs) ToAzureFunctionOutputDataSourceOutputWithContext(ctx context.Context) AzureFunctionOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFunctionOutputDataSourceOutput)
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureFunctionOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFunctionOutputDataSource)(nil)).Elem()
}

func (o AzureFunctionOutputDataSourceOutput) ToAzureFunctionOutputDataSourceOutput() AzureFunctionOutputDataSourceOutput {
	return o
}

func (o AzureFunctionOutputDataSourceOutput) ToAzureFunctionOutputDataSourceOutputWithContext(ctx context.Context) AzureFunctionOutputDataSourceOutput {
	return o
}

// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
func (o AzureFunctionOutputDataSourceOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The name of your Azure Functions app.
func (o AzureFunctionOutputDataSourceOutput) FunctionAppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) *string { return v.FunctionAppName }).(pulumi.StringPtrOutput)
}

// The name of the function in your Azure Functions app.
func (o AzureFunctionOutputDataSourceOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) *string { return v.FunctionName }).(pulumi.StringPtrOutput)
}

// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
func (o AzureFunctionOutputDataSourceOutput) MaxBatchCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) *float64 { return v.MaxBatchCount }).(pulumi.Float64PtrOutput)
}

// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
func (o AzureFunctionOutputDataSourceOutput) MaxBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) *float64 { return v.MaxBatchSize }).(pulumi.Float64PtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureFunctionOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSourceResponse struct {
	// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
	ApiKey *string `pulumi:"apiKey"`
	// The name of your Azure Functions app.
	FunctionAppName *string `pulumi:"functionAppName"`
	// The name of the function in your Azure Functions app.
	FunctionName *string `pulumi:"functionName"`
	// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
	MaxBatchCount *float64 `pulumi:"maxBatchCount"`
	// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
	MaxBatchSize *float64 `pulumi:"maxBatchSize"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureFunctionOutputDataSourceResponseInput is an input type that accepts AzureFunctionOutputDataSourceResponseArgs and AzureFunctionOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureFunctionOutputDataSourceResponseInput` via:
//
//          AzureFunctionOutputDataSourceResponseArgs{...}
type AzureFunctionOutputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureFunctionOutputDataSourceResponseOutput() AzureFunctionOutputDataSourceResponseOutput
	ToAzureFunctionOutputDataSourceResponseOutputWithContext(context.Context) AzureFunctionOutputDataSourceResponseOutput
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSourceResponseArgs struct {
	// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// The name of your Azure Functions app.
	FunctionAppName pulumi.StringPtrInput `pulumi:"functionAppName"`
	// The name of the function in your Azure Functions app.
	FunctionName pulumi.StringPtrInput `pulumi:"functionName"`
	// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
	MaxBatchCount pulumi.Float64PtrInput `pulumi:"maxBatchCount"`
	// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
	MaxBatchSize pulumi.Float64PtrInput `pulumi:"maxBatchSize"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureFunctionOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFunctionOutputDataSourceResponse)(nil)).Elem()
}

func (i AzureFunctionOutputDataSourceResponseArgs) ToAzureFunctionOutputDataSourceResponseOutput() AzureFunctionOutputDataSourceResponseOutput {
	return i.ToAzureFunctionOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureFunctionOutputDataSourceResponseArgs) ToAzureFunctionOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureFunctionOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFunctionOutputDataSourceResponseOutput)
}

// Defines the metadata of AzureFunctionOutputDataSource
type AzureFunctionOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureFunctionOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFunctionOutputDataSourceResponse)(nil)).Elem()
}

func (o AzureFunctionOutputDataSourceResponseOutput) ToAzureFunctionOutputDataSourceResponseOutput() AzureFunctionOutputDataSourceResponseOutput {
	return o
}

func (o AzureFunctionOutputDataSourceResponseOutput) ToAzureFunctionOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureFunctionOutputDataSourceResponseOutput {
	return o
}

// If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
func (o AzureFunctionOutputDataSourceResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The name of your Azure Functions app.
func (o AzureFunctionOutputDataSourceResponseOutput) FunctionAppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) *string { return v.FunctionAppName }).(pulumi.StringPtrOutput)
}

// The name of the function in your Azure Functions app.
func (o AzureFunctionOutputDataSourceResponseOutput) FunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) *string { return v.FunctionName }).(pulumi.StringPtrOutput)
}

// A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
func (o AzureFunctionOutputDataSourceResponseOutput) MaxBatchCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) *float64 { return v.MaxBatchCount }).(pulumi.Float64PtrOutput)
}

// A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
func (o AzureFunctionOutputDataSourceResponseOutput) MaxBatchSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) *float64 { return v.MaxBatchSize }).(pulumi.Float64PtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureFunctionOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFunctionOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBinding struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey *string `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning web service.
	Endpoint *string `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning web service endpoint.
	Inputs []AzureMachineLearningServiceInputColumn `pulumi:"inputs"`
	// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
	NumberOfParallelRequests *int `pulumi:"numberOfParallelRequests"`
	// A list of outputs from the Azure Machine Learning web service endpoint execution.
	Outputs []AzureMachineLearningServiceOutputColumn `pulumi:"outputs"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// AzureMachineLearningServiceFunctionBindingInput is an input type that accepts AzureMachineLearningServiceFunctionBindingArgs and AzureMachineLearningServiceFunctionBindingOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceFunctionBindingInput` via:
//
//          AzureMachineLearningServiceFunctionBindingArgs{...}
type AzureMachineLearningServiceFunctionBindingInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceFunctionBindingOutput() AzureMachineLearningServiceFunctionBindingOutput
	ToAzureMachineLearningServiceFunctionBindingOutputWithContext(context.Context) AzureMachineLearningServiceFunctionBindingOutput
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBindingArgs struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning web service.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning web service endpoint.
	Inputs AzureMachineLearningServiceInputColumnArrayInput `pulumi:"inputs"`
	// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
	NumberOfParallelRequests pulumi.IntPtrInput `pulumi:"numberOfParallelRequests"`
	// A list of outputs from the Azure Machine Learning web service endpoint execution.
	Outputs AzureMachineLearningServiceOutputColumnArrayInput `pulumi:"outputs"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMachineLearningServiceFunctionBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceFunctionBinding)(nil)).Elem()
}

func (i AzureMachineLearningServiceFunctionBindingArgs) ToAzureMachineLearningServiceFunctionBindingOutput() AzureMachineLearningServiceFunctionBindingOutput {
	return i.ToAzureMachineLearningServiceFunctionBindingOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceFunctionBindingArgs) ToAzureMachineLearningServiceFunctionBindingOutputWithContext(ctx context.Context) AzureMachineLearningServiceFunctionBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceFunctionBindingOutput)
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBindingOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceFunctionBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceFunctionBinding)(nil)).Elem()
}

func (o AzureMachineLearningServiceFunctionBindingOutput) ToAzureMachineLearningServiceFunctionBindingOutput() AzureMachineLearningServiceFunctionBindingOutput {
	return o
}

func (o AzureMachineLearningServiceFunctionBindingOutput) ToAzureMachineLearningServiceFunctionBindingOutputWithContext(ctx context.Context) AzureMachineLearningServiceFunctionBindingOutput {
	return o
}

// The API key used to authenticate with Request-Response endpoint.
func (o AzureMachineLearningServiceFunctionBindingOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
func (o AzureMachineLearningServiceFunctionBindingOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The Request-Response execute endpoint of the Azure Machine Learning web service.
func (o AzureMachineLearningServiceFunctionBindingOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The inputs for the Azure Machine Learning web service endpoint.
func (o AzureMachineLearningServiceFunctionBindingOutput) Inputs() AzureMachineLearningServiceInputColumnArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) []AzureMachineLearningServiceInputColumn {
		return v.Inputs
	}).(AzureMachineLearningServiceInputColumnArrayOutput)
}

// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
func (o AzureMachineLearningServiceFunctionBindingOutput) NumberOfParallelRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) *int { return v.NumberOfParallelRequests }).(pulumi.IntPtrOutput)
}

// A list of outputs from the Azure Machine Learning web service endpoint execution.
func (o AzureMachineLearningServiceFunctionBindingOutput) Outputs() AzureMachineLearningServiceOutputColumnArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) []AzureMachineLearningServiceOutputColumn {
		return v.Outputs
	}).(AzureMachineLearningServiceOutputColumnArrayOutput)
}

// Indicates the function binding type.
func (o AzureMachineLearningServiceFunctionBindingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBinding) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBindingResponse struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey *string `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning web service.
	Endpoint *string `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning web service endpoint.
	Inputs []AzureMachineLearningServiceInputColumnResponse `pulumi:"inputs"`
	// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
	NumberOfParallelRequests *int `pulumi:"numberOfParallelRequests"`
	// A list of outputs from the Azure Machine Learning web service endpoint execution.
	Outputs []AzureMachineLearningServiceOutputColumnResponse `pulumi:"outputs"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// AzureMachineLearningServiceFunctionBindingResponseInput is an input type that accepts AzureMachineLearningServiceFunctionBindingResponseArgs and AzureMachineLearningServiceFunctionBindingResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceFunctionBindingResponseInput` via:
//
//          AzureMachineLearningServiceFunctionBindingResponseArgs{...}
type AzureMachineLearningServiceFunctionBindingResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceFunctionBindingResponseOutput() AzureMachineLearningServiceFunctionBindingResponseOutput
	ToAzureMachineLearningServiceFunctionBindingResponseOutputWithContext(context.Context) AzureMachineLearningServiceFunctionBindingResponseOutput
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBindingResponseArgs struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning web service.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning web service endpoint.
	Inputs AzureMachineLearningServiceInputColumnResponseArrayInput `pulumi:"inputs"`
	// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
	NumberOfParallelRequests pulumi.IntPtrInput `pulumi:"numberOfParallelRequests"`
	// A list of outputs from the Azure Machine Learning web service endpoint execution.
	Outputs AzureMachineLearningServiceOutputColumnResponseArrayInput `pulumi:"outputs"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMachineLearningServiceFunctionBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceFunctionBindingResponse)(nil)).Elem()
}

func (i AzureMachineLearningServiceFunctionBindingResponseArgs) ToAzureMachineLearningServiceFunctionBindingResponseOutput() AzureMachineLearningServiceFunctionBindingResponseOutput {
	return i.ToAzureMachineLearningServiceFunctionBindingResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceFunctionBindingResponseArgs) ToAzureMachineLearningServiceFunctionBindingResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceFunctionBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceFunctionBindingResponseOutput)
}

// The binding to an Azure Machine Learning web service.
type AzureMachineLearningServiceFunctionBindingResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceFunctionBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceFunctionBindingResponse)(nil)).Elem()
}

func (o AzureMachineLearningServiceFunctionBindingResponseOutput) ToAzureMachineLearningServiceFunctionBindingResponseOutput() AzureMachineLearningServiceFunctionBindingResponseOutput {
	return o
}

func (o AzureMachineLearningServiceFunctionBindingResponseOutput) ToAzureMachineLearningServiceFunctionBindingResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceFunctionBindingResponseOutput {
	return o
}

// The API key used to authenticate with Request-Response endpoint.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The Request-Response execute endpoint of the Azure Machine Learning web service.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The inputs for the Azure Machine Learning web service endpoint.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) Inputs() AzureMachineLearningServiceInputColumnResponseArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) []AzureMachineLearningServiceInputColumnResponse {
		return v.Inputs
	}).(AzureMachineLearningServiceInputColumnResponseArrayOutput)
}

// The number of parallel requests that will be sent per partition of your job to the machine learning service. Default is 1.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) NumberOfParallelRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) *int { return v.NumberOfParallelRequests }).(pulumi.IntPtrOutput)
}

// A list of outputs from the Azure Machine Learning web service endpoint execution.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) Outputs() AzureMachineLearningServiceOutputColumnResponseArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) []AzureMachineLearningServiceOutputColumnResponse {
		return v.Outputs
	}).(AzureMachineLearningServiceOutputColumnResponseArrayOutput)
}

// Indicates the function binding type.
func (o AzureMachineLearningServiceFunctionBindingResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceFunctionBindingResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumn struct {
	// The (Azure Machine Learning supported) data type of the input column.
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the input column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningServiceInputColumnInput is an input type that accepts AzureMachineLearningServiceInputColumnArgs and AzureMachineLearningServiceInputColumnOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceInputColumnInput` via:
//
//          AzureMachineLearningServiceInputColumnArgs{...}
type AzureMachineLearningServiceInputColumnInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceInputColumnOutput() AzureMachineLearningServiceInputColumnOutput
	ToAzureMachineLearningServiceInputColumnOutputWithContext(context.Context) AzureMachineLearningServiceInputColumnOutput
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumnArgs struct {
	// The (Azure Machine Learning supported) data type of the input column.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the input column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningServiceInputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceInputColumn)(nil)).Elem()
}

func (i AzureMachineLearningServiceInputColumnArgs) ToAzureMachineLearningServiceInputColumnOutput() AzureMachineLearningServiceInputColumnOutput {
	return i.ToAzureMachineLearningServiceInputColumnOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceInputColumnArgs) ToAzureMachineLearningServiceInputColumnOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceInputColumnOutput)
}

// AzureMachineLearningServiceInputColumnArrayInput is an input type that accepts AzureMachineLearningServiceInputColumnArray and AzureMachineLearningServiceInputColumnArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceInputColumnArrayInput` via:
//
//          AzureMachineLearningServiceInputColumnArray{ AzureMachineLearningServiceInputColumnArgs{...} }
type AzureMachineLearningServiceInputColumnArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceInputColumnArrayOutput() AzureMachineLearningServiceInputColumnArrayOutput
	ToAzureMachineLearningServiceInputColumnArrayOutputWithContext(context.Context) AzureMachineLearningServiceInputColumnArrayOutput
}

type AzureMachineLearningServiceInputColumnArray []AzureMachineLearningServiceInputColumnInput

func (AzureMachineLearningServiceInputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceInputColumn)(nil)).Elem()
}

func (i AzureMachineLearningServiceInputColumnArray) ToAzureMachineLearningServiceInputColumnArrayOutput() AzureMachineLearningServiceInputColumnArrayOutput {
	return i.ToAzureMachineLearningServiceInputColumnArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceInputColumnArray) ToAzureMachineLearningServiceInputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceInputColumnArrayOutput)
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumnOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceInputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceInputColumn)(nil)).Elem()
}

func (o AzureMachineLearningServiceInputColumnOutput) ToAzureMachineLearningServiceInputColumnOutput() AzureMachineLearningServiceInputColumnOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnOutput) ToAzureMachineLearningServiceInputColumnOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the input column.
func (o AzureMachineLearningServiceInputColumnOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumn) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningServiceInputColumnOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumn) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the input column.
func (o AzureMachineLearningServiceInputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningServiceInputColumnArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceInputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceInputColumn)(nil)).Elem()
}

func (o AzureMachineLearningServiceInputColumnArrayOutput) ToAzureMachineLearningServiceInputColumnArrayOutput() AzureMachineLearningServiceInputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnArrayOutput) ToAzureMachineLearningServiceInputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningServiceInputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningServiceInputColumn {
		return vs[0].([]AzureMachineLearningServiceInputColumn)[vs[1].(int)]
	}).(AzureMachineLearningServiceInputColumnOutput)
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumnResponse struct {
	// The (Azure Machine Learning supported) data type of the input column.
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the input column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningServiceInputColumnResponseInput is an input type that accepts AzureMachineLearningServiceInputColumnResponseArgs and AzureMachineLearningServiceInputColumnResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceInputColumnResponseInput` via:
//
//          AzureMachineLearningServiceInputColumnResponseArgs{...}
type AzureMachineLearningServiceInputColumnResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceInputColumnResponseOutput() AzureMachineLearningServiceInputColumnResponseOutput
	ToAzureMachineLearningServiceInputColumnResponseOutputWithContext(context.Context) AzureMachineLearningServiceInputColumnResponseOutput
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumnResponseArgs struct {
	// The (Azure Machine Learning supported) data type of the input column.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the input column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningServiceInputColumnResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceInputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningServiceInputColumnResponseArgs) ToAzureMachineLearningServiceInputColumnResponseOutput() AzureMachineLearningServiceInputColumnResponseOutput {
	return i.ToAzureMachineLearningServiceInputColumnResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceInputColumnResponseArgs) ToAzureMachineLearningServiceInputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceInputColumnResponseOutput)
}

// AzureMachineLearningServiceInputColumnResponseArrayInput is an input type that accepts AzureMachineLearningServiceInputColumnResponseArray and AzureMachineLearningServiceInputColumnResponseArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceInputColumnResponseArrayInput` via:
//
//          AzureMachineLearningServiceInputColumnResponseArray{ AzureMachineLearningServiceInputColumnResponseArgs{...} }
type AzureMachineLearningServiceInputColumnResponseArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceInputColumnResponseArrayOutput() AzureMachineLearningServiceInputColumnResponseArrayOutput
	ToAzureMachineLearningServiceInputColumnResponseArrayOutputWithContext(context.Context) AzureMachineLearningServiceInputColumnResponseArrayOutput
}

type AzureMachineLearningServiceInputColumnResponseArray []AzureMachineLearningServiceInputColumnResponseInput

func (AzureMachineLearningServiceInputColumnResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceInputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningServiceInputColumnResponseArray) ToAzureMachineLearningServiceInputColumnResponseArrayOutput() AzureMachineLearningServiceInputColumnResponseArrayOutput {
	return i.ToAzureMachineLearningServiceInputColumnResponseArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceInputColumnResponseArray) ToAzureMachineLearningServiceInputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceInputColumnResponseArrayOutput)
}

// Describes an input column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceInputColumnResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceInputColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceInputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningServiceInputColumnResponseOutput) ToAzureMachineLearningServiceInputColumnResponseOutput() AzureMachineLearningServiceInputColumnResponseOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnResponseOutput) ToAzureMachineLearningServiceInputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnResponseOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the input column.
func (o AzureMachineLearningServiceInputColumnResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumnResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningServiceInputColumnResponseOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumnResponse) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the input column.
func (o AzureMachineLearningServiceInputColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceInputColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningServiceInputColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceInputColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceInputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningServiceInputColumnResponseArrayOutput) ToAzureMachineLearningServiceInputColumnResponseArrayOutput() AzureMachineLearningServiceInputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnResponseArrayOutput) ToAzureMachineLearningServiceInputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceInputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningServiceInputColumnResponseArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningServiceInputColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningServiceInputColumnResponse {
		return vs[0].([]AzureMachineLearningServiceInputColumnResponse)[vs[1].(int)]
	}).(AzureMachineLearningServiceInputColumnResponseOutput)
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumn struct {
	// The (Azure Machine Learning supported) data type of the output column.
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the output column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningServiceOutputColumnInput is an input type that accepts AzureMachineLearningServiceOutputColumnArgs and AzureMachineLearningServiceOutputColumnOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceOutputColumnInput` via:
//
//          AzureMachineLearningServiceOutputColumnArgs{...}
type AzureMachineLearningServiceOutputColumnInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceOutputColumnOutput() AzureMachineLearningServiceOutputColumnOutput
	ToAzureMachineLearningServiceOutputColumnOutputWithContext(context.Context) AzureMachineLearningServiceOutputColumnOutput
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumnArgs struct {
	// The (Azure Machine Learning supported) data type of the output column.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the output column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningServiceOutputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceOutputColumn)(nil)).Elem()
}

func (i AzureMachineLearningServiceOutputColumnArgs) ToAzureMachineLearningServiceOutputColumnOutput() AzureMachineLearningServiceOutputColumnOutput {
	return i.ToAzureMachineLearningServiceOutputColumnOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceOutputColumnArgs) ToAzureMachineLearningServiceOutputColumnOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceOutputColumnOutput)
}

// AzureMachineLearningServiceOutputColumnArrayInput is an input type that accepts AzureMachineLearningServiceOutputColumnArray and AzureMachineLearningServiceOutputColumnArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceOutputColumnArrayInput` via:
//
//          AzureMachineLearningServiceOutputColumnArray{ AzureMachineLearningServiceOutputColumnArgs{...} }
type AzureMachineLearningServiceOutputColumnArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceOutputColumnArrayOutput() AzureMachineLearningServiceOutputColumnArrayOutput
	ToAzureMachineLearningServiceOutputColumnArrayOutputWithContext(context.Context) AzureMachineLearningServiceOutputColumnArrayOutput
}

type AzureMachineLearningServiceOutputColumnArray []AzureMachineLearningServiceOutputColumnInput

func (AzureMachineLearningServiceOutputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceOutputColumn)(nil)).Elem()
}

func (i AzureMachineLearningServiceOutputColumnArray) ToAzureMachineLearningServiceOutputColumnArrayOutput() AzureMachineLearningServiceOutputColumnArrayOutput {
	return i.ToAzureMachineLearningServiceOutputColumnArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceOutputColumnArray) ToAzureMachineLearningServiceOutputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceOutputColumnArrayOutput)
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumnOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceOutputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceOutputColumn)(nil)).Elem()
}

func (o AzureMachineLearningServiceOutputColumnOutput) ToAzureMachineLearningServiceOutputColumnOutput() AzureMachineLearningServiceOutputColumnOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnOutput) ToAzureMachineLearningServiceOutputColumnOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the output column.
func (o AzureMachineLearningServiceOutputColumnOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumn) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningServiceOutputColumnOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumn) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the output column.
func (o AzureMachineLearningServiceOutputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningServiceOutputColumnArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceOutputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceOutputColumn)(nil)).Elem()
}

func (o AzureMachineLearningServiceOutputColumnArrayOutput) ToAzureMachineLearningServiceOutputColumnArrayOutput() AzureMachineLearningServiceOutputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnArrayOutput) ToAzureMachineLearningServiceOutputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningServiceOutputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningServiceOutputColumn {
		return vs[0].([]AzureMachineLearningServiceOutputColumn)[vs[1].(int)]
	}).(AzureMachineLearningServiceOutputColumnOutput)
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumnResponse struct {
	// The (Azure Machine Learning supported) data type of the output column.
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the output column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningServiceOutputColumnResponseInput is an input type that accepts AzureMachineLearningServiceOutputColumnResponseArgs and AzureMachineLearningServiceOutputColumnResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceOutputColumnResponseInput` via:
//
//          AzureMachineLearningServiceOutputColumnResponseArgs{...}
type AzureMachineLearningServiceOutputColumnResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceOutputColumnResponseOutput() AzureMachineLearningServiceOutputColumnResponseOutput
	ToAzureMachineLearningServiceOutputColumnResponseOutputWithContext(context.Context) AzureMachineLearningServiceOutputColumnResponseOutput
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumnResponseArgs struct {
	// The (Azure Machine Learning supported) data type of the output column.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the output column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningServiceOutputColumnResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceOutputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningServiceOutputColumnResponseArgs) ToAzureMachineLearningServiceOutputColumnResponseOutput() AzureMachineLearningServiceOutputColumnResponseOutput {
	return i.ToAzureMachineLearningServiceOutputColumnResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceOutputColumnResponseArgs) ToAzureMachineLearningServiceOutputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceOutputColumnResponseOutput)
}

// AzureMachineLearningServiceOutputColumnResponseArrayInput is an input type that accepts AzureMachineLearningServiceOutputColumnResponseArray and AzureMachineLearningServiceOutputColumnResponseArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningServiceOutputColumnResponseArrayInput` via:
//
//          AzureMachineLearningServiceOutputColumnResponseArray{ AzureMachineLearningServiceOutputColumnResponseArgs{...} }
type AzureMachineLearningServiceOutputColumnResponseArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningServiceOutputColumnResponseArrayOutput() AzureMachineLearningServiceOutputColumnResponseArrayOutput
	ToAzureMachineLearningServiceOutputColumnResponseArrayOutputWithContext(context.Context) AzureMachineLearningServiceOutputColumnResponseArrayOutput
}

type AzureMachineLearningServiceOutputColumnResponseArray []AzureMachineLearningServiceOutputColumnResponseInput

func (AzureMachineLearningServiceOutputColumnResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceOutputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningServiceOutputColumnResponseArray) ToAzureMachineLearningServiceOutputColumnResponseArrayOutput() AzureMachineLearningServiceOutputColumnResponseArrayOutput {
	return i.ToAzureMachineLearningServiceOutputColumnResponseArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningServiceOutputColumnResponseArray) ToAzureMachineLearningServiceOutputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningServiceOutputColumnResponseArrayOutput)
}

// Describes an output column for the Azure Machine Learning web service endpoint.
type AzureMachineLearningServiceOutputColumnResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceOutputColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningServiceOutputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningServiceOutputColumnResponseOutput) ToAzureMachineLearningServiceOutputColumnResponseOutput() AzureMachineLearningServiceOutputColumnResponseOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnResponseOutput) ToAzureMachineLearningServiceOutputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnResponseOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the output column.
func (o AzureMachineLearningServiceOutputColumnResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumnResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningServiceOutputColumnResponseOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumnResponse) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the output column.
func (o AzureMachineLearningServiceOutputColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningServiceOutputColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningServiceOutputColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningServiceOutputColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningServiceOutputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningServiceOutputColumnResponseArrayOutput) ToAzureMachineLearningServiceOutputColumnResponseArrayOutput() AzureMachineLearningServiceOutputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnResponseArrayOutput) ToAzureMachineLearningServiceOutputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningServiceOutputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningServiceOutputColumnResponseArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningServiceOutputColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningServiceOutputColumnResponse {
		return vs[0].([]AzureMachineLearningServiceOutputColumnResponse)[vs[1].(int)]
	}).(AzureMachineLearningServiceOutputColumnResponseOutput)
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBinding struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey *string `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
	Endpoint *string `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning Studio endpoint.
	Inputs *AzureMachineLearningStudioInputs `pulumi:"inputs"`
	// A list of outputs from the Azure Machine Learning Studio endpoint execution.
	Outputs []AzureMachineLearningStudioOutputColumn `pulumi:"outputs"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// AzureMachineLearningStudioFunctionBindingInput is an input type that accepts AzureMachineLearningStudioFunctionBindingArgs and AzureMachineLearningStudioFunctionBindingOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioFunctionBindingInput` via:
//
//          AzureMachineLearningStudioFunctionBindingArgs{...}
type AzureMachineLearningStudioFunctionBindingInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioFunctionBindingOutput() AzureMachineLearningStudioFunctionBindingOutput
	ToAzureMachineLearningStudioFunctionBindingOutputWithContext(context.Context) AzureMachineLearningStudioFunctionBindingOutput
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBindingArgs struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning Studio endpoint.
	Inputs AzureMachineLearningStudioInputsPtrInput `pulumi:"inputs"`
	// A list of outputs from the Azure Machine Learning Studio endpoint execution.
	Outputs AzureMachineLearningStudioOutputColumnArrayInput `pulumi:"outputs"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMachineLearningStudioFunctionBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioFunctionBinding)(nil)).Elem()
}

func (i AzureMachineLearningStudioFunctionBindingArgs) ToAzureMachineLearningStudioFunctionBindingOutput() AzureMachineLearningStudioFunctionBindingOutput {
	return i.ToAzureMachineLearningStudioFunctionBindingOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioFunctionBindingArgs) ToAzureMachineLearningStudioFunctionBindingOutputWithContext(ctx context.Context) AzureMachineLearningStudioFunctionBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioFunctionBindingOutput)
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBindingOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioFunctionBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioFunctionBinding)(nil)).Elem()
}

func (o AzureMachineLearningStudioFunctionBindingOutput) ToAzureMachineLearningStudioFunctionBindingOutput() AzureMachineLearningStudioFunctionBindingOutput {
	return o
}

func (o AzureMachineLearningStudioFunctionBindingOutput) ToAzureMachineLearningStudioFunctionBindingOutputWithContext(ctx context.Context) AzureMachineLearningStudioFunctionBindingOutput {
	return o
}

// The API key used to authenticate with Request-Response endpoint.
func (o AzureMachineLearningStudioFunctionBindingOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
func (o AzureMachineLearningStudioFunctionBindingOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
func (o AzureMachineLearningStudioFunctionBindingOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioFunctionBindingOutput) Inputs() AzureMachineLearningStudioInputsPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) *AzureMachineLearningStudioInputs { return v.Inputs }).(AzureMachineLearningStudioInputsPtrOutput)
}

// A list of outputs from the Azure Machine Learning Studio endpoint execution.
func (o AzureMachineLearningStudioFunctionBindingOutput) Outputs() AzureMachineLearningStudioOutputColumnArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) []AzureMachineLearningStudioOutputColumn {
		return v.Outputs
	}).(AzureMachineLearningStudioOutputColumnArrayOutput)
}

// Indicates the function binding type.
func (o AzureMachineLearningStudioFunctionBindingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBinding) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBindingResponse struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey *string `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize *int `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
	Endpoint *string `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning Studio endpoint.
	Inputs *AzureMachineLearningStudioInputsResponse `pulumi:"inputs"`
	// A list of outputs from the Azure Machine Learning Studio endpoint execution.
	Outputs []AzureMachineLearningStudioOutputColumnResponse `pulumi:"outputs"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// AzureMachineLearningStudioFunctionBindingResponseInput is an input type that accepts AzureMachineLearningStudioFunctionBindingResponseArgs and AzureMachineLearningStudioFunctionBindingResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioFunctionBindingResponseInput` via:
//
//          AzureMachineLearningStudioFunctionBindingResponseArgs{...}
type AzureMachineLearningStudioFunctionBindingResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioFunctionBindingResponseOutput() AzureMachineLearningStudioFunctionBindingResponseOutput
	ToAzureMachineLearningStudioFunctionBindingResponseOutputWithContext(context.Context) AzureMachineLearningStudioFunctionBindingResponseOutput
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBindingResponseArgs struct {
	// The API key used to authenticate with Request-Response endpoint.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The inputs for the Azure Machine Learning Studio endpoint.
	Inputs AzureMachineLearningStudioInputsResponsePtrInput `pulumi:"inputs"`
	// A list of outputs from the Azure Machine Learning Studio endpoint execution.
	Outputs AzureMachineLearningStudioOutputColumnResponseArrayInput `pulumi:"outputs"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureMachineLearningStudioFunctionBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioFunctionBindingResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioFunctionBindingResponseArgs) ToAzureMachineLearningStudioFunctionBindingResponseOutput() AzureMachineLearningStudioFunctionBindingResponseOutput {
	return i.ToAzureMachineLearningStudioFunctionBindingResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioFunctionBindingResponseArgs) ToAzureMachineLearningStudioFunctionBindingResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioFunctionBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioFunctionBindingResponseOutput)
}

// The binding to an Azure Machine Learning Studio.
type AzureMachineLearningStudioFunctionBindingResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioFunctionBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioFunctionBindingResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioFunctionBindingResponseOutput) ToAzureMachineLearningStudioFunctionBindingResponseOutput() AzureMachineLearningStudioFunctionBindingResponseOutput {
	return o
}

func (o AzureMachineLearningStudioFunctionBindingResponseOutput) ToAzureMachineLearningStudioFunctionBindingResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioFunctionBindingResponseOutput {
	return o
}

// The API key used to authenticate with Request-Response endpoint.
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The Request-Response execute endpoint of the Azure Machine Learning Studio. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) Inputs() AzureMachineLearningStudioInputsResponsePtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) *AzureMachineLearningStudioInputsResponse {
		return v.Inputs
	}).(AzureMachineLearningStudioInputsResponsePtrOutput)
}

// A list of outputs from the Azure Machine Learning Studio endpoint execution.
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) Outputs() AzureMachineLearningStudioOutputColumnResponseArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) []AzureMachineLearningStudioOutputColumnResponse {
		return v.Outputs
	}).(AzureMachineLearningStudioOutputColumnResponseArrayOutput)
}

// Indicates the function binding type.
func (o AzureMachineLearningStudioFunctionBindingResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioFunctionBindingResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumn struct {
	// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the input column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioInputColumnInput is an input type that accepts AzureMachineLearningStudioInputColumnArgs and AzureMachineLearningStudioInputColumnOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputColumnInput` via:
//
//          AzureMachineLearningStudioInputColumnArgs{...}
type AzureMachineLearningStudioInputColumnInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputColumnOutput() AzureMachineLearningStudioInputColumnOutput
	ToAzureMachineLearningStudioInputColumnOutputWithContext(context.Context) AzureMachineLearningStudioInputColumnOutput
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumnArgs struct {
	// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the input column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioInputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputColumn)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputColumnArgs) ToAzureMachineLearningStudioInputColumnOutput() AzureMachineLearningStudioInputColumnOutput {
	return i.ToAzureMachineLearningStudioInputColumnOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputColumnArgs) ToAzureMachineLearningStudioInputColumnOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputColumnOutput)
}

// AzureMachineLearningStudioInputColumnArrayInput is an input type that accepts AzureMachineLearningStudioInputColumnArray and AzureMachineLearningStudioInputColumnArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputColumnArrayInput` via:
//
//          AzureMachineLearningStudioInputColumnArray{ AzureMachineLearningStudioInputColumnArgs{...} }
type AzureMachineLearningStudioInputColumnArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputColumnArrayOutput() AzureMachineLearningStudioInputColumnArrayOutput
	ToAzureMachineLearningStudioInputColumnArrayOutputWithContext(context.Context) AzureMachineLearningStudioInputColumnArrayOutput
}

type AzureMachineLearningStudioInputColumnArray []AzureMachineLearningStudioInputColumnInput

func (AzureMachineLearningStudioInputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioInputColumn)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputColumnArray) ToAzureMachineLearningStudioInputColumnArrayOutput() AzureMachineLearningStudioInputColumnArrayOutput {
	return i.ToAzureMachineLearningStudioInputColumnArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputColumnArray) ToAzureMachineLearningStudioInputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputColumnArrayOutput)
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumnOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputColumn)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputColumnOutput) ToAzureMachineLearningStudioInputColumnOutput() AzureMachineLearningStudioInputColumnOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnOutput) ToAzureMachineLearningStudioInputColumnOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
func (o AzureMachineLearningStudioInputColumnOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumn) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningStudioInputColumnOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumn) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the input column.
func (o AzureMachineLearningStudioInputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioInputColumnArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioInputColumn)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputColumnArrayOutput) ToAzureMachineLearningStudioInputColumnArrayOutput() AzureMachineLearningStudioInputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnArrayOutput) ToAzureMachineLearningStudioInputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningStudioInputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningStudioInputColumn {
		return vs[0].([]AzureMachineLearningStudioInputColumn)[vs[1].(int)]
	}).(AzureMachineLearningStudioInputColumnOutput)
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumnResponse struct {
	// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType *string `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo *int `pulumi:"mapTo"`
	// The name of the input column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioInputColumnResponseInput is an input type that accepts AzureMachineLearningStudioInputColumnResponseArgs and AzureMachineLearningStudioInputColumnResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputColumnResponseInput` via:
//
//          AzureMachineLearningStudioInputColumnResponseArgs{...}
type AzureMachineLearningStudioInputColumnResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputColumnResponseOutput() AzureMachineLearningStudioInputColumnResponseOutput
	ToAzureMachineLearningStudioInputColumnResponseOutputWithContext(context.Context) AzureMachineLearningStudioInputColumnResponseOutput
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumnResponseArgs struct {
	// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The zero based index of the function parameter this input maps to.
	MapTo pulumi.IntPtrInput `pulumi:"mapTo"`
	// The name of the input column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioInputColumnResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputColumnResponseArgs) ToAzureMachineLearningStudioInputColumnResponseOutput() AzureMachineLearningStudioInputColumnResponseOutput {
	return i.ToAzureMachineLearningStudioInputColumnResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputColumnResponseArgs) ToAzureMachineLearningStudioInputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputColumnResponseOutput)
}

// AzureMachineLearningStudioInputColumnResponseArrayInput is an input type that accepts AzureMachineLearningStudioInputColumnResponseArray and AzureMachineLearningStudioInputColumnResponseArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputColumnResponseArrayInput` via:
//
//          AzureMachineLearningStudioInputColumnResponseArray{ AzureMachineLearningStudioInputColumnResponseArgs{...} }
type AzureMachineLearningStudioInputColumnResponseArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputColumnResponseArrayOutput() AzureMachineLearningStudioInputColumnResponseArrayOutput
	ToAzureMachineLearningStudioInputColumnResponseArrayOutputWithContext(context.Context) AzureMachineLearningStudioInputColumnResponseArrayOutput
}

type AzureMachineLearningStudioInputColumnResponseArray []AzureMachineLearningStudioInputColumnResponseInput

func (AzureMachineLearningStudioInputColumnResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioInputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputColumnResponseArray) ToAzureMachineLearningStudioInputColumnResponseArrayOutput() AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return i.ToAzureMachineLearningStudioInputColumnResponseArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputColumnResponseArray) ToAzureMachineLearningStudioInputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputColumnResponseArrayOutput)
}

// Describes an input column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputColumnResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputColumnResponseOutput) ToAzureMachineLearningStudioInputColumnResponseOutput() AzureMachineLearningStudioInputColumnResponseOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnResponseOutput) ToAzureMachineLearningStudioInputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnResponseOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
func (o AzureMachineLearningStudioInputColumnResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumnResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The zero based index of the function parameter this input maps to.
func (o AzureMachineLearningStudioInputColumnResponseOutput) MapTo() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumnResponse) *int { return v.MapTo }).(pulumi.IntPtrOutput)
}

// The name of the input column.
func (o AzureMachineLearningStudioInputColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioInputColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioInputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputColumnResponseArrayOutput) ToAzureMachineLearningStudioInputColumnResponseArrayOutput() AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnResponseArrayOutput) ToAzureMachineLearningStudioInputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningStudioInputColumnResponseArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningStudioInputColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningStudioInputColumnResponse {
		return vs[0].([]AzureMachineLearningStudioInputColumnResponse)[vs[1].(int)]
	}).(AzureMachineLearningStudioInputColumnResponseOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputs struct {
	// A list of input columns for the Azure Machine Learning Studio endpoint.
	ColumnNames []AzureMachineLearningStudioInputColumn `pulumi:"columnNames"`
	// The name of the input. This is the name provided while authoring the endpoint.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioInputsInput is an input type that accepts AzureMachineLearningStudioInputsArgs and AzureMachineLearningStudioInputsOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputsInput` via:
//
//          AzureMachineLearningStudioInputsArgs{...}
type AzureMachineLearningStudioInputsInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputsOutput() AzureMachineLearningStudioInputsOutput
	ToAzureMachineLearningStudioInputsOutputWithContext(context.Context) AzureMachineLearningStudioInputsOutput
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputsArgs struct {
	// A list of input columns for the Azure Machine Learning Studio endpoint.
	ColumnNames AzureMachineLearningStudioInputColumnArrayInput `pulumi:"columnNames"`
	// The name of the input. This is the name provided while authoring the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputs)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputsArgs) ToAzureMachineLearningStudioInputsOutput() AzureMachineLearningStudioInputsOutput {
	return i.ToAzureMachineLearningStudioInputsOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputsArgs) ToAzureMachineLearningStudioInputsOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsOutput)
}

func (i AzureMachineLearningStudioInputsArgs) ToAzureMachineLearningStudioInputsPtrOutput() AzureMachineLearningStudioInputsPtrOutput {
	return i.ToAzureMachineLearningStudioInputsPtrOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputsArgs) ToAzureMachineLearningStudioInputsPtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsOutput).ToAzureMachineLearningStudioInputsPtrOutputWithContext(ctx)
}

// AzureMachineLearningStudioInputsPtrInput is an input type that accepts AzureMachineLearningStudioInputsArgs, AzureMachineLearningStudioInputsPtr and AzureMachineLearningStudioInputsPtrOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputsPtrInput` via:
//
//          AzureMachineLearningStudioInputsArgs{...}
//
//  or:
//
//          nil
type AzureMachineLearningStudioInputsPtrInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputsPtrOutput() AzureMachineLearningStudioInputsPtrOutput
	ToAzureMachineLearningStudioInputsPtrOutputWithContext(context.Context) AzureMachineLearningStudioInputsPtrOutput
}

type azureMachineLearningStudioInputsPtrType AzureMachineLearningStudioInputsArgs

func AzureMachineLearningStudioInputsPtr(v *AzureMachineLearningStudioInputsArgs) AzureMachineLearningStudioInputsPtrInput {
	return (*azureMachineLearningStudioInputsPtrType)(v)
}

func (*azureMachineLearningStudioInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMachineLearningStudioInputs)(nil)).Elem()
}

func (i *azureMachineLearningStudioInputsPtrType) ToAzureMachineLearningStudioInputsPtrOutput() AzureMachineLearningStudioInputsPtrOutput {
	return i.ToAzureMachineLearningStudioInputsPtrOutputWithContext(context.Background())
}

func (i *azureMachineLearningStudioInputsPtrType) ToAzureMachineLearningStudioInputsPtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsPtrOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputsOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputs)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputsOutput) ToAzureMachineLearningStudioInputsOutput() AzureMachineLearningStudioInputsOutput {
	return o
}

func (o AzureMachineLearningStudioInputsOutput) ToAzureMachineLearningStudioInputsOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsOutput {
	return o
}

func (o AzureMachineLearningStudioInputsOutput) ToAzureMachineLearningStudioInputsPtrOutput() AzureMachineLearningStudioInputsPtrOutput {
	return o.ToAzureMachineLearningStudioInputsPtrOutputWithContext(context.Background())
}

func (o AzureMachineLearningStudioInputsOutput) ToAzureMachineLearningStudioInputsPtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputs) *AzureMachineLearningStudioInputs {
		return &v
	}).(AzureMachineLearningStudioInputsPtrOutput)
}

// A list of input columns for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioInputsOutput) ColumnNames() AzureMachineLearningStudioInputColumnArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputs) []AzureMachineLearningStudioInputColumn { return v.ColumnNames }).(AzureMachineLearningStudioInputColumnArrayOutput)
}

// The name of the input. This is the name provided while authoring the endpoint.
func (o AzureMachineLearningStudioInputsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioInputsPtrOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMachineLearningStudioInputs)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputsPtrOutput) ToAzureMachineLearningStudioInputsPtrOutput() AzureMachineLearningStudioInputsPtrOutput {
	return o
}

func (o AzureMachineLearningStudioInputsPtrOutput) ToAzureMachineLearningStudioInputsPtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsPtrOutput {
	return o
}

func (o AzureMachineLearningStudioInputsPtrOutput) Elem() AzureMachineLearningStudioInputsOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputs) AzureMachineLearningStudioInputs { return *v }).(AzureMachineLearningStudioInputsOutput)
}

// A list of input columns for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioInputsPtrOutput) ColumnNames() AzureMachineLearningStudioInputColumnArrayOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputs) []AzureMachineLearningStudioInputColumn {
		if v == nil {
			return nil
		}
		return v.ColumnNames
	}).(AzureMachineLearningStudioInputColumnArrayOutput)
}

// The name of the input. This is the name provided while authoring the endpoint.
func (o AzureMachineLearningStudioInputsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputs) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputsResponse struct {
	// A list of input columns for the Azure Machine Learning Studio endpoint.
	ColumnNames []AzureMachineLearningStudioInputColumnResponse `pulumi:"columnNames"`
	// The name of the input. This is the name provided while authoring the endpoint.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioInputsResponseInput is an input type that accepts AzureMachineLearningStudioInputsResponseArgs and AzureMachineLearningStudioInputsResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputsResponseInput` via:
//
//          AzureMachineLearningStudioInputsResponseArgs{...}
type AzureMachineLearningStudioInputsResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputsResponseOutput() AzureMachineLearningStudioInputsResponseOutput
	ToAzureMachineLearningStudioInputsResponseOutputWithContext(context.Context) AzureMachineLearningStudioInputsResponseOutput
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputsResponseArgs struct {
	// A list of input columns for the Azure Machine Learning Studio endpoint.
	ColumnNames AzureMachineLearningStudioInputColumnResponseArrayInput `pulumi:"columnNames"`
	// The name of the input. This is the name provided while authoring the endpoint.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioInputsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputsResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioInputsResponseArgs) ToAzureMachineLearningStudioInputsResponseOutput() AzureMachineLearningStudioInputsResponseOutput {
	return i.ToAzureMachineLearningStudioInputsResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputsResponseArgs) ToAzureMachineLearningStudioInputsResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsResponseOutput)
}

func (i AzureMachineLearningStudioInputsResponseArgs) ToAzureMachineLearningStudioInputsResponsePtrOutput() AzureMachineLearningStudioInputsResponsePtrOutput {
	return i.ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioInputsResponseArgs) ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsResponseOutput).ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(ctx)
}

// AzureMachineLearningStudioInputsResponsePtrInput is an input type that accepts AzureMachineLearningStudioInputsResponseArgs, AzureMachineLearningStudioInputsResponsePtr and AzureMachineLearningStudioInputsResponsePtrOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioInputsResponsePtrInput` via:
//
//          AzureMachineLearningStudioInputsResponseArgs{...}
//
//  or:
//
//          nil
type AzureMachineLearningStudioInputsResponsePtrInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioInputsResponsePtrOutput() AzureMachineLearningStudioInputsResponsePtrOutput
	ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(context.Context) AzureMachineLearningStudioInputsResponsePtrOutput
}

type azureMachineLearningStudioInputsResponsePtrType AzureMachineLearningStudioInputsResponseArgs

func AzureMachineLearningStudioInputsResponsePtr(v *AzureMachineLearningStudioInputsResponseArgs) AzureMachineLearningStudioInputsResponsePtrInput {
	return (*azureMachineLearningStudioInputsResponsePtrType)(v)
}

func (*azureMachineLearningStudioInputsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMachineLearningStudioInputsResponse)(nil)).Elem()
}

func (i *azureMachineLearningStudioInputsResponsePtrType) ToAzureMachineLearningStudioInputsResponsePtrOutput() AzureMachineLearningStudioInputsResponsePtrOutput {
	return i.ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(context.Background())
}

func (i *azureMachineLearningStudioInputsResponsePtrType) ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioInputsResponsePtrOutput)
}

// The inputs for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioInputsResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioInputsResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputsResponseOutput) ToAzureMachineLearningStudioInputsResponseOutput() AzureMachineLearningStudioInputsResponseOutput {
	return o
}

func (o AzureMachineLearningStudioInputsResponseOutput) ToAzureMachineLearningStudioInputsResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponseOutput {
	return o
}

func (o AzureMachineLearningStudioInputsResponseOutput) ToAzureMachineLearningStudioInputsResponsePtrOutput() AzureMachineLearningStudioInputsResponsePtrOutput {
	return o.ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(context.Background())
}

func (o AzureMachineLearningStudioInputsResponseOutput) ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponsePtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputsResponse) *AzureMachineLearningStudioInputsResponse {
		return &v
	}).(AzureMachineLearningStudioInputsResponsePtrOutput)
}

// A list of input columns for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioInputsResponseOutput) ColumnNames() AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputsResponse) []AzureMachineLearningStudioInputColumnResponse {
		return v.ColumnNames
	}).(AzureMachineLearningStudioInputColumnResponseArrayOutput)
}

// The name of the input. This is the name provided while authoring the endpoint.
func (o AzureMachineLearningStudioInputsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioInputsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioInputsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioInputsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMachineLearningStudioInputsResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioInputsResponsePtrOutput) ToAzureMachineLearningStudioInputsResponsePtrOutput() AzureMachineLearningStudioInputsResponsePtrOutput {
	return o
}

func (o AzureMachineLearningStudioInputsResponsePtrOutput) ToAzureMachineLearningStudioInputsResponsePtrOutputWithContext(ctx context.Context) AzureMachineLearningStudioInputsResponsePtrOutput {
	return o
}

func (o AzureMachineLearningStudioInputsResponsePtrOutput) Elem() AzureMachineLearningStudioInputsResponseOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputsResponse) AzureMachineLearningStudioInputsResponse { return *v }).(AzureMachineLearningStudioInputsResponseOutput)
}

// A list of input columns for the Azure Machine Learning Studio endpoint.
func (o AzureMachineLearningStudioInputsResponsePtrOutput) ColumnNames() AzureMachineLearningStudioInputColumnResponseArrayOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputsResponse) []AzureMachineLearningStudioInputColumnResponse {
		if v == nil {
			return nil
		}
		return v.ColumnNames
	}).(AzureMachineLearningStudioInputColumnResponseArrayOutput)
}

// The name of the input. This is the name provided while authoring the endpoint.
func (o AzureMachineLearningStudioInputsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMachineLearningStudioInputsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumn struct {
	// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType *string `pulumi:"dataType"`
	// The name of the output column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioOutputColumnInput is an input type that accepts AzureMachineLearningStudioOutputColumnArgs and AzureMachineLearningStudioOutputColumnOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioOutputColumnInput` via:
//
//          AzureMachineLearningStudioOutputColumnArgs{...}
type AzureMachineLearningStudioOutputColumnInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioOutputColumnOutput() AzureMachineLearningStudioOutputColumnOutput
	ToAzureMachineLearningStudioOutputColumnOutputWithContext(context.Context) AzureMachineLearningStudioOutputColumnOutput
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumnArgs struct {
	// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The name of the output column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioOutputColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioOutputColumn)(nil)).Elem()
}

func (i AzureMachineLearningStudioOutputColumnArgs) ToAzureMachineLearningStudioOutputColumnOutput() AzureMachineLearningStudioOutputColumnOutput {
	return i.ToAzureMachineLearningStudioOutputColumnOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioOutputColumnArgs) ToAzureMachineLearningStudioOutputColumnOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioOutputColumnOutput)
}

// AzureMachineLearningStudioOutputColumnArrayInput is an input type that accepts AzureMachineLearningStudioOutputColumnArray and AzureMachineLearningStudioOutputColumnArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioOutputColumnArrayInput` via:
//
//          AzureMachineLearningStudioOutputColumnArray{ AzureMachineLearningStudioOutputColumnArgs{...} }
type AzureMachineLearningStudioOutputColumnArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioOutputColumnArrayOutput() AzureMachineLearningStudioOutputColumnArrayOutput
	ToAzureMachineLearningStudioOutputColumnArrayOutputWithContext(context.Context) AzureMachineLearningStudioOutputColumnArrayOutput
}

type AzureMachineLearningStudioOutputColumnArray []AzureMachineLearningStudioOutputColumnInput

func (AzureMachineLearningStudioOutputColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioOutputColumn)(nil)).Elem()
}

func (i AzureMachineLearningStudioOutputColumnArray) ToAzureMachineLearningStudioOutputColumnArrayOutput() AzureMachineLearningStudioOutputColumnArrayOutput {
	return i.ToAzureMachineLearningStudioOutputColumnArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioOutputColumnArray) ToAzureMachineLearningStudioOutputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioOutputColumnArrayOutput)
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumnOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioOutputColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioOutputColumn)(nil)).Elem()
}

func (o AzureMachineLearningStudioOutputColumnOutput) ToAzureMachineLearningStudioOutputColumnOutput() AzureMachineLearningStudioOutputColumnOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnOutput) ToAzureMachineLearningStudioOutputColumnOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
func (o AzureMachineLearningStudioOutputColumnOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioOutputColumn) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The name of the output column.
func (o AzureMachineLearningStudioOutputColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioOutputColumn) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioOutputColumnArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioOutputColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioOutputColumn)(nil)).Elem()
}

func (o AzureMachineLearningStudioOutputColumnArrayOutput) ToAzureMachineLearningStudioOutputColumnArrayOutput() AzureMachineLearningStudioOutputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnArrayOutput) ToAzureMachineLearningStudioOutputColumnArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnArrayOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningStudioOutputColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningStudioOutputColumn {
		return vs[0].([]AzureMachineLearningStudioOutputColumn)[vs[1].(int)]
	}).(AzureMachineLearningStudioOutputColumnOutput)
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumnResponse struct {
	// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType *string `pulumi:"dataType"`
	// The name of the output column.
	Name *string `pulumi:"name"`
}

// AzureMachineLearningStudioOutputColumnResponseInput is an input type that accepts AzureMachineLearningStudioOutputColumnResponseArgs and AzureMachineLearningStudioOutputColumnResponseOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioOutputColumnResponseInput` via:
//
//          AzureMachineLearningStudioOutputColumnResponseArgs{...}
type AzureMachineLearningStudioOutputColumnResponseInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioOutputColumnResponseOutput() AzureMachineLearningStudioOutputColumnResponseOutput
	ToAzureMachineLearningStudioOutputColumnResponseOutputWithContext(context.Context) AzureMachineLearningStudioOutputColumnResponseOutput
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumnResponseArgs struct {
	// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// The name of the output column.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (AzureMachineLearningStudioOutputColumnResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioOutputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioOutputColumnResponseArgs) ToAzureMachineLearningStudioOutputColumnResponseOutput() AzureMachineLearningStudioOutputColumnResponseOutput {
	return i.ToAzureMachineLearningStudioOutputColumnResponseOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioOutputColumnResponseArgs) ToAzureMachineLearningStudioOutputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioOutputColumnResponseOutput)
}

// AzureMachineLearningStudioOutputColumnResponseArrayInput is an input type that accepts AzureMachineLearningStudioOutputColumnResponseArray and AzureMachineLearningStudioOutputColumnResponseArrayOutput values.
// You can construct a concrete instance of `AzureMachineLearningStudioOutputColumnResponseArrayInput` via:
//
//          AzureMachineLearningStudioOutputColumnResponseArray{ AzureMachineLearningStudioOutputColumnResponseArgs{...} }
type AzureMachineLearningStudioOutputColumnResponseArrayInput interface {
	pulumi.Input

	ToAzureMachineLearningStudioOutputColumnResponseArrayOutput() AzureMachineLearningStudioOutputColumnResponseArrayOutput
	ToAzureMachineLearningStudioOutputColumnResponseArrayOutputWithContext(context.Context) AzureMachineLearningStudioOutputColumnResponseArrayOutput
}

type AzureMachineLearningStudioOutputColumnResponseArray []AzureMachineLearningStudioOutputColumnResponseInput

func (AzureMachineLearningStudioOutputColumnResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioOutputColumnResponse)(nil)).Elem()
}

func (i AzureMachineLearningStudioOutputColumnResponseArray) ToAzureMachineLearningStudioOutputColumnResponseArrayOutput() AzureMachineLearningStudioOutputColumnResponseArrayOutput {
	return i.ToAzureMachineLearningStudioOutputColumnResponseArrayOutputWithContext(context.Background())
}

func (i AzureMachineLearningStudioOutputColumnResponseArray) ToAzureMachineLearningStudioOutputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMachineLearningStudioOutputColumnResponseArrayOutput)
}

// Describes an output column for the Azure Machine Learning Studio endpoint.
type AzureMachineLearningStudioOutputColumnResponseOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioOutputColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureMachineLearningStudioOutputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioOutputColumnResponseOutput) ToAzureMachineLearningStudioOutputColumnResponseOutput() AzureMachineLearningStudioOutputColumnResponseOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnResponseOutput) ToAzureMachineLearningStudioOutputColumnResponseOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnResponseOutput {
	return o
}

// The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
func (o AzureMachineLearningStudioOutputColumnResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioOutputColumnResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// The name of the output column.
func (o AzureMachineLearningStudioOutputColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureMachineLearningStudioOutputColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AzureMachineLearningStudioOutputColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureMachineLearningStudioOutputColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureMachineLearningStudioOutputColumnResponse)(nil)).Elem()
}

func (o AzureMachineLearningStudioOutputColumnResponseArrayOutput) ToAzureMachineLearningStudioOutputColumnResponseArrayOutput() AzureMachineLearningStudioOutputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnResponseArrayOutput) ToAzureMachineLearningStudioOutputColumnResponseArrayOutputWithContext(ctx context.Context) AzureMachineLearningStudioOutputColumnResponseArrayOutput {
	return o
}

func (o AzureMachineLearningStudioOutputColumnResponseArrayOutput) Index(i pulumi.IntInput) AzureMachineLearningStudioOutputColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureMachineLearningStudioOutputColumnResponse {
		return vs[0].([]AzureMachineLearningStudioOutputColumnResponse)[vs[1].(int)]
	}).(AzureMachineLearningStudioOutputColumnResponseOutput)
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
	MaxBatchCount *float64 `pulumi:"maxBatchCount"`
	// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
	MaxWriterCount *float64 `pulumi:"maxWriterCount"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password *string `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server *string `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User *string `pulumi:"user"`
}

// AzureSqlDatabaseOutputDataSourceInput is an input type that accepts AzureSqlDatabaseOutputDataSourceArgs and AzureSqlDatabaseOutputDataSourceOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseOutputDataSourceInput` via:
//
//          AzureSqlDatabaseOutputDataSourceArgs{...}
type AzureSqlDatabaseOutputDataSourceInput interface {
	pulumi.Input

	ToAzureSqlDatabaseOutputDataSourceOutput() AzureSqlDatabaseOutputDataSourceOutput
	ToAzureSqlDatabaseOutputDataSourceOutputWithContext(context.Context) AzureSqlDatabaseOutputDataSourceOutput
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
	MaxBatchCount pulumi.Float64PtrInput `pulumi:"maxBatchCount"`
	// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
	MaxWriterCount pulumi.Float64PtrInput `pulumi:"maxWriterCount"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSqlDatabaseOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseOutputDataSource)(nil)).Elem()
}

func (i AzureSqlDatabaseOutputDataSourceArgs) ToAzureSqlDatabaseOutputDataSourceOutput() AzureSqlDatabaseOutputDataSourceOutput {
	return i.ToAzureSqlDatabaseOutputDataSourceOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseOutputDataSourceArgs) ToAzureSqlDatabaseOutputDataSourceOutputWithContext(ctx context.Context) AzureSqlDatabaseOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseOutputDataSourceOutput)
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseOutputDataSource)(nil)).Elem()
}

func (o AzureSqlDatabaseOutputDataSourceOutput) ToAzureSqlDatabaseOutputDataSourceOutput() AzureSqlDatabaseOutputDataSourceOutput {
	return o
}

func (o AzureSqlDatabaseOutputDataSourceOutput) ToAzureSqlDatabaseOutputDataSourceOutputWithContext(ctx context.Context) AzureSqlDatabaseOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o AzureSqlDatabaseOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) MaxBatchCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *float64 { return v.MaxBatchCount }).(pulumi.Float64PtrOutput)
}

// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) MaxWriterCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *float64 { return v.MaxWriterCount }).(pulumi.Float64PtrOutput)
}

// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSource) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
	MaxBatchCount *float64 `pulumi:"maxBatchCount"`
	// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
	MaxWriterCount *float64 `pulumi:"maxWriterCount"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password *string `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server *string `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User *string `pulumi:"user"`
}

// AzureSqlDatabaseOutputDataSourceResponseInput is an input type that accepts AzureSqlDatabaseOutputDataSourceResponseArgs and AzureSqlDatabaseOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureSqlDatabaseOutputDataSourceResponseInput` via:
//
//          AzureSqlDatabaseOutputDataSourceResponseArgs{...}
type AzureSqlDatabaseOutputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureSqlDatabaseOutputDataSourceResponseOutput() AzureSqlDatabaseOutputDataSourceResponseOutput
	ToAzureSqlDatabaseOutputDataSourceResponseOutputWithContext(context.Context) AzureSqlDatabaseOutputDataSourceResponseOutput
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
	MaxBatchCount pulumi.Float64PtrInput `pulumi:"maxBatchCount"`
	// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
	MaxWriterCount pulumi.Float64PtrInput `pulumi:"maxWriterCount"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSqlDatabaseOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseOutputDataSourceResponse)(nil)).Elem()
}

func (i AzureSqlDatabaseOutputDataSourceResponseArgs) ToAzureSqlDatabaseOutputDataSourceResponseOutput() AzureSqlDatabaseOutputDataSourceResponseOutput {
	return i.ToAzureSqlDatabaseOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureSqlDatabaseOutputDataSourceResponseArgs) ToAzureSqlDatabaseOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlDatabaseOutputDataSourceResponseOutput)
}

// Describes an Azure SQL database output data source.
type AzureSqlDatabaseOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlDatabaseOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlDatabaseOutputDataSourceResponse)(nil)).Elem()
}

func (o AzureSqlDatabaseOutputDataSourceResponseOutput) ToAzureSqlDatabaseOutputDataSourceResponseOutput() AzureSqlDatabaseOutputDataSourceResponseOutput {
	return o
}

func (o AzureSqlDatabaseOutputDataSourceResponseOutput) ToAzureSqlDatabaseOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureSqlDatabaseOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) MaxBatchCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *float64 { return v.MaxBatchCount }).(pulumi.Float64PtrOutput)
}

// Max Write r count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) MaxWriterCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *float64 { return v.MaxWriterCount }).(pulumi.Float64PtrOutput)
}

// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlDatabaseOutputDataSourceResponseOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlDatabaseOutputDataSourceResponse) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSource struct {
	Properties *AzureSqlReferenceInputDataSourceProperties `pulumi:"properties"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureSqlReferenceInputDataSourceInput is an input type that accepts AzureSqlReferenceInputDataSourceArgs and AzureSqlReferenceInputDataSourceOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourceInput` via:
//
//          AzureSqlReferenceInputDataSourceArgs{...}
type AzureSqlReferenceInputDataSourceInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourceOutput() AzureSqlReferenceInputDataSourceOutput
	ToAzureSqlReferenceInputDataSourceOutputWithContext(context.Context) AzureSqlReferenceInputDataSourceOutput
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSourceArgs struct {
	Properties AzureSqlReferenceInputDataSourcePropertiesPtrInput `pulumi:"properties"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlReferenceInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSource)(nil)).Elem()
}

func (i AzureSqlReferenceInputDataSourceArgs) ToAzureSqlReferenceInputDataSourceOutput() AzureSqlReferenceInputDataSourceOutput {
	return i.ToAzureSqlReferenceInputDataSourceOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourceArgs) ToAzureSqlReferenceInputDataSourceOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourceOutput)
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSource)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourceOutput) ToAzureSqlReferenceInputDataSourceOutput() AzureSqlReferenceInputDataSourceOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourceOutput) ToAzureSqlReferenceInputDataSourceOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourceOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourceOutput) Properties() AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSource) *AzureSqlReferenceInputDataSourceProperties {
		return v.Properties
	}).(AzureSqlReferenceInputDataSourcePropertiesPtrOutput)
}

// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlReferenceInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

type AzureSqlReferenceInputDataSourceProperties struct {
	// This element is associated with the datasource element. This is the name of the database that output will be written to.
	Database *string `pulumi:"database"`
	// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
	DeltaSnapshotQuery *string `pulumi:"deltaSnapshotQuery"`
	// This element is associated with the datasource element. This query is used to fetch data from the sql database.
	FullSnapshotQuery *string `pulumi:"fullSnapshotQuery"`
	// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
	Password *string `pulumi:"password"`
	// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
	RefreshRate *string `pulumi:"refreshRate"`
	// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
	RefreshType *string `pulumi:"refreshType"`
	// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
	Server *string `pulumi:"server"`
	// This element is associated with the datasource element. The name of the table in the Azure SQL database..
	Table *string `pulumi:"table"`
	// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
	User *string `pulumi:"user"`
}

// AzureSqlReferenceInputDataSourcePropertiesInput is an input type that accepts AzureSqlReferenceInputDataSourcePropertiesArgs and AzureSqlReferenceInputDataSourcePropertiesOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourcePropertiesInput` via:
//
//          AzureSqlReferenceInputDataSourcePropertiesArgs{...}
type AzureSqlReferenceInputDataSourcePropertiesInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourcePropertiesOutput() AzureSqlReferenceInputDataSourcePropertiesOutput
	ToAzureSqlReferenceInputDataSourcePropertiesOutputWithContext(context.Context) AzureSqlReferenceInputDataSourcePropertiesOutput
}

type AzureSqlReferenceInputDataSourcePropertiesArgs struct {
	// This element is associated with the datasource element. This is the name of the database that output will be written to.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
	DeltaSnapshotQuery pulumi.StringPtrInput `pulumi:"deltaSnapshotQuery"`
	// This element is associated with the datasource element. This query is used to fetch data from the sql database.
	FullSnapshotQuery pulumi.StringPtrInput `pulumi:"fullSnapshotQuery"`
	// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
	RefreshType pulumi.StringPtrInput `pulumi:"refreshType"`
	// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// This element is associated with the datasource element. The name of the table in the Azure SQL database..
	Table pulumi.StringPtrInput `pulumi:"table"`
	// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSqlReferenceInputDataSourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourceProperties)(nil)).Elem()
}

func (i AzureSqlReferenceInputDataSourcePropertiesArgs) ToAzureSqlReferenceInputDataSourcePropertiesOutput() AzureSqlReferenceInputDataSourcePropertiesOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourcePropertiesArgs) ToAzureSqlReferenceInputDataSourcePropertiesOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesOutput)
}

func (i AzureSqlReferenceInputDataSourcePropertiesArgs) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutput() AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourcePropertiesArgs) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesOutput).ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(ctx)
}

// AzureSqlReferenceInputDataSourcePropertiesPtrInput is an input type that accepts AzureSqlReferenceInputDataSourcePropertiesArgs, AzureSqlReferenceInputDataSourcePropertiesPtr and AzureSqlReferenceInputDataSourcePropertiesPtrOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourcePropertiesPtrInput` via:
//
//          AzureSqlReferenceInputDataSourcePropertiesArgs{...}
//
//  or:
//
//          nil
type AzureSqlReferenceInputDataSourcePropertiesPtrInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourcePropertiesPtrOutput() AzureSqlReferenceInputDataSourcePropertiesPtrOutput
	ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(context.Context) AzureSqlReferenceInputDataSourcePropertiesPtrOutput
}

type azureSqlReferenceInputDataSourcePropertiesPtrType AzureSqlReferenceInputDataSourcePropertiesArgs

func AzureSqlReferenceInputDataSourcePropertiesPtr(v *AzureSqlReferenceInputDataSourcePropertiesArgs) AzureSqlReferenceInputDataSourcePropertiesPtrInput {
	return (*azureSqlReferenceInputDataSourcePropertiesPtrType)(v)
}

func (*azureSqlReferenceInputDataSourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlReferenceInputDataSourceProperties)(nil)).Elem()
}

func (i *azureSqlReferenceInputDataSourcePropertiesPtrType) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutput() AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *azureSqlReferenceInputDataSourcePropertiesPtrType) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesPtrOutput)
}

type AzureSqlReferenceInputDataSourcePropertiesOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourceProperties)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourcePropertiesOutput) ToAzureSqlReferenceInputDataSourcePropertiesOutput() AzureSqlReferenceInputDataSourcePropertiesOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesOutput) ToAzureSqlReferenceInputDataSourcePropertiesOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesOutput) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutput() AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return o.ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(context.Background())
}

func (o AzureSqlReferenceInputDataSourcePropertiesOutput) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *AzureSqlReferenceInputDataSourceProperties {
		return &v
	}).(AzureSqlReferenceInputDataSourcePropertiesPtrOutput)
}

// This element is associated with the datasource element. This is the name of the database that output will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) DeltaSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.DeltaSnapshotQuery }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch data from the sql database.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) FullSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.FullSnapshotQuery }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) RefreshType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.RefreshType }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. The name of the table in the Azure SQL database..
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceProperties) *string { return v.User }).(pulumi.StringPtrOutput)
}

type AzureSqlReferenceInputDataSourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlReferenceInputDataSourceProperties)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutput() AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) ToAzureSqlReferenceInputDataSourcePropertiesPtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesPtrOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) Elem() AzureSqlReferenceInputDataSourcePropertiesOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) AzureSqlReferenceInputDataSourceProperties {
		return *v
	}).(AzureSqlReferenceInputDataSourcePropertiesOutput)
}

// This element is associated with the datasource element. This is the name of the database that output will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) DeltaSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeltaSnapshotQuery
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch data from the sql database.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) FullSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.FullSnapshotQuery
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RefreshRate
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) RefreshType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RefreshType
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. The name of the table in the Azure SQL database..
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Table
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type AzureSqlReferenceInputDataSourcePropertiesResponse struct {
	// This element is associated with the datasource element. This is the name of the database that output will be written to.
	Database *string `pulumi:"database"`
	// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
	DeltaSnapshotQuery *string `pulumi:"deltaSnapshotQuery"`
	// This element is associated with the datasource element. This query is used to fetch data from the sql database.
	FullSnapshotQuery *string `pulumi:"fullSnapshotQuery"`
	// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
	Password *string `pulumi:"password"`
	// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
	RefreshRate *string `pulumi:"refreshRate"`
	// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
	RefreshType *string `pulumi:"refreshType"`
	// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
	Server *string `pulumi:"server"`
	// This element is associated with the datasource element. The name of the table in the Azure SQL database..
	Table *string `pulumi:"table"`
	// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
	User *string `pulumi:"user"`
}

// AzureSqlReferenceInputDataSourcePropertiesResponseInput is an input type that accepts AzureSqlReferenceInputDataSourcePropertiesResponseArgs and AzureSqlReferenceInputDataSourcePropertiesResponseOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourcePropertiesResponseInput` via:
//
//          AzureSqlReferenceInputDataSourcePropertiesResponseArgs{...}
type AzureSqlReferenceInputDataSourcePropertiesResponseInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourcePropertiesResponseOutput() AzureSqlReferenceInputDataSourcePropertiesResponseOutput
	ToAzureSqlReferenceInputDataSourcePropertiesResponseOutputWithContext(context.Context) AzureSqlReferenceInputDataSourcePropertiesResponseOutput
}

type AzureSqlReferenceInputDataSourcePropertiesResponseArgs struct {
	// This element is associated with the datasource element. This is the name of the database that output will be written to.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
	DeltaSnapshotQuery pulumi.StringPtrInput `pulumi:"deltaSnapshotQuery"`
	// This element is associated with the datasource element. This query is used to fetch data from the sql database.
	FullSnapshotQuery pulumi.StringPtrInput `pulumi:"fullSnapshotQuery"`
	// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
	RefreshType pulumi.StringPtrInput `pulumi:"refreshType"`
	// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// This element is associated with the datasource element. The name of the table in the Azure SQL database..
	Table pulumi.StringPtrInput `pulumi:"table"`
	// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSqlReferenceInputDataSourcePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourcePropertiesResponse)(nil)).Elem()
}

func (i AzureSqlReferenceInputDataSourcePropertiesResponseArgs) ToAzureSqlReferenceInputDataSourcePropertiesResponseOutput() AzureSqlReferenceInputDataSourcePropertiesResponseOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesResponseOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourcePropertiesResponseArgs) ToAzureSqlReferenceInputDataSourcePropertiesResponseOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesResponseOutput)
}

func (i AzureSqlReferenceInputDataSourcePropertiesResponseArgs) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourcePropertiesResponseArgs) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesResponseOutput).ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(ctx)
}

// AzureSqlReferenceInputDataSourcePropertiesResponsePtrInput is an input type that accepts AzureSqlReferenceInputDataSourcePropertiesResponseArgs, AzureSqlReferenceInputDataSourcePropertiesResponsePtr and AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourcePropertiesResponsePtrInput` via:
//
//          AzureSqlReferenceInputDataSourcePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type AzureSqlReferenceInputDataSourcePropertiesResponsePtrInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput
	ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(context.Context) AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput
}

type azureSqlReferenceInputDataSourcePropertiesResponsePtrType AzureSqlReferenceInputDataSourcePropertiesResponseArgs

func AzureSqlReferenceInputDataSourcePropertiesResponsePtr(v *AzureSqlReferenceInputDataSourcePropertiesResponseArgs) AzureSqlReferenceInputDataSourcePropertiesResponsePtrInput {
	return (*azureSqlReferenceInputDataSourcePropertiesResponsePtrType)(v)
}

func (*azureSqlReferenceInputDataSourcePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlReferenceInputDataSourcePropertiesResponse)(nil)).Elem()
}

func (i *azureSqlReferenceInputDataSourcePropertiesResponsePtrType) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return i.ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *azureSqlReferenceInputDataSourcePropertiesResponsePtrType) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput)
}

type AzureSqlReferenceInputDataSourcePropertiesResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourcePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourcePropertiesResponse)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponseOutput() AzureSqlReferenceInputDataSourcePropertiesResponseOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponseOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponseOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return o.ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *AzureSqlReferenceInputDataSourcePropertiesResponse {
		return &v
	}).(AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput)
}

// This element is associated with the datasource element. This is the name of the database that output will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) DeltaSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.DeltaSnapshotQuery }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch data from the sql database.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) FullSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.FullSnapshotQuery }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) RefreshType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.RefreshType }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. The name of the table in the Azure SQL database..
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesResponseOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourcePropertiesResponse) *string { return v.User }).(pulumi.StringPtrOutput)
}

type AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureSqlReferenceInputDataSourcePropertiesResponse)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) ToAzureSqlReferenceInputDataSourcePropertiesResponsePtrOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) Elem() AzureSqlReferenceInputDataSourcePropertiesResponseOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) AzureSqlReferenceInputDataSourcePropertiesResponse {
		return *v
	}).(AzureSqlReferenceInputDataSourcePropertiesResponseOutput)
}

// This element is associated with the datasource element. This is the name of the database that output will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) DeltaSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeltaSnapshotQuery
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This query is used to fetch data from the sql database.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) FullSnapshotQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.FullSnapshotQuery
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshRate
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This element is of enum type. It indicates what kind of data refresh option do we want to use:Static/RefreshPeriodicallyWithFull/RefreshPeriodicallyWithDelta
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) RefreshType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.RefreshType
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. The name of the table in the Azure SQL database..
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Table
	}).(pulumi.StringPtrOutput)
}

// This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
func (o AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureSqlReferenceInputDataSourcePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSourceResponse struct {
	Properties *AzureSqlReferenceInputDataSourcePropertiesResponse `pulumi:"properties"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureSqlReferenceInputDataSourceResponseInput is an input type that accepts AzureSqlReferenceInputDataSourceResponseArgs and AzureSqlReferenceInputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureSqlReferenceInputDataSourceResponseInput` via:
//
//          AzureSqlReferenceInputDataSourceResponseArgs{...}
type AzureSqlReferenceInputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureSqlReferenceInputDataSourceResponseOutput() AzureSqlReferenceInputDataSourceResponseOutput
	ToAzureSqlReferenceInputDataSourceResponseOutputWithContext(context.Context) AzureSqlReferenceInputDataSourceResponseOutput
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSourceResponseArgs struct {
	Properties AzureSqlReferenceInputDataSourcePropertiesResponsePtrInput `pulumi:"properties"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureSqlReferenceInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourceResponse)(nil)).Elem()
}

func (i AzureSqlReferenceInputDataSourceResponseArgs) ToAzureSqlReferenceInputDataSourceResponseOutput() AzureSqlReferenceInputDataSourceResponseOutput {
	return i.ToAzureSqlReferenceInputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureSqlReferenceInputDataSourceResponseArgs) ToAzureSqlReferenceInputDataSourceResponseOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSqlReferenceInputDataSourceResponseOutput)
}

// Describes an Azure SQL database reference input data source.
type AzureSqlReferenceInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureSqlReferenceInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSqlReferenceInputDataSourceResponse)(nil)).Elem()
}

func (o AzureSqlReferenceInputDataSourceResponseOutput) ToAzureSqlReferenceInputDataSourceResponseOutput() AzureSqlReferenceInputDataSourceResponseOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourceResponseOutput) ToAzureSqlReferenceInputDataSourceResponseOutputWithContext(ctx context.Context) AzureSqlReferenceInputDataSourceResponseOutput {
	return o
}

func (o AzureSqlReferenceInputDataSourceResponseOutput) Properties() AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceResponse) *AzureSqlReferenceInputDataSourcePropertiesResponse {
		return v.Properties
	}).(AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput)
}

// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
func (o AzureSqlReferenceInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSqlReferenceInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSource struct {
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password *string `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server *string `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User *string `pulumi:"user"`
}

// AzureSynapseOutputDataSourceInput is an input type that accepts AzureSynapseOutputDataSourceArgs and AzureSynapseOutputDataSourceOutput values.
// You can construct a concrete instance of `AzureSynapseOutputDataSourceInput` via:
//
//          AzureSynapseOutputDataSourceArgs{...}
type AzureSynapseOutputDataSourceInput interface {
	pulumi.Input

	ToAzureSynapseOutputDataSourceOutput() AzureSynapseOutputDataSourceOutput
	ToAzureSynapseOutputDataSourceOutputWithContext(context.Context) AzureSynapseOutputDataSourceOutput
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSourceArgs struct {
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSynapseOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSynapseOutputDataSource)(nil)).Elem()
}

func (i AzureSynapseOutputDataSourceArgs) ToAzureSynapseOutputDataSourceOutput() AzureSynapseOutputDataSourceOutput {
	return i.ToAzureSynapseOutputDataSourceOutputWithContext(context.Background())
}

func (i AzureSynapseOutputDataSourceArgs) ToAzureSynapseOutputDataSourceOutputWithContext(ctx context.Context) AzureSynapseOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSynapseOutputDataSourceOutput)
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureSynapseOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSynapseOutputDataSource)(nil)).Elem()
}

func (o AzureSynapseOutputDataSourceOutput) ToAzureSynapseOutputDataSourceOutput() AzureSynapseOutputDataSourceOutput {
	return o
}

func (o AzureSynapseOutputDataSourceOutput) ToAzureSynapseOutputDataSourceOutputWithContext(ctx context.Context) AzureSynapseOutputDataSourceOutput {
	return o
}

// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSource) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSourceResponse struct {
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password *string `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server *string `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User *string `pulumi:"user"`
}

// AzureSynapseOutputDataSourceResponseInput is an input type that accepts AzureSynapseOutputDataSourceResponseArgs and AzureSynapseOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureSynapseOutputDataSourceResponseInput` via:
//
//          AzureSynapseOutputDataSourceResponseArgs{...}
type AzureSynapseOutputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureSynapseOutputDataSourceResponseOutput() AzureSynapseOutputDataSourceResponseOutput
	ToAzureSynapseOutputDataSourceResponseOutputWithContext(context.Context) AzureSynapseOutputDataSourceResponseOutput
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSourceResponseArgs struct {
	// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
	// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (AzureSynapseOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSynapseOutputDataSourceResponse)(nil)).Elem()
}

func (i AzureSynapseOutputDataSourceResponseArgs) ToAzureSynapseOutputDataSourceResponseOutput() AzureSynapseOutputDataSourceResponseOutput {
	return i.ToAzureSynapseOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureSynapseOutputDataSourceResponseArgs) ToAzureSynapseOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureSynapseOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureSynapseOutputDataSourceResponseOutput)
}

// Describes an Azure Synapse output data source.
type AzureSynapseOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureSynapseOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureSynapseOutputDataSourceResponse)(nil)).Elem()
}

func (o AzureSynapseOutputDataSourceResponseOutput) ToAzureSynapseOutputDataSourceResponseOutput() AzureSynapseOutputDataSourceResponseOutput {
	return o
}

func (o AzureSynapseOutputDataSourceResponseOutput) ToAzureSynapseOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureSynapseOutputDataSourceResponseOutput {
	return o
}

// The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
func (o AzureSynapseOutputDataSourceResponseOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureSynapseOutputDataSourceResponse) *string { return v.User }).(pulumi.StringPtrOutput)
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSource struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// The number of rows to write to the Azure Table at a time.
	BatchSize *int `pulumi:"batchSize"`
	// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
	ColumnsToRemove []string `pulumi:"columnsToRemove"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	PartitionKey *string `pulumi:"partitionKey"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	RowKey *string `pulumi:"rowKey"`
	// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureTableOutputDataSourceInput is an input type that accepts AzureTableOutputDataSourceArgs and AzureTableOutputDataSourceOutput values.
// You can construct a concrete instance of `AzureTableOutputDataSourceInput` via:
//
//          AzureTableOutputDataSourceArgs{...}
type AzureTableOutputDataSourceInput interface {
	pulumi.Input

	ToAzureTableOutputDataSourceOutput() AzureTableOutputDataSourceOutput
	ToAzureTableOutputDataSourceOutputWithContext(context.Context) AzureTableOutputDataSourceOutput
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSourceArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The number of rows to write to the Azure Table at a time.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
	ColumnsToRemove pulumi.StringArrayInput `pulumi:"columnsToRemove"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	RowKey pulumi.StringPtrInput `pulumi:"rowKey"`
	// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableOutputDataSource)(nil)).Elem()
}

func (i AzureTableOutputDataSourceArgs) ToAzureTableOutputDataSourceOutput() AzureTableOutputDataSourceOutput {
	return i.ToAzureTableOutputDataSourceOutputWithContext(context.Background())
}

func (i AzureTableOutputDataSourceArgs) ToAzureTableOutputDataSourceOutputWithContext(ctx context.Context) AzureTableOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableOutputDataSourceOutput)
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSourceOutput struct{ *pulumi.OutputState }

func (AzureTableOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableOutputDataSource)(nil)).Elem()
}

func (o AzureTableOutputDataSourceOutput) ToAzureTableOutputDataSourceOutput() AzureTableOutputDataSourceOutput {
	return o
}

func (o AzureTableOutputDataSourceOutput) ToAzureTableOutputDataSourceOutputWithContext(ctx context.Context) AzureTableOutputDataSourceOutput {
	return o
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The number of rows to write to the Azure Table at a time.
func (o AzureTableOutputDataSourceOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
func (o AzureTableOutputDataSourceOutput) ColumnsToRemove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) []string { return v.ColumnsToRemove }).(pulumi.StringArrayOutput)
}

// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) RowKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *string { return v.RowKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSourceResponse struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// The number of rows to write to the Azure Table at a time.
	BatchSize *int `pulumi:"batchSize"`
	// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
	ColumnsToRemove []string `pulumi:"columnsToRemove"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	PartitionKey *string `pulumi:"partitionKey"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	RowKey *string `pulumi:"rowKey"`
	// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// AzureTableOutputDataSourceResponseInput is an input type that accepts AzureTableOutputDataSourceResponseArgs and AzureTableOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `AzureTableOutputDataSourceResponseInput` via:
//
//          AzureTableOutputDataSourceResponseArgs{...}
type AzureTableOutputDataSourceResponseInput interface {
	pulumi.Input

	ToAzureTableOutputDataSourceResponseOutput() AzureTableOutputDataSourceResponseOutput
	ToAzureTableOutputDataSourceResponseOutputWithContext(context.Context) AzureTableOutputDataSourceResponseOutput
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSourceResponseArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// The number of rows to write to the Azure Table at a time.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
	ColumnsToRemove pulumi.StringArrayInput `pulumi:"columnsToRemove"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
	RowKey pulumi.StringPtrInput `pulumi:"rowKey"`
	// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureTableOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableOutputDataSourceResponse)(nil)).Elem()
}

func (i AzureTableOutputDataSourceResponseArgs) ToAzureTableOutputDataSourceResponseOutput() AzureTableOutputDataSourceResponseOutput {
	return i.ToAzureTableOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i AzureTableOutputDataSourceResponseArgs) ToAzureTableOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureTableOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableOutputDataSourceResponseOutput)
}

// Describes an Azure Table output data source.
type AzureTableOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (AzureTableOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableOutputDataSourceResponse)(nil)).Elem()
}

func (o AzureTableOutputDataSourceResponseOutput) ToAzureTableOutputDataSourceResponseOutput() AzureTableOutputDataSourceResponseOutput {
	return o
}

func (o AzureTableOutputDataSourceResponseOutput) ToAzureTableOutputDataSourceResponseOutputWithContext(ctx context.Context) AzureTableOutputDataSourceResponseOutput {
	return o
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// The number of rows to write to the Azure Table at a time.
func (o AzureTableOutputDataSourceResponseOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// If specified, each item in the array is the name of a column to remove (if present) from output event entities.
func (o AzureTableOutputDataSourceResponseOutput) ColumnsToRemove() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) []string { return v.ColumnsToRemove }).(pulumi.StringArrayOutput)
}

// This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) RowKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *string { return v.RowKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o AzureTableOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob output data source.
type BlobOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccount `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobOutputDataSourceInput is an input type that accepts BlobOutputDataSourceArgs and BlobOutputDataSourceOutput values.
// You can construct a concrete instance of `BlobOutputDataSourceInput` via:
//
//          BlobOutputDataSourceArgs{...}
type BlobOutputDataSourceInput interface {
	pulumi.Input

	ToBlobOutputDataSourceOutput() BlobOutputDataSourceOutput
	ToBlobOutputDataSourceOutputWithContext(context.Context) BlobOutputDataSourceOutput
}

// Describes a blob output data source.
type BlobOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobOutputDataSource)(nil)).Elem()
}

func (i BlobOutputDataSourceArgs) ToBlobOutputDataSourceOutput() BlobOutputDataSourceOutput {
	return i.ToBlobOutputDataSourceOutputWithContext(context.Background())
}

func (i BlobOutputDataSourceArgs) ToBlobOutputDataSourceOutputWithContext(ctx context.Context) BlobOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobOutputDataSourceOutput)
}

// Describes a blob output data source.
type BlobOutputDataSourceOutput struct{ *pulumi.OutputState }

func (BlobOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobOutputDataSource)(nil)).Elem()
}

func (o BlobOutputDataSourceOutput) ToBlobOutputDataSourceOutput() BlobOutputDataSourceOutput {
	return o
}

func (o BlobOutputDataSourceOutput) ToBlobOutputDataSourceOutputWithContext(ctx context.Context) BlobOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o BlobOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSource) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobOutputDataSourceOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSource) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobOutputDataSourceOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSource) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceOutput) StorageAccounts() StorageAccountArrayOutput {
	return o.ApplyT(func(v BlobOutputDataSource) []StorageAccount { return v.StorageAccounts }).(StorageAccountArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobOutputDataSourceOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSource) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob output data source.
type BlobOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccountResponse `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobOutputDataSourceResponseInput is an input type that accepts BlobOutputDataSourceResponseArgs and BlobOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `BlobOutputDataSourceResponseInput` via:
//
//          BlobOutputDataSourceResponseArgs{...}
type BlobOutputDataSourceResponseInput interface {
	pulumi.Input

	ToBlobOutputDataSourceResponseOutput() BlobOutputDataSourceResponseOutput
	ToBlobOutputDataSourceResponseOutputWithContext(context.Context) BlobOutputDataSourceResponseOutput
}

// Describes a blob output data source.
type BlobOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountResponseArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobOutputDataSourceResponse)(nil)).Elem()
}

func (i BlobOutputDataSourceResponseArgs) ToBlobOutputDataSourceResponseOutput() BlobOutputDataSourceResponseOutput {
	return i.ToBlobOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i BlobOutputDataSourceResponseArgs) ToBlobOutputDataSourceResponseOutputWithContext(ctx context.Context) BlobOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobOutputDataSourceResponseOutput)
}

// Describes a blob output data source.
type BlobOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (BlobOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobOutputDataSourceResponse)(nil)).Elem()
}

func (o BlobOutputDataSourceResponseOutput) ToBlobOutputDataSourceResponseOutput() BlobOutputDataSourceResponseOutput {
	return o
}

func (o BlobOutputDataSourceResponseOutput) ToBlobOutputDataSourceResponseOutputWithContext(ctx context.Context) BlobOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o BlobOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceResponseOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobOutputDataSourceResponseOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobOutputDataSourceResponseOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceResponseOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobOutputDataSourceResponseOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o BlobOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSource struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccount `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobReferenceInputDataSourceInput is an input type that accepts BlobReferenceInputDataSourceArgs and BlobReferenceInputDataSourceOutput values.
// You can construct a concrete instance of `BlobReferenceInputDataSourceInput` via:
//
//          BlobReferenceInputDataSourceArgs{...}
type BlobReferenceInputDataSourceInput interface {
	pulumi.Input

	ToBlobReferenceInputDataSourceOutput() BlobReferenceInputDataSourceOutput
	ToBlobReferenceInputDataSourceOutputWithContext(context.Context) BlobReferenceInputDataSourceOutput
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSourceArgs struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobReferenceInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobReferenceInputDataSource)(nil)).Elem()
}

func (i BlobReferenceInputDataSourceArgs) ToBlobReferenceInputDataSourceOutput() BlobReferenceInputDataSourceOutput {
	return i.ToBlobReferenceInputDataSourceOutputWithContext(context.Background())
}

func (i BlobReferenceInputDataSourceArgs) ToBlobReferenceInputDataSourceOutputWithContext(ctx context.Context) BlobReferenceInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobReferenceInputDataSourceOutput)
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSourceOutput struct{ *pulumi.OutputState }

func (BlobReferenceInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobReferenceInputDataSource)(nil)).Elem()
}

func (o BlobReferenceInputDataSourceOutput) ToBlobReferenceInputDataSourceOutput() BlobReferenceInputDataSourceOutput {
	return o
}

func (o BlobReferenceInputDataSourceOutput) ToBlobReferenceInputDataSourceOutputWithContext(ctx context.Context) BlobReferenceInputDataSourceOutput {
	return o
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobReferenceInputDataSourceOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobReferenceInputDataSourceOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceOutput) StorageAccounts() StorageAccountArrayOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) []StorageAccount { return v.StorageAccounts }).(StorageAccountArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobReferenceInputDataSourceOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSourceResponse struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccountResponse `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobReferenceInputDataSourceResponseInput is an input type that accepts BlobReferenceInputDataSourceResponseArgs and BlobReferenceInputDataSourceResponseOutput values.
// You can construct a concrete instance of `BlobReferenceInputDataSourceResponseInput` via:
//
//          BlobReferenceInputDataSourceResponseArgs{...}
type BlobReferenceInputDataSourceResponseInput interface {
	pulumi.Input

	ToBlobReferenceInputDataSourceResponseOutput() BlobReferenceInputDataSourceResponseOutput
	ToBlobReferenceInputDataSourceResponseOutputWithContext(context.Context) BlobReferenceInputDataSourceResponseOutput
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSourceResponseArgs struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountResponseArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobReferenceInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobReferenceInputDataSourceResponse)(nil)).Elem()
}

func (i BlobReferenceInputDataSourceResponseArgs) ToBlobReferenceInputDataSourceResponseOutput() BlobReferenceInputDataSourceResponseOutput {
	return i.ToBlobReferenceInputDataSourceResponseOutputWithContext(context.Background())
}

func (i BlobReferenceInputDataSourceResponseArgs) ToBlobReferenceInputDataSourceResponseOutputWithContext(ctx context.Context) BlobReferenceInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobReferenceInputDataSourceResponseOutput)
}

// Describes a blob input data source that contains reference data.
type BlobReferenceInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (BlobReferenceInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobReferenceInputDataSourceResponse)(nil)).Elem()
}

func (o BlobReferenceInputDataSourceResponseOutput) ToBlobReferenceInputDataSourceResponseOutput() BlobReferenceInputDataSourceResponseOutput {
	return o
}

func (o BlobReferenceInputDataSourceResponseOutput) ToBlobReferenceInputDataSourceResponseOutputWithContext(ctx context.Context) BlobReferenceInputDataSourceResponseOutput {
	return o
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceResponseOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobReferenceInputDataSourceResponseOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobReferenceInputDataSourceResponseOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceResponseOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobReferenceInputDataSourceResponseOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
func (o BlobReferenceInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobReferenceInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSource struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// The partition count of the blob input data source. Range 1 - 256.
	SourcePartitionCount *int `pulumi:"sourcePartitionCount"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccount `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobStreamInputDataSourceInput is an input type that accepts BlobStreamInputDataSourceArgs and BlobStreamInputDataSourceOutput values.
// You can construct a concrete instance of `BlobStreamInputDataSourceInput` via:
//
//          BlobStreamInputDataSourceArgs{...}
type BlobStreamInputDataSourceInput interface {
	pulumi.Input

	ToBlobStreamInputDataSourceOutput() BlobStreamInputDataSourceOutput
	ToBlobStreamInputDataSourceOutputWithContext(context.Context) BlobStreamInputDataSourceOutput
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSourceArgs struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// The partition count of the blob input data source. Range 1 - 256.
	SourcePartitionCount pulumi.IntPtrInput `pulumi:"sourcePartitionCount"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobStreamInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStreamInputDataSource)(nil)).Elem()
}

func (i BlobStreamInputDataSourceArgs) ToBlobStreamInputDataSourceOutput() BlobStreamInputDataSourceOutput {
	return i.ToBlobStreamInputDataSourceOutputWithContext(context.Background())
}

func (i BlobStreamInputDataSourceArgs) ToBlobStreamInputDataSourceOutputWithContext(ctx context.Context) BlobStreamInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStreamInputDataSourceOutput)
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSourceOutput struct{ *pulumi.OutputState }

func (BlobStreamInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStreamInputDataSource)(nil)).Elem()
}

func (o BlobStreamInputDataSourceOutput) ToBlobStreamInputDataSourceOutput() BlobStreamInputDataSourceOutput {
	return o
}

func (o BlobStreamInputDataSourceOutput) ToBlobStreamInputDataSourceOutputWithContext(ctx context.Context) BlobStreamInputDataSourceOutput {
	return o
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobStreamInputDataSourceOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobStreamInputDataSourceOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// The partition count of the blob input data source. Range 1 - 256.
func (o BlobStreamInputDataSourceOutput) SourcePartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) *int { return v.SourcePartitionCount }).(pulumi.IntPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceOutput) StorageAccounts() StorageAccountArrayOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) []StorageAccount { return v.StorageAccounts }).(StorageAccountArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobStreamInputDataSourceOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStreamInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSourceResponse struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container *string `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat *string `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern *string `pulumi:"pathPattern"`
	// The partition count of the blob input data source. Range 1 - 256.
	SourcePartitionCount *int `pulumi:"sourcePartitionCount"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts []StorageAccountResponse `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat *string `pulumi:"timeFormat"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// BlobStreamInputDataSourceResponseInput is an input type that accepts BlobStreamInputDataSourceResponseArgs and BlobStreamInputDataSourceResponseOutput values.
// You can construct a concrete instance of `BlobStreamInputDataSourceResponseInput` via:
//
//          BlobStreamInputDataSourceResponseArgs{...}
type BlobStreamInputDataSourceResponseInput interface {
	pulumi.Input

	ToBlobStreamInputDataSourceResponseOutput() BlobStreamInputDataSourceResponseOutput
	ToBlobStreamInputDataSourceResponseOutputWithContext(context.Context) BlobStreamInputDataSourceResponseOutput
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSourceResponseArgs struct {
	// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
	Container pulumi.StringPtrInput `pulumi:"container"`
	// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
	DateFormat pulumi.StringPtrInput `pulumi:"dateFormat"`
	// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
	PathPattern pulumi.StringPtrInput `pulumi:"pathPattern"`
	// The partition count of the blob input data source. Range 1 - 256.
	SourcePartitionCount pulumi.IntPtrInput `pulumi:"sourcePartitionCount"`
	// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
	StorageAccounts StorageAccountResponseArrayInput `pulumi:"storageAccounts"`
	// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
	TimeFormat pulumi.StringPtrInput `pulumi:"timeFormat"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BlobStreamInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStreamInputDataSourceResponse)(nil)).Elem()
}

func (i BlobStreamInputDataSourceResponseArgs) ToBlobStreamInputDataSourceResponseOutput() BlobStreamInputDataSourceResponseOutput {
	return i.ToBlobStreamInputDataSourceResponseOutputWithContext(context.Background())
}

func (i BlobStreamInputDataSourceResponseArgs) ToBlobStreamInputDataSourceResponseOutputWithContext(ctx context.Context) BlobStreamInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStreamInputDataSourceResponseOutput)
}

// Describes a blob input data source that contains stream data.
type BlobStreamInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (BlobStreamInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStreamInputDataSourceResponse)(nil)).Elem()
}

func (o BlobStreamInputDataSourceResponseOutput) ToBlobStreamInputDataSourceResponseOutput() BlobStreamInputDataSourceResponseOutput {
	return o
}

func (o BlobStreamInputDataSourceResponseOutput) ToBlobStreamInputDataSourceResponseOutputWithContext(ctx context.Context) BlobStreamInputDataSourceResponseOutput {
	return o
}

// The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceResponseOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) *string { return v.Container }).(pulumi.StringPtrOutput)
}

// The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
func (o BlobStreamInputDataSourceResponseOutput) DateFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) *string { return v.DateFormat }).(pulumi.StringPtrOutput)
}

// The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
func (o BlobStreamInputDataSourceResponseOutput) PathPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) *string { return v.PathPattern }).(pulumi.StringPtrOutput)
}

// The partition count of the blob input data source. Range 1 - 256.
func (o BlobStreamInputDataSourceResponseOutput) SourcePartitionCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) *int { return v.SourcePartitionCount }).(pulumi.IntPtrOutput)
}

// A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceResponseOutput) StorageAccounts() StorageAccountResponseArrayOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) []StorageAccountResponse { return v.StorageAccounts }).(StorageAccountResponseArrayOutput)
}

// The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
func (o BlobStreamInputDataSourceResponseOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o BlobStreamInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlobStreamInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to a CSharp function.
type CSharpFunctionBinding struct {
	// The Csharp code containing a single function definition.
	Class *string `pulumi:"class"`
	// The Csharp code containing a single function definition.
	DllPath *string `pulumi:"dllPath"`
	// The Csharp code containing a single function definition.
	Method *string `pulumi:"method"`
	// The Csharp code containing a single function definition.
	Script *string `pulumi:"script"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// CSharpFunctionBindingInput is an input type that accepts CSharpFunctionBindingArgs and CSharpFunctionBindingOutput values.
// You can construct a concrete instance of `CSharpFunctionBindingInput` via:
//
//          CSharpFunctionBindingArgs{...}
type CSharpFunctionBindingInput interface {
	pulumi.Input

	ToCSharpFunctionBindingOutput() CSharpFunctionBindingOutput
	ToCSharpFunctionBindingOutputWithContext(context.Context) CSharpFunctionBindingOutput
}

// The binding to a CSharp function.
type CSharpFunctionBindingArgs struct {
	// The Csharp code containing a single function definition.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// The Csharp code containing a single function definition.
	DllPath pulumi.StringPtrInput `pulumi:"dllPath"`
	// The Csharp code containing a single function definition.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The Csharp code containing a single function definition.
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CSharpFunctionBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSharpFunctionBinding)(nil)).Elem()
}

func (i CSharpFunctionBindingArgs) ToCSharpFunctionBindingOutput() CSharpFunctionBindingOutput {
	return i.ToCSharpFunctionBindingOutputWithContext(context.Background())
}

func (i CSharpFunctionBindingArgs) ToCSharpFunctionBindingOutputWithContext(ctx context.Context) CSharpFunctionBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSharpFunctionBindingOutput)
}

// The binding to a CSharp function.
type CSharpFunctionBindingOutput struct{ *pulumi.OutputState }

func (CSharpFunctionBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSharpFunctionBinding)(nil)).Elem()
}

func (o CSharpFunctionBindingOutput) ToCSharpFunctionBindingOutput() CSharpFunctionBindingOutput {
	return o
}

func (o CSharpFunctionBindingOutput) ToCSharpFunctionBindingOutputWithContext(ctx context.Context) CSharpFunctionBindingOutput {
	return o
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBinding) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingOutput) DllPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBinding) *string { return v.DllPath }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBinding) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBinding) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Indicates the function binding type.
func (o CSharpFunctionBindingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CSharpFunctionBinding) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to a CSharp function.
type CSharpFunctionBindingResponse struct {
	// The Csharp code containing a single function definition.
	Class *string `pulumi:"class"`
	// The Csharp code containing a single function definition.
	DllPath *string `pulumi:"dllPath"`
	// The Csharp code containing a single function definition.
	Method *string `pulumi:"method"`
	// The Csharp code containing a single function definition.
	Script *string `pulumi:"script"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// CSharpFunctionBindingResponseInput is an input type that accepts CSharpFunctionBindingResponseArgs and CSharpFunctionBindingResponseOutput values.
// You can construct a concrete instance of `CSharpFunctionBindingResponseInput` via:
//
//          CSharpFunctionBindingResponseArgs{...}
type CSharpFunctionBindingResponseInput interface {
	pulumi.Input

	ToCSharpFunctionBindingResponseOutput() CSharpFunctionBindingResponseOutput
	ToCSharpFunctionBindingResponseOutputWithContext(context.Context) CSharpFunctionBindingResponseOutput
}

// The binding to a CSharp function.
type CSharpFunctionBindingResponseArgs struct {
	// The Csharp code containing a single function definition.
	Class pulumi.StringPtrInput `pulumi:"class"`
	// The Csharp code containing a single function definition.
	DllPath pulumi.StringPtrInput `pulumi:"dllPath"`
	// The Csharp code containing a single function definition.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The Csharp code containing a single function definition.
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CSharpFunctionBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CSharpFunctionBindingResponse)(nil)).Elem()
}

func (i CSharpFunctionBindingResponseArgs) ToCSharpFunctionBindingResponseOutput() CSharpFunctionBindingResponseOutput {
	return i.ToCSharpFunctionBindingResponseOutputWithContext(context.Background())
}

func (i CSharpFunctionBindingResponseArgs) ToCSharpFunctionBindingResponseOutputWithContext(ctx context.Context) CSharpFunctionBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CSharpFunctionBindingResponseOutput)
}

// The binding to a CSharp function.
type CSharpFunctionBindingResponseOutput struct{ *pulumi.OutputState }

func (CSharpFunctionBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CSharpFunctionBindingResponse)(nil)).Elem()
}

func (o CSharpFunctionBindingResponseOutput) ToCSharpFunctionBindingResponseOutput() CSharpFunctionBindingResponseOutput {
	return o
}

func (o CSharpFunctionBindingResponseOutput) ToCSharpFunctionBindingResponseOutputWithContext(ctx context.Context) CSharpFunctionBindingResponseOutput {
	return o
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingResponseOutput) Class() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBindingResponse) *string { return v.Class }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingResponseOutput) DllPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBindingResponse) *string { return v.DllPath }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBindingResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The Csharp code containing a single function definition.
func (o CSharpFunctionBindingResponseOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CSharpFunctionBindingResponse) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Indicates the function binding type.
func (o CSharpFunctionBindingResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CSharpFunctionBindingResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfo struct {
	// The resource id of cluster.
	Id *string `pulumi:"id"`
}

// ClusterInfoInput is an input type that accepts ClusterInfoArgs and ClusterInfoOutput values.
// You can construct a concrete instance of `ClusterInfoInput` via:
//
//          ClusterInfoArgs{...}
type ClusterInfoInput interface {
	pulumi.Input

	ToClusterInfoOutput() ClusterInfoOutput
	ToClusterInfoOutputWithContext(context.Context) ClusterInfoOutput
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfoArgs struct {
	// The resource id of cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInfo)(nil)).Elem()
}

func (i ClusterInfoArgs) ToClusterInfoOutput() ClusterInfoOutput {
	return i.ToClusterInfoOutputWithContext(context.Background())
}

func (i ClusterInfoArgs) ToClusterInfoOutputWithContext(ctx context.Context) ClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoOutput)
}

func (i ClusterInfoArgs) ToClusterInfoPtrOutput() ClusterInfoPtrOutput {
	return i.ToClusterInfoPtrOutputWithContext(context.Background())
}

func (i ClusterInfoArgs) ToClusterInfoPtrOutputWithContext(ctx context.Context) ClusterInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoOutput).ToClusterInfoPtrOutputWithContext(ctx)
}

// ClusterInfoPtrInput is an input type that accepts ClusterInfoArgs, ClusterInfoPtr and ClusterInfoPtrOutput values.
// You can construct a concrete instance of `ClusterInfoPtrInput` via:
//
//          ClusterInfoArgs{...}
//
//  or:
//
//          nil
type ClusterInfoPtrInput interface {
	pulumi.Input

	ToClusterInfoPtrOutput() ClusterInfoPtrOutput
	ToClusterInfoPtrOutputWithContext(context.Context) ClusterInfoPtrOutput
}

type clusterInfoPtrType ClusterInfoArgs

func ClusterInfoPtr(v *ClusterInfoArgs) ClusterInfoPtrInput {
	return (*clusterInfoPtrType)(v)
}

func (*clusterInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInfo)(nil)).Elem()
}

func (i *clusterInfoPtrType) ToClusterInfoPtrOutput() ClusterInfoPtrOutput {
	return i.ToClusterInfoPtrOutputWithContext(context.Background())
}

func (i *clusterInfoPtrType) ToClusterInfoPtrOutputWithContext(ctx context.Context) ClusterInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoPtrOutput)
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfoOutput struct{ *pulumi.OutputState }

func (ClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInfo)(nil)).Elem()
}

func (o ClusterInfoOutput) ToClusterInfoOutput() ClusterInfoOutput {
	return o
}

func (o ClusterInfoOutput) ToClusterInfoOutputWithContext(ctx context.Context) ClusterInfoOutput {
	return o
}

func (o ClusterInfoOutput) ToClusterInfoPtrOutput() ClusterInfoPtrOutput {
	return o.ToClusterInfoPtrOutputWithContext(context.Background())
}

func (o ClusterInfoOutput) ToClusterInfoPtrOutputWithContext(ctx context.Context) ClusterInfoPtrOutput {
	return o.ApplyT(func(v ClusterInfo) *ClusterInfo {
		return &v
	}).(ClusterInfoPtrOutput)
}

// The resource id of cluster.
func (o ClusterInfoOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInfo) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ClusterInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInfo)(nil)).Elem()
}

func (o ClusterInfoPtrOutput) ToClusterInfoPtrOutput() ClusterInfoPtrOutput {
	return o
}

func (o ClusterInfoPtrOutput) ToClusterInfoPtrOutputWithContext(ctx context.Context) ClusterInfoPtrOutput {
	return o
}

func (o ClusterInfoPtrOutput) Elem() ClusterInfoOutput {
	return o.ApplyT(func(v *ClusterInfo) ClusterInfo { return *v }).(ClusterInfoOutput)
}

// The resource id of cluster.
func (o ClusterInfoPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInfo) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfoResponse struct {
	// The resource id of cluster.
	Id *string `pulumi:"id"`
}

// ClusterInfoResponseInput is an input type that accepts ClusterInfoResponseArgs and ClusterInfoResponseOutput values.
// You can construct a concrete instance of `ClusterInfoResponseInput` via:
//
//          ClusterInfoResponseArgs{...}
type ClusterInfoResponseInput interface {
	pulumi.Input

	ToClusterInfoResponseOutput() ClusterInfoResponseOutput
	ToClusterInfoResponseOutputWithContext(context.Context) ClusterInfoResponseOutput
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfoResponseArgs struct {
	// The resource id of cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ClusterInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInfoResponse)(nil)).Elem()
}

func (i ClusterInfoResponseArgs) ToClusterInfoResponseOutput() ClusterInfoResponseOutput {
	return i.ToClusterInfoResponseOutputWithContext(context.Background())
}

func (i ClusterInfoResponseArgs) ToClusterInfoResponseOutputWithContext(ctx context.Context) ClusterInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoResponseOutput)
}

func (i ClusterInfoResponseArgs) ToClusterInfoResponsePtrOutput() ClusterInfoResponsePtrOutput {
	return i.ToClusterInfoResponsePtrOutputWithContext(context.Background())
}

func (i ClusterInfoResponseArgs) ToClusterInfoResponsePtrOutputWithContext(ctx context.Context) ClusterInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoResponseOutput).ToClusterInfoResponsePtrOutputWithContext(ctx)
}

// ClusterInfoResponsePtrInput is an input type that accepts ClusterInfoResponseArgs, ClusterInfoResponsePtr and ClusterInfoResponsePtrOutput values.
// You can construct a concrete instance of `ClusterInfoResponsePtrInput` via:
//
//          ClusterInfoResponseArgs{...}
//
//  or:
//
//          nil
type ClusterInfoResponsePtrInput interface {
	pulumi.Input

	ToClusterInfoResponsePtrOutput() ClusterInfoResponsePtrOutput
	ToClusterInfoResponsePtrOutputWithContext(context.Context) ClusterInfoResponsePtrOutput
}

type clusterInfoResponsePtrType ClusterInfoResponseArgs

func ClusterInfoResponsePtr(v *ClusterInfoResponseArgs) ClusterInfoResponsePtrInput {
	return (*clusterInfoResponsePtrType)(v)
}

func (*clusterInfoResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInfoResponse)(nil)).Elem()
}

func (i *clusterInfoResponsePtrType) ToClusterInfoResponsePtrOutput() ClusterInfoResponsePtrOutput {
	return i.ToClusterInfoResponsePtrOutputWithContext(context.Background())
}

func (i *clusterInfoResponsePtrType) ToClusterInfoResponsePtrOutputWithContext(ctx context.Context) ClusterInfoResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInfoResponsePtrOutput)
}

// The properties associated with a Stream Analytics cluster.
type ClusterInfoResponseOutput struct{ *pulumi.OutputState }

func (ClusterInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInfoResponse)(nil)).Elem()
}

func (o ClusterInfoResponseOutput) ToClusterInfoResponseOutput() ClusterInfoResponseOutput {
	return o
}

func (o ClusterInfoResponseOutput) ToClusterInfoResponseOutputWithContext(ctx context.Context) ClusterInfoResponseOutput {
	return o
}

func (o ClusterInfoResponseOutput) ToClusterInfoResponsePtrOutput() ClusterInfoResponsePtrOutput {
	return o.ToClusterInfoResponsePtrOutputWithContext(context.Background())
}

func (o ClusterInfoResponseOutput) ToClusterInfoResponsePtrOutputWithContext(ctx context.Context) ClusterInfoResponsePtrOutput {
	return o.ApplyT(func(v ClusterInfoResponse) *ClusterInfoResponse {
		return &v
	}).(ClusterInfoResponsePtrOutput)
}

// The resource id of cluster.
func (o ClusterInfoResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInfoResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ClusterInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ClusterInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterInfoResponse)(nil)).Elem()
}

func (o ClusterInfoResponsePtrOutput) ToClusterInfoResponsePtrOutput() ClusterInfoResponsePtrOutput {
	return o
}

func (o ClusterInfoResponsePtrOutput) ToClusterInfoResponsePtrOutputWithContext(ctx context.Context) ClusterInfoResponsePtrOutput {
	return o
}

func (o ClusterInfoResponsePtrOutput) Elem() ClusterInfoResponseOutput {
	return o.ApplyT(func(v *ClusterInfoResponse) ClusterInfoResponse { return *v }).(ClusterInfoResponseOutput)
}

// The resource id of cluster.
func (o ClusterInfoResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Describes how input data is compressed
type Compression struct {
	Type string `pulumi:"type"`
}

// CompressionInput is an input type that accepts CompressionArgs and CompressionOutput values.
// You can construct a concrete instance of `CompressionInput` via:
//
//          CompressionArgs{...}
type CompressionInput interface {
	pulumi.Input

	ToCompressionOutput() CompressionOutput
	ToCompressionOutputWithContext(context.Context) CompressionOutput
}

// Describes how input data is compressed
type CompressionArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (CompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Compression)(nil)).Elem()
}

func (i CompressionArgs) ToCompressionOutput() CompressionOutput {
	return i.ToCompressionOutputWithContext(context.Background())
}

func (i CompressionArgs) ToCompressionOutputWithContext(ctx context.Context) CompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionOutput)
}

func (i CompressionArgs) ToCompressionPtrOutput() CompressionPtrOutput {
	return i.ToCompressionPtrOutputWithContext(context.Background())
}

func (i CompressionArgs) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionOutput).ToCompressionPtrOutputWithContext(ctx)
}

// CompressionPtrInput is an input type that accepts CompressionArgs, CompressionPtr and CompressionPtrOutput values.
// You can construct a concrete instance of `CompressionPtrInput` via:
//
//          CompressionArgs{...}
//
//  or:
//
//          nil
type CompressionPtrInput interface {
	pulumi.Input

	ToCompressionPtrOutput() CompressionPtrOutput
	ToCompressionPtrOutputWithContext(context.Context) CompressionPtrOutput
}

type compressionPtrType CompressionArgs

func CompressionPtr(v *CompressionArgs) CompressionPtrInput {
	return (*compressionPtrType)(v)
}

func (*compressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Compression)(nil)).Elem()
}

func (i *compressionPtrType) ToCompressionPtrOutput() CompressionPtrOutput {
	return i.ToCompressionPtrOutputWithContext(context.Background())
}

func (i *compressionPtrType) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionPtrOutput)
}

// Describes how input data is compressed
type CompressionOutput struct{ *pulumi.OutputState }

func (CompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Compression)(nil)).Elem()
}

func (o CompressionOutput) ToCompressionOutput() CompressionOutput {
	return o
}

func (o CompressionOutput) ToCompressionOutputWithContext(ctx context.Context) CompressionOutput {
	return o
}

func (o CompressionOutput) ToCompressionPtrOutput() CompressionPtrOutput {
	return o.ToCompressionPtrOutputWithContext(context.Background())
}

func (o CompressionOutput) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return o.ApplyT(func(v Compression) *Compression {
		return &v
	}).(CompressionPtrOutput)
}
func (o CompressionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v Compression) string { return v.Type }).(pulumi.StringOutput)
}

type CompressionPtrOutput struct{ *pulumi.OutputState }

func (CompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Compression)(nil)).Elem()
}

func (o CompressionPtrOutput) ToCompressionPtrOutput() CompressionPtrOutput {
	return o
}

func (o CompressionPtrOutput) ToCompressionPtrOutputWithContext(ctx context.Context) CompressionPtrOutput {
	return o
}

func (o CompressionPtrOutput) Elem() CompressionOutput {
	return o.ApplyT(func(v *Compression) Compression { return *v }).(CompressionOutput)
}

func (o CompressionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Compression) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes how input data is compressed
type CompressionResponse struct {
	Type string `pulumi:"type"`
}

// CompressionResponseInput is an input type that accepts CompressionResponseArgs and CompressionResponseOutput values.
// You can construct a concrete instance of `CompressionResponseInput` via:
//
//          CompressionResponseArgs{...}
type CompressionResponseInput interface {
	pulumi.Input

	ToCompressionResponseOutput() CompressionResponseOutput
	ToCompressionResponseOutputWithContext(context.Context) CompressionResponseOutput
}

// Describes how input data is compressed
type CompressionResponseArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (CompressionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionResponse)(nil)).Elem()
}

func (i CompressionResponseArgs) ToCompressionResponseOutput() CompressionResponseOutput {
	return i.ToCompressionResponseOutputWithContext(context.Background())
}

func (i CompressionResponseArgs) ToCompressionResponseOutputWithContext(ctx context.Context) CompressionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionResponseOutput)
}

func (i CompressionResponseArgs) ToCompressionResponsePtrOutput() CompressionResponsePtrOutput {
	return i.ToCompressionResponsePtrOutputWithContext(context.Background())
}

func (i CompressionResponseArgs) ToCompressionResponsePtrOutputWithContext(ctx context.Context) CompressionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionResponseOutput).ToCompressionResponsePtrOutputWithContext(ctx)
}

// CompressionResponsePtrInput is an input type that accepts CompressionResponseArgs, CompressionResponsePtr and CompressionResponsePtrOutput values.
// You can construct a concrete instance of `CompressionResponsePtrInput` via:
//
//          CompressionResponseArgs{...}
//
//  or:
//
//          nil
type CompressionResponsePtrInput interface {
	pulumi.Input

	ToCompressionResponsePtrOutput() CompressionResponsePtrOutput
	ToCompressionResponsePtrOutputWithContext(context.Context) CompressionResponsePtrOutput
}

type compressionResponsePtrType CompressionResponseArgs

func CompressionResponsePtr(v *CompressionResponseArgs) CompressionResponsePtrInput {
	return (*compressionResponsePtrType)(v)
}

func (*compressionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionResponse)(nil)).Elem()
}

func (i *compressionResponsePtrType) ToCompressionResponsePtrOutput() CompressionResponsePtrOutput {
	return i.ToCompressionResponsePtrOutputWithContext(context.Background())
}

func (i *compressionResponsePtrType) ToCompressionResponsePtrOutputWithContext(ctx context.Context) CompressionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompressionResponsePtrOutput)
}

// Describes how input data is compressed
type CompressionResponseOutput struct{ *pulumi.OutputState }

func (CompressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompressionResponse)(nil)).Elem()
}

func (o CompressionResponseOutput) ToCompressionResponseOutput() CompressionResponseOutput {
	return o
}

func (o CompressionResponseOutput) ToCompressionResponseOutputWithContext(ctx context.Context) CompressionResponseOutput {
	return o
}

func (o CompressionResponseOutput) ToCompressionResponsePtrOutput() CompressionResponsePtrOutput {
	return o.ToCompressionResponsePtrOutputWithContext(context.Background())
}

func (o CompressionResponseOutput) ToCompressionResponsePtrOutputWithContext(ctx context.Context) CompressionResponsePtrOutput {
	return o.ApplyT(func(v CompressionResponse) *CompressionResponse {
		return &v
	}).(CompressionResponsePtrOutput)
}
func (o CompressionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CompressionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type CompressionResponsePtrOutput struct{ *pulumi.OutputState }

func (CompressionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompressionResponse)(nil)).Elem()
}

func (o CompressionResponsePtrOutput) ToCompressionResponsePtrOutput() CompressionResponsePtrOutput {
	return o
}

func (o CompressionResponsePtrOutput) ToCompressionResponsePtrOutputWithContext(ctx context.Context) CompressionResponsePtrOutput {
	return o
}

func (o CompressionResponsePtrOutput) Elem() CompressionResponseOutput {
	return o.ApplyT(func(v *CompressionResponse) CompressionResponse { return *v }).(CompressionResponseOutput)
}

func (o CompressionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompressionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerialization struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding *string `pulumi:"encoding"`
	// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
	FieldDelimiter *string `pulumi:"fieldDelimiter"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// CsvSerializationInput is an input type that accepts CsvSerializationArgs and CsvSerializationOutput values.
// You can construct a concrete instance of `CsvSerializationInput` via:
//
//          CsvSerializationArgs{...}
type CsvSerializationInput interface {
	pulumi.Input

	ToCsvSerializationOutput() CsvSerializationOutput
	ToCsvSerializationOutputWithContext(context.Context) CsvSerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerializationArgs struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
	FieldDelimiter pulumi.StringPtrInput `pulumi:"fieldDelimiter"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CsvSerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsvSerialization)(nil)).Elem()
}

func (i CsvSerializationArgs) ToCsvSerializationOutput() CsvSerializationOutput {
	return i.ToCsvSerializationOutputWithContext(context.Background())
}

func (i CsvSerializationArgs) ToCsvSerializationOutputWithContext(ctx context.Context) CsvSerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsvSerializationOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerializationOutput struct{ *pulumi.OutputState }

func (CsvSerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsvSerialization)(nil)).Elem()
}

func (o CsvSerializationOutput) ToCsvSerializationOutput() CsvSerializationOutput {
	return o
}

func (o CsvSerializationOutput) ToCsvSerializationOutputWithContext(ctx context.Context) CsvSerializationOutput {
	return o
}

// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsvSerialization) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationOutput) FieldDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsvSerialization) *string { return v.FieldDelimiter }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CsvSerialization) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerializationResponse struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding *string `pulumi:"encoding"`
	// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
	FieldDelimiter *string `pulumi:"fieldDelimiter"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// CsvSerializationResponseInput is an input type that accepts CsvSerializationResponseArgs and CsvSerializationResponseOutput values.
// You can construct a concrete instance of `CsvSerializationResponseInput` via:
//
//          CsvSerializationResponseArgs{...}
type CsvSerializationResponseInput interface {
	pulumi.Input

	ToCsvSerializationResponseOutput() CsvSerializationResponseOutput
	ToCsvSerializationResponseOutputWithContext(context.Context) CsvSerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerializationResponseArgs struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
	FieldDelimiter pulumi.StringPtrInput `pulumi:"fieldDelimiter"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CsvSerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CsvSerializationResponse)(nil)).Elem()
}

func (i CsvSerializationResponseArgs) ToCsvSerializationResponseOutput() CsvSerializationResponseOutput {
	return i.ToCsvSerializationResponseOutputWithContext(context.Background())
}

func (i CsvSerializationResponseArgs) ToCsvSerializationResponseOutputWithContext(ctx context.Context) CsvSerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsvSerializationResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
type CsvSerializationResponseOutput struct{ *pulumi.OutputState }

func (CsvSerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CsvSerializationResponse)(nil)).Elem()
}

func (o CsvSerializationResponseOutput) ToCsvSerializationResponseOutput() CsvSerializationResponseOutput {
	return o
}

func (o CsvSerializationResponseOutput) ToCsvSerializationResponseOutputWithContext(ctx context.Context) CsvSerializationResponseOutput {
	return o
}

// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationResponseOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsvSerializationResponse) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationResponseOutput) FieldDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CsvSerializationResponse) *string { return v.FieldDelimiter }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o CsvSerializationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CsvSerializationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerialization struct {
	// The serialization class name.
	SerializationClassName *string `pulumi:"serializationClassName"`
	// The serialization library path.
	SerializationDllPath *string `pulumi:"serializationDllPath"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// CustomClrSerializationInput is an input type that accepts CustomClrSerializationArgs and CustomClrSerializationOutput values.
// You can construct a concrete instance of `CustomClrSerializationInput` via:
//
//          CustomClrSerializationArgs{...}
type CustomClrSerializationInput interface {
	pulumi.Input

	ToCustomClrSerializationOutput() CustomClrSerializationOutput
	ToCustomClrSerializationOutputWithContext(context.Context) CustomClrSerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerializationArgs struct {
	// The serialization class name.
	SerializationClassName pulumi.StringPtrInput `pulumi:"serializationClassName"`
	// The serialization library path.
	SerializationDllPath pulumi.StringPtrInput `pulumi:"serializationDllPath"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomClrSerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClrSerialization)(nil)).Elem()
}

func (i CustomClrSerializationArgs) ToCustomClrSerializationOutput() CustomClrSerializationOutput {
	return i.ToCustomClrSerializationOutputWithContext(context.Background())
}

func (i CustomClrSerializationArgs) ToCustomClrSerializationOutputWithContext(ctx context.Context) CustomClrSerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomClrSerializationOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerializationOutput struct{ *pulumi.OutputState }

func (CustomClrSerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClrSerialization)(nil)).Elem()
}

func (o CustomClrSerializationOutput) ToCustomClrSerializationOutput() CustomClrSerializationOutput {
	return o
}

func (o CustomClrSerializationOutput) ToCustomClrSerializationOutputWithContext(ctx context.Context) CustomClrSerializationOutput {
	return o
}

// The serialization class name.
func (o CustomClrSerializationOutput) SerializationClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomClrSerialization) *string { return v.SerializationClassName }).(pulumi.StringPtrOutput)
}

// The serialization library path.
func (o CustomClrSerializationOutput) SerializationDllPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomClrSerialization) *string { return v.SerializationDllPath }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o CustomClrSerializationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomClrSerialization) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerializationResponse struct {
	// The serialization class name.
	SerializationClassName *string `pulumi:"serializationClassName"`
	// The serialization library path.
	SerializationDllPath *string `pulumi:"serializationDllPath"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// CustomClrSerializationResponseInput is an input type that accepts CustomClrSerializationResponseArgs and CustomClrSerializationResponseOutput values.
// You can construct a concrete instance of `CustomClrSerializationResponseInput` via:
//
//          CustomClrSerializationResponseArgs{...}
type CustomClrSerializationResponseInput interface {
	pulumi.Input

	ToCustomClrSerializationResponseOutput() CustomClrSerializationResponseOutput
	ToCustomClrSerializationResponseOutputWithContext(context.Context) CustomClrSerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerializationResponseArgs struct {
	// The serialization class name.
	SerializationClassName pulumi.StringPtrInput `pulumi:"serializationClassName"`
	// The serialization library path.
	SerializationDllPath pulumi.StringPtrInput `pulumi:"serializationDllPath"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomClrSerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClrSerializationResponse)(nil)).Elem()
}

func (i CustomClrSerializationResponseArgs) ToCustomClrSerializationResponseOutput() CustomClrSerializationResponseOutput {
	return i.ToCustomClrSerializationResponseOutputWithContext(context.Background())
}

func (i CustomClrSerializationResponseArgs) ToCustomClrSerializationResponseOutputWithContext(ctx context.Context) CustomClrSerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomClrSerializationResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in custom format.
type CustomClrSerializationResponseOutput struct{ *pulumi.OutputState }

func (CustomClrSerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomClrSerializationResponse)(nil)).Elem()
}

func (o CustomClrSerializationResponseOutput) ToCustomClrSerializationResponseOutput() CustomClrSerializationResponseOutput {
	return o
}

func (o CustomClrSerializationResponseOutput) ToCustomClrSerializationResponseOutputWithContext(ctx context.Context) CustomClrSerializationResponseOutput {
	return o
}

// The serialization class name.
func (o CustomClrSerializationResponseOutput) SerializationClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomClrSerializationResponse) *string { return v.SerializationClassName }).(pulumi.StringPtrOutput)
}

// The serialization library path.
func (o CustomClrSerializationResponseOutput) SerializationDllPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomClrSerializationResponse) *string { return v.SerializationDllPath }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o CustomClrSerializationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomClrSerializationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponse struct {
	// The opaque diagnostic code.
	Code string `pulumi:"code"`
	// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
	Message string `pulumi:"message"`
	// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
	Since string `pulumi:"since"`
}

// DiagnosticConditionResponseInput is an input type that accepts DiagnosticConditionResponseArgs and DiagnosticConditionResponseOutput values.
// You can construct a concrete instance of `DiagnosticConditionResponseInput` via:
//
//          DiagnosticConditionResponseArgs{...}
type DiagnosticConditionResponseInput interface {
	pulumi.Input

	ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput
	ToDiagnosticConditionResponseOutputWithContext(context.Context) DiagnosticConditionResponseOutput
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponseArgs struct {
	// The opaque diagnostic code.
	Code pulumi.StringInput `pulumi:"code"`
	// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
	Message pulumi.StringInput `pulumi:"message"`
	// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
	Since pulumi.StringInput `pulumi:"since"`
}

func (DiagnosticConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticConditionResponse)(nil)).Elem()
}

func (i DiagnosticConditionResponseArgs) ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput {
	return i.ToDiagnosticConditionResponseOutputWithContext(context.Background())
}

func (i DiagnosticConditionResponseArgs) ToDiagnosticConditionResponseOutputWithContext(ctx context.Context) DiagnosticConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticConditionResponseOutput)
}

// DiagnosticConditionResponseArrayInput is an input type that accepts DiagnosticConditionResponseArray and DiagnosticConditionResponseArrayOutput values.
// You can construct a concrete instance of `DiagnosticConditionResponseArrayInput` via:
//
//          DiagnosticConditionResponseArray{ DiagnosticConditionResponseArgs{...} }
type DiagnosticConditionResponseArrayInput interface {
	pulumi.Input

	ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput
	ToDiagnosticConditionResponseArrayOutputWithContext(context.Context) DiagnosticConditionResponseArrayOutput
}

type DiagnosticConditionResponseArray []DiagnosticConditionResponseInput

func (DiagnosticConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticConditionResponse)(nil)).Elem()
}

func (i DiagnosticConditionResponseArray) ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput {
	return i.ToDiagnosticConditionResponseArrayOutputWithContext(context.Background())
}

func (i DiagnosticConditionResponseArray) ToDiagnosticConditionResponseArrayOutputWithContext(ctx context.Context) DiagnosticConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticConditionResponseArrayOutput)
}

// Condition applicable to the resource, or to the job overall, that warrant customer attention.
type DiagnosticConditionResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticConditionResponse)(nil)).Elem()
}

func (o DiagnosticConditionResponseOutput) ToDiagnosticConditionResponseOutput() DiagnosticConditionResponseOutput {
	return o
}

func (o DiagnosticConditionResponseOutput) ToDiagnosticConditionResponseOutputWithContext(ctx context.Context) DiagnosticConditionResponseOutput {
	return o
}

// The opaque diagnostic code.
func (o DiagnosticConditionResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
func (o DiagnosticConditionResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Message }).(pulumi.StringOutput)
}

// The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
func (o DiagnosticConditionResponseOutput) Since() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticConditionResponse) string { return v.Since }).(pulumi.StringOutput)
}

type DiagnosticConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticConditionResponse)(nil)).Elem()
}

func (o DiagnosticConditionResponseArrayOutput) ToDiagnosticConditionResponseArrayOutput() DiagnosticConditionResponseArrayOutput {
	return o
}

func (o DiagnosticConditionResponseArrayOutput) ToDiagnosticConditionResponseArrayOutputWithContext(ctx context.Context) DiagnosticConditionResponseArrayOutput {
	return o
}

func (o DiagnosticConditionResponseArrayOutput) Index(i pulumi.IntInput) DiagnosticConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticConditionResponse {
		return vs[0].([]DiagnosticConditionResponse)[vs[1].(int)]
	}).(DiagnosticConditionResponseOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponse struct {
	// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
	Conditions []DiagnosticConditionResponse `pulumi:"conditions"`
}

// DiagnosticsResponseInput is an input type that accepts DiagnosticsResponseArgs and DiagnosticsResponseOutput values.
// You can construct a concrete instance of `DiagnosticsResponseInput` via:
//
//          DiagnosticsResponseArgs{...}
type DiagnosticsResponseInput interface {
	pulumi.Input

	ToDiagnosticsResponseOutput() DiagnosticsResponseOutput
	ToDiagnosticsResponseOutputWithContext(context.Context) DiagnosticsResponseOutput
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponseArgs struct {
	// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
	Conditions DiagnosticConditionResponseArrayInput `pulumi:"conditions"`
}

func (DiagnosticsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsResponse)(nil)).Elem()
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponseOutput() DiagnosticsResponseOutput {
	return i.ToDiagnosticsResponseOutputWithContext(context.Background())
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponseOutputWithContext(ctx context.Context) DiagnosticsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponseOutput)
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return i.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticsResponseArgs) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponseOutput).ToDiagnosticsResponsePtrOutputWithContext(ctx)
}

// DiagnosticsResponsePtrInput is an input type that accepts DiagnosticsResponseArgs, DiagnosticsResponsePtr and DiagnosticsResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticsResponsePtrInput` via:
//
//          DiagnosticsResponseArgs{...}
//
//  or:
//
//          nil
type DiagnosticsResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput
	ToDiagnosticsResponsePtrOutputWithContext(context.Context) DiagnosticsResponsePtrOutput
}

type diagnosticsResponsePtrType DiagnosticsResponseArgs

func DiagnosticsResponsePtr(v *DiagnosticsResponseArgs) DiagnosticsResponsePtrInput {
	return (*diagnosticsResponsePtrType)(v)
}

func (*diagnosticsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsResponse)(nil)).Elem()
}

func (i *diagnosticsResponsePtrType) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return i.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticsResponsePtrType) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticsResponsePtrOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
type DiagnosticsResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticsResponse)(nil)).Elem()
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponseOutput() DiagnosticsResponseOutput {
	return o
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponseOutputWithContext(ctx context.Context) DiagnosticsResponseOutput {
	return o
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return o.ToDiagnosticsResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticsResponseOutput) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return o.ApplyT(func(v DiagnosticsResponse) *DiagnosticsResponse {
		return &v
	}).(DiagnosticsResponsePtrOutput)
}

// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
func (o DiagnosticsResponseOutput) Conditions() DiagnosticConditionResponseArrayOutput {
	return o.ApplyT(func(v DiagnosticsResponse) []DiagnosticConditionResponse { return v.Conditions }).(DiagnosticConditionResponseArrayOutput)
}

type DiagnosticsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticsResponse)(nil)).Elem()
}

func (o DiagnosticsResponsePtrOutput) ToDiagnosticsResponsePtrOutput() DiagnosticsResponsePtrOutput {
	return o
}

func (o DiagnosticsResponsePtrOutput) ToDiagnosticsResponsePtrOutputWithContext(ctx context.Context) DiagnosticsResponsePtrOutput {
	return o
}

func (o DiagnosticsResponsePtrOutput) Elem() DiagnosticsResponseOutput {
	return o.ApplyT(func(v *DiagnosticsResponse) DiagnosticsResponse { return *v }).(DiagnosticsResponseOutput)
}

// A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
func (o DiagnosticsResponsePtrOutput) Conditions() DiagnosticConditionResponseArrayOutput {
	return o.ApplyT(func(v *DiagnosticsResponse) []DiagnosticConditionResponse {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(DiagnosticConditionResponseArrayOutput)
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSource struct {
	// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
	AccountId *string `pulumi:"accountId"`
	// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
	CollectionNamePattern *string `pulumi:"collectionNamePattern"`
	// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// The name of the field in output events used to specify the primary key which insert or update operations are based on.
	DocumentId *string `pulumi:"documentId"`
	// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
	PartitionKey *string `pulumi:"partitionKey"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// DocumentDbOutputDataSourceInput is an input type that accepts DocumentDbOutputDataSourceArgs and DocumentDbOutputDataSourceOutput values.
// You can construct a concrete instance of `DocumentDbOutputDataSourceInput` via:
//
//          DocumentDbOutputDataSourceArgs{...}
type DocumentDbOutputDataSourceInput interface {
	pulumi.Input

	ToDocumentDbOutputDataSourceOutput() DocumentDbOutputDataSourceOutput
	ToDocumentDbOutputDataSourceOutputWithContext(context.Context) DocumentDbOutputDataSourceOutput
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSourceArgs struct {
	// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
	CollectionNamePattern pulumi.StringPtrInput `pulumi:"collectionNamePattern"`
	// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The name of the field in output events used to specify the primary key which insert or update operations are based on.
	DocumentId pulumi.StringPtrInput `pulumi:"documentId"`
	// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbOutputDataSource)(nil)).Elem()
}

func (i DocumentDbOutputDataSourceArgs) ToDocumentDbOutputDataSourceOutput() DocumentDbOutputDataSourceOutput {
	return i.ToDocumentDbOutputDataSourceOutputWithContext(context.Background())
}

func (i DocumentDbOutputDataSourceArgs) ToDocumentDbOutputDataSourceOutputWithContext(ctx context.Context) DocumentDbOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbOutputDataSourceOutput)
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSourceOutput struct{ *pulumi.OutputState }

func (DocumentDbOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbOutputDataSource)(nil)).Elem()
}

func (o DocumentDbOutputDataSourceOutput) ToDocumentDbOutputDataSourceOutput() DocumentDbOutputDataSourceOutput {
	return o
}

func (o DocumentDbOutputDataSourceOutput) ToDocumentDbOutputDataSourceOutputWithContext(ctx context.Context) DocumentDbOutputDataSourceOutput {
	return o
}

// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceOutput) CollectionNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.CollectionNamePattern }).(pulumi.StringPtrOutput)
}

// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The name of the field in output events used to specify the primary key which insert or update operations are based on.
func (o DocumentDbOutputDataSourceOutput) DocumentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.DocumentId }).(pulumi.StringPtrOutput)
}

// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
func (o DocumentDbOutputDataSourceOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSourceResponse struct {
	// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
	AccountId *string `pulumi:"accountId"`
	// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
	CollectionNamePattern *string `pulumi:"collectionNamePattern"`
	// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
	Database *string `pulumi:"database"`
	// The name of the field in output events used to specify the primary key which insert or update operations are based on.
	DocumentId *string `pulumi:"documentId"`
	// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
	PartitionKey *string `pulumi:"partitionKey"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// DocumentDbOutputDataSourceResponseInput is an input type that accepts DocumentDbOutputDataSourceResponseArgs and DocumentDbOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `DocumentDbOutputDataSourceResponseInput` via:
//
//          DocumentDbOutputDataSourceResponseArgs{...}
type DocumentDbOutputDataSourceResponseInput interface {
	pulumi.Input

	ToDocumentDbOutputDataSourceResponseOutput() DocumentDbOutputDataSourceResponseOutput
	ToDocumentDbOutputDataSourceResponseOutputWithContext(context.Context) DocumentDbOutputDataSourceResponseOutput
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSourceResponseArgs struct {
	// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
	CollectionNamePattern pulumi.StringPtrInput `pulumi:"collectionNamePattern"`
	// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
	Database pulumi.StringPtrInput `pulumi:"database"`
	// The name of the field in output events used to specify the primary key which insert or update operations are based on.
	DocumentId pulumi.StringPtrInput `pulumi:"documentId"`
	// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DocumentDbOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbOutputDataSourceResponse)(nil)).Elem()
}

func (i DocumentDbOutputDataSourceResponseArgs) ToDocumentDbOutputDataSourceResponseOutput() DocumentDbOutputDataSourceResponseOutput {
	return i.ToDocumentDbOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i DocumentDbOutputDataSourceResponseArgs) ToDocumentDbOutputDataSourceResponseOutputWithContext(ctx context.Context) DocumentDbOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentDbOutputDataSourceResponseOutput)
}

// Describes a DocumentDB output data source.
type DocumentDbOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (DocumentDbOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentDbOutputDataSourceResponse)(nil)).Elem()
}

func (o DocumentDbOutputDataSourceResponseOutput) ToDocumentDbOutputDataSourceResponseOutput() DocumentDbOutputDataSourceResponseOutput {
	return o
}

func (o DocumentDbOutputDataSourceResponseOutput) ToDocumentDbOutputDataSourceResponseOutputWithContext(ctx context.Context) DocumentDbOutputDataSourceResponseOutput {
	return o
}

// The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceResponseOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceResponseOutput) CollectionNamePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.CollectionNamePattern }).(pulumi.StringPtrOutput)
}

// The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceResponseOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// The name of the field in output events used to specify the primary key which insert or update operations are based on.
func (o DocumentDbOutputDataSourceResponseOutput) DocumentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.DocumentId }).(pulumi.StringPtrOutput)
}

// The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
func (o DocumentDbOutputDataSourceResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o DocumentDbOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DocumentDbOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub output data source.
type EventHubOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    *string  `pulumi:"partitionKey"`
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubOutputDataSourceInput is an input type that accepts EventHubOutputDataSourceArgs and EventHubOutputDataSourceOutput values.
// You can construct a concrete instance of `EventHubOutputDataSourceInput` via:
//
//          EventHubOutputDataSourceArgs{...}
type EventHubOutputDataSourceInput interface {
	pulumi.Input

	ToEventHubOutputDataSourceOutput() EventHubOutputDataSourceOutput
	ToEventHubOutputDataSourceOutputWithContext(context.Context) EventHubOutputDataSourceOutput
}

// Describes an Event Hub output data source.
type EventHubOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    pulumi.StringPtrInput   `pulumi:"partitionKey"`
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubOutputDataSource)(nil)).Elem()
}

func (i EventHubOutputDataSourceArgs) ToEventHubOutputDataSourceOutput() EventHubOutputDataSourceOutput {
	return i.ToEventHubOutputDataSourceOutputWithContext(context.Background())
}

func (i EventHubOutputDataSourceArgs) ToEventHubOutputDataSourceOutputWithContext(ctx context.Context) EventHubOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubOutputDataSourceOutput)
}

// Describes an Event Hub output data source.
type EventHubOutputDataSourceOutput struct{ *pulumi.OutputState }

func (EventHubOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubOutputDataSource)(nil)).Elem()
}

func (o EventHubOutputDataSourceOutput) ToEventHubOutputDataSourceOutput() EventHubOutputDataSourceOutput {
	return o
}

func (o EventHubOutputDataSourceOutput) ToEventHubOutputDataSourceOutputWithContext(ctx context.Context) EventHubOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o EventHubOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The key/column that is used to determine to which partition to send event data.
func (o EventHubOutputDataSourceOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

func (o EventHubOutputDataSourceOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub output data source.
type EventHubOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    *string  `pulumi:"partitionKey"`
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubOutputDataSourceResponseInput is an input type that accepts EventHubOutputDataSourceResponseArgs and EventHubOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `EventHubOutputDataSourceResponseInput` via:
//
//          EventHubOutputDataSourceResponseArgs{...}
type EventHubOutputDataSourceResponseInput interface {
	pulumi.Input

	ToEventHubOutputDataSourceResponseOutput() EventHubOutputDataSourceResponseOutput
	ToEventHubOutputDataSourceResponseOutputWithContext(context.Context) EventHubOutputDataSourceResponseOutput
}

// Describes an Event Hub output data source.
type EventHubOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    pulumi.StringPtrInput   `pulumi:"partitionKey"`
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubOutputDataSourceResponse)(nil)).Elem()
}

func (i EventHubOutputDataSourceResponseArgs) ToEventHubOutputDataSourceResponseOutput() EventHubOutputDataSourceResponseOutput {
	return i.ToEventHubOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i EventHubOutputDataSourceResponseArgs) ToEventHubOutputDataSourceResponseOutputWithContext(ctx context.Context) EventHubOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubOutputDataSourceResponseOutput)
}

// Describes an Event Hub output data source.
type EventHubOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (EventHubOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubOutputDataSourceResponse)(nil)).Elem()
}

func (o EventHubOutputDataSourceResponseOutput) ToEventHubOutputDataSourceResponseOutput() EventHubOutputDataSourceResponseOutput {
	return o
}

func (o EventHubOutputDataSourceResponseOutput) ToEventHubOutputDataSourceResponseOutputWithContext(ctx context.Context) EventHubOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o EventHubOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceResponseOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The key/column that is used to determine to which partition to send event data.
func (o EventHubOutputDataSourceResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

func (o EventHubOutputDataSourceResponseOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o EventHubOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubStreamInputDataSourceInput is an input type that accepts EventHubStreamInputDataSourceArgs and EventHubStreamInputDataSourceOutput values.
// You can construct a concrete instance of `EventHubStreamInputDataSourceInput` via:
//
//          EventHubStreamInputDataSourceArgs{...}
type EventHubStreamInputDataSourceInput interface {
	pulumi.Input

	ToEventHubStreamInputDataSourceOutput() EventHubStreamInputDataSourceOutput
	ToEventHubStreamInputDataSourceOutputWithContext(context.Context) EventHubStreamInputDataSourceOutput
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubStreamInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubStreamInputDataSource)(nil)).Elem()
}

func (i EventHubStreamInputDataSourceArgs) ToEventHubStreamInputDataSourceOutput() EventHubStreamInputDataSourceOutput {
	return i.ToEventHubStreamInputDataSourceOutputWithContext(context.Background())
}

func (i EventHubStreamInputDataSourceArgs) ToEventHubStreamInputDataSourceOutputWithContext(ctx context.Context) EventHubStreamInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubStreamInputDataSourceOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSourceOutput struct{ *pulumi.OutputState }

func (EventHubStreamInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubStreamInputDataSource)(nil)).Elem()
}

func (o EventHubStreamInputDataSourceOutput) ToEventHubStreamInputDataSourceOutput() EventHubStreamInputDataSourceOutput {
	return o
}

func (o EventHubStreamInputDataSourceOutput) ToEventHubStreamInputDataSourceOutputWithContext(ctx context.Context) EventHubStreamInputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o EventHubStreamInputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
func (o EventHubStreamInputDataSourceOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubStreamInputDataSourceResponseInput is an input type that accepts EventHubStreamInputDataSourceResponseArgs and EventHubStreamInputDataSourceResponseOutput values.
// You can construct a concrete instance of `EventHubStreamInputDataSourceResponseInput` via:
//
//          EventHubStreamInputDataSourceResponseArgs{...}
type EventHubStreamInputDataSourceResponseInput interface {
	pulumi.Input

	ToEventHubStreamInputDataSourceResponseOutput() EventHubStreamInputDataSourceResponseOutput
	ToEventHubStreamInputDataSourceResponseOutputWithContext(context.Context) EventHubStreamInputDataSourceResponseOutput
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubStreamInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubStreamInputDataSourceResponse)(nil)).Elem()
}

func (i EventHubStreamInputDataSourceResponseArgs) ToEventHubStreamInputDataSourceResponseOutput() EventHubStreamInputDataSourceResponseOutput {
	return i.ToEventHubStreamInputDataSourceResponseOutputWithContext(context.Background())
}

func (i EventHubStreamInputDataSourceResponseArgs) ToEventHubStreamInputDataSourceResponseOutputWithContext(ctx context.Context) EventHubStreamInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubStreamInputDataSourceResponseOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubStreamInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (EventHubStreamInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubStreamInputDataSourceResponse)(nil)).Elem()
}

func (o EventHubStreamInputDataSourceResponseOutput) ToEventHubStreamInputDataSourceResponseOutput() EventHubStreamInputDataSourceResponseOutput {
	return o
}

func (o EventHubStreamInputDataSourceResponseOutput) ToEventHubStreamInputDataSourceResponseOutputWithContext(ctx context.Context) EventHubStreamInputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o EventHubStreamInputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
func (o EventHubStreamInputDataSourceResponseOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceResponseOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o EventHubStreamInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubStreamInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    *string  `pulumi:"partitionKey"`
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubV2OutputDataSourceInput is an input type that accepts EventHubV2OutputDataSourceArgs and EventHubV2OutputDataSourceOutput values.
// You can construct a concrete instance of `EventHubV2OutputDataSourceInput` via:
//
//          EventHubV2OutputDataSourceArgs{...}
type EventHubV2OutputDataSourceInput interface {
	pulumi.Input

	ToEventHubV2OutputDataSourceOutput() EventHubV2OutputDataSourceOutput
	ToEventHubV2OutputDataSourceOutputWithContext(context.Context) EventHubV2OutputDataSourceOutput
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    pulumi.StringPtrInput   `pulumi:"partitionKey"`
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubV2OutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2OutputDataSource)(nil)).Elem()
}

func (i EventHubV2OutputDataSourceArgs) ToEventHubV2OutputDataSourceOutput() EventHubV2OutputDataSourceOutput {
	return i.ToEventHubV2OutputDataSourceOutputWithContext(context.Background())
}

func (i EventHubV2OutputDataSourceArgs) ToEventHubV2OutputDataSourceOutputWithContext(ctx context.Context) EventHubV2OutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubV2OutputDataSourceOutput)
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSourceOutput struct{ *pulumi.OutputState }

func (EventHubV2OutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2OutputDataSource)(nil)).Elem()
}

func (o EventHubV2OutputDataSourceOutput) ToEventHubV2OutputDataSourceOutput() EventHubV2OutputDataSourceOutput {
	return o
}

func (o EventHubV2OutputDataSourceOutput) ToEventHubV2OutputDataSourceOutputWithContext(ctx context.Context) EventHubV2OutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o EventHubV2OutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The key/column that is used to determine to which partition to send event data.
func (o EventHubV2OutputDataSourceOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

func (o EventHubV2OutputDataSourceOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    *string  `pulumi:"partitionKey"`
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubV2OutputDataSourceResponseInput is an input type that accepts EventHubV2OutputDataSourceResponseArgs and EventHubV2OutputDataSourceResponseOutput values.
// You can construct a concrete instance of `EventHubV2OutputDataSourceResponseInput` via:
//
//          EventHubV2OutputDataSourceResponseArgs{...}
type EventHubV2OutputDataSourceResponseInput interface {
	pulumi.Input

	ToEventHubV2OutputDataSourceResponseOutput() EventHubV2OutputDataSourceResponseOutput
	ToEventHubV2OutputDataSourceResponseOutputWithContext(context.Context) EventHubV2OutputDataSourceResponseOutput
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The key/column that is used to determine to which partition to send event data.
	PartitionKey    pulumi.StringPtrInput   `pulumi:"partitionKey"`
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubV2OutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2OutputDataSourceResponse)(nil)).Elem()
}

func (i EventHubV2OutputDataSourceResponseArgs) ToEventHubV2OutputDataSourceResponseOutput() EventHubV2OutputDataSourceResponseOutput {
	return i.ToEventHubV2OutputDataSourceResponseOutputWithContext(context.Background())
}

func (i EventHubV2OutputDataSourceResponseArgs) ToEventHubV2OutputDataSourceResponseOutputWithContext(ctx context.Context) EventHubV2OutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubV2OutputDataSourceResponseOutput)
}

// Describes an Event Hub output data source.
type EventHubV2OutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (EventHubV2OutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2OutputDataSourceResponse)(nil)).Elem()
}

func (o EventHubV2OutputDataSourceResponseOutput) ToEventHubV2OutputDataSourceResponseOutput() EventHubV2OutputDataSourceResponseOutput {
	return o
}

func (o EventHubV2OutputDataSourceResponseOutput) ToEventHubV2OutputDataSourceResponseOutputWithContext(ctx context.Context) EventHubV2OutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o EventHubV2OutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceResponseOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The key/column that is used to determine to which partition to send event data.
func (o EventHubV2OutputDataSourceResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

func (o EventHubV2OutputDataSourceResponseOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2OutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubV2OutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubV2StreamInputDataSourceInput is an input type that accepts EventHubV2StreamInputDataSourceArgs and EventHubV2StreamInputDataSourceOutput values.
// You can construct a concrete instance of `EventHubV2StreamInputDataSourceInput` via:
//
//          EventHubV2StreamInputDataSourceArgs{...}
type EventHubV2StreamInputDataSourceInput interface {
	pulumi.Input

	ToEventHubV2StreamInputDataSourceOutput() EventHubV2StreamInputDataSourceOutput
	ToEventHubV2StreamInputDataSourceOutputWithContext(context.Context) EventHubV2StreamInputDataSourceOutput
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubV2StreamInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2StreamInputDataSource)(nil)).Elem()
}

func (i EventHubV2StreamInputDataSourceArgs) ToEventHubV2StreamInputDataSourceOutput() EventHubV2StreamInputDataSourceOutput {
	return i.ToEventHubV2StreamInputDataSourceOutputWithContext(context.Background())
}

func (i EventHubV2StreamInputDataSourceArgs) ToEventHubV2StreamInputDataSourceOutputWithContext(ctx context.Context) EventHubV2StreamInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubV2StreamInputDataSourceOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSourceOutput struct{ *pulumi.OutputState }

func (EventHubV2StreamInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2StreamInputDataSource)(nil)).Elem()
}

func (o EventHubV2StreamInputDataSourceOutput) ToEventHubV2StreamInputDataSourceOutput() EventHubV2StreamInputDataSourceOutput {
	return o
}

func (o EventHubV2StreamInputDataSourceOutput) ToEventHubV2StreamInputDataSourceOutputWithContext(ctx context.Context) EventHubV2StreamInputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o EventHubV2StreamInputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
func (o EventHubV2StreamInputDataSourceOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName *string `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// EventHubV2StreamInputDataSourceResponseInput is an input type that accepts EventHubV2StreamInputDataSourceResponseArgs and EventHubV2StreamInputDataSourceResponseOutput values.
// You can construct a concrete instance of `EventHubV2StreamInputDataSourceResponseInput` via:
//
//          EventHubV2StreamInputDataSourceResponseArgs{...}
type EventHubV2StreamInputDataSourceResponseInput interface {
	pulumi.Input

	ToEventHubV2StreamInputDataSourceResponseOutput() EventHubV2StreamInputDataSourceResponseOutput
	ToEventHubV2StreamInputDataSourceResponseOutputWithContext(context.Context) EventHubV2StreamInputDataSourceResponseOutput
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
	EventHubName pulumi.StringPtrInput `pulumi:"eventHubName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventHubV2StreamInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2StreamInputDataSourceResponse)(nil)).Elem()
}

func (i EventHubV2StreamInputDataSourceResponseArgs) ToEventHubV2StreamInputDataSourceResponseOutput() EventHubV2StreamInputDataSourceResponseOutput {
	return i.ToEventHubV2StreamInputDataSourceResponseOutputWithContext(context.Background())
}

func (i EventHubV2StreamInputDataSourceResponseArgs) ToEventHubV2StreamInputDataSourceResponseOutputWithContext(ctx context.Context) EventHubV2StreamInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventHubV2StreamInputDataSourceResponseOutput)
}

// Describes an Event Hub input data source that contains stream data.
type EventHubV2StreamInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (EventHubV2StreamInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventHubV2StreamInputDataSourceResponse)(nil)).Elem()
}

func (o EventHubV2StreamInputDataSourceResponseOutput) ToEventHubV2StreamInputDataSourceResponseOutput() EventHubV2StreamInputDataSourceResponseOutput {
	return o
}

func (o EventHubV2StreamInputDataSourceResponseOutput) ToEventHubV2StreamInputDataSourceResponseOutputWithContext(ctx context.Context) EventHubV2StreamInputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o EventHubV2StreamInputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
func (o EventHubV2StreamInputDataSourceResponseOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceResponseOutput) EventHubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.EventHubName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o EventHubV2StreamInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventHubV2StreamInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The storage account where the custom code artifacts are located.
type External struct {
	Container *string `pulumi:"container"`
	Path      *string `pulumi:"path"`
	// The properties that are associated with an Azure Storage account
	StorageAccount *StorageAccount `pulumi:"storageAccount"`
}

// ExternalInput is an input type that accepts ExternalArgs and ExternalOutput values.
// You can construct a concrete instance of `ExternalInput` via:
//
//          ExternalArgs{...}
type ExternalInput interface {
	pulumi.Input

	ToExternalOutput() ExternalOutput
	ToExternalOutputWithContext(context.Context) ExternalOutput
}

// The storage account where the custom code artifacts are located.
type ExternalArgs struct {
	Container pulumi.StringPtrInput `pulumi:"container"`
	Path      pulumi.StringPtrInput `pulumi:"path"`
	// The properties that are associated with an Azure Storage account
	StorageAccount StorageAccountPtrInput `pulumi:"storageAccount"`
}

func (ExternalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*External)(nil)).Elem()
}

func (i ExternalArgs) ToExternalOutput() ExternalOutput {
	return i.ToExternalOutputWithContext(context.Background())
}

func (i ExternalArgs) ToExternalOutputWithContext(ctx context.Context) ExternalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalOutput)
}

func (i ExternalArgs) ToExternalPtrOutput() ExternalPtrOutput {
	return i.ToExternalPtrOutputWithContext(context.Background())
}

func (i ExternalArgs) ToExternalPtrOutputWithContext(ctx context.Context) ExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalOutput).ToExternalPtrOutputWithContext(ctx)
}

// ExternalPtrInput is an input type that accepts ExternalArgs, ExternalPtr and ExternalPtrOutput values.
// You can construct a concrete instance of `ExternalPtrInput` via:
//
//          ExternalArgs{...}
//
//  or:
//
//          nil
type ExternalPtrInput interface {
	pulumi.Input

	ToExternalPtrOutput() ExternalPtrOutput
	ToExternalPtrOutputWithContext(context.Context) ExternalPtrOutput
}

type externalPtrType ExternalArgs

func ExternalPtr(v *ExternalArgs) ExternalPtrInput {
	return (*externalPtrType)(v)
}

func (*externalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**External)(nil)).Elem()
}

func (i *externalPtrType) ToExternalPtrOutput() ExternalPtrOutput {
	return i.ToExternalPtrOutputWithContext(context.Background())
}

func (i *externalPtrType) ToExternalPtrOutputWithContext(ctx context.Context) ExternalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalPtrOutput)
}

// The storage account where the custom code artifacts are located.
type ExternalOutput struct{ *pulumi.OutputState }

func (ExternalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*External)(nil)).Elem()
}

func (o ExternalOutput) ToExternalOutput() ExternalOutput {
	return o
}

func (o ExternalOutput) ToExternalOutputWithContext(ctx context.Context) ExternalOutput {
	return o
}

func (o ExternalOutput) ToExternalPtrOutput() ExternalPtrOutput {
	return o.ToExternalPtrOutputWithContext(context.Background())
}

func (o ExternalOutput) ToExternalPtrOutputWithContext(ctx context.Context) ExternalPtrOutput {
	return o.ApplyT(func(v External) *External {
		return &v
	}).(ExternalPtrOutput)
}
func (o ExternalOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v External) *string { return v.Container }).(pulumi.StringPtrOutput)
}

func (o ExternalOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v External) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an Azure Storage account
func (o ExternalOutput) StorageAccount() StorageAccountPtrOutput {
	return o.ApplyT(func(v External) *StorageAccount { return v.StorageAccount }).(StorageAccountPtrOutput)
}

type ExternalPtrOutput struct{ *pulumi.OutputState }

func (ExternalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**External)(nil)).Elem()
}

func (o ExternalPtrOutput) ToExternalPtrOutput() ExternalPtrOutput {
	return o
}

func (o ExternalPtrOutput) ToExternalPtrOutputWithContext(ctx context.Context) ExternalPtrOutput {
	return o
}

func (o ExternalPtrOutput) Elem() ExternalOutput {
	return o.ApplyT(func(v *External) External { return *v }).(ExternalOutput)
}

func (o ExternalPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *External) *string {
		if v == nil {
			return nil
		}
		return v.Container
	}).(pulumi.StringPtrOutput)
}

func (o ExternalPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *External) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with an Azure Storage account
func (o ExternalPtrOutput) StorageAccount() StorageAccountPtrOutput {
	return o.ApplyT(func(v *External) *StorageAccount {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountPtrOutput)
}

// The storage account where the custom code artifacts are located.
type ExternalResponse struct {
	Container *string `pulumi:"container"`
	Path      *string `pulumi:"path"`
	// The properties that are associated with an Azure Storage account
	StorageAccount *StorageAccountResponse `pulumi:"storageAccount"`
}

// ExternalResponseInput is an input type that accepts ExternalResponseArgs and ExternalResponseOutput values.
// You can construct a concrete instance of `ExternalResponseInput` via:
//
//          ExternalResponseArgs{...}
type ExternalResponseInput interface {
	pulumi.Input

	ToExternalResponseOutput() ExternalResponseOutput
	ToExternalResponseOutputWithContext(context.Context) ExternalResponseOutput
}

// The storage account where the custom code artifacts are located.
type ExternalResponseArgs struct {
	Container pulumi.StringPtrInput `pulumi:"container"`
	Path      pulumi.StringPtrInput `pulumi:"path"`
	// The properties that are associated with an Azure Storage account
	StorageAccount StorageAccountResponsePtrInput `pulumi:"storageAccount"`
}

func (ExternalResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalResponse)(nil)).Elem()
}

func (i ExternalResponseArgs) ToExternalResponseOutput() ExternalResponseOutput {
	return i.ToExternalResponseOutputWithContext(context.Background())
}

func (i ExternalResponseArgs) ToExternalResponseOutputWithContext(ctx context.Context) ExternalResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalResponseOutput)
}

func (i ExternalResponseArgs) ToExternalResponsePtrOutput() ExternalResponsePtrOutput {
	return i.ToExternalResponsePtrOutputWithContext(context.Background())
}

func (i ExternalResponseArgs) ToExternalResponsePtrOutputWithContext(ctx context.Context) ExternalResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalResponseOutput).ToExternalResponsePtrOutputWithContext(ctx)
}

// ExternalResponsePtrInput is an input type that accepts ExternalResponseArgs, ExternalResponsePtr and ExternalResponsePtrOutput values.
// You can construct a concrete instance of `ExternalResponsePtrInput` via:
//
//          ExternalResponseArgs{...}
//
//  or:
//
//          nil
type ExternalResponsePtrInput interface {
	pulumi.Input

	ToExternalResponsePtrOutput() ExternalResponsePtrOutput
	ToExternalResponsePtrOutputWithContext(context.Context) ExternalResponsePtrOutput
}

type externalResponsePtrType ExternalResponseArgs

func ExternalResponsePtr(v *ExternalResponseArgs) ExternalResponsePtrInput {
	return (*externalResponsePtrType)(v)
}

func (*externalResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalResponse)(nil)).Elem()
}

func (i *externalResponsePtrType) ToExternalResponsePtrOutput() ExternalResponsePtrOutput {
	return i.ToExternalResponsePtrOutputWithContext(context.Background())
}

func (i *externalResponsePtrType) ToExternalResponsePtrOutputWithContext(ctx context.Context) ExternalResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalResponsePtrOutput)
}

// The storage account where the custom code artifacts are located.
type ExternalResponseOutput struct{ *pulumi.OutputState }

func (ExternalResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalResponse)(nil)).Elem()
}

func (o ExternalResponseOutput) ToExternalResponseOutput() ExternalResponseOutput {
	return o
}

func (o ExternalResponseOutput) ToExternalResponseOutputWithContext(ctx context.Context) ExternalResponseOutput {
	return o
}

func (o ExternalResponseOutput) ToExternalResponsePtrOutput() ExternalResponsePtrOutput {
	return o.ToExternalResponsePtrOutputWithContext(context.Background())
}

func (o ExternalResponseOutput) ToExternalResponsePtrOutputWithContext(ctx context.Context) ExternalResponsePtrOutput {
	return o.ApplyT(func(v ExternalResponse) *ExternalResponse {
		return &v
	}).(ExternalResponsePtrOutput)
}
func (o ExternalResponseOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalResponse) *string { return v.Container }).(pulumi.StringPtrOutput)
}

func (o ExternalResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an Azure Storage account
func (o ExternalResponseOutput) StorageAccount() StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v ExternalResponse) *StorageAccountResponse { return v.StorageAccount }).(StorageAccountResponsePtrOutput)
}

type ExternalResponsePtrOutput struct{ *pulumi.OutputState }

func (ExternalResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalResponse)(nil)).Elem()
}

func (o ExternalResponsePtrOutput) ToExternalResponsePtrOutput() ExternalResponsePtrOutput {
	return o
}

func (o ExternalResponsePtrOutput) ToExternalResponsePtrOutputWithContext(ctx context.Context) ExternalResponsePtrOutput {
	return o
}

func (o ExternalResponsePtrOutput) Elem() ExternalResponseOutput {
	return o.ApplyT(func(v *ExternalResponse) ExternalResponse { return *v }).(ExternalResponseOutput)
}

func (o ExternalResponsePtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Container
	}).(pulumi.StringPtrOutput)
}

func (o ExternalResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with an Azure Storage account
func (o ExternalResponsePtrOutput) StorageAccount() StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v *ExternalResponse) *StorageAccountResponse {
		if v == nil {
			return nil
		}
		return v.StorageAccount
	}).(StorageAccountResponsePtrOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionType struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a function.
	Properties interface{} `pulumi:"properties"`
}

// FunctionTypeInput is an input type that accepts FunctionTypeArgs and FunctionTypeOutput values.
// You can construct a concrete instance of `FunctionTypeInput` via:
//
//          FunctionTypeArgs{...}
type FunctionTypeInput interface {
	pulumi.Input

	ToFunctionTypeOutput() FunctionTypeOutput
	ToFunctionTypeOutputWithContext(context.Context) FunctionTypeOutput
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionTypeArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a function.
	Properties pulumi.Input `pulumi:"properties"`
}

func (FunctionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionType)(nil)).Elem()
}

func (i FunctionTypeArgs) ToFunctionTypeOutput() FunctionTypeOutput {
	return i.ToFunctionTypeOutputWithContext(context.Background())
}

func (i FunctionTypeArgs) ToFunctionTypeOutputWithContext(ctx context.Context) FunctionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTypeOutput)
}

// FunctionTypeArrayInput is an input type that accepts FunctionTypeArray and FunctionTypeArrayOutput values.
// You can construct a concrete instance of `FunctionTypeArrayInput` via:
//
//          FunctionTypeArray{ FunctionTypeArgs{...} }
type FunctionTypeArrayInput interface {
	pulumi.Input

	ToFunctionTypeArrayOutput() FunctionTypeArrayOutput
	ToFunctionTypeArrayOutputWithContext(context.Context) FunctionTypeArrayOutput
}

type FunctionTypeArray []FunctionTypeInput

func (FunctionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionType)(nil)).Elem()
}

func (i FunctionTypeArray) ToFunctionTypeArrayOutput() FunctionTypeArrayOutput {
	return i.ToFunctionTypeArrayOutputWithContext(context.Background())
}

func (i FunctionTypeArray) ToFunctionTypeArrayOutputWithContext(ctx context.Context) FunctionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionTypeArrayOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionTypeOutput struct{ *pulumi.OutputState }

func (FunctionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionType)(nil)).Elem()
}

func (o FunctionTypeOutput) ToFunctionTypeOutput() FunctionTypeOutput {
	return o
}

func (o FunctionTypeOutput) ToFunctionTypeOutputWithContext(ctx context.Context) FunctionTypeOutput {
	return o
}

// Resource name
func (o FunctionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
func (o FunctionTypeOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v FunctionType) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

type FunctionTypeArrayOutput struct{ *pulumi.OutputState }

func (FunctionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionType)(nil)).Elem()
}

func (o FunctionTypeArrayOutput) ToFunctionTypeArrayOutput() FunctionTypeArrayOutput {
	return o
}

func (o FunctionTypeArrayOutput) ToFunctionTypeArrayOutputWithContext(ctx context.Context) FunctionTypeArrayOutput {
	return o
}

func (o FunctionTypeArrayOutput) Index(i pulumi.IntInput) FunctionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionType {
		return vs[0].([]FunctionType)[vs[1].(int)]
	}).(FunctionTypeOutput)
}

// Describes one input parameter of a function.
type FunctionInput struct {
	// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType *string `pulumi:"dataType"`
	// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
	IsConfigurationParameter *bool `pulumi:"isConfigurationParameter"`
}

// FunctionInputInput is an input type that accepts FunctionInputArgs and FunctionInputOutput values.
// You can construct a concrete instance of `FunctionInputInput` via:
//
//          FunctionInputArgs{...}
type FunctionInputInput interface {
	pulumi.Input

	ToFunctionInputOutput() FunctionInputOutput
	ToFunctionInputOutputWithContext(context.Context) FunctionInputOutput
}

// Describes one input parameter of a function.
type FunctionInputArgs struct {
	// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
	IsConfigurationParameter pulumi.BoolPtrInput `pulumi:"isConfigurationParameter"`
}

func (FunctionInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionInput)(nil)).Elem()
}

func (i FunctionInputArgs) ToFunctionInputOutput() FunctionInputOutput {
	return i.ToFunctionInputOutputWithContext(context.Background())
}

func (i FunctionInputArgs) ToFunctionInputOutputWithContext(ctx context.Context) FunctionInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionInputOutput)
}

// FunctionInputArrayInput is an input type that accepts FunctionInputArray and FunctionInputArrayOutput values.
// You can construct a concrete instance of `FunctionInputArrayInput` via:
//
//          FunctionInputArray{ FunctionInputArgs{...} }
type FunctionInputArrayInput interface {
	pulumi.Input

	ToFunctionInputArrayOutput() FunctionInputArrayOutput
	ToFunctionInputArrayOutputWithContext(context.Context) FunctionInputArrayOutput
}

type FunctionInputArray []FunctionInputInput

func (FunctionInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionInput)(nil)).Elem()
}

func (i FunctionInputArray) ToFunctionInputArrayOutput() FunctionInputArrayOutput {
	return i.ToFunctionInputArrayOutputWithContext(context.Background())
}

func (i FunctionInputArray) ToFunctionInputArrayOutputWithContext(ctx context.Context) FunctionInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionInputArrayOutput)
}

// Describes one input parameter of a function.
type FunctionInputOutput struct{ *pulumi.OutputState }

func (FunctionInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionInput)(nil)).Elem()
}

func (o FunctionInputOutput) ToFunctionInputOutput() FunctionInputOutput {
	return o
}

func (o FunctionInputOutput) ToFunctionInputOutputWithContext(ctx context.Context) FunctionInputOutput {
	return o
}

// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionInputOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionInput) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
func (o FunctionInputOutput) IsConfigurationParameter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionInput) *bool { return v.IsConfigurationParameter }).(pulumi.BoolPtrOutput)
}

type FunctionInputArrayOutput struct{ *pulumi.OutputState }

func (FunctionInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionInput)(nil)).Elem()
}

func (o FunctionInputArrayOutput) ToFunctionInputArrayOutput() FunctionInputArrayOutput {
	return o
}

func (o FunctionInputArrayOutput) ToFunctionInputArrayOutputWithContext(ctx context.Context) FunctionInputArrayOutput {
	return o
}

func (o FunctionInputArrayOutput) Index(i pulumi.IntInput) FunctionInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionInput {
		return vs[0].([]FunctionInput)[vs[1].(int)]
	}).(FunctionInputOutput)
}

// Describes one input parameter of a function.
type FunctionInputResponse struct {
	// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType *string `pulumi:"dataType"`
	// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
	IsConfigurationParameter *bool `pulumi:"isConfigurationParameter"`
}

// FunctionInputResponseInput is an input type that accepts FunctionInputResponseArgs and FunctionInputResponseOutput values.
// You can construct a concrete instance of `FunctionInputResponseInput` via:
//
//          FunctionInputResponseArgs{...}
type FunctionInputResponseInput interface {
	pulumi.Input

	ToFunctionInputResponseOutput() FunctionInputResponseOutput
	ToFunctionInputResponseOutputWithContext(context.Context) FunctionInputResponseOutput
}

// Describes one input parameter of a function.
type FunctionInputResponseArgs struct {
	// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
	IsConfigurationParameter pulumi.BoolPtrInput `pulumi:"isConfigurationParameter"`
}

func (FunctionInputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionInputResponse)(nil)).Elem()
}

func (i FunctionInputResponseArgs) ToFunctionInputResponseOutput() FunctionInputResponseOutput {
	return i.ToFunctionInputResponseOutputWithContext(context.Background())
}

func (i FunctionInputResponseArgs) ToFunctionInputResponseOutputWithContext(ctx context.Context) FunctionInputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionInputResponseOutput)
}

// FunctionInputResponseArrayInput is an input type that accepts FunctionInputResponseArray and FunctionInputResponseArrayOutput values.
// You can construct a concrete instance of `FunctionInputResponseArrayInput` via:
//
//          FunctionInputResponseArray{ FunctionInputResponseArgs{...} }
type FunctionInputResponseArrayInput interface {
	pulumi.Input

	ToFunctionInputResponseArrayOutput() FunctionInputResponseArrayOutput
	ToFunctionInputResponseArrayOutputWithContext(context.Context) FunctionInputResponseArrayOutput
}

type FunctionInputResponseArray []FunctionInputResponseInput

func (FunctionInputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionInputResponse)(nil)).Elem()
}

func (i FunctionInputResponseArray) ToFunctionInputResponseArrayOutput() FunctionInputResponseArrayOutput {
	return i.ToFunctionInputResponseArrayOutputWithContext(context.Background())
}

func (i FunctionInputResponseArray) ToFunctionInputResponseArrayOutputWithContext(ctx context.Context) FunctionInputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionInputResponseArrayOutput)
}

// Describes one input parameter of a function.
type FunctionInputResponseOutput struct{ *pulumi.OutputState }

func (FunctionInputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionInputResponse)(nil)).Elem()
}

func (o FunctionInputResponseOutput) ToFunctionInputResponseOutput() FunctionInputResponseOutput {
	return o
}

func (o FunctionInputResponseOutput) ToFunctionInputResponseOutputWithContext(ctx context.Context) FunctionInputResponseOutput {
	return o
}

// The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionInputResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionInputResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
func (o FunctionInputResponseOutput) IsConfigurationParameter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FunctionInputResponse) *bool { return v.IsConfigurationParameter }).(pulumi.BoolPtrOutput)
}

type FunctionInputResponseArrayOutput struct{ *pulumi.OutputState }

func (FunctionInputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionInputResponse)(nil)).Elem()
}

func (o FunctionInputResponseArrayOutput) ToFunctionInputResponseArrayOutput() FunctionInputResponseArrayOutput {
	return o
}

func (o FunctionInputResponseArrayOutput) ToFunctionInputResponseArrayOutputWithContext(ctx context.Context) FunctionInputResponseArrayOutput {
	return o
}

func (o FunctionInputResponseArrayOutput) Index(i pulumi.IntInput) FunctionInputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionInputResponse {
		return vs[0].([]FunctionInputResponse)[vs[1].(int)]
	}).(FunctionInputResponseOutput)
}

// Describes the output of a function.
type FunctionOutput struct {
	// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType *string `pulumi:"dataType"`
}

// FunctionOutputInput is an input type that accepts FunctionOutputArgs and FunctionOutputOutput values.
// You can construct a concrete instance of `FunctionOutputInput` via:
//
//          FunctionOutputArgs{...}
type FunctionOutputInput interface {
	pulumi.Input

	ToFunctionOutputOutput() FunctionOutputOutput
	ToFunctionOutputOutputWithContext(context.Context) FunctionOutputOutput
}

// Describes the output of a function.
type FunctionOutputArgs struct {
	// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
}

func (FunctionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionOutput)(nil)).Elem()
}

func (i FunctionOutputArgs) ToFunctionOutputOutput() FunctionOutputOutput {
	return i.ToFunctionOutputOutputWithContext(context.Background())
}

func (i FunctionOutputArgs) ToFunctionOutputOutputWithContext(ctx context.Context) FunctionOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputOutput)
}

func (i FunctionOutputArgs) ToFunctionOutputPtrOutput() FunctionOutputPtrOutput {
	return i.ToFunctionOutputPtrOutputWithContext(context.Background())
}

func (i FunctionOutputArgs) ToFunctionOutputPtrOutputWithContext(ctx context.Context) FunctionOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputOutput).ToFunctionOutputPtrOutputWithContext(ctx)
}

// FunctionOutputPtrInput is an input type that accepts FunctionOutputArgs, FunctionOutputPtr and FunctionOutputPtrOutput values.
// You can construct a concrete instance of `FunctionOutputPtrInput` via:
//
//          FunctionOutputArgs{...}
//
//  or:
//
//          nil
type FunctionOutputPtrInput interface {
	pulumi.Input

	ToFunctionOutputPtrOutput() FunctionOutputPtrOutput
	ToFunctionOutputPtrOutputWithContext(context.Context) FunctionOutputPtrOutput
}

type functionOutputPtrType FunctionOutputArgs

func FunctionOutputPtr(v *FunctionOutputArgs) FunctionOutputPtrInput {
	return (*functionOutputPtrType)(v)
}

func (*functionOutputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionOutput)(nil)).Elem()
}

func (i *functionOutputPtrType) ToFunctionOutputPtrOutput() FunctionOutputPtrOutput {
	return i.ToFunctionOutputPtrOutputWithContext(context.Background())
}

func (i *functionOutputPtrType) ToFunctionOutputPtrOutputWithContext(ctx context.Context) FunctionOutputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputPtrOutput)
}

// Describes the output of a function.
type FunctionOutputOutput struct{ *pulumi.OutputState }

func (FunctionOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionOutput)(nil)).Elem()
}

func (o FunctionOutputOutput) ToFunctionOutputOutput() FunctionOutputOutput {
	return o
}

func (o FunctionOutputOutput) ToFunctionOutputOutputWithContext(ctx context.Context) FunctionOutputOutput {
	return o
}

func (o FunctionOutputOutput) ToFunctionOutputPtrOutput() FunctionOutputPtrOutput {
	return o.ToFunctionOutputPtrOutputWithContext(context.Background())
}

func (o FunctionOutputOutput) ToFunctionOutputPtrOutputWithContext(ctx context.Context) FunctionOutputPtrOutput {
	return o.ApplyT(func(v FunctionOutput) *FunctionOutput {
		return &v
	}).(FunctionOutputPtrOutput)
}

// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionOutputOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionOutput) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

type FunctionOutputPtrOutput struct{ *pulumi.OutputState }

func (FunctionOutputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionOutput)(nil)).Elem()
}

func (o FunctionOutputPtrOutput) ToFunctionOutputPtrOutput() FunctionOutputPtrOutput {
	return o
}

func (o FunctionOutputPtrOutput) ToFunctionOutputPtrOutputWithContext(ctx context.Context) FunctionOutputPtrOutput {
	return o
}

func (o FunctionOutputPtrOutput) Elem() FunctionOutputOutput {
	return o.ApplyT(func(v *FunctionOutput) FunctionOutput { return *v }).(FunctionOutputOutput)
}

// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionOutputPtrOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionOutput) *string {
		if v == nil {
			return nil
		}
		return v.DataType
	}).(pulumi.StringPtrOutput)
}

// Describes the output of a function.
type FunctionOutputResponse struct {
	// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType *string `pulumi:"dataType"`
}

// FunctionOutputResponseInput is an input type that accepts FunctionOutputResponseArgs and FunctionOutputResponseOutput values.
// You can construct a concrete instance of `FunctionOutputResponseInput` via:
//
//          FunctionOutputResponseArgs{...}
type FunctionOutputResponseInput interface {
	pulumi.Input

	ToFunctionOutputResponseOutput() FunctionOutputResponseOutput
	ToFunctionOutputResponseOutputWithContext(context.Context) FunctionOutputResponseOutput
}

// Describes the output of a function.
type FunctionOutputResponseArgs struct {
	// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
}

func (FunctionOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionOutputResponse)(nil)).Elem()
}

func (i FunctionOutputResponseArgs) ToFunctionOutputResponseOutput() FunctionOutputResponseOutput {
	return i.ToFunctionOutputResponseOutputWithContext(context.Background())
}

func (i FunctionOutputResponseArgs) ToFunctionOutputResponseOutputWithContext(ctx context.Context) FunctionOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputResponseOutput)
}

func (i FunctionOutputResponseArgs) ToFunctionOutputResponsePtrOutput() FunctionOutputResponsePtrOutput {
	return i.ToFunctionOutputResponsePtrOutputWithContext(context.Background())
}

func (i FunctionOutputResponseArgs) ToFunctionOutputResponsePtrOutputWithContext(ctx context.Context) FunctionOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputResponseOutput).ToFunctionOutputResponsePtrOutputWithContext(ctx)
}

// FunctionOutputResponsePtrInput is an input type that accepts FunctionOutputResponseArgs, FunctionOutputResponsePtr and FunctionOutputResponsePtrOutput values.
// You can construct a concrete instance of `FunctionOutputResponsePtrInput` via:
//
//          FunctionOutputResponseArgs{...}
//
//  or:
//
//          nil
type FunctionOutputResponsePtrInput interface {
	pulumi.Input

	ToFunctionOutputResponsePtrOutput() FunctionOutputResponsePtrOutput
	ToFunctionOutputResponsePtrOutputWithContext(context.Context) FunctionOutputResponsePtrOutput
}

type functionOutputResponsePtrType FunctionOutputResponseArgs

func FunctionOutputResponsePtr(v *FunctionOutputResponseArgs) FunctionOutputResponsePtrInput {
	return (*functionOutputResponsePtrType)(v)
}

func (*functionOutputResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionOutputResponse)(nil)).Elem()
}

func (i *functionOutputResponsePtrType) ToFunctionOutputResponsePtrOutput() FunctionOutputResponsePtrOutput {
	return i.ToFunctionOutputResponsePtrOutputWithContext(context.Background())
}

func (i *functionOutputResponsePtrType) ToFunctionOutputResponsePtrOutputWithContext(ctx context.Context) FunctionOutputResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutputResponsePtrOutput)
}

// Describes the output of a function.
type FunctionOutputResponseOutput struct{ *pulumi.OutputState }

func (FunctionOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionOutputResponse)(nil)).Elem()
}

func (o FunctionOutputResponseOutput) ToFunctionOutputResponseOutput() FunctionOutputResponseOutput {
	return o
}

func (o FunctionOutputResponseOutput) ToFunctionOutputResponseOutputWithContext(ctx context.Context) FunctionOutputResponseOutput {
	return o
}

func (o FunctionOutputResponseOutput) ToFunctionOutputResponsePtrOutput() FunctionOutputResponsePtrOutput {
	return o.ToFunctionOutputResponsePtrOutputWithContext(context.Background())
}

func (o FunctionOutputResponseOutput) ToFunctionOutputResponsePtrOutputWithContext(ctx context.Context) FunctionOutputResponsePtrOutput {
	return o.ApplyT(func(v FunctionOutputResponse) *FunctionOutputResponse {
		return &v
	}).(FunctionOutputResponsePtrOutput)
}

// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionOutputResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionOutputResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

type FunctionOutputResponsePtrOutput struct{ *pulumi.OutputState }

func (FunctionOutputResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionOutputResponse)(nil)).Elem()
}

func (o FunctionOutputResponsePtrOutput) ToFunctionOutputResponsePtrOutput() FunctionOutputResponsePtrOutput {
	return o
}

func (o FunctionOutputResponsePtrOutput) ToFunctionOutputResponsePtrOutputWithContext(ctx context.Context) FunctionOutputResponsePtrOutput {
	return o
}

func (o FunctionOutputResponsePtrOutput) Elem() FunctionOutputResponseOutput {
	return o.ApplyT(func(v *FunctionOutputResponse) FunctionOutputResponse { return *v }).(FunctionOutputResponseOutput)
}

// The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
func (o FunctionOutputResponsePtrOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionOutputResponse) *string {
		if v == nil {
			return nil
		}
		return v.DataType
	}).(pulumi.StringPtrOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with a function.
	Properties interface{} `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// FunctionResponseInput is an input type that accepts FunctionResponseArgs and FunctionResponseOutput values.
// You can construct a concrete instance of `FunctionResponseInput` via:
//
//          FunctionResponseArgs{...}
type FunctionResponseInput interface {
	pulumi.Input

	ToFunctionResponseOutput() FunctionResponseOutput
	ToFunctionResponseOutputWithContext(context.Context) FunctionResponseOutput
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with a function.
	Properties pulumi.Input `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (FunctionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResponse)(nil)).Elem()
}

func (i FunctionResponseArgs) ToFunctionResponseOutput() FunctionResponseOutput {
	return i.ToFunctionResponseOutputWithContext(context.Background())
}

func (i FunctionResponseArgs) ToFunctionResponseOutputWithContext(ctx context.Context) FunctionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResponseOutput)
}

// FunctionResponseArrayInput is an input type that accepts FunctionResponseArray and FunctionResponseArrayOutput values.
// You can construct a concrete instance of `FunctionResponseArrayInput` via:
//
//          FunctionResponseArray{ FunctionResponseArgs{...} }
type FunctionResponseArrayInput interface {
	pulumi.Input

	ToFunctionResponseArrayOutput() FunctionResponseArrayOutput
	ToFunctionResponseArrayOutputWithContext(context.Context) FunctionResponseArrayOutput
}

type FunctionResponseArray []FunctionResponseInput

func (FunctionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResponse)(nil)).Elem()
}

func (i FunctionResponseArray) ToFunctionResponseArrayOutput() FunctionResponseArrayOutput {
	return i.ToFunctionResponseArrayOutputWithContext(context.Background())
}

func (i FunctionResponseArray) ToFunctionResponseArrayOutputWithContext(ctx context.Context) FunctionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionResponseArrayOutput)
}

// A function object, containing all information associated with the named function. All functions are contained under a streaming job.
type FunctionResponseOutput struct{ *pulumi.OutputState }

func (FunctionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionResponse)(nil)).Elem()
}

func (o FunctionResponseOutput) ToFunctionResponseOutput() FunctionResponseOutput {
	return o
}

func (o FunctionResponseOutput) ToFunctionResponseOutputWithContext(ctx context.Context) FunctionResponseOutput {
	return o
}

// Resource Id
func (o FunctionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o FunctionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with a function.
func (o FunctionResponseOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v FunctionResponse) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Resource type
func (o FunctionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FunctionResponseArrayOutput struct{ *pulumi.OutputState }

func (FunctionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionResponse)(nil)).Elem()
}

func (o FunctionResponseArrayOutput) ToFunctionResponseArrayOutput() FunctionResponseArrayOutput {
	return o
}

func (o FunctionResponseArrayOutput) ToFunctionResponseArrayOutputWithContext(ctx context.Context) FunctionResponseArrayOutput {
	return o
}

func (o FunctionResponseArrayOutput) Index(i pulumi.IntInput) FunctionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionResponse {
		return vs[0].([]FunctionResponse)[vs[1].(int)]
	}).(FunctionResponseOutput)
}

// Describes how identity is verified
type Identity struct {
	PrincipalId *string `pulumi:"principalId"`
	TenantId    *string `pulumi:"tenantId"`
	Type        *string `pulumi:"type"`
}

// IdentityInput is an input type that accepts IdentityArgs and IdentityOutput values.
// You can construct a concrete instance of `IdentityInput` via:
//
//          IdentityArgs{...}
type IdentityInput interface {
	pulumi.Input

	ToIdentityOutput() IdentityOutput
	ToIdentityOutputWithContext(context.Context) IdentityOutput
}

// Describes how identity is verified
type IdentityArgs struct {
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput `pulumi:"tenantId"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (i IdentityArgs) ToIdentityOutput() IdentityOutput {
	return i.ToIdentityOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput)
}

func (i IdentityArgs) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i IdentityArgs) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityOutput).ToIdentityPtrOutputWithContext(ctx)
}

// IdentityPtrInput is an input type that accepts IdentityArgs, IdentityPtr and IdentityPtrOutput values.
// You can construct a concrete instance of `IdentityPtrInput` via:
//
//          IdentityArgs{...}
//
//  or:
//
//          nil
type IdentityPtrInput interface {
	pulumi.Input

	ToIdentityPtrOutput() IdentityPtrOutput
	ToIdentityPtrOutputWithContext(context.Context) IdentityPtrOutput
}

type identityPtrType IdentityArgs

func IdentityPtr(v *IdentityArgs) IdentityPtrInput {
	return (*identityPtrType)(v)
}

func (*identityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (i *identityPtrType) ToIdentityPtrOutput() IdentityPtrOutput {
	return i.ToIdentityPtrOutputWithContext(context.Background())
}

func (i *identityPtrType) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPtrOutput)
}

// Describes how identity is verified
type IdentityOutput struct{ *pulumi.OutputState }

func (IdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Identity)(nil)).Elem()
}

func (o IdentityOutput) ToIdentityOutput() IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityOutputWithContext(ctx context.Context) IdentityOutput {
	return o
}

func (o IdentityOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o.ToIdentityPtrOutputWithContext(context.Background())
}

func (o IdentityOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o.ApplyT(func(v Identity) *Identity {
		return &v
	}).(IdentityPtrOutput)
}
func (o IdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

func (o IdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Identity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityPtrOutput struct{ *pulumi.OutputState }

func (IdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Identity)(nil)).Elem()
}

func (o IdentityPtrOutput) ToIdentityPtrOutput() IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) ToIdentityPtrOutputWithContext(ctx context.Context) IdentityPtrOutput {
	return o
}

func (o IdentityPtrOutput) Elem() IdentityOutput {
	return o.ApplyT(func(v *Identity) Identity { return *v }).(IdentityOutput)
}

func (o IdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Identity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes how identity is verified
type IdentityResponse struct {
	PrincipalId *string `pulumi:"principalId"`
	TenantId    *string `pulumi:"tenantId"`
	Type        *string `pulumi:"type"`
}

// IdentityResponseInput is an input type that accepts IdentityResponseArgs and IdentityResponseOutput values.
// You can construct a concrete instance of `IdentityResponseInput` via:
//
//          IdentityResponseArgs{...}
type IdentityResponseInput interface {
	pulumi.Input

	ToIdentityResponseOutput() IdentityResponseOutput
	ToIdentityResponseOutputWithContext(context.Context) IdentityResponseOutput
}

// Describes how identity is verified
type IdentityResponseArgs struct {
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput `pulumi:"tenantId"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (IdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (i IdentityResponseArgs) ToIdentityResponseOutput() IdentityResponseOutput {
	return i.ToIdentityResponseOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput)
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i IdentityResponseArgs) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponseOutput).ToIdentityResponsePtrOutputWithContext(ctx)
}

// IdentityResponsePtrInput is an input type that accepts IdentityResponseArgs, IdentityResponsePtr and IdentityResponsePtrOutput values.
// You can construct a concrete instance of `IdentityResponsePtrInput` via:
//
//          IdentityResponseArgs{...}
//
//  or:
//
//          nil
type IdentityResponsePtrInput interface {
	pulumi.Input

	ToIdentityResponsePtrOutput() IdentityResponsePtrOutput
	ToIdentityResponsePtrOutputWithContext(context.Context) IdentityResponsePtrOutput
}

type identityResponsePtrType IdentityResponseArgs

func IdentityResponsePtr(v *IdentityResponseArgs) IdentityResponsePtrInput {
	return (*identityResponsePtrType)(v)
}

func (*identityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return i.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *identityResponsePtrType) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityResponsePtrOutput)
}

// Describes how identity is verified
type IdentityResponseOutput struct{ *pulumi.OutputState }

func (IdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityResponse)(nil)).Elem()
}

func (o IdentityResponseOutput) ToIdentityResponseOutput() IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponseOutputWithContext(ctx context.Context) IdentityResponseOutput {
	return o
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o.ToIdentityResponsePtrOutputWithContext(context.Background())
}

func (o IdentityResponseOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o.ApplyT(func(v IdentityResponse) *IdentityResponse {
		return &v
	}).(IdentityResponsePtrOutput)
}
func (o IdentityResponseOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o IdentityResponseOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

func (o IdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type IdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityResponse)(nil)).Elem()
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutput() IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) ToIdentityResponsePtrOutputWithContext(ctx context.Context) IdentityResponsePtrOutput {
	return o
}

func (o IdentityResponsePtrOutput) Elem() IdentityResponseOutput {
	return o.ApplyT(func(v *IdentityResponse) IdentityResponse { return *v }).(IdentityResponseOutput)
}

func (o IdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

func (o IdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputType struct {
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties interface{} `pulumi:"properties"`
}

// InputTypeInput is an input type that accepts InputTypeArgs and InputTypeOutput values.
// You can construct a concrete instance of `InputTypeInput` via:
//
//          InputTypeArgs{...}
type InputTypeInput interface {
	pulumi.Input

	ToInputTypeOutput() InputTypeOutput
	ToInputTypeOutputWithContext(context.Context) InputTypeOutput
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputTypeArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties pulumi.Input `pulumi:"properties"`
}

func (InputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputType)(nil)).Elem()
}

func (i InputTypeArgs) ToInputTypeOutput() InputTypeOutput {
	return i.ToInputTypeOutputWithContext(context.Background())
}

func (i InputTypeArgs) ToInputTypeOutputWithContext(ctx context.Context) InputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputTypeOutput)
}

// InputTypeArrayInput is an input type that accepts InputTypeArray and InputTypeArrayOutput values.
// You can construct a concrete instance of `InputTypeArrayInput` via:
//
//          InputTypeArray{ InputTypeArgs{...} }
type InputTypeArrayInput interface {
	pulumi.Input

	ToInputTypeArrayOutput() InputTypeArrayOutput
	ToInputTypeArrayOutputWithContext(context.Context) InputTypeArrayOutput
}

type InputTypeArray []InputTypeInput

func (InputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputType)(nil)).Elem()
}

func (i InputTypeArray) ToInputTypeArrayOutput() InputTypeArrayOutput {
	return i.ToInputTypeArrayOutputWithContext(context.Background())
}

func (i InputTypeArray) ToInputTypeArrayOutputWithContext(ctx context.Context) InputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputTypeArrayOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputTypeOutput struct{ *pulumi.OutputState }

func (InputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputType)(nil)).Elem()
}

func (o InputTypeOutput) ToInputTypeOutput() InputTypeOutput {
	return o
}

func (o InputTypeOutput) ToInputTypeOutputWithContext(ctx context.Context) InputTypeOutput {
	return o
}

// Resource name
func (o InputTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
func (o InputTypeOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v InputType) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

type InputTypeArrayOutput struct{ *pulumi.OutputState }

func (InputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputType)(nil)).Elem()
}

func (o InputTypeArrayOutput) ToInputTypeArrayOutput() InputTypeArrayOutput {
	return o
}

func (o InputTypeArrayOutput) ToInputTypeArrayOutputWithContext(ctx context.Context) InputTypeArrayOutput {
	return o
}

func (o InputTypeArrayOutput) Index(i pulumi.IntInput) InputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputType {
		return vs[0].([]InputType)[vs[1].(int)]
	}).(InputTypeOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponse struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties interface{} `pulumi:"properties"`
	// Resource type
	Type string `pulumi:"type"`
}

// InputResponseInput is an input type that accepts InputResponseArgs and InputResponseOutput values.
// You can construct a concrete instance of `InputResponseInput` via:
//
//          InputResponseArgs{...}
type InputResponseInput interface {
	pulumi.Input

	ToInputResponseOutput() InputResponseOutput
	ToInputResponseOutputWithContext(context.Context) InputResponseOutput
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponseArgs struct {
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
	Properties pulumi.Input `pulumi:"properties"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (InputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputResponse)(nil)).Elem()
}

func (i InputResponseArgs) ToInputResponseOutput() InputResponseOutput {
	return i.ToInputResponseOutputWithContext(context.Background())
}

func (i InputResponseArgs) ToInputResponseOutputWithContext(ctx context.Context) InputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputResponseOutput)
}

// InputResponseArrayInput is an input type that accepts InputResponseArray and InputResponseArrayOutput values.
// You can construct a concrete instance of `InputResponseArrayInput` via:
//
//          InputResponseArray{ InputResponseArgs{...} }
type InputResponseArrayInput interface {
	pulumi.Input

	ToInputResponseArrayOutput() InputResponseArrayOutput
	ToInputResponseArrayOutputWithContext(context.Context) InputResponseArrayOutput
}

type InputResponseArray []InputResponseInput

func (InputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputResponse)(nil)).Elem()
}

func (i InputResponseArray) ToInputResponseArrayOutput() InputResponseArrayOutput {
	return i.ToInputResponseArrayOutputWithContext(context.Background())
}

func (i InputResponseArray) ToInputResponseArrayOutputWithContext(ctx context.Context) InputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputResponseArrayOutput)
}

// An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
type InputResponseOutput struct{ *pulumi.OutputState }

func (InputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputResponse)(nil)).Elem()
}

func (o InputResponseOutput) ToInputResponseOutput() InputResponseOutput {
	return o
}

func (o InputResponseOutput) ToInputResponseOutputWithContext(ctx context.Context) InputResponseOutput {
	return o
}

// Resource Id
func (o InputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v InputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o InputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
func (o InputResponseOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v InputResponse) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Resource type
func (o InputResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InputResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InputResponseArrayOutput struct{ *pulumi.OutputState }

func (InputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InputResponse)(nil)).Elem()
}

func (o InputResponseArrayOutput) ToInputResponseArrayOutput() InputResponseArrayOutput {
	return o
}

func (o InputResponseArrayOutput) ToInputResponseArrayOutputWithContext(ctx context.Context) InputResponseArrayOutput {
	return o
}

func (o InputResponseArrayOutput) Index(i pulumi.IntInput) InputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InputResponse {
		return vs[0].([]InputResponse)[vs[1].(int)]
	}).(InputResponseOutput)
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSource struct {
	// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
	Endpoint *string `pulumi:"endpoint"`
	// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
	IotHubNamespace *string `pulumi:"iotHubNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// IoTHubStreamInputDataSourceInput is an input type that accepts IoTHubStreamInputDataSourceArgs and IoTHubStreamInputDataSourceOutput values.
// You can construct a concrete instance of `IoTHubStreamInputDataSourceInput` via:
//
//          IoTHubStreamInputDataSourceArgs{...}
type IoTHubStreamInputDataSourceInput interface {
	pulumi.Input

	ToIoTHubStreamInputDataSourceOutput() IoTHubStreamInputDataSourceOutput
	ToIoTHubStreamInputDataSourceOutputWithContext(context.Context) IoTHubStreamInputDataSourceOutput
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSourceArgs struct {
	// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
	IotHubNamespace pulumi.StringPtrInput `pulumi:"iotHubNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IoTHubStreamInputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubStreamInputDataSource)(nil)).Elem()
}

func (i IoTHubStreamInputDataSourceArgs) ToIoTHubStreamInputDataSourceOutput() IoTHubStreamInputDataSourceOutput {
	return i.ToIoTHubStreamInputDataSourceOutputWithContext(context.Background())
}

func (i IoTHubStreamInputDataSourceArgs) ToIoTHubStreamInputDataSourceOutputWithContext(ctx context.Context) IoTHubStreamInputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubStreamInputDataSourceOutput)
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSourceOutput struct{ *pulumi.OutputState }

func (IoTHubStreamInputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubStreamInputDataSource)(nil)).Elem()
}

func (o IoTHubStreamInputDataSourceOutput) ToIoTHubStreamInputDataSourceOutput() IoTHubStreamInputDataSourceOutput {
	return o
}

func (o IoTHubStreamInputDataSourceOutput) ToIoTHubStreamInputDataSourceOutputWithContext(ctx context.Context) IoTHubStreamInputDataSourceOutput {
	return o
}

// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
func (o IoTHubStreamInputDataSourceOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
func (o IoTHubStreamInputDataSourceOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceOutput) IotHubNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) *string { return v.IotHubNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSourceResponse struct {
	// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
	ConsumerGroupName *string `pulumi:"consumerGroupName"`
	// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
	Endpoint *string `pulumi:"endpoint"`
	// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
	IotHubNamespace *string `pulumi:"iotHubNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// IoTHubStreamInputDataSourceResponseInput is an input type that accepts IoTHubStreamInputDataSourceResponseArgs and IoTHubStreamInputDataSourceResponseOutput values.
// You can construct a concrete instance of `IoTHubStreamInputDataSourceResponseInput` via:
//
//          IoTHubStreamInputDataSourceResponseArgs{...}
type IoTHubStreamInputDataSourceResponseInput interface {
	pulumi.Input

	ToIoTHubStreamInputDataSourceResponseOutput() IoTHubStreamInputDataSourceResponseOutput
	ToIoTHubStreamInputDataSourceResponseOutputWithContext(context.Context) IoTHubStreamInputDataSourceResponseOutput
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSourceResponseArgs struct {
	// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
	ConsumerGroupName pulumi.StringPtrInput `pulumi:"consumerGroupName"`
	// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
	IotHubNamespace pulumi.StringPtrInput `pulumi:"iotHubNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IoTHubStreamInputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubStreamInputDataSourceResponse)(nil)).Elem()
}

func (i IoTHubStreamInputDataSourceResponseArgs) ToIoTHubStreamInputDataSourceResponseOutput() IoTHubStreamInputDataSourceResponseOutput {
	return i.ToIoTHubStreamInputDataSourceResponseOutputWithContext(context.Background())
}

func (i IoTHubStreamInputDataSourceResponseArgs) ToIoTHubStreamInputDataSourceResponseOutputWithContext(ctx context.Context) IoTHubStreamInputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubStreamInputDataSourceResponseOutput)
}

// Describes an IoT Hub input data source that contains stream data.
type IoTHubStreamInputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (IoTHubStreamInputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubStreamInputDataSourceResponse)(nil)).Elem()
}

func (o IoTHubStreamInputDataSourceResponseOutput) ToIoTHubStreamInputDataSourceResponseOutput() IoTHubStreamInputDataSourceResponseOutput {
	return o
}

func (o IoTHubStreamInputDataSourceResponseOutput) ToIoTHubStreamInputDataSourceResponseOutputWithContext(ctx context.Context) IoTHubStreamInputDataSourceResponseOutput {
	return o
}

// The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
func (o IoTHubStreamInputDataSourceResponseOutput) ConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) *string { return v.ConsumerGroupName }).(pulumi.StringPtrOutput)
}

// The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
func (o IoTHubStreamInputDataSourceResponseOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceResponseOutput) IotHubNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) *string { return v.IotHubNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

// Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
func (o IoTHubStreamInputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubStreamInputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to a JavaScript function.
type JavaScriptFunctionBinding struct {
	// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
	Script *string `pulumi:"script"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// JavaScriptFunctionBindingInput is an input type that accepts JavaScriptFunctionBindingArgs and JavaScriptFunctionBindingOutput values.
// You can construct a concrete instance of `JavaScriptFunctionBindingInput` via:
//
//          JavaScriptFunctionBindingArgs{...}
type JavaScriptFunctionBindingInput interface {
	pulumi.Input

	ToJavaScriptFunctionBindingOutput() JavaScriptFunctionBindingOutput
	ToJavaScriptFunctionBindingOutputWithContext(context.Context) JavaScriptFunctionBindingOutput
}

// The binding to a JavaScript function.
type JavaScriptFunctionBindingArgs struct {
	// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JavaScriptFunctionBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaScriptFunctionBinding)(nil)).Elem()
}

func (i JavaScriptFunctionBindingArgs) ToJavaScriptFunctionBindingOutput() JavaScriptFunctionBindingOutput {
	return i.ToJavaScriptFunctionBindingOutputWithContext(context.Background())
}

func (i JavaScriptFunctionBindingArgs) ToJavaScriptFunctionBindingOutputWithContext(ctx context.Context) JavaScriptFunctionBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaScriptFunctionBindingOutput)
}

// The binding to a JavaScript function.
type JavaScriptFunctionBindingOutput struct{ *pulumi.OutputState }

func (JavaScriptFunctionBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaScriptFunctionBinding)(nil)).Elem()
}

func (o JavaScriptFunctionBindingOutput) ToJavaScriptFunctionBindingOutput() JavaScriptFunctionBindingOutput {
	return o
}

func (o JavaScriptFunctionBindingOutput) ToJavaScriptFunctionBindingOutputWithContext(ctx context.Context) JavaScriptFunctionBindingOutput {
	return o
}

// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
func (o JavaScriptFunctionBindingOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaScriptFunctionBinding) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Indicates the function binding type.
func (o JavaScriptFunctionBindingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JavaScriptFunctionBinding) string { return v.Type }).(pulumi.StringOutput)
}

// The binding to a JavaScript function.
type JavaScriptFunctionBindingResponse struct {
	// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
	Script *string `pulumi:"script"`
	// Indicates the function binding type.
	Type string `pulumi:"type"`
}

// JavaScriptFunctionBindingResponseInput is an input type that accepts JavaScriptFunctionBindingResponseArgs and JavaScriptFunctionBindingResponseOutput values.
// You can construct a concrete instance of `JavaScriptFunctionBindingResponseInput` via:
//
//          JavaScriptFunctionBindingResponseArgs{...}
type JavaScriptFunctionBindingResponseInput interface {
	pulumi.Input

	ToJavaScriptFunctionBindingResponseOutput() JavaScriptFunctionBindingResponseOutput
	ToJavaScriptFunctionBindingResponseOutputWithContext(context.Context) JavaScriptFunctionBindingResponseOutput
}

// The binding to a JavaScript function.
type JavaScriptFunctionBindingResponseArgs struct {
	// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
	Script pulumi.StringPtrInput `pulumi:"script"`
	// Indicates the function binding type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JavaScriptFunctionBindingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaScriptFunctionBindingResponse)(nil)).Elem()
}

func (i JavaScriptFunctionBindingResponseArgs) ToJavaScriptFunctionBindingResponseOutput() JavaScriptFunctionBindingResponseOutput {
	return i.ToJavaScriptFunctionBindingResponseOutputWithContext(context.Background())
}

func (i JavaScriptFunctionBindingResponseArgs) ToJavaScriptFunctionBindingResponseOutputWithContext(ctx context.Context) JavaScriptFunctionBindingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JavaScriptFunctionBindingResponseOutput)
}

// The binding to a JavaScript function.
type JavaScriptFunctionBindingResponseOutput struct{ *pulumi.OutputState }

func (JavaScriptFunctionBindingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JavaScriptFunctionBindingResponse)(nil)).Elem()
}

func (o JavaScriptFunctionBindingResponseOutput) ToJavaScriptFunctionBindingResponseOutput() JavaScriptFunctionBindingResponseOutput {
	return o
}

func (o JavaScriptFunctionBindingResponseOutput) ToJavaScriptFunctionBindingResponseOutputWithContext(ctx context.Context) JavaScriptFunctionBindingResponseOutput {
	return o
}

// The JavaScript code containing a single function definition. For example: 'function (x, y) { return x + y; }'
func (o JavaScriptFunctionBindingResponseOutput) Script() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JavaScriptFunctionBindingResponse) *string { return v.Script }).(pulumi.StringPtrOutput)
}

// Indicates the function binding type.
func (o JavaScriptFunctionBindingResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JavaScriptFunctionBindingResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccount struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
}

// JobStorageAccountInput is an input type that accepts JobStorageAccountArgs and JobStorageAccountOutput values.
// You can construct a concrete instance of `JobStorageAccountInput` via:
//
//          JobStorageAccountArgs{...}
type JobStorageAccountInput interface {
	pulumi.Input

	ToJobStorageAccountOutput() JobStorageAccountOutput
	ToJobStorageAccountOutputWithContext(context.Context) JobStorageAccountOutput
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccountArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
}

func (JobStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStorageAccount)(nil)).Elem()
}

func (i JobStorageAccountArgs) ToJobStorageAccountOutput() JobStorageAccountOutput {
	return i.ToJobStorageAccountOutputWithContext(context.Background())
}

func (i JobStorageAccountArgs) ToJobStorageAccountOutputWithContext(ctx context.Context) JobStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountOutput)
}

func (i JobStorageAccountArgs) ToJobStorageAccountPtrOutput() JobStorageAccountPtrOutput {
	return i.ToJobStorageAccountPtrOutputWithContext(context.Background())
}

func (i JobStorageAccountArgs) ToJobStorageAccountPtrOutputWithContext(ctx context.Context) JobStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountOutput).ToJobStorageAccountPtrOutputWithContext(ctx)
}

// JobStorageAccountPtrInput is an input type that accepts JobStorageAccountArgs, JobStorageAccountPtr and JobStorageAccountPtrOutput values.
// You can construct a concrete instance of `JobStorageAccountPtrInput` via:
//
//          JobStorageAccountArgs{...}
//
//  or:
//
//          nil
type JobStorageAccountPtrInput interface {
	pulumi.Input

	ToJobStorageAccountPtrOutput() JobStorageAccountPtrOutput
	ToJobStorageAccountPtrOutputWithContext(context.Context) JobStorageAccountPtrOutput
}

type jobStorageAccountPtrType JobStorageAccountArgs

func JobStorageAccountPtr(v *JobStorageAccountArgs) JobStorageAccountPtrInput {
	return (*jobStorageAccountPtrType)(v)
}

func (*jobStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccount)(nil)).Elem()
}

func (i *jobStorageAccountPtrType) ToJobStorageAccountPtrOutput() JobStorageAccountPtrOutput {
	return i.ToJobStorageAccountPtrOutputWithContext(context.Background())
}

func (i *jobStorageAccountPtrType) ToJobStorageAccountPtrOutputWithContext(ctx context.Context) JobStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountPtrOutput)
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccountOutput struct{ *pulumi.OutputState }

func (JobStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStorageAccount)(nil)).Elem()
}

func (o JobStorageAccountOutput) ToJobStorageAccountOutput() JobStorageAccountOutput {
	return o
}

func (o JobStorageAccountOutput) ToJobStorageAccountOutputWithContext(ctx context.Context) JobStorageAccountOutput {
	return o
}

func (o JobStorageAccountOutput) ToJobStorageAccountPtrOutput() JobStorageAccountPtrOutput {
	return o.ToJobStorageAccountPtrOutputWithContext(context.Background())
}

func (o JobStorageAccountOutput) ToJobStorageAccountPtrOutputWithContext(ctx context.Context) JobStorageAccountPtrOutput {
	return o.ApplyT(func(v JobStorageAccount) *JobStorageAccount {
		return &v
	}).(JobStorageAccountPtrOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccount) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccount) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o JobStorageAccountOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccount) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

type JobStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (JobStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccount)(nil)).Elem()
}

func (o JobStorageAccountPtrOutput) ToJobStorageAccountPtrOutput() JobStorageAccountPtrOutput {
	return o
}

func (o JobStorageAccountPtrOutput) ToJobStorageAccountPtrOutputWithContext(ctx context.Context) JobStorageAccountPtrOutput {
	return o
}

func (o JobStorageAccountPtrOutput) Elem() JobStorageAccountOutput {
	return o.ApplyT(func(v *JobStorageAccount) JobStorageAccount { return *v }).(JobStorageAccountOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountPtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o JobStorageAccountPtrOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccountResponse struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
}

// JobStorageAccountResponseInput is an input type that accepts JobStorageAccountResponseArgs and JobStorageAccountResponseOutput values.
// You can construct a concrete instance of `JobStorageAccountResponseInput` via:
//
//          JobStorageAccountResponseArgs{...}
type JobStorageAccountResponseInput interface {
	pulumi.Input

	ToJobStorageAccountResponseOutput() JobStorageAccountResponseOutput
	ToJobStorageAccountResponseOutputWithContext(context.Context) JobStorageAccountResponseOutput
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccountResponseArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
}

func (JobStorageAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStorageAccountResponse)(nil)).Elem()
}

func (i JobStorageAccountResponseArgs) ToJobStorageAccountResponseOutput() JobStorageAccountResponseOutput {
	return i.ToJobStorageAccountResponseOutputWithContext(context.Background())
}

func (i JobStorageAccountResponseArgs) ToJobStorageAccountResponseOutputWithContext(ctx context.Context) JobStorageAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountResponseOutput)
}

func (i JobStorageAccountResponseArgs) ToJobStorageAccountResponsePtrOutput() JobStorageAccountResponsePtrOutput {
	return i.ToJobStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (i JobStorageAccountResponseArgs) ToJobStorageAccountResponsePtrOutputWithContext(ctx context.Context) JobStorageAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountResponseOutput).ToJobStorageAccountResponsePtrOutputWithContext(ctx)
}

// JobStorageAccountResponsePtrInput is an input type that accepts JobStorageAccountResponseArgs, JobStorageAccountResponsePtr and JobStorageAccountResponsePtrOutput values.
// You can construct a concrete instance of `JobStorageAccountResponsePtrInput` via:
//
//          JobStorageAccountResponseArgs{...}
//
//  or:
//
//          nil
type JobStorageAccountResponsePtrInput interface {
	pulumi.Input

	ToJobStorageAccountResponsePtrOutput() JobStorageAccountResponsePtrOutput
	ToJobStorageAccountResponsePtrOutputWithContext(context.Context) JobStorageAccountResponsePtrOutput
}

type jobStorageAccountResponsePtrType JobStorageAccountResponseArgs

func JobStorageAccountResponsePtr(v *JobStorageAccountResponseArgs) JobStorageAccountResponsePtrInput {
	return (*jobStorageAccountResponsePtrType)(v)
}

func (*jobStorageAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccountResponse)(nil)).Elem()
}

func (i *jobStorageAccountResponsePtrType) ToJobStorageAccountResponsePtrOutput() JobStorageAccountResponsePtrOutput {
	return i.ToJobStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (i *jobStorageAccountResponsePtrType) ToJobStorageAccountResponsePtrOutputWithContext(ctx context.Context) JobStorageAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobStorageAccountResponsePtrOutput)
}

// The properties that are associated with an Azure Storage account with MSI
type JobStorageAccountResponseOutput struct{ *pulumi.OutputState }

func (JobStorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobStorageAccountResponse)(nil)).Elem()
}

func (o JobStorageAccountResponseOutput) ToJobStorageAccountResponseOutput() JobStorageAccountResponseOutput {
	return o
}

func (o JobStorageAccountResponseOutput) ToJobStorageAccountResponseOutputWithContext(ctx context.Context) JobStorageAccountResponseOutput {
	return o
}

func (o JobStorageAccountResponseOutput) ToJobStorageAccountResponsePtrOutput() JobStorageAccountResponsePtrOutput {
	return o.ToJobStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (o JobStorageAccountResponseOutput) ToJobStorageAccountResponsePtrOutputWithContext(ctx context.Context) JobStorageAccountResponsePtrOutput {
	return o.ApplyT(func(v JobStorageAccountResponse) *JobStorageAccountResponse {
		return &v
	}).(JobStorageAccountResponsePtrOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccountResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o JobStorageAccountResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobStorageAccountResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

type JobStorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (JobStorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobStorageAccountResponse)(nil)).Elem()
}

func (o JobStorageAccountResponsePtrOutput) ToJobStorageAccountResponsePtrOutput() JobStorageAccountResponsePtrOutput {
	return o
}

func (o JobStorageAccountResponsePtrOutput) ToJobStorageAccountResponsePtrOutputWithContext(ctx context.Context) JobStorageAccountResponsePtrOutput {
	return o
}

func (o JobStorageAccountResponsePtrOutput) Elem() JobStorageAccountResponseOutput {
	return o.ApplyT(func(v *JobStorageAccountResponse) JobStorageAccountResponse { return *v }).(JobStorageAccountResponseOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountResponsePtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o JobStorageAccountResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Authentication Mode.
func (o JobStorageAccountResponsePtrOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobStorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMode
	}).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerialization struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding *string `pulumi:"encoding"`
	// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
	Format *string `pulumi:"format"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// JsonSerializationInput is an input type that accepts JsonSerializationArgs and JsonSerializationOutput values.
// You can construct a concrete instance of `JsonSerializationInput` via:
//
//          JsonSerializationArgs{...}
type JsonSerializationInput interface {
	pulumi.Input

	ToJsonSerializationOutput() JsonSerializationOutput
	ToJsonSerializationOutputWithContext(context.Context) JsonSerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerializationArgs struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JsonSerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonSerialization)(nil)).Elem()
}

func (i JsonSerializationArgs) ToJsonSerializationOutput() JsonSerializationOutput {
	return i.ToJsonSerializationOutputWithContext(context.Background())
}

func (i JsonSerializationArgs) ToJsonSerializationOutputWithContext(ctx context.Context) JsonSerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JsonSerializationOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerializationOutput struct{ *pulumi.OutputState }

func (JsonSerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonSerialization)(nil)).Elem()
}

func (o JsonSerializationOutput) ToJsonSerializationOutput() JsonSerializationOutput {
	return o
}

func (o JsonSerializationOutput) ToJsonSerializationOutputWithContext(ctx context.Context) JsonSerializationOutput {
	return o
}

// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
func (o JsonSerializationOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonSerialization) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
func (o JsonSerializationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonSerialization) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o JsonSerializationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JsonSerialization) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerializationResponse struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding *string `pulumi:"encoding"`
	// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
	Format *string `pulumi:"format"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// JsonSerializationResponseInput is an input type that accepts JsonSerializationResponseArgs and JsonSerializationResponseOutput values.
// You can construct a concrete instance of `JsonSerializationResponseInput` via:
//
//          JsonSerializationResponseArgs{...}
type JsonSerializationResponseInput interface {
	pulumi.Input

	ToJsonSerializationResponseOutput() JsonSerializationResponseOutput
	ToJsonSerializationResponseOutputWithContext(context.Context) JsonSerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerializationResponseArgs struct {
	// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (JsonSerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonSerializationResponse)(nil)).Elem()
}

func (i JsonSerializationResponseArgs) ToJsonSerializationResponseOutput() JsonSerializationResponseOutput {
	return i.ToJsonSerializationResponseOutputWithContext(context.Background())
}

func (i JsonSerializationResponseArgs) ToJsonSerializationResponseOutputWithContext(ctx context.Context) JsonSerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JsonSerializationResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
type JsonSerializationResponseOutput struct{ *pulumi.OutputState }

func (JsonSerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JsonSerializationResponse)(nil)).Elem()
}

func (o JsonSerializationResponseOutput) ToJsonSerializationResponseOutput() JsonSerializationResponseOutput {
	return o
}

func (o JsonSerializationResponseOutput) ToJsonSerializationResponseOutputWithContext(ctx context.Context) JsonSerializationResponseOutput {
	return o
}

// Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
func (o JsonSerializationResponseOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonSerializationResponse) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
func (o JsonSerializationResponseOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JsonSerializationResponse) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o JsonSerializationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v JsonSerializationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputType struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// Resource name
	Name *string `pulumi:"name"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	SizeWindow    *float64    `pulumi:"sizeWindow"`
	TimeWindow    *string     `pulumi:"timeWindow"`
}

// OutputTypeInput is an input type that accepts OutputTypeArgs and OutputTypeOutput values.
// You can construct a concrete instance of `OutputTypeInput` via:
//
//          OutputTypeArgs{...}
type OutputTypeInput interface {
	pulumi.Input

	ToOutputTypeOutput() OutputTypeOutput
	ToOutputTypeOutputWithContext(context.Context) OutputTypeOutput
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputTypeArgs struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input           `pulumi:"serialization"`
	SizeWindow    pulumi.Float64PtrInput `pulumi:"sizeWindow"`
	TimeWindow    pulumi.StringPtrInput  `pulumi:"timeWindow"`
}

func (OutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputType)(nil)).Elem()
}

func (i OutputTypeArgs) ToOutputTypeOutput() OutputTypeOutput {
	return i.ToOutputTypeOutputWithContext(context.Background())
}

func (i OutputTypeArgs) ToOutputTypeOutputWithContext(ctx context.Context) OutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputTypeOutput)
}

// OutputTypeArrayInput is an input type that accepts OutputTypeArray and OutputTypeArrayOutput values.
// You can construct a concrete instance of `OutputTypeArrayInput` via:
//
//          OutputTypeArray{ OutputTypeArgs{...} }
type OutputTypeArrayInput interface {
	pulumi.Input

	ToOutputTypeArrayOutput() OutputTypeArrayOutput
	ToOutputTypeArrayOutputWithContext(context.Context) OutputTypeArrayOutput
}

type OutputTypeArray []OutputTypeInput

func (OutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputType)(nil)).Elem()
}

func (i OutputTypeArray) ToOutputTypeArrayOutput() OutputTypeArrayOutput {
	return i.ToOutputTypeArrayOutputWithContext(context.Background())
}

func (i OutputTypeArray) ToOutputTypeArrayOutputWithContext(ctx context.Context) OutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputTypeArrayOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputTypeOutput struct{ *pulumi.OutputState }

func (OutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputType)(nil)).Elem()
}

func (o OutputTypeOutput) ToOutputTypeOutput() OutputTypeOutput {
	return o
}

func (o OutputTypeOutput) ToOutputTypeOutputWithContext(ctx context.Context) OutputTypeOutput {
	return o
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputTypeOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v OutputType) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// Resource name
func (o OutputTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputTypeOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v OutputType) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

func (o OutputTypeOutput) SizeWindow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OutputType) *float64 { return v.SizeWindow }).(pulumi.Float64PtrOutput)
}

func (o OutputTypeOutput) TimeWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputType) *string { return v.TimeWindow }).(pulumi.StringPtrOutput)
}

type OutputTypeArrayOutput struct{ *pulumi.OutputState }

func (OutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputType)(nil)).Elem()
}

func (o OutputTypeArrayOutput) ToOutputTypeArrayOutput() OutputTypeArrayOutput {
	return o
}

func (o OutputTypeArrayOutput) ToOutputTypeArrayOutputWithContext(ctx context.Context) OutputTypeArrayOutput {
	return o
}

func (o OutputTypeArrayOutput) Index(i pulumi.IntInput) OutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputType {
		return vs[0].([]OutputType)[vs[1].(int)]
	}).(OutputTypeOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponse struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponse `pulumi:"diagnostics"`
	// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	SizeWindow    *float64    `pulumi:"sizeWindow"`
	TimeWindow    *string     `pulumi:"timeWindow"`
	// Resource type
	Type string `pulumi:"type"`
}

// OutputResponseInput is an input type that accepts OutputResponseArgs and OutputResponseOutput values.
// You can construct a concrete instance of `OutputResponseInput` via:
//
//          OutputResponseArgs{...}
type OutputResponseInput interface {
	pulumi.Input

	ToOutputResponseOutput() OutputResponseOutput
	ToOutputResponseOutputWithContext(context.Context) OutputResponseOutput
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponseArgs struct {
	// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponseInput `pulumi:"diagnostics"`
	// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input           `pulumi:"serialization"`
	SizeWindow    pulumi.Float64PtrInput `pulumi:"sizeWindow"`
	TimeWindow    pulumi.StringPtrInput  `pulumi:"timeWindow"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (OutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputResponse)(nil)).Elem()
}

func (i OutputResponseArgs) ToOutputResponseOutput() OutputResponseOutput {
	return i.ToOutputResponseOutputWithContext(context.Background())
}

func (i OutputResponseArgs) ToOutputResponseOutputWithContext(ctx context.Context) OutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputResponseOutput)
}

// OutputResponseArrayInput is an input type that accepts OutputResponseArray and OutputResponseArrayOutput values.
// You can construct a concrete instance of `OutputResponseArrayInput` via:
//
//          OutputResponseArray{ OutputResponseArgs{...} }
type OutputResponseArrayInput interface {
	pulumi.Input

	ToOutputResponseArrayOutput() OutputResponseArrayOutput
	ToOutputResponseArrayOutputWithContext(context.Context) OutputResponseArrayOutput
}

type OutputResponseArray []OutputResponseInput

func (OutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputResponse)(nil)).Elem()
}

func (i OutputResponseArray) ToOutputResponseArrayOutput() OutputResponseArrayOutput {
	return i.ToOutputResponseArrayOutputWithContext(context.Background())
}

func (i OutputResponseArray) ToOutputResponseArrayOutputWithContext(ctx context.Context) OutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutputResponseArrayOutput)
}

// An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
type OutputResponseOutput struct{ *pulumi.OutputState }

func (OutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutputResponse)(nil)).Elem()
}

func (o OutputResponseOutput) ToOutputResponseOutput() OutputResponseOutput {
	return o
}

func (o OutputResponseOutput) ToOutputResponseOutputWithContext(ctx context.Context) OutputResponseOutput {
	return o
}

// Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
func (o OutputResponseOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v OutputResponse) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o OutputResponseOutput) Diagnostics() DiagnosticsResponseOutput {
	return o.ApplyT(func(v OutputResponse) DiagnosticsResponse { return v.Diagnostics }).(DiagnosticsResponseOutput)
}

// The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o OutputResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v OutputResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource Id
func (o OutputResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OutputResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o OutputResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o OutputResponseOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v OutputResponse) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

func (o OutputResponseOutput) SizeWindow() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OutputResponse) *float64 { return v.SizeWindow }).(pulumi.Float64PtrOutput)
}

func (o OutputResponseOutput) TimeWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutputResponse) *string { return v.TimeWindow }).(pulumi.StringPtrOutput)
}

// Resource type
func (o OutputResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OutputResponse) string { return v.Type }).(pulumi.StringOutput)
}

type OutputResponseArrayOutput struct{ *pulumi.OutputState }

func (OutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutputResponse)(nil)).Elem()
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutput() OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) ToOutputResponseArrayOutputWithContext(ctx context.Context) OutputResponseArrayOutput {
	return o
}

func (o OutputResponseArrayOutput) Index(i pulumi.IntInput) OutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutputResponse {
		return vs[0].([]OutputResponse)[vs[1].(int)]
	}).(OutputResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerialization struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ParquetSerializationInput is an input type that accepts ParquetSerializationArgs and ParquetSerializationOutput values.
// You can construct a concrete instance of `ParquetSerializationInput` via:
//
//          ParquetSerializationArgs{...}
type ParquetSerializationInput interface {
	pulumi.Input

	ToParquetSerializationOutput() ParquetSerializationOutput
	ToParquetSerializationOutputWithContext(context.Context) ParquetSerializationOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerializationArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParquetSerializationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetSerialization)(nil)).Elem()
}

func (i ParquetSerializationArgs) ToParquetSerializationOutput() ParquetSerializationOutput {
	return i.ToParquetSerializationOutputWithContext(context.Background())
}

func (i ParquetSerializationArgs) ToParquetSerializationOutputWithContext(ctx context.Context) ParquetSerializationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParquetSerializationOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerializationOutput struct{ *pulumi.OutputState }

func (ParquetSerializationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetSerialization)(nil)).Elem()
}

func (o ParquetSerializationOutput) ToParquetSerializationOutput() ParquetSerializationOutput {
	return o
}

func (o ParquetSerializationOutput) ToParquetSerializationOutputWithContext(ctx context.Context) ParquetSerializationOutput {
	return o
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o ParquetSerializationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParquetSerialization) string { return v.Type }).(pulumi.StringOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerializationResponse struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ParquetSerializationResponseInput is an input type that accepts ParquetSerializationResponseArgs and ParquetSerializationResponseOutput values.
// You can construct a concrete instance of `ParquetSerializationResponseInput` via:
//
//          ParquetSerializationResponseArgs{...}
type ParquetSerializationResponseInput interface {
	pulumi.Input

	ToParquetSerializationResponseOutput() ParquetSerializationResponseOutput
	ToParquetSerializationResponseOutputWithContext(context.Context) ParquetSerializationResponseOutput
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerializationResponseArgs struct {
	// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ParquetSerializationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetSerializationResponse)(nil)).Elem()
}

func (i ParquetSerializationResponseArgs) ToParquetSerializationResponseOutput() ParquetSerializationResponseOutput {
	return i.ToParquetSerializationResponseOutputWithContext(context.Background())
}

func (i ParquetSerializationResponseArgs) ToParquetSerializationResponseOutputWithContext(ctx context.Context) ParquetSerializationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParquetSerializationResponseOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
type ParquetSerializationResponseOutput struct{ *pulumi.OutputState }

func (ParquetSerializationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParquetSerializationResponse)(nil)).Elem()
}

func (o ParquetSerializationResponseOutput) ToParquetSerializationResponseOutput() ParquetSerializationResponseOutput {
	return o
}

func (o ParquetSerializationResponseOutput) ToParquetSerializationResponseOutputWithContext(ctx context.Context) ParquetSerializationResponseOutput {
	return o
}

// Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
func (o ParquetSerializationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ParquetSerializationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Power BI output data source.
type PowerBIOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
	Dataset *string `pulumi:"dataset"`
	// The ID of the Power BI group.
	GroupId *string `pulumi:"groupId"`
	// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
	GroupName *string `pulumi:"groupName"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken *string `pulumi:"refreshToken"`
	// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName *string `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName *string `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// PowerBIOutputDataSourceInput is an input type that accepts PowerBIOutputDataSourceArgs and PowerBIOutputDataSourceOutput values.
// You can construct a concrete instance of `PowerBIOutputDataSourceInput` via:
//
//          PowerBIOutputDataSourceArgs{...}
type PowerBIOutputDataSourceInput interface {
	pulumi.Input

	ToPowerBIOutputDataSourceOutput() PowerBIOutputDataSourceOutput
	ToPowerBIOutputDataSourceOutputWithContext(context.Context) PowerBIOutputDataSourceOutput
}

// Describes a Power BI output data source.
type PowerBIOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
	Dataset pulumi.StringPtrInput `pulumi:"dataset"`
	// The ID of the Power BI group.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName pulumi.StringPtrInput `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName pulumi.StringPtrInput `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PowerBIOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIOutputDataSource)(nil)).Elem()
}

func (i PowerBIOutputDataSourceArgs) ToPowerBIOutputDataSourceOutput() PowerBIOutputDataSourceOutput {
	return i.ToPowerBIOutputDataSourceOutputWithContext(context.Background())
}

func (i PowerBIOutputDataSourceArgs) ToPowerBIOutputDataSourceOutputWithContext(ctx context.Context) PowerBIOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerBIOutputDataSourceOutput)
}

// Describes a Power BI output data source.
type PowerBIOutputDataSourceOutput struct{ *pulumi.OutputState }

func (PowerBIOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIOutputDataSource)(nil)).Elem()
}

func (o PowerBIOutputDataSourceOutput) ToPowerBIOutputDataSourceOutput() PowerBIOutputDataSourceOutput {
	return o
}

func (o PowerBIOutputDataSourceOutput) ToPowerBIOutputDataSourceOutputWithContext(ctx context.Context) PowerBIOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o PowerBIOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.Dataset }).(pulumi.StringPtrOutput)
}

// The ID of the Power BI group.
func (o PowerBIOutputDataSourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
func (o PowerBIOutputDataSourceOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o PowerBIOutputDataSourceOutput) TokenUserDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.TokenUserDisplayName }).(pulumi.StringPtrOutput)
}

// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o PowerBIOutputDataSourceOutput) TokenUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) *string { return v.TokenUserPrincipalName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PowerBIOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Power BI output data source.
type PowerBIOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
	Dataset *string `pulumi:"dataset"`
	// The ID of the Power BI group.
	GroupId *string `pulumi:"groupId"`
	// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
	GroupName *string `pulumi:"groupName"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken *string `pulumi:"refreshToken"`
	// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
	Table *string `pulumi:"table"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName *string `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName *string `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// PowerBIOutputDataSourceResponseInput is an input type that accepts PowerBIOutputDataSourceResponseArgs and PowerBIOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `PowerBIOutputDataSourceResponseInput` via:
//
//          PowerBIOutputDataSourceResponseArgs{...}
type PowerBIOutputDataSourceResponseInput interface {
	pulumi.Input

	ToPowerBIOutputDataSourceResponseOutput() PowerBIOutputDataSourceResponseOutput
	ToPowerBIOutputDataSourceResponseOutputWithContext(context.Context) PowerBIOutputDataSourceResponseOutput
}

// Describes a Power BI output data source.
type PowerBIOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
	Dataset pulumi.StringPtrInput `pulumi:"dataset"`
	// The ID of the Power BI group.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
	// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
	Table pulumi.StringPtrInput `pulumi:"table"`
	// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserDisplayName pulumi.StringPtrInput `pulumi:"tokenUserDisplayName"`
	// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
	TokenUserPrincipalName pulumi.StringPtrInput `pulumi:"tokenUserPrincipalName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PowerBIOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIOutputDataSourceResponse)(nil)).Elem()
}

func (i PowerBIOutputDataSourceResponseArgs) ToPowerBIOutputDataSourceResponseOutput() PowerBIOutputDataSourceResponseOutput {
	return i.ToPowerBIOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i PowerBIOutputDataSourceResponseArgs) ToPowerBIOutputDataSourceResponseOutputWithContext(ctx context.Context) PowerBIOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerBIOutputDataSourceResponseOutput)
}

// Describes a Power BI output data source.
type PowerBIOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (PowerBIOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerBIOutputDataSourceResponse)(nil)).Elem()
}

func (o PowerBIOutputDataSourceResponseOutput) ToPowerBIOutputDataSourceResponseOutput() PowerBIOutputDataSourceResponseOutput {
	return o
}

func (o PowerBIOutputDataSourceResponseOutput) ToPowerBIOutputDataSourceResponseOutputWithContext(ctx context.Context) PowerBIOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o PowerBIOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceResponseOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.Dataset }).(pulumi.StringPtrOutput)
}

// The ID of the Power BI group.
func (o PowerBIOutputDataSourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
func (o PowerBIOutputDataSourceResponseOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceResponseOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

// The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceResponseOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.Table }).(pulumi.StringPtrOutput)
}

// The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o PowerBIOutputDataSourceResponseOutput) TokenUserDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.TokenUserDisplayName }).(pulumi.StringPtrOutput)
}

// The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
func (o PowerBIOutputDataSourceResponseOutput) TokenUserPrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) *string { return v.TokenUserPrincipalName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o PowerBIOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PowerBIOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an input containing reference data.
type ReferenceInputProperties struct {
	// Describes how input data is compressed
	Compression *Compression `pulumi:"compression"`
	// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey *string `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ReferenceInputPropertiesInput is an input type that accepts ReferenceInputPropertiesArgs and ReferenceInputPropertiesOutput values.
// You can construct a concrete instance of `ReferenceInputPropertiesInput` via:
//
//          ReferenceInputPropertiesArgs{...}
type ReferenceInputPropertiesInput interface {
	pulumi.Input

	ToReferenceInputPropertiesOutput() ReferenceInputPropertiesOutput
	ToReferenceInputPropertiesOutputWithContext(context.Context) ReferenceInputPropertiesOutput
}

// The properties that are associated with an input containing reference data.
type ReferenceInputPropertiesArgs struct {
	// Describes how input data is compressed
	Compression CompressionPtrInput `pulumi:"compression"`
	// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReferenceInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceInputProperties)(nil)).Elem()
}

func (i ReferenceInputPropertiesArgs) ToReferenceInputPropertiesOutput() ReferenceInputPropertiesOutput {
	return i.ToReferenceInputPropertiesOutputWithContext(context.Background())
}

func (i ReferenceInputPropertiesArgs) ToReferenceInputPropertiesOutputWithContext(ctx context.Context) ReferenceInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceInputPropertiesOutput)
}

// The properties that are associated with an input containing reference data.
type ReferenceInputPropertiesOutput struct{ *pulumi.OutputState }

func (ReferenceInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceInputProperties)(nil)).Elem()
}

func (o ReferenceInputPropertiesOutput) ToReferenceInputPropertiesOutput() ReferenceInputPropertiesOutput {
	return o
}

func (o ReferenceInputPropertiesOutput) ToReferenceInputPropertiesOutputWithContext(ctx context.Context) ReferenceInputPropertiesOutput {
	return o
}

// Describes how input data is compressed
func (o ReferenceInputPropertiesOutput) Compression() CompressionPtrOutput {
	return o.ApplyT(func(v ReferenceInputProperties) *Compression { return v.Compression }).(CompressionPtrOutput)
}

// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v ReferenceInputProperties) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// partitionKey Describes a key in the input data which is used for partitioning the input data
func (o ReferenceInputPropertiesOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceInputProperties) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v ReferenceInputProperties) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceInputProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an input containing reference data.
type ReferenceInputPropertiesResponse struct {
	// Describes how input data is compressed
	Compression *CompressionResponse `pulumi:"compression"`
	// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponse `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey *string `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ReferenceInputPropertiesResponseInput is an input type that accepts ReferenceInputPropertiesResponseArgs and ReferenceInputPropertiesResponseOutput values.
// You can construct a concrete instance of `ReferenceInputPropertiesResponseInput` via:
//
//          ReferenceInputPropertiesResponseArgs{...}
type ReferenceInputPropertiesResponseInput interface {
	pulumi.Input

	ToReferenceInputPropertiesResponseOutput() ReferenceInputPropertiesResponseOutput
	ToReferenceInputPropertiesResponseOutputWithContext(context.Context) ReferenceInputPropertiesResponseOutput
}

// The properties that are associated with an input containing reference data.
type ReferenceInputPropertiesResponseArgs struct {
	// Describes how input data is compressed
	Compression CompressionResponsePtrInput `pulumi:"compression"`
	// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponseInput `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReferenceInputPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceInputPropertiesResponse)(nil)).Elem()
}

func (i ReferenceInputPropertiesResponseArgs) ToReferenceInputPropertiesResponseOutput() ReferenceInputPropertiesResponseOutput {
	return i.ToReferenceInputPropertiesResponseOutputWithContext(context.Background())
}

func (i ReferenceInputPropertiesResponseArgs) ToReferenceInputPropertiesResponseOutputWithContext(ctx context.Context) ReferenceInputPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceInputPropertiesResponseOutput)
}

// The properties that are associated with an input containing reference data.
type ReferenceInputPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ReferenceInputPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceInputPropertiesResponse)(nil)).Elem()
}

func (o ReferenceInputPropertiesResponseOutput) ToReferenceInputPropertiesResponseOutput() ReferenceInputPropertiesResponseOutput {
	return o
}

func (o ReferenceInputPropertiesResponseOutput) ToReferenceInputPropertiesResponseOutputWithContext(ctx context.Context) ReferenceInputPropertiesResponseOutput {
	return o
}

// Describes how input data is compressed
func (o ReferenceInputPropertiesResponseOutput) Compression() CompressionResponsePtrOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) *CompressionResponse { return v.Compression }).(CompressionResponsePtrOutput)
}

// Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesResponseOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o ReferenceInputPropertiesResponseOutput) Diagnostics() DiagnosticsResponseOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) DiagnosticsResponse { return v.Diagnostics }).(DiagnosticsResponseOutput)
}

// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o ReferenceInputPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// partitionKey Describes a key in the input data which is used for partitioning the input data
func (o ReferenceInputPropertiesResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesResponseOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o ReferenceInputPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceInputPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with a scalar function.
type ScalarFunctionProperties struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding interface{}     `pulumi:"binding"`
	Inputs  []FunctionInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output *FunctionOutput `pulumi:"output"`
	// Indicates the type of function.
	Type string `pulumi:"type"`
}

// ScalarFunctionPropertiesInput is an input type that accepts ScalarFunctionPropertiesArgs and ScalarFunctionPropertiesOutput values.
// You can construct a concrete instance of `ScalarFunctionPropertiesInput` via:
//
//          ScalarFunctionPropertiesArgs{...}
type ScalarFunctionPropertiesInput interface {
	pulumi.Input

	ToScalarFunctionPropertiesOutput() ScalarFunctionPropertiesOutput
	ToScalarFunctionPropertiesOutputWithContext(context.Context) ScalarFunctionPropertiesOutput
}

// The properties that are associated with a scalar function.
type ScalarFunctionPropertiesArgs struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding pulumi.Input            `pulumi:"binding"`
	Inputs  FunctionInputArrayInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output FunctionOutputPtrInput `pulumi:"output"`
	// Indicates the type of function.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScalarFunctionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalarFunctionProperties)(nil)).Elem()
}

func (i ScalarFunctionPropertiesArgs) ToScalarFunctionPropertiesOutput() ScalarFunctionPropertiesOutput {
	return i.ToScalarFunctionPropertiesOutputWithContext(context.Background())
}

func (i ScalarFunctionPropertiesArgs) ToScalarFunctionPropertiesOutputWithContext(ctx context.Context) ScalarFunctionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalarFunctionPropertiesOutput)
}

// The properties that are associated with a scalar function.
type ScalarFunctionPropertiesOutput struct{ *pulumi.OutputState }

func (ScalarFunctionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalarFunctionProperties)(nil)).Elem()
}

func (o ScalarFunctionPropertiesOutput) ToScalarFunctionPropertiesOutput() ScalarFunctionPropertiesOutput {
	return o
}

func (o ScalarFunctionPropertiesOutput) ToScalarFunctionPropertiesOutputWithContext(ctx context.Context) ScalarFunctionPropertiesOutput {
	return o
}

// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
func (o ScalarFunctionPropertiesOutput) Binding() pulumi.AnyOutput {
	return o.ApplyT(func(v ScalarFunctionProperties) interface{} { return v.Binding }).(pulumi.AnyOutput)
}

func (o ScalarFunctionPropertiesOutput) Inputs() FunctionInputArrayOutput {
	return o.ApplyT(func(v ScalarFunctionProperties) []FunctionInput { return v.Inputs }).(FunctionInputArrayOutput)
}

// Describes the output of a function.
func (o ScalarFunctionPropertiesOutput) Output() FunctionOutputPtrOutput {
	return o.ApplyT(func(v ScalarFunctionProperties) *FunctionOutput { return v.Output }).(FunctionOutputPtrOutput)
}

// Indicates the type of function.
func (o ScalarFunctionPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScalarFunctionProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with a scalar function.
type ScalarFunctionPropertiesResponse struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding interface{} `pulumi:"binding"`
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag   string                  `pulumi:"etag"`
	Inputs []FunctionInputResponse `pulumi:"inputs"`
	// Describes the output of a function.
	Output *FunctionOutputResponse `pulumi:"output"`
	// Indicates the type of function.
	Type string `pulumi:"type"`
}

// ScalarFunctionPropertiesResponseInput is an input type that accepts ScalarFunctionPropertiesResponseArgs and ScalarFunctionPropertiesResponseOutput values.
// You can construct a concrete instance of `ScalarFunctionPropertiesResponseInput` via:
//
//          ScalarFunctionPropertiesResponseArgs{...}
type ScalarFunctionPropertiesResponseInput interface {
	pulumi.Input

	ToScalarFunctionPropertiesResponseOutput() ScalarFunctionPropertiesResponseOutput
	ToScalarFunctionPropertiesResponseOutputWithContext(context.Context) ScalarFunctionPropertiesResponseOutput
}

// The properties that are associated with a scalar function.
type ScalarFunctionPropertiesResponseArgs struct {
	// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
	Binding pulumi.Input `pulumi:"binding"`
	// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag   pulumi.StringInput              `pulumi:"etag"`
	Inputs FunctionInputResponseArrayInput `pulumi:"inputs"`
	// Describes the output of a function.
	Output FunctionOutputResponsePtrInput `pulumi:"output"`
	// Indicates the type of function.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ScalarFunctionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalarFunctionPropertiesResponse)(nil)).Elem()
}

func (i ScalarFunctionPropertiesResponseArgs) ToScalarFunctionPropertiesResponseOutput() ScalarFunctionPropertiesResponseOutput {
	return i.ToScalarFunctionPropertiesResponseOutputWithContext(context.Background())
}

func (i ScalarFunctionPropertiesResponseArgs) ToScalarFunctionPropertiesResponseOutputWithContext(ctx context.Context) ScalarFunctionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalarFunctionPropertiesResponseOutput)
}

// The properties that are associated with a scalar function.
type ScalarFunctionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ScalarFunctionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalarFunctionPropertiesResponse)(nil)).Elem()
}

func (o ScalarFunctionPropertiesResponseOutput) ToScalarFunctionPropertiesResponseOutput() ScalarFunctionPropertiesResponseOutput {
	return o
}

func (o ScalarFunctionPropertiesResponseOutput) ToScalarFunctionPropertiesResponseOutputWithContext(ctx context.Context) ScalarFunctionPropertiesResponseOutput {
	return o
}

// The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
func (o ScalarFunctionPropertiesResponseOutput) Binding() pulumi.AnyOutput {
	return o.ApplyT(func(v ScalarFunctionPropertiesResponse) interface{} { return v.Binding }).(pulumi.AnyOutput)
}

// The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o ScalarFunctionPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ScalarFunctionPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

func (o ScalarFunctionPropertiesResponseOutput) Inputs() FunctionInputResponseArrayOutput {
	return o.ApplyT(func(v ScalarFunctionPropertiesResponse) []FunctionInputResponse { return v.Inputs }).(FunctionInputResponseArrayOutput)
}

// Describes the output of a function.
func (o ScalarFunctionPropertiesResponseOutput) Output() FunctionOutputResponsePtrOutput {
	return o.ApplyT(func(v ScalarFunctionPropertiesResponse) *FunctionOutputResponse { return v.Output }).(FunctionOutputResponsePtrOutput)
}

// Indicates the type of function.
func (o ScalarFunctionPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScalarFunctionPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
	QueueName *string `pulumi:"queueName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string           `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  map[string]string `pulumi:"systemPropertyColumns"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ServiceBusQueueOutputDataSourceInput is an input type that accepts ServiceBusQueueOutputDataSourceArgs and ServiceBusQueueOutputDataSourceOutput values.
// You can construct a concrete instance of `ServiceBusQueueOutputDataSourceInput` via:
//
//          ServiceBusQueueOutputDataSourceArgs{...}
type ServiceBusQueueOutputDataSourceInput interface {
	pulumi.Input

	ToServiceBusQueueOutputDataSourceOutput() ServiceBusQueueOutputDataSourceOutput
	ToServiceBusQueueOutputDataSourceOutputWithContext(context.Context) ServiceBusQueueOutputDataSourceOutput
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  pulumi.StringMapInput `pulumi:"systemPropertyColumns"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceBusQueueOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusQueueOutputDataSource)(nil)).Elem()
}

func (i ServiceBusQueueOutputDataSourceArgs) ToServiceBusQueueOutputDataSourceOutput() ServiceBusQueueOutputDataSourceOutput {
	return i.ToServiceBusQueueOutputDataSourceOutputWithContext(context.Background())
}

func (i ServiceBusQueueOutputDataSourceArgs) ToServiceBusQueueOutputDataSourceOutputWithContext(ctx context.Context) ServiceBusQueueOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBusQueueOutputDataSourceOutput)
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSourceOutput struct{ *pulumi.OutputState }

func (ServiceBusQueueOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusQueueOutputDataSource)(nil)).Elem()
}

func (o ServiceBusQueueOutputDataSourceOutput) ToServiceBusQueueOutputDataSourceOutput() ServiceBusQueueOutputDataSourceOutput {
	return o
}

func (o ServiceBusQueueOutputDataSourceOutput) ToServiceBusQueueOutputDataSourceOutputWithContext(ctx context.Context) ServiceBusQueueOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o ServiceBusQueueOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
func (o ServiceBusQueueOutputDataSourceOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

func (o ServiceBusQueueOutputDataSourceOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) map[string]string { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
	QueueName *string `pulumi:"queueName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string           `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  map[string]string `pulumi:"systemPropertyColumns"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ServiceBusQueueOutputDataSourceResponseInput is an input type that accepts ServiceBusQueueOutputDataSourceResponseArgs and ServiceBusQueueOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `ServiceBusQueueOutputDataSourceResponseInput` via:
//
//          ServiceBusQueueOutputDataSourceResponseArgs{...}
type ServiceBusQueueOutputDataSourceResponseInput interface {
	pulumi.Input

	ToServiceBusQueueOutputDataSourceResponseOutput() ServiceBusQueueOutputDataSourceResponseOutput
	ToServiceBusQueueOutputDataSourceResponseOutputWithContext(context.Context) ServiceBusQueueOutputDataSourceResponseOutput
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  pulumi.StringMapInput `pulumi:"systemPropertyColumns"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceBusQueueOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusQueueOutputDataSourceResponse)(nil)).Elem()
}

func (i ServiceBusQueueOutputDataSourceResponseArgs) ToServiceBusQueueOutputDataSourceResponseOutput() ServiceBusQueueOutputDataSourceResponseOutput {
	return i.ToServiceBusQueueOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i ServiceBusQueueOutputDataSourceResponseArgs) ToServiceBusQueueOutputDataSourceResponseOutputWithContext(ctx context.Context) ServiceBusQueueOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBusQueueOutputDataSourceResponseOutput)
}

// Describes a Service Bus Queue output data source.
type ServiceBusQueueOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (ServiceBusQueueOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusQueueOutputDataSourceResponse)(nil)).Elem()
}

func (o ServiceBusQueueOutputDataSourceResponseOutput) ToServiceBusQueueOutputDataSourceResponseOutput() ServiceBusQueueOutputDataSourceResponseOutput {
	return o
}

func (o ServiceBusQueueOutputDataSourceResponseOutput) ToServiceBusQueueOutputDataSourceResponseOutputWithContext(ctx context.Context) ServiceBusQueueOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o ServiceBusQueueOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
func (o ServiceBusQueueOutputDataSourceResponseOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceResponseOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

func (o ServiceBusQueueOutputDataSourceResponseOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) map[string]string { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusQueueOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBusQueueOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSource struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string           `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  map[string]string `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
	TopicName *string `pulumi:"topicName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ServiceBusTopicOutputDataSourceInput is an input type that accepts ServiceBusTopicOutputDataSourceArgs and ServiceBusTopicOutputDataSourceOutput values.
// You can construct a concrete instance of `ServiceBusTopicOutputDataSourceInput` via:
//
//          ServiceBusTopicOutputDataSourceArgs{...}
type ServiceBusTopicOutputDataSourceInput interface {
	pulumi.Input

	ToServiceBusTopicOutputDataSourceOutput() ServiceBusTopicOutputDataSourceOutput
	ToServiceBusTopicOutputDataSourceOutputWithContext(context.Context) ServiceBusTopicOutputDataSourceOutput
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSourceArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  pulumi.StringMapInput `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceBusTopicOutputDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTopicOutputDataSource)(nil)).Elem()
}

func (i ServiceBusTopicOutputDataSourceArgs) ToServiceBusTopicOutputDataSourceOutput() ServiceBusTopicOutputDataSourceOutput {
	return i.ToServiceBusTopicOutputDataSourceOutputWithContext(context.Background())
}

func (i ServiceBusTopicOutputDataSourceArgs) ToServiceBusTopicOutputDataSourceOutputWithContext(ctx context.Context) ServiceBusTopicOutputDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBusTopicOutputDataSourceOutput)
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSourceOutput struct{ *pulumi.OutputState }

func (ServiceBusTopicOutputDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTopicOutputDataSource)(nil)).Elem()
}

func (o ServiceBusTopicOutputDataSourceOutput) ToServiceBusTopicOutputDataSourceOutput() ServiceBusTopicOutputDataSourceOutput {
	return o
}

func (o ServiceBusTopicOutputDataSourceOutput) ToServiceBusTopicOutputDataSourceOutputWithContext(ctx context.Context) ServiceBusTopicOutputDataSourceOutput {
	return o
}

// Authentication Mode.
func (o ServiceBusTopicOutputDataSourceOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
func (o ServiceBusTopicOutputDataSourceOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

func (o ServiceBusTopicOutputDataSourceOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) map[string]string { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSource) string { return v.Type }).(pulumi.StringOutput)
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSourceResponse struct {
	// Authentication Mode.
	AuthenticationMode *string `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns []string `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace *string `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey *string `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName *string           `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  map[string]string `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
	TopicName *string `pulumi:"topicName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// ServiceBusTopicOutputDataSourceResponseInput is an input type that accepts ServiceBusTopicOutputDataSourceResponseArgs and ServiceBusTopicOutputDataSourceResponseOutput values.
// You can construct a concrete instance of `ServiceBusTopicOutputDataSourceResponseInput` via:
//
//          ServiceBusTopicOutputDataSourceResponseArgs{...}
type ServiceBusTopicOutputDataSourceResponseInput interface {
	pulumi.Input

	ToServiceBusTopicOutputDataSourceResponseOutput() ServiceBusTopicOutputDataSourceResponseOutput
	ToServiceBusTopicOutputDataSourceResponseOutputWithContext(context.Context) ServiceBusTopicOutputDataSourceResponseOutput
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSourceResponseArgs struct {
	// Authentication Mode.
	AuthenticationMode pulumi.StringPtrInput `pulumi:"authenticationMode"`
	// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
	PropertyColumns pulumi.StringArrayInput `pulumi:"propertyColumns"`
	// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	ServiceBusNamespace pulumi.StringPtrInput `pulumi:"serviceBusNamespace"`
	// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyKey pulumi.StringPtrInput `pulumi:"sharedAccessPolicyKey"`
	// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
	SharedAccessPolicyName pulumi.StringPtrInput `pulumi:"sharedAccessPolicyName"`
	SystemPropertyColumns  pulumi.StringMapInput `pulumi:"systemPropertyColumns"`
	// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
	TopicName pulumi.StringPtrInput `pulumi:"topicName"`
	// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceBusTopicOutputDataSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTopicOutputDataSourceResponse)(nil)).Elem()
}

func (i ServiceBusTopicOutputDataSourceResponseArgs) ToServiceBusTopicOutputDataSourceResponseOutput() ServiceBusTopicOutputDataSourceResponseOutput {
	return i.ToServiceBusTopicOutputDataSourceResponseOutputWithContext(context.Background())
}

func (i ServiceBusTopicOutputDataSourceResponseArgs) ToServiceBusTopicOutputDataSourceResponseOutputWithContext(ctx context.Context) ServiceBusTopicOutputDataSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceBusTopicOutputDataSourceResponseOutput)
}

// Describes a Service Bus Topic output data source.
type ServiceBusTopicOutputDataSourceResponseOutput struct{ *pulumi.OutputState }

func (ServiceBusTopicOutputDataSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceBusTopicOutputDataSourceResponse)(nil)).Elem()
}

func (o ServiceBusTopicOutputDataSourceResponseOutput) ToServiceBusTopicOutputDataSourceResponseOutput() ServiceBusTopicOutputDataSourceResponseOutput {
	return o
}

func (o ServiceBusTopicOutputDataSourceResponseOutput) ToServiceBusTopicOutputDataSourceResponseOutputWithContext(ctx context.Context) ServiceBusTopicOutputDataSourceResponseOutput {
	return o
}

// Authentication Mode.
func (o ServiceBusTopicOutputDataSourceResponseOutput) AuthenticationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) *string { return v.AuthenticationMode }).(pulumi.StringPtrOutput)
}

// A string array of the names of output columns to be attached to Service Bus messages as custom properties.
func (o ServiceBusTopicOutputDataSourceResponseOutput) PropertyColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) []string { return v.PropertyColumns }).(pulumi.StringArrayOutput)
}

// The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceResponseOutput) ServiceBusNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) *string { return v.ServiceBusNamespace }).(pulumi.StringPtrOutput)
}

// The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceResponseOutput) SharedAccessPolicyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) *string { return v.SharedAccessPolicyKey }).(pulumi.StringPtrOutput)
}

// The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceResponseOutput) SharedAccessPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) *string { return v.SharedAccessPolicyName }).(pulumi.StringPtrOutput)
}

func (o ServiceBusTopicOutputDataSourceResponseOutput) SystemPropertyColumns() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) map[string]string { return v.SystemPropertyColumns }).(pulumi.StringMapOutput)
}

// The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceResponseOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) *string { return v.TopicName }).(pulumi.StringPtrOutput)
}

// Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
func (o ServiceBusTopicOutputDataSourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceBusTopicOutputDataSourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an Azure Storage account
type StorageAccount struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
}

// StorageAccountInput is an input type that accepts StorageAccountArgs and StorageAccountOutput values.
// You can construct a concrete instance of `StorageAccountInput` via:
//
//          StorageAccountArgs{...}
type StorageAccountInput interface {
	pulumi.Input

	ToStorageAccountOutput() StorageAccountOutput
	ToStorageAccountOutputWithContext(context.Context) StorageAccountOutput
}

// The properties that are associated with an Azure Storage account
type StorageAccountArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
}

func (StorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (i StorageAccountArgs) ToStorageAccountOutput() StorageAccountOutput {
	return i.ToStorageAccountOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput)
}

func (i StorageAccountArgs) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i StorageAccountArgs) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountOutput).ToStorageAccountPtrOutputWithContext(ctx)
}

// StorageAccountPtrInput is an input type that accepts StorageAccountArgs, StorageAccountPtr and StorageAccountPtrOutput values.
// You can construct a concrete instance of `StorageAccountPtrInput` via:
//
//          StorageAccountArgs{...}
//
//  or:
//
//          nil
type StorageAccountPtrInput interface {
	pulumi.Input

	ToStorageAccountPtrOutput() StorageAccountPtrOutput
	ToStorageAccountPtrOutputWithContext(context.Context) StorageAccountPtrOutput
}

type storageAccountPtrType StorageAccountArgs

func StorageAccountPtr(v *StorageAccountArgs) StorageAccountPtrInput {
	return (*storageAccountPtrType)(v)
}

func (*storageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccount)(nil)).Elem()
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return i.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (i *storageAccountPtrType) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountPtrOutput)
}

// StorageAccountArrayInput is an input type that accepts StorageAccountArray and StorageAccountArrayOutput values.
// You can construct a concrete instance of `StorageAccountArrayInput` via:
//
//          StorageAccountArray{ StorageAccountArgs{...} }
type StorageAccountArrayInput interface {
	pulumi.Input

	ToStorageAccountArrayOutput() StorageAccountArrayOutput
	ToStorageAccountArrayOutputWithContext(context.Context) StorageAccountArrayOutput
}

type StorageAccountArray []StorageAccountInput

func (StorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (i StorageAccountArray) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return i.ToStorageAccountArrayOutputWithContext(context.Background())
}

func (i StorageAccountArray) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountArrayOutput)
}

// The properties that are associated with an Azure Storage account
type StorageAccountOutput struct{ *pulumi.OutputState }

func (StorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccount)(nil)).Elem()
}

func (o StorageAccountOutput) ToStorageAccountOutput() StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountOutputWithContext(ctx context.Context) StorageAccountOutput {
	return o
}

func (o StorageAccountOutput) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return o.ToStorageAccountPtrOutputWithContext(context.Background())
}

func (o StorageAccountOutput) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return o.ApplyT(func(v StorageAccount) *StorageAccount {
		return &v
	}).(StorageAccountPtrOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccount) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccount) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type StorageAccountPtrOutput struct{ *pulumi.OutputState }

func (StorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccount)(nil)).Elem()
}

func (o StorageAccountPtrOutput) ToStorageAccountPtrOutput() StorageAccountPtrOutput {
	return o
}

func (o StorageAccountPtrOutput) ToStorageAccountPtrOutputWithContext(ctx context.Context) StorageAccountPtrOutput {
	return o
}

func (o StorageAccountPtrOutput) Elem() StorageAccountOutput {
	return o.ApplyT(func(v *StorageAccount) StorageAccount { return *v }).(StorageAccountOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountPtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccount) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

type StorageAccountArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccount)(nil)).Elem()
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutput() StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) ToStorageAccountArrayOutputWithContext(ctx context.Context) StorageAccountArrayOutput {
	return o
}

func (o StorageAccountArrayOutput) Index(i pulumi.IntInput) StorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccount {
		return vs[0].([]StorageAccount)[vs[1].(int)]
	}).(StorageAccountOutput)
}

// The properties that are associated with an Azure Storage account
type StorageAccountResponse struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey *string `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName *string `pulumi:"accountName"`
}

// StorageAccountResponseInput is an input type that accepts StorageAccountResponseArgs and StorageAccountResponseOutput values.
// You can construct a concrete instance of `StorageAccountResponseInput` via:
//
//          StorageAccountResponseArgs{...}
type StorageAccountResponseInput interface {
	pulumi.Input

	ToStorageAccountResponseOutput() StorageAccountResponseOutput
	ToStorageAccountResponseOutputWithContext(context.Context) StorageAccountResponseOutput
}

// The properties that are associated with an Azure Storage account
type StorageAccountResponseArgs struct {
	// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
}

func (StorageAccountResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return i.ToStorageAccountResponseOutputWithContext(context.Background())
}

func (i StorageAccountResponseArgs) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseOutput)
}

func (i StorageAccountResponseArgs) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return i.ToStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (i StorageAccountResponseArgs) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseOutput).ToStorageAccountResponsePtrOutputWithContext(ctx)
}

// StorageAccountResponsePtrInput is an input type that accepts StorageAccountResponseArgs, StorageAccountResponsePtr and StorageAccountResponsePtrOutput values.
// You can construct a concrete instance of `StorageAccountResponsePtrInput` via:
//
//          StorageAccountResponseArgs{...}
//
//  or:
//
//          nil
type StorageAccountResponsePtrInput interface {
	pulumi.Input

	ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput
	ToStorageAccountResponsePtrOutputWithContext(context.Context) StorageAccountResponsePtrOutput
}

type storageAccountResponsePtrType StorageAccountResponseArgs

func StorageAccountResponsePtr(v *StorageAccountResponseArgs) StorageAccountResponsePtrInput {
	return (*storageAccountResponsePtrType)(v)
}

func (*storageAccountResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountResponse)(nil)).Elem()
}

func (i *storageAccountResponsePtrType) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return i.ToStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (i *storageAccountResponsePtrType) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponsePtrOutput)
}

// StorageAccountResponseArrayInput is an input type that accepts StorageAccountResponseArray and StorageAccountResponseArrayOutput values.
// You can construct a concrete instance of `StorageAccountResponseArrayInput` via:
//
//          StorageAccountResponseArray{ StorageAccountResponseArgs{...} }
type StorageAccountResponseArrayInput interface {
	pulumi.Input

	ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput
	ToStorageAccountResponseArrayOutputWithContext(context.Context) StorageAccountResponseArrayOutput
}

type StorageAccountResponseArray []StorageAccountResponseInput

func (StorageAccountResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return i.ToStorageAccountResponseArrayOutputWithContext(context.Background())
}

func (i StorageAccountResponseArray) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageAccountResponseArrayOutput)
}

// The properties that are associated with an Azure Storage account
type StorageAccountResponseOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutput() StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponseOutputWithContext(ctx context.Context) StorageAccountResponseOutput {
	return o
}

func (o StorageAccountResponseOutput) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return o.ToStorageAccountResponsePtrOutputWithContext(context.Background())
}

func (o StorageAccountResponseOutput) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *StorageAccountResponse {
		return &v
	}).(StorageAccountResponsePtrOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountResponseOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageAccountResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type StorageAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponsePtrOutput) ToStorageAccountResponsePtrOutput() StorageAccountResponsePtrOutput {
	return o
}

func (o StorageAccountResponsePtrOutput) ToStorageAccountResponsePtrOutputWithContext(ctx context.Context) StorageAccountResponsePtrOutput {
	return o
}

func (o StorageAccountResponsePtrOutput) Elem() StorageAccountResponseOutput {
	return o.ApplyT(func(v *StorageAccountResponse) StorageAccountResponse { return *v }).(StorageAccountResponseOutput)
}

// The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountResponsePtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
func (o StorageAccountResponsePtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageAccountResponse) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

type StorageAccountResponseArrayOutput struct{ *pulumi.OutputState }

func (StorageAccountResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageAccountResponse)(nil)).Elem()
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutput() StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) ToStorageAccountResponseArrayOutputWithContext(ctx context.Context) StorageAccountResponseArrayOutput {
	return o
}

func (o StorageAccountResponseArrayOutput) Index(i pulumi.IntInput) StorageAccountResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageAccountResponse {
		return vs[0].([]StorageAccountResponse)[vs[1].(int)]
	}).(StorageAccountResponseOutput)
}

// The properties that are associated with an input containing stream data.
type StreamInputProperties struct {
	// Describes how input data is compressed
	Compression *Compression `pulumi:"compression"`
	// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey *string `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// StreamInputPropertiesInput is an input type that accepts StreamInputPropertiesArgs and StreamInputPropertiesOutput values.
// You can construct a concrete instance of `StreamInputPropertiesInput` via:
//
//          StreamInputPropertiesArgs{...}
type StreamInputPropertiesInput interface {
	pulumi.Input

	ToStreamInputPropertiesOutput() StreamInputPropertiesOutput
	ToStreamInputPropertiesOutputWithContext(context.Context) StreamInputPropertiesOutput
}

// The properties that are associated with an input containing stream data.
type StreamInputPropertiesArgs struct {
	// Describes how input data is compressed
	Compression CompressionPtrInput `pulumi:"compression"`
	// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamInputPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamInputProperties)(nil)).Elem()
}

func (i StreamInputPropertiesArgs) ToStreamInputPropertiesOutput() StreamInputPropertiesOutput {
	return i.ToStreamInputPropertiesOutputWithContext(context.Background())
}

func (i StreamInputPropertiesArgs) ToStreamInputPropertiesOutputWithContext(ctx context.Context) StreamInputPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamInputPropertiesOutput)
}

// The properties that are associated with an input containing stream data.
type StreamInputPropertiesOutput struct{ *pulumi.OutputState }

func (StreamInputPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamInputProperties)(nil)).Elem()
}

func (o StreamInputPropertiesOutput) ToStreamInputPropertiesOutput() StreamInputPropertiesOutput {
	return o
}

func (o StreamInputPropertiesOutput) ToStreamInputPropertiesOutputWithContext(ctx context.Context) StreamInputPropertiesOutput {
	return o
}

// Describes how input data is compressed
func (o StreamInputPropertiesOutput) Compression() CompressionPtrOutput {
	return o.ApplyT(func(v StreamInputProperties) *Compression { return v.Compression }).(CompressionPtrOutput)
}

// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v StreamInputProperties) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// partitionKey Describes a key in the input data which is used for partitioning the input data
func (o StreamInputPropertiesOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamInputProperties) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v StreamInputProperties) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamInputProperties) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with an input containing stream data.
type StreamInputPropertiesResponse struct {
	// Describes how input data is compressed
	Compression *CompressionResponse `pulumi:"compression"`
	// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
	Datasource interface{} `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponse `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey *string `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization interface{} `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type string `pulumi:"type"`
}

// StreamInputPropertiesResponseInput is an input type that accepts StreamInputPropertiesResponseArgs and StreamInputPropertiesResponseOutput values.
// You can construct a concrete instance of `StreamInputPropertiesResponseInput` via:
//
//          StreamInputPropertiesResponseArgs{...}
type StreamInputPropertiesResponseInput interface {
	pulumi.Input

	ToStreamInputPropertiesResponseOutput() StreamInputPropertiesResponseOutput
	ToStreamInputPropertiesResponseOutputWithContext(context.Context) StreamInputPropertiesResponseOutput
}

// The properties that are associated with an input containing stream data.
type StreamInputPropertiesResponseArgs struct {
	// Describes how input data is compressed
	Compression CompressionResponsePtrInput `pulumi:"compression"`
	// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
	Datasource pulumi.Input `pulumi:"datasource"`
	// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
	Diagnostics DiagnosticsResponseInput `pulumi:"diagnostics"`
	// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// partitionKey Describes a key in the input data which is used for partitioning the input data
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
	Serialization pulumi.Input `pulumi:"serialization"`
	// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
	Type pulumi.StringInput `pulumi:"type"`
}

func (StreamInputPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamInputPropertiesResponse)(nil)).Elem()
}

func (i StreamInputPropertiesResponseArgs) ToStreamInputPropertiesResponseOutput() StreamInputPropertiesResponseOutput {
	return i.ToStreamInputPropertiesResponseOutputWithContext(context.Background())
}

func (i StreamInputPropertiesResponseArgs) ToStreamInputPropertiesResponseOutputWithContext(ctx context.Context) StreamInputPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamInputPropertiesResponseOutput)
}

// The properties that are associated with an input containing stream data.
type StreamInputPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StreamInputPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamInputPropertiesResponse)(nil)).Elem()
}

func (o StreamInputPropertiesResponseOutput) ToStreamInputPropertiesResponseOutput() StreamInputPropertiesResponseOutput {
	return o
}

func (o StreamInputPropertiesResponseOutput) ToStreamInputPropertiesResponseOutputWithContext(ctx context.Context) StreamInputPropertiesResponseOutput {
	return o
}

// Describes how input data is compressed
func (o StreamInputPropertiesResponseOutput) Compression() CompressionResponsePtrOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) *CompressionResponse { return v.Compression }).(CompressionResponsePtrOutput)
}

// Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesResponseOutput) Datasource() pulumi.AnyOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) interface{} { return v.Datasource }).(pulumi.AnyOutput)
}

// Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
func (o StreamInputPropertiesResponseOutput) Diagnostics() DiagnosticsResponseOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) DiagnosticsResponse { return v.Diagnostics }).(DiagnosticsResponseOutput)
}

// The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o StreamInputPropertiesResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// partitionKey Describes a key in the input data which is used for partitioning the input data
func (o StreamInputPropertiesResponseOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesResponseOutput) Serialization() pulumi.AnyOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) interface{} { return v.Serialization }).(pulumi.AnyOutput)
}

// Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
func (o StreamInputPropertiesResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StreamInputPropertiesResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The properties that are associated with a SKU.
type StreamingJobSku struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name *string `pulumi:"name"`
}

// StreamingJobSkuInput is an input type that accepts StreamingJobSkuArgs and StreamingJobSkuOutput values.
// You can construct a concrete instance of `StreamingJobSkuInput` via:
//
//          StreamingJobSkuArgs{...}
type StreamingJobSkuInput interface {
	pulumi.Input

	ToStreamingJobSkuOutput() StreamingJobSkuOutput
	ToStreamingJobSkuOutputWithContext(context.Context) StreamingJobSkuOutput
}

// The properties that are associated with a SKU.
type StreamingJobSkuArgs struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StreamingJobSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobSku)(nil)).Elem()
}

func (i StreamingJobSkuArgs) ToStreamingJobSkuOutput() StreamingJobSkuOutput {
	return i.ToStreamingJobSkuOutputWithContext(context.Background())
}

func (i StreamingJobSkuArgs) ToStreamingJobSkuOutputWithContext(ctx context.Context) StreamingJobSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuOutput)
}

func (i StreamingJobSkuArgs) ToStreamingJobSkuPtrOutput() StreamingJobSkuPtrOutput {
	return i.ToStreamingJobSkuPtrOutputWithContext(context.Background())
}

func (i StreamingJobSkuArgs) ToStreamingJobSkuPtrOutputWithContext(ctx context.Context) StreamingJobSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuOutput).ToStreamingJobSkuPtrOutputWithContext(ctx)
}

// StreamingJobSkuPtrInput is an input type that accepts StreamingJobSkuArgs, StreamingJobSkuPtr and StreamingJobSkuPtrOutput values.
// You can construct a concrete instance of `StreamingJobSkuPtrInput` via:
//
//          StreamingJobSkuArgs{...}
//
//  or:
//
//          nil
type StreamingJobSkuPtrInput interface {
	pulumi.Input

	ToStreamingJobSkuPtrOutput() StreamingJobSkuPtrOutput
	ToStreamingJobSkuPtrOutputWithContext(context.Context) StreamingJobSkuPtrOutput
}

type streamingJobSkuPtrType StreamingJobSkuArgs

func StreamingJobSkuPtr(v *StreamingJobSkuArgs) StreamingJobSkuPtrInput {
	return (*streamingJobSkuPtrType)(v)
}

func (*streamingJobSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobSku)(nil)).Elem()
}

func (i *streamingJobSkuPtrType) ToStreamingJobSkuPtrOutput() StreamingJobSkuPtrOutput {
	return i.ToStreamingJobSkuPtrOutputWithContext(context.Background())
}

func (i *streamingJobSkuPtrType) ToStreamingJobSkuPtrOutputWithContext(ctx context.Context) StreamingJobSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuPtrOutput)
}

// The properties that are associated with a SKU.
type StreamingJobSkuOutput struct{ *pulumi.OutputState }

func (StreamingJobSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobSku)(nil)).Elem()
}

func (o StreamingJobSkuOutput) ToStreamingJobSkuOutput() StreamingJobSkuOutput {
	return o
}

func (o StreamingJobSkuOutput) ToStreamingJobSkuOutputWithContext(ctx context.Context) StreamingJobSkuOutput {
	return o
}

func (o StreamingJobSkuOutput) ToStreamingJobSkuPtrOutput() StreamingJobSkuPtrOutput {
	return o.ToStreamingJobSkuPtrOutputWithContext(context.Background())
}

func (o StreamingJobSkuOutput) ToStreamingJobSkuPtrOutputWithContext(ctx context.Context) StreamingJobSkuPtrOutput {
	return o.ApplyT(func(v StreamingJobSku) *StreamingJobSku {
		return &v
	}).(StreamingJobSkuPtrOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StreamingJobSkuPtrOutput struct{ *pulumi.OutputState }

func (StreamingJobSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobSku)(nil)).Elem()
}

func (o StreamingJobSkuPtrOutput) ToStreamingJobSkuPtrOutput() StreamingJobSkuPtrOutput {
	return o
}

func (o StreamingJobSkuPtrOutput) ToStreamingJobSkuPtrOutputWithContext(ctx context.Context) StreamingJobSkuPtrOutput {
	return o
}

func (o StreamingJobSkuPtrOutput) Elem() StreamingJobSkuOutput {
	return o.ApplyT(func(v *StreamingJobSku) StreamingJobSku { return *v }).(StreamingJobSkuOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The properties that are associated with a SKU.
type StreamingJobSkuResponse struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name *string `pulumi:"name"`
}

// StreamingJobSkuResponseInput is an input type that accepts StreamingJobSkuResponseArgs and StreamingJobSkuResponseOutput values.
// You can construct a concrete instance of `StreamingJobSkuResponseInput` via:
//
//          StreamingJobSkuResponseArgs{...}
type StreamingJobSkuResponseInput interface {
	pulumi.Input

	ToStreamingJobSkuResponseOutput() StreamingJobSkuResponseOutput
	ToStreamingJobSkuResponseOutputWithContext(context.Context) StreamingJobSkuResponseOutput
}

// The properties that are associated with a SKU.
type StreamingJobSkuResponseArgs struct {
	// The name of the SKU. Required on PUT (CreateOrReplace) requests.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (StreamingJobSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobSkuResponse)(nil)).Elem()
}

func (i StreamingJobSkuResponseArgs) ToStreamingJobSkuResponseOutput() StreamingJobSkuResponseOutput {
	return i.ToStreamingJobSkuResponseOutputWithContext(context.Background())
}

func (i StreamingJobSkuResponseArgs) ToStreamingJobSkuResponseOutputWithContext(ctx context.Context) StreamingJobSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuResponseOutput)
}

func (i StreamingJobSkuResponseArgs) ToStreamingJobSkuResponsePtrOutput() StreamingJobSkuResponsePtrOutput {
	return i.ToStreamingJobSkuResponsePtrOutputWithContext(context.Background())
}

func (i StreamingJobSkuResponseArgs) ToStreamingJobSkuResponsePtrOutputWithContext(ctx context.Context) StreamingJobSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuResponseOutput).ToStreamingJobSkuResponsePtrOutputWithContext(ctx)
}

// StreamingJobSkuResponsePtrInput is an input type that accepts StreamingJobSkuResponseArgs, StreamingJobSkuResponsePtr and StreamingJobSkuResponsePtrOutput values.
// You can construct a concrete instance of `StreamingJobSkuResponsePtrInput` via:
//
//          StreamingJobSkuResponseArgs{...}
//
//  or:
//
//          nil
type StreamingJobSkuResponsePtrInput interface {
	pulumi.Input

	ToStreamingJobSkuResponsePtrOutput() StreamingJobSkuResponsePtrOutput
	ToStreamingJobSkuResponsePtrOutputWithContext(context.Context) StreamingJobSkuResponsePtrOutput
}

type streamingJobSkuResponsePtrType StreamingJobSkuResponseArgs

func StreamingJobSkuResponsePtr(v *StreamingJobSkuResponseArgs) StreamingJobSkuResponsePtrInput {
	return (*streamingJobSkuResponsePtrType)(v)
}

func (*streamingJobSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobSkuResponse)(nil)).Elem()
}

func (i *streamingJobSkuResponsePtrType) ToStreamingJobSkuResponsePtrOutput() StreamingJobSkuResponsePtrOutput {
	return i.ToStreamingJobSkuResponsePtrOutputWithContext(context.Background())
}

func (i *streamingJobSkuResponsePtrType) ToStreamingJobSkuResponsePtrOutputWithContext(ctx context.Context) StreamingJobSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingJobSkuResponsePtrOutput)
}

// The properties that are associated with a SKU.
type StreamingJobSkuResponseOutput struct{ *pulumi.OutputState }

func (StreamingJobSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingJobSkuResponse)(nil)).Elem()
}

func (o StreamingJobSkuResponseOutput) ToStreamingJobSkuResponseOutput() StreamingJobSkuResponseOutput {
	return o
}

func (o StreamingJobSkuResponseOutput) ToStreamingJobSkuResponseOutputWithContext(ctx context.Context) StreamingJobSkuResponseOutput {
	return o
}

func (o StreamingJobSkuResponseOutput) ToStreamingJobSkuResponsePtrOutput() StreamingJobSkuResponsePtrOutput {
	return o.ToStreamingJobSkuResponsePtrOutputWithContext(context.Background())
}

func (o StreamingJobSkuResponseOutput) ToStreamingJobSkuResponsePtrOutputWithContext(ctx context.Context) StreamingJobSkuResponsePtrOutput {
	return o.ApplyT(func(v StreamingJobSkuResponse) *StreamingJobSkuResponse {
		return &v
	}).(StreamingJobSkuResponsePtrOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingJobSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type StreamingJobSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (StreamingJobSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingJobSkuResponse)(nil)).Elem()
}

func (o StreamingJobSkuResponsePtrOutput) ToStreamingJobSkuResponsePtrOutput() StreamingJobSkuResponsePtrOutput {
	return o
}

func (o StreamingJobSkuResponsePtrOutput) ToStreamingJobSkuResponsePtrOutputWithContext(ctx context.Context) StreamingJobSkuResponsePtrOutput {
	return o
}

func (o StreamingJobSkuResponsePtrOutput) Elem() StreamingJobSkuResponseOutput {
	return o.ApplyT(func(v *StreamingJobSkuResponse) StreamingJobSkuResponse { return *v }).(StreamingJobSkuResponseOutput)
}

// The name of the SKU. Required on PUT (CreateOrReplace) requests.
func (o StreamingJobSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingJobSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type Transformation struct {
	// Resource name
	Name *string `pulumi:"name"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query *string `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits *int `pulumi:"streamingUnits"`
}

// TransformationInput is an input type that accepts TransformationArgs and TransformationOutput values.
// You can construct a concrete instance of `TransformationInput` via:
//
//          TransformationArgs{...}
type TransformationInput interface {
	pulumi.Input

	ToTransformationOutput() TransformationOutput
	ToTransformationOutputWithContext(context.Context) TransformationOutput
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationArgs struct {
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits pulumi.IntPtrInput `pulumi:"streamingUnits"`
}

func (TransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Transformation)(nil)).Elem()
}

func (i TransformationArgs) ToTransformationOutput() TransformationOutput {
	return i.ToTransformationOutputWithContext(context.Background())
}

func (i TransformationArgs) ToTransformationOutputWithContext(ctx context.Context) TransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationOutput)
}

func (i TransformationArgs) ToTransformationPtrOutput() TransformationPtrOutput {
	return i.ToTransformationPtrOutputWithContext(context.Background())
}

func (i TransformationArgs) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationOutput).ToTransformationPtrOutputWithContext(ctx)
}

// TransformationPtrInput is an input type that accepts TransformationArgs, TransformationPtr and TransformationPtrOutput values.
// You can construct a concrete instance of `TransformationPtrInput` via:
//
//          TransformationArgs{...}
//
//  or:
//
//          nil
type TransformationPtrInput interface {
	pulumi.Input

	ToTransformationPtrOutput() TransformationPtrOutput
	ToTransformationPtrOutputWithContext(context.Context) TransformationPtrOutput
}

type transformationPtrType TransformationArgs

func TransformationPtr(v *TransformationArgs) TransformationPtrInput {
	return (*transformationPtrType)(v)
}

func (*transformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Transformation)(nil)).Elem()
}

func (i *transformationPtrType) ToTransformationPtrOutput() TransformationPtrOutput {
	return i.ToTransformationPtrOutputWithContext(context.Background())
}

func (i *transformationPtrType) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationPtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationOutput struct{ *pulumi.OutputState }

func (TransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Transformation)(nil)).Elem()
}

func (o TransformationOutput) ToTransformationOutput() TransformationOutput {
	return o
}

func (o TransformationOutput) ToTransformationOutputWithContext(ctx context.Context) TransformationOutput {
	return o
}

func (o TransformationOutput) ToTransformationPtrOutput() TransformationPtrOutput {
	return o.ToTransformationPtrOutputWithContext(context.Background())
}

func (o TransformationOutput) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return o.ApplyT(func(v Transformation) *Transformation {
		return &v
	}).(TransformationPtrOutput)
}

// Resource name
func (o TransformationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Transformation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Transformation) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Transformation) *int { return v.StreamingUnits }).(pulumi.IntPtrOutput)
}

type TransformationPtrOutput struct{ *pulumi.OutputState }

func (TransformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Transformation)(nil)).Elem()
}

func (o TransformationPtrOutput) ToTransformationPtrOutput() TransformationPtrOutput {
	return o
}

func (o TransformationPtrOutput) ToTransformationPtrOutputWithContext(ctx context.Context) TransformationPtrOutput {
	return o
}

func (o TransformationPtrOutput) Elem() TransformationOutput {
	return o.ApplyT(func(v *Transformation) Transformation { return *v }).(TransformationOutput)
}

// Resource name
func (o TransformationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Transformation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Transformation) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationPtrOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Transformation) *int {
		if v == nil {
			return nil
		}
		return v.StreamingUnits
	}).(pulumi.IntPtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponse struct {
	// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag string `pulumi:"etag"`
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name *string `pulumi:"name"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query *string `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits *int `pulumi:"streamingUnits"`
	// Resource type
	Type string `pulumi:"type"`
}

// TransformationResponseInput is an input type that accepts TransformationResponseArgs and TransformationResponseOutput values.
// You can construct a concrete instance of `TransformationResponseInput` via:
//
//          TransformationResponseArgs{...}
type TransformationResponseInput interface {
	pulumi.Input

	ToTransformationResponseOutput() TransformationResponseOutput
	ToTransformationResponseOutputWithContext(context.Context) TransformationResponseOutput
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponseArgs struct {
	// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource Id
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Specifies the number of streaming units that the streaming job uses.
	StreamingUnits pulumi.IntPtrInput `pulumi:"streamingUnits"`
	// Resource type
	Type pulumi.StringInput `pulumi:"type"`
}

func (TransformationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationResponse)(nil)).Elem()
}

func (i TransformationResponseArgs) ToTransformationResponseOutput() TransformationResponseOutput {
	return i.ToTransformationResponseOutputWithContext(context.Background())
}

func (i TransformationResponseArgs) ToTransformationResponseOutputWithContext(ctx context.Context) TransformationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponseOutput)
}

func (i TransformationResponseArgs) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return i.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (i TransformationResponseArgs) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponseOutput).ToTransformationResponsePtrOutputWithContext(ctx)
}

// TransformationResponsePtrInput is an input type that accepts TransformationResponseArgs, TransformationResponsePtr and TransformationResponsePtrOutput values.
// You can construct a concrete instance of `TransformationResponsePtrInput` via:
//
//          TransformationResponseArgs{...}
//
//  or:
//
//          nil
type TransformationResponsePtrInput interface {
	pulumi.Input

	ToTransformationResponsePtrOutput() TransformationResponsePtrOutput
	ToTransformationResponsePtrOutputWithContext(context.Context) TransformationResponsePtrOutput
}

type transformationResponsePtrType TransformationResponseArgs

func TransformationResponsePtr(v *TransformationResponseArgs) TransformationResponsePtrInput {
	return (*transformationResponsePtrType)(v)
}

func (*transformationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationResponse)(nil)).Elem()
}

func (i *transformationResponsePtrType) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return i.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (i *transformationResponsePtrType) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransformationResponsePtrOutput)
}

// A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
type TransformationResponseOutput struct{ *pulumi.OutputState }

func (TransformationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransformationResponse)(nil)).Elem()
}

func (o TransformationResponseOutput) ToTransformationResponseOutput() TransformationResponseOutput {
	return o
}

func (o TransformationResponseOutput) ToTransformationResponseOutputWithContext(ctx context.Context) TransformationResponseOutput {
	return o
}

func (o TransformationResponseOutput) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return o.ToTransformationResponsePtrOutputWithContext(context.Background())
}

func (o TransformationResponseOutput) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return o.ApplyT(func(v TransformationResponse) *TransformationResponse {
		return &v
	}).(TransformationResponsePtrOutput)
}

// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o TransformationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource Id
func (o TransformationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name
func (o TransformationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransformationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationResponseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransformationResponse) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationResponseOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransformationResponse) *int { return v.StreamingUnits }).(pulumi.IntPtrOutput)
}

// Resource type
func (o TransformationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TransformationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type TransformationResponsePtrOutput struct{ *pulumi.OutputState }

func (TransformationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransformationResponse)(nil)).Elem()
}

func (o TransformationResponsePtrOutput) ToTransformationResponsePtrOutput() TransformationResponsePtrOutput {
	return o
}

func (o TransformationResponsePtrOutput) ToTransformationResponsePtrOutputWithContext(ctx context.Context) TransformationResponsePtrOutput {
	return o
}

func (o TransformationResponsePtrOutput) Elem() TransformationResponseOutput {
	return o.ApplyT(func(v *TransformationResponse) TransformationResponse { return *v }).(TransformationResponseOutput)
}

// The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
func (o TransformationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Id
func (o TransformationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource name
func (o TransformationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.
func (o TransformationResponsePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of streaming units that the streaming job uses.
func (o TransformationResponsePtrOutput) StreamingUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *int {
		if v == nil {
			return nil
		}
		return v.StreamingUnits
	}).(pulumi.IntPtrOutput)
}

// Resource type
func (o TransformationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransformationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AggregateFunctionPropertiesOutput{})
	pulumi.RegisterOutputType(AggregateFunctionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AvroSerializationOutput{})
	pulumi.RegisterOutputType(AvroSerializationResponseOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreOutputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureDataLakeStoreOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureFunctionOutputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureFunctionOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceFunctionBindingOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceFunctionBindingResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceInputColumnOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceInputColumnArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceInputColumnResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceInputColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceOutputColumnOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceOutputColumnArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceOutputColumnResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningServiceOutputColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioFunctionBindingOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioFunctionBindingResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputColumnOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputColumnArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputColumnResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputsOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputsPtrOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputsResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioInputsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioOutputColumnOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioOutputColumnArrayOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioOutputColumnResponseOutput{})
	pulumi.RegisterOutputType(AzureMachineLearningStudioOutputColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseOutputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureSqlDatabaseOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourcePropertiesOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourcePropertiesResponseOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourcePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureSqlReferenceInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureSynapseOutputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureSynapseOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(AzureTableOutputDataSourceOutput{})
	pulumi.RegisterOutputType(AzureTableOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(BlobOutputDataSourceOutput{})
	pulumi.RegisterOutputType(BlobOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(BlobReferenceInputDataSourceOutput{})
	pulumi.RegisterOutputType(BlobReferenceInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(BlobStreamInputDataSourceOutput{})
	pulumi.RegisterOutputType(BlobStreamInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(CSharpFunctionBindingOutput{})
	pulumi.RegisterOutputType(CSharpFunctionBindingResponseOutput{})
	pulumi.RegisterOutputType(ClusterInfoOutput{})
	pulumi.RegisterOutputType(ClusterInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterInfoResponseOutput{})
	pulumi.RegisterOutputType(ClusterInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(CompressionOutput{})
	pulumi.RegisterOutputType(CompressionPtrOutput{})
	pulumi.RegisterOutputType(CompressionResponseOutput{})
	pulumi.RegisterOutputType(CompressionResponsePtrOutput{})
	pulumi.RegisterOutputType(CsvSerializationOutput{})
	pulumi.RegisterOutputType(CsvSerializationResponseOutput{})
	pulumi.RegisterOutputType(CustomClrSerializationOutput{})
	pulumi.RegisterOutputType(CustomClrSerializationResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticConditionResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticsResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticsResponsePtrOutput{})
	pulumi.RegisterOutputType(DocumentDbOutputDataSourceOutput{})
	pulumi.RegisterOutputType(DocumentDbOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(EventHubOutputDataSourceOutput{})
	pulumi.RegisterOutputType(EventHubOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(EventHubStreamInputDataSourceOutput{})
	pulumi.RegisterOutputType(EventHubStreamInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(EventHubV2OutputDataSourceOutput{})
	pulumi.RegisterOutputType(EventHubV2OutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(EventHubV2StreamInputDataSourceOutput{})
	pulumi.RegisterOutputType(EventHubV2StreamInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(ExternalOutput{})
	pulumi.RegisterOutputType(ExternalPtrOutput{})
	pulumi.RegisterOutputType(ExternalResponseOutput{})
	pulumi.RegisterOutputType(ExternalResponsePtrOutput{})
	pulumi.RegisterOutputType(FunctionTypeOutput{})
	pulumi.RegisterOutputType(FunctionTypeArrayOutput{})
	pulumi.RegisterOutputType(FunctionInputOutput{})
	pulumi.RegisterOutputType(FunctionInputArrayOutput{})
	pulumi.RegisterOutputType(FunctionInputResponseOutput{})
	pulumi.RegisterOutputType(FunctionInputResponseArrayOutput{})
	pulumi.RegisterOutputType(FunctionOutputOutput{})
	pulumi.RegisterOutputType(FunctionOutputPtrOutput{})
	pulumi.RegisterOutputType(FunctionOutputResponseOutput{})
	pulumi.RegisterOutputType(FunctionOutputResponsePtrOutput{})
	pulumi.RegisterOutputType(FunctionResponseOutput{})
	pulumi.RegisterOutputType(FunctionResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityOutput{})
	pulumi.RegisterOutputType(IdentityPtrOutput{})
	pulumi.RegisterOutputType(IdentityResponseOutput{})
	pulumi.RegisterOutputType(IdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(InputTypeOutput{})
	pulumi.RegisterOutputType(InputTypeArrayOutput{})
	pulumi.RegisterOutputType(InputResponseOutput{})
	pulumi.RegisterOutputType(InputResponseArrayOutput{})
	pulumi.RegisterOutputType(IoTHubStreamInputDataSourceOutput{})
	pulumi.RegisterOutputType(IoTHubStreamInputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(JavaScriptFunctionBindingOutput{})
	pulumi.RegisterOutputType(JavaScriptFunctionBindingResponseOutput{})
	pulumi.RegisterOutputType(JobStorageAccountOutput{})
	pulumi.RegisterOutputType(JobStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(JobStorageAccountResponseOutput{})
	pulumi.RegisterOutputType(JobStorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(JsonSerializationOutput{})
	pulumi.RegisterOutputType(JsonSerializationResponseOutput{})
	pulumi.RegisterOutputType(OutputTypeOutput{})
	pulumi.RegisterOutputType(OutputTypeArrayOutput{})
	pulumi.RegisterOutputType(OutputResponseOutput{})
	pulumi.RegisterOutputType(OutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ParquetSerializationOutput{})
	pulumi.RegisterOutputType(ParquetSerializationResponseOutput{})
	pulumi.RegisterOutputType(PowerBIOutputDataSourceOutput{})
	pulumi.RegisterOutputType(PowerBIOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(ReferenceInputPropertiesOutput{})
	pulumi.RegisterOutputType(ReferenceInputPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ScalarFunctionPropertiesOutput{})
	pulumi.RegisterOutputType(ScalarFunctionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ServiceBusQueueOutputDataSourceOutput{})
	pulumi.RegisterOutputType(ServiceBusQueueOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(ServiceBusTopicOutputDataSourceOutput{})
	pulumi.RegisterOutputType(ServiceBusTopicOutputDataSourceResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountOutput{})
	pulumi.RegisterOutputType(StorageAccountPtrOutput{})
	pulumi.RegisterOutputType(StorageAccountArrayOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseOutput{})
	pulumi.RegisterOutputType(StorageAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageAccountResponseArrayOutput{})
	pulumi.RegisterOutputType(StreamInputPropertiesOutput{})
	pulumi.RegisterOutputType(StreamInputPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StreamingJobSkuOutput{})
	pulumi.RegisterOutputType(StreamingJobSkuPtrOutput{})
	pulumi.RegisterOutputType(StreamingJobSkuResponseOutput{})
	pulumi.RegisterOutputType(StreamingJobSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(TransformationOutput{})
	pulumi.RegisterOutputType(TransformationPtrOutput{})
	pulumi.RegisterOutputType(TransformationResponseOutput{})
	pulumi.RegisterOutputType(TransformationResponsePtrOutput{})
}
