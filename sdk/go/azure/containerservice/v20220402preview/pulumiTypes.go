// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220402preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettings struct {
	// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
	MaxSurge *string `pulumi:"maxSurge"`
}

// AgentPoolUpgradeSettingsInput is an input type that accepts AgentPoolUpgradeSettingsArgs and AgentPoolUpgradeSettingsOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsInput` via:
//
//	AgentPoolUpgradeSettingsArgs{...}
type AgentPoolUpgradeSettingsInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput
	ToAgentPoolUpgradeSettingsOutputWithContext(context.Context) AgentPoolUpgradeSettingsOutput
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsArgs struct {
	// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
	MaxSurge pulumi.StringPtrInput `pulumi:"maxSurge"`
}

func (AgentPoolUpgradeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettings)(nil)).Elem()
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput {
	return i.ToAgentPoolUpgradeSettingsOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsOutput)
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return i.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i AgentPoolUpgradeSettingsArgs) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsOutput).ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx)
}

// AgentPoolUpgradeSettingsPtrInput is an input type that accepts AgentPoolUpgradeSettingsArgs, AgentPoolUpgradeSettingsPtr and AgentPoolUpgradeSettingsPtrOutput values.
// You can construct a concrete instance of `AgentPoolUpgradeSettingsPtrInput` via:
//
//	        AgentPoolUpgradeSettingsArgs{...}
//
//	or:
//
//	        nil
type AgentPoolUpgradeSettingsPtrInput interface {
	pulumi.Input

	ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput
	ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Context) AgentPoolUpgradeSettingsPtrOutput
}

type agentPoolUpgradeSettingsPtrType AgentPoolUpgradeSettingsArgs

func AgentPoolUpgradeSettingsPtr(v *AgentPoolUpgradeSettingsArgs) AgentPoolUpgradeSettingsPtrInput {
	return (*agentPoolUpgradeSettingsPtrType)(v)
}

func (*agentPoolUpgradeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettings)(nil)).Elem()
}

func (i *agentPoolUpgradeSettingsPtrType) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return i.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (i *agentPoolUpgradeSettingsPtrType) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPoolUpgradeSettingsPtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettings)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsOutput() AgentPoolUpgradeSettingsOutput {
	return o
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsOutput {
	return o
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return o.ToAgentPoolUpgradeSettingsPtrOutputWithContext(context.Background())
}

func (o AgentPoolUpgradeSettingsOutput) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPoolUpgradeSettings) *AgentPoolUpgradeSettings {
		return &v
	}).(AgentPoolUpgradeSettingsPtrOutput)
}

// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
func (o AgentPoolUpgradeSettingsOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettings) *string { return v.MaxSurge }).(pulumi.StringPtrOutput)
}

type AgentPoolUpgradeSettingsPtrOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettings)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsPtrOutput) ToAgentPoolUpgradeSettingsPtrOutput() AgentPoolUpgradeSettingsPtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsPtrOutput) ToAgentPoolUpgradeSettingsPtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsPtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsPtrOutput) Elem() AgentPoolUpgradeSettingsOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettings) AgentPoolUpgradeSettings {
		if v != nil {
			return *v
		}
		var ret AgentPoolUpgradeSettings
		return ret
	}).(AgentPoolUpgradeSettingsOutput)
}

// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
func (o AgentPoolUpgradeSettingsPtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettings) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsResponse struct {
	// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
	MaxSurge *string `pulumi:"maxSurge"`
}

// Settings for upgrading an agentpool
type AgentPoolUpgradeSettingsResponseOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponseOutput() AgentPoolUpgradeSettingsResponseOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponseOutput) ToAgentPoolUpgradeSettingsResponseOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponseOutput {
	return o
}

// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
func (o AgentPoolUpgradeSettingsResponseOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPoolUpgradeSettingsResponse) *string { return v.MaxSurge }).(pulumi.StringPtrOutput)
}

type AgentPoolUpgradeSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AgentPoolUpgradeSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPoolUpgradeSettingsResponse)(nil)).Elem()
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) ToAgentPoolUpgradeSettingsResponsePtrOutput() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) ToAgentPoolUpgradeSettingsResponsePtrOutputWithContext(ctx context.Context) AgentPoolUpgradeSettingsResponsePtrOutput {
	return o
}

func (o AgentPoolUpgradeSettingsResponsePtrOutput) Elem() AgentPoolUpgradeSettingsResponseOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettingsResponse) AgentPoolUpgradeSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AgentPoolUpgradeSettingsResponse
		return ret
	}).(AgentPoolUpgradeSettingsResponseOutput)
}

// This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
func (o AgentPoolUpgradeSettingsResponsePtrOutput) MaxSurge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPoolUpgradeSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.StringPtrOutput)
}

// Azure Key Vault key management service settings for the security profile.
type AzureKeyVaultKms struct {
	// Whether to enable Azure Key Vault key management service. The default is false.
	Enabled *bool `pulumi:"enabled"`
	// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
	KeyId *string `pulumi:"keyId"`
}

// AzureKeyVaultKmsInput is an input type that accepts AzureKeyVaultKmsArgs and AzureKeyVaultKmsOutput values.
// You can construct a concrete instance of `AzureKeyVaultKmsInput` via:
//
//	AzureKeyVaultKmsArgs{...}
type AzureKeyVaultKmsInput interface {
	pulumi.Input

	ToAzureKeyVaultKmsOutput() AzureKeyVaultKmsOutput
	ToAzureKeyVaultKmsOutputWithContext(context.Context) AzureKeyVaultKmsOutput
}

// Azure Key Vault key management service settings for the security profile.
type AzureKeyVaultKmsArgs struct {
	// Whether to enable Azure Key Vault key management service. The default is false.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
}

func (AzureKeyVaultKmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultKms)(nil)).Elem()
}

func (i AzureKeyVaultKmsArgs) ToAzureKeyVaultKmsOutput() AzureKeyVaultKmsOutput {
	return i.ToAzureKeyVaultKmsOutputWithContext(context.Background())
}

func (i AzureKeyVaultKmsArgs) ToAzureKeyVaultKmsOutputWithContext(ctx context.Context) AzureKeyVaultKmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultKmsOutput)
}

func (i AzureKeyVaultKmsArgs) ToAzureKeyVaultKmsPtrOutput() AzureKeyVaultKmsPtrOutput {
	return i.ToAzureKeyVaultKmsPtrOutputWithContext(context.Background())
}

func (i AzureKeyVaultKmsArgs) ToAzureKeyVaultKmsPtrOutputWithContext(ctx context.Context) AzureKeyVaultKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultKmsOutput).ToAzureKeyVaultKmsPtrOutputWithContext(ctx)
}

// AzureKeyVaultKmsPtrInput is an input type that accepts AzureKeyVaultKmsArgs, AzureKeyVaultKmsPtr and AzureKeyVaultKmsPtrOutput values.
// You can construct a concrete instance of `AzureKeyVaultKmsPtrInput` via:
//
//	        AzureKeyVaultKmsArgs{...}
//
//	or:
//
//	        nil
type AzureKeyVaultKmsPtrInput interface {
	pulumi.Input

	ToAzureKeyVaultKmsPtrOutput() AzureKeyVaultKmsPtrOutput
	ToAzureKeyVaultKmsPtrOutputWithContext(context.Context) AzureKeyVaultKmsPtrOutput
}

type azureKeyVaultKmsPtrType AzureKeyVaultKmsArgs

func AzureKeyVaultKmsPtr(v *AzureKeyVaultKmsArgs) AzureKeyVaultKmsPtrInput {
	return (*azureKeyVaultKmsPtrType)(v)
}

func (*azureKeyVaultKmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultKms)(nil)).Elem()
}

func (i *azureKeyVaultKmsPtrType) ToAzureKeyVaultKmsPtrOutput() AzureKeyVaultKmsPtrOutput {
	return i.ToAzureKeyVaultKmsPtrOutputWithContext(context.Background())
}

func (i *azureKeyVaultKmsPtrType) ToAzureKeyVaultKmsPtrOutputWithContext(ctx context.Context) AzureKeyVaultKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureKeyVaultKmsPtrOutput)
}

// Azure Key Vault key management service settings for the security profile.
type AzureKeyVaultKmsOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultKmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultKms)(nil)).Elem()
}

func (o AzureKeyVaultKmsOutput) ToAzureKeyVaultKmsOutput() AzureKeyVaultKmsOutput {
	return o
}

func (o AzureKeyVaultKmsOutput) ToAzureKeyVaultKmsOutputWithContext(ctx context.Context) AzureKeyVaultKmsOutput {
	return o
}

func (o AzureKeyVaultKmsOutput) ToAzureKeyVaultKmsPtrOutput() AzureKeyVaultKmsPtrOutput {
	return o.ToAzureKeyVaultKmsPtrOutputWithContext(context.Background())
}

func (o AzureKeyVaultKmsOutput) ToAzureKeyVaultKmsPtrOutputWithContext(ctx context.Context) AzureKeyVaultKmsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureKeyVaultKms) *AzureKeyVaultKms {
		return &v
	}).(AzureKeyVaultKmsPtrOutput)
}

// Whether to enable Azure Key Vault key management service. The default is false.
func (o AzureKeyVaultKmsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultKms) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
func (o AzureKeyVaultKmsOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultKms) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type AzureKeyVaultKmsPtrOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultKmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultKms)(nil)).Elem()
}

func (o AzureKeyVaultKmsPtrOutput) ToAzureKeyVaultKmsPtrOutput() AzureKeyVaultKmsPtrOutput {
	return o
}

func (o AzureKeyVaultKmsPtrOutput) ToAzureKeyVaultKmsPtrOutputWithContext(ctx context.Context) AzureKeyVaultKmsPtrOutput {
	return o
}

func (o AzureKeyVaultKmsPtrOutput) Elem() AzureKeyVaultKmsOutput {
	return o.ApplyT(func(v *AzureKeyVaultKms) AzureKeyVaultKms {
		if v != nil {
			return *v
		}
		var ret AzureKeyVaultKms
		return ret
	}).(AzureKeyVaultKmsOutput)
}

// Whether to enable Azure Key Vault key management service. The default is false.
func (o AzureKeyVaultKmsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultKms) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
func (o AzureKeyVaultKmsPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultKms) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Azure Key Vault key management service settings for the security profile.
type AzureKeyVaultKmsResponse struct {
	// Whether to enable Azure Key Vault key management service. The default is false.
	Enabled *bool `pulumi:"enabled"`
	// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
	KeyId *string `pulumi:"keyId"`
}

// Azure Key Vault key management service settings for the security profile.
type AzureKeyVaultKmsResponseOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultKmsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureKeyVaultKmsResponse)(nil)).Elem()
}

func (o AzureKeyVaultKmsResponseOutput) ToAzureKeyVaultKmsResponseOutput() AzureKeyVaultKmsResponseOutput {
	return o
}

func (o AzureKeyVaultKmsResponseOutput) ToAzureKeyVaultKmsResponseOutputWithContext(ctx context.Context) AzureKeyVaultKmsResponseOutput {
	return o
}

// Whether to enable Azure Key Vault key management service. The default is false.
func (o AzureKeyVaultKmsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultKmsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
func (o AzureKeyVaultKmsResponseOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureKeyVaultKmsResponse) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

type AzureKeyVaultKmsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureKeyVaultKmsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureKeyVaultKmsResponse)(nil)).Elem()
}

func (o AzureKeyVaultKmsResponsePtrOutput) ToAzureKeyVaultKmsResponsePtrOutput() AzureKeyVaultKmsResponsePtrOutput {
	return o
}

func (o AzureKeyVaultKmsResponsePtrOutput) ToAzureKeyVaultKmsResponsePtrOutputWithContext(ctx context.Context) AzureKeyVaultKmsResponsePtrOutput {
	return o
}

func (o AzureKeyVaultKmsResponsePtrOutput) Elem() AzureKeyVaultKmsResponseOutput {
	return o.ApplyT(func(v *AzureKeyVaultKmsResponse) AzureKeyVaultKmsResponse {
		if v != nil {
			return *v
		}
		var ret AzureKeyVaultKmsResponse
		return ret
	}).(AzureKeyVaultKmsResponseOutput)
}

// Whether to enable Azure Key Vault key management service. The default is false.
func (o AzureKeyVaultKmsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultKmsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.
func (o AzureKeyVaultKmsResponsePtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureKeyVaultKmsResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfile struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// The SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfiguration `pulumi:"ssh"`
}

// ContainerServiceLinuxProfileInput is an input type that accepts ContainerServiceLinuxProfileArgs and ContainerServiceLinuxProfileOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfileInput` via:
//
//	ContainerServiceLinuxProfileArgs{...}
type ContainerServiceLinuxProfileInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput
	ToContainerServiceLinuxProfileOutputWithContext(context.Context) ContainerServiceLinuxProfileOutput
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileArgs struct {
	// The administrator username to use for Linux VMs.
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// The SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationInput `pulumi:"ssh"`
}

func (ContainerServiceLinuxProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return i.ToContainerServiceLinuxProfileOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput)
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceLinuxProfileArgs) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfileOutput).ToContainerServiceLinuxProfilePtrOutputWithContext(ctx)
}

// ContainerServiceLinuxProfilePtrInput is an input type that accepts ContainerServiceLinuxProfileArgs, ContainerServiceLinuxProfilePtr and ContainerServiceLinuxProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceLinuxProfilePtrInput` via:
//
//	        ContainerServiceLinuxProfileArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceLinuxProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput
	ToContainerServiceLinuxProfilePtrOutputWithContext(context.Context) ContainerServiceLinuxProfilePtrOutput
}

type containerServiceLinuxProfilePtrType ContainerServiceLinuxProfileArgs

func ContainerServiceLinuxProfilePtr(v *ContainerServiceLinuxProfileArgs) ContainerServiceLinuxProfilePtrInput {
	return (*containerServiceLinuxProfilePtrType)(v)
}

func (*containerServiceLinuxProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return i.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceLinuxProfilePtrType) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceLinuxProfilePtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutput() ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfileOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileOutput {
	return o
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o.ToContainerServiceLinuxProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceLinuxProfileOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceLinuxProfile) *ContainerServiceLinuxProfile {
		return &v
	}).(ContainerServiceLinuxProfilePtrOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileOutput) Ssh() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfile) ContainerServiceSshConfiguration { return v.Ssh }).(ContainerServiceSshConfigurationOutput)
}

type ContainerServiceLinuxProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfile)(nil)).Elem()
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutput() ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) ToContainerServiceLinuxProfilePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfilePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfilePtrOutput) Elem() ContainerServiceLinuxProfileOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) ContainerServiceLinuxProfile {
		if v != nil {
			return *v
		}
		var ret ContainerServiceLinuxProfile
		return ret
	}).(ContainerServiceLinuxProfileOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfilePtrOutput) Ssh() ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfile) *ContainerServiceSshConfiguration {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponse struct {
	// The administrator username to use for Linux VMs.
	AdminUsername string `pulumi:"adminUsername"`
	// The SSH configuration for Linux-based VMs running on Azure.
	Ssh ContainerServiceSshConfigurationResponse `pulumi:"ssh"`
}

// Profile for Linux VMs in the container service cluster.
type ContainerServiceLinuxProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutput() ContainerServiceLinuxProfileResponseOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponseOutput) ToContainerServiceLinuxProfileResponseOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponseOutput {
	return o
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// The SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponseOutput) Ssh() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v ContainerServiceLinuxProfileResponse) ContainerServiceSshConfigurationResponse { return v.Ssh }).(ContainerServiceSshConfigurationResponseOutput)
}

type ContainerServiceLinuxProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceLinuxProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceLinuxProfileResponse)(nil)).Elem()
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutput() ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) ToContainerServiceLinuxProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceLinuxProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceLinuxProfileResponsePtrOutput) Elem() ContainerServiceLinuxProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) ContainerServiceLinuxProfileResponse {
		if v != nil {
			return *v
		}
		var ret ContainerServiceLinuxProfileResponse
		return ret
	}).(ContainerServiceLinuxProfileResponseOutput)
}

// The administrator username to use for Linux VMs.
func (o ContainerServiceLinuxProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// The SSH configuration for Linux-based VMs running on Azure.
func (o ContainerServiceLinuxProfileResponsePtrOutput) Ssh() ContainerServiceSshConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceLinuxProfileResponse) *ContainerServiceSshConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.Ssh
	}).(ContainerServiceSshConfigurationResponsePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfile struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfile `pulumi:"loadBalancerProfile"`
	// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Profile of the cluster NAT gateway.
	NatGatewayProfile *ManagedClusterNATGatewayProfile `pulumi:"natGatewayProfile"`
	// This cannot be specified if networkPlugin is anything other than 'azure'.
	NetworkMode *string `pulumi:"networkMode"`
	// Network plugin used for building the Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network plugin mode used for building the Kubernetes network.
	NetworkPluginMode *string `pulumi:"networkPluginMode"`
	// Network policy used for building the Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
	OutboundType *string `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
	PodCidrs []string `pulumi:"podCidrs"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
	ServiceCidrs []string `pulumi:"serviceCidrs"`
}

// Defaults sets the appropriate defaults for ContainerServiceNetworkProfile
func (val *ContainerServiceNetworkProfile) Defaults() *ContainerServiceNetworkProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DnsServiceIP) {
		dnsServiceIP_ := "10.0.0.10"
		tmp.DnsServiceIP = &dnsServiceIP_
	}
	if isZero(tmp.DockerBridgeCidr) {
		dockerBridgeCidr_ := "172.17.0.1/16"
		tmp.DockerBridgeCidr = &dockerBridgeCidr_
	}
	tmp.LoadBalancerProfile = tmp.LoadBalancerProfile.Defaults()

	tmp.NatGatewayProfile = tmp.NatGatewayProfile.Defaults()

	if isZero(tmp.OutboundType) {
		outboundType_ := "loadBalancer"
		tmp.OutboundType = &outboundType_
	}
	if isZero(tmp.PodCidr) {
		podCidr_ := "10.244.0.0/16"
		tmp.PodCidr = &podCidr_
	}
	if isZero(tmp.ServiceCidr) {
		serviceCidr_ := "10.0.0.0/16"
		tmp.ServiceCidr = &serviceCidr_
	}
	return &tmp
}

// ContainerServiceNetworkProfileInput is an input type that accepts ContainerServiceNetworkProfileArgs and ContainerServiceNetworkProfileOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfileInput` via:
//
//	ContainerServiceNetworkProfileArgs{...}
type ContainerServiceNetworkProfileInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput
	ToContainerServiceNetworkProfileOutputWithContext(context.Context) ContainerServiceNetworkProfileOutput
}

// Profile of network configuration.
type ContainerServiceNetworkProfileArgs struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP pulumi.StringPtrInput `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr pulumi.StringPtrInput `pulumi:"dockerBridgeCidr"`
	// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile ManagedClusterLoadBalancerProfilePtrInput `pulumi:"loadBalancerProfile"`
	// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
	LoadBalancerSku pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// Profile of the cluster NAT gateway.
	NatGatewayProfile ManagedClusterNATGatewayProfilePtrInput `pulumi:"natGatewayProfile"`
	// This cannot be specified if networkPlugin is anything other than 'azure'.
	NetworkMode pulumi.StringPtrInput `pulumi:"networkMode"`
	// Network plugin used for building the Kubernetes network.
	NetworkPlugin pulumi.StringPtrInput `pulumi:"networkPlugin"`
	// Network plugin mode used for building the Kubernetes network.
	NetworkPluginMode pulumi.StringPtrInput `pulumi:"networkPluginMode"`
	// Network policy used for building the Kubernetes network.
	NetworkPolicy pulumi.StringPtrInput `pulumi:"networkPolicy"`
	// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
	OutboundType pulumi.StringPtrInput `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr pulumi.StringPtrInput `pulumi:"podCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
	PodCidrs pulumi.StringArrayInput `pulumi:"podCidrs"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr pulumi.StringPtrInput `pulumi:"serviceCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
	ServiceCidrs pulumi.StringArrayInput `pulumi:"serviceCidrs"`
}

// Defaults sets the appropriate defaults for ContainerServiceNetworkProfileArgs
func (val *ContainerServiceNetworkProfileArgs) Defaults() *ContainerServiceNetworkProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DnsServiceIP) {
		tmp.DnsServiceIP = pulumi.StringPtr("10.0.0.10")
	}
	if isZero(tmp.DockerBridgeCidr) {
		tmp.DockerBridgeCidr = pulumi.StringPtr("172.17.0.1/16")
	}

	if isZero(tmp.OutboundType) {
		tmp.OutboundType = pulumi.StringPtr("loadBalancer")
	}
	if isZero(tmp.PodCidr) {
		tmp.PodCidr = pulumi.StringPtr("10.244.0.0/16")
	}
	if isZero(tmp.ServiceCidr) {
		tmp.ServiceCidr = pulumi.StringPtr("10.0.0.0/16")
	}
	return &tmp
}
func (ContainerServiceNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return i.ToContainerServiceNetworkProfileOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput)
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i ContainerServiceNetworkProfileArgs) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfileOutput).ToContainerServiceNetworkProfilePtrOutputWithContext(ctx)
}

// ContainerServiceNetworkProfilePtrInput is an input type that accepts ContainerServiceNetworkProfileArgs, ContainerServiceNetworkProfilePtr and ContainerServiceNetworkProfilePtrOutput values.
// You can construct a concrete instance of `ContainerServiceNetworkProfilePtrInput` via:
//
//	        ContainerServiceNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceNetworkProfilePtrInput interface {
	pulumi.Input

	ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput
	ToContainerServiceNetworkProfilePtrOutputWithContext(context.Context) ContainerServiceNetworkProfilePtrOutput
}

type containerServiceNetworkProfilePtrType ContainerServiceNetworkProfileArgs

func ContainerServiceNetworkProfilePtr(v *ContainerServiceNetworkProfileArgs) ContainerServiceNetworkProfilePtrInput {
	return (*containerServiceNetworkProfilePtrType)(v)
}

func (*containerServiceNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return i.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *containerServiceNetworkProfilePtrType) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceNetworkProfilePtrOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutput() ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfileOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileOutput {
	return o
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o.ToContainerServiceNetworkProfilePtrOutputWithContext(context.Background())
}

func (o ContainerServiceNetworkProfileOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceNetworkProfile) *ContainerServiceNetworkProfile {
		return &v
	}).(ContainerServiceNetworkProfilePtrOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
func (o ContainerServiceNetworkProfileOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
func (o ContainerServiceNetworkProfileOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Profile of the cluster NAT gateway.
func (o ContainerServiceNetworkProfileOutput) NatGatewayProfile() ManagedClusterNATGatewayProfilePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *ManagedClusterNATGatewayProfile { return v.NatGatewayProfile }).(ManagedClusterNATGatewayProfilePtrOutput)
}

// This cannot be specified if networkPlugin is anything other than 'azure'.
func (o ContainerServiceNetworkProfileOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// Network plugin used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network plugin mode used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPluginMode }).(pulumi.StringPtrOutput)
}

// Network policy used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
func (o ContainerServiceNetworkProfileOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
func (o ContainerServiceNetworkProfileOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) []string { return v.PodCidrs }).(pulumi.StringArrayOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfile) []string { return v.ServiceCidrs }).(pulumi.StringArrayOutput)
}

type ContainerServiceNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfile)(nil)).Elem()
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutput() ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) ToContainerServiceNetworkProfilePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfilePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfilePtrOutput) Elem() ContainerServiceNetworkProfileOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) ContainerServiceNetworkProfile {
		if v != nil {
			return *v
		}
		var ret ContainerServiceNetworkProfile
		return ret
	}).(ContainerServiceNetworkProfileOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfilePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfilePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
func (o ContainerServiceNetworkProfilePtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *ManagedClusterLoadBalancerProfile {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
func (o ContainerServiceNetworkProfilePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster NAT gateway.
func (o ContainerServiceNetworkProfilePtrOutput) NatGatewayProfile() ManagedClusterNATGatewayProfilePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *ManagedClusterNATGatewayProfile {
		if v == nil {
			return nil
		}
		return v.NatGatewayProfile
	}).(ManagedClusterNATGatewayProfilePtrOutput)
}

// This cannot be specified if networkPlugin is anything other than 'azure'.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkMode
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building the Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network plugin mode used for building the Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPluginMode
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building the Kubernetes network.
func (o ContainerServiceNetworkProfilePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
func (o ContainerServiceNetworkProfilePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfilePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
func (o ContainerServiceNetworkProfilePtrOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.PodCidrs
	}).(pulumi.StringArrayOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfilePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfilePtrOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfile) []string {
		if v == nil {
			return nil
		}
		return v.ServiceCidrs
	}).(pulumi.StringArrayOutput)
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponse struct {
	// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
	DnsServiceIP *string `pulumi:"dnsServiceIP"`
	// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
	DockerBridgeCidr *string `pulumi:"dockerBridgeCidr"`
	// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
	IpFamilies []string `pulumi:"ipFamilies"`
	// Profile of the cluster load balancer.
	LoadBalancerProfile *ManagedClusterLoadBalancerProfileResponse `pulumi:"loadBalancerProfile"`
	// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// Profile of the cluster NAT gateway.
	NatGatewayProfile *ManagedClusterNATGatewayProfileResponse `pulumi:"natGatewayProfile"`
	// This cannot be specified if networkPlugin is anything other than 'azure'.
	NetworkMode *string `pulumi:"networkMode"`
	// Network plugin used for building the Kubernetes network.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// Network plugin mode used for building the Kubernetes network.
	NetworkPluginMode *string `pulumi:"networkPluginMode"`
	// Network policy used for building the Kubernetes network.
	NetworkPolicy *string `pulumi:"networkPolicy"`
	// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
	OutboundType *string `pulumi:"outboundType"`
	// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
	PodCidr *string `pulumi:"podCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
	PodCidrs []string `pulumi:"podCidrs"`
	// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
	ServiceCidr *string `pulumi:"serviceCidr"`
	// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
	ServiceCidrs []string `pulumi:"serviceCidrs"`
}

// Defaults sets the appropriate defaults for ContainerServiceNetworkProfileResponse
func (val *ContainerServiceNetworkProfileResponse) Defaults() *ContainerServiceNetworkProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DnsServiceIP) {
		dnsServiceIP_ := "10.0.0.10"
		tmp.DnsServiceIP = &dnsServiceIP_
	}
	if isZero(tmp.DockerBridgeCidr) {
		dockerBridgeCidr_ := "172.17.0.1/16"
		tmp.DockerBridgeCidr = &dockerBridgeCidr_
	}
	tmp.LoadBalancerProfile = tmp.LoadBalancerProfile.Defaults()

	tmp.NatGatewayProfile = tmp.NatGatewayProfile.Defaults()

	if isZero(tmp.OutboundType) {
		outboundType_ := "loadBalancer"
		tmp.OutboundType = &outboundType_
	}
	if isZero(tmp.PodCidr) {
		podCidr_ := "10.244.0.0/16"
		tmp.PodCidr = &podCidr_
	}
	if isZero(tmp.ServiceCidr) {
		serviceCidr_ := "10.0.0.0/16"
		tmp.ServiceCidr = &serviceCidr_
	}
	return &tmp
}

// Profile of network configuration.
type ContainerServiceNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutput() ContainerServiceNetworkProfileResponseOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponseOutput) ToContainerServiceNetworkProfileResponseOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponseOutput {
	return o
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponseOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DnsServiceIP }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponseOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.DockerBridgeCidr }).(pulumi.StringPtrOutput)
}

// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
func (o ContainerServiceNetworkProfileResponseOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
func (o ContainerServiceNetworkProfileResponseOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// Profile of the cluster NAT gateway.
func (o ContainerServiceNetworkProfileResponseOutput) NatGatewayProfile() ManagedClusterNATGatewayProfileResponsePtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *ManagedClusterNATGatewayProfileResponse {
		return v.NatGatewayProfile
	}).(ManagedClusterNATGatewayProfileResponsePtrOutput)
}

// This cannot be specified if networkPlugin is anything other than 'azure'.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// Network plugin used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// Network plugin mode used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPluginMode }).(pulumi.StringPtrOutput)
}

// Network policy used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponseOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
func (o ContainerServiceNetworkProfileResponseOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.OutboundType }).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponseOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.PodCidr }).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
func (o ContainerServiceNetworkProfileResponseOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) []string { return v.PodCidrs }).(pulumi.StringArrayOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponseOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) *string { return v.ServiceCidr }).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponseOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceNetworkProfileResponse) []string { return v.ServiceCidrs }).(pulumi.StringArrayOutput)
}

type ContainerServiceNetworkProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceNetworkProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceNetworkProfileResponse)(nil)).Elem()
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutput() ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) ToContainerServiceNetworkProfileResponsePtrOutputWithContext(ctx context.Context) ContainerServiceNetworkProfileResponsePtrOutput {
	return o
}

func (o ContainerServiceNetworkProfileResponsePtrOutput) Elem() ContainerServiceNetworkProfileResponseOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) ContainerServiceNetworkProfileResponse {
		if v != nil {
			return *v
		}
		var ret ContainerServiceNetworkProfileResponse
		return ret
	}).(ContainerServiceNetworkProfileResponseOutput)
}

// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DnsServiceIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServiceIP
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.
func (o ContainerServiceNetworkProfileResponsePtrOutput) DockerBridgeCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DockerBridgeCidr
	}).(pulumi.StringPtrOutput)
}

// IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.
func (o ContainerServiceNetworkProfileResponsePtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// Profile of the cluster load balancer.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerProfile() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *ManagedClusterLoadBalancerProfileResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerProfile
	}).(ManagedClusterLoadBalancerProfileResponsePtrOutput)
}

// The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.
func (o ContainerServiceNetworkProfileResponsePtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// Profile of the cluster NAT gateway.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NatGatewayProfile() ManagedClusterNATGatewayProfileResponsePtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *ManagedClusterNATGatewayProfileResponse {
		if v == nil {
			return nil
		}
		return v.NatGatewayProfile
	}).(ManagedClusterNATGatewayProfileResponsePtrOutput)
}

// This cannot be specified if networkPlugin is anything other than 'azure'.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkMode
	}).(pulumi.StringPtrOutput)
}

// Network plugin used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPlugin
	}).(pulumi.StringPtrOutput)
}

// Network plugin mode used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPluginMode
	}).(pulumi.StringPtrOutput)
}

// Network policy used for building the Kubernetes network.
func (o ContainerServiceNetworkProfileResponsePtrOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetworkPolicy
	}).(pulumi.StringPtrOutput)
}

// This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).
func (o ContainerServiceNetworkProfileResponsePtrOutput) OutboundType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutboundType
	}).(pulumi.StringPtrOutput)
}

// A CIDR notation IP range from which to assign pod IPs when kubenet is used.
func (o ContainerServiceNetworkProfileResponsePtrOutput) PodCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PodCidr
	}).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.
func (o ContainerServiceNetworkProfileResponsePtrOutput) PodCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.PodCidrs
	}).(pulumi.StringArrayOutput)
}

// A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponsePtrOutput) ServiceCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceCidr
	}).(pulumi.StringPtrOutput)
}

// One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.
func (o ContainerServiceNetworkProfileResponsePtrOutput) ServiceCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerServiceNetworkProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.ServiceCidrs
	}).(pulumi.StringArrayOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfiguration struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
	PublicKeys []ContainerServiceSshPublicKey `pulumi:"publicKeys"`
}

// ContainerServiceSshConfigurationInput is an input type that accepts ContainerServiceSshConfigurationArgs and ContainerServiceSshConfigurationOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationInput` via:
//
//	ContainerServiceSshConfigurationArgs{...}
type ContainerServiceSshConfigurationInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput
	ToContainerServiceSshConfigurationOutputWithContext(context.Context) ContainerServiceSshConfigurationOutput
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationArgs struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
	PublicKeys ContainerServiceSshPublicKeyArrayInput `pulumi:"publicKeys"`
}

func (ContainerServiceSshConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return i.ToContainerServiceSshConfigurationOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput)
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i ContainerServiceSshConfigurationArgs) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationOutput).ToContainerServiceSshConfigurationPtrOutputWithContext(ctx)
}

// ContainerServiceSshConfigurationPtrInput is an input type that accepts ContainerServiceSshConfigurationArgs, ContainerServiceSshConfigurationPtr and ContainerServiceSshConfigurationPtrOutput values.
// You can construct a concrete instance of `ContainerServiceSshConfigurationPtrInput` via:
//
//	        ContainerServiceSshConfigurationArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceSshConfigurationPtrInput interface {
	pulumi.Input

	ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput
	ToContainerServiceSshConfigurationPtrOutputWithContext(context.Context) ContainerServiceSshConfigurationPtrOutput
}

type containerServiceSshConfigurationPtrType ContainerServiceSshConfigurationArgs

func ContainerServiceSshConfigurationPtr(v *ContainerServiceSshConfigurationArgs) ContainerServiceSshConfigurationPtrInput {
	return (*containerServiceSshConfigurationPtrType)(v)
}

func (*containerServiceSshConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return i.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (i *containerServiceSshConfigurationPtrType) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshConfigurationPtrOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutput() ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationOutput {
	return o
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o.ToContainerServiceSshConfigurationPtrOutputWithContext(context.Background())
}

func (o ContainerServiceSshConfigurationOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceSshConfiguration) *ContainerServiceSshConfiguration {
		return &v
	}).(ContainerServiceSshConfigurationPtrOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
func (o ContainerServiceSshConfigurationOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey { return v.PublicKeys }).(ContainerServiceSshPublicKeyArrayOutput)
}

type ContainerServiceSshConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfiguration)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutput() ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) ToContainerServiceSshConfigurationPtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationPtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationPtrOutput) Elem() ContainerServiceSshConfigurationOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) ContainerServiceSshConfiguration {
		if v != nil {
			return *v
		}
		var ret ContainerServiceSshConfiguration
		return ret
	}).(ContainerServiceSshConfigurationOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
func (o ContainerServiceSshConfigurationPtrOutput) PublicKeys() ContainerServiceSshPublicKeyArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfiguration) []ContainerServiceSshPublicKey {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyArrayOutput)
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponse struct {
	// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
	PublicKeys []ContainerServiceSshPublicKeyResponse `pulumi:"publicKeys"`
}

// SSH configuration for Linux-based VMs running on Azure.
type ContainerServiceSshConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutput() ContainerServiceSshConfigurationResponseOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponseOutput) ToContainerServiceSshConfigurationResponseOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponseOutput {
	return o
}

// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
func (o ContainerServiceSshConfigurationResponseOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

type ContainerServiceSshConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceSshConfigurationResponse)(nil)).Elem()
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutput() ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) ToContainerServiceSshConfigurationResponsePtrOutputWithContext(ctx context.Context) ContainerServiceSshConfigurationResponsePtrOutput {
	return o
}

func (o ContainerServiceSshConfigurationResponsePtrOutput) Elem() ContainerServiceSshConfigurationResponseOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) ContainerServiceSshConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ContainerServiceSshConfigurationResponse
		return ret
	}).(ContainerServiceSshConfigurationResponseOutput)
}

// The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.
func (o ContainerServiceSshConfigurationResponsePtrOutput) PublicKeys() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o.ApplyT(func(v *ContainerServiceSshConfigurationResponse) []ContainerServiceSshPublicKeyResponse {
		if v == nil {
			return nil
		}
		return v.PublicKeys
	}).(ContainerServiceSshPublicKeyResponseArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKey struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// ContainerServiceSshPublicKeyInput is an input type that accepts ContainerServiceSshPublicKeyArgs and ContainerServiceSshPublicKeyOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyInput` via:
//
//	ContainerServiceSshPublicKeyArgs{...}
type ContainerServiceSshPublicKeyInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput
	ToContainerServiceSshPublicKeyOutputWithContext(context.Context) ContainerServiceSshPublicKeyOutput
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyArgs struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData pulumi.StringInput `pulumi:"keyData"`
}

func (ContainerServiceSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return i.ToContainerServiceSshPublicKeyOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArgs) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyOutput)
}

// ContainerServiceSshPublicKeyArrayInput is an input type that accepts ContainerServiceSshPublicKeyArray and ContainerServiceSshPublicKeyArrayOutput values.
// You can construct a concrete instance of `ContainerServiceSshPublicKeyArrayInput` via:
//
//	ContainerServiceSshPublicKeyArray{ ContainerServiceSshPublicKeyArgs{...} }
type ContainerServiceSshPublicKeyArrayInput interface {
	pulumi.Input

	ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput
	ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Context) ContainerServiceSshPublicKeyArrayOutput
}

type ContainerServiceSshPublicKeyArray []ContainerServiceSshPublicKeyInput

func (ContainerServiceSshPublicKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return i.ToContainerServiceSshPublicKeyArrayOutputWithContext(context.Background())
}

func (i ContainerServiceSshPublicKeyArray) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceSshPublicKeyArrayOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutput() ContainerServiceSshPublicKeyOutput {
	return o
}

func (o ContainerServiceSshPublicKeyOutput) ToContainerServiceSshPublicKeyOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKey) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKey)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutput() ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) ToContainerServiceSshPublicKeyArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKey {
		return vs[0].([]ContainerServiceSshPublicKey)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyOutput)
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponse struct {
	// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
	KeyData string `pulumi:"keyData"`
}

// Contains information about SSH certificate public key data.
type ContainerServiceSshPublicKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutput() ContainerServiceSshPublicKeyResponseOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseOutput) ToContainerServiceSshPublicKeyResponseOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseOutput {
	return o
}

// Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.
func (o ContainerServiceSshPublicKeyResponseOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceSshPublicKeyResponse) string { return v.KeyData }).(pulumi.StringOutput)
}

type ContainerServiceSshPublicKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceSshPublicKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceSshPublicKeyResponse)(nil)).Elem()
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutput() ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) ToContainerServiceSshPublicKeyResponseArrayOutputWithContext(ctx context.Context) ContainerServiceSshPublicKeyResponseArrayOutput {
	return o
}

func (o ContainerServiceSshPublicKeyResponseArrayOutput) Index(i pulumi.IntInput) ContainerServiceSshPublicKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceSshPublicKeyResponse {
		return vs[0].([]ContainerServiceSshPublicKeyResponse)[vs[1].(int)]
	}).(ContainerServiceSshPublicKeyResponseOutput)
}

// Data used when creating a target resource from a source resource.
type CreationData struct {
	// This is the ARM ID of the source object to be used to create the target object.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// CreationDataInput is an input type that accepts CreationDataArgs and CreationDataOutput values.
// You can construct a concrete instance of `CreationDataInput` via:
//
//	CreationDataArgs{...}
type CreationDataInput interface {
	pulumi.Input

	ToCreationDataOutput() CreationDataOutput
	ToCreationDataOutputWithContext(context.Context) CreationDataOutput
}

// Data used when creating a target resource from a source resource.
type CreationDataArgs struct {
	// This is the ARM ID of the source object to be used to create the target object.
	SourceResourceId pulumi.StringPtrInput `pulumi:"sourceResourceId"`
}

func (CreationDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreationData)(nil)).Elem()
}

func (i CreationDataArgs) ToCreationDataOutput() CreationDataOutput {
	return i.ToCreationDataOutputWithContext(context.Background())
}

func (i CreationDataArgs) ToCreationDataOutputWithContext(ctx context.Context) CreationDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationDataOutput)
}

func (i CreationDataArgs) ToCreationDataPtrOutput() CreationDataPtrOutput {
	return i.ToCreationDataPtrOutputWithContext(context.Background())
}

func (i CreationDataArgs) ToCreationDataPtrOutputWithContext(ctx context.Context) CreationDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationDataOutput).ToCreationDataPtrOutputWithContext(ctx)
}

// CreationDataPtrInput is an input type that accepts CreationDataArgs, CreationDataPtr and CreationDataPtrOutput values.
// You can construct a concrete instance of `CreationDataPtrInput` via:
//
//	        CreationDataArgs{...}
//
//	or:
//
//	        nil
type CreationDataPtrInput interface {
	pulumi.Input

	ToCreationDataPtrOutput() CreationDataPtrOutput
	ToCreationDataPtrOutputWithContext(context.Context) CreationDataPtrOutput
}

type creationDataPtrType CreationDataArgs

func CreationDataPtr(v *CreationDataArgs) CreationDataPtrInput {
	return (*creationDataPtrType)(v)
}

func (*creationDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreationData)(nil)).Elem()
}

func (i *creationDataPtrType) ToCreationDataPtrOutput() CreationDataPtrOutput {
	return i.ToCreationDataPtrOutputWithContext(context.Background())
}

func (i *creationDataPtrType) ToCreationDataPtrOutputWithContext(ctx context.Context) CreationDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationDataPtrOutput)
}

// Data used when creating a target resource from a source resource.
type CreationDataOutput struct{ *pulumi.OutputState }

func (CreationDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreationData)(nil)).Elem()
}

func (o CreationDataOutput) ToCreationDataOutput() CreationDataOutput {
	return o
}

func (o CreationDataOutput) ToCreationDataOutputWithContext(ctx context.Context) CreationDataOutput {
	return o
}

func (o CreationDataOutput) ToCreationDataPtrOutput() CreationDataPtrOutput {
	return o.ToCreationDataPtrOutputWithContext(context.Background())
}

func (o CreationDataOutput) ToCreationDataPtrOutputWithContext(ctx context.Context) CreationDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreationData) *CreationData {
		return &v
	}).(CreationDataPtrOutput)
}

// This is the ARM ID of the source object to be used to create the target object.
func (o CreationDataOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreationData) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type CreationDataPtrOutput struct{ *pulumi.OutputState }

func (CreationDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreationData)(nil)).Elem()
}

func (o CreationDataPtrOutput) ToCreationDataPtrOutput() CreationDataPtrOutput {
	return o
}

func (o CreationDataPtrOutput) ToCreationDataPtrOutputWithContext(ctx context.Context) CreationDataPtrOutput {
	return o
}

func (o CreationDataPtrOutput) Elem() CreationDataOutput {
	return o.ApplyT(func(v *CreationData) CreationData {
		if v != nil {
			return *v
		}
		var ret CreationData
		return ret
	}).(CreationDataOutput)
}

// This is the ARM ID of the source object to be used to create the target object.
func (o CreationDataPtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreationData) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// Data used when creating a target resource from a source resource.
type CreationDataResponse struct {
	// This is the ARM ID of the source object to be used to create the target object.
	SourceResourceId *string `pulumi:"sourceResourceId"`
}

// Data used when creating a target resource from a source resource.
type CreationDataResponseOutput struct{ *pulumi.OutputState }

func (CreationDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreationDataResponse)(nil)).Elem()
}

func (o CreationDataResponseOutput) ToCreationDataResponseOutput() CreationDataResponseOutput {
	return o
}

func (o CreationDataResponseOutput) ToCreationDataResponseOutputWithContext(ctx context.Context) CreationDataResponseOutput {
	return o
}

// This is the ARM ID of the source object to be used to create the target object.
func (o CreationDataResponseOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreationDataResponse) *string { return v.SourceResourceId }).(pulumi.StringPtrOutput)
}

type CreationDataResponsePtrOutput struct{ *pulumi.OutputState }

func (CreationDataResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreationDataResponse)(nil)).Elem()
}

func (o CreationDataResponsePtrOutput) ToCreationDataResponsePtrOutput() CreationDataResponsePtrOutput {
	return o
}

func (o CreationDataResponsePtrOutput) ToCreationDataResponsePtrOutputWithContext(ctx context.Context) CreationDataResponsePtrOutput {
	return o
}

func (o CreationDataResponsePtrOutput) Elem() CreationDataResponseOutput {
	return o.ApplyT(func(v *CreationDataResponse) CreationDataResponse {
		if v != nil {
			return *v
		}
		var ret CreationDataResponse
		return ret
	}).(CreationDataResponseOutput)
}

// This is the ARM ID of the source object to be used to create the target object.
func (o CreationDataResponsePtrOutput) SourceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreationDataResponse) *string {
		if v == nil {
			return nil
		}
		return v.SourceResourceId
	}).(pulumi.StringPtrOutput)
}

// The credential result response.
type CredentialResultResponse struct {
	// The name of the credential.
	Name string `pulumi:"name"`
	// Base64-encoded Kubernetes configuration file.
	Value string `pulumi:"value"`
}

// The credential result response.
type CredentialResultResponseOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutput() CredentialResultResponseOutput {
	return o
}

func (o CredentialResultResponseOutput) ToCredentialResultResponseOutputWithContext(ctx context.Context) CredentialResultResponseOutput {
	return o
}

// The name of the credential.
func (o CredentialResultResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Base64-encoded Kubernetes configuration file.
func (o CredentialResultResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CredentialResultResponse) string { return v.Value }).(pulumi.StringOutput)
}

type CredentialResultResponseArrayOutput struct{ *pulumi.OutputState }

func (CredentialResultResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CredentialResultResponse)(nil)).Elem()
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutput() CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) ToCredentialResultResponseArrayOutputWithContext(ctx context.Context) CredentialResultResponseArrayOutput {
	return o
}

func (o CredentialResultResponseArrayOutput) Index(i pulumi.IntInput) CredentialResultResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CredentialResultResponse {
		return vs[0].([]CredentialResultResponse)[vs[1].(int)]
	}).(CredentialResultResponseOutput)
}

// The complex type of the extended location.
type ExtendedLocation struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// The complex type of the extended location.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The complex type of the extended location.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name *string `pulumi:"name"`
	// The type of the extended location.
	Type *string `pulumi:"type"`
}

// The complex type of the extended location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type KubeletConfig struct {
	// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
	ContainerLogMaxFiles *int `pulumi:"containerLogMaxFiles"`
	// The maximum size (e.g. 10Mi) of container log file before it is rotated.
	ContainerLogMaxSizeMB *int `pulumi:"containerLogMaxSizeMB"`
	// The default is true.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
	CpuManagerPolicy *string `pulumi:"cpuManagerPolicy"`
	// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
	FailSwapOn *bool `pulumi:"failSwapOn"`
	// To disable image garbage collection, set to 100. The default is 85%
	ImageGcHighThreshold *int `pulumi:"imageGcHighThreshold"`
	// This cannot be set higher than imageGcHighThreshold. The default is 80%
	ImageGcLowThreshold *int `pulumi:"imageGcLowThreshold"`
	// The maximum number of processes per pod.
	PodMaxPids *int `pulumi:"podMaxPids"`
	// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
	TopologyManagerPolicy *string `pulumi:"topologyManagerPolicy"`
}

// KubeletConfigInput is an input type that accepts KubeletConfigArgs and KubeletConfigOutput values.
// You can construct a concrete instance of `KubeletConfigInput` via:
//
//	KubeletConfigArgs{...}
type KubeletConfigInput interface {
	pulumi.Input

	ToKubeletConfigOutput() KubeletConfigOutput
	ToKubeletConfigOutputWithContext(context.Context) KubeletConfigOutput
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type KubeletConfigArgs struct {
	// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
	AllowedUnsafeSysctls pulumi.StringArrayInput `pulumi:"allowedUnsafeSysctls"`
	// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
	ContainerLogMaxFiles pulumi.IntPtrInput `pulumi:"containerLogMaxFiles"`
	// The maximum size (e.g. 10Mi) of container log file before it is rotated.
	ContainerLogMaxSizeMB pulumi.IntPtrInput `pulumi:"containerLogMaxSizeMB"`
	// The default is true.
	CpuCfsQuota pulumi.BoolPtrInput `pulumi:"cpuCfsQuota"`
	// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
	CpuCfsQuotaPeriod pulumi.StringPtrInput `pulumi:"cpuCfsQuotaPeriod"`
	// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
	CpuManagerPolicy pulumi.StringPtrInput `pulumi:"cpuManagerPolicy"`
	// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
	FailSwapOn pulumi.BoolPtrInput `pulumi:"failSwapOn"`
	// To disable image garbage collection, set to 100. The default is 85%
	ImageGcHighThreshold pulumi.IntPtrInput `pulumi:"imageGcHighThreshold"`
	// This cannot be set higher than imageGcHighThreshold. The default is 80%
	ImageGcLowThreshold pulumi.IntPtrInput `pulumi:"imageGcLowThreshold"`
	// The maximum number of processes per pod.
	PodMaxPids pulumi.IntPtrInput `pulumi:"podMaxPids"`
	// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
	TopologyManagerPolicy pulumi.StringPtrInput `pulumi:"topologyManagerPolicy"`
}

func (KubeletConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfig)(nil)).Elem()
}

func (i KubeletConfigArgs) ToKubeletConfigOutput() KubeletConfigOutput {
	return i.ToKubeletConfigOutputWithContext(context.Background())
}

func (i KubeletConfigArgs) ToKubeletConfigOutputWithContext(ctx context.Context) KubeletConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletConfigOutput)
}

func (i KubeletConfigArgs) ToKubeletConfigPtrOutput() KubeletConfigPtrOutput {
	return i.ToKubeletConfigPtrOutputWithContext(context.Background())
}

func (i KubeletConfigArgs) ToKubeletConfigPtrOutputWithContext(ctx context.Context) KubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletConfigOutput).ToKubeletConfigPtrOutputWithContext(ctx)
}

// KubeletConfigPtrInput is an input type that accepts KubeletConfigArgs, KubeletConfigPtr and KubeletConfigPtrOutput values.
// You can construct a concrete instance of `KubeletConfigPtrInput` via:
//
//	        KubeletConfigArgs{...}
//
//	or:
//
//	        nil
type KubeletConfigPtrInput interface {
	pulumi.Input

	ToKubeletConfigPtrOutput() KubeletConfigPtrOutput
	ToKubeletConfigPtrOutputWithContext(context.Context) KubeletConfigPtrOutput
}

type kubeletConfigPtrType KubeletConfigArgs

func KubeletConfigPtr(v *KubeletConfigArgs) KubeletConfigPtrInput {
	return (*kubeletConfigPtrType)(v)
}

func (*kubeletConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletConfig)(nil)).Elem()
}

func (i *kubeletConfigPtrType) ToKubeletConfigPtrOutput() KubeletConfigPtrOutput {
	return i.ToKubeletConfigPtrOutputWithContext(context.Background())
}

func (i *kubeletConfigPtrType) ToKubeletConfigPtrOutputWithContext(ctx context.Context) KubeletConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeletConfigPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type KubeletConfigOutput struct{ *pulumi.OutputState }

func (KubeletConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfig)(nil)).Elem()
}

func (o KubeletConfigOutput) ToKubeletConfigOutput() KubeletConfigOutput {
	return o
}

func (o KubeletConfigOutput) ToKubeletConfigOutputWithContext(ctx context.Context) KubeletConfigOutput {
	return o
}

func (o KubeletConfigOutput) ToKubeletConfigPtrOutput() KubeletConfigPtrOutput {
	return o.ToKubeletConfigPtrOutputWithContext(context.Background())
}

func (o KubeletConfigOutput) ToKubeletConfigPtrOutputWithContext(ctx context.Context) KubeletConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubeletConfig) *KubeletConfig {
		return &v
	}).(KubeletConfigPtrOutput)
}

// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
func (o KubeletConfigOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubeletConfig) []string { return v.AllowedUnsafeSysctls }).(pulumi.StringArrayOutput)
}

// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
func (o KubeletConfigOutput) ContainerLogMaxFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *int { return v.ContainerLogMaxFiles }).(pulumi.IntPtrOutput)
}

// The maximum size (e.g. 10Mi) of container log file before it is rotated.
func (o KubeletConfigOutput) ContainerLogMaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *int { return v.ContainerLogMaxSizeMB }).(pulumi.IntPtrOutput)
}

// The default is true.
func (o KubeletConfigOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
func (o KubeletConfigOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
func (o KubeletConfigOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *string { return v.CpuManagerPolicy }).(pulumi.StringPtrOutput)
}

// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
func (o KubeletConfigOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *bool { return v.FailSwapOn }).(pulumi.BoolPtrOutput)
}

// To disable image garbage collection, set to 100. The default is 85%
func (o KubeletConfigOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *int { return v.ImageGcHighThreshold }).(pulumi.IntPtrOutput)
}

// This cannot be set higher than imageGcHighThreshold. The default is 80%
func (o KubeletConfigOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *int { return v.ImageGcLowThreshold }).(pulumi.IntPtrOutput)
}

// The maximum number of processes per pod.
func (o KubeletConfigOutput) PodMaxPids() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *int { return v.PodMaxPids }).(pulumi.IntPtrOutput)
}

// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
func (o KubeletConfigOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfig) *string { return v.TopologyManagerPolicy }).(pulumi.StringPtrOutput)
}

type KubeletConfigPtrOutput struct{ *pulumi.OutputState }

func (KubeletConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletConfig)(nil)).Elem()
}

func (o KubeletConfigPtrOutput) ToKubeletConfigPtrOutput() KubeletConfigPtrOutput {
	return o
}

func (o KubeletConfigPtrOutput) ToKubeletConfigPtrOutputWithContext(ctx context.Context) KubeletConfigPtrOutput {
	return o
}

func (o KubeletConfigPtrOutput) Elem() KubeletConfigOutput {
	return o.ApplyT(func(v *KubeletConfig) KubeletConfig {
		if v != nil {
			return *v
		}
		var ret KubeletConfig
		return ret
	}).(KubeletConfigOutput)
}

// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
func (o KubeletConfigPtrOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubeletConfig) []string {
		if v == nil {
			return nil
		}
		return v.AllowedUnsafeSysctls
	}).(pulumi.StringArrayOutput)
}

// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
func (o KubeletConfigPtrOutput) ContainerLogMaxFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxFiles
	}).(pulumi.IntPtrOutput)
}

// The maximum size (e.g. 10Mi) of container log file before it is rotated.
func (o KubeletConfigPtrOutput) ContainerLogMaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxSizeMB
	}).(pulumi.IntPtrOutput)
}

// The default is true.
func (o KubeletConfigPtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
func (o KubeletConfigPtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
func (o KubeletConfigPtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
func (o KubeletConfigPtrOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FailSwapOn
	}).(pulumi.BoolPtrOutput)
}

// To disable image garbage collection, set to 100. The default is 85%
func (o KubeletConfigPtrOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcHighThreshold
	}).(pulumi.IntPtrOutput)
}

// This cannot be set higher than imageGcHighThreshold. The default is 80%
func (o KubeletConfigPtrOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcLowThreshold
	}).(pulumi.IntPtrOutput)
}

// The maximum number of processes per pod.
func (o KubeletConfigPtrOutput) PodMaxPids() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *int {
		if v == nil {
			return nil
		}
		return v.PodMaxPids
	}).(pulumi.IntPtrOutput)
}

// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
func (o KubeletConfigPtrOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfig) *string {
		if v == nil {
			return nil
		}
		return v.TopologyManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type KubeletConfigResponse struct {
	// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
	ContainerLogMaxFiles *int `pulumi:"containerLogMaxFiles"`
	// The maximum size (e.g. 10Mi) of container log file before it is rotated.
	ContainerLogMaxSizeMB *int `pulumi:"containerLogMaxSizeMB"`
	// The default is true.
	CpuCfsQuota *bool `pulumi:"cpuCfsQuota"`
	// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
	CpuCfsQuotaPeriod *string `pulumi:"cpuCfsQuotaPeriod"`
	// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
	CpuManagerPolicy *string `pulumi:"cpuManagerPolicy"`
	// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
	FailSwapOn *bool `pulumi:"failSwapOn"`
	// To disable image garbage collection, set to 100. The default is 85%
	ImageGcHighThreshold *int `pulumi:"imageGcHighThreshold"`
	// This cannot be set higher than imageGcHighThreshold. The default is 80%
	ImageGcLowThreshold *int `pulumi:"imageGcLowThreshold"`
	// The maximum number of processes per pod.
	PodMaxPids *int `pulumi:"podMaxPids"`
	// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
	TopologyManagerPolicy *string `pulumi:"topologyManagerPolicy"`
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type KubeletConfigResponseOutput struct{ *pulumi.OutputState }

func (KubeletConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeletConfigResponse)(nil)).Elem()
}

func (o KubeletConfigResponseOutput) ToKubeletConfigResponseOutput() KubeletConfigResponseOutput {
	return o
}

func (o KubeletConfigResponseOutput) ToKubeletConfigResponseOutputWithContext(ctx context.Context) KubeletConfigResponseOutput {
	return o
}

// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
func (o KubeletConfigResponseOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubeletConfigResponse) []string { return v.AllowedUnsafeSysctls }).(pulumi.StringArrayOutput)
}

// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
func (o KubeletConfigResponseOutput) ContainerLogMaxFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *int { return v.ContainerLogMaxFiles }).(pulumi.IntPtrOutput)
}

// The maximum size (e.g. 10Mi) of container log file before it is rotated.
func (o KubeletConfigResponseOutput) ContainerLogMaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *int { return v.ContainerLogMaxSizeMB }).(pulumi.IntPtrOutput)
}

// The default is true.
func (o KubeletConfigResponseOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *bool { return v.CpuCfsQuota }).(pulumi.BoolPtrOutput)
}

// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
func (o KubeletConfigResponseOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *string { return v.CpuCfsQuotaPeriod }).(pulumi.StringPtrOutput)
}

// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
func (o KubeletConfigResponseOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *string { return v.CpuManagerPolicy }).(pulumi.StringPtrOutput)
}

// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
func (o KubeletConfigResponseOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *bool { return v.FailSwapOn }).(pulumi.BoolPtrOutput)
}

// To disable image garbage collection, set to 100. The default is 85%
func (o KubeletConfigResponseOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *int { return v.ImageGcHighThreshold }).(pulumi.IntPtrOutput)
}

// This cannot be set higher than imageGcHighThreshold. The default is 80%
func (o KubeletConfigResponseOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *int { return v.ImageGcLowThreshold }).(pulumi.IntPtrOutput)
}

// The maximum number of processes per pod.
func (o KubeletConfigResponseOutput) PodMaxPids() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *int { return v.PodMaxPids }).(pulumi.IntPtrOutput)
}

// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
func (o KubeletConfigResponseOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeletConfigResponse) *string { return v.TopologyManagerPolicy }).(pulumi.StringPtrOutput)
}

type KubeletConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (KubeletConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeletConfigResponse)(nil)).Elem()
}

func (o KubeletConfigResponsePtrOutput) ToKubeletConfigResponsePtrOutput() KubeletConfigResponsePtrOutput {
	return o
}

func (o KubeletConfigResponsePtrOutput) ToKubeletConfigResponsePtrOutputWithContext(ctx context.Context) KubeletConfigResponsePtrOutput {
	return o
}

func (o KubeletConfigResponsePtrOutput) Elem() KubeletConfigResponseOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) KubeletConfigResponse {
		if v != nil {
			return *v
		}
		var ret KubeletConfigResponse
		return ret
	}).(KubeletConfigResponseOutput)
}

// Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
func (o KubeletConfigResponsePtrOutput) AllowedUnsafeSysctls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedUnsafeSysctls
	}).(pulumi.StringArrayOutput)
}

// The maximum number of container log files that can be present for a container. The number must be ≥ 2.
func (o KubeletConfigResponsePtrOutput) ContainerLogMaxFiles() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxFiles
	}).(pulumi.IntPtrOutput)
}

// The maximum size (e.g. 10Mi) of container log file before it is rotated.
func (o KubeletConfigResponsePtrOutput) ContainerLogMaxSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ContainerLogMaxSizeMB
	}).(pulumi.IntPtrOutput)
}

// The default is true.
func (o KubeletConfigResponsePtrOutput) CpuCfsQuota() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuota
	}).(pulumi.BoolPtrOutput)
}

// The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
func (o KubeletConfigResponsePtrOutput) CpuCfsQuotaPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CpuCfsQuotaPeriod
	}).(pulumi.StringPtrOutput)
}

// The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
func (o KubeletConfigResponsePtrOutput) CpuManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CpuManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// If set to true it will make the Kubelet fail to start if swap is enabled on the node.
func (o KubeletConfigResponsePtrOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.FailSwapOn
	}).(pulumi.BoolPtrOutput)
}

// To disable image garbage collection, set to 100. The default is 85%
func (o KubeletConfigResponsePtrOutput) ImageGcHighThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcHighThreshold
	}).(pulumi.IntPtrOutput)
}

// This cannot be set higher than imageGcHighThreshold. The default is 80%
func (o KubeletConfigResponsePtrOutput) ImageGcLowThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ImageGcLowThreshold
	}).(pulumi.IntPtrOutput)
}

// The maximum number of processes per pod.
func (o KubeletConfigResponsePtrOutput) PodMaxPids() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.PodMaxPids
	}).(pulumi.IntPtrOutput)
}

// For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
func (o KubeletConfigResponsePtrOutput) TopologyManagerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeletConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TopologyManagerPolicy
	}).(pulumi.StringPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type LinuxOSConfig struct {
	// The size in MB of a swap file that will be created on each node.
	SwapFileSizeMB *int `pulumi:"swapFileSizeMB"`
	// Sysctl settings for Linux agent nodes.
	Sysctls *SysctlConfig `pulumi:"sysctls"`
	// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageDefrag *string `pulumi:"transparentHugePageDefrag"`
	// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageEnabled *string `pulumi:"transparentHugePageEnabled"`
}

// LinuxOSConfigInput is an input type that accepts LinuxOSConfigArgs and LinuxOSConfigOutput values.
// You can construct a concrete instance of `LinuxOSConfigInput` via:
//
//	LinuxOSConfigArgs{...}
type LinuxOSConfigInput interface {
	pulumi.Input

	ToLinuxOSConfigOutput() LinuxOSConfigOutput
	ToLinuxOSConfigOutputWithContext(context.Context) LinuxOSConfigOutput
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type LinuxOSConfigArgs struct {
	// The size in MB of a swap file that will be created on each node.
	SwapFileSizeMB pulumi.IntPtrInput `pulumi:"swapFileSizeMB"`
	// Sysctl settings for Linux agent nodes.
	Sysctls SysctlConfigPtrInput `pulumi:"sysctls"`
	// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageDefrag pulumi.StringPtrInput `pulumi:"transparentHugePageDefrag"`
	// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageEnabled pulumi.StringPtrInput `pulumi:"transparentHugePageEnabled"`
}

func (LinuxOSConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOSConfig)(nil)).Elem()
}

func (i LinuxOSConfigArgs) ToLinuxOSConfigOutput() LinuxOSConfigOutput {
	return i.ToLinuxOSConfigOutputWithContext(context.Background())
}

func (i LinuxOSConfigArgs) ToLinuxOSConfigOutputWithContext(ctx context.Context) LinuxOSConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOSConfigOutput)
}

func (i LinuxOSConfigArgs) ToLinuxOSConfigPtrOutput() LinuxOSConfigPtrOutput {
	return i.ToLinuxOSConfigPtrOutputWithContext(context.Background())
}

func (i LinuxOSConfigArgs) ToLinuxOSConfigPtrOutputWithContext(ctx context.Context) LinuxOSConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOSConfigOutput).ToLinuxOSConfigPtrOutputWithContext(ctx)
}

// LinuxOSConfigPtrInput is an input type that accepts LinuxOSConfigArgs, LinuxOSConfigPtr and LinuxOSConfigPtrOutput values.
// You can construct a concrete instance of `LinuxOSConfigPtrInput` via:
//
//	        LinuxOSConfigArgs{...}
//
//	or:
//
//	        nil
type LinuxOSConfigPtrInput interface {
	pulumi.Input

	ToLinuxOSConfigPtrOutput() LinuxOSConfigPtrOutput
	ToLinuxOSConfigPtrOutputWithContext(context.Context) LinuxOSConfigPtrOutput
}

type linuxOSConfigPtrType LinuxOSConfigArgs

func LinuxOSConfigPtr(v *LinuxOSConfigArgs) LinuxOSConfigPtrInput {
	return (*linuxOSConfigPtrType)(v)
}

func (*linuxOSConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOSConfig)(nil)).Elem()
}

func (i *linuxOSConfigPtrType) ToLinuxOSConfigPtrOutput() LinuxOSConfigPtrOutput {
	return i.ToLinuxOSConfigPtrOutputWithContext(context.Background())
}

func (i *linuxOSConfigPtrType) ToLinuxOSConfigPtrOutputWithContext(ctx context.Context) LinuxOSConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinuxOSConfigPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type LinuxOSConfigOutput struct{ *pulumi.OutputState }

func (LinuxOSConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOSConfig)(nil)).Elem()
}

func (o LinuxOSConfigOutput) ToLinuxOSConfigOutput() LinuxOSConfigOutput {
	return o
}

func (o LinuxOSConfigOutput) ToLinuxOSConfigOutputWithContext(ctx context.Context) LinuxOSConfigOutput {
	return o
}

func (o LinuxOSConfigOutput) ToLinuxOSConfigPtrOutput() LinuxOSConfigPtrOutput {
	return o.ToLinuxOSConfigPtrOutputWithContext(context.Background())
}

func (o LinuxOSConfigOutput) ToLinuxOSConfigPtrOutputWithContext(ctx context.Context) LinuxOSConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinuxOSConfig) *LinuxOSConfig {
		return &v
	}).(LinuxOSConfigPtrOutput)
}

// The size in MB of a swap file that will be created on each node.
func (o LinuxOSConfigOutput) SwapFileSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinuxOSConfig) *int { return v.SwapFileSizeMB }).(pulumi.IntPtrOutput)
}

// Sysctl settings for Linux agent nodes.
func (o LinuxOSConfigOutput) Sysctls() SysctlConfigPtrOutput {
	return o.ApplyT(func(v LinuxOSConfig) *SysctlConfig { return v.Sysctls }).(SysctlConfigPtrOutput)
}

// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOSConfig) *string { return v.TransparentHugePageDefrag }).(pulumi.StringPtrOutput)
}

// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOSConfig) *string { return v.TransparentHugePageEnabled }).(pulumi.StringPtrOutput)
}

type LinuxOSConfigPtrOutput struct{ *pulumi.OutputState }

func (LinuxOSConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOSConfig)(nil)).Elem()
}

func (o LinuxOSConfigPtrOutput) ToLinuxOSConfigPtrOutput() LinuxOSConfigPtrOutput {
	return o
}

func (o LinuxOSConfigPtrOutput) ToLinuxOSConfigPtrOutputWithContext(ctx context.Context) LinuxOSConfigPtrOutput {
	return o
}

func (o LinuxOSConfigPtrOutput) Elem() LinuxOSConfigOutput {
	return o.ApplyT(func(v *LinuxOSConfig) LinuxOSConfig {
		if v != nil {
			return *v
		}
		var ret LinuxOSConfig
		return ret
	}).(LinuxOSConfigOutput)
}

// The size in MB of a swap file that will be created on each node.
func (o LinuxOSConfigPtrOutput) SwapFileSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfig) *int {
		if v == nil {
			return nil
		}
		return v.SwapFileSizeMB
	}).(pulumi.IntPtrOutput)
}

// Sysctl settings for Linux agent nodes.
func (o LinuxOSConfigPtrOutput) Sysctls() SysctlConfigPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfig) *SysctlConfig {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(SysctlConfigPtrOutput)
}

// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigPtrOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageDefrag
	}).(pulumi.StringPtrOutput)
}

// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigPtrOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfig) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageEnabled
	}).(pulumi.StringPtrOutput)
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type LinuxOSConfigResponse struct {
	// The size in MB of a swap file that will be created on each node.
	SwapFileSizeMB *int `pulumi:"swapFileSizeMB"`
	// Sysctl settings for Linux agent nodes.
	Sysctls *SysctlConfigResponse `pulumi:"sysctls"`
	// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageDefrag *string `pulumi:"transparentHugePageDefrag"`
	// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
	TransparentHugePageEnabled *string `pulumi:"transparentHugePageEnabled"`
}

// See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.
type LinuxOSConfigResponseOutput struct{ *pulumi.OutputState }

func (LinuxOSConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinuxOSConfigResponse)(nil)).Elem()
}

func (o LinuxOSConfigResponseOutput) ToLinuxOSConfigResponseOutput() LinuxOSConfigResponseOutput {
	return o
}

func (o LinuxOSConfigResponseOutput) ToLinuxOSConfigResponseOutputWithContext(ctx context.Context) LinuxOSConfigResponseOutput {
	return o
}

// The size in MB of a swap file that will be created on each node.
func (o LinuxOSConfigResponseOutput) SwapFileSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinuxOSConfigResponse) *int { return v.SwapFileSizeMB }).(pulumi.IntPtrOutput)
}

// Sysctl settings for Linux agent nodes.
func (o LinuxOSConfigResponseOutput) Sysctls() SysctlConfigResponsePtrOutput {
	return o.ApplyT(func(v LinuxOSConfigResponse) *SysctlConfigResponse { return v.Sysctls }).(SysctlConfigResponsePtrOutput)
}

// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigResponseOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOSConfigResponse) *string { return v.TransparentHugePageDefrag }).(pulumi.StringPtrOutput)
}

// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigResponseOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LinuxOSConfigResponse) *string { return v.TransparentHugePageEnabled }).(pulumi.StringPtrOutput)
}

type LinuxOSConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (LinuxOSConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinuxOSConfigResponse)(nil)).Elem()
}

func (o LinuxOSConfigResponsePtrOutput) ToLinuxOSConfigResponsePtrOutput() LinuxOSConfigResponsePtrOutput {
	return o
}

func (o LinuxOSConfigResponsePtrOutput) ToLinuxOSConfigResponsePtrOutputWithContext(ctx context.Context) LinuxOSConfigResponsePtrOutput {
	return o
}

func (o LinuxOSConfigResponsePtrOutput) Elem() LinuxOSConfigResponseOutput {
	return o.ApplyT(func(v *LinuxOSConfigResponse) LinuxOSConfigResponse {
		if v != nil {
			return *v
		}
		var ret LinuxOSConfigResponse
		return ret
	}).(LinuxOSConfigResponseOutput)
}

// The size in MB of a swap file that will be created on each node.
func (o LinuxOSConfigResponsePtrOutput) SwapFileSizeMB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.SwapFileSizeMB
	}).(pulumi.IntPtrOutput)
}

// Sysctl settings for Linux agent nodes.
func (o LinuxOSConfigResponsePtrOutput) Sysctls() SysctlConfigResponsePtrOutput {
	return o.ApplyT(func(v *LinuxOSConfigResponse) *SysctlConfigResponse {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(SysctlConfigResponsePtrOutput)
}

// Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigResponsePtrOutput) TransparentHugePageDefrag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageDefrag
	}).(pulumi.StringPtrOutput)
}

// Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
func (o LinuxOSConfigResponsePtrOutput) TransparentHugePageEnabled() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LinuxOSConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TransparentHugePageEnabled
	}).(pulumi.StringPtrOutput)
}

// For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
type ManagedClusterAADProfile struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID *string `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed *bool `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID *string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// ManagedClusterAADProfileInput is an input type that accepts ManagedClusterAADProfileArgs and ManagedClusterAADProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfileInput` via:
//
//	ManagedClusterAADProfileArgs{...}
type ManagedClusterAADProfileInput interface {
	pulumi.Input

	ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput
	ToManagedClusterAADProfileOutputWithContext(context.Context) ManagedClusterAADProfileOutput
}

// For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
type ManagedClusterAADProfileArgs struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs pulumi.StringArrayInput `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID pulumi.StringPtrInput `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC pulumi.BoolPtrInput `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed pulumi.BoolPtrInput `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID pulumi.StringPtrInput `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret pulumi.StringPtrInput `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID pulumi.StringPtrInput `pulumi:"tenantID"`
}

func (ManagedClusterAADProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return i.ToManagedClusterAADProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput)
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAADProfileArgs) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfileOutput).ToManagedClusterAADProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAADProfilePtrInput is an input type that accepts ManagedClusterAADProfileArgs, ManagedClusterAADProfilePtr and ManagedClusterAADProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAADProfilePtrInput` via:
//
//	        ManagedClusterAADProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterAADProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput
	ToManagedClusterAADProfilePtrOutputWithContext(context.Context) ManagedClusterAADProfilePtrOutput
}

type managedClusterAADProfilePtrType ManagedClusterAADProfileArgs

func ManagedClusterAADProfilePtr(v *ManagedClusterAADProfileArgs) ManagedClusterAADProfilePtrInput {
	return (*managedClusterAADProfilePtrType)(v)
}

func (*managedClusterAADProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return i.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAADProfilePtrType) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAADProfilePtrOutput)
}

// For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
type ManagedClusterAADProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutput() ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfileOutputWithContext(ctx context.Context) ManagedClusterAADProfileOutput {
	return o
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o.ToManagedClusterAADProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAADProfileOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterAADProfile) *ManagedClusterAADProfile {
		return &v
	}).(ManagedClusterAADProfilePtrOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ClientAppID }).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ServerAppID }).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfile) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfile)(nil)).Elem()
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutput() ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) ToManagedClusterAADProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfilePtrOutput {
	return o
}

func (o ManagedClusterAADProfilePtrOutput) Elem() ManagedClusterAADProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) ManagedClusterAADProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAADProfile
		return ret
	}).(ManagedClusterAADProfileOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfilePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfilePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfilePtrOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Managed
	}).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfilePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfilePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfilePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfile) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
type ManagedClusterAADProfileResponse struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `pulumi:"adminGroupObjectIDs"`
	// The client AAD application ID.
	ClientAppID *string `pulumi:"clientAppID"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `pulumi:"enableAzureRBAC"`
	// Whether to enable managed AAD.
	Managed *bool `pulumi:"managed"`
	// The server AAD application ID.
	ServerAppID *string `pulumi:"serverAppID"`
	// The server AAD application secret.
	ServerAppSecret *string `pulumi:"serverAppSecret"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `pulumi:"tenantID"`
}

// For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).
type ManagedClusterAADProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutput() ManagedClusterAADProfileResponseOutput {
	return o
}

func (o ManagedClusterAADProfileResponseOutput) ToManagedClusterAADProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponseOutput {
	return o
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileResponseOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) []string { return v.AdminGroupObjectIDs }).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ClientAppID }).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileResponseOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *bool { return v.EnableAzureRBAC }).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileResponseOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *bool { return v.Managed }).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponseOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ServerAppID }).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponseOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.ServerAppSecret }).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponseOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAADProfileResponse) *string { return v.TenantID }).(pulumi.StringPtrOutput)
}

type ManagedClusterAADProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAADProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAADProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutput() ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) ToManagedClusterAADProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAADProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAADProfileResponsePtrOutput) Elem() ManagedClusterAADProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) ManagedClusterAADProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAADProfileResponse
		return ret
	}).(ManagedClusterAADProfileResponseOutput)
}

// The list of AAD group object IDs that will have admin role of the cluster.
func (o ManagedClusterAADProfileResponsePtrOutput) AdminGroupObjectIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdminGroupObjectIDs
	}).(pulumi.StringArrayOutput)
}

// The client AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ClientAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientAppID
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Azure RBAC for Kubernetes authorization.
func (o ManagedClusterAADProfileResponsePtrOutput) EnableAzureRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAzureRBAC
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable managed AAD.
func (o ManagedClusterAADProfileResponsePtrOutput) Managed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Managed
	}).(pulumi.BoolPtrOutput)
}

// The server AAD application ID.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppID
	}).(pulumi.StringPtrOutput)
}

// The server AAD application secret.
func (o ManagedClusterAADProfileResponsePtrOutput) ServerAppSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerAppSecret
	}).(pulumi.StringPtrOutput)
}

// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
func (o ManagedClusterAADProfileResponsePtrOutput) TenantID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAADProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.TenantID
	}).(pulumi.StringPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfile struct {
	// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to disable run command for the cluster or not.
	DisableRunCommand *bool `pulumi:"disableRunCommand"`
	// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
	// Whether to create additional public FQDN for private cluster or not.
	EnablePrivateClusterPublicFQDN *bool `pulumi:"enablePrivateClusterPublicFQDN"`
	// Whether to enable apiserver vnet integration for the cluster or not.
	EnableVnetIntegration *bool `pulumi:"enableVnetIntegration"`
	// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
	PrivateDNSZone *string `pulumi:"privateDNSZone"`
	// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
	SubnetId *string `pulumi:"subnetId"`
}

// ManagedClusterAPIServerAccessProfileInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs and ManagedClusterAPIServerAccessProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfileInput` via:
//
//	ManagedClusterAPIServerAccessProfileArgs{...}
type ManagedClusterAPIServerAccessProfileInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput
	ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfileOutput
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileArgs struct {
	// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
	AuthorizedIPRanges pulumi.StringArrayInput `pulumi:"authorizedIPRanges"`
	// Whether to disable run command for the cluster or not.
	DisableRunCommand pulumi.BoolPtrInput `pulumi:"disableRunCommand"`
	// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
	EnablePrivateCluster pulumi.BoolPtrInput `pulumi:"enablePrivateCluster"`
	// Whether to create additional public FQDN for private cluster or not.
	EnablePrivateClusterPublicFQDN pulumi.BoolPtrInput `pulumi:"enablePrivateClusterPublicFQDN"`
	// Whether to enable apiserver vnet integration for the cluster or not.
	EnableVnetIntegration pulumi.BoolPtrInput `pulumi:"enableVnetIntegration"`
	// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
	PrivateDNSZone pulumi.StringPtrInput `pulumi:"privateDNSZone"`
	// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (ManagedClusterAPIServerAccessProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return i.ToManagedClusterAPIServerAccessProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput)
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAPIServerAccessProfileArgs) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfileOutput).ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAPIServerAccessProfilePtrInput is an input type that accepts ManagedClusterAPIServerAccessProfileArgs, ManagedClusterAPIServerAccessProfilePtr and ManagedClusterAPIServerAccessProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAPIServerAccessProfilePtrInput` via:
//
//	        ManagedClusterAPIServerAccessProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterAPIServerAccessProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput
	ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Context) ManagedClusterAPIServerAccessProfilePtrOutput
}

type managedClusterAPIServerAccessProfilePtrType ManagedClusterAPIServerAccessProfileArgs

func ManagedClusterAPIServerAccessProfilePtr(v *ManagedClusterAPIServerAccessProfileArgs) ManagedClusterAPIServerAccessProfilePtrInput {
	return (*managedClusterAPIServerAccessProfilePtrType)(v)
}

func (*managedClusterAPIServerAccessProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return i.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAPIServerAccessProfilePtrType) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutput() ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfileOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAPIServerAccessProfileOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterAPIServerAccessProfile) *ManagedClusterAPIServerAccessProfile {
		return &v
	}).(ManagedClusterAPIServerAccessProfilePtrOutput)
}

// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
func (o ManagedClusterAPIServerAccessProfileOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to disable run command for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileOutput) DisableRunCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.DisableRunCommand }).(pulumi.BoolPtrOutput)
}

// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
func (o ManagedClusterAPIServerAccessProfileOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

// Whether to create additional public FQDN for private cluster or not.
func (o ManagedClusterAPIServerAccessProfileOutput) EnablePrivateClusterPublicFQDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.EnablePrivateClusterPublicFQDN }).(pulumi.BoolPtrOutput)
}

// Whether to enable apiserver vnet integration for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileOutput) EnableVnetIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *bool { return v.EnableVnetIntegration }).(pulumi.BoolPtrOutput)
}

// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
func (o ManagedClusterAPIServerAccessProfileOutput) PrivateDNSZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *string { return v.PrivateDNSZone }).(pulumi.StringPtrOutput)
}

// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
func (o ManagedClusterAPIServerAccessProfileOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfile) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ManagedClusterAPIServerAccessProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfile)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutput() ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) ToManagedClusterAPIServerAccessProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfilePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfilePtrOutput) Elem() ManagedClusterAPIServerAccessProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) ManagedClusterAPIServerAccessProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAPIServerAccessProfile
		return ret
	}).(ManagedClusterAPIServerAccessProfileOutput)
}

// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
func (o ManagedClusterAPIServerAccessProfilePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to disable run command for the cluster or not.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) DisableRunCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.DisableRunCommand
	}).(pulumi.BoolPtrOutput)
}

// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
func (o ManagedClusterAPIServerAccessProfilePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// Whether to create additional public FQDN for private cluster or not.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) EnablePrivateClusterPublicFQDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateClusterPublicFQDN
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable apiserver vnet integration for the cluster or not.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) EnableVnetIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVnetIntegration
	}).(pulumi.BoolPtrOutput)
}

// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) PrivateDNSZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDNSZone
	}).(pulumi.StringPtrOutput)
}

// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
func (o ManagedClusterAPIServerAccessProfilePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfile) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponse struct {
	// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
	AuthorizedIPRanges []string `pulumi:"authorizedIPRanges"`
	// Whether to disable run command for the cluster or not.
	DisableRunCommand *bool `pulumi:"disableRunCommand"`
	// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
	EnablePrivateCluster *bool `pulumi:"enablePrivateCluster"`
	// Whether to create additional public FQDN for private cluster or not.
	EnablePrivateClusterPublicFQDN *bool `pulumi:"enablePrivateClusterPublicFQDN"`
	// Whether to enable apiserver vnet integration for the cluster or not.
	EnableVnetIntegration *bool `pulumi:"enableVnetIntegration"`
	// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
	PrivateDNSZone *string `pulumi:"privateDNSZone"`
	// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
	SubnetId *string `pulumi:"subnetId"`
}

// Access profile for managed cluster API server.
type ManagedClusterAPIServerAccessProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutput() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponseOutput) ToManagedClusterAPIServerAccessProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponseOutput {
	return o
}

// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
func (o ManagedClusterAPIServerAccessProfileResponseOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) []string { return v.AuthorizedIPRanges }).(pulumi.StringArrayOutput)
}

// Whether to disable run command for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) DisableRunCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.DisableRunCommand }).(pulumi.BoolPtrOutput)
}

// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
func (o ManagedClusterAPIServerAccessProfileResponseOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.EnablePrivateCluster }).(pulumi.BoolPtrOutput)
}

// Whether to create additional public FQDN for private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) EnablePrivateClusterPublicFQDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.EnablePrivateClusterPublicFQDN }).(pulumi.BoolPtrOutput)
}

// Whether to enable apiserver vnet integration for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) EnableVnetIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *bool { return v.EnableVnetIntegration }).(pulumi.BoolPtrOutput)
}

// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) PrivateDNSZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *string { return v.PrivateDNSZone }).(pulumi.StringPtrOutput)
}

// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
func (o ManagedClusterAPIServerAccessProfileResponseOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAPIServerAccessProfileResponse) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ManagedClusterAPIServerAccessProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAPIServerAccessProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAPIServerAccessProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutput() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) ToManagedClusterAPIServerAccessProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) Elem() ManagedClusterAPIServerAccessProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) ManagedClusterAPIServerAccessProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAPIServerAccessProfileResponse
		return ret
	}).(ManagedClusterAPIServerAccessProfileResponseOutput)
}

// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) AuthorizedIPRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedIPRanges
	}).(pulumi.StringArrayOutput)
}

// Whether to disable run command for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) DisableRunCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableRunCommand
	}).(pulumi.BoolPtrOutput)
}

// For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) EnablePrivateCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateCluster
	}).(pulumi.BoolPtrOutput)
}

// Whether to create additional public FQDN for private cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) EnablePrivateClusterPublicFQDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateClusterPublicFQDN
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable apiserver vnet integration for the cluster or not.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) EnableVnetIntegration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableVnetIntegration
	}).(pulumi.BoolPtrOutput)
}

// The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) PrivateDNSZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateDNSZone
	}).(pulumi.StringPtrOutput)
}

// It is required when: 1. creating a new cluster with BYO Vnet; 2. updating an existing cluster to enable apiserver vnet integration.
func (o ManagedClusterAPIServerAccessProfileResponsePtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAPIServerAccessProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfile struct {
	// Key-value pairs for configuring an add-on.
	Config map[string]string `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ManagedClusterAddonProfileInput is an input type that accepts ManagedClusterAddonProfileArgs and ManagedClusterAddonProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileInput` via:
//
//	ManagedClusterAddonProfileArgs{...}
type ManagedClusterAddonProfileInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput
	ToManagedClusterAddonProfileOutputWithContext(context.Context) ManagedClusterAddonProfileOutput
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileArgs struct {
	// Key-value pairs for configuring an add-on.
	Config pulumi.StringMapInput `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ManagedClusterAddonProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfile)(nil)).Elem()
}

func (i ManagedClusterAddonProfileArgs) ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput {
	return i.ToManagedClusterAddonProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileArgs) ToManagedClusterAddonProfileOutputWithContext(ctx context.Context) ManagedClusterAddonProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileOutput)
}

// ManagedClusterAddonProfileMapInput is an input type that accepts ManagedClusterAddonProfileMap and ManagedClusterAddonProfileMapOutput values.
// You can construct a concrete instance of `ManagedClusterAddonProfileMapInput` via:
//
//	ManagedClusterAddonProfileMap{ "key": ManagedClusterAddonProfileArgs{...} }
type ManagedClusterAddonProfileMapInput interface {
	pulumi.Input

	ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput
	ToManagedClusterAddonProfileMapOutputWithContext(context.Context) ManagedClusterAddonProfileMapOutput
}

type ManagedClusterAddonProfileMap map[string]ManagedClusterAddonProfileInput

func (ManagedClusterAddonProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfile)(nil)).Elem()
}

func (i ManagedClusterAddonProfileMap) ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput {
	return i.ToManagedClusterAddonProfileMapOutputWithContext(context.Background())
}

func (i ManagedClusterAddonProfileMap) ToManagedClusterAddonProfileMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAddonProfileMapOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfile)(nil)).Elem()
}

func (o ManagedClusterAddonProfileOutput) ToManagedClusterAddonProfileOutput() ManagedClusterAddonProfileOutput {
	return o
}

func (o ManagedClusterAddonProfileOutput) ToManagedClusterAddonProfileOutputWithContext(ctx context.Context) ManagedClusterAddonProfileOutput {
	return o
}

// Key-value pairs for configuring an add-on.
func (o ManagedClusterAddonProfileOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfile) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// Whether the add-on is enabled or not.
func (o ManagedClusterAddonProfileOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfile) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ManagedClusterAddonProfileMapOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfile)(nil)).Elem()
}

func (o ManagedClusterAddonProfileMapOutput) ToManagedClusterAddonProfileMapOutput() ManagedClusterAddonProfileMapOutput {
	return o
}

func (o ManagedClusterAddonProfileMapOutput) ToManagedClusterAddonProfileMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileMapOutput {
	return o
}

func (o ManagedClusterAddonProfileMapOutput) MapIndex(k pulumi.StringInput) ManagedClusterAddonProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedClusterAddonProfile {
		return vs[0].(map[string]ManagedClusterAddonProfile)[vs[1].(string)]
	}).(ManagedClusterAddonProfileOutput)
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileResponse struct {
	// Key-value pairs for configuring an add-on.
	Config map[string]string `pulumi:"config"`
	// Whether the add-on is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// Information of user assigned identity used by this add-on.
	Identity ManagedClusterAddonProfileResponseIdentity `pulumi:"identity"`
}

// A Kubernetes add-on profile for a managed cluster.
type ManagedClusterAddonProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAddonProfileResponseOutput) ToManagedClusterAddonProfileResponseOutput() ManagedClusterAddonProfileResponseOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseOutput) ToManagedClusterAddonProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseOutput {
	return o
}

// Key-value pairs for configuring an add-on.
func (o ManagedClusterAddonProfileResponseOutput) Config() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponse) map[string]string { return v.Config }).(pulumi.StringMapOutput)
}

// Whether the add-on is enabled or not.
func (o ManagedClusterAddonProfileResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Information of user assigned identity used by this add-on.
func (o ManagedClusterAddonProfileResponseOutput) Identity() ManagedClusterAddonProfileResponseIdentityOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponse) ManagedClusterAddonProfileResponseIdentity {
		return v.Identity
	}).(ManagedClusterAddonProfileResponseIdentityOutput)
}

type ManagedClusterAddonProfileResponseMapOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterAddonProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAddonProfileResponseMapOutput) ToManagedClusterAddonProfileResponseMapOutput() ManagedClusterAddonProfileResponseMapOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseMapOutput) ToManagedClusterAddonProfileResponseMapOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseMapOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseMapOutput) MapIndex(k pulumi.StringInput) ManagedClusterAddonProfileResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedClusterAddonProfileResponse {
		return vs[0].(map[string]ManagedClusterAddonProfileResponse)[vs[1].(string)]
	}).(ManagedClusterAddonProfileResponseOutput)
}

// Information of user assigned identity used by this add-on.
type ManagedClusterAddonProfileResponseIdentity struct {
	// The client ID of the user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the user assigned identity.
	ObjectId *string `pulumi:"objectId"`
	// The resource ID of the user assigned identity.
	ResourceId *string `pulumi:"resourceId"`
}

// Information of user assigned identity used by this add-on.
type ManagedClusterAddonProfileResponseIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterAddonProfileResponseIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAddonProfileResponseIdentity)(nil)).Elem()
}

func (o ManagedClusterAddonProfileResponseIdentityOutput) ToManagedClusterAddonProfileResponseIdentityOutput() ManagedClusterAddonProfileResponseIdentityOutput {
	return o
}

func (o ManagedClusterAddonProfileResponseIdentityOutput) ToManagedClusterAddonProfileResponseIdentityOutputWithContext(ctx context.Context) ManagedClusterAddonProfileResponseIdentityOutput {
	return o
}

// The client ID of the user assigned identity.
func (o ManagedClusterAddonProfileResponseIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponseIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the user assigned identity.
func (o ManagedClusterAddonProfileResponseIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponseIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The resource ID of the user assigned identity.
func (o ManagedClusterAddonProfileResponseIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAddonProfileResponseIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfile struct {
	// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// AKS will associate the specified agent pool with the Capacity Reservation Group.
	CapacityReservationGroupID *string `pulumi:"capacityReservationGroupID"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
	CreationData *CreationData `pulumi:"creationData"`
	// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
	CurrentOrchestratorVersion *string `pulumi:"currentOrchestratorVersion"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// When set to true, AKS deploys a daemonset and host services to sync custom certificate authorities from a user-provided config map into node trust stores. Defaults to false.
	EnableCustomCATrust *bool `pulumi:"enableCustomCATrust"`
	// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
	EnableEncryptionAtHost *bool `pulumi:"enableEncryptionAtHost"`
	// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
	EnableFIPS *bool `pulumi:"enableFIPS"`
	// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Whether to enable UltraSSD
	EnableUltraSSD *bool `pulumi:"enableUltraSSD"`
	// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
	GpuInstanceProfile *string `pulumi:"gpuInstanceProfile"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
	HostGroupID *string `pulumi:"hostGroupID"`
	// The Kubelet configuration on the agent pool nodes.
	KubeletConfig *KubeletConfig `pulumi:"kubeletConfig"`
	// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
	KubeletDiskType *string `pulumi:"kubeletDiskType"`
	// The OS configuration of Linux agent nodes.
	LinuxOSConfig *LinuxOSConfig `pulumi:"linuxOSConfig"`
	// The maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
	MessageOfTheDay *string `pulumi:"messageOfTheDay"`
	// The minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
	Mode *string `pulumi:"mode"`
	// Windows agent pool names must be 6 characters or less.
	Name string `pulumi:"name"`
	// The node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
	NodePublicIPPrefixID *string `pulumi:"nodePublicIPPrefixID"`
	// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
	OsDiskType *string `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
	OsSKU *string `pulumi:"osSKU"`
	// The operating system type. The default is Linux.
	OsType *string `pulumi:"osType"`
	// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	PodSubnetID *string `pulumi:"podSubnetID"`
	// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
	PowerState *PowerState `pulumi:"powerState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
	ScaleDownMode *string `pulumi:"scaleDownMode"`
	// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
	SpotMaxPrice *float64 `pulumi:"spotMaxPrice"`
	// The tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// The type of Agent Pool.
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettings `pulumi:"upgradeSettings"`
	// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
	VmSize *string `pulumi:"vmSize"`
	// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
	// Determines the type of workload a node can run.
	WorkloadRuntime *string `pulumi:"workloadRuntime"`
}

// ManagedClusterAgentPoolProfileInput is an input type that accepts ManagedClusterAgentPoolProfileArgs and ManagedClusterAgentPoolProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileInput` via:
//
//	ManagedClusterAgentPoolProfileArgs{...}
type ManagedClusterAgentPoolProfileInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput
	ToManagedClusterAgentPoolProfileOutputWithContext(context.Context) ManagedClusterAgentPoolProfileOutput
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileArgs struct {
	// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// AKS will associate the specified agent pool with the Capacity Reservation Group.
	CapacityReservationGroupID pulumi.StringPtrInput `pulumi:"capacityReservationGroupID"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
	CreationData CreationDataPtrInput `pulumi:"creationData"`
	// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
	CurrentOrchestratorVersion pulumi.StringPtrInput `pulumi:"currentOrchestratorVersion"`
	// Whether to enable auto-scaler
	EnableAutoScaling pulumi.BoolPtrInput `pulumi:"enableAutoScaling"`
	// When set to true, AKS deploys a daemonset and host services to sync custom certificate authorities from a user-provided config map into node trust stores. Defaults to false.
	EnableCustomCATrust pulumi.BoolPtrInput `pulumi:"enableCustomCATrust"`
	// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
	EnableEncryptionAtHost pulumi.BoolPtrInput `pulumi:"enableEncryptionAtHost"`
	// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
	EnableFIPS pulumi.BoolPtrInput `pulumi:"enableFIPS"`
	// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
	EnableNodePublicIP pulumi.BoolPtrInput `pulumi:"enableNodePublicIP"`
	// Whether to enable UltraSSD
	EnableUltraSSD pulumi.BoolPtrInput `pulumi:"enableUltraSSD"`
	// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
	GpuInstanceProfile pulumi.StringPtrInput `pulumi:"gpuInstanceProfile"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
	HostGroupID pulumi.StringPtrInput `pulumi:"hostGroupID"`
	// The Kubelet configuration on the agent pool nodes.
	KubeletConfig KubeletConfigPtrInput `pulumi:"kubeletConfig"`
	// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
	KubeletDiskType pulumi.StringPtrInput `pulumi:"kubeletDiskType"`
	// The OS configuration of Linux agent nodes.
	LinuxOSConfig LinuxOSConfigPtrInput `pulumi:"linuxOSConfig"`
	// The maximum number of nodes for auto-scaling
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// The maximum number of pods that can run on a node.
	MaxPods pulumi.IntPtrInput `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
	MessageOfTheDay pulumi.StringPtrInput `pulumi:"messageOfTheDay"`
	// The minimum number of nodes for auto-scaling
	MinCount pulumi.IntPtrInput `pulumi:"minCount"`
	// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Windows agent pool names must be 6 characters or less.
	Name pulumi.StringInput `pulumi:"name"`
	// The node labels to be persisted across all nodes in agent pool.
	NodeLabels pulumi.StringMapInput `pulumi:"nodeLabels"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
	NodePublicIPPrefixID pulumi.StringPtrInput `pulumi:"nodePublicIPPrefixID"`
	// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints pulumi.StringArrayInput `pulumi:"nodeTaints"`
	// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
	OrchestratorVersion pulumi.StringPtrInput `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB pulumi.IntPtrInput `pulumi:"osDiskSizeGB"`
	// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
	OsDiskType pulumi.StringPtrInput `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
	OsSKU pulumi.StringPtrInput `pulumi:"osSKU"`
	// The operating system type. The default is Linux.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	PodSubnetID pulumi.StringPtrInput `pulumi:"podSubnetID"`
	// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
	PowerState PowerStatePtrInput `pulumi:"powerState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID pulumi.StringPtrInput `pulumi:"proximityPlacementGroupID"`
	// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
	ScaleDownMode pulumi.StringPtrInput `pulumi:"scaleDownMode"`
	// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
	ScaleSetEvictionPolicy pulumi.StringPtrInput `pulumi:"scaleSetEvictionPolicy"`
	// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
	ScaleSetPriority pulumi.StringPtrInput `pulumi:"scaleSetPriority"`
	// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
	SpotMaxPrice pulumi.Float64PtrInput `pulumi:"spotMaxPrice"`
	// The tags to be persisted on the agent pool virtual machine scale set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The type of Agent Pool.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings AgentPoolUpgradeSettingsPtrInput `pulumi:"upgradeSettings"`
	// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
	VmSize pulumi.StringPtrInput `pulumi:"vmSize"`
	// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	VnetSubnetID pulumi.StringPtrInput `pulumi:"vnetSubnetID"`
	// Determines the type of workload a node can run.
	WorkloadRuntime pulumi.StringPtrInput `pulumi:"workloadRuntime"`
}

func (ManagedClusterAgentPoolProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return i.ToManagedClusterAgentPoolProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArgs) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileOutput)
}

// ManagedClusterAgentPoolProfileArrayInput is an input type that accepts ManagedClusterAgentPoolProfileArray and ManagedClusterAgentPoolProfileArrayOutput values.
// You can construct a concrete instance of `ManagedClusterAgentPoolProfileArrayInput` via:
//
//	ManagedClusterAgentPoolProfileArray{ ManagedClusterAgentPoolProfileArgs{...} }
type ManagedClusterAgentPoolProfileArrayInput interface {
	pulumi.Input

	ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput
	ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Context) ManagedClusterAgentPoolProfileArrayOutput
}

type ManagedClusterAgentPoolProfileArray []ManagedClusterAgentPoolProfileInput

func (ManagedClusterAgentPoolProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return i.ToManagedClusterAgentPoolProfileArrayOutputWithContext(context.Background())
}

func (i ManagedClusterAgentPoolProfileArray) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAgentPoolProfileArrayOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutput() ManagedClusterAgentPoolProfileOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileOutput) ToManagedClusterAgentPoolProfileOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileOutput {
	return o
}

// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
func (o ManagedClusterAgentPoolProfileOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// AKS will associate the specified agent pool with the Capacity Reservation Group.
func (o ManagedClusterAgentPoolProfileOutput) CapacityReservationGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.CapacityReservationGroupID }).(pulumi.StringPtrOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
func (o ManagedClusterAgentPoolProfileOutput) CreationData() CreationDataPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *CreationData { return v.CreationData }).(CreationDataPtrOutput)
}

// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
func (o ManagedClusterAgentPoolProfileOutput) CurrentOrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.CurrentOrchestratorVersion }).(pulumi.StringPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// When set to true, AKS deploys a daemonset and host services to sync custom certificate authorities from a user-provided config map into node trust stores. Defaults to false.
func (o ManagedClusterAgentPoolProfileOutput) EnableCustomCATrust() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableCustomCATrust }).(pulumi.BoolPtrOutput)
}

// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
func (o ManagedClusterAgentPoolProfileOutput) EnableEncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableEncryptionAtHost }).(pulumi.BoolPtrOutput)
}

// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
func (o ManagedClusterAgentPoolProfileOutput) EnableFIPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableFIPS }).(pulumi.BoolPtrOutput)
}

// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
func (o ManagedClusterAgentPoolProfileOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Whether to enable UltraSSD
func (o ManagedClusterAgentPoolProfileOutput) EnableUltraSSD() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *bool { return v.EnableUltraSSD }).(pulumi.BoolPtrOutput)
}

// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
func (o ManagedClusterAgentPoolProfileOutput) GpuInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.GpuInstanceProfile }).(pulumi.StringPtrOutput)
}

// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
func (o ManagedClusterAgentPoolProfileOutput) HostGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.HostGroupID }).(pulumi.StringPtrOutput)
}

// The Kubelet configuration on the agent pool nodes.
func (o ManagedClusterAgentPoolProfileOutput) KubeletConfig() KubeletConfigPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *KubeletConfig { return v.KubeletConfig }).(KubeletConfigPtrOutput)
}

// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
func (o ManagedClusterAgentPoolProfileOutput) KubeletDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.KubeletDiskType }).(pulumi.StringPtrOutput)
}

// The OS configuration of Linux agent nodes.
func (o ManagedClusterAgentPoolProfileOutput) LinuxOSConfig() LinuxOSConfigPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *LinuxOSConfig { return v.LinuxOSConfig }).(LinuxOSConfigPtrOutput)
}

// The maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
func (o ManagedClusterAgentPoolProfileOutput) MessageOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.MessageOfTheDay }).(pulumi.StringPtrOutput)
}

// The minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
func (o ManagedClusterAgentPoolProfileOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Windows agent pool names must be 6 characters or less.
func (o ManagedClusterAgentPoolProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) string { return v.Name }).(pulumi.StringOutput)
}

// The node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfileOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
func (o ManagedClusterAgentPoolProfileOutput) NodePublicIPPrefixID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.NodePublicIPPrefixID }).(pulumi.StringPtrOutput)
}

// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
func (o ManagedClusterAgentPoolProfileOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
func (o ManagedClusterAgentPoolProfileOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
func (o ManagedClusterAgentPoolProfileOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// The operating system type. The default is Linux.
func (o ManagedClusterAgentPoolProfileOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
func (o ManagedClusterAgentPoolProfileOutput) PodSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.PodSubnetID }).(pulumi.StringPtrOutput)
}

// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
func (o ManagedClusterAgentPoolProfileOutput) PowerState() PowerStatePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *PowerState { return v.PowerState }).(PowerStatePtrOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfileOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
func (o ManagedClusterAgentPoolProfileOutput) ScaleDownMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleDownMode }).(pulumi.StringPtrOutput)
}

// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
func (o ManagedClusterAgentPoolProfileOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
func (o ManagedClusterAgentPoolProfileOutput) SpotMaxPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *float64 { return v.SpotMaxPrice }).(pulumi.Float64PtrOutput)
}

// The tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Agent Pool.
func (o ManagedClusterAgentPoolProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfileOutput) UpgradeSettings() AgentPoolUpgradeSettingsPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *AgentPoolUpgradeSettings { return v.UpgradeSettings }).(AgentPoolUpgradeSettingsPtrOutput)
}

// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
func (o ManagedClusterAgentPoolProfileOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
func (o ManagedClusterAgentPoolProfileOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

// Determines the type of workload a node can run.
func (o ManagedClusterAgentPoolProfileOutput) WorkloadRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfile) *string { return v.WorkloadRuntime }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfile)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutput() ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) ToManagedClusterAgentPoolProfileArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfile {
		return vs[0].([]ManagedClusterAgentPoolProfile)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileOutput)
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponse struct {
	// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// AKS will associate the specified agent pool with the Capacity Reservation Group.
	CapacityReservationGroupID *string `pulumi:"capacityReservationGroupID"`
	// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
	Count *int `pulumi:"count"`
	// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
	CreationData *CreationDataResponse `pulumi:"creationData"`
	// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
	CurrentOrchestratorVersion *string `pulumi:"currentOrchestratorVersion"`
	// Whether to enable auto-scaler
	EnableAutoScaling *bool `pulumi:"enableAutoScaling"`
	// When set to true, AKS deploys a daemonset and host services to sync custom certificate authorities from a user-provided config map into node trust stores. Defaults to false.
	EnableCustomCATrust *bool `pulumi:"enableCustomCATrust"`
	// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
	EnableEncryptionAtHost *bool `pulumi:"enableEncryptionAtHost"`
	// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
	EnableFIPS *bool `pulumi:"enableFIPS"`
	// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
	EnableNodePublicIP *bool `pulumi:"enableNodePublicIP"`
	// Whether to enable UltraSSD
	EnableUltraSSD *bool `pulumi:"enableUltraSSD"`
	// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
	GpuInstanceProfile *string `pulumi:"gpuInstanceProfile"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
	HostGroupID *string `pulumi:"hostGroupID"`
	// The Kubelet configuration on the agent pool nodes.
	KubeletConfig *KubeletConfigResponse `pulumi:"kubeletConfig"`
	// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
	KubeletDiskType *string `pulumi:"kubeletDiskType"`
	// The OS configuration of Linux agent nodes.
	LinuxOSConfig *LinuxOSConfigResponse `pulumi:"linuxOSConfig"`
	// The maximum number of nodes for auto-scaling
	MaxCount *int `pulumi:"maxCount"`
	// The maximum number of pods that can run on a node.
	MaxPods *int `pulumi:"maxPods"`
	// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
	MessageOfTheDay *string `pulumi:"messageOfTheDay"`
	// The minimum number of nodes for auto-scaling
	MinCount *int `pulumi:"minCount"`
	// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
	Mode *string `pulumi:"mode"`
	// Windows agent pool names must be 6 characters or less.
	Name string `pulumi:"name"`
	// The version of node image
	NodeImageVersion string `pulumi:"nodeImageVersion"`
	// The node labels to be persisted across all nodes in agent pool.
	NodeLabels map[string]string `pulumi:"nodeLabels"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
	NodePublicIPPrefixID *string `pulumi:"nodePublicIPPrefixID"`
	// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
	NodeTaints []string `pulumi:"nodeTaints"`
	// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
	OrchestratorVersion *string `pulumi:"orchestratorVersion"`
	// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
	OsDiskSizeGB *int `pulumi:"osDiskSizeGB"`
	// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
	OsDiskType *string `pulumi:"osDiskType"`
	// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
	OsSKU *string `pulumi:"osSKU"`
	// The operating system type. The default is Linux.
	OsType *string `pulumi:"osType"`
	// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	PodSubnetID *string `pulumi:"podSubnetID"`
	// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
	PowerState *PowerStateResponse `pulumi:"powerState"`
	// The current deployment or provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID for Proximity Placement Group.
	ProximityPlacementGroupID *string `pulumi:"proximityPlacementGroupID"`
	// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
	ScaleDownMode *string `pulumi:"scaleDownMode"`
	// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
	ScaleSetEvictionPolicy *string `pulumi:"scaleSetEvictionPolicy"`
	// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
	ScaleSetPriority *string `pulumi:"scaleSetPriority"`
	// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
	SpotMaxPrice *float64 `pulumi:"spotMaxPrice"`
	// The tags to be persisted on the agent pool virtual machine scale set.
	Tags map[string]string `pulumi:"tags"`
	// The type of Agent Pool.
	Type *string `pulumi:"type"`
	// Settings for upgrading the agentpool
	UpgradeSettings *AgentPoolUpgradeSettingsResponse `pulumi:"upgradeSettings"`
	// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
	VmSize *string `pulumi:"vmSize"`
	// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
	VnetSubnetID *string `pulumi:"vnetSubnetID"`
	// Determines the type of workload a node can run.
	WorkloadRuntime *string `pulumi:"workloadRuntime"`
}

// Profile for the container service agent pool.
type ManagedClusterAgentPoolProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutput() ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseOutput) ToManagedClusterAgentPoolProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseOutput {
	return o
}

// The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
func (o ManagedClusterAgentPoolProfileResponseOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// AKS will associate the specified agent pool with the Capacity Reservation Group.
func (o ManagedClusterAgentPoolProfileResponseOutput) CapacityReservationGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.CapacityReservationGroupID }).(pulumi.StringPtrOutput)
}

// Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
func (o ManagedClusterAgentPoolProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.
func (o ManagedClusterAgentPoolProfileResponseOutput) CreationData() CreationDataResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *CreationDataResponse { return v.CreationData }).(CreationDataResponsePtrOutput)
}

// If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
func (o ManagedClusterAgentPoolProfileResponseOutput) CurrentOrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.CurrentOrchestratorVersion }).(pulumi.StringPtrOutput)
}

// Whether to enable auto-scaler
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableAutoScaling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableAutoScaling }).(pulumi.BoolPtrOutput)
}

// When set to true, AKS deploys a daemonset and host services to sync custom certificate authorities from a user-provided config map into node trust stores. Defaults to false.
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableCustomCATrust() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableCustomCATrust }).(pulumi.BoolPtrOutput)
}

// This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableEncryptionAtHost() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableEncryptionAtHost }).(pulumi.BoolPtrOutput)
}

// See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableFIPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableFIPS }).(pulumi.BoolPtrOutput)
}

// Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableNodePublicIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableNodePublicIP }).(pulumi.BoolPtrOutput)
}

// Whether to enable UltraSSD
func (o ManagedClusterAgentPoolProfileResponseOutput) EnableUltraSSD() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *bool { return v.EnableUltraSSD }).(pulumi.BoolPtrOutput)
}

// GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
func (o ManagedClusterAgentPoolProfileResponseOutput) GpuInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.GpuInstanceProfile }).(pulumi.StringPtrOutput)
}

// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
func (o ManagedClusterAgentPoolProfileResponseOutput) HostGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.HostGroupID }).(pulumi.StringPtrOutput)
}

// The Kubelet configuration on the agent pool nodes.
func (o ManagedClusterAgentPoolProfileResponseOutput) KubeletConfig() KubeletConfigResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *KubeletConfigResponse { return v.KubeletConfig }).(KubeletConfigResponsePtrOutput)
}

// Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
func (o ManagedClusterAgentPoolProfileResponseOutput) KubeletDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.KubeletDiskType }).(pulumi.StringPtrOutput)
}

// The OS configuration of Linux agent nodes.
func (o ManagedClusterAgentPoolProfileResponseOutput) LinuxOSConfig() LinuxOSConfigResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *LinuxOSConfigResponse { return v.LinuxOSConfig }).(LinuxOSConfigResponsePtrOutput)
}

// The maximum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The maximum number of pods that can run on a node.
func (o ManagedClusterAgentPoolProfileResponseOutput) MaxPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MaxPods }).(pulumi.IntPtrOutput)
}

// A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
func (o ManagedClusterAgentPoolProfileResponseOutput) MessageOfTheDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.MessageOfTheDay }).(pulumi.StringPtrOutput)
}

// The minimum number of nodes for auto-scaling
func (o ManagedClusterAgentPoolProfileResponseOutput) MinCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.MinCount }).(pulumi.IntPtrOutput)
}

// A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
func (o ManagedClusterAgentPoolProfileResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Windows agent pool names must be 6 characters or less.
func (o ManagedClusterAgentPoolProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The version of node image
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.NodeImageVersion }).(pulumi.StringOutput)
}

// The node labels to be persisted across all nodes in agent pool.
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) map[string]string { return v.NodeLabels }).(pulumi.StringMapOutput)
}

// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
func (o ManagedClusterAgentPoolProfileResponseOutput) NodePublicIPPrefixID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.NodePublicIPPrefixID }).(pulumi.StringPtrOutput)
}

// The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
func (o ManagedClusterAgentPoolProfileResponseOutput) NodeTaints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) []string { return v.NodeTaints }).(pulumi.StringArrayOutput)
}

// Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
func (o ManagedClusterAgentPoolProfileResponseOutput) OrchestratorVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OrchestratorVersion }).(pulumi.StringPtrOutput)
}

// OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsDiskSizeGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *int { return v.OsDiskSizeGB }).(pulumi.IntPtrOutput)
}

// The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
func (o ManagedClusterAgentPoolProfileResponseOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

// Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsSKU() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OsSKU }).(pulumi.StringPtrOutput)
}

// The operating system type. The default is Linux.
func (o ManagedClusterAgentPoolProfileResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
func (o ManagedClusterAgentPoolProfileResponseOutput) PodSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.PodSubnetID }).(pulumi.StringPtrOutput)
}

// When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded
func (o ManagedClusterAgentPoolProfileResponseOutput) PowerState() PowerStateResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *PowerStateResponse { return v.PowerState }).(PowerStateResponsePtrOutput)
}

// The current deployment or provisioning state.
func (o ManagedClusterAgentPoolProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID for Proximity Placement Group.
func (o ManagedClusterAgentPoolProfileResponseOutput) ProximityPlacementGroupID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ProximityPlacementGroupID }).(pulumi.StringPtrOutput)
}

// This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleDownMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleDownMode }).(pulumi.StringPtrOutput)
}

// This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetEvictionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetEvictionPolicy }).(pulumi.StringPtrOutput)
}

// The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
func (o ManagedClusterAgentPoolProfileResponseOutput) ScaleSetPriority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.ScaleSetPriority }).(pulumi.StringPtrOutput)
}

// Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
func (o ManagedClusterAgentPoolProfileResponseOutput) SpotMaxPrice() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *float64 { return v.SpotMaxPrice }).(pulumi.Float64PtrOutput)
}

// The tags to be persisted on the agent pool virtual machine scale set.
func (o ManagedClusterAgentPoolProfileResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Agent Pool.
func (o ManagedClusterAgentPoolProfileResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Settings for upgrading the agentpool
func (o ManagedClusterAgentPoolProfileResponseOutput) UpgradeSettings() AgentPoolUpgradeSettingsResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *AgentPoolUpgradeSettingsResponse {
		return v.UpgradeSettings
	}).(AgentPoolUpgradeSettingsResponsePtrOutput)
}

// VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
func (o ManagedClusterAgentPoolProfileResponseOutput) VmSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VmSize }).(pulumi.StringPtrOutput)
}

// If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
func (o ManagedClusterAgentPoolProfileResponseOutput) VnetSubnetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.VnetSubnetID }).(pulumi.StringPtrOutput)
}

// Determines the type of workload a node can run.
func (o ManagedClusterAgentPoolProfileResponseOutput) WorkloadRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAgentPoolProfileResponse) *string { return v.WorkloadRuntime }).(pulumi.StringPtrOutput)
}

type ManagedClusterAgentPoolProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterAgentPoolProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterAgentPoolProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutput() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) ToManagedClusterAgentPoolProfileResponseArrayOutputWithContext(ctx context.Context) ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o
}

func (o ManagedClusterAgentPoolProfileResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterAgentPoolProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterAgentPoolProfileResponse {
		return vs[0].([]ManagedClusterAgentPoolProfileResponse)[vs[1].(int)]
	}).(ManagedClusterAgentPoolProfileResponseOutput)
}

// Auto upgrade profile for a managed cluster.
type ManagedClusterAutoUpgradeProfile struct {
	// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	UpgradeChannel *string `pulumi:"upgradeChannel"`
}

// ManagedClusterAutoUpgradeProfileInput is an input type that accepts ManagedClusterAutoUpgradeProfileArgs and ManagedClusterAutoUpgradeProfileOutput values.
// You can construct a concrete instance of `ManagedClusterAutoUpgradeProfileInput` via:
//
//	ManagedClusterAutoUpgradeProfileArgs{...}
type ManagedClusterAutoUpgradeProfileInput interface {
	pulumi.Input

	ToManagedClusterAutoUpgradeProfileOutput() ManagedClusterAutoUpgradeProfileOutput
	ToManagedClusterAutoUpgradeProfileOutputWithContext(context.Context) ManagedClusterAutoUpgradeProfileOutput
}

// Auto upgrade profile for a managed cluster.
type ManagedClusterAutoUpgradeProfileArgs struct {
	// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	UpgradeChannel pulumi.StringPtrInput `pulumi:"upgradeChannel"`
}

func (ManagedClusterAutoUpgradeProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAutoUpgradeProfile)(nil)).Elem()
}

func (i ManagedClusterAutoUpgradeProfileArgs) ToManagedClusterAutoUpgradeProfileOutput() ManagedClusterAutoUpgradeProfileOutput {
	return i.ToManagedClusterAutoUpgradeProfileOutputWithContext(context.Background())
}

func (i ManagedClusterAutoUpgradeProfileArgs) ToManagedClusterAutoUpgradeProfileOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAutoUpgradeProfileOutput)
}

func (i ManagedClusterAutoUpgradeProfileArgs) ToManagedClusterAutoUpgradeProfilePtrOutput() ManagedClusterAutoUpgradeProfilePtrOutput {
	return i.ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterAutoUpgradeProfileArgs) ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAutoUpgradeProfileOutput).ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(ctx)
}

// ManagedClusterAutoUpgradeProfilePtrInput is an input type that accepts ManagedClusterAutoUpgradeProfileArgs, ManagedClusterAutoUpgradeProfilePtr and ManagedClusterAutoUpgradeProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterAutoUpgradeProfilePtrInput` via:
//
//	        ManagedClusterAutoUpgradeProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterAutoUpgradeProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterAutoUpgradeProfilePtrOutput() ManagedClusterAutoUpgradeProfilePtrOutput
	ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(context.Context) ManagedClusterAutoUpgradeProfilePtrOutput
}

type managedClusterAutoUpgradeProfilePtrType ManagedClusterAutoUpgradeProfileArgs

func ManagedClusterAutoUpgradeProfilePtr(v *ManagedClusterAutoUpgradeProfileArgs) ManagedClusterAutoUpgradeProfilePtrInput {
	return (*managedClusterAutoUpgradeProfilePtrType)(v)
}

func (*managedClusterAutoUpgradeProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAutoUpgradeProfile)(nil)).Elem()
}

func (i *managedClusterAutoUpgradeProfilePtrType) ToManagedClusterAutoUpgradeProfilePtrOutput() ManagedClusterAutoUpgradeProfilePtrOutput {
	return i.ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterAutoUpgradeProfilePtrType) ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterAutoUpgradeProfilePtrOutput)
}

// Auto upgrade profile for a managed cluster.
type ManagedClusterAutoUpgradeProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterAutoUpgradeProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAutoUpgradeProfile)(nil)).Elem()
}

func (o ManagedClusterAutoUpgradeProfileOutput) ToManagedClusterAutoUpgradeProfileOutput() ManagedClusterAutoUpgradeProfileOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfileOutput) ToManagedClusterAutoUpgradeProfileOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfileOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfileOutput) ToManagedClusterAutoUpgradeProfilePtrOutput() ManagedClusterAutoUpgradeProfilePtrOutput {
	return o.ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterAutoUpgradeProfileOutput) ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterAutoUpgradeProfile) *ManagedClusterAutoUpgradeProfile {
		return &v
	}).(ManagedClusterAutoUpgradeProfilePtrOutput)
}

// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
func (o ManagedClusterAutoUpgradeProfileOutput) UpgradeChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAutoUpgradeProfile) *string { return v.UpgradeChannel }).(pulumi.StringPtrOutput)
}

type ManagedClusterAutoUpgradeProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAutoUpgradeProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAutoUpgradeProfile)(nil)).Elem()
}

func (o ManagedClusterAutoUpgradeProfilePtrOutput) ToManagedClusterAutoUpgradeProfilePtrOutput() ManagedClusterAutoUpgradeProfilePtrOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfilePtrOutput) ToManagedClusterAutoUpgradeProfilePtrOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfilePtrOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfilePtrOutput) Elem() ManagedClusterAutoUpgradeProfileOutput {
	return o.ApplyT(func(v *ManagedClusterAutoUpgradeProfile) ManagedClusterAutoUpgradeProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAutoUpgradeProfile
		return ret
	}).(ManagedClusterAutoUpgradeProfileOutput)
}

// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
func (o ManagedClusterAutoUpgradeProfilePtrOutput) UpgradeChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAutoUpgradeProfile) *string {
		if v == nil {
			return nil
		}
		return v.UpgradeChannel
	}).(pulumi.StringPtrOutput)
}

// Auto upgrade profile for a managed cluster.
type ManagedClusterAutoUpgradeProfileResponse struct {
	// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
	UpgradeChannel *string `pulumi:"upgradeChannel"`
}

// Auto upgrade profile for a managed cluster.
type ManagedClusterAutoUpgradeProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterAutoUpgradeProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterAutoUpgradeProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAutoUpgradeProfileResponseOutput) ToManagedClusterAutoUpgradeProfileResponseOutput() ManagedClusterAutoUpgradeProfileResponseOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfileResponseOutput) ToManagedClusterAutoUpgradeProfileResponseOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfileResponseOutput {
	return o
}

// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
func (o ManagedClusterAutoUpgradeProfileResponseOutput) UpgradeChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterAutoUpgradeProfileResponse) *string { return v.UpgradeChannel }).(pulumi.StringPtrOutput)
}

type ManagedClusterAutoUpgradeProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterAutoUpgradeProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterAutoUpgradeProfileResponse)(nil)).Elem()
}

func (o ManagedClusterAutoUpgradeProfileResponsePtrOutput) ToManagedClusterAutoUpgradeProfileResponsePtrOutput() ManagedClusterAutoUpgradeProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfileResponsePtrOutput) ToManagedClusterAutoUpgradeProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterAutoUpgradeProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterAutoUpgradeProfileResponsePtrOutput) Elem() ManagedClusterAutoUpgradeProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterAutoUpgradeProfileResponse) ManagedClusterAutoUpgradeProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterAutoUpgradeProfileResponse
		return ret
	}).(ManagedClusterAutoUpgradeProfileResponseOutput)
}

// For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).
func (o ManagedClusterAutoUpgradeProfileResponsePtrOutput) UpgradeChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterAutoUpgradeProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.UpgradeChannel
	}).(pulumi.StringPtrOutput)
}

// Cluster HTTP proxy configuration.
type ManagedClusterHTTPProxyConfig struct {
	// The HTTP proxy server endpoint to use.
	HttpProxy *string `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy []string `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa *string `pulumi:"trustedCa"`
}

// ManagedClusterHTTPProxyConfigInput is an input type that accepts ManagedClusterHTTPProxyConfigArgs and ManagedClusterHTTPProxyConfigOutput values.
// You can construct a concrete instance of `ManagedClusterHTTPProxyConfigInput` via:
//
//	ManagedClusterHTTPProxyConfigArgs{...}
type ManagedClusterHTTPProxyConfigInput interface {
	pulumi.Input

	ToManagedClusterHTTPProxyConfigOutput() ManagedClusterHTTPProxyConfigOutput
	ToManagedClusterHTTPProxyConfigOutputWithContext(context.Context) ManagedClusterHTTPProxyConfigOutput
}

// Cluster HTTP proxy configuration.
type ManagedClusterHTTPProxyConfigArgs struct {
	// The HTTP proxy server endpoint to use.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy pulumi.StringArrayInput `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa pulumi.StringPtrInput `pulumi:"trustedCa"`
}

func (ManagedClusterHTTPProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterHTTPProxyConfig)(nil)).Elem()
}

func (i ManagedClusterHTTPProxyConfigArgs) ToManagedClusterHTTPProxyConfigOutput() ManagedClusterHTTPProxyConfigOutput {
	return i.ToManagedClusterHTTPProxyConfigOutputWithContext(context.Background())
}

func (i ManagedClusterHTTPProxyConfigArgs) ToManagedClusterHTTPProxyConfigOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterHTTPProxyConfigOutput)
}

func (i ManagedClusterHTTPProxyConfigArgs) ToManagedClusterHTTPProxyConfigPtrOutput() ManagedClusterHTTPProxyConfigPtrOutput {
	return i.ToManagedClusterHTTPProxyConfigPtrOutputWithContext(context.Background())
}

func (i ManagedClusterHTTPProxyConfigArgs) ToManagedClusterHTTPProxyConfigPtrOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterHTTPProxyConfigOutput).ToManagedClusterHTTPProxyConfigPtrOutputWithContext(ctx)
}

// ManagedClusterHTTPProxyConfigPtrInput is an input type that accepts ManagedClusterHTTPProxyConfigArgs, ManagedClusterHTTPProxyConfigPtr and ManagedClusterHTTPProxyConfigPtrOutput values.
// You can construct a concrete instance of `ManagedClusterHTTPProxyConfigPtrInput` via:
//
//	        ManagedClusterHTTPProxyConfigArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterHTTPProxyConfigPtrInput interface {
	pulumi.Input

	ToManagedClusterHTTPProxyConfigPtrOutput() ManagedClusterHTTPProxyConfigPtrOutput
	ToManagedClusterHTTPProxyConfigPtrOutputWithContext(context.Context) ManagedClusterHTTPProxyConfigPtrOutput
}

type managedClusterHTTPProxyConfigPtrType ManagedClusterHTTPProxyConfigArgs

func ManagedClusterHTTPProxyConfigPtr(v *ManagedClusterHTTPProxyConfigArgs) ManagedClusterHTTPProxyConfigPtrInput {
	return (*managedClusterHTTPProxyConfigPtrType)(v)
}

func (*managedClusterHTTPProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterHTTPProxyConfig)(nil)).Elem()
}

func (i *managedClusterHTTPProxyConfigPtrType) ToManagedClusterHTTPProxyConfigPtrOutput() ManagedClusterHTTPProxyConfigPtrOutput {
	return i.ToManagedClusterHTTPProxyConfigPtrOutputWithContext(context.Background())
}

func (i *managedClusterHTTPProxyConfigPtrType) ToManagedClusterHTTPProxyConfigPtrOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterHTTPProxyConfigPtrOutput)
}

// Cluster HTTP proxy configuration.
type ManagedClusterHTTPProxyConfigOutput struct{ *pulumi.OutputState }

func (ManagedClusterHTTPProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterHTTPProxyConfig)(nil)).Elem()
}

func (o ManagedClusterHTTPProxyConfigOutput) ToManagedClusterHTTPProxyConfigOutput() ManagedClusterHTTPProxyConfigOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigOutput) ToManagedClusterHTTPProxyConfigOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigOutput) ToManagedClusterHTTPProxyConfigPtrOutput() ManagedClusterHTTPProxyConfigPtrOutput {
	return o.ToManagedClusterHTTPProxyConfigPtrOutputWithContext(context.Background())
}

func (o ManagedClusterHTTPProxyConfigOutput) ToManagedClusterHTTPProxyConfigPtrOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterHTTPProxyConfig) *ManagedClusterHTTPProxyConfig {
		return &v
	}).(ManagedClusterHTTPProxyConfigPtrOutput)
}

// The HTTP proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfig) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfig) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o ManagedClusterHTTPProxyConfigOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfig) []string { return v.NoProxy }).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o ManagedClusterHTTPProxyConfigOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfig) *string { return v.TrustedCa }).(pulumi.StringPtrOutput)
}

type ManagedClusterHTTPProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterHTTPProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterHTTPProxyConfig)(nil)).Elem()
}

func (o ManagedClusterHTTPProxyConfigPtrOutput) ToManagedClusterHTTPProxyConfigPtrOutput() ManagedClusterHTTPProxyConfigPtrOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigPtrOutput) ToManagedClusterHTTPProxyConfigPtrOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigPtrOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigPtrOutput) Elem() ManagedClusterHTTPProxyConfigOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfig) ManagedClusterHTTPProxyConfig {
		if v != nil {
			return *v
		}
		var ret ManagedClusterHTTPProxyConfig
		return ret
	}).(ManagedClusterHTTPProxyConfigOutput)
}

// The HTTP proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o ManagedClusterHTTPProxyConfigPtrOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfig) []string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o ManagedClusterHTTPProxyConfigPtrOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCa
	}).(pulumi.StringPtrOutput)
}

// Cluster HTTP proxy configuration.
type ManagedClusterHTTPProxyConfigResponse struct {
	// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy and values injected by AKS.
	EffectiveNoProxy []string `pulumi:"effectiveNoProxy"`
	// The HTTP proxy server endpoint to use.
	HttpProxy *string `pulumi:"httpProxy"`
	// The HTTPS proxy server endpoint to use.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// The endpoints that should not go through proxy.
	NoProxy []string `pulumi:"noProxy"`
	// Alternative CA cert to use for connecting to proxy servers.
	TrustedCa *string `pulumi:"trustedCa"`
}

// Cluster HTTP proxy configuration.
type ManagedClusterHTTPProxyConfigResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterHTTPProxyConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterHTTPProxyConfigResponse)(nil)).Elem()
}

func (o ManagedClusterHTTPProxyConfigResponseOutput) ToManagedClusterHTTPProxyConfigResponseOutput() ManagedClusterHTTPProxyConfigResponseOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigResponseOutput) ToManagedClusterHTTPProxyConfigResponseOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigResponseOutput {
	return o
}

// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy and values injected by AKS.
func (o ManagedClusterHTTPProxyConfigResponseOutput) EffectiveNoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfigResponse) []string { return v.EffectiveNoProxy }).(pulumi.StringArrayOutput)
}

// The HTTP proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigResponseOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfigResponse) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigResponseOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfigResponse) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o ManagedClusterHTTPProxyConfigResponseOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfigResponse) []string { return v.NoProxy }).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o ManagedClusterHTTPProxyConfigResponseOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterHTTPProxyConfigResponse) *string { return v.TrustedCa }).(pulumi.StringPtrOutput)
}

type ManagedClusterHTTPProxyConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterHTTPProxyConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterHTTPProxyConfigResponse)(nil)).Elem()
}

func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) ToManagedClusterHTTPProxyConfigResponsePtrOutput() ManagedClusterHTTPProxyConfigResponsePtrOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) ToManagedClusterHTTPProxyConfigResponsePtrOutputWithContext(ctx context.Context) ManagedClusterHTTPProxyConfigResponsePtrOutput {
	return o
}

func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) Elem() ManagedClusterHTTPProxyConfigResponseOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) ManagedClusterHTTPProxyConfigResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterHTTPProxyConfigResponse
		return ret
	}).(ManagedClusterHTTPProxyConfigResponseOutput)
}

// A read-only list of all endpoints for which traffic should not be sent to the proxy. This list is a superset of noProxy and values injected by AKS.
func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) EffectiveNoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.EffectiveNoProxy
	}).(pulumi.StringArrayOutput)
}

// The HTTP proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// The HTTPS proxy server endpoint to use.
func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// The endpoints that should not go through proxy.
func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) NoProxy() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.NoProxy
	}).(pulumi.StringArrayOutput)
}

// Alternative CA cert to use for connecting to proxy servers.
func (o ManagedClusterHTTPProxyConfigResponsePtrOutput) TrustedCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterHTTPProxyConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TrustedCa
	}).(pulumi.StringPtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentity struct {
	// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
	Type *ResourceIdentityType `pulumi:"type"`
	// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ManagedClusterIdentityInput is an input type that accepts ManagedClusterIdentityArgs and ManagedClusterIdentityOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityInput` via:
//
//	ManagedClusterIdentityArgs{...}
type ManagedClusterIdentityInput interface {
	pulumi.Input

	ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput
	ToManagedClusterIdentityOutputWithContext(context.Context) ManagedClusterIdentityOutput
}

// Identity for the managed cluster.
type ManagedClusterIdentityArgs struct {
	// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return i.ToManagedClusterIdentityOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput)
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedClusterIdentityArgs) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityOutput).ToManagedClusterIdentityPtrOutputWithContext(ctx)
}

// ManagedClusterIdentityPtrInput is an input type that accepts ManagedClusterIdentityArgs, ManagedClusterIdentityPtr and ManagedClusterIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedClusterIdentityPtrInput` via:
//
//	        ManagedClusterIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterIdentityPtrInput interface {
	pulumi.Input

	ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput
	ToManagedClusterIdentityPtrOutputWithContext(context.Context) ManagedClusterIdentityPtrOutput
}

type managedClusterIdentityPtrType ManagedClusterIdentityArgs

func ManagedClusterIdentityPtr(v *ManagedClusterIdentityArgs) ManagedClusterIdentityPtrInput {
	return (*managedClusterIdentityPtrType)(v)
}

func (*managedClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return i.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *managedClusterIdentityPtrType) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIdentityPtrOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutput() ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityOutputWithContext(ctx context.Context) ManagedClusterIdentityOutput {
	return o
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o.ToManagedClusterIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedClusterIdentityOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterIdentity) *ManagedClusterIdentity {
		return &v
	}).(ManagedClusterIdentityPtrOutput)
}

// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
func (o ManagedClusterIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ManagedClusterIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ManagedClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentity)(nil)).Elem()
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutput() ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) ToManagedClusterIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterIdentityPtrOutput {
	return o
}

func (o ManagedClusterIdentityPtrOutput) Elem() ManagedClusterIdentityOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) ManagedClusterIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIdentity
		return ret
	}).(ManagedClusterIdentityOutput)
}

// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
func (o ManagedClusterIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedClusterIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponse struct {
	// The principal id of the system assigned identity which is used by master components.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity which is used by master components.
	TenantId string `pulumi:"tenantId"`
	// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
	Type *string `pulumi:"type"`
	// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]ManagedClusterIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// Identity for the managed cluster.
type ManagedClusterIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutput() ManagedClusterIdentityResponseOutput {
	return o
}

func (o ManagedClusterIdentityResponseOutput) ToManagedClusterIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseOutput {
	return o
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
func (o ManagedClusterIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityResponseOutput) UserAssignedIdentities() ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponse) map[string]ManagedClusterIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedClusterIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutput() ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) ToManagedClusterIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterIdentityResponsePtrOutput) Elem() ManagedClusterIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) ManagedClusterIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIdentityResponse
		return ret
	}).(ManagedClusterIdentityResponseOutput)
}

// The principal id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity which is used by master components.
func (o ManagedClusterIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).
func (o ManagedClusterIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedClusterIdentityResponsePtrOutput) UserAssignedIdentities() ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedClusterIdentityResponse) map[string]ManagedClusterIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedClusterIdentityResponseUserAssignedIdentities struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

type ManagedClusterIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedClusterIdentityResponseUserAssignedIdentitiesOutput) ToManagedClusterIdentityResponseUserAssignedIdentitiesOutput() ManagedClusterIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedClusterIdentityResponseUserAssignedIdentitiesOutput) ToManagedClusterIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// The client id of user assigned identity.
func (o ManagedClusterIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o ManagedClusterIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedClusterIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput() ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedClusterIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedClusterIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedClusterIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedClusterIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedClusterIdentityResponseUserAssignedIdentitiesOutput)
}

// Ingress profile for the container service cluster.
type ManagedClusterIngressProfile struct {
	// Web App Routing settings for the ingress profile.
	WebAppRouting *ManagedClusterIngressProfileWebAppRouting `pulumi:"webAppRouting"`
}

// ManagedClusterIngressProfileInput is an input type that accepts ManagedClusterIngressProfileArgs and ManagedClusterIngressProfileOutput values.
// You can construct a concrete instance of `ManagedClusterIngressProfileInput` via:
//
//	ManagedClusterIngressProfileArgs{...}
type ManagedClusterIngressProfileInput interface {
	pulumi.Input

	ToManagedClusterIngressProfileOutput() ManagedClusterIngressProfileOutput
	ToManagedClusterIngressProfileOutputWithContext(context.Context) ManagedClusterIngressProfileOutput
}

// Ingress profile for the container service cluster.
type ManagedClusterIngressProfileArgs struct {
	// Web App Routing settings for the ingress profile.
	WebAppRouting ManagedClusterIngressProfileWebAppRoutingPtrInput `pulumi:"webAppRouting"`
}

func (ManagedClusterIngressProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfile)(nil)).Elem()
}

func (i ManagedClusterIngressProfileArgs) ToManagedClusterIngressProfileOutput() ManagedClusterIngressProfileOutput {
	return i.ToManagedClusterIngressProfileOutputWithContext(context.Background())
}

func (i ManagedClusterIngressProfileArgs) ToManagedClusterIngressProfileOutputWithContext(ctx context.Context) ManagedClusterIngressProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfileOutput)
}

func (i ManagedClusterIngressProfileArgs) ToManagedClusterIngressProfilePtrOutput() ManagedClusterIngressProfilePtrOutput {
	return i.ToManagedClusterIngressProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterIngressProfileArgs) ToManagedClusterIngressProfilePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfileOutput).ToManagedClusterIngressProfilePtrOutputWithContext(ctx)
}

// ManagedClusterIngressProfilePtrInput is an input type that accepts ManagedClusterIngressProfileArgs, ManagedClusterIngressProfilePtr and ManagedClusterIngressProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterIngressProfilePtrInput` via:
//
//	        ManagedClusterIngressProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterIngressProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterIngressProfilePtrOutput() ManagedClusterIngressProfilePtrOutput
	ToManagedClusterIngressProfilePtrOutputWithContext(context.Context) ManagedClusterIngressProfilePtrOutput
}

type managedClusterIngressProfilePtrType ManagedClusterIngressProfileArgs

func ManagedClusterIngressProfilePtr(v *ManagedClusterIngressProfileArgs) ManagedClusterIngressProfilePtrInput {
	return (*managedClusterIngressProfilePtrType)(v)
}

func (*managedClusterIngressProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfile)(nil)).Elem()
}

func (i *managedClusterIngressProfilePtrType) ToManagedClusterIngressProfilePtrOutput() ManagedClusterIngressProfilePtrOutput {
	return i.ToManagedClusterIngressProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterIngressProfilePtrType) ToManagedClusterIngressProfilePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfilePtrOutput)
}

// Ingress profile for the container service cluster.
type ManagedClusterIngressProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfile)(nil)).Elem()
}

func (o ManagedClusterIngressProfileOutput) ToManagedClusterIngressProfileOutput() ManagedClusterIngressProfileOutput {
	return o
}

func (o ManagedClusterIngressProfileOutput) ToManagedClusterIngressProfileOutputWithContext(ctx context.Context) ManagedClusterIngressProfileOutput {
	return o
}

func (o ManagedClusterIngressProfileOutput) ToManagedClusterIngressProfilePtrOutput() ManagedClusterIngressProfilePtrOutput {
	return o.ToManagedClusterIngressProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterIngressProfileOutput) ToManagedClusterIngressProfilePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterIngressProfile) *ManagedClusterIngressProfile {
		return &v
	}).(ManagedClusterIngressProfilePtrOutput)
}

// Web App Routing settings for the ingress profile.
func (o ManagedClusterIngressProfileOutput) WebAppRouting() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfile) *ManagedClusterIngressProfileWebAppRouting {
		return v.WebAppRouting
	}).(ManagedClusterIngressProfileWebAppRoutingPtrOutput)
}

type ManagedClusterIngressProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfile)(nil)).Elem()
}

func (o ManagedClusterIngressProfilePtrOutput) ToManagedClusterIngressProfilePtrOutput() ManagedClusterIngressProfilePtrOutput {
	return o
}

func (o ManagedClusterIngressProfilePtrOutput) ToManagedClusterIngressProfilePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfilePtrOutput {
	return o
}

func (o ManagedClusterIngressProfilePtrOutput) Elem() ManagedClusterIngressProfileOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfile) ManagedClusterIngressProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIngressProfile
		return ret
	}).(ManagedClusterIngressProfileOutput)
}

// Web App Routing settings for the ingress profile.
func (o ManagedClusterIngressProfilePtrOutput) WebAppRouting() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfile) *ManagedClusterIngressProfileWebAppRouting {
		if v == nil {
			return nil
		}
		return v.WebAppRouting
	}).(ManagedClusterIngressProfileWebAppRoutingPtrOutput)
}

// Ingress profile for the container service cluster.
type ManagedClusterIngressProfileResponse struct {
	// Web App Routing settings for the ingress profile.
	WebAppRouting *ManagedClusterIngressProfileWebAppRoutingResponse `pulumi:"webAppRouting"`
}

// Ingress profile for the container service cluster.
type ManagedClusterIngressProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfileResponse)(nil)).Elem()
}

func (o ManagedClusterIngressProfileResponseOutput) ToManagedClusterIngressProfileResponseOutput() ManagedClusterIngressProfileResponseOutput {
	return o
}

func (o ManagedClusterIngressProfileResponseOutput) ToManagedClusterIngressProfileResponseOutputWithContext(ctx context.Context) ManagedClusterIngressProfileResponseOutput {
	return o
}

// Web App Routing settings for the ingress profile.
func (o ManagedClusterIngressProfileResponseOutput) WebAppRouting() ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfileResponse) *ManagedClusterIngressProfileWebAppRoutingResponse {
		return v.WebAppRouting
	}).(ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput)
}

type ManagedClusterIngressProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfileResponse)(nil)).Elem()
}

func (o ManagedClusterIngressProfileResponsePtrOutput) ToManagedClusterIngressProfileResponsePtrOutput() ManagedClusterIngressProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterIngressProfileResponsePtrOutput) ToManagedClusterIngressProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterIngressProfileResponsePtrOutput) Elem() ManagedClusterIngressProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileResponse) ManagedClusterIngressProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIngressProfileResponse
		return ret
	}).(ManagedClusterIngressProfileResponseOutput)
}

// Web App Routing settings for the ingress profile.
func (o ManagedClusterIngressProfileResponsePtrOutput) WebAppRouting() ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileResponse) *ManagedClusterIngressProfileWebAppRoutingResponse {
		if v == nil {
			return nil
		}
		return v.WebAppRouting
	}).(ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput)
}

// Web App Routing settings for the ingress profile.
type ManagedClusterIngressProfileWebAppRouting struct {
	// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
	DnsZoneResourceId *string `pulumi:"dnsZoneResourceId"`
	// Whether to enable Web App Routing.
	Enabled *bool `pulumi:"enabled"`
}

// ManagedClusterIngressProfileWebAppRoutingInput is an input type that accepts ManagedClusterIngressProfileWebAppRoutingArgs and ManagedClusterIngressProfileWebAppRoutingOutput values.
// You can construct a concrete instance of `ManagedClusterIngressProfileWebAppRoutingInput` via:
//
//	ManagedClusterIngressProfileWebAppRoutingArgs{...}
type ManagedClusterIngressProfileWebAppRoutingInput interface {
	pulumi.Input

	ToManagedClusterIngressProfileWebAppRoutingOutput() ManagedClusterIngressProfileWebAppRoutingOutput
	ToManagedClusterIngressProfileWebAppRoutingOutputWithContext(context.Context) ManagedClusterIngressProfileWebAppRoutingOutput
}

// Web App Routing settings for the ingress profile.
type ManagedClusterIngressProfileWebAppRoutingArgs struct {
	// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
	DnsZoneResourceId pulumi.StringPtrInput `pulumi:"dnsZoneResourceId"`
	// Whether to enable Web App Routing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedClusterIngressProfileWebAppRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfileWebAppRouting)(nil)).Elem()
}

func (i ManagedClusterIngressProfileWebAppRoutingArgs) ToManagedClusterIngressProfileWebAppRoutingOutput() ManagedClusterIngressProfileWebAppRoutingOutput {
	return i.ToManagedClusterIngressProfileWebAppRoutingOutputWithContext(context.Background())
}

func (i ManagedClusterIngressProfileWebAppRoutingArgs) ToManagedClusterIngressProfileWebAppRoutingOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfileWebAppRoutingOutput)
}

func (i ManagedClusterIngressProfileWebAppRoutingArgs) ToManagedClusterIngressProfileWebAppRoutingPtrOutput() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return i.ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(context.Background())
}

func (i ManagedClusterIngressProfileWebAppRoutingArgs) ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfileWebAppRoutingOutput).ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(ctx)
}

// ManagedClusterIngressProfileWebAppRoutingPtrInput is an input type that accepts ManagedClusterIngressProfileWebAppRoutingArgs, ManagedClusterIngressProfileWebAppRoutingPtr and ManagedClusterIngressProfileWebAppRoutingPtrOutput values.
// You can construct a concrete instance of `ManagedClusterIngressProfileWebAppRoutingPtrInput` via:
//
//	        ManagedClusterIngressProfileWebAppRoutingArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterIngressProfileWebAppRoutingPtrInput interface {
	pulumi.Input

	ToManagedClusterIngressProfileWebAppRoutingPtrOutput() ManagedClusterIngressProfileWebAppRoutingPtrOutput
	ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(context.Context) ManagedClusterIngressProfileWebAppRoutingPtrOutput
}

type managedClusterIngressProfileWebAppRoutingPtrType ManagedClusterIngressProfileWebAppRoutingArgs

func ManagedClusterIngressProfileWebAppRoutingPtr(v *ManagedClusterIngressProfileWebAppRoutingArgs) ManagedClusterIngressProfileWebAppRoutingPtrInput {
	return (*managedClusterIngressProfileWebAppRoutingPtrType)(v)
}

func (*managedClusterIngressProfileWebAppRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfileWebAppRouting)(nil)).Elem()
}

func (i *managedClusterIngressProfileWebAppRoutingPtrType) ToManagedClusterIngressProfileWebAppRoutingPtrOutput() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return i.ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(context.Background())
}

func (i *managedClusterIngressProfileWebAppRoutingPtrType) ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterIngressProfileWebAppRoutingPtrOutput)
}

// Web App Routing settings for the ingress profile.
type ManagedClusterIngressProfileWebAppRoutingOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileWebAppRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfileWebAppRouting)(nil)).Elem()
}

func (o ManagedClusterIngressProfileWebAppRoutingOutput) ToManagedClusterIngressProfileWebAppRoutingOutput() ManagedClusterIngressProfileWebAppRoutingOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingOutput) ToManagedClusterIngressProfileWebAppRoutingOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingOutput) ToManagedClusterIngressProfileWebAppRoutingPtrOutput() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o.ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(context.Background())
}

func (o ManagedClusterIngressProfileWebAppRoutingOutput) ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterIngressProfileWebAppRouting) *ManagedClusterIngressProfileWebAppRouting {
		return &v
	}).(ManagedClusterIngressProfileWebAppRoutingPtrOutput)
}

// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
func (o ManagedClusterIngressProfileWebAppRoutingOutput) DnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfileWebAppRouting) *string { return v.DnsZoneResourceId }).(pulumi.StringPtrOutput)
}

// Whether to enable Web App Routing.
func (o ManagedClusterIngressProfileWebAppRoutingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfileWebAppRouting) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterIngressProfileWebAppRoutingPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileWebAppRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfileWebAppRouting)(nil)).Elem()
}

func (o ManagedClusterIngressProfileWebAppRoutingPtrOutput) ToManagedClusterIngressProfileWebAppRoutingPtrOutput() ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingPtrOutput) ToManagedClusterIngressProfileWebAppRoutingPtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingPtrOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingPtrOutput) Elem() ManagedClusterIngressProfileWebAppRoutingOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRouting) ManagedClusterIngressProfileWebAppRouting {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIngressProfileWebAppRouting
		return ret
	}).(ManagedClusterIngressProfileWebAppRoutingOutput)
}

// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
func (o ManagedClusterIngressProfileWebAppRoutingPtrOutput) DnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRouting) *string {
		if v == nil {
			return nil
		}
		return v.DnsZoneResourceId
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Web App Routing.
func (o ManagedClusterIngressProfileWebAppRoutingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRouting) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Web App Routing settings for the ingress profile.
type ManagedClusterIngressProfileWebAppRoutingResponse struct {
	// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
	DnsZoneResourceId *string `pulumi:"dnsZoneResourceId"`
	// Whether to enable Web App Routing.
	Enabled *bool `pulumi:"enabled"`
}

// Web App Routing settings for the ingress profile.
type ManagedClusterIngressProfileWebAppRoutingResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileWebAppRoutingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterIngressProfileWebAppRoutingResponse)(nil)).Elem()
}

func (o ManagedClusterIngressProfileWebAppRoutingResponseOutput) ToManagedClusterIngressProfileWebAppRoutingResponseOutput() ManagedClusterIngressProfileWebAppRoutingResponseOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingResponseOutput) ToManagedClusterIngressProfileWebAppRoutingResponseOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingResponseOutput {
	return o
}

// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
func (o ManagedClusterIngressProfileWebAppRoutingResponseOutput) DnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfileWebAppRoutingResponse) *string { return v.DnsZoneResourceId }).(pulumi.StringPtrOutput)
}

// Whether to enable Web App Routing.
func (o ManagedClusterIngressProfileWebAppRoutingResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterIngressProfileWebAppRoutingResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterIngressProfileWebAppRoutingResponse)(nil)).Elem()
}

func (o ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) ToManagedClusterIngressProfileWebAppRoutingResponsePtrOutput() ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) ToManagedClusterIngressProfileWebAppRoutingResponsePtrOutputWithContext(ctx context.Context) ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput {
	return o
}

func (o ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) Elem() ManagedClusterIngressProfileWebAppRoutingResponseOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRoutingResponse) ManagedClusterIngressProfileWebAppRoutingResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterIngressProfileWebAppRoutingResponse
		return ret
	}).(ManagedClusterIngressProfileWebAppRoutingResponseOutput)
}

// Resource ID of the DNS Zone to be associated with the web app. Used only when Web App Routing is enabled.
func (o ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) DnsZoneResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRoutingResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsZoneResourceId
	}).(pulumi.StringPtrOutput)
}

// Whether to enable Web App Routing.
func (o ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterIngressProfileWebAppRoutingResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfile struct {
	// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReference `pulumi:"effectiveOutboundIPs"`
	// Enable multiple standard load balancers per AKS cluster or not.
	EnableMultipleStandardLoadBalancers *bool `pulumi:"enableMultipleStandardLoadBalancers"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileManagedOutboundIPs `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileOutboundIPPrefixes `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileOutboundIPs `pulumi:"outboundIPs"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfile
func (val *ManagedClusterLoadBalancerProfile) Defaults() *ManagedClusterLoadBalancerProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AllocatedOutboundPorts) {
		allocatedOutboundPorts_ := 0
		tmp.AllocatedOutboundPorts = &allocatedOutboundPorts_
	}
	if isZero(tmp.IdleTimeoutInMinutes) {
		idleTimeoutInMinutes_ := 30
		tmp.IdleTimeoutInMinutes = &idleTimeoutInMinutes_
	}
	tmp.ManagedOutboundIPs = tmp.ManagedOutboundIPs.Defaults()

	return &tmp
}

// ManagedClusterLoadBalancerProfileInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs and ManagedClusterLoadBalancerProfileOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileInput` via:
//
//	ManagedClusterLoadBalancerProfileArgs{...}
type ManagedClusterLoadBalancerProfileInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput
	ToManagedClusterLoadBalancerProfileOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutput
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileArgs struct {
	// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs ResourceReferenceArrayInput `pulumi:"effectiveOutboundIPs"`
	// Enable multiple standard load balancers per AKS cluster or not.
	EnableMultipleStandardLoadBalancers pulumi.BoolPtrInput `pulumi:"enableMultipleStandardLoadBalancers"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrInput `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrInput `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs ManagedClusterLoadBalancerProfileOutboundIPsPtrInput `pulumi:"outboundIPs"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileArgs
func (val *ManagedClusterLoadBalancerProfileArgs) Defaults() *ManagedClusterLoadBalancerProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AllocatedOutboundPorts) {
		tmp.AllocatedOutboundPorts = pulumi.IntPtr(0)
	}
	if isZero(tmp.IdleTimeoutInMinutes) {
		tmp.IdleTimeoutInMinutes = pulumi.IntPtr(30)
	}

	return &tmp
}
func (ManagedClusterLoadBalancerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return i.ToManagedClusterLoadBalancerProfileOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput)
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileArgs) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutput).ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfilePtrInput is an input type that accepts ManagedClusterLoadBalancerProfileArgs, ManagedClusterLoadBalancerProfilePtr and ManagedClusterLoadBalancerProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfilePtrInput` via:
//
//	        ManagedClusterLoadBalancerProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterLoadBalancerProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput
	ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfilePtrOutput
}

type managedClusterLoadBalancerProfilePtrType ManagedClusterLoadBalancerProfileArgs

func ManagedClusterLoadBalancerProfilePtr(v *ManagedClusterLoadBalancerProfileArgs) ManagedClusterLoadBalancerProfilePtrInput {
	return (*managedClusterLoadBalancerProfilePtrType)(v)
}

func (*managedClusterLoadBalancerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return i.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfilePtrType) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutput() ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfileOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ToManagedClusterLoadBalancerProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfile {
		return &v
	}).(ManagedClusterLoadBalancerProfilePtrOutput)
}

// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) []ResourceReference { return v.EffectiveOutboundIPs }).(ResourceReferenceArrayOutput)
}

// Enable multiple standard load balancers per AKS cluster or not.
func (o ManagedClusterLoadBalancerProfileOutput) EnableMultipleStandardLoadBalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *bool { return v.EnableMultipleStandardLoadBalancers }).(pulumi.BoolPtrOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileManagedOutboundIPs {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileOutput) OutboundIPs() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileOutboundIPs {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput)
}

type ManagedClusterLoadBalancerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfile)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutput() ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) ToManagedClusterLoadBalancerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfilePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfilePtrOutput) Elem() ManagedClusterLoadBalancerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) ManagedClusterLoadBalancerProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfile
		return ret
	}).(ManagedClusterLoadBalancerProfileOutput)
}

// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfilePtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceArrayOutput)
}

// Enable multiple standard load balancers per AKS cluster or not.
func (o ManagedClusterLoadBalancerProfilePtrOutput) EnableMultipleStandardLoadBalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMultipleStandardLoadBalancers
	}).(pulumi.BoolPtrOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfilePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileManagedOutboundIPs {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfilePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfile) *ManagedClusterLoadBalancerProfileOutboundIPs {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileManagedOutboundIPs struct {
	// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
	CountIPv6 *int `pulumi:"countIPv6"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileManagedOutboundIPs
func (val *ManagedClusterLoadBalancerProfileManagedOutboundIPs) Defaults() *ManagedClusterLoadBalancerProfileManagedOutboundIPs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		count_ := 1
		tmp.Count = &count_
	}
	if isZero(tmp.CountIPv6) {
		countIPv6_ := 0
		tmp.CountIPv6 = &countIPv6_
	}
	return &tmp
}

// ManagedClusterLoadBalancerProfileManagedOutboundIPsInput is an input type that accepts ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs and ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileManagedOutboundIPsInput` via:
//
//	ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs{...}
type ManagedClusterLoadBalancerProfileManagedOutboundIPsInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput
	ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs struct {
	// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
	CountIPv6 pulumi.IntPtrInput `pulumi:"countIPv6"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs
func (val *ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) Defaults() *ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		tmp.Count = pulumi.IntPtr(1)
	}
	if isZero(tmp.CountIPv6) {
		tmp.CountIPv6 = pulumi.IntPtr(0)
	}
	return &tmp
}
func (ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileManagedOutboundIPs)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput {
	return i.ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput)
}

func (i ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput).ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrInput is an input type that accepts ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs, ManagedClusterLoadBalancerProfileManagedOutboundIPsPtr and ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrInput` via:
//
//	        ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput
	ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput
}

type managedClusterLoadBalancerProfileManagedOutboundIPsPtrType ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs

func ManagedClusterLoadBalancerProfileManagedOutboundIPsPtr(v *ManagedClusterLoadBalancerProfileManagedOutboundIPsArgs) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrInput {
	return (*managedClusterLoadBalancerProfileManagedOutboundIPsPtrType)(v)
}

func (*managedClusterLoadBalancerProfileManagedOutboundIPsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileManagedOutboundIPs)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileManagedOutboundIPsPtrType) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileManagedOutboundIPsPtrType) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileManagedOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o.ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterLoadBalancerProfileManagedOutboundIPs) *ManagedClusterLoadBalancerProfileManagedOutboundIPs {
		return &v
	}).(ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput)
}

// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileManagedOutboundIPs) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput) CountIPv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileManagedOutboundIPs) *int { return v.CountIPv6 }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileManagedOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) Elem() ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileManagedOutboundIPs) ManagedClusterLoadBalancerProfileManagedOutboundIPs {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileManagedOutboundIPs
		return ret
	}).(ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput)
}

// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileManagedOutboundIPs) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
func (o ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput) CountIPv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileManagedOutboundIPs) *int {
		if v == nil {
			return nil
		}
		return v.CountIPv6
	}).(pulumi.IntPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPPrefixes struct {
	// A list of public IP prefix resources.
	PublicIPPrefixes []ResourceReference `pulumi:"publicIPPrefixes"`
}

// ManagedClusterLoadBalancerProfileOutboundIPPrefixesInput is an input type that accepts ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs and ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileOutboundIPPrefixesInput` via:
//
//	ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs{...}
type ManagedClusterLoadBalancerProfileOutboundIPPrefixesInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput
	ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput
}

// Desired outbound IP Prefix resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs struct {
	// A list of public IP prefix resources.
	PublicIPPrefixes ResourceReferenceArrayInput `pulumi:"publicIPPrefixes"`
}

func (ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileOutboundIPPrefixes)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput)
}

func (i ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput).ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrInput is an input type that accepts ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs, ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtr and ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrInput` via:
//
//	        ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput
	ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput
}

type managedClusterLoadBalancerProfileOutboundIPPrefixesPtrType ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs

func ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtr(v *ManagedClusterLoadBalancerProfileOutboundIPPrefixesArgs) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrInput {
	return (*managedClusterLoadBalancerProfileOutboundIPPrefixesPtrType)(v)
}

func (*managedClusterLoadBalancerProfileOutboundIPPrefixesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileOutboundIPPrefixes)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileOutboundIPPrefixesPtrType) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileOutboundIPPrefixesPtrType) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileOutboundIPPrefixes)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o.ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterLoadBalancerProfileOutboundIPPrefixes) *ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
		return &v
	}).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput)
}

// A list of public IP prefix resources.
func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput) PublicIPPrefixes() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileOutboundIPPrefixes) []ResourceReference {
		return v.PublicIPPrefixes
	}).(ResourceReferenceArrayOutput)
}

type ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileOutboundIPPrefixes)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput) ToManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput) Elem() ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileOutboundIPPrefixes) ManagedClusterLoadBalancerProfileOutboundIPPrefixes {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileOutboundIPPrefixes
		return ret
	}).(ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput)
}

// A list of public IP prefix resources.
func (o ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput) PublicIPPrefixes() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileOutboundIPPrefixes) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefixes
	}).(ResourceReferenceArrayOutput)
}

// Desired outbound IP resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPs struct {
	// A list of public IP resources.
	PublicIPs []ResourceReference `pulumi:"publicIPs"`
}

// ManagedClusterLoadBalancerProfileOutboundIPsInput is an input type that accepts ManagedClusterLoadBalancerProfileOutboundIPsArgs and ManagedClusterLoadBalancerProfileOutboundIPsOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileOutboundIPsInput` via:
//
//	ManagedClusterLoadBalancerProfileOutboundIPsArgs{...}
type ManagedClusterLoadBalancerProfileOutboundIPsInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutboundIPsOutput() ManagedClusterLoadBalancerProfileOutboundIPsOutput
	ToManagedClusterLoadBalancerProfileOutboundIPsOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutboundIPsOutput
}

// Desired outbound IP resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPsArgs struct {
	// A list of public IP resources.
	PublicIPs ResourceReferenceArrayInput `pulumi:"publicIPs"`
}

func (ManagedClusterLoadBalancerProfileOutboundIPsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileOutboundIPs)(nil)).Elem()
}

func (i ManagedClusterLoadBalancerProfileOutboundIPsArgs) ToManagedClusterLoadBalancerProfileOutboundIPsOutput() ManagedClusterLoadBalancerProfileOutboundIPsOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPsOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileOutboundIPsArgs) ToManagedClusterLoadBalancerProfileOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPsOutput)
}

func (i ManagedClusterLoadBalancerProfileOutboundIPsArgs) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(context.Background())
}

func (i ManagedClusterLoadBalancerProfileOutboundIPsArgs) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPsOutput).ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(ctx)
}

// ManagedClusterLoadBalancerProfileOutboundIPsPtrInput is an input type that accepts ManagedClusterLoadBalancerProfileOutboundIPsArgs, ManagedClusterLoadBalancerProfileOutboundIPsPtr and ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput values.
// You can construct a concrete instance of `ManagedClusterLoadBalancerProfileOutboundIPsPtrInput` via:
//
//	        ManagedClusterLoadBalancerProfileOutboundIPsArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterLoadBalancerProfileOutboundIPsPtrInput interface {
	pulumi.Input

	ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput
	ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(context.Context) ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput
}

type managedClusterLoadBalancerProfileOutboundIPsPtrType ManagedClusterLoadBalancerProfileOutboundIPsArgs

func ManagedClusterLoadBalancerProfileOutboundIPsPtr(v *ManagedClusterLoadBalancerProfileOutboundIPsArgs) ManagedClusterLoadBalancerProfileOutboundIPsPtrInput {
	return (*managedClusterLoadBalancerProfileOutboundIPsPtrType)(v)
}

func (*managedClusterLoadBalancerProfileOutboundIPsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileOutboundIPs)(nil)).Elem()
}

func (i *managedClusterLoadBalancerProfileOutboundIPsPtrType) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return i.ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(context.Background())
}

func (i *managedClusterLoadBalancerProfileOutboundIPsPtrType) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileOutboundIPsOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutboundIPsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsOutput) ToManagedClusterLoadBalancerProfileOutboundIPsOutput() ManagedClusterLoadBalancerProfileOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsOutput) ToManagedClusterLoadBalancerProfileOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsOutput) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o.ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(context.Background())
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsOutput) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterLoadBalancerProfileOutboundIPs) *ManagedClusterLoadBalancerProfileOutboundIPs {
		return &v
	}).(ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput)
}

// A list of public IP resources.
func (o ManagedClusterLoadBalancerProfileOutboundIPsOutput) PublicIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileOutboundIPs) []ResourceReference { return v.PublicIPs }).(ResourceReferenceArrayOutput)
}

type ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput) Elem() ManagedClusterLoadBalancerProfileOutboundIPsOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileOutboundIPs) ManagedClusterLoadBalancerProfileOutboundIPs {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileOutboundIPs
		return ret
	}).(ManagedClusterLoadBalancerProfileOutboundIPsOutput)
}

// A list of public IP resources.
func (o ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput) PublicIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileOutboundIPs) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(ResourceReferenceArrayOutput)
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileResponse struct {
	// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []ResourceReferenceResponse `pulumi:"effectiveOutboundIPs"`
	// Enable multiple standard load balancers per AKS cluster or not.
	EnableMultipleStandardLoadBalancers *bool `pulumi:"enableMultipleStandardLoadBalancers"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Desired managed outbound IPs for the cluster load balancer.
	ManagedOutboundIPs *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs `pulumi:"managedOutboundIPs"`
	// Desired outbound IP Prefix resources for the cluster load balancer.
	OutboundIPPrefixes *ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes `pulumi:"outboundIPPrefixes"`
	// Desired outbound IP resources for the cluster load balancer.
	OutboundIPs *ManagedClusterLoadBalancerProfileResponseOutboundIPs `pulumi:"outboundIPs"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileResponse
func (val *ManagedClusterLoadBalancerProfileResponse) Defaults() *ManagedClusterLoadBalancerProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.AllocatedOutboundPorts) {
		allocatedOutboundPorts_ := 0
		tmp.AllocatedOutboundPorts = &allocatedOutboundPorts_
	}
	if isZero(tmp.IdleTimeoutInMinutes) {
		idleTimeoutInMinutes_ := 30
		tmp.IdleTimeoutInMinutes = &idleTimeoutInMinutes_
	}
	tmp.ManagedOutboundIPs = tmp.ManagedOutboundIPs.Defaults()

	return &tmp
}

// Profile of the managed cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutput() ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutput) ToManagedClusterLoadBalancerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutput {
	return o
}

// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Enable multiple standard load balancers per AKS cluster or not.
func (o ManagedClusterLoadBalancerProfileResponseOutput) EnableMultipleStandardLoadBalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *bool { return v.EnableMultipleStandardLoadBalancers }).(pulumi.BoolPtrOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes {
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponseOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseOutboundIPs {
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutput() ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ToManagedClusterLoadBalancerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) ManagedClusterLoadBalancerProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileResponse
		return ret
	}).(ManagedClusterLoadBalancerProfileResponseOutput)
}

// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.AllocatedOutboundPorts
	}).(pulumi.IntPtrOutput)
}

// The effective outbound IP resources of the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Enable multiple standard load balancers per AKS cluster or not.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) EnableMultipleStandardLoadBalancers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMultipleStandardLoadBalancers
	}).(pulumi.BoolPtrOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) ManagedOutboundIPs() ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPPrefixes() ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes {
		if v == nil {
			return nil
		}
		return v.OutboundIPPrefixes
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput)
}

// Desired outbound IP resources for the cluster load balancer.
func (o ManagedClusterLoadBalancerProfileResponsePtrOutput) OutboundIPs() ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponse) *ManagedClusterLoadBalancerProfileResponseOutboundIPs {
		if v == nil {
			return nil
		}
		return v.OutboundIPs
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput)
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs struct {
	// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
	// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
	CountIPv6 *int `pulumi:"countIPv6"`
}

// Defaults sets the appropriate defaults for ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs
func (val *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) Defaults() *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		count_ := 1
		tmp.Count = &count_
	}
	if isZero(tmp.CountIPv6) {
		countIPv6_ := 0
		tmp.CountIPv6 = &countIPv6_
	}
	return &tmp
}

// Desired managed outbound IPs for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput() ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput) ToManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput {
	return o
}

// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput) CountIPv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) *int { return v.CountIPv6 }).(pulumi.IntPtrOutput)
}

type ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs
		return ret
	}).(ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput)
}

// The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack.
func (o ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput) CountIPv6() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseManagedOutboundIPs) *int {
		if v == nil {
			return nil
		}
		return v.CountIPv6
	}).(pulumi.IntPtrOutput)
}

// Desired outbound IP Prefix resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes struct {
	// A list of public IP prefix resources.
	PublicIPPrefixes []ResourceReferenceResponse `pulumi:"publicIPPrefixes"`
}

// Desired outbound IP Prefix resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput() ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput {
	return o
}

// A list of public IP prefix resources.
func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput) PublicIPPrefixes() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes) []ResourceReferenceResponse {
		return v.PublicIPPrefixes
	}).(ResourceReferenceResponseArrayOutput)
}

type ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput() ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes) ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes
		return ret
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput)
}

// A list of public IP prefix resources.
func (o ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput) PublicIPPrefixes() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixes) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefixes
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired outbound IP resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutboundIPs struct {
	// A list of public IP resources.
	PublicIPs []ResourceReferenceResponse `pulumi:"publicIPs"`
}

// Desired outbound IP resources for the cluster load balancer.
type ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterLoadBalancerProfileResponseOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPsOutput() ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPsOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput {
	return o
}

// A list of public IP resources.
func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput) PublicIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterLoadBalancerProfileResponseOutboundIPs) []ResourceReferenceResponse {
		return v.PublicIPs
	}).(ResourceReferenceResponseArrayOutput)
}

type ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterLoadBalancerProfileResponseOutboundIPs)(nil)).Elem()
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput() ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput) ToManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutputWithContext(ctx context.Context) ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput {
	return o
}

func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput) Elem() ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseOutboundIPs) ManagedClusterLoadBalancerProfileResponseOutboundIPs {
		if v != nil {
			return *v
		}
		var ret ManagedClusterLoadBalancerProfileResponseOutboundIPs
		return ret
	}).(ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput)
}

// A list of public IP resources.
func (o ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput) PublicIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterLoadBalancerProfileResponseOutboundIPs) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Profile of the managed outbound IP resources of the managed cluster.
type ManagedClusterManagedOutboundIPProfile struct {
	// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// Defaults sets the appropriate defaults for ManagedClusterManagedOutboundIPProfile
func (val *ManagedClusterManagedOutboundIPProfile) Defaults() *ManagedClusterManagedOutboundIPProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// ManagedClusterManagedOutboundIPProfileInput is an input type that accepts ManagedClusterManagedOutboundIPProfileArgs and ManagedClusterManagedOutboundIPProfileOutput values.
// You can construct a concrete instance of `ManagedClusterManagedOutboundIPProfileInput` via:
//
//	ManagedClusterManagedOutboundIPProfileArgs{...}
type ManagedClusterManagedOutboundIPProfileInput interface {
	pulumi.Input

	ToManagedClusterManagedOutboundIPProfileOutput() ManagedClusterManagedOutboundIPProfileOutput
	ToManagedClusterManagedOutboundIPProfileOutputWithContext(context.Context) ManagedClusterManagedOutboundIPProfileOutput
}

// Profile of the managed outbound IP resources of the managed cluster.
type ManagedClusterManagedOutboundIPProfileArgs struct {
	// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

// Defaults sets the appropriate defaults for ManagedClusterManagedOutboundIPProfileArgs
func (val *ManagedClusterManagedOutboundIPProfileArgs) Defaults() *ManagedClusterManagedOutboundIPProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		tmp.Count = pulumi.IntPtr(1)
	}
	return &tmp
}
func (ManagedClusterManagedOutboundIPProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterManagedOutboundIPProfile)(nil)).Elem()
}

func (i ManagedClusterManagedOutboundIPProfileArgs) ToManagedClusterManagedOutboundIPProfileOutput() ManagedClusterManagedOutboundIPProfileOutput {
	return i.ToManagedClusterManagedOutboundIPProfileOutputWithContext(context.Background())
}

func (i ManagedClusterManagedOutboundIPProfileArgs) ToManagedClusterManagedOutboundIPProfileOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterManagedOutboundIPProfileOutput)
}

func (i ManagedClusterManagedOutboundIPProfileArgs) ToManagedClusterManagedOutboundIPProfilePtrOutput() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return i.ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterManagedOutboundIPProfileArgs) ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterManagedOutboundIPProfileOutput).ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(ctx)
}

// ManagedClusterManagedOutboundIPProfilePtrInput is an input type that accepts ManagedClusterManagedOutboundIPProfileArgs, ManagedClusterManagedOutboundIPProfilePtr and ManagedClusterManagedOutboundIPProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterManagedOutboundIPProfilePtrInput` via:
//
//	        ManagedClusterManagedOutboundIPProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterManagedOutboundIPProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterManagedOutboundIPProfilePtrOutput() ManagedClusterManagedOutboundIPProfilePtrOutput
	ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(context.Context) ManagedClusterManagedOutboundIPProfilePtrOutput
}

type managedClusterManagedOutboundIPProfilePtrType ManagedClusterManagedOutboundIPProfileArgs

func ManagedClusterManagedOutboundIPProfilePtr(v *ManagedClusterManagedOutboundIPProfileArgs) ManagedClusterManagedOutboundIPProfilePtrInput {
	return (*managedClusterManagedOutboundIPProfilePtrType)(v)
}

func (*managedClusterManagedOutboundIPProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterManagedOutboundIPProfile)(nil)).Elem()
}

func (i *managedClusterManagedOutboundIPProfilePtrType) ToManagedClusterManagedOutboundIPProfilePtrOutput() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return i.ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterManagedOutboundIPProfilePtrType) ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterManagedOutboundIPProfilePtrOutput)
}

// Profile of the managed outbound IP resources of the managed cluster.
type ManagedClusterManagedOutboundIPProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterManagedOutboundIPProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterManagedOutboundIPProfile)(nil)).Elem()
}

func (o ManagedClusterManagedOutboundIPProfileOutput) ToManagedClusterManagedOutboundIPProfileOutput() ManagedClusterManagedOutboundIPProfileOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfileOutput) ToManagedClusterManagedOutboundIPProfileOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfileOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfileOutput) ToManagedClusterManagedOutboundIPProfilePtrOutput() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o.ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterManagedOutboundIPProfileOutput) ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterManagedOutboundIPProfile) *ManagedClusterManagedOutboundIPProfile {
		return &v
	}).(ManagedClusterManagedOutboundIPProfilePtrOutput)
}

// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
func (o ManagedClusterManagedOutboundIPProfileOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterManagedOutboundIPProfile) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterManagedOutboundIPProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterManagedOutboundIPProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterManagedOutboundIPProfile)(nil)).Elem()
}

func (o ManagedClusterManagedOutboundIPProfilePtrOutput) ToManagedClusterManagedOutboundIPProfilePtrOutput() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfilePtrOutput) ToManagedClusterManagedOutboundIPProfilePtrOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfilePtrOutput) Elem() ManagedClusterManagedOutboundIPProfileOutput {
	return o.ApplyT(func(v *ManagedClusterManagedOutboundIPProfile) ManagedClusterManagedOutboundIPProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterManagedOutboundIPProfile
		return ret
	}).(ManagedClusterManagedOutboundIPProfileOutput)
}

// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
func (o ManagedClusterManagedOutboundIPProfilePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterManagedOutboundIPProfile) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed outbound IP resources of the managed cluster.
type ManagedClusterManagedOutboundIPProfileResponse struct {
	// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
	Count *int `pulumi:"count"`
}

// Defaults sets the appropriate defaults for ManagedClusterManagedOutboundIPProfileResponse
func (val *ManagedClusterManagedOutboundIPProfileResponse) Defaults() *ManagedClusterManagedOutboundIPProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Count) {
		count_ := 1
		tmp.Count = &count_
	}
	return &tmp
}

// Profile of the managed outbound IP resources of the managed cluster.
type ManagedClusterManagedOutboundIPProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterManagedOutboundIPProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterManagedOutboundIPProfileResponse)(nil)).Elem()
}

func (o ManagedClusterManagedOutboundIPProfileResponseOutput) ToManagedClusterManagedOutboundIPProfileResponseOutput() ManagedClusterManagedOutboundIPProfileResponseOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfileResponseOutput) ToManagedClusterManagedOutboundIPProfileResponseOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfileResponseOutput {
	return o
}

// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
func (o ManagedClusterManagedOutboundIPProfileResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterManagedOutboundIPProfileResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type ManagedClusterManagedOutboundIPProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterManagedOutboundIPProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterManagedOutboundIPProfileResponse)(nil)).Elem()
}

func (o ManagedClusterManagedOutboundIPProfileResponsePtrOutput) ToManagedClusterManagedOutboundIPProfileResponsePtrOutput() ManagedClusterManagedOutboundIPProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfileResponsePtrOutput) ToManagedClusterManagedOutboundIPProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterManagedOutboundIPProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterManagedOutboundIPProfileResponsePtrOutput) Elem() ManagedClusterManagedOutboundIPProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterManagedOutboundIPProfileResponse) ManagedClusterManagedOutboundIPProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterManagedOutboundIPProfileResponse
		return ret
	}).(ManagedClusterManagedOutboundIPProfileResponseOutput)
}

// The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1.
func (o ManagedClusterManagedOutboundIPProfileResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterManagedOutboundIPProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed cluster NAT gateway.
type ManagedClusterNATGatewayProfile struct {
	// The effective outbound IP resources of the cluster NAT gateway.
	EffectiveOutboundIPs []ResourceReference `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Profile of the managed outbound IP resources of the cluster NAT gateway.
	ManagedOutboundIPProfile *ManagedClusterManagedOutboundIPProfile `pulumi:"managedOutboundIPProfile"`
}

// Defaults sets the appropriate defaults for ManagedClusterNATGatewayProfile
func (val *ManagedClusterNATGatewayProfile) Defaults() *ManagedClusterNATGatewayProfile {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IdleTimeoutInMinutes) {
		idleTimeoutInMinutes_ := 4
		tmp.IdleTimeoutInMinutes = &idleTimeoutInMinutes_
	}
	tmp.ManagedOutboundIPProfile = tmp.ManagedOutboundIPProfile.Defaults()

	return &tmp
}

// ManagedClusterNATGatewayProfileInput is an input type that accepts ManagedClusterNATGatewayProfileArgs and ManagedClusterNATGatewayProfileOutput values.
// You can construct a concrete instance of `ManagedClusterNATGatewayProfileInput` via:
//
//	ManagedClusterNATGatewayProfileArgs{...}
type ManagedClusterNATGatewayProfileInput interface {
	pulumi.Input

	ToManagedClusterNATGatewayProfileOutput() ManagedClusterNATGatewayProfileOutput
	ToManagedClusterNATGatewayProfileOutputWithContext(context.Context) ManagedClusterNATGatewayProfileOutput
}

// Profile of the managed cluster NAT gateway.
type ManagedClusterNATGatewayProfileArgs struct {
	// The effective outbound IP resources of the cluster NAT gateway.
	EffectiveOutboundIPs ResourceReferenceArrayInput `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Profile of the managed outbound IP resources of the cluster NAT gateway.
	ManagedOutboundIPProfile ManagedClusterManagedOutboundIPProfilePtrInput `pulumi:"managedOutboundIPProfile"`
}

// Defaults sets the appropriate defaults for ManagedClusterNATGatewayProfileArgs
func (val *ManagedClusterNATGatewayProfileArgs) Defaults() *ManagedClusterNATGatewayProfileArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IdleTimeoutInMinutes) {
		tmp.IdleTimeoutInMinutes = pulumi.IntPtr(4)
	}

	return &tmp
}
func (ManagedClusterNATGatewayProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterNATGatewayProfile)(nil)).Elem()
}

func (i ManagedClusterNATGatewayProfileArgs) ToManagedClusterNATGatewayProfileOutput() ManagedClusterNATGatewayProfileOutput {
	return i.ToManagedClusterNATGatewayProfileOutputWithContext(context.Background())
}

func (i ManagedClusterNATGatewayProfileArgs) ToManagedClusterNATGatewayProfileOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterNATGatewayProfileOutput)
}

func (i ManagedClusterNATGatewayProfileArgs) ToManagedClusterNATGatewayProfilePtrOutput() ManagedClusterNATGatewayProfilePtrOutput {
	return i.ToManagedClusterNATGatewayProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterNATGatewayProfileArgs) ToManagedClusterNATGatewayProfilePtrOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterNATGatewayProfileOutput).ToManagedClusterNATGatewayProfilePtrOutputWithContext(ctx)
}

// ManagedClusterNATGatewayProfilePtrInput is an input type that accepts ManagedClusterNATGatewayProfileArgs, ManagedClusterNATGatewayProfilePtr and ManagedClusterNATGatewayProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterNATGatewayProfilePtrInput` via:
//
//	        ManagedClusterNATGatewayProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterNATGatewayProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterNATGatewayProfilePtrOutput() ManagedClusterNATGatewayProfilePtrOutput
	ToManagedClusterNATGatewayProfilePtrOutputWithContext(context.Context) ManagedClusterNATGatewayProfilePtrOutput
}

type managedClusterNATGatewayProfilePtrType ManagedClusterNATGatewayProfileArgs

func ManagedClusterNATGatewayProfilePtr(v *ManagedClusterNATGatewayProfileArgs) ManagedClusterNATGatewayProfilePtrInput {
	return (*managedClusterNATGatewayProfilePtrType)(v)
}

func (*managedClusterNATGatewayProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterNATGatewayProfile)(nil)).Elem()
}

func (i *managedClusterNATGatewayProfilePtrType) ToManagedClusterNATGatewayProfilePtrOutput() ManagedClusterNATGatewayProfilePtrOutput {
	return i.ToManagedClusterNATGatewayProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterNATGatewayProfilePtrType) ToManagedClusterNATGatewayProfilePtrOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterNATGatewayProfilePtrOutput)
}

// Profile of the managed cluster NAT gateway.
type ManagedClusterNATGatewayProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterNATGatewayProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterNATGatewayProfile)(nil)).Elem()
}

func (o ManagedClusterNATGatewayProfileOutput) ToManagedClusterNATGatewayProfileOutput() ManagedClusterNATGatewayProfileOutput {
	return o
}

func (o ManagedClusterNATGatewayProfileOutput) ToManagedClusterNATGatewayProfileOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfileOutput {
	return o
}

func (o ManagedClusterNATGatewayProfileOutput) ToManagedClusterNATGatewayProfilePtrOutput() ManagedClusterNATGatewayProfilePtrOutput {
	return o.ToManagedClusterNATGatewayProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterNATGatewayProfileOutput) ToManagedClusterNATGatewayProfilePtrOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterNATGatewayProfile) *ManagedClusterNATGatewayProfile {
		return &v
	}).(ManagedClusterNATGatewayProfilePtrOutput)
}

// The effective outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfile) []ResourceReference { return v.EffectiveOutboundIPs }).(ResourceReferenceArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
func (o ManagedClusterNATGatewayProfileOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfile) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Profile of the managed outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileOutput) ManagedOutboundIPProfile() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfile) *ManagedClusterManagedOutboundIPProfile {
		return v.ManagedOutboundIPProfile
	}).(ManagedClusterManagedOutboundIPProfilePtrOutput)
}

type ManagedClusterNATGatewayProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterNATGatewayProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterNATGatewayProfile)(nil)).Elem()
}

func (o ManagedClusterNATGatewayProfilePtrOutput) ToManagedClusterNATGatewayProfilePtrOutput() ManagedClusterNATGatewayProfilePtrOutput {
	return o
}

func (o ManagedClusterNATGatewayProfilePtrOutput) ToManagedClusterNATGatewayProfilePtrOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfilePtrOutput {
	return o
}

func (o ManagedClusterNATGatewayProfilePtrOutput) Elem() ManagedClusterNATGatewayProfileOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfile) ManagedClusterNATGatewayProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterNATGatewayProfile
		return ret
	}).(ManagedClusterNATGatewayProfileOutput)
}

// The effective outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfilePtrOutput) EffectiveOutboundIPs() ResourceReferenceArrayOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfile) []ResourceReference {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
func (o ManagedClusterNATGatewayProfilePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfile) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfilePtrOutput) ManagedOutboundIPProfile() ManagedClusterManagedOutboundIPProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfile) *ManagedClusterManagedOutboundIPProfile {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPProfile
	}).(ManagedClusterManagedOutboundIPProfilePtrOutput)
}

// Profile of the managed cluster NAT gateway.
type ManagedClusterNATGatewayProfileResponse struct {
	// The effective outbound IP resources of the cluster NAT gateway.
	EffectiveOutboundIPs []ResourceReferenceResponse `pulumi:"effectiveOutboundIPs"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Profile of the managed outbound IP resources of the cluster NAT gateway.
	ManagedOutboundIPProfile *ManagedClusterManagedOutboundIPProfileResponse `pulumi:"managedOutboundIPProfile"`
}

// Defaults sets the appropriate defaults for ManagedClusterNATGatewayProfileResponse
func (val *ManagedClusterNATGatewayProfileResponse) Defaults() *ManagedClusterNATGatewayProfileResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IdleTimeoutInMinutes) {
		idleTimeoutInMinutes_ := 4
		tmp.IdleTimeoutInMinutes = &idleTimeoutInMinutes_
	}
	tmp.ManagedOutboundIPProfile = tmp.ManagedOutboundIPProfile.Defaults()

	return &tmp
}

// Profile of the managed cluster NAT gateway.
type ManagedClusterNATGatewayProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterNATGatewayProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterNATGatewayProfileResponse)(nil)).Elem()
}

func (o ManagedClusterNATGatewayProfileResponseOutput) ToManagedClusterNATGatewayProfileResponseOutput() ManagedClusterNATGatewayProfileResponseOutput {
	return o
}

func (o ManagedClusterNATGatewayProfileResponseOutput) ToManagedClusterNATGatewayProfileResponseOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfileResponseOutput {
	return o
}

// The effective outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileResponseOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfileResponse) []ResourceReferenceResponse {
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
func (o ManagedClusterNATGatewayProfileResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfileResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Profile of the managed outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileResponseOutput) ManagedOutboundIPProfile() ManagedClusterManagedOutboundIPProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterNATGatewayProfileResponse) *ManagedClusterManagedOutboundIPProfileResponse {
		return v.ManagedOutboundIPProfile
	}).(ManagedClusterManagedOutboundIPProfileResponsePtrOutput)
}

type ManagedClusterNATGatewayProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterNATGatewayProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterNATGatewayProfileResponse)(nil)).Elem()
}

func (o ManagedClusterNATGatewayProfileResponsePtrOutput) ToManagedClusterNATGatewayProfileResponsePtrOutput() ManagedClusterNATGatewayProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterNATGatewayProfileResponsePtrOutput) ToManagedClusterNATGatewayProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterNATGatewayProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterNATGatewayProfileResponsePtrOutput) Elem() ManagedClusterNATGatewayProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfileResponse) ManagedClusterNATGatewayProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterNATGatewayProfileResponse
		return ret
	}).(ManagedClusterNATGatewayProfileResponseOutput)
}

// The effective outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileResponsePtrOutput) EffectiveOutboundIPs() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfileResponse) []ResourceReferenceResponse {
		if v == nil {
			return nil
		}
		return v.EffectiveOutboundIPs
	}).(ResourceReferenceResponseArrayOutput)
}

// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
func (o ManagedClusterNATGatewayProfileResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfileResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// Profile of the managed outbound IP resources of the cluster NAT gateway.
func (o ManagedClusterNATGatewayProfileResponsePtrOutput) ManagedOutboundIPProfile() ManagedClusterManagedOutboundIPProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterNATGatewayProfileResponse) *ManagedClusterManagedOutboundIPProfileResponse {
		if v == nil {
			return nil
		}
		return v.ManagedOutboundIPProfile
	}).(ManagedClusterManagedOutboundIPProfileResponsePtrOutput)
}

// The OIDC issuer profile of the Managed Cluster.
type ManagedClusterOIDCIssuerProfile struct {
	// Whether the OIDC issuer is enabled.
	Enabled *bool `pulumi:"enabled"`
}

// ManagedClusterOIDCIssuerProfileInput is an input type that accepts ManagedClusterOIDCIssuerProfileArgs and ManagedClusterOIDCIssuerProfileOutput values.
// You can construct a concrete instance of `ManagedClusterOIDCIssuerProfileInput` via:
//
//	ManagedClusterOIDCIssuerProfileArgs{...}
type ManagedClusterOIDCIssuerProfileInput interface {
	pulumi.Input

	ToManagedClusterOIDCIssuerProfileOutput() ManagedClusterOIDCIssuerProfileOutput
	ToManagedClusterOIDCIssuerProfileOutputWithContext(context.Context) ManagedClusterOIDCIssuerProfileOutput
}

// The OIDC issuer profile of the Managed Cluster.
type ManagedClusterOIDCIssuerProfileArgs struct {
	// Whether the OIDC issuer is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedClusterOIDCIssuerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterOIDCIssuerProfile)(nil)).Elem()
}

func (i ManagedClusterOIDCIssuerProfileArgs) ToManagedClusterOIDCIssuerProfileOutput() ManagedClusterOIDCIssuerProfileOutput {
	return i.ToManagedClusterOIDCIssuerProfileOutputWithContext(context.Background())
}

func (i ManagedClusterOIDCIssuerProfileArgs) ToManagedClusterOIDCIssuerProfileOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOIDCIssuerProfileOutput)
}

func (i ManagedClusterOIDCIssuerProfileArgs) ToManagedClusterOIDCIssuerProfilePtrOutput() ManagedClusterOIDCIssuerProfilePtrOutput {
	return i.ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterOIDCIssuerProfileArgs) ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOIDCIssuerProfileOutput).ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(ctx)
}

// ManagedClusterOIDCIssuerProfilePtrInput is an input type that accepts ManagedClusterOIDCIssuerProfileArgs, ManagedClusterOIDCIssuerProfilePtr and ManagedClusterOIDCIssuerProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterOIDCIssuerProfilePtrInput` via:
//
//	        ManagedClusterOIDCIssuerProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterOIDCIssuerProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterOIDCIssuerProfilePtrOutput() ManagedClusterOIDCIssuerProfilePtrOutput
	ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(context.Context) ManagedClusterOIDCIssuerProfilePtrOutput
}

type managedClusterOIDCIssuerProfilePtrType ManagedClusterOIDCIssuerProfileArgs

func ManagedClusterOIDCIssuerProfilePtr(v *ManagedClusterOIDCIssuerProfileArgs) ManagedClusterOIDCIssuerProfilePtrInput {
	return (*managedClusterOIDCIssuerProfilePtrType)(v)
}

func (*managedClusterOIDCIssuerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterOIDCIssuerProfile)(nil)).Elem()
}

func (i *managedClusterOIDCIssuerProfilePtrType) ToManagedClusterOIDCIssuerProfilePtrOutput() ManagedClusterOIDCIssuerProfilePtrOutput {
	return i.ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterOIDCIssuerProfilePtrType) ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterOIDCIssuerProfilePtrOutput)
}

// The OIDC issuer profile of the Managed Cluster.
type ManagedClusterOIDCIssuerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterOIDCIssuerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterOIDCIssuerProfile)(nil)).Elem()
}

func (o ManagedClusterOIDCIssuerProfileOutput) ToManagedClusterOIDCIssuerProfileOutput() ManagedClusterOIDCIssuerProfileOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfileOutput) ToManagedClusterOIDCIssuerProfileOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfileOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfileOutput) ToManagedClusterOIDCIssuerProfilePtrOutput() ManagedClusterOIDCIssuerProfilePtrOutput {
	return o.ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterOIDCIssuerProfileOutput) ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterOIDCIssuerProfile) *ManagedClusterOIDCIssuerProfile {
		return &v
	}).(ManagedClusterOIDCIssuerProfilePtrOutput)
}

// Whether the OIDC issuer is enabled.
func (o ManagedClusterOIDCIssuerProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterOIDCIssuerProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterOIDCIssuerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterOIDCIssuerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterOIDCIssuerProfile)(nil)).Elem()
}

func (o ManagedClusterOIDCIssuerProfilePtrOutput) ToManagedClusterOIDCIssuerProfilePtrOutput() ManagedClusterOIDCIssuerProfilePtrOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfilePtrOutput) ToManagedClusterOIDCIssuerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfilePtrOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfilePtrOutput) Elem() ManagedClusterOIDCIssuerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterOIDCIssuerProfile) ManagedClusterOIDCIssuerProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterOIDCIssuerProfile
		return ret
	}).(ManagedClusterOIDCIssuerProfileOutput)
}

// Whether the OIDC issuer is enabled.
func (o ManagedClusterOIDCIssuerProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterOIDCIssuerProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The OIDC issuer profile of the Managed Cluster.
type ManagedClusterOIDCIssuerProfileResponse struct {
	// Whether the OIDC issuer is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The OIDC issuer url of the Managed Cluster.
	IssuerURL string `pulumi:"issuerURL"`
}

// The OIDC issuer profile of the Managed Cluster.
type ManagedClusterOIDCIssuerProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterOIDCIssuerProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterOIDCIssuerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterOIDCIssuerProfileResponseOutput) ToManagedClusterOIDCIssuerProfileResponseOutput() ManagedClusterOIDCIssuerProfileResponseOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfileResponseOutput) ToManagedClusterOIDCIssuerProfileResponseOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfileResponseOutput {
	return o
}

// Whether the OIDC issuer is enabled.
func (o ManagedClusterOIDCIssuerProfileResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterOIDCIssuerProfileResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The OIDC issuer url of the Managed Cluster.
func (o ManagedClusterOIDCIssuerProfileResponseOutput) IssuerURL() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterOIDCIssuerProfileResponse) string { return v.IssuerURL }).(pulumi.StringOutput)
}

type ManagedClusterOIDCIssuerProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterOIDCIssuerProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterOIDCIssuerProfileResponse)(nil)).Elem()
}

func (o ManagedClusterOIDCIssuerProfileResponsePtrOutput) ToManagedClusterOIDCIssuerProfileResponsePtrOutput() ManagedClusterOIDCIssuerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfileResponsePtrOutput) ToManagedClusterOIDCIssuerProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterOIDCIssuerProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterOIDCIssuerProfileResponsePtrOutput) Elem() ManagedClusterOIDCIssuerProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterOIDCIssuerProfileResponse) ManagedClusterOIDCIssuerProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterOIDCIssuerProfileResponse
		return ret
	}).(ManagedClusterOIDCIssuerProfileResponseOutput)
}

// Whether the OIDC issuer is enabled.
func (o ManagedClusterOIDCIssuerProfileResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterOIDCIssuerProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The OIDC issuer url of the Managed Cluster.
func (o ManagedClusterOIDCIssuerProfileResponsePtrOutput) IssuerURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterOIDCIssuerProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerURL
	}).(pulumi.StringPtrOutput)
}

// Details about the pod identity assigned to the Managed Cluster.
type ManagedClusterPodIdentity struct {
	// The binding selector to use for the AzureIdentityBinding resource.
	BindingSelector *string `pulumi:"bindingSelector"`
	// The user assigned identity details.
	Identity UserAssignedIdentity `pulumi:"identity"`
	// The name of the pod identity.
	Name string `pulumi:"name"`
	// The namespace of the pod identity.
	Namespace string `pulumi:"namespace"`
}

// ManagedClusterPodIdentityInput is an input type that accepts ManagedClusterPodIdentityArgs and ManagedClusterPodIdentityOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityInput` via:
//
//	ManagedClusterPodIdentityArgs{...}
type ManagedClusterPodIdentityInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityOutput() ManagedClusterPodIdentityOutput
	ToManagedClusterPodIdentityOutputWithContext(context.Context) ManagedClusterPodIdentityOutput
}

// Details about the pod identity assigned to the Managed Cluster.
type ManagedClusterPodIdentityArgs struct {
	// The binding selector to use for the AzureIdentityBinding resource.
	BindingSelector pulumi.StringPtrInput `pulumi:"bindingSelector"`
	// The user assigned identity details.
	Identity UserAssignedIdentityInput `pulumi:"identity"`
	// The name of the pod identity.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace of the pod identity.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (ManagedClusterPodIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentity)(nil)).Elem()
}

func (i ManagedClusterPodIdentityArgs) ToManagedClusterPodIdentityOutput() ManagedClusterPodIdentityOutput {
	return i.ToManagedClusterPodIdentityOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityArgs) ToManagedClusterPodIdentityOutputWithContext(ctx context.Context) ManagedClusterPodIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityOutput)
}

// ManagedClusterPodIdentityArrayInput is an input type that accepts ManagedClusterPodIdentityArray and ManagedClusterPodIdentityArrayOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityArrayInput` via:
//
//	ManagedClusterPodIdentityArray{ ManagedClusterPodIdentityArgs{...} }
type ManagedClusterPodIdentityArrayInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityArrayOutput() ManagedClusterPodIdentityArrayOutput
	ToManagedClusterPodIdentityArrayOutputWithContext(context.Context) ManagedClusterPodIdentityArrayOutput
}

type ManagedClusterPodIdentityArray []ManagedClusterPodIdentityInput

func (ManagedClusterPodIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentity)(nil)).Elem()
}

func (i ManagedClusterPodIdentityArray) ToManagedClusterPodIdentityArrayOutput() ManagedClusterPodIdentityArrayOutput {
	return i.ToManagedClusterPodIdentityArrayOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityArray) ToManagedClusterPodIdentityArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityArrayOutput)
}

// Details about the pod identity assigned to the Managed Cluster.
type ManagedClusterPodIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentity)(nil)).Elem()
}

func (o ManagedClusterPodIdentityOutput) ToManagedClusterPodIdentityOutput() ManagedClusterPodIdentityOutput {
	return o
}

func (o ManagedClusterPodIdentityOutput) ToManagedClusterPodIdentityOutputWithContext(ctx context.Context) ManagedClusterPodIdentityOutput {
	return o
}

// The binding selector to use for the AzureIdentityBinding resource.
func (o ManagedClusterPodIdentityOutput) BindingSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentity) *string { return v.BindingSelector }).(pulumi.StringPtrOutput)
}

// The user assigned identity details.
func (o ManagedClusterPodIdentityOutput) Identity() UserAssignedIdentityOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentity) UserAssignedIdentity { return v.Identity }).(UserAssignedIdentityOutput)
}

// The name of the pod identity.
func (o ManagedClusterPodIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentity) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace of the pod identity.
func (o ManagedClusterPodIdentityOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentity) string { return v.Namespace }).(pulumi.StringOutput)
}

type ManagedClusterPodIdentityArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentity)(nil)).Elem()
}

func (o ManagedClusterPodIdentityArrayOutput) ToManagedClusterPodIdentityArrayOutput() ManagedClusterPodIdentityArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityArrayOutput) ToManagedClusterPodIdentityArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityArrayOutput) Index(i pulumi.IntInput) ManagedClusterPodIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterPodIdentity {
		return vs[0].([]ManagedClusterPodIdentity)[vs[1].(int)]
	}).(ManagedClusterPodIdentityOutput)
}

// See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.
type ManagedClusterPodIdentityException struct {
	// The name of the pod identity exception.
	Name string `pulumi:"name"`
	// The namespace of the pod identity exception.
	Namespace string `pulumi:"namespace"`
	// The pod labels to match.
	PodLabels map[string]string `pulumi:"podLabels"`
}

// ManagedClusterPodIdentityExceptionInput is an input type that accepts ManagedClusterPodIdentityExceptionArgs and ManagedClusterPodIdentityExceptionOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityExceptionInput` via:
//
//	ManagedClusterPodIdentityExceptionArgs{...}
type ManagedClusterPodIdentityExceptionInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityExceptionOutput() ManagedClusterPodIdentityExceptionOutput
	ToManagedClusterPodIdentityExceptionOutputWithContext(context.Context) ManagedClusterPodIdentityExceptionOutput
}

// See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.
type ManagedClusterPodIdentityExceptionArgs struct {
	// The name of the pod identity exception.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace of the pod identity exception.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The pod labels to match.
	PodLabels pulumi.StringMapInput `pulumi:"podLabels"`
}

func (ManagedClusterPodIdentityExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityException)(nil)).Elem()
}

func (i ManagedClusterPodIdentityExceptionArgs) ToManagedClusterPodIdentityExceptionOutput() ManagedClusterPodIdentityExceptionOutput {
	return i.ToManagedClusterPodIdentityExceptionOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityExceptionArgs) ToManagedClusterPodIdentityExceptionOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityExceptionOutput)
}

// ManagedClusterPodIdentityExceptionArrayInput is an input type that accepts ManagedClusterPodIdentityExceptionArray and ManagedClusterPodIdentityExceptionArrayOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityExceptionArrayInput` via:
//
//	ManagedClusterPodIdentityExceptionArray{ ManagedClusterPodIdentityExceptionArgs{...} }
type ManagedClusterPodIdentityExceptionArrayInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityExceptionArrayOutput() ManagedClusterPodIdentityExceptionArrayOutput
	ToManagedClusterPodIdentityExceptionArrayOutputWithContext(context.Context) ManagedClusterPodIdentityExceptionArrayOutput
}

type ManagedClusterPodIdentityExceptionArray []ManagedClusterPodIdentityExceptionInput

func (ManagedClusterPodIdentityExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentityException)(nil)).Elem()
}

func (i ManagedClusterPodIdentityExceptionArray) ToManagedClusterPodIdentityExceptionArrayOutput() ManagedClusterPodIdentityExceptionArrayOutput {
	return i.ToManagedClusterPodIdentityExceptionArrayOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityExceptionArray) ToManagedClusterPodIdentityExceptionArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityExceptionArrayOutput)
}

// See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.
type ManagedClusterPodIdentityExceptionOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityException)(nil)).Elem()
}

func (o ManagedClusterPodIdentityExceptionOutput) ToManagedClusterPodIdentityExceptionOutput() ManagedClusterPodIdentityExceptionOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionOutput) ToManagedClusterPodIdentityExceptionOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionOutput {
	return o
}

// The name of the pod identity exception.
func (o ManagedClusterPodIdentityExceptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityException) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace of the pod identity exception.
func (o ManagedClusterPodIdentityExceptionOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityException) string { return v.Namespace }).(pulumi.StringOutput)
}

// The pod labels to match.
func (o ManagedClusterPodIdentityExceptionOutput) PodLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityException) map[string]string { return v.PodLabels }).(pulumi.StringMapOutput)
}

type ManagedClusterPodIdentityExceptionArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentityException)(nil)).Elem()
}

func (o ManagedClusterPodIdentityExceptionArrayOutput) ToManagedClusterPodIdentityExceptionArrayOutput() ManagedClusterPodIdentityExceptionArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionArrayOutput) ToManagedClusterPodIdentityExceptionArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionArrayOutput) Index(i pulumi.IntInput) ManagedClusterPodIdentityExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterPodIdentityException {
		return vs[0].([]ManagedClusterPodIdentityException)[vs[1].(int)]
	}).(ManagedClusterPodIdentityExceptionOutput)
}

// See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.
type ManagedClusterPodIdentityExceptionResponse struct {
	// The name of the pod identity exception.
	Name string `pulumi:"name"`
	// The namespace of the pod identity exception.
	Namespace string `pulumi:"namespace"`
	// The pod labels to match.
	PodLabels map[string]string `pulumi:"podLabels"`
}

// See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.
type ManagedClusterPodIdentityExceptionResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityExceptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityExceptionResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityExceptionResponseOutput) ToManagedClusterPodIdentityExceptionResponseOutput() ManagedClusterPodIdentityExceptionResponseOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionResponseOutput) ToManagedClusterPodIdentityExceptionResponseOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionResponseOutput {
	return o
}

// The name of the pod identity exception.
func (o ManagedClusterPodIdentityExceptionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityExceptionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace of the pod identity exception.
func (o ManagedClusterPodIdentityExceptionResponseOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityExceptionResponse) string { return v.Namespace }).(pulumi.StringOutput)
}

// The pod labels to match.
func (o ManagedClusterPodIdentityExceptionResponseOutput) PodLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityExceptionResponse) map[string]string { return v.PodLabels }).(pulumi.StringMapOutput)
}

type ManagedClusterPodIdentityExceptionResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityExceptionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentityExceptionResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityExceptionResponseArrayOutput) ToManagedClusterPodIdentityExceptionResponseArrayOutput() ManagedClusterPodIdentityExceptionResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionResponseArrayOutput) ToManagedClusterPodIdentityExceptionResponseArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityExceptionResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityExceptionResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterPodIdentityExceptionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterPodIdentityExceptionResponse {
		return vs[0].([]ManagedClusterPodIdentityExceptionResponse)[vs[1].(int)]
	}).(ManagedClusterPodIdentityExceptionResponseOutput)
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.
type ManagedClusterPodIdentityProfile struct {
	// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
	AllowNetworkPluginKubenet *bool `pulumi:"allowNetworkPluginKubenet"`
	// Whether the pod identity addon is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The pod identities to use in the cluster.
	UserAssignedIdentities []ManagedClusterPodIdentity `pulumi:"userAssignedIdentities"`
	// The pod identity exceptions to allow.
	UserAssignedIdentityExceptions []ManagedClusterPodIdentityException `pulumi:"userAssignedIdentityExceptions"`
}

// ManagedClusterPodIdentityProfileInput is an input type that accepts ManagedClusterPodIdentityProfileArgs and ManagedClusterPodIdentityProfileOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityProfileInput` via:
//
//	ManagedClusterPodIdentityProfileArgs{...}
type ManagedClusterPodIdentityProfileInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityProfileOutput() ManagedClusterPodIdentityProfileOutput
	ToManagedClusterPodIdentityProfileOutputWithContext(context.Context) ManagedClusterPodIdentityProfileOutput
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.
type ManagedClusterPodIdentityProfileArgs struct {
	// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
	AllowNetworkPluginKubenet pulumi.BoolPtrInput `pulumi:"allowNetworkPluginKubenet"`
	// Whether the pod identity addon is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The pod identities to use in the cluster.
	UserAssignedIdentities ManagedClusterPodIdentityArrayInput `pulumi:"userAssignedIdentities"`
	// The pod identity exceptions to allow.
	UserAssignedIdentityExceptions ManagedClusterPodIdentityExceptionArrayInput `pulumi:"userAssignedIdentityExceptions"`
}

func (ManagedClusterPodIdentityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityProfile)(nil)).Elem()
}

func (i ManagedClusterPodIdentityProfileArgs) ToManagedClusterPodIdentityProfileOutput() ManagedClusterPodIdentityProfileOutput {
	return i.ToManagedClusterPodIdentityProfileOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityProfileArgs) ToManagedClusterPodIdentityProfileOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityProfileOutput)
}

func (i ManagedClusterPodIdentityProfileArgs) ToManagedClusterPodIdentityProfilePtrOutput() ManagedClusterPodIdentityProfilePtrOutput {
	return i.ToManagedClusterPodIdentityProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterPodIdentityProfileArgs) ToManagedClusterPodIdentityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityProfileOutput).ToManagedClusterPodIdentityProfilePtrOutputWithContext(ctx)
}

// ManagedClusterPodIdentityProfilePtrInput is an input type that accepts ManagedClusterPodIdentityProfileArgs, ManagedClusterPodIdentityProfilePtr and ManagedClusterPodIdentityProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterPodIdentityProfilePtrInput` via:
//
//	        ManagedClusterPodIdentityProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterPodIdentityProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterPodIdentityProfilePtrOutput() ManagedClusterPodIdentityProfilePtrOutput
	ToManagedClusterPodIdentityProfilePtrOutputWithContext(context.Context) ManagedClusterPodIdentityProfilePtrOutput
}

type managedClusterPodIdentityProfilePtrType ManagedClusterPodIdentityProfileArgs

func ManagedClusterPodIdentityProfilePtr(v *ManagedClusterPodIdentityProfileArgs) ManagedClusterPodIdentityProfilePtrInput {
	return (*managedClusterPodIdentityProfilePtrType)(v)
}

func (*managedClusterPodIdentityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPodIdentityProfile)(nil)).Elem()
}

func (i *managedClusterPodIdentityProfilePtrType) ToManagedClusterPodIdentityProfilePtrOutput() ManagedClusterPodIdentityProfilePtrOutput {
	return i.ToManagedClusterPodIdentityProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterPodIdentityProfilePtrType) ToManagedClusterPodIdentityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPodIdentityProfilePtrOutput)
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.
type ManagedClusterPodIdentityProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityProfile)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProfileOutput) ToManagedClusterPodIdentityProfileOutput() ManagedClusterPodIdentityProfileOutput {
	return o
}

func (o ManagedClusterPodIdentityProfileOutput) ToManagedClusterPodIdentityProfileOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfileOutput {
	return o
}

func (o ManagedClusterPodIdentityProfileOutput) ToManagedClusterPodIdentityProfilePtrOutput() ManagedClusterPodIdentityProfilePtrOutput {
	return o.ToManagedClusterPodIdentityProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterPodIdentityProfileOutput) ToManagedClusterPodIdentityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterPodIdentityProfile) *ManagedClusterPodIdentityProfile {
		return &v
	}).(ManagedClusterPodIdentityProfilePtrOutput)
}

// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
func (o ManagedClusterPodIdentityProfileOutput) AllowNetworkPluginKubenet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfile) *bool { return v.AllowNetworkPluginKubenet }).(pulumi.BoolPtrOutput)
}

// Whether the pod identity addon is enabled.
func (o ManagedClusterPodIdentityProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The pod identities to use in the cluster.
func (o ManagedClusterPodIdentityProfileOutput) UserAssignedIdentities() ManagedClusterPodIdentityArrayOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfile) []ManagedClusterPodIdentity { return v.UserAssignedIdentities }).(ManagedClusterPodIdentityArrayOutput)
}

// The pod identity exceptions to allow.
func (o ManagedClusterPodIdentityProfileOutput) UserAssignedIdentityExceptions() ManagedClusterPodIdentityExceptionArrayOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfile) []ManagedClusterPodIdentityException {
		return v.UserAssignedIdentityExceptions
	}).(ManagedClusterPodIdentityExceptionArrayOutput)
}

type ManagedClusterPodIdentityProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPodIdentityProfile)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProfilePtrOutput) ToManagedClusterPodIdentityProfilePtrOutput() ManagedClusterPodIdentityProfilePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProfilePtrOutput) ToManagedClusterPodIdentityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfilePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProfilePtrOutput) Elem() ManagedClusterPodIdentityProfileOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfile) ManagedClusterPodIdentityProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPodIdentityProfile
		return ret
	}).(ManagedClusterPodIdentityProfileOutput)
}

// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
func (o ManagedClusterPodIdentityProfilePtrOutput) AllowNetworkPluginKubenet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfile) *bool {
		if v == nil {
			return nil
		}
		return v.AllowNetworkPluginKubenet
	}).(pulumi.BoolPtrOutput)
}

// Whether the pod identity addon is enabled.
func (o ManagedClusterPodIdentityProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The pod identities to use in the cluster.
func (o ManagedClusterPodIdentityProfilePtrOutput) UserAssignedIdentities() ManagedClusterPodIdentityArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfile) []ManagedClusterPodIdentity {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedClusterPodIdentityArrayOutput)
}

// The pod identity exceptions to allow.
func (o ManagedClusterPodIdentityProfilePtrOutput) UserAssignedIdentityExceptions() ManagedClusterPodIdentityExceptionArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfile) []ManagedClusterPodIdentityException {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityExceptions
	}).(ManagedClusterPodIdentityExceptionArrayOutput)
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.
type ManagedClusterPodIdentityProfileResponse struct {
	// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
	AllowNetworkPluginKubenet *bool `pulumi:"allowNetworkPluginKubenet"`
	// Whether the pod identity addon is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The pod identities to use in the cluster.
	UserAssignedIdentities []ManagedClusterPodIdentityResponse `pulumi:"userAssignedIdentities"`
	// The pod identity exceptions to allow.
	UserAssignedIdentityExceptions []ManagedClusterPodIdentityExceptionResponse `pulumi:"userAssignedIdentityExceptions"`
}

// See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.
type ManagedClusterPodIdentityProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityProfileResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProfileResponseOutput) ToManagedClusterPodIdentityProfileResponseOutput() ManagedClusterPodIdentityProfileResponseOutput {
	return o
}

func (o ManagedClusterPodIdentityProfileResponseOutput) ToManagedClusterPodIdentityProfileResponseOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfileResponseOutput {
	return o
}

// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
func (o ManagedClusterPodIdentityProfileResponseOutput) AllowNetworkPluginKubenet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfileResponse) *bool { return v.AllowNetworkPluginKubenet }).(pulumi.BoolPtrOutput)
}

// Whether the pod identity addon is enabled.
func (o ManagedClusterPodIdentityProfileResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfileResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The pod identities to use in the cluster.
func (o ManagedClusterPodIdentityProfileResponseOutput) UserAssignedIdentities() ManagedClusterPodIdentityResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfileResponse) []ManagedClusterPodIdentityResponse {
		return v.UserAssignedIdentities
	}).(ManagedClusterPodIdentityResponseArrayOutput)
}

// The pod identity exceptions to allow.
func (o ManagedClusterPodIdentityProfileResponseOutput) UserAssignedIdentityExceptions() ManagedClusterPodIdentityExceptionResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProfileResponse) []ManagedClusterPodIdentityExceptionResponse {
		return v.UserAssignedIdentityExceptions
	}).(ManagedClusterPodIdentityExceptionResponseArrayOutput)
}

type ManagedClusterPodIdentityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPodIdentityProfileResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProfileResponsePtrOutput) ToManagedClusterPodIdentityProfileResponsePtrOutput() ManagedClusterPodIdentityProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProfileResponsePtrOutput) ToManagedClusterPodIdentityProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProfileResponsePtrOutput) Elem() ManagedClusterPodIdentityProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfileResponse) ManagedClusterPodIdentityProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPodIdentityProfileResponse
		return ret
	}).(ManagedClusterPodIdentityProfileResponseOutput)
}

// Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.
func (o ManagedClusterPodIdentityProfileResponsePtrOutput) AllowNetworkPluginKubenet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowNetworkPluginKubenet
	}).(pulumi.BoolPtrOutput)
}

// Whether the pod identity addon is enabled.
func (o ManagedClusterPodIdentityProfileResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The pod identities to use in the cluster.
func (o ManagedClusterPodIdentityProfileResponsePtrOutput) UserAssignedIdentities() ManagedClusterPodIdentityResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfileResponse) []ManagedClusterPodIdentityResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedClusterPodIdentityResponseArrayOutput)
}

// The pod identity exceptions to allow.
func (o ManagedClusterPodIdentityProfileResponsePtrOutput) UserAssignedIdentityExceptions() ManagedClusterPodIdentityExceptionResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProfileResponse) []ManagedClusterPodIdentityExceptionResponse {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityExceptions
	}).(ManagedClusterPodIdentityExceptionResponseArrayOutput)
}

// An error response from the pod identity provisioning.
type ManagedClusterPodIdentityProvisioningErrorBodyResponse struct {
	// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
	Code *string `pulumi:"code"`
	// A list of additional details about the error.
	Details []ManagedClusterPodIdentityProvisioningErrorBodyResponse `pulumi:"details"`
	// A message describing the error, intended to be suitable for display in a user interface.
	Message *string `pulumi:"message"`
	// The target of the particular error. For example, the name of the property in error.
	Target *string `pulumi:"target"`
}

// An error response from the pod identity provisioning.
type ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityProvisioningErrorBodyResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponseOutput() ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponseOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput {
	return o
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) Details() ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProvisioningErrorBodyResponse) []ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		return v.Details
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPodIdentityProvisioningErrorBodyResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput() ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) Elem() ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorBodyResponse) ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPodIdentityProvisioningErrorBodyResponse
		return ret
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput)
}

// An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// A list of additional details about the error.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) Details() ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorBodyResponse) []ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput)
}

// A message describing the error, intended to be suitable for display in a user interface.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The target of the particular error. For example, the name of the property in error.
func (o ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorBodyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentityProvisioningErrorBodyResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput() ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput) ToManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		return vs[0].([]ManagedClusterPodIdentityProvisioningErrorBodyResponse)[vs[1].(int)]
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput)
}

// An error response from the pod identity provisioning.
type ManagedClusterPodIdentityProvisioningErrorResponse struct {
	// Details about the error.
	Error *ManagedClusterPodIdentityProvisioningErrorBodyResponse `pulumi:"error"`
}

// An error response from the pod identity provisioning.
type ManagedClusterPodIdentityProvisioningErrorResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProvisioningErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityProvisioningErrorResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProvisioningErrorResponseOutput) ToManagedClusterPodIdentityProvisioningErrorResponseOutput() ManagedClusterPodIdentityProvisioningErrorResponseOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorResponseOutput) ToManagedClusterPodIdentityProvisioningErrorResponseOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProvisioningErrorResponseOutput {
	return o
}

// Details about the error.
func (o ManagedClusterPodIdentityProvisioningErrorResponseOutput) Error() ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityProvisioningErrorResponse) *ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		return v.Error
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput)
}

type ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPodIdentityProvisioningErrorResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput) ToManagedClusterPodIdentityProvisioningErrorResponsePtrOutput() ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput) ToManagedClusterPodIdentityProvisioningErrorResponsePtrOutputWithContext(ctx context.Context) ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput {
	return o
}

func (o ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput) Elem() ManagedClusterPodIdentityProvisioningErrorResponseOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorResponse) ManagedClusterPodIdentityProvisioningErrorResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPodIdentityProvisioningErrorResponse
		return ret
	}).(ManagedClusterPodIdentityProvisioningErrorResponseOutput)
}

// Details about the error.
func (o ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput) Error() ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterPodIdentityProvisioningErrorResponse) *ManagedClusterPodIdentityProvisioningErrorBodyResponse {
		if v == nil {
			return nil
		}
		return v.Error
	}).(ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput)
}

// Details about the pod identity assigned to the Managed Cluster.
type ManagedClusterPodIdentityResponse struct {
	// The binding selector to use for the AzureIdentityBinding resource.
	BindingSelector *string `pulumi:"bindingSelector"`
	// The user assigned identity details.
	Identity UserAssignedIdentityResponse `pulumi:"identity"`
	// The name of the pod identity.
	Name string `pulumi:"name"`
	// The namespace of the pod identity.
	Namespace        string                                            `pulumi:"namespace"`
	ProvisioningInfo ManagedClusterPodIdentityResponseProvisioningInfo `pulumi:"provisioningInfo"`
	// The current provisioning state of the pod identity.
	ProvisioningState string `pulumi:"provisioningState"`
}

// Details about the pod identity assigned to the Managed Cluster.
type ManagedClusterPodIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityResponseOutput) ToManagedClusterPodIdentityResponseOutput() ManagedClusterPodIdentityResponseOutput {
	return o
}

func (o ManagedClusterPodIdentityResponseOutput) ToManagedClusterPodIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterPodIdentityResponseOutput {
	return o
}

// The binding selector to use for the AzureIdentityBinding resource.
func (o ManagedClusterPodIdentityResponseOutput) BindingSelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) *string { return v.BindingSelector }).(pulumi.StringPtrOutput)
}

// The user assigned identity details.
func (o ManagedClusterPodIdentityResponseOutput) Identity() UserAssignedIdentityResponseOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) UserAssignedIdentityResponse { return v.Identity }).(UserAssignedIdentityResponseOutput)
}

// The name of the pod identity.
func (o ManagedClusterPodIdentityResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace of the pod identity.
func (o ManagedClusterPodIdentityResponseOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ManagedClusterPodIdentityResponseOutput) ProvisioningInfo() ManagedClusterPodIdentityResponseProvisioningInfoOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) ManagedClusterPodIdentityResponseProvisioningInfo {
		return v.ProvisioningInfo
	}).(ManagedClusterPodIdentityResponseProvisioningInfoOutput)
}

// The current provisioning state of the pod identity.
func (o ManagedClusterPodIdentityResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ManagedClusterPodIdentityResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedClusterPodIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterPodIdentityResponseArrayOutput) ToManagedClusterPodIdentityResponseArrayOutput() ManagedClusterPodIdentityResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityResponseArrayOutput) ToManagedClusterPodIdentityResponseArrayOutputWithContext(ctx context.Context) ManagedClusterPodIdentityResponseArrayOutput {
	return o
}

func (o ManagedClusterPodIdentityResponseArrayOutput) Index(i pulumi.IntInput) ManagedClusterPodIdentityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedClusterPodIdentityResponse {
		return vs[0].([]ManagedClusterPodIdentityResponse)[vs[1].(int)]
	}).(ManagedClusterPodIdentityResponseOutput)
}

type ManagedClusterPodIdentityResponseProvisioningInfo struct {
	// Pod identity assignment error (if any).
	Error *ManagedClusterPodIdentityProvisioningErrorResponse `pulumi:"error"`
}

type ManagedClusterPodIdentityResponseProvisioningInfoOutput struct{ *pulumi.OutputState }

func (ManagedClusterPodIdentityResponseProvisioningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPodIdentityResponseProvisioningInfo)(nil)).Elem()
}

func (o ManagedClusterPodIdentityResponseProvisioningInfoOutput) ToManagedClusterPodIdentityResponseProvisioningInfoOutput() ManagedClusterPodIdentityResponseProvisioningInfoOutput {
	return o
}

func (o ManagedClusterPodIdentityResponseProvisioningInfoOutput) ToManagedClusterPodIdentityResponseProvisioningInfoOutputWithContext(ctx context.Context) ManagedClusterPodIdentityResponseProvisioningInfoOutput {
	return o
}

// Pod identity assignment error (if any).
func (o ManagedClusterPodIdentityResponseProvisioningInfoOutput) Error() ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPodIdentityResponseProvisioningInfo) *ManagedClusterPodIdentityProvisioningErrorResponse {
		return v.Error
	}).(ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesAutoScalerProfile struct {
	// Valid values are 'true' and 'false'
	BalanceSimilarNodeGroups *string `pulumi:"balanceSimilarNodeGroups"`
	// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
	Expander *string `pulumi:"expander"`
	// The default is 10.
	MaxEmptyBulkDelete *string `pulumi:"maxEmptyBulkDelete"`
	// The default is 600.
	MaxGracefulTerminationSec *string `pulumi:"maxGracefulTerminationSec"`
	// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	MaxNodeProvisionTime *string `pulumi:"maxNodeProvisionTime"`
	// The default is 45. The maximum is 100 and the minimum is 0.
	MaxTotalUnreadyPercentage *string `pulumi:"maxTotalUnreadyPercentage"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
	NewPodScaleUpDelay *string `pulumi:"newPodScaleUpDelay"`
	// This must be an integer. The default is 3.
	OkTotalUnreadyCount *string `pulumi:"okTotalUnreadyCount"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterDelete *string `pulumi:"scaleDownDelayAfterDelete"`
	// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterFailure *string `pulumi:"scaleDownDelayAfterFailure"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnneededTime *string `pulumi:"scaleDownUnneededTime"`
	// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnreadyTime *string `pulumi:"scaleDownUnreadyTime"`
	// The default is '0.5'.
	ScaleDownUtilizationThreshold *string `pulumi:"scaleDownUtilizationThreshold"`
	// The default is '10'. Values must be an integer number of seconds.
	ScanInterval *string `pulumi:"scanInterval"`
	// The default is true.
	SkipNodesWithLocalStorage *string `pulumi:"skipNodesWithLocalStorage"`
	// The default is true.
	SkipNodesWithSystemPods *string `pulumi:"skipNodesWithSystemPods"`
}

// ManagedClusterPropertiesAutoScalerProfileInput is an input type that accepts ManagedClusterPropertiesAutoScalerProfileArgs and ManagedClusterPropertiesAutoScalerProfileOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesAutoScalerProfileInput` via:
//
//	ManagedClusterPropertiesAutoScalerProfileArgs{...}
type ManagedClusterPropertiesAutoScalerProfileInput interface {
	pulumi.Input

	ToManagedClusterPropertiesAutoScalerProfileOutput() ManagedClusterPropertiesAutoScalerProfileOutput
	ToManagedClusterPropertiesAutoScalerProfileOutputWithContext(context.Context) ManagedClusterPropertiesAutoScalerProfileOutput
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesAutoScalerProfileArgs struct {
	// Valid values are 'true' and 'false'
	BalanceSimilarNodeGroups pulumi.StringPtrInput `pulumi:"balanceSimilarNodeGroups"`
	// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// The default is 10.
	MaxEmptyBulkDelete pulumi.StringPtrInput `pulumi:"maxEmptyBulkDelete"`
	// The default is 600.
	MaxGracefulTerminationSec pulumi.StringPtrInput `pulumi:"maxGracefulTerminationSec"`
	// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	MaxNodeProvisionTime pulumi.StringPtrInput `pulumi:"maxNodeProvisionTime"`
	// The default is 45. The maximum is 100 and the minimum is 0.
	MaxTotalUnreadyPercentage pulumi.StringPtrInput `pulumi:"maxTotalUnreadyPercentage"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
	NewPodScaleUpDelay pulumi.StringPtrInput `pulumi:"newPodScaleUpDelay"`
	// This must be an integer. The default is 3.
	OkTotalUnreadyCount pulumi.StringPtrInput `pulumi:"okTotalUnreadyCount"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterAdd pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterAdd"`
	// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterDelete pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterDelete"`
	// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterFailure pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterFailure"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnneededTime pulumi.StringPtrInput `pulumi:"scaleDownUnneededTime"`
	// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnreadyTime pulumi.StringPtrInput `pulumi:"scaleDownUnreadyTime"`
	// The default is '0.5'.
	ScaleDownUtilizationThreshold pulumi.StringPtrInput `pulumi:"scaleDownUtilizationThreshold"`
	// The default is '10'. Values must be an integer number of seconds.
	ScanInterval pulumi.StringPtrInput `pulumi:"scanInterval"`
	// The default is true.
	SkipNodesWithLocalStorage pulumi.StringPtrInput `pulumi:"skipNodesWithLocalStorage"`
	// The default is true.
	SkipNodesWithSystemPods pulumi.StringPtrInput `pulumi:"skipNodesWithSystemPods"`
}

func (ManagedClusterPropertiesAutoScalerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesAutoScalerProfile)(nil)).Elem()
}

func (i ManagedClusterPropertiesAutoScalerProfileArgs) ToManagedClusterPropertiesAutoScalerProfileOutput() ManagedClusterPropertiesAutoScalerProfileOutput {
	return i.ToManagedClusterPropertiesAutoScalerProfileOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesAutoScalerProfileArgs) ToManagedClusterPropertiesAutoScalerProfileOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesAutoScalerProfileOutput)
}

func (i ManagedClusterPropertiesAutoScalerProfileArgs) ToManagedClusterPropertiesAutoScalerProfilePtrOutput() ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return i.ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterPropertiesAutoScalerProfileArgs) ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesAutoScalerProfileOutput).ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(ctx)
}

// ManagedClusterPropertiesAutoScalerProfilePtrInput is an input type that accepts ManagedClusterPropertiesAutoScalerProfileArgs, ManagedClusterPropertiesAutoScalerProfilePtr and ManagedClusterPropertiesAutoScalerProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterPropertiesAutoScalerProfilePtrInput` via:
//
//	        ManagedClusterPropertiesAutoScalerProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterPropertiesAutoScalerProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterPropertiesAutoScalerProfilePtrOutput() ManagedClusterPropertiesAutoScalerProfilePtrOutput
	ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(context.Context) ManagedClusterPropertiesAutoScalerProfilePtrOutput
}

type managedClusterPropertiesAutoScalerProfilePtrType ManagedClusterPropertiesAutoScalerProfileArgs

func ManagedClusterPropertiesAutoScalerProfilePtr(v *ManagedClusterPropertiesAutoScalerProfileArgs) ManagedClusterPropertiesAutoScalerProfilePtrInput {
	return (*managedClusterPropertiesAutoScalerProfilePtrType)(v)
}

func (*managedClusterPropertiesAutoScalerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesAutoScalerProfile)(nil)).Elem()
}

func (i *managedClusterPropertiesAutoScalerProfilePtrType) ToManagedClusterPropertiesAutoScalerProfilePtrOutput() ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return i.ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterPropertiesAutoScalerProfilePtrType) ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterPropertiesAutoScalerProfilePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesAutoScalerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesAutoScalerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesAutoScalerProfile)(nil)).Elem()
}

func (o ManagedClusterPropertiesAutoScalerProfileOutput) ToManagedClusterPropertiesAutoScalerProfileOutput() ManagedClusterPropertiesAutoScalerProfileOutput {
	return o
}

func (o ManagedClusterPropertiesAutoScalerProfileOutput) ToManagedClusterPropertiesAutoScalerProfileOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfileOutput {
	return o
}

func (o ManagedClusterPropertiesAutoScalerProfileOutput) ToManagedClusterPropertiesAutoScalerProfilePtrOutput() ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return o.ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterPropertiesAutoScalerProfileOutput) ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterPropertiesAutoScalerProfile) *ManagedClusterPropertiesAutoScalerProfile {
		return &v
	}).(ManagedClusterPropertiesAutoScalerProfilePtrOutput)
}

// Valid values are 'true' and 'false'
func (o ManagedClusterPropertiesAutoScalerProfileOutput) BalanceSimilarNodeGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.BalanceSimilarNodeGroups }).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// The default is 10.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) MaxEmptyBulkDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.MaxEmptyBulkDelete }).(pulumi.StringPtrOutput)
}

// The default is 600.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.MaxGracefulTerminationSec }).(pulumi.StringPtrOutput)
}

// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) MaxNodeProvisionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.MaxNodeProvisionTime }).(pulumi.StringPtrOutput)
}

// The default is 45. The maximum is 100 and the minimum is 0.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) MaxTotalUnreadyPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.MaxTotalUnreadyPercentage }).(pulumi.StringPtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
func (o ManagedClusterPropertiesAutoScalerProfileOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.NewPodScaleUpDelay }).(pulumi.StringPtrOutput)
}

// This must be an integer. The default is 3.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) OkTotalUnreadyCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.OkTotalUnreadyCount }).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownDelayAfterDelete }).(pulumi.StringPtrOutput)
}

// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownDelayAfterFailure }).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownUnneededTime }).(pulumi.StringPtrOutput)
}

// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownUnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownUnreadyTime }).(pulumi.StringPtrOutput)
}

// The default is '0.5'.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScaleDownUtilizationThreshold }).(pulumi.StringPtrOutput)
}

// The default is '10'. Values must be an integer number of seconds.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.ScanInterval }).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) SkipNodesWithLocalStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.SkipNodesWithLocalStorage }).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesAutoScalerProfileOutput) SkipNodesWithSystemPods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesAutoScalerProfile) *string { return v.SkipNodesWithSystemPods }).(pulumi.StringPtrOutput)
}

type ManagedClusterPropertiesAutoScalerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesAutoScalerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesAutoScalerProfile)(nil)).Elem()
}

func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ToManagedClusterPropertiesAutoScalerProfilePtrOutput() ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return o
}

func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ToManagedClusterPropertiesAutoScalerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesAutoScalerProfilePtrOutput {
	return o
}

func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) Elem() ManagedClusterPropertiesAutoScalerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) ManagedClusterPropertiesAutoScalerProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPropertiesAutoScalerProfile
		return ret
	}).(ManagedClusterPropertiesAutoScalerProfileOutput)
}

// Valid values are 'true' and 'false'
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) BalanceSimilarNodeGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// The default is 10.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) MaxEmptyBulkDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxEmptyBulkDelete
	}).(pulumi.StringPtrOutput)
}

// The default is 600.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.StringPtrOutput)
}

// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) MaxNodeProvisionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxNodeProvisionTime
	}).(pulumi.StringPtrOutput)
}

// The default is 45. The maximum is 100 and the minimum is 0.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) MaxTotalUnreadyPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxTotalUnreadyPercentage
	}).(pulumi.StringPtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.NewPodScaleUpDelay
	}).(pulumi.StringPtrOutput)
}

// This must be an integer. The default is 3.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) OkTotalUnreadyCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.OkTotalUnreadyCount
	}).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterDelete
	}).(pulumi.StringPtrOutput)
}

// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterFailure
	}).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneededTime
	}).(pulumi.StringPtrOutput)
}

// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownUnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnreadyTime
	}).(pulumi.StringPtrOutput)
}

// The default is '0.5'.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.StringPtrOutput)
}

// The default is '10'. Values must be an integer number of seconds.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScanInterval
	}).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) SkipNodesWithLocalStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithLocalStorage
	}).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesAutoScalerProfilePtrOutput) SkipNodesWithSystemPods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithSystemPods
	}).(pulumi.StringPtrOutput)
}

// managed cluster properties for snapshot, these properties are read only.
type ManagedClusterPropertiesForSnapshotResponse struct {
	// Whether the cluster has enabled Kubernetes Role-Based Access Control or not.
	EnableRbac *bool `pulumi:"enableRbac"`
	// The current kubernetes version.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The current network profile.
	NetworkProfile NetworkProfileForSnapshotResponse `pulumi:"networkProfile"`
	// The current managed cluster sku.
	Sku *ManagedClusterSKUResponse `pulumi:"sku"`
}

// managed cluster properties for snapshot, these properties are read only.
type ManagedClusterPropertiesForSnapshotResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesForSnapshotResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesForSnapshotResponse)(nil)).Elem()
}

func (o ManagedClusterPropertiesForSnapshotResponseOutput) ToManagedClusterPropertiesForSnapshotResponseOutput() ManagedClusterPropertiesForSnapshotResponseOutput {
	return o
}

func (o ManagedClusterPropertiesForSnapshotResponseOutput) ToManagedClusterPropertiesForSnapshotResponseOutputWithContext(ctx context.Context) ManagedClusterPropertiesForSnapshotResponseOutput {
	return o
}

// Whether the cluster has enabled Kubernetes Role-Based Access Control or not.
func (o ManagedClusterPropertiesForSnapshotResponseOutput) EnableRbac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesForSnapshotResponse) *bool { return v.EnableRbac }).(pulumi.BoolPtrOutput)
}

// The current kubernetes version.
func (o ManagedClusterPropertiesForSnapshotResponseOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesForSnapshotResponse) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// The current network profile.
func (o ManagedClusterPropertiesForSnapshotResponseOutput) NetworkProfile() NetworkProfileForSnapshotResponseOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesForSnapshotResponse) NetworkProfileForSnapshotResponse {
		return v.NetworkProfile
	}).(NetworkProfileForSnapshotResponseOutput)
}

// The current managed cluster sku.
func (o ManagedClusterPropertiesForSnapshotResponseOutput) Sku() ManagedClusterSKUResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesForSnapshotResponse) *ManagedClusterSKUResponse { return v.Sku }).(ManagedClusterSKUResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesResponseAutoScalerProfile struct {
	// Valid values are 'true' and 'false'
	BalanceSimilarNodeGroups *string `pulumi:"balanceSimilarNodeGroups"`
	// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
	Expander *string `pulumi:"expander"`
	// The default is 10.
	MaxEmptyBulkDelete *string `pulumi:"maxEmptyBulkDelete"`
	// The default is 600.
	MaxGracefulTerminationSec *string `pulumi:"maxGracefulTerminationSec"`
	// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	MaxNodeProvisionTime *string `pulumi:"maxNodeProvisionTime"`
	// The default is 45. The maximum is 100 and the minimum is 0.
	MaxTotalUnreadyPercentage *string `pulumi:"maxTotalUnreadyPercentage"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
	NewPodScaleUpDelay *string `pulumi:"newPodScaleUpDelay"`
	// This must be an integer. The default is 3.
	OkTotalUnreadyCount *string `pulumi:"okTotalUnreadyCount"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterDelete *string `pulumi:"scaleDownDelayAfterDelete"`
	// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterFailure *string `pulumi:"scaleDownDelayAfterFailure"`
	// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnneededTime *string `pulumi:"scaleDownUnneededTime"`
	// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
	ScaleDownUnreadyTime *string `pulumi:"scaleDownUnreadyTime"`
	// The default is '0.5'.
	ScaleDownUtilizationThreshold *string `pulumi:"scaleDownUtilizationThreshold"`
	// The default is '10'. Values must be an integer number of seconds.
	ScanInterval *string `pulumi:"scanInterval"`
	// The default is true.
	SkipNodesWithLocalStorage *string `pulumi:"skipNodesWithLocalStorage"`
	// The default is true.
	SkipNodesWithSystemPods *string `pulumi:"skipNodesWithSystemPods"`
}

// Parameters to be applied to the cluster-autoscaler when enabled
type ManagedClusterPropertiesResponseAutoScalerProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponseAutoScalerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterPropertiesResponseAutoScalerProfile)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ToManagedClusterPropertiesResponseAutoScalerProfileOutput() ManagedClusterPropertiesResponseAutoScalerProfileOutput {
	return o
}

func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ToManagedClusterPropertiesResponseAutoScalerProfileOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseAutoScalerProfileOutput {
	return o
}

// Valid values are 'true' and 'false'
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) BalanceSimilarNodeGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.BalanceSimilarNodeGroups }).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// The default is 10.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) MaxEmptyBulkDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.MaxEmptyBulkDelete }).(pulumi.StringPtrOutput)
}

// The default is 600.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.MaxGracefulTerminationSec }).(pulumi.StringPtrOutput)
}

// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) MaxNodeProvisionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.MaxNodeProvisionTime }).(pulumi.StringPtrOutput)
}

// The default is 45. The maximum is 100 and the minimum is 0.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) MaxTotalUnreadyPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.MaxTotalUnreadyPercentage }).(pulumi.StringPtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.NewPodScaleUpDelay }).(pulumi.StringPtrOutput)
}

// This must be an integer. The default is 3.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) OkTotalUnreadyCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.OkTotalUnreadyCount }).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScaleDownDelayAfterDelete }).(pulumi.StringPtrOutput)
}

// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScaleDownDelayAfterFailure }).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScaleDownUnneededTime }).(pulumi.StringPtrOutput)
}

// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownUnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScaleDownUnreadyTime }).(pulumi.StringPtrOutput)
}

// The default is '0.5'.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.StringPtrOutput)
}

// The default is '10'. Values must be an integer number of seconds.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.ScanInterval }).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) SkipNodesWithLocalStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.SkipNodesWithLocalStorage }).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesResponseAutoScalerProfileOutput) SkipNodesWithSystemPods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterPropertiesResponseAutoScalerProfile) *string { return v.SkipNodesWithSystemPods }).(pulumi.StringPtrOutput)
}

type ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterPropertiesResponseAutoScalerProfile)(nil)).Elem()
}

func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ToManagedClusterPropertiesResponseAutoScalerProfilePtrOutput() ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ToManagedClusterPropertiesResponseAutoScalerProfilePtrOutputWithContext(ctx context.Context) ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput {
	return o
}

func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) Elem() ManagedClusterPropertiesResponseAutoScalerProfileOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) ManagedClusterPropertiesResponseAutoScalerProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterPropertiesResponseAutoScalerProfile
		return ret
	}).(ManagedClusterPropertiesResponseAutoScalerProfileOutput)
}

// Valid values are 'true' and 'false'
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) BalanceSimilarNodeGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// The default is 10.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) MaxEmptyBulkDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxEmptyBulkDelete
	}).(pulumi.StringPtrOutput)
}

// The default is 600.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) MaxGracefulTerminationSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.StringPtrOutput)
}

// The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) MaxNodeProvisionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxNodeProvisionTime
	}).(pulumi.StringPtrOutput)
}

// The default is 45. The maximum is 100 and the minimum is 0.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) MaxTotalUnreadyPercentage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.MaxTotalUnreadyPercentage
	}).(pulumi.StringPtrOutput)
}

// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) NewPodScaleUpDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.NewPodScaleUpDelay
	}).(pulumi.StringPtrOutput)
}

// This must be an integer. The default is 3.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) OkTotalUnreadyCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.OkTotalUnreadyCount
	}).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownDelayAfterDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterDelete
	}).(pulumi.StringPtrOutput)
}

// The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownDelayAfterFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterFailure
	}).(pulumi.StringPtrOutput)
}

// The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneededTime
	}).(pulumi.StringPtrOutput)
}

// The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownUnreadyTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnreadyTime
	}).(pulumi.StringPtrOutput)
}

// The default is '0.5'.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScaleDownUtilizationThreshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.StringPtrOutput)
}

// The default is '10'. Values must be an integer number of seconds.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) ScanInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.ScanInterval
	}).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) SkipNodesWithLocalStorage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithLocalStorage
	}).(pulumi.StringPtrOutput)
}

// The default is true.
func (o ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput) SkipNodesWithSystemPods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterPropertiesResponseAutoScalerProfile) *string {
		if v == nil {
			return nil
		}
		return v.SkipNodesWithSystemPods
	}).(pulumi.StringPtrOutput)
}

// The SKU of a Managed Cluster.
type ManagedClusterSKU struct {
	// The name of a managed cluster SKU.
	Name *string `pulumi:"name"`
	// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
	Tier *string `pulumi:"tier"`
}

// ManagedClusterSKUInput is an input type that accepts ManagedClusterSKUArgs and ManagedClusterSKUOutput values.
// You can construct a concrete instance of `ManagedClusterSKUInput` via:
//
//	ManagedClusterSKUArgs{...}
type ManagedClusterSKUInput interface {
	pulumi.Input

	ToManagedClusterSKUOutput() ManagedClusterSKUOutput
	ToManagedClusterSKUOutputWithContext(context.Context) ManagedClusterSKUOutput
}

// The SKU of a Managed Cluster.
type ManagedClusterSKUArgs struct {
	// The name of a managed cluster SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ManagedClusterSKUArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKU)(nil)).Elem()
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUOutput() ManagedClusterSKUOutput {
	return i.ToManagedClusterSKUOutputWithContext(context.Background())
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUOutputWithContext(ctx context.Context) ManagedClusterSKUOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUOutput)
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return i.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (i ManagedClusterSKUArgs) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUOutput).ToManagedClusterSKUPtrOutputWithContext(ctx)
}

// ManagedClusterSKUPtrInput is an input type that accepts ManagedClusterSKUArgs, ManagedClusterSKUPtr and ManagedClusterSKUPtrOutput values.
// You can construct a concrete instance of `ManagedClusterSKUPtrInput` via:
//
//	        ManagedClusterSKUArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterSKUPtrInput interface {
	pulumi.Input

	ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput
	ToManagedClusterSKUPtrOutputWithContext(context.Context) ManagedClusterSKUPtrOutput
}

type managedClusterSKUPtrType ManagedClusterSKUArgs

func ManagedClusterSKUPtr(v *ManagedClusterSKUArgs) ManagedClusterSKUPtrInput {
	return (*managedClusterSKUPtrType)(v)
}

func (*managedClusterSKUPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKU)(nil)).Elem()
}

func (i *managedClusterSKUPtrType) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return i.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (i *managedClusterSKUPtrType) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSKUPtrOutput)
}

// The SKU of a Managed Cluster.
type ManagedClusterSKUOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKU)(nil)).Elem()
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUOutput() ManagedClusterSKUOutput {
	return o
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUOutputWithContext(ctx context.Context) ManagedClusterSKUOutput {
	return o
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return o.ToManagedClusterSKUPtrOutputWithContext(context.Background())
}

func (o ManagedClusterSKUOutput) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterSKU) *ManagedClusterSKU {
		return &v
	}).(ManagedClusterSKUPtrOutput)
}

// The name of a managed cluster SKU.
func (o ManagedClusterSKUOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKU) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
func (o ManagedClusterSKUOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKU) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ManagedClusterSKUPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKU)(nil)).Elem()
}

func (o ManagedClusterSKUPtrOutput) ToManagedClusterSKUPtrOutput() ManagedClusterSKUPtrOutput {
	return o
}

func (o ManagedClusterSKUPtrOutput) ToManagedClusterSKUPtrOutputWithContext(ctx context.Context) ManagedClusterSKUPtrOutput {
	return o
}

func (o ManagedClusterSKUPtrOutput) Elem() ManagedClusterSKUOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) ManagedClusterSKU {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSKU
		return ret
	}).(ManagedClusterSKUOutput)
}

// The name of a managed cluster SKU.
func (o ManagedClusterSKUPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
func (o ManagedClusterSKUPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKU) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The SKU of a Managed Cluster.
type ManagedClusterSKUResponse struct {
	// The name of a managed cluster SKU.
	Name *string `pulumi:"name"`
	// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
	Tier *string `pulumi:"tier"`
}

// The SKU of a Managed Cluster.
type ManagedClusterSKUResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSKUResponse)(nil)).Elem()
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponseOutput() ManagedClusterSKUResponseOutput {
	return o
}

func (o ManagedClusterSKUResponseOutput) ToManagedClusterSKUResponseOutputWithContext(ctx context.Context) ManagedClusterSKUResponseOutput {
	return o
}

// The name of a managed cluster SKU.
func (o ManagedClusterSKUResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKUResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
func (o ManagedClusterSKUResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSKUResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ManagedClusterSKUResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSKUResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSKUResponse)(nil)).Elem()
}

func (o ManagedClusterSKUResponsePtrOutput) ToManagedClusterSKUResponsePtrOutput() ManagedClusterSKUResponsePtrOutput {
	return o
}

func (o ManagedClusterSKUResponsePtrOutput) ToManagedClusterSKUResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSKUResponsePtrOutput {
	return o
}

func (o ManagedClusterSKUResponsePtrOutput) Elem() ManagedClusterSKUResponseOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) ManagedClusterSKUResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSKUResponse
		return ret
	}).(ManagedClusterSKUResponseOutput)
}

// The name of a managed cluster SKU.
func (o ManagedClusterSKUResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If not specified, the default is 'Free'. See [uptime SLA](https://docs.microsoft.com/azure/aks/uptime-sla) for more details.
func (o ManagedClusterSKUResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSKUResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Security profile for the container service cluster.
type ManagedClusterSecurityProfile struct {
	// Azure Defender settings for the security profile.
	AzureDefender *ManagedClusterSecurityProfileAzureDefender `pulumi:"azureDefender"`
	// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
	AzureKeyVaultKms *AzureKeyVaultKms `pulumi:"azureKeyVaultKms"`
	// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
	WorkloadIdentity *ManagedClusterSecurityProfileWorkloadIdentity `pulumi:"workloadIdentity"`
}

// ManagedClusterSecurityProfileInput is an input type that accepts ManagedClusterSecurityProfileArgs and ManagedClusterSecurityProfileOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfileInput` via:
//
//	ManagedClusterSecurityProfileArgs{...}
type ManagedClusterSecurityProfileInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfileOutput() ManagedClusterSecurityProfileOutput
	ToManagedClusterSecurityProfileOutputWithContext(context.Context) ManagedClusterSecurityProfileOutput
}

// Security profile for the container service cluster.
type ManagedClusterSecurityProfileArgs struct {
	// Azure Defender settings for the security profile.
	AzureDefender ManagedClusterSecurityProfileAzureDefenderPtrInput `pulumi:"azureDefender"`
	// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
	AzureKeyVaultKms AzureKeyVaultKmsPtrInput `pulumi:"azureKeyVaultKms"`
	// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
	WorkloadIdentity ManagedClusterSecurityProfileWorkloadIdentityPtrInput `pulumi:"workloadIdentity"`
}

func (ManagedClusterSecurityProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfile)(nil)).Elem()
}

func (i ManagedClusterSecurityProfileArgs) ToManagedClusterSecurityProfileOutput() ManagedClusterSecurityProfileOutput {
	return i.ToManagedClusterSecurityProfileOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileArgs) ToManagedClusterSecurityProfileOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileOutput)
}

func (i ManagedClusterSecurityProfileArgs) ToManagedClusterSecurityProfilePtrOutput() ManagedClusterSecurityProfilePtrOutput {
	return i.ToManagedClusterSecurityProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileArgs) ToManagedClusterSecurityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileOutput).ToManagedClusterSecurityProfilePtrOutputWithContext(ctx)
}

// ManagedClusterSecurityProfilePtrInput is an input type that accepts ManagedClusterSecurityProfileArgs, ManagedClusterSecurityProfilePtr and ManagedClusterSecurityProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfilePtrInput` via:
//
//	        ManagedClusterSecurityProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterSecurityProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfilePtrOutput() ManagedClusterSecurityProfilePtrOutput
	ToManagedClusterSecurityProfilePtrOutputWithContext(context.Context) ManagedClusterSecurityProfilePtrOutput
}

type managedClusterSecurityProfilePtrType ManagedClusterSecurityProfileArgs

func ManagedClusterSecurityProfilePtr(v *ManagedClusterSecurityProfileArgs) ManagedClusterSecurityProfilePtrInput {
	return (*managedClusterSecurityProfilePtrType)(v)
}

func (*managedClusterSecurityProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfile)(nil)).Elem()
}

func (i *managedClusterSecurityProfilePtrType) ToManagedClusterSecurityProfilePtrOutput() ManagedClusterSecurityProfilePtrOutput {
	return i.ToManagedClusterSecurityProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterSecurityProfilePtrType) ToManagedClusterSecurityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfilePtrOutput)
}

// Security profile for the container service cluster.
type ManagedClusterSecurityProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfile)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileOutput) ToManagedClusterSecurityProfileOutput() ManagedClusterSecurityProfileOutput {
	return o
}

func (o ManagedClusterSecurityProfileOutput) ToManagedClusterSecurityProfileOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileOutput {
	return o
}

func (o ManagedClusterSecurityProfileOutput) ToManagedClusterSecurityProfilePtrOutput() ManagedClusterSecurityProfilePtrOutput {
	return o.ToManagedClusterSecurityProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterSecurityProfileOutput) ToManagedClusterSecurityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterSecurityProfile) *ManagedClusterSecurityProfile {
		return &v
	}).(ManagedClusterSecurityProfilePtrOutput)
}

// Azure Defender settings for the security profile.
func (o ManagedClusterSecurityProfileOutput) AzureDefender() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfile) *ManagedClusterSecurityProfileAzureDefender {
		return v.AzureDefender
	}).(ManagedClusterSecurityProfileAzureDefenderPtrOutput)
}

// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
func (o ManagedClusterSecurityProfileOutput) AzureKeyVaultKms() AzureKeyVaultKmsPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfile) *AzureKeyVaultKms { return v.AzureKeyVaultKms }).(AzureKeyVaultKmsPtrOutput)
}

// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
func (o ManagedClusterSecurityProfileOutput) WorkloadIdentity() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfile) *ManagedClusterSecurityProfileWorkloadIdentity {
		return v.WorkloadIdentity
	}).(ManagedClusterSecurityProfileWorkloadIdentityPtrOutput)
}

type ManagedClusterSecurityProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfile)(nil)).Elem()
}

func (o ManagedClusterSecurityProfilePtrOutput) ToManagedClusterSecurityProfilePtrOutput() ManagedClusterSecurityProfilePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfilePtrOutput) ToManagedClusterSecurityProfilePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfilePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfilePtrOutput) Elem() ManagedClusterSecurityProfileOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfile) ManagedClusterSecurityProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfile
		return ret
	}).(ManagedClusterSecurityProfileOutput)
}

// Azure Defender settings for the security profile.
func (o ManagedClusterSecurityProfilePtrOutput) AzureDefender() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfile) *ManagedClusterSecurityProfileAzureDefender {
		if v == nil {
			return nil
		}
		return v.AzureDefender
	}).(ManagedClusterSecurityProfileAzureDefenderPtrOutput)
}

// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
func (o ManagedClusterSecurityProfilePtrOutput) AzureKeyVaultKms() AzureKeyVaultKmsPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfile) *AzureKeyVaultKms {
		if v == nil {
			return nil
		}
		return v.AzureKeyVaultKms
	}).(AzureKeyVaultKmsPtrOutput)
}

// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
func (o ManagedClusterSecurityProfilePtrOutput) WorkloadIdentity() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfile) *ManagedClusterSecurityProfileWorkloadIdentity {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(ManagedClusterSecurityProfileWorkloadIdentityPtrOutput)
}

// Azure Defender settings for the security profile.
type ManagedClusterSecurityProfileAzureDefender struct {
	// Whether to enable Azure Defender
	Enabled *bool `pulumi:"enabled"`
	// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
	LogAnalyticsWorkspaceResourceId *string `pulumi:"logAnalyticsWorkspaceResourceId"`
}

// ManagedClusterSecurityProfileAzureDefenderInput is an input type that accepts ManagedClusterSecurityProfileAzureDefenderArgs and ManagedClusterSecurityProfileAzureDefenderOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfileAzureDefenderInput` via:
//
//	ManagedClusterSecurityProfileAzureDefenderArgs{...}
type ManagedClusterSecurityProfileAzureDefenderInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfileAzureDefenderOutput() ManagedClusterSecurityProfileAzureDefenderOutput
	ToManagedClusterSecurityProfileAzureDefenderOutputWithContext(context.Context) ManagedClusterSecurityProfileAzureDefenderOutput
}

// Azure Defender settings for the security profile.
type ManagedClusterSecurityProfileAzureDefenderArgs struct {
	// Whether to enable Azure Defender
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
	LogAnalyticsWorkspaceResourceId pulumi.StringPtrInput `pulumi:"logAnalyticsWorkspaceResourceId"`
}

func (ManagedClusterSecurityProfileAzureDefenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileAzureDefender)(nil)).Elem()
}

func (i ManagedClusterSecurityProfileAzureDefenderArgs) ToManagedClusterSecurityProfileAzureDefenderOutput() ManagedClusterSecurityProfileAzureDefenderOutput {
	return i.ToManagedClusterSecurityProfileAzureDefenderOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileAzureDefenderArgs) ToManagedClusterSecurityProfileAzureDefenderOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileAzureDefenderOutput)
}

func (i ManagedClusterSecurityProfileAzureDefenderArgs) ToManagedClusterSecurityProfileAzureDefenderPtrOutput() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return i.ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileAzureDefenderArgs) ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileAzureDefenderOutput).ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(ctx)
}

// ManagedClusterSecurityProfileAzureDefenderPtrInput is an input type that accepts ManagedClusterSecurityProfileAzureDefenderArgs, ManagedClusterSecurityProfileAzureDefenderPtr and ManagedClusterSecurityProfileAzureDefenderPtrOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfileAzureDefenderPtrInput` via:
//
//	        ManagedClusterSecurityProfileAzureDefenderArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterSecurityProfileAzureDefenderPtrInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfileAzureDefenderPtrOutput() ManagedClusterSecurityProfileAzureDefenderPtrOutput
	ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(context.Context) ManagedClusterSecurityProfileAzureDefenderPtrOutput
}

type managedClusterSecurityProfileAzureDefenderPtrType ManagedClusterSecurityProfileAzureDefenderArgs

func ManagedClusterSecurityProfileAzureDefenderPtr(v *ManagedClusterSecurityProfileAzureDefenderArgs) ManagedClusterSecurityProfileAzureDefenderPtrInput {
	return (*managedClusterSecurityProfileAzureDefenderPtrType)(v)
}

func (*managedClusterSecurityProfileAzureDefenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileAzureDefender)(nil)).Elem()
}

func (i *managedClusterSecurityProfileAzureDefenderPtrType) ToManagedClusterSecurityProfileAzureDefenderPtrOutput() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return i.ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(context.Background())
}

func (i *managedClusterSecurityProfileAzureDefenderPtrType) ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileAzureDefenderPtrOutput)
}

// Azure Defender settings for the security profile.
type ManagedClusterSecurityProfileAzureDefenderOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileAzureDefenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileAzureDefender)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileAzureDefenderOutput) ToManagedClusterSecurityProfileAzureDefenderOutput() ManagedClusterSecurityProfileAzureDefenderOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderOutput) ToManagedClusterSecurityProfileAzureDefenderOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderOutput) ToManagedClusterSecurityProfileAzureDefenderPtrOutput() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o.ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(context.Background())
}

func (o ManagedClusterSecurityProfileAzureDefenderOutput) ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterSecurityProfileAzureDefender) *ManagedClusterSecurityProfileAzureDefender {
		return &v
	}).(ManagedClusterSecurityProfileAzureDefenderPtrOutput)
}

// Whether to enable Azure Defender
func (o ManagedClusterSecurityProfileAzureDefenderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileAzureDefender) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
func (o ManagedClusterSecurityProfileAzureDefenderOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileAzureDefender) *string { return v.LogAnalyticsWorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type ManagedClusterSecurityProfileAzureDefenderPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileAzureDefenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileAzureDefender)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileAzureDefenderPtrOutput) ToManagedClusterSecurityProfileAzureDefenderPtrOutput() ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderPtrOutput) ToManagedClusterSecurityProfileAzureDefenderPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderPtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderPtrOutput) Elem() ManagedClusterSecurityProfileAzureDefenderOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefender) ManagedClusterSecurityProfileAzureDefender {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfileAzureDefender
		return ret
	}).(ManagedClusterSecurityProfileAzureDefenderOutput)
}

// Whether to enable Azure Defender
func (o ManagedClusterSecurityProfileAzureDefenderPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefender) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
func (o ManagedClusterSecurityProfileAzureDefenderPtrOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefender) *string {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Defender settings for the security profile.
type ManagedClusterSecurityProfileAzureDefenderResponse struct {
	// Whether to enable Azure Defender
	Enabled *bool `pulumi:"enabled"`
	// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
	LogAnalyticsWorkspaceResourceId *string `pulumi:"logAnalyticsWorkspaceResourceId"`
}

// Azure Defender settings for the security profile.
type ManagedClusterSecurityProfileAzureDefenderResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileAzureDefenderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileAzureDefenderResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileAzureDefenderResponseOutput) ToManagedClusterSecurityProfileAzureDefenderResponseOutput() ManagedClusterSecurityProfileAzureDefenderResponseOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderResponseOutput) ToManagedClusterSecurityProfileAzureDefenderResponseOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderResponseOutput {
	return o
}

// Whether to enable Azure Defender
func (o ManagedClusterSecurityProfileAzureDefenderResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileAzureDefenderResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
func (o ManagedClusterSecurityProfileAzureDefenderResponseOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileAzureDefenderResponse) *string {
		return v.LogAnalyticsWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

type ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileAzureDefenderResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) ToManagedClusterSecurityProfileAzureDefenderResponsePtrOutput() ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) ToManagedClusterSecurityProfileAzureDefenderResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) Elem() ManagedClusterSecurityProfileAzureDefenderResponseOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefenderResponse) ManagedClusterSecurityProfileAzureDefenderResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfileAzureDefenderResponse
		return ret
	}).(ManagedClusterSecurityProfileAzureDefenderResponseOutput)
}

// Whether to enable Azure Defender
func (o ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefenderResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Resource ID of the Log Analytics workspace to be associated with Azure Defender.  When Azure Defender is enabled, this field is required and must be a valid workspace resource ID. When Azure Defender is disabled, leave the field empty.
func (o ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput) LogAnalyticsWorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileAzureDefenderResponse) *string {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsWorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Security profile for the container service cluster.
type ManagedClusterSecurityProfileResponse struct {
	// Azure Defender settings for the security profile.
	AzureDefender *ManagedClusterSecurityProfileAzureDefenderResponse `pulumi:"azureDefender"`
	// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
	AzureKeyVaultKms *AzureKeyVaultKmsResponse `pulumi:"azureKeyVaultKms"`
	// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
	WorkloadIdentity *ManagedClusterSecurityProfileWorkloadIdentityResponse `pulumi:"workloadIdentity"`
}

// Security profile for the container service cluster.
type ManagedClusterSecurityProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileResponseOutput) ToManagedClusterSecurityProfileResponseOutput() ManagedClusterSecurityProfileResponseOutput {
	return o
}

func (o ManagedClusterSecurityProfileResponseOutput) ToManagedClusterSecurityProfileResponseOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileResponseOutput {
	return o
}

// Azure Defender settings for the security profile.
func (o ManagedClusterSecurityProfileResponseOutput) AzureDefender() ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileResponse) *ManagedClusterSecurityProfileAzureDefenderResponse {
		return v.AzureDefender
	}).(ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput)
}

// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
func (o ManagedClusterSecurityProfileResponseOutput) AzureKeyVaultKms() AzureKeyVaultKmsResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileResponse) *AzureKeyVaultKmsResponse { return v.AzureKeyVaultKms }).(AzureKeyVaultKmsResponsePtrOutput)
}

// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
func (o ManagedClusterSecurityProfileResponseOutput) WorkloadIdentity() ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileResponse) *ManagedClusterSecurityProfileWorkloadIdentityResponse {
		return v.WorkloadIdentity
	}).(ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput)
}

type ManagedClusterSecurityProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileResponsePtrOutput) ToManagedClusterSecurityProfileResponsePtrOutput() ManagedClusterSecurityProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileResponsePtrOutput) ToManagedClusterSecurityProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileResponsePtrOutput) Elem() ManagedClusterSecurityProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileResponse) ManagedClusterSecurityProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfileResponse
		return ret
	}).(ManagedClusterSecurityProfileResponseOutput)
}

// Azure Defender settings for the security profile.
func (o ManagedClusterSecurityProfileResponsePtrOutput) AzureDefender() ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileResponse) *ManagedClusterSecurityProfileAzureDefenderResponse {
		if v == nil {
			return nil
		}
		return v.AzureDefender
	}).(ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput)
}

// Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.
func (o ManagedClusterSecurityProfileResponsePtrOutput) AzureKeyVaultKms() AzureKeyVaultKmsResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileResponse) *AzureKeyVaultKmsResponse {
		if v == nil {
			return nil
		}
		return v.AzureKeyVaultKms
	}).(AzureKeyVaultKmsResponsePtrOutput)
}

// [Workload Identity](https://azure.github.io/azure-workload-identity/docs/) settings for the security profile.
func (o ManagedClusterSecurityProfileResponsePtrOutput) WorkloadIdentity() ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileResponse) *ManagedClusterSecurityProfileWorkloadIdentityResponse {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput)
}

// Workload Identity settings for the security profile.
type ManagedClusterSecurityProfileWorkloadIdentity struct {
	// Whether to enable Workload Identity
	Enabled *bool `pulumi:"enabled"`
}

// ManagedClusterSecurityProfileWorkloadIdentityInput is an input type that accepts ManagedClusterSecurityProfileWorkloadIdentityArgs and ManagedClusterSecurityProfileWorkloadIdentityOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfileWorkloadIdentityInput` via:
//
//	ManagedClusterSecurityProfileWorkloadIdentityArgs{...}
type ManagedClusterSecurityProfileWorkloadIdentityInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfileWorkloadIdentityOutput() ManagedClusterSecurityProfileWorkloadIdentityOutput
	ToManagedClusterSecurityProfileWorkloadIdentityOutputWithContext(context.Context) ManagedClusterSecurityProfileWorkloadIdentityOutput
}

// Workload Identity settings for the security profile.
type ManagedClusterSecurityProfileWorkloadIdentityArgs struct {
	// Whether to enable Workload Identity
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedClusterSecurityProfileWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileWorkloadIdentity)(nil)).Elem()
}

func (i ManagedClusterSecurityProfileWorkloadIdentityArgs) ToManagedClusterSecurityProfileWorkloadIdentityOutput() ManagedClusterSecurityProfileWorkloadIdentityOutput {
	return i.ToManagedClusterSecurityProfileWorkloadIdentityOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileWorkloadIdentityArgs) ToManagedClusterSecurityProfileWorkloadIdentityOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileWorkloadIdentityOutput)
}

func (i ManagedClusterSecurityProfileWorkloadIdentityArgs) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutput() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return i.ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedClusterSecurityProfileWorkloadIdentityArgs) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileWorkloadIdentityOutput).ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(ctx)
}

// ManagedClusterSecurityProfileWorkloadIdentityPtrInput is an input type that accepts ManagedClusterSecurityProfileWorkloadIdentityArgs, ManagedClusterSecurityProfileWorkloadIdentityPtr and ManagedClusterSecurityProfileWorkloadIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedClusterSecurityProfileWorkloadIdentityPtrInput` via:
//
//	        ManagedClusterSecurityProfileWorkloadIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterSecurityProfileWorkloadIdentityPtrInput interface {
	pulumi.Input

	ToManagedClusterSecurityProfileWorkloadIdentityPtrOutput() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput
	ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(context.Context) ManagedClusterSecurityProfileWorkloadIdentityPtrOutput
}

type managedClusterSecurityProfileWorkloadIdentityPtrType ManagedClusterSecurityProfileWorkloadIdentityArgs

func ManagedClusterSecurityProfileWorkloadIdentityPtr(v *ManagedClusterSecurityProfileWorkloadIdentityArgs) ManagedClusterSecurityProfileWorkloadIdentityPtrInput {
	return (*managedClusterSecurityProfileWorkloadIdentityPtrType)(v)
}

func (*managedClusterSecurityProfileWorkloadIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileWorkloadIdentity)(nil)).Elem()
}

func (i *managedClusterSecurityProfileWorkloadIdentityPtrType) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutput() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return i.ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i *managedClusterSecurityProfileWorkloadIdentityPtrType) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterSecurityProfileWorkloadIdentityPtrOutput)
}

// Workload Identity settings for the security profile.
type ManagedClusterSecurityProfileWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileWorkloadIdentity)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileWorkloadIdentityOutput) ToManagedClusterSecurityProfileWorkloadIdentityOutput() ManagedClusterSecurityProfileWorkloadIdentityOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityOutput) ToManagedClusterSecurityProfileWorkloadIdentityOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityOutput) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutput() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o.ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedClusterSecurityProfileWorkloadIdentityOutput) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterSecurityProfileWorkloadIdentity) *ManagedClusterSecurityProfileWorkloadIdentity {
		return &v
	}).(ManagedClusterSecurityProfileWorkloadIdentityPtrOutput)
}

// Whether to enable Workload Identity
func (o ManagedClusterSecurityProfileWorkloadIdentityOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileWorkloadIdentity) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterSecurityProfileWorkloadIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileWorkloadIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileWorkloadIdentity)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileWorkloadIdentityPtrOutput) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutput() ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityPtrOutput) ToManagedClusterSecurityProfileWorkloadIdentityPtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityPtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityPtrOutput) Elem() ManagedClusterSecurityProfileWorkloadIdentityOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileWorkloadIdentity) ManagedClusterSecurityProfileWorkloadIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfileWorkloadIdentity
		return ret
	}).(ManagedClusterSecurityProfileWorkloadIdentityOutput)
}

// Whether to enable Workload Identity
func (o ManagedClusterSecurityProfileWorkloadIdentityPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileWorkloadIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Workload Identity settings for the security profile.
type ManagedClusterSecurityProfileWorkloadIdentityResponse struct {
	// Whether to enable Workload Identity
	Enabled *bool `pulumi:"enabled"`
}

// Workload Identity settings for the security profile.
type ManagedClusterSecurityProfileWorkloadIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileWorkloadIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterSecurityProfileWorkloadIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileWorkloadIdentityResponseOutput) ToManagedClusterSecurityProfileWorkloadIdentityResponseOutput() ManagedClusterSecurityProfileWorkloadIdentityResponseOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityResponseOutput) ToManagedClusterSecurityProfileWorkloadIdentityResponseOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityResponseOutput {
	return o
}

// Whether to enable Workload Identity
func (o ManagedClusterSecurityProfileWorkloadIdentityResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterSecurityProfileWorkloadIdentityResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterSecurityProfileWorkloadIdentityResponse)(nil)).Elem()
}

func (o ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput) ToManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput() ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput) ToManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput {
	return o
}

func (o ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput) Elem() ManagedClusterSecurityProfileWorkloadIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileWorkloadIdentityResponse) ManagedClusterSecurityProfileWorkloadIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterSecurityProfileWorkloadIdentityResponse
		return ret
	}).(ManagedClusterSecurityProfileWorkloadIdentityResponseOutput)
}

// Whether to enable Workload Identity
func (o ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterSecurityProfileWorkloadIdentityResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfile struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// ManagedClusterServicePrincipalProfileInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs and ManagedClusterServicePrincipalProfileOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfileInput` via:
//
//	ManagedClusterServicePrincipalProfileArgs{...}
type ManagedClusterServicePrincipalProfileInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput
	ToManagedClusterServicePrincipalProfileOutputWithContext(context.Context) ManagedClusterServicePrincipalProfileOutput
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileArgs struct {
	// The ID for the service principal.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (ManagedClusterServicePrincipalProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return i.ToManagedClusterServicePrincipalProfileOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput)
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterServicePrincipalProfileArgs) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfileOutput).ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx)
}

// ManagedClusterServicePrincipalProfilePtrInput is an input type that accepts ManagedClusterServicePrincipalProfileArgs, ManagedClusterServicePrincipalProfilePtr and ManagedClusterServicePrincipalProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterServicePrincipalProfilePtrInput` via:
//
//	        ManagedClusterServicePrincipalProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterServicePrincipalProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput
	ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Context) ManagedClusterServicePrincipalProfilePtrOutput
}

type managedClusterServicePrincipalProfilePtrType ManagedClusterServicePrincipalProfileArgs

func ManagedClusterServicePrincipalProfilePtr(v *ManagedClusterServicePrincipalProfileArgs) ManagedClusterServicePrincipalProfilePtrInput {
	return (*managedClusterServicePrincipalProfilePtrType)(v)
}

func (*managedClusterServicePrincipalProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return i.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterServicePrincipalProfilePtrType) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutput() ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfileOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ToManagedClusterServicePrincipalProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterServicePrincipalProfileOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterServicePrincipalProfile) *ManagedClusterServicePrincipalProfile {
		return &v
	}).(ManagedClusterServicePrincipalProfilePtrOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfile) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfile)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutput() ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) ToManagedClusterServicePrincipalProfilePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfilePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfilePtrOutput) Elem() ManagedClusterServicePrincipalProfileOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) ManagedClusterServicePrincipalProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterServicePrincipalProfile
		return ret
	}).(ManagedClusterServicePrincipalProfileOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfilePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfilePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfile) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponse struct {
	// The ID for the service principal.
	ClientId string `pulumi:"clientId"`
	// The secret password associated with the service principal in plain text.
	Secret *string `pulumi:"secret"`
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
type ManagedClusterServicePrincipalProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutput() ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponseOutput) ToManagedClusterServicePrincipalProfileResponseOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponseOutput {
	return o
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponseOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) string { return v.ClientId }).(pulumi.StringOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterServicePrincipalProfileResponse) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ManagedClusterServicePrincipalProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterServicePrincipalProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterServicePrincipalProfileResponse)(nil)).Elem()
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutput() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ToManagedClusterServicePrincipalProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Elem() ManagedClusterServicePrincipalProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) ManagedClusterServicePrincipalProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterServicePrincipalProfileResponse
		return ret
	}).(ManagedClusterServicePrincipalProfileResponseOutput)
}

// The ID for the service principal.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The secret password associated with the service principal in plain text.
func (o ManagedClusterServicePrincipalProfileResponsePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterServicePrincipalProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

// Storage profile for the container service cluster.
type ManagedClusterStorageProfile struct {
	// AzureDisk CSI Driver settings for the storage profile.
	DiskCSIDriver *ManagedClusterStorageProfileDiskCSIDriver `pulumi:"diskCSIDriver"`
	// AzureFile CSI Driver settings for the storage profile.
	FileCSIDriver *ManagedClusterStorageProfileFileCSIDriver `pulumi:"fileCSIDriver"`
	// Snapshot Controller settings for the storage profile.
	SnapshotController *ManagedClusterStorageProfileSnapshotController `pulumi:"snapshotController"`
}

// ManagedClusterStorageProfileInput is an input type that accepts ManagedClusterStorageProfileArgs and ManagedClusterStorageProfileOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileInput` via:
//
//	ManagedClusterStorageProfileArgs{...}
type ManagedClusterStorageProfileInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileOutput() ManagedClusterStorageProfileOutput
	ToManagedClusterStorageProfileOutputWithContext(context.Context) ManagedClusterStorageProfileOutput
}

// Storage profile for the container service cluster.
type ManagedClusterStorageProfileArgs struct {
	// AzureDisk CSI Driver settings for the storage profile.
	DiskCSIDriver ManagedClusterStorageProfileDiskCSIDriverPtrInput `pulumi:"diskCSIDriver"`
	// AzureFile CSI Driver settings for the storage profile.
	FileCSIDriver ManagedClusterStorageProfileFileCSIDriverPtrInput `pulumi:"fileCSIDriver"`
	// Snapshot Controller settings for the storage profile.
	SnapshotController ManagedClusterStorageProfileSnapshotControllerPtrInput `pulumi:"snapshotController"`
}

func (ManagedClusterStorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfile)(nil)).Elem()
}

func (i ManagedClusterStorageProfileArgs) ToManagedClusterStorageProfileOutput() ManagedClusterStorageProfileOutput {
	return i.ToManagedClusterStorageProfileOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileArgs) ToManagedClusterStorageProfileOutputWithContext(ctx context.Context) ManagedClusterStorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileOutput)
}

func (i ManagedClusterStorageProfileArgs) ToManagedClusterStorageProfilePtrOutput() ManagedClusterStorageProfilePtrOutput {
	return i.ToManagedClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileArgs) ToManagedClusterStorageProfilePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileOutput).ToManagedClusterStorageProfilePtrOutputWithContext(ctx)
}

// ManagedClusterStorageProfilePtrInput is an input type that accepts ManagedClusterStorageProfileArgs, ManagedClusterStorageProfilePtr and ManagedClusterStorageProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfilePtrInput` via:
//
//	        ManagedClusterStorageProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterStorageProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterStorageProfilePtrOutput() ManagedClusterStorageProfilePtrOutput
	ToManagedClusterStorageProfilePtrOutputWithContext(context.Context) ManagedClusterStorageProfilePtrOutput
}

type managedClusterStorageProfilePtrType ManagedClusterStorageProfileArgs

func ManagedClusterStorageProfilePtr(v *ManagedClusterStorageProfileArgs) ManagedClusterStorageProfilePtrInput {
	return (*managedClusterStorageProfilePtrType)(v)
}

func (*managedClusterStorageProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfile)(nil)).Elem()
}

func (i *managedClusterStorageProfilePtrType) ToManagedClusterStorageProfilePtrOutput() ManagedClusterStorageProfilePtrOutput {
	return i.ToManagedClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterStorageProfilePtrType) ToManagedClusterStorageProfilePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfilePtrOutput)
}

// Storage profile for the container service cluster.
type ManagedClusterStorageProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfile)(nil)).Elem()
}

func (o ManagedClusterStorageProfileOutput) ToManagedClusterStorageProfileOutput() ManagedClusterStorageProfileOutput {
	return o
}

func (o ManagedClusterStorageProfileOutput) ToManagedClusterStorageProfileOutputWithContext(ctx context.Context) ManagedClusterStorageProfileOutput {
	return o
}

func (o ManagedClusterStorageProfileOutput) ToManagedClusterStorageProfilePtrOutput() ManagedClusterStorageProfilePtrOutput {
	return o.ToManagedClusterStorageProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterStorageProfileOutput) ToManagedClusterStorageProfilePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterStorageProfile) *ManagedClusterStorageProfile {
		return &v
	}).(ManagedClusterStorageProfilePtrOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileOutput) DiskCSIDriver() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfile) *ManagedClusterStorageProfileDiskCSIDriver {
		return v.DiskCSIDriver
	}).(ManagedClusterStorageProfileDiskCSIDriverPtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileOutput) FileCSIDriver() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfile) *ManagedClusterStorageProfileFileCSIDriver {
		return v.FileCSIDriver
	}).(ManagedClusterStorageProfileFileCSIDriverPtrOutput)
}

// Snapshot Controller settings for the storage profile.
func (o ManagedClusterStorageProfileOutput) SnapshotController() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfile) *ManagedClusterStorageProfileSnapshotController {
		return v.SnapshotController
	}).(ManagedClusterStorageProfileSnapshotControllerPtrOutput)
}

type ManagedClusterStorageProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfile)(nil)).Elem()
}

func (o ManagedClusterStorageProfilePtrOutput) ToManagedClusterStorageProfilePtrOutput() ManagedClusterStorageProfilePtrOutput {
	return o
}

func (o ManagedClusterStorageProfilePtrOutput) ToManagedClusterStorageProfilePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfilePtrOutput {
	return o
}

func (o ManagedClusterStorageProfilePtrOutput) Elem() ManagedClusterStorageProfileOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfile) ManagedClusterStorageProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfile
		return ret
	}).(ManagedClusterStorageProfileOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfilePtrOutput) DiskCSIDriver() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfile) *ManagedClusterStorageProfileDiskCSIDriver {
		if v == nil {
			return nil
		}
		return v.DiskCSIDriver
	}).(ManagedClusterStorageProfileDiskCSIDriverPtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfilePtrOutput) FileCSIDriver() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfile) *ManagedClusterStorageProfileFileCSIDriver {
		if v == nil {
			return nil
		}
		return v.FileCSIDriver
	}).(ManagedClusterStorageProfileFileCSIDriverPtrOutput)
}

// Snapshot Controller settings for the storage profile.
func (o ManagedClusterStorageProfilePtrOutput) SnapshotController() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfile) *ManagedClusterStorageProfileSnapshotController {
		if v == nil {
			return nil
		}
		return v.SnapshotController
	}).(ManagedClusterStorageProfileSnapshotControllerPtrOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileDiskCSIDriver struct {
	// Whether to enable AzureDisk CSI Driver. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The version of AzureDisk CSI Driver. The default value is v1.
	Version *string `pulumi:"version"`
}

// ManagedClusterStorageProfileDiskCSIDriverInput is an input type that accepts ManagedClusterStorageProfileDiskCSIDriverArgs and ManagedClusterStorageProfileDiskCSIDriverOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileDiskCSIDriverInput` via:
//
//	ManagedClusterStorageProfileDiskCSIDriverArgs{...}
type ManagedClusterStorageProfileDiskCSIDriverInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileDiskCSIDriverOutput() ManagedClusterStorageProfileDiskCSIDriverOutput
	ToManagedClusterStorageProfileDiskCSIDriverOutputWithContext(context.Context) ManagedClusterStorageProfileDiskCSIDriverOutput
}

// AzureDisk CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileDiskCSIDriverArgs struct {
	// Whether to enable AzureDisk CSI Driver. The default value is true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The version of AzureDisk CSI Driver. The default value is v1.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ManagedClusterStorageProfileDiskCSIDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileDiskCSIDriver)(nil)).Elem()
}

func (i ManagedClusterStorageProfileDiskCSIDriverArgs) ToManagedClusterStorageProfileDiskCSIDriverOutput() ManagedClusterStorageProfileDiskCSIDriverOutput {
	return i.ToManagedClusterStorageProfileDiskCSIDriverOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileDiskCSIDriverArgs) ToManagedClusterStorageProfileDiskCSIDriverOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileDiskCSIDriverOutput)
}

func (i ManagedClusterStorageProfileDiskCSIDriverArgs) ToManagedClusterStorageProfileDiskCSIDriverPtrOutput() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return i.ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileDiskCSIDriverArgs) ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileDiskCSIDriverOutput).ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(ctx)
}

// ManagedClusterStorageProfileDiskCSIDriverPtrInput is an input type that accepts ManagedClusterStorageProfileDiskCSIDriverArgs, ManagedClusterStorageProfileDiskCSIDriverPtr and ManagedClusterStorageProfileDiskCSIDriverPtrOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileDiskCSIDriverPtrInput` via:
//
//	        ManagedClusterStorageProfileDiskCSIDriverArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterStorageProfileDiskCSIDriverPtrInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileDiskCSIDriverPtrOutput() ManagedClusterStorageProfileDiskCSIDriverPtrOutput
	ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(context.Context) ManagedClusterStorageProfileDiskCSIDriverPtrOutput
}

type managedClusterStorageProfileDiskCSIDriverPtrType ManagedClusterStorageProfileDiskCSIDriverArgs

func ManagedClusterStorageProfileDiskCSIDriverPtr(v *ManagedClusterStorageProfileDiskCSIDriverArgs) ManagedClusterStorageProfileDiskCSIDriverPtrInput {
	return (*managedClusterStorageProfileDiskCSIDriverPtrType)(v)
}

func (*managedClusterStorageProfileDiskCSIDriverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileDiskCSIDriver)(nil)).Elem()
}

func (i *managedClusterStorageProfileDiskCSIDriverPtrType) ToManagedClusterStorageProfileDiskCSIDriverPtrOutput() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return i.ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(context.Background())
}

func (i *managedClusterStorageProfileDiskCSIDriverPtrType) ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileDiskCSIDriverPtrOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileDiskCSIDriverOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileDiskCSIDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileDiskCSIDriver)(nil)).Elem()
}

func (o ManagedClusterStorageProfileDiskCSIDriverOutput) ToManagedClusterStorageProfileDiskCSIDriverOutput() ManagedClusterStorageProfileDiskCSIDriverOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverOutput) ToManagedClusterStorageProfileDiskCSIDriverOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverOutput) ToManagedClusterStorageProfileDiskCSIDriverPtrOutput() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o.ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(context.Background())
}

func (o ManagedClusterStorageProfileDiskCSIDriverOutput) ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterStorageProfileDiskCSIDriver) *ManagedClusterStorageProfileDiskCSIDriver {
		return &v
	}).(ManagedClusterStorageProfileDiskCSIDriverPtrOutput)
}

// Whether to enable AzureDisk CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileDiskCSIDriverOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileDiskCSIDriver) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The version of AzureDisk CSI Driver. The default value is v1.
func (o ManagedClusterStorageProfileDiskCSIDriverOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileDiskCSIDriver) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagedClusterStorageProfileDiskCSIDriverPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileDiskCSIDriverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileDiskCSIDriver)(nil)).Elem()
}

func (o ManagedClusterStorageProfileDiskCSIDriverPtrOutput) ToManagedClusterStorageProfileDiskCSIDriverPtrOutput() ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverPtrOutput) ToManagedClusterStorageProfileDiskCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverPtrOutput) Elem() ManagedClusterStorageProfileDiskCSIDriverOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriver) ManagedClusterStorageProfileDiskCSIDriver {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileDiskCSIDriver
		return ret
	}).(ManagedClusterStorageProfileDiskCSIDriverOutput)
}

// Whether to enable AzureDisk CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileDiskCSIDriverPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriver) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The version of AzureDisk CSI Driver. The default value is v1.
func (o ManagedClusterStorageProfileDiskCSIDriverPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriver) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileDiskCSIDriverResponse struct {
	// Whether to enable AzureDisk CSI Driver. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The version of AzureDisk CSI Driver. The default value is v1.
	Version *string `pulumi:"version"`
}

// AzureDisk CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileDiskCSIDriverResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileDiskCSIDriverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileDiskCSIDriverResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileDiskCSIDriverResponseOutput) ToManagedClusterStorageProfileDiskCSIDriverResponseOutput() ManagedClusterStorageProfileDiskCSIDriverResponseOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverResponseOutput) ToManagedClusterStorageProfileDiskCSIDriverResponseOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverResponseOutput {
	return o
}

// Whether to enable AzureDisk CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileDiskCSIDriverResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileDiskCSIDriverResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The version of AzureDisk CSI Driver. The default value is v1.
func (o ManagedClusterStorageProfileDiskCSIDriverResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileDiskCSIDriverResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileDiskCSIDriverResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) ToManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput() ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) ToManagedClusterStorageProfileDiskCSIDriverResponsePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) Elem() ManagedClusterStorageProfileDiskCSIDriverResponseOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriverResponse) ManagedClusterStorageProfileDiskCSIDriverResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileDiskCSIDriverResponse
		return ret
	}).(ManagedClusterStorageProfileDiskCSIDriverResponseOutput)
}

// Whether to enable AzureDisk CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriverResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The version of AzureDisk CSI Driver. The default value is v1.
func (o ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileDiskCSIDriverResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileFileCSIDriver struct {
	// Whether to enable AzureFile CSI Driver. The default value is true.
	Enabled *bool `pulumi:"enabled"`
}

// ManagedClusterStorageProfileFileCSIDriverInput is an input type that accepts ManagedClusterStorageProfileFileCSIDriverArgs and ManagedClusterStorageProfileFileCSIDriverOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileFileCSIDriverInput` via:
//
//	ManagedClusterStorageProfileFileCSIDriverArgs{...}
type ManagedClusterStorageProfileFileCSIDriverInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileFileCSIDriverOutput() ManagedClusterStorageProfileFileCSIDriverOutput
	ToManagedClusterStorageProfileFileCSIDriverOutputWithContext(context.Context) ManagedClusterStorageProfileFileCSIDriverOutput
}

// AzureFile CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileFileCSIDriverArgs struct {
	// Whether to enable AzureFile CSI Driver. The default value is true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedClusterStorageProfileFileCSIDriverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileFileCSIDriver)(nil)).Elem()
}

func (i ManagedClusterStorageProfileFileCSIDriverArgs) ToManagedClusterStorageProfileFileCSIDriverOutput() ManagedClusterStorageProfileFileCSIDriverOutput {
	return i.ToManagedClusterStorageProfileFileCSIDriverOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileFileCSIDriverArgs) ToManagedClusterStorageProfileFileCSIDriverOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileFileCSIDriverOutput)
}

func (i ManagedClusterStorageProfileFileCSIDriverArgs) ToManagedClusterStorageProfileFileCSIDriverPtrOutput() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return i.ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileFileCSIDriverArgs) ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileFileCSIDriverOutput).ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(ctx)
}

// ManagedClusterStorageProfileFileCSIDriverPtrInput is an input type that accepts ManagedClusterStorageProfileFileCSIDriverArgs, ManagedClusterStorageProfileFileCSIDriverPtr and ManagedClusterStorageProfileFileCSIDriverPtrOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileFileCSIDriverPtrInput` via:
//
//	        ManagedClusterStorageProfileFileCSIDriverArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterStorageProfileFileCSIDriverPtrInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileFileCSIDriverPtrOutput() ManagedClusterStorageProfileFileCSIDriverPtrOutput
	ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(context.Context) ManagedClusterStorageProfileFileCSIDriverPtrOutput
}

type managedClusterStorageProfileFileCSIDriverPtrType ManagedClusterStorageProfileFileCSIDriverArgs

func ManagedClusterStorageProfileFileCSIDriverPtr(v *ManagedClusterStorageProfileFileCSIDriverArgs) ManagedClusterStorageProfileFileCSIDriverPtrInput {
	return (*managedClusterStorageProfileFileCSIDriverPtrType)(v)
}

func (*managedClusterStorageProfileFileCSIDriverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileFileCSIDriver)(nil)).Elem()
}

func (i *managedClusterStorageProfileFileCSIDriverPtrType) ToManagedClusterStorageProfileFileCSIDriverPtrOutput() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return i.ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(context.Background())
}

func (i *managedClusterStorageProfileFileCSIDriverPtrType) ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileFileCSIDriverPtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileFileCSIDriverOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileFileCSIDriverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileFileCSIDriver)(nil)).Elem()
}

func (o ManagedClusterStorageProfileFileCSIDriverOutput) ToManagedClusterStorageProfileFileCSIDriverOutput() ManagedClusterStorageProfileFileCSIDriverOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverOutput) ToManagedClusterStorageProfileFileCSIDriverOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverOutput) ToManagedClusterStorageProfileFileCSIDriverPtrOutput() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o.ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(context.Background())
}

func (o ManagedClusterStorageProfileFileCSIDriverOutput) ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterStorageProfileFileCSIDriver) *ManagedClusterStorageProfileFileCSIDriver {
		return &v
	}).(ManagedClusterStorageProfileFileCSIDriverPtrOutput)
}

// Whether to enable AzureFile CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileFileCSIDriverOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileFileCSIDriver) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterStorageProfileFileCSIDriverPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileFileCSIDriverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileFileCSIDriver)(nil)).Elem()
}

func (o ManagedClusterStorageProfileFileCSIDriverPtrOutput) ToManagedClusterStorageProfileFileCSIDriverPtrOutput() ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverPtrOutput) ToManagedClusterStorageProfileFileCSIDriverPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverPtrOutput) Elem() ManagedClusterStorageProfileFileCSIDriverOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileFileCSIDriver) ManagedClusterStorageProfileFileCSIDriver {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileFileCSIDriver
		return ret
	}).(ManagedClusterStorageProfileFileCSIDriverOutput)
}

// Whether to enable AzureFile CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileFileCSIDriverPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileFileCSIDriver) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileFileCSIDriverResponse struct {
	// Whether to enable AzureFile CSI Driver. The default value is true.
	Enabled *bool `pulumi:"enabled"`
}

// AzureFile CSI Driver settings for the storage profile.
type ManagedClusterStorageProfileFileCSIDriverResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileFileCSIDriverResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileFileCSIDriverResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileFileCSIDriverResponseOutput) ToManagedClusterStorageProfileFileCSIDriverResponseOutput() ManagedClusterStorageProfileFileCSIDriverResponseOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverResponseOutput) ToManagedClusterStorageProfileFileCSIDriverResponseOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverResponseOutput {
	return o
}

// Whether to enable AzureFile CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileFileCSIDriverResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileFileCSIDriverResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileFileCSIDriverResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput) ToManagedClusterStorageProfileFileCSIDriverResponsePtrOutput() ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput) ToManagedClusterStorageProfileFileCSIDriverResponsePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput) Elem() ManagedClusterStorageProfileFileCSIDriverResponseOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileFileCSIDriverResponse) ManagedClusterStorageProfileFileCSIDriverResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileFileCSIDriverResponse
		return ret
	}).(ManagedClusterStorageProfileFileCSIDriverResponseOutput)
}

// Whether to enable AzureFile CSI Driver. The default value is true.
func (o ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileFileCSIDriverResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Storage profile for the container service cluster.
type ManagedClusterStorageProfileResponse struct {
	// AzureDisk CSI Driver settings for the storage profile.
	DiskCSIDriver *ManagedClusterStorageProfileDiskCSIDriverResponse `pulumi:"diskCSIDriver"`
	// AzureFile CSI Driver settings for the storage profile.
	FileCSIDriver *ManagedClusterStorageProfileFileCSIDriverResponse `pulumi:"fileCSIDriver"`
	// Snapshot Controller settings for the storage profile.
	SnapshotController *ManagedClusterStorageProfileSnapshotControllerResponse `pulumi:"snapshotController"`
}

// Storage profile for the container service cluster.
type ManagedClusterStorageProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileResponseOutput) ToManagedClusterStorageProfileResponseOutput() ManagedClusterStorageProfileResponseOutput {
	return o
}

func (o ManagedClusterStorageProfileResponseOutput) ToManagedClusterStorageProfileResponseOutputWithContext(ctx context.Context) ManagedClusterStorageProfileResponseOutput {
	return o
}

// AzureDisk CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileResponseOutput) DiskCSIDriver() ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileDiskCSIDriverResponse {
		return v.DiskCSIDriver
	}).(ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileResponseOutput) FileCSIDriver() ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileFileCSIDriverResponse {
		return v.FileCSIDriver
	}).(ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput)
}

// Snapshot Controller settings for the storage profile.
func (o ManagedClusterStorageProfileResponseOutput) SnapshotController() ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileSnapshotControllerResponse {
		return v.SnapshotController
	}).(ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput)
}

type ManagedClusterStorageProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileResponsePtrOutput) ToManagedClusterStorageProfileResponsePtrOutput() ManagedClusterStorageProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileResponsePtrOutput) ToManagedClusterStorageProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileResponsePtrOutput) Elem() ManagedClusterStorageProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileResponse) ManagedClusterStorageProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileResponse
		return ret
	}).(ManagedClusterStorageProfileResponseOutput)
}

// AzureDisk CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileResponsePtrOutput) DiskCSIDriver() ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileDiskCSIDriverResponse {
		if v == nil {
			return nil
		}
		return v.DiskCSIDriver
	}).(ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput)
}

// AzureFile CSI Driver settings for the storage profile.
func (o ManagedClusterStorageProfileResponsePtrOutput) FileCSIDriver() ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileFileCSIDriverResponse {
		if v == nil {
			return nil
		}
		return v.FileCSIDriver
	}).(ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput)
}

// Snapshot Controller settings for the storage profile.
func (o ManagedClusterStorageProfileResponsePtrOutput) SnapshotController() ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileResponse) *ManagedClusterStorageProfileSnapshotControllerResponse {
		if v == nil {
			return nil
		}
		return v.SnapshotController
	}).(ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput)
}

// Snapshot Controller settings for the storage profile.
type ManagedClusterStorageProfileSnapshotController struct {
	// Whether to enable Snapshot Controller. The default value is true.
	Enabled *bool `pulumi:"enabled"`
}

// ManagedClusterStorageProfileSnapshotControllerInput is an input type that accepts ManagedClusterStorageProfileSnapshotControllerArgs and ManagedClusterStorageProfileSnapshotControllerOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileSnapshotControllerInput` via:
//
//	ManagedClusterStorageProfileSnapshotControllerArgs{...}
type ManagedClusterStorageProfileSnapshotControllerInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileSnapshotControllerOutput() ManagedClusterStorageProfileSnapshotControllerOutput
	ToManagedClusterStorageProfileSnapshotControllerOutputWithContext(context.Context) ManagedClusterStorageProfileSnapshotControllerOutput
}

// Snapshot Controller settings for the storage profile.
type ManagedClusterStorageProfileSnapshotControllerArgs struct {
	// Whether to enable Snapshot Controller. The default value is true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ManagedClusterStorageProfileSnapshotControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileSnapshotController)(nil)).Elem()
}

func (i ManagedClusterStorageProfileSnapshotControllerArgs) ToManagedClusterStorageProfileSnapshotControllerOutput() ManagedClusterStorageProfileSnapshotControllerOutput {
	return i.ToManagedClusterStorageProfileSnapshotControllerOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileSnapshotControllerArgs) ToManagedClusterStorageProfileSnapshotControllerOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileSnapshotControllerOutput)
}

func (i ManagedClusterStorageProfileSnapshotControllerArgs) ToManagedClusterStorageProfileSnapshotControllerPtrOutput() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return i.ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(context.Background())
}

func (i ManagedClusterStorageProfileSnapshotControllerArgs) ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileSnapshotControllerOutput).ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(ctx)
}

// ManagedClusterStorageProfileSnapshotControllerPtrInput is an input type that accepts ManagedClusterStorageProfileSnapshotControllerArgs, ManagedClusterStorageProfileSnapshotControllerPtr and ManagedClusterStorageProfileSnapshotControllerPtrOutput values.
// You can construct a concrete instance of `ManagedClusterStorageProfileSnapshotControllerPtrInput` via:
//
//	        ManagedClusterStorageProfileSnapshotControllerArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterStorageProfileSnapshotControllerPtrInput interface {
	pulumi.Input

	ToManagedClusterStorageProfileSnapshotControllerPtrOutput() ManagedClusterStorageProfileSnapshotControllerPtrOutput
	ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(context.Context) ManagedClusterStorageProfileSnapshotControllerPtrOutput
}

type managedClusterStorageProfileSnapshotControllerPtrType ManagedClusterStorageProfileSnapshotControllerArgs

func ManagedClusterStorageProfileSnapshotControllerPtr(v *ManagedClusterStorageProfileSnapshotControllerArgs) ManagedClusterStorageProfileSnapshotControllerPtrInput {
	return (*managedClusterStorageProfileSnapshotControllerPtrType)(v)
}

func (*managedClusterStorageProfileSnapshotControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileSnapshotController)(nil)).Elem()
}

func (i *managedClusterStorageProfileSnapshotControllerPtrType) ToManagedClusterStorageProfileSnapshotControllerPtrOutput() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return i.ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(context.Background())
}

func (i *managedClusterStorageProfileSnapshotControllerPtrType) ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterStorageProfileSnapshotControllerPtrOutput)
}

// Snapshot Controller settings for the storage profile.
type ManagedClusterStorageProfileSnapshotControllerOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileSnapshotControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileSnapshotController)(nil)).Elem()
}

func (o ManagedClusterStorageProfileSnapshotControllerOutput) ToManagedClusterStorageProfileSnapshotControllerOutput() ManagedClusterStorageProfileSnapshotControllerOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerOutput) ToManagedClusterStorageProfileSnapshotControllerOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerOutput) ToManagedClusterStorageProfileSnapshotControllerPtrOutput() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o.ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(context.Background())
}

func (o ManagedClusterStorageProfileSnapshotControllerOutput) ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterStorageProfileSnapshotController) *ManagedClusterStorageProfileSnapshotController {
		return &v
	}).(ManagedClusterStorageProfileSnapshotControllerPtrOutput)
}

// Whether to enable Snapshot Controller. The default value is true.
func (o ManagedClusterStorageProfileSnapshotControllerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileSnapshotController) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterStorageProfileSnapshotControllerPtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileSnapshotControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileSnapshotController)(nil)).Elem()
}

func (o ManagedClusterStorageProfileSnapshotControllerPtrOutput) ToManagedClusterStorageProfileSnapshotControllerPtrOutput() ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerPtrOutput) ToManagedClusterStorageProfileSnapshotControllerPtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerPtrOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerPtrOutput) Elem() ManagedClusterStorageProfileSnapshotControllerOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileSnapshotController) ManagedClusterStorageProfileSnapshotController {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileSnapshotController
		return ret
	}).(ManagedClusterStorageProfileSnapshotControllerOutput)
}

// Whether to enable Snapshot Controller. The default value is true.
func (o ManagedClusterStorageProfileSnapshotControllerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileSnapshotController) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Snapshot Controller settings for the storage profile.
type ManagedClusterStorageProfileSnapshotControllerResponse struct {
	// Whether to enable Snapshot Controller. The default value is true.
	Enabled *bool `pulumi:"enabled"`
}

// Snapshot Controller settings for the storage profile.
type ManagedClusterStorageProfileSnapshotControllerResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileSnapshotControllerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterStorageProfileSnapshotControllerResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileSnapshotControllerResponseOutput) ToManagedClusterStorageProfileSnapshotControllerResponseOutput() ManagedClusterStorageProfileSnapshotControllerResponseOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerResponseOutput) ToManagedClusterStorageProfileSnapshotControllerResponseOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerResponseOutput {
	return o
}

// Whether to enable Snapshot Controller. The default value is true.
func (o ManagedClusterStorageProfileSnapshotControllerResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterStorageProfileSnapshotControllerResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterStorageProfileSnapshotControllerResponse)(nil)).Elem()
}

func (o ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput) ToManagedClusterStorageProfileSnapshotControllerResponsePtrOutput() ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput) ToManagedClusterStorageProfileSnapshotControllerResponsePtrOutputWithContext(ctx context.Context) ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput {
	return o
}

func (o ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput) Elem() ManagedClusterStorageProfileSnapshotControllerResponseOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileSnapshotControllerResponse) ManagedClusterStorageProfileSnapshotControllerResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterStorageProfileSnapshotControllerResponse
		return ret
	}).(ManagedClusterStorageProfileSnapshotControllerResponseOutput)
}

// Whether to enable Snapshot Controller. The default value is true.
func (o ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterStorageProfileSnapshotControllerResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Profile for Windows VMs in the managed cluster.
type ManagedClusterWindowsProfile struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
	AdminUsername string `pulumi:"adminUsername"`
	// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
	EnableCSIProxy *bool `pulumi:"enableCSIProxy"`
	// The Windows gMSA Profile in the Managed Cluster.
	GmsaProfile *WindowsGmsaProfile `pulumi:"gmsaProfile"`
	// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
	LicenseType *string `pulumi:"licenseType"`
}

// ManagedClusterWindowsProfileInput is an input type that accepts ManagedClusterWindowsProfileArgs and ManagedClusterWindowsProfileOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfileInput` via:
//
//	ManagedClusterWindowsProfileArgs{...}
type ManagedClusterWindowsProfileInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput
	ToManagedClusterWindowsProfileOutputWithContext(context.Context) ManagedClusterWindowsProfileOutput
}

// Profile for Windows VMs in the managed cluster.
type ManagedClusterWindowsProfileArgs struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
	AdminPassword pulumi.StringPtrInput `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
	AdminUsername pulumi.StringInput `pulumi:"adminUsername"`
	// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
	EnableCSIProxy pulumi.BoolPtrInput `pulumi:"enableCSIProxy"`
	// The Windows gMSA Profile in the Managed Cluster.
	GmsaProfile WindowsGmsaProfilePtrInput `pulumi:"gmsaProfile"`
	// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
	LicenseType pulumi.StringPtrInput `pulumi:"licenseType"`
}

func (ManagedClusterWindowsProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return i.ToManagedClusterWindowsProfileOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput)
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i ManagedClusterWindowsProfileArgs) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfileOutput).ToManagedClusterWindowsProfilePtrOutputWithContext(ctx)
}

// ManagedClusterWindowsProfilePtrInput is an input type that accepts ManagedClusterWindowsProfileArgs, ManagedClusterWindowsProfilePtr and ManagedClusterWindowsProfilePtrOutput values.
// You can construct a concrete instance of `ManagedClusterWindowsProfilePtrInput` via:
//
//	        ManagedClusterWindowsProfileArgs{...}
//
//	or:
//
//	        nil
type ManagedClusterWindowsProfilePtrInput interface {
	pulumi.Input

	ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput
	ToManagedClusterWindowsProfilePtrOutputWithContext(context.Context) ManagedClusterWindowsProfilePtrOutput
}

type managedClusterWindowsProfilePtrType ManagedClusterWindowsProfileArgs

func ManagedClusterWindowsProfilePtr(v *ManagedClusterWindowsProfileArgs) ManagedClusterWindowsProfilePtrInput {
	return (*managedClusterWindowsProfilePtrType)(v)
}

func (*managedClusterWindowsProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return i.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (i *managedClusterWindowsProfilePtrType) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedClusterWindowsProfilePtrOutput)
}

// Profile for Windows VMs in the managed cluster.
type ManagedClusterWindowsProfileOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutput() ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfileOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileOutput {
	return o
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o.ToManagedClusterWindowsProfilePtrOutputWithContext(context.Background())
}

func (o ManagedClusterWindowsProfileOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedClusterWindowsProfile) *ManagedClusterWindowsProfile {
		return &v
	}).(ManagedClusterWindowsProfilePtrOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
func (o ManagedClusterWindowsProfileOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
func (o ManagedClusterWindowsProfileOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
func (o ManagedClusterWindowsProfileOutput) EnableCSIProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *bool { return v.EnableCSIProxy }).(pulumi.BoolPtrOutput)
}

// The Windows gMSA Profile in the Managed Cluster.
func (o ManagedClusterWindowsProfileOutput) GmsaProfile() WindowsGmsaProfilePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *WindowsGmsaProfile { return v.GmsaProfile }).(WindowsGmsaProfilePtrOutput)
}

// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
func (o ManagedClusterWindowsProfileOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfile) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

type ManagedClusterWindowsProfilePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfile)(nil)).Elem()
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutput() ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) ToManagedClusterWindowsProfilePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfilePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfilePtrOutput) Elem() ManagedClusterWindowsProfileOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) ManagedClusterWindowsProfile {
		if v != nil {
			return *v
		}
		var ret ManagedClusterWindowsProfile
		return ret
	}).(ManagedClusterWindowsProfileOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
func (o ManagedClusterWindowsProfilePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
func (o ManagedClusterWindowsProfilePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
func (o ManagedClusterWindowsProfilePtrOutput) EnableCSIProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCSIProxy
	}).(pulumi.BoolPtrOutput)
}

// The Windows gMSA Profile in the Managed Cluster.
func (o ManagedClusterWindowsProfilePtrOutput) GmsaProfile() WindowsGmsaProfilePtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *WindowsGmsaProfile {
		if v == nil {
			return nil
		}
		return v.GmsaProfile
	}).(WindowsGmsaProfilePtrOutput)
}

// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
func (o ManagedClusterWindowsProfilePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfile) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// Profile for Windows VMs in the managed cluster.
type ManagedClusterWindowsProfileResponse struct {
	// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
	AdminPassword *string `pulumi:"adminPassword"`
	// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
	AdminUsername string `pulumi:"adminUsername"`
	// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
	EnableCSIProxy *bool `pulumi:"enableCSIProxy"`
	// The Windows gMSA Profile in the Managed Cluster.
	GmsaProfile *WindowsGmsaProfileResponse `pulumi:"gmsaProfile"`
	// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
	LicenseType *string `pulumi:"licenseType"`
}

// Profile for Windows VMs in the managed cluster.
type ManagedClusterWindowsProfileResponseOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutput() ManagedClusterWindowsProfileResponseOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponseOutput) ToManagedClusterWindowsProfileResponseOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponseOutput {
	return o
}

// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
func (o ManagedClusterWindowsProfileResponseOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *string { return v.AdminPassword }).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
func (o ManagedClusterWindowsProfileResponseOutput) AdminUsername() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) string { return v.AdminUsername }).(pulumi.StringOutput)
}

// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
func (o ManagedClusterWindowsProfileResponseOutput) EnableCSIProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *bool { return v.EnableCSIProxy }).(pulumi.BoolPtrOutput)
}

// The Windows gMSA Profile in the Managed Cluster.
func (o ManagedClusterWindowsProfileResponseOutput) GmsaProfile() WindowsGmsaProfileResponsePtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *WindowsGmsaProfileResponse { return v.GmsaProfile }).(WindowsGmsaProfileResponsePtrOutput)
}

// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
func (o ManagedClusterWindowsProfileResponseOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedClusterWindowsProfileResponse) *string { return v.LicenseType }).(pulumi.StringPtrOutput)
}

type ManagedClusterWindowsProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedClusterWindowsProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedClusterWindowsProfileResponse)(nil)).Elem()
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutput() ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) ToManagedClusterWindowsProfileResponsePtrOutputWithContext(ctx context.Context) ManagedClusterWindowsProfileResponsePtrOutput {
	return o
}

func (o ManagedClusterWindowsProfileResponsePtrOutput) Elem() ManagedClusterWindowsProfileResponseOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) ManagedClusterWindowsProfileResponse {
		if v != nil {
			return *v
		}
		var ret ManagedClusterWindowsProfileResponse
		return ret
	}).(ManagedClusterWindowsProfileResponseOutput)
}

// Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!"
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdminPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters
func (o ManagedClusterWindowsProfileResponsePtrOutput) AdminUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdminUsername
	}).(pulumi.StringPtrOutput)
}

// For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).
func (o ManagedClusterWindowsProfileResponsePtrOutput) EnableCSIProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCSIProxy
	}).(pulumi.BoolPtrOutput)
}

// The Windows gMSA Profile in the Managed Cluster.
func (o ManagedClusterWindowsProfileResponsePtrOutput) GmsaProfile() WindowsGmsaProfileResponsePtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *WindowsGmsaProfileResponse {
		if v == nil {
			return nil
		}
		return v.GmsaProfile
	}).(WindowsGmsaProfileResponsePtrOutput)
}

// The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.
func (o ManagedClusterWindowsProfileResponsePtrOutput) LicenseType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedClusterWindowsProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.LicenseType
	}).(pulumi.StringPtrOutput)
}

// network profile for managed cluster snapshot, these properties are read only.
type NetworkProfileForSnapshotResponse struct {
	// loadBalancerSku for managed cluster snapshot.
	LoadBalancerSku *string `pulumi:"loadBalancerSku"`
	// networkMode for managed cluster snapshot.
	NetworkMode *string `pulumi:"networkMode"`
	// networkPlugin for managed cluster snapshot.
	NetworkPlugin *string `pulumi:"networkPlugin"`
	// NetworkPluginMode for managed cluster snapshot.
	NetworkPluginMode *string `pulumi:"networkPluginMode"`
	// networkPolicy for managed cluster snapshot.
	NetworkPolicy *string `pulumi:"networkPolicy"`
}

// network profile for managed cluster snapshot, these properties are read only.
type NetworkProfileForSnapshotResponseOutput struct{ *pulumi.OutputState }

func (NetworkProfileForSnapshotResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfileForSnapshotResponse)(nil)).Elem()
}

func (o NetworkProfileForSnapshotResponseOutput) ToNetworkProfileForSnapshotResponseOutput() NetworkProfileForSnapshotResponseOutput {
	return o
}

func (o NetworkProfileForSnapshotResponseOutput) ToNetworkProfileForSnapshotResponseOutputWithContext(ctx context.Context) NetworkProfileForSnapshotResponseOutput {
	return o
}

// loadBalancerSku for managed cluster snapshot.
func (o NetworkProfileForSnapshotResponseOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileForSnapshotResponse) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// networkMode for managed cluster snapshot.
func (o NetworkProfileForSnapshotResponseOutput) NetworkMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileForSnapshotResponse) *string { return v.NetworkMode }).(pulumi.StringPtrOutput)
}

// networkPlugin for managed cluster snapshot.
func (o NetworkProfileForSnapshotResponseOutput) NetworkPlugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileForSnapshotResponse) *string { return v.NetworkPlugin }).(pulumi.StringPtrOutput)
}

// NetworkPluginMode for managed cluster snapshot.
func (o NetworkProfileForSnapshotResponseOutput) NetworkPluginMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileForSnapshotResponse) *string { return v.NetworkPluginMode }).(pulumi.StringPtrOutput)
}

// networkPolicy for managed cluster snapshot.
func (o NetworkProfileForSnapshotResponseOutput) NetworkPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkProfileForSnapshotResponse) *string { return v.NetworkPolicy }).(pulumi.StringPtrOutput)
}

// Describes the Power State of the cluster
type PowerState struct {
	// Tells whether the cluster is Running or Stopped
	Code *string `pulumi:"code"`
}

// PowerStateInput is an input type that accepts PowerStateArgs and PowerStateOutput values.
// You can construct a concrete instance of `PowerStateInput` via:
//
//	PowerStateArgs{...}
type PowerStateInput interface {
	pulumi.Input

	ToPowerStateOutput() PowerStateOutput
	ToPowerStateOutputWithContext(context.Context) PowerStateOutput
}

// Describes the Power State of the cluster
type PowerStateArgs struct {
	// Tells whether the cluster is Running or Stopped
	Code pulumi.StringPtrInput `pulumi:"code"`
}

func (PowerStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerState)(nil)).Elem()
}

func (i PowerStateArgs) ToPowerStateOutput() PowerStateOutput {
	return i.ToPowerStateOutputWithContext(context.Background())
}

func (i PowerStateArgs) ToPowerStateOutputWithContext(ctx context.Context) PowerStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerStateOutput)
}

func (i PowerStateArgs) ToPowerStatePtrOutput() PowerStatePtrOutput {
	return i.ToPowerStatePtrOutputWithContext(context.Background())
}

func (i PowerStateArgs) ToPowerStatePtrOutputWithContext(ctx context.Context) PowerStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerStateOutput).ToPowerStatePtrOutputWithContext(ctx)
}

// PowerStatePtrInput is an input type that accepts PowerStateArgs, PowerStatePtr and PowerStatePtrOutput values.
// You can construct a concrete instance of `PowerStatePtrInput` via:
//
//	        PowerStateArgs{...}
//
//	or:
//
//	        nil
type PowerStatePtrInput interface {
	pulumi.Input

	ToPowerStatePtrOutput() PowerStatePtrOutput
	ToPowerStatePtrOutputWithContext(context.Context) PowerStatePtrOutput
}

type powerStatePtrType PowerStateArgs

func PowerStatePtr(v *PowerStateArgs) PowerStatePtrInput {
	return (*powerStatePtrType)(v)
}

func (*powerStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerState)(nil)).Elem()
}

func (i *powerStatePtrType) ToPowerStatePtrOutput() PowerStatePtrOutput {
	return i.ToPowerStatePtrOutputWithContext(context.Background())
}

func (i *powerStatePtrType) ToPowerStatePtrOutputWithContext(ctx context.Context) PowerStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerStatePtrOutput)
}

// Describes the Power State of the cluster
type PowerStateOutput struct{ *pulumi.OutputState }

func (PowerStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerState)(nil)).Elem()
}

func (o PowerStateOutput) ToPowerStateOutput() PowerStateOutput {
	return o
}

func (o PowerStateOutput) ToPowerStateOutputWithContext(ctx context.Context) PowerStateOutput {
	return o
}

func (o PowerStateOutput) ToPowerStatePtrOutput() PowerStatePtrOutput {
	return o.ToPowerStatePtrOutputWithContext(context.Background())
}

func (o PowerStateOutput) ToPowerStatePtrOutputWithContext(ctx context.Context) PowerStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerState) *PowerState {
		return &v
	}).(PowerStatePtrOutput)
}

// Tells whether the cluster is Running or Stopped
func (o PowerStateOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerState) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type PowerStatePtrOutput struct{ *pulumi.OutputState }

func (PowerStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerState)(nil)).Elem()
}

func (o PowerStatePtrOutput) ToPowerStatePtrOutput() PowerStatePtrOutput {
	return o
}

func (o PowerStatePtrOutput) ToPowerStatePtrOutputWithContext(ctx context.Context) PowerStatePtrOutput {
	return o
}

func (o PowerStatePtrOutput) Elem() PowerStateOutput {
	return o.ApplyT(func(v *PowerState) PowerState {
		if v != nil {
			return *v
		}
		var ret PowerState
		return ret
	}).(PowerStateOutput)
}

// Tells whether the cluster is Running or Stopped
func (o PowerStatePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerState) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Describes the Power State of the cluster
type PowerStateResponse struct {
	// Tells whether the cluster is Running or Stopped
	Code *string `pulumi:"code"`
}

// Describes the Power State of the cluster
type PowerStateResponseOutput struct{ *pulumi.OutputState }

func (PowerStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerStateResponse)(nil)).Elem()
}

func (o PowerStateResponseOutput) ToPowerStateResponseOutput() PowerStateResponseOutput {
	return o
}

func (o PowerStateResponseOutput) ToPowerStateResponseOutputWithContext(ctx context.Context) PowerStateResponseOutput {
	return o
}

// Tells whether the cluster is Running or Stopped
func (o PowerStateResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerStateResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

type PowerStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PowerStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerStateResponse)(nil)).Elem()
}

func (o PowerStateResponsePtrOutput) ToPowerStateResponsePtrOutput() PowerStateResponsePtrOutput {
	return o
}

func (o PowerStateResponsePtrOutput) ToPowerStateResponsePtrOutputWithContext(ctx context.Context) PowerStateResponsePtrOutput {
	return o
}

func (o PowerStateResponsePtrOutput) Elem() PowerStateResponseOutput {
	return o.ApplyT(func(v *PowerStateResponse) PowerStateResponse {
		if v != nil {
			return *v
		}
		var ret PowerStateResponse
		return ret
	}).(PowerStateResponseOutput)
}

// Tells whether the cluster is Running or Stopped
func (o PowerStateResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpoint struct {
	// The resource ID of the private endpoint
	Id *string `pulumi:"id"`
}

// PrivateEndpointInput is an input type that accepts PrivateEndpointArgs and PrivateEndpointOutput values.
// You can construct a concrete instance of `PrivateEndpointInput` via:
//
//	PrivateEndpointArgs{...}
type PrivateEndpointInput interface {
	pulumi.Input

	ToPrivateEndpointOutput() PrivateEndpointOutput
	ToPrivateEndpointOutputWithContext(context.Context) PrivateEndpointOutput
}

// Private endpoint which a connection belongs to.
type PrivateEndpointArgs struct {
	// The resource ID of the private endpoint
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return i.ToPrivateEndpointOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput)
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointArgs) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointOutput).ToPrivateEndpointPtrOutputWithContext(ctx)
}

// PrivateEndpointPtrInput is an input type that accepts PrivateEndpointArgs, PrivateEndpointPtr and PrivateEndpointPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPtrInput` via:
//
//	        PrivateEndpointArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput
	ToPrivateEndpointPtrOutputWithContext(context.Context) PrivateEndpointPtrOutput
}

type privateEndpointPtrType PrivateEndpointArgs

func PrivateEndpointPtr(v *PrivateEndpointArgs) PrivateEndpointPtrInput {
	return (*privateEndpointPtrType)(v)
}

func (*privateEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return i.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPtrType) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointOutput struct{ *pulumi.OutputState }

func (PrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutput() PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointOutputWithContext(ctx context.Context) PrivateEndpointOutput {
	return o
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o.ToPrivateEndpointPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpoint) *PrivateEndpoint {
		return &v
	}).(PrivateEndpointPtrOutput)
}

// The resource ID of the private endpoint
func (o PrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpoint)(nil)).Elem()
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutput() PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) ToPrivateEndpointPtrOutputWithContext(ctx context.Context) PrivateEndpointPtrOutput {
	return o
}

func (o PrivateEndpointPtrOutput) Elem() PrivateEndpointOutput {
	return o.ApplyT(func(v *PrivateEndpoint) PrivateEndpoint {
		if v != nil {
			return *v
		}
		var ret PrivateEndpoint
		return ret
	}).(PrivateEndpointOutput)
}

// The resource ID of the private endpoint
func (o PrivateEndpointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponse struct {
	// The resource ID of the private endpoint
	Id *string `pulumi:"id"`
}

// Private endpoint which a connection belongs to.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

// The resource ID of the private endpoint
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointResponse
		return ret
	}).(PrivateEndpointResponseOutput)
}

// The resource ID of the private endpoint
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A private link resource
type PrivateLinkResource struct {
	// The group ID of the resource.
	GroupId *string `pulumi:"groupId"`
	// The ID of the private link resource.
	Id *string `pulumi:"id"`
	// The name of the private link resource.
	Name *string `pulumi:"name"`
	// The RequiredMembers of the resource
	RequiredMembers []string `pulumi:"requiredMembers"`
	// The resource type.
	Type *string `pulumi:"type"`
}

// PrivateLinkResourceInput is an input type that accepts PrivateLinkResourceArgs and PrivateLinkResourceOutput values.
// You can construct a concrete instance of `PrivateLinkResourceInput` via:
//
//	PrivateLinkResourceArgs{...}
type PrivateLinkResourceInput interface {
	pulumi.Input

	ToPrivateLinkResourceOutput() PrivateLinkResourceOutput
	ToPrivateLinkResourceOutputWithContext(context.Context) PrivateLinkResourceOutput
}

// A private link resource
type PrivateLinkResourceArgs struct {
	// The group ID of the resource.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// The ID of the private link resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the private link resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The RequiredMembers of the resource
	RequiredMembers pulumi.StringArrayInput `pulumi:"requiredMembers"`
	// The resource type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PrivateLinkResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkResource)(nil)).Elem()
}

func (i PrivateLinkResourceArgs) ToPrivateLinkResourceOutput() PrivateLinkResourceOutput {
	return i.ToPrivateLinkResourceOutputWithContext(context.Background())
}

func (i PrivateLinkResourceArgs) ToPrivateLinkResourceOutputWithContext(ctx context.Context) PrivateLinkResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkResourceOutput)
}

// PrivateLinkResourceArrayInput is an input type that accepts PrivateLinkResourceArray and PrivateLinkResourceArrayOutput values.
// You can construct a concrete instance of `PrivateLinkResourceArrayInput` via:
//
//	PrivateLinkResourceArray{ PrivateLinkResourceArgs{...} }
type PrivateLinkResourceArrayInput interface {
	pulumi.Input

	ToPrivateLinkResourceArrayOutput() PrivateLinkResourceArrayOutput
	ToPrivateLinkResourceArrayOutputWithContext(context.Context) PrivateLinkResourceArrayOutput
}

type PrivateLinkResourceArray []PrivateLinkResourceInput

func (PrivateLinkResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkResource)(nil)).Elem()
}

func (i PrivateLinkResourceArray) ToPrivateLinkResourceArrayOutput() PrivateLinkResourceArrayOutput {
	return i.ToPrivateLinkResourceArrayOutputWithContext(context.Background())
}

func (i PrivateLinkResourceArray) ToPrivateLinkResourceArrayOutputWithContext(ctx context.Context) PrivateLinkResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkResourceArrayOutput)
}

// A private link resource
type PrivateLinkResourceOutput struct{ *pulumi.OutputState }

func (PrivateLinkResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkResource)(nil)).Elem()
}

func (o PrivateLinkResourceOutput) ToPrivateLinkResourceOutput() PrivateLinkResourceOutput {
	return o
}

func (o PrivateLinkResourceOutput) ToPrivateLinkResourceOutputWithContext(ctx context.Context) PrivateLinkResourceOutput {
	return o
}

// The group ID of the resource.
func (o PrivateLinkResourceOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResource) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The ID of the private link resource.
func (o PrivateLinkResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the private link resource.
func (o PrivateLinkResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The RequiredMembers of the resource
func (o PrivateLinkResourceOutput) RequiredMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkResource) []string { return v.RequiredMembers }).(pulumi.StringArrayOutput)
}

// The resource type.
func (o PrivateLinkResourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrivateLinkResourceArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkResource)(nil)).Elem()
}

func (o PrivateLinkResourceArrayOutput) ToPrivateLinkResourceArrayOutput() PrivateLinkResourceArrayOutput {
	return o
}

func (o PrivateLinkResourceArrayOutput) ToPrivateLinkResourceArrayOutputWithContext(ctx context.Context) PrivateLinkResourceArrayOutput {
	return o
}

func (o PrivateLinkResourceArrayOutput) Index(i pulumi.IntInput) PrivateLinkResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkResource {
		return vs[0].([]PrivateLinkResource)[vs[1].(int)]
	}).(PrivateLinkResourceOutput)
}

// A private link resource
type PrivateLinkResourceResponse struct {
	// The group ID of the resource.
	GroupId *string `pulumi:"groupId"`
	// The ID of the private link resource.
	Id *string `pulumi:"id"`
	// The name of the private link resource.
	Name *string `pulumi:"name"`
	// The private link service ID of the resource, this field is exposed only to NRP internally.
	PrivateLinkServiceID string `pulumi:"privateLinkServiceID"`
	// The RequiredMembers of the resource
	RequiredMembers []string `pulumi:"requiredMembers"`
	// The resource type.
	Type *string `pulumi:"type"`
}

// A private link resource
type PrivateLinkResourceResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkResourceResponse)(nil)).Elem()
}

func (o PrivateLinkResourceResponseOutput) ToPrivateLinkResourceResponseOutput() PrivateLinkResourceResponseOutput {
	return o
}

func (o PrivateLinkResourceResponseOutput) ToPrivateLinkResourceResponseOutputWithContext(ctx context.Context) PrivateLinkResourceResponseOutput {
	return o
}

// The group ID of the resource.
func (o PrivateLinkResourceResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The ID of the private link resource.
func (o PrivateLinkResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the private link resource.
func (o PrivateLinkResourceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private link service ID of the resource, this field is exposed only to NRP internally.
func (o PrivateLinkResourceResponseOutput) PrivateLinkServiceID() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) string { return v.PrivateLinkServiceID }).(pulumi.StringOutput)
}

// The RequiredMembers of the resource
func (o PrivateLinkResourceResponseOutput) RequiredMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) []string { return v.RequiredMembers }).(pulumi.StringArrayOutput)
}

// The resource type.
func (o PrivateLinkResourceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkResourceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PrivateLinkResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkResourceResponse)(nil)).Elem()
}

func (o PrivateLinkResourceResponseArrayOutput) ToPrivateLinkResourceResponseArrayOutput() PrivateLinkResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkResourceResponseArrayOutput) ToPrivateLinkResourceResponseArrayOutputWithContext(ctx context.Context) PrivateLinkResourceResponseArrayOutput {
	return o
}

func (o PrivateLinkResourceResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkResourceResponse {
		return vs[0].([]PrivateLinkResourceResponse)[vs[1].(int)]
	}).(PrivateLinkResourceResponseOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionState struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//	PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponse struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// The state of a private link service connection.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// A reference to an Azure resource.
type ResourceReference struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// ResourceReferenceInput is an input type that accepts ResourceReferenceArgs and ResourceReferenceOutput values.
// You can construct a concrete instance of `ResourceReferenceInput` via:
//
//	ResourceReferenceArgs{...}
type ResourceReferenceInput interface {
	pulumi.Input

	ToResourceReferenceOutput() ResourceReferenceOutput
	ToResourceReferenceOutputWithContext(context.Context) ResourceReferenceOutput
}

// A reference to an Azure resource.
type ResourceReferenceArgs struct {
	// The fully qualified Azure resource id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ResourceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArgs) ToResourceReferenceOutput() ResourceReferenceOutput {
	return i.ToResourceReferenceOutputWithContext(context.Background())
}

func (i ResourceReferenceArgs) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceOutput)
}

// ResourceReferenceArrayInput is an input type that accepts ResourceReferenceArray and ResourceReferenceArrayOutput values.
// You can construct a concrete instance of `ResourceReferenceArrayInput` via:
//
//	ResourceReferenceArray{ ResourceReferenceArgs{...} }
type ResourceReferenceArrayInput interface {
	pulumi.Input

	ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput
	ToResourceReferenceArrayOutputWithContext(context.Context) ResourceReferenceArrayOutput
}

type ResourceReferenceArray []ResourceReferenceInput

func (ResourceReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return i.ToResourceReferenceArrayOutputWithContext(context.Background())
}

func (i ResourceReferenceArray) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceReferenceArrayOutput)
}

// A reference to an Azure resource.
type ResourceReferenceOutput struct{ *pulumi.OutputState }

func (ResourceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceOutput) ToResourceReferenceOutput() ResourceReferenceOutput {
	return o
}

func (o ResourceReferenceOutput) ToResourceReferenceOutputWithContext(ctx context.Context) ResourceReferenceOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReference)(nil)).Elem()
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutput() ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) ToResourceReferenceArrayOutputWithContext(ctx context.Context) ResourceReferenceArrayOutput {
	return o
}

func (o ResourceReferenceArrayOutput) Index(i pulumi.IntInput) ResourceReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReference {
		return vs[0].([]ResourceReference)[vs[1].(int)]
	}).(ResourceReferenceOutput)
}

// A reference to an Azure resource.
type ResourceReferenceResponse struct {
	// The fully qualified Azure resource id.
	Id *string `pulumi:"id"`
}

// A reference to an Azure resource.
type ResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutput() ResourceReferenceResponseOutput {
	return o
}

func (o ResourceReferenceResponseOutput) ToResourceReferenceResponseOutputWithContext(ctx context.Context) ResourceReferenceResponseOutput {
	return o
}

// The fully qualified Azure resource id.
func (o ResourceReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceReferenceResponse)(nil)).Elem()
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutput() ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) ToResourceReferenceResponseArrayOutputWithContext(ctx context.Context) ResourceReferenceResponseArrayOutput {
	return o
}

func (o ResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) ResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceReferenceResponse {
		return vs[0].([]ResourceReferenceResponse)[vs[1].(int)]
	}).(ResourceReferenceResponseOutput)
}

// Sysctl settings for Linux agent nodes.
type SysctlConfig struct {
	// Sysctl setting fs.aio-max-nr.
	FsAioMaxNr *int `pulumi:"fsAioMaxNr"`
	// Sysctl setting fs.file-max.
	FsFileMax *int `pulumi:"fsFileMax"`
	// Sysctl setting fs.inotify.max_user_watches.
	FsInotifyMaxUserWatches *int `pulumi:"fsInotifyMaxUserWatches"`
	// Sysctl setting fs.nr_open.
	FsNrOpen *int `pulumi:"fsNrOpen"`
	// Sysctl setting kernel.threads-max.
	KernelThreadsMax *int `pulumi:"kernelThreadsMax"`
	// Sysctl setting net.core.netdev_max_backlog.
	NetCoreNetdevMaxBacklog *int `pulumi:"netCoreNetdevMaxBacklog"`
	// Sysctl setting net.core.optmem_max.
	NetCoreOptmemMax *int `pulumi:"netCoreOptmemMax"`
	// Sysctl setting net.core.rmem_default.
	NetCoreRmemDefault *int `pulumi:"netCoreRmemDefault"`
	// Sysctl setting net.core.rmem_max.
	NetCoreRmemMax *int `pulumi:"netCoreRmemMax"`
	// Sysctl setting net.core.somaxconn.
	NetCoreSomaxconn *int `pulumi:"netCoreSomaxconn"`
	// Sysctl setting net.core.wmem_default.
	NetCoreWmemDefault *int `pulumi:"netCoreWmemDefault"`
	// Sysctl setting net.core.wmem_max.
	NetCoreWmemMax *int `pulumi:"netCoreWmemMax"`
	// Sysctl setting net.ipv4.ip_local_port_range.
	NetIpv4IpLocalPortRange *string `pulumi:"netIpv4IpLocalPortRange"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
	NetIpv4NeighDefaultGcThresh1 *int `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
	NetIpv4NeighDefaultGcThresh2 *int `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
	NetIpv4NeighDefaultGcThresh3 *int `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// Sysctl setting net.ipv4.tcp_fin_timeout.
	NetIpv4TcpFinTimeout *int `pulumi:"netIpv4TcpFinTimeout"`
	// Sysctl setting net.ipv4.tcp_keepalive_probes.
	NetIpv4TcpKeepaliveProbes *int `pulumi:"netIpv4TcpKeepaliveProbes"`
	// Sysctl setting net.ipv4.tcp_keepalive_time.
	NetIpv4TcpKeepaliveTime *int `pulumi:"netIpv4TcpKeepaliveTime"`
	// Sysctl setting net.ipv4.tcp_max_syn_backlog.
	NetIpv4TcpMaxSynBacklog *int `pulumi:"netIpv4TcpMaxSynBacklog"`
	// Sysctl setting net.ipv4.tcp_max_tw_buckets.
	NetIpv4TcpMaxTwBuckets *int `pulumi:"netIpv4TcpMaxTwBuckets"`
	// Sysctl setting net.ipv4.tcp_tw_reuse.
	NetIpv4TcpTwReuse *bool `pulumi:"netIpv4TcpTwReuse"`
	// Sysctl setting net.ipv4.tcp_keepalive_intvl.
	NetIpv4TcpkeepaliveIntvl *int `pulumi:"netIpv4TcpkeepaliveIntvl"`
	// Sysctl setting net.netfilter.nf_conntrack_buckets.
	NetNetfilterNfConntrackBuckets *int `pulumi:"netNetfilterNfConntrackBuckets"`
	// Sysctl setting net.netfilter.nf_conntrack_max.
	NetNetfilterNfConntrackMax *int `pulumi:"netNetfilterNfConntrackMax"`
	// Sysctl setting vm.max_map_count.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
	// Sysctl setting vm.swappiness.
	VmSwappiness *int `pulumi:"vmSwappiness"`
	// Sysctl setting vm.vfs_cache_pressure.
	VmVfsCachePressure *int `pulumi:"vmVfsCachePressure"`
}

// SysctlConfigInput is an input type that accepts SysctlConfigArgs and SysctlConfigOutput values.
// You can construct a concrete instance of `SysctlConfigInput` via:
//
//	SysctlConfigArgs{...}
type SysctlConfigInput interface {
	pulumi.Input

	ToSysctlConfigOutput() SysctlConfigOutput
	ToSysctlConfigOutputWithContext(context.Context) SysctlConfigOutput
}

// Sysctl settings for Linux agent nodes.
type SysctlConfigArgs struct {
	// Sysctl setting fs.aio-max-nr.
	FsAioMaxNr pulumi.IntPtrInput `pulumi:"fsAioMaxNr"`
	// Sysctl setting fs.file-max.
	FsFileMax pulumi.IntPtrInput `pulumi:"fsFileMax"`
	// Sysctl setting fs.inotify.max_user_watches.
	FsInotifyMaxUserWatches pulumi.IntPtrInput `pulumi:"fsInotifyMaxUserWatches"`
	// Sysctl setting fs.nr_open.
	FsNrOpen pulumi.IntPtrInput `pulumi:"fsNrOpen"`
	// Sysctl setting kernel.threads-max.
	KernelThreadsMax pulumi.IntPtrInput `pulumi:"kernelThreadsMax"`
	// Sysctl setting net.core.netdev_max_backlog.
	NetCoreNetdevMaxBacklog pulumi.IntPtrInput `pulumi:"netCoreNetdevMaxBacklog"`
	// Sysctl setting net.core.optmem_max.
	NetCoreOptmemMax pulumi.IntPtrInput `pulumi:"netCoreOptmemMax"`
	// Sysctl setting net.core.rmem_default.
	NetCoreRmemDefault pulumi.IntPtrInput `pulumi:"netCoreRmemDefault"`
	// Sysctl setting net.core.rmem_max.
	NetCoreRmemMax pulumi.IntPtrInput `pulumi:"netCoreRmemMax"`
	// Sysctl setting net.core.somaxconn.
	NetCoreSomaxconn pulumi.IntPtrInput `pulumi:"netCoreSomaxconn"`
	// Sysctl setting net.core.wmem_default.
	NetCoreWmemDefault pulumi.IntPtrInput `pulumi:"netCoreWmemDefault"`
	// Sysctl setting net.core.wmem_max.
	NetCoreWmemMax pulumi.IntPtrInput `pulumi:"netCoreWmemMax"`
	// Sysctl setting net.ipv4.ip_local_port_range.
	NetIpv4IpLocalPortRange pulumi.StringPtrInput `pulumi:"netIpv4IpLocalPortRange"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
	NetIpv4NeighDefaultGcThresh1 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
	NetIpv4NeighDefaultGcThresh2 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
	NetIpv4NeighDefaultGcThresh3 pulumi.IntPtrInput `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// Sysctl setting net.ipv4.tcp_fin_timeout.
	NetIpv4TcpFinTimeout pulumi.IntPtrInput `pulumi:"netIpv4TcpFinTimeout"`
	// Sysctl setting net.ipv4.tcp_keepalive_probes.
	NetIpv4TcpKeepaliveProbes pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveProbes"`
	// Sysctl setting net.ipv4.tcp_keepalive_time.
	NetIpv4TcpKeepaliveTime pulumi.IntPtrInput `pulumi:"netIpv4TcpKeepaliveTime"`
	// Sysctl setting net.ipv4.tcp_max_syn_backlog.
	NetIpv4TcpMaxSynBacklog pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxSynBacklog"`
	// Sysctl setting net.ipv4.tcp_max_tw_buckets.
	NetIpv4TcpMaxTwBuckets pulumi.IntPtrInput `pulumi:"netIpv4TcpMaxTwBuckets"`
	// Sysctl setting net.ipv4.tcp_tw_reuse.
	NetIpv4TcpTwReuse pulumi.BoolPtrInput `pulumi:"netIpv4TcpTwReuse"`
	// Sysctl setting net.ipv4.tcp_keepalive_intvl.
	NetIpv4TcpkeepaliveIntvl pulumi.IntPtrInput `pulumi:"netIpv4TcpkeepaliveIntvl"`
	// Sysctl setting net.netfilter.nf_conntrack_buckets.
	NetNetfilterNfConntrackBuckets pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackBuckets"`
	// Sysctl setting net.netfilter.nf_conntrack_max.
	NetNetfilterNfConntrackMax pulumi.IntPtrInput `pulumi:"netNetfilterNfConntrackMax"`
	// Sysctl setting vm.max_map_count.
	VmMaxMapCount pulumi.IntPtrInput `pulumi:"vmMaxMapCount"`
	// Sysctl setting vm.swappiness.
	VmSwappiness pulumi.IntPtrInput `pulumi:"vmSwappiness"`
	// Sysctl setting vm.vfs_cache_pressure.
	VmVfsCachePressure pulumi.IntPtrInput `pulumi:"vmVfsCachePressure"`
}

func (SysctlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SysctlConfig)(nil)).Elem()
}

func (i SysctlConfigArgs) ToSysctlConfigOutput() SysctlConfigOutput {
	return i.ToSysctlConfigOutputWithContext(context.Background())
}

func (i SysctlConfigArgs) ToSysctlConfigOutputWithContext(ctx context.Context) SysctlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SysctlConfigOutput)
}

func (i SysctlConfigArgs) ToSysctlConfigPtrOutput() SysctlConfigPtrOutput {
	return i.ToSysctlConfigPtrOutputWithContext(context.Background())
}

func (i SysctlConfigArgs) ToSysctlConfigPtrOutputWithContext(ctx context.Context) SysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SysctlConfigOutput).ToSysctlConfigPtrOutputWithContext(ctx)
}

// SysctlConfigPtrInput is an input type that accepts SysctlConfigArgs, SysctlConfigPtr and SysctlConfigPtrOutput values.
// You can construct a concrete instance of `SysctlConfigPtrInput` via:
//
//	        SysctlConfigArgs{...}
//
//	or:
//
//	        nil
type SysctlConfigPtrInput interface {
	pulumi.Input

	ToSysctlConfigPtrOutput() SysctlConfigPtrOutput
	ToSysctlConfigPtrOutputWithContext(context.Context) SysctlConfigPtrOutput
}

type sysctlConfigPtrType SysctlConfigArgs

func SysctlConfigPtr(v *SysctlConfigArgs) SysctlConfigPtrInput {
	return (*sysctlConfigPtrType)(v)
}

func (*sysctlConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SysctlConfig)(nil)).Elem()
}

func (i *sysctlConfigPtrType) ToSysctlConfigPtrOutput() SysctlConfigPtrOutput {
	return i.ToSysctlConfigPtrOutputWithContext(context.Background())
}

func (i *sysctlConfigPtrType) ToSysctlConfigPtrOutputWithContext(ctx context.Context) SysctlConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SysctlConfigPtrOutput)
}

// Sysctl settings for Linux agent nodes.
type SysctlConfigOutput struct{ *pulumi.OutputState }

func (SysctlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SysctlConfig)(nil)).Elem()
}

func (o SysctlConfigOutput) ToSysctlConfigOutput() SysctlConfigOutput {
	return o
}

func (o SysctlConfigOutput) ToSysctlConfigOutputWithContext(ctx context.Context) SysctlConfigOutput {
	return o
}

func (o SysctlConfigOutput) ToSysctlConfigPtrOutput() SysctlConfigPtrOutput {
	return o.ToSysctlConfigPtrOutputWithContext(context.Background())
}

func (o SysctlConfigOutput) ToSysctlConfigPtrOutputWithContext(ctx context.Context) SysctlConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SysctlConfig) *SysctlConfig {
		return &v
	}).(SysctlConfigPtrOutput)
}

// Sysctl setting fs.aio-max-nr.
func (o SysctlConfigOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.FsAioMaxNr }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.file-max.
func (o SysctlConfigOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.FsFileMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.inotify.max_user_watches.
func (o SysctlConfigOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.FsInotifyMaxUserWatches }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.nr_open.
func (o SysctlConfigOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.FsNrOpen }).(pulumi.IntPtrOutput)
}

// Sysctl setting kernel.threads-max.
func (o SysctlConfigOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.KernelThreadsMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.netdev_max_backlog.
func (o SysctlConfigOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreNetdevMaxBacklog }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.optmem_max.
func (o SysctlConfigOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreOptmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_default.
func (o SysctlConfigOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreRmemDefault }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_max.
func (o SysctlConfigOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreRmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.somaxconn.
func (o SysctlConfigOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreSomaxconn }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_default.
func (o SysctlConfigOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreWmemDefault }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_max.
func (o SysctlConfigOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetCoreWmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.ip_local_port_range.
func (o SysctlConfigOutput) NetIpv4IpLocalPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *string { return v.NetIpv4IpLocalPortRange }).(pulumi.StringPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
func (o SysctlConfigOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh1 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
func (o SysctlConfigOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh2 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
func (o SysctlConfigOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4NeighDefaultGcThresh3 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_fin_timeout.
func (o SysctlConfigOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpFinTimeout }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_probes.
func (o SysctlConfigOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpKeepaliveProbes }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_time.
func (o SysctlConfigOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpKeepaliveTime }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_syn_backlog.
func (o SysctlConfigOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpMaxSynBacklog }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_tw_buckets.
func (o SysctlConfigOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpMaxTwBuckets }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_tw_reuse.
func (o SysctlConfigOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *bool { return v.NetIpv4TcpTwReuse }).(pulumi.BoolPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_intvl.
func (o SysctlConfigOutput) NetIpv4TcpkeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetIpv4TcpkeepaliveIntvl }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_buckets.
func (o SysctlConfigOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetNetfilterNfConntrackBuckets }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_max.
func (o SysctlConfigOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.NetNetfilterNfConntrackMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.max_map_count.
func (o SysctlConfigOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.swappiness.
func (o SysctlConfigOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.VmSwappiness }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.vfs_cache_pressure.
func (o SysctlConfigOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfig) *int { return v.VmVfsCachePressure }).(pulumi.IntPtrOutput)
}

type SysctlConfigPtrOutput struct{ *pulumi.OutputState }

func (SysctlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SysctlConfig)(nil)).Elem()
}

func (o SysctlConfigPtrOutput) ToSysctlConfigPtrOutput() SysctlConfigPtrOutput {
	return o
}

func (o SysctlConfigPtrOutput) ToSysctlConfigPtrOutputWithContext(ctx context.Context) SysctlConfigPtrOutput {
	return o
}

func (o SysctlConfigPtrOutput) Elem() SysctlConfigOutput {
	return o.ApplyT(func(v *SysctlConfig) SysctlConfig {
		if v != nil {
			return *v
		}
		var ret SysctlConfig
		return ret
	}).(SysctlConfigOutput)
}

// Sysctl setting fs.aio-max-nr.
func (o SysctlConfigPtrOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsAioMaxNr
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.file-max.
func (o SysctlConfigPtrOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsFileMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.inotify.max_user_watches.
func (o SysctlConfigPtrOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsInotifyMaxUserWatches
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.nr_open.
func (o SysctlConfigPtrOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.FsNrOpen
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting kernel.threads-max.
func (o SysctlConfigPtrOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.KernelThreadsMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.netdev_max_backlog.
func (o SysctlConfigPtrOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreNetdevMaxBacklog
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.optmem_max.
func (o SysctlConfigPtrOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreOptmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_default.
func (o SysctlConfigPtrOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemDefault
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_max.
func (o SysctlConfigPtrOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.somaxconn.
func (o SysctlConfigPtrOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreSomaxconn
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_default.
func (o SysctlConfigPtrOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemDefault
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_max.
func (o SysctlConfigPtrOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.ip_local_port_range.
func (o SysctlConfigPtrOutput) NetIpv4IpLocalPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRange
	}).(pulumi.StringPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
func (o SysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh1
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
func (o SysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh2
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
func (o SysctlConfigPtrOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh3
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_fin_timeout.
func (o SysctlConfigPtrOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpFinTimeout
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_probes.
func (o SysctlConfigPtrOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveProbes
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_time.
func (o SysctlConfigPtrOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveTime
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_syn_backlog.
func (o SysctlConfigPtrOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxSynBacklog
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_tw_buckets.
func (o SysctlConfigPtrOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxTwBuckets
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_tw_reuse.
func (o SysctlConfigPtrOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *bool {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpTwReuse
	}).(pulumi.BoolPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_intvl.
func (o SysctlConfigPtrOutput) NetIpv4TcpkeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpkeepaliveIntvl
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_buckets.
func (o SysctlConfigPtrOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_max.
func (o SysctlConfigPtrOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.max_map_count.
func (o SysctlConfigPtrOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmMaxMapCount
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.swappiness.
func (o SysctlConfigPtrOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmSwappiness
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.vfs_cache_pressure.
func (o SysctlConfigPtrOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfig) *int {
		if v == nil {
			return nil
		}
		return v.VmVfsCachePressure
	}).(pulumi.IntPtrOutput)
}

// Sysctl settings for Linux agent nodes.
type SysctlConfigResponse struct {
	// Sysctl setting fs.aio-max-nr.
	FsAioMaxNr *int `pulumi:"fsAioMaxNr"`
	// Sysctl setting fs.file-max.
	FsFileMax *int `pulumi:"fsFileMax"`
	// Sysctl setting fs.inotify.max_user_watches.
	FsInotifyMaxUserWatches *int `pulumi:"fsInotifyMaxUserWatches"`
	// Sysctl setting fs.nr_open.
	FsNrOpen *int `pulumi:"fsNrOpen"`
	// Sysctl setting kernel.threads-max.
	KernelThreadsMax *int `pulumi:"kernelThreadsMax"`
	// Sysctl setting net.core.netdev_max_backlog.
	NetCoreNetdevMaxBacklog *int `pulumi:"netCoreNetdevMaxBacklog"`
	// Sysctl setting net.core.optmem_max.
	NetCoreOptmemMax *int `pulumi:"netCoreOptmemMax"`
	// Sysctl setting net.core.rmem_default.
	NetCoreRmemDefault *int `pulumi:"netCoreRmemDefault"`
	// Sysctl setting net.core.rmem_max.
	NetCoreRmemMax *int `pulumi:"netCoreRmemMax"`
	// Sysctl setting net.core.somaxconn.
	NetCoreSomaxconn *int `pulumi:"netCoreSomaxconn"`
	// Sysctl setting net.core.wmem_default.
	NetCoreWmemDefault *int `pulumi:"netCoreWmemDefault"`
	// Sysctl setting net.core.wmem_max.
	NetCoreWmemMax *int `pulumi:"netCoreWmemMax"`
	// Sysctl setting net.ipv4.ip_local_port_range.
	NetIpv4IpLocalPortRange *string `pulumi:"netIpv4IpLocalPortRange"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
	NetIpv4NeighDefaultGcThresh1 *int `pulumi:"netIpv4NeighDefaultGcThresh1"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
	NetIpv4NeighDefaultGcThresh2 *int `pulumi:"netIpv4NeighDefaultGcThresh2"`
	// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
	NetIpv4NeighDefaultGcThresh3 *int `pulumi:"netIpv4NeighDefaultGcThresh3"`
	// Sysctl setting net.ipv4.tcp_fin_timeout.
	NetIpv4TcpFinTimeout *int `pulumi:"netIpv4TcpFinTimeout"`
	// Sysctl setting net.ipv4.tcp_keepalive_probes.
	NetIpv4TcpKeepaliveProbes *int `pulumi:"netIpv4TcpKeepaliveProbes"`
	// Sysctl setting net.ipv4.tcp_keepalive_time.
	NetIpv4TcpKeepaliveTime *int `pulumi:"netIpv4TcpKeepaliveTime"`
	// Sysctl setting net.ipv4.tcp_max_syn_backlog.
	NetIpv4TcpMaxSynBacklog *int `pulumi:"netIpv4TcpMaxSynBacklog"`
	// Sysctl setting net.ipv4.tcp_max_tw_buckets.
	NetIpv4TcpMaxTwBuckets *int `pulumi:"netIpv4TcpMaxTwBuckets"`
	// Sysctl setting net.ipv4.tcp_tw_reuse.
	NetIpv4TcpTwReuse *bool `pulumi:"netIpv4TcpTwReuse"`
	// Sysctl setting net.ipv4.tcp_keepalive_intvl.
	NetIpv4TcpkeepaliveIntvl *int `pulumi:"netIpv4TcpkeepaliveIntvl"`
	// Sysctl setting net.netfilter.nf_conntrack_buckets.
	NetNetfilterNfConntrackBuckets *int `pulumi:"netNetfilterNfConntrackBuckets"`
	// Sysctl setting net.netfilter.nf_conntrack_max.
	NetNetfilterNfConntrackMax *int `pulumi:"netNetfilterNfConntrackMax"`
	// Sysctl setting vm.max_map_count.
	VmMaxMapCount *int `pulumi:"vmMaxMapCount"`
	// Sysctl setting vm.swappiness.
	VmSwappiness *int `pulumi:"vmSwappiness"`
	// Sysctl setting vm.vfs_cache_pressure.
	VmVfsCachePressure *int `pulumi:"vmVfsCachePressure"`
}

// Sysctl settings for Linux agent nodes.
type SysctlConfigResponseOutput struct{ *pulumi.OutputState }

func (SysctlConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SysctlConfigResponse)(nil)).Elem()
}

func (o SysctlConfigResponseOutput) ToSysctlConfigResponseOutput() SysctlConfigResponseOutput {
	return o
}

func (o SysctlConfigResponseOutput) ToSysctlConfigResponseOutputWithContext(ctx context.Context) SysctlConfigResponseOutput {
	return o
}

// Sysctl setting fs.aio-max-nr.
func (o SysctlConfigResponseOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.FsAioMaxNr }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.file-max.
func (o SysctlConfigResponseOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.FsFileMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.inotify.max_user_watches.
func (o SysctlConfigResponseOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.FsInotifyMaxUserWatches }).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.nr_open.
func (o SysctlConfigResponseOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.FsNrOpen }).(pulumi.IntPtrOutput)
}

// Sysctl setting kernel.threads-max.
func (o SysctlConfigResponseOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.KernelThreadsMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.netdev_max_backlog.
func (o SysctlConfigResponseOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreNetdevMaxBacklog }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.optmem_max.
func (o SysctlConfigResponseOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreOptmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_default.
func (o SysctlConfigResponseOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreRmemDefault }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_max.
func (o SysctlConfigResponseOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreRmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.somaxconn.
func (o SysctlConfigResponseOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreSomaxconn }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_default.
func (o SysctlConfigResponseOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreWmemDefault }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_max.
func (o SysctlConfigResponseOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetCoreWmemMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.ip_local_port_range.
func (o SysctlConfigResponseOutput) NetIpv4IpLocalPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *string { return v.NetIpv4IpLocalPortRange }).(pulumi.StringPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
func (o SysctlConfigResponseOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4NeighDefaultGcThresh1 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
func (o SysctlConfigResponseOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4NeighDefaultGcThresh2 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
func (o SysctlConfigResponseOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4NeighDefaultGcThresh3 }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_fin_timeout.
func (o SysctlConfigResponseOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpFinTimeout }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_probes.
func (o SysctlConfigResponseOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpKeepaliveProbes }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_time.
func (o SysctlConfigResponseOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpKeepaliveTime }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_syn_backlog.
func (o SysctlConfigResponseOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpMaxSynBacklog }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_tw_buckets.
func (o SysctlConfigResponseOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpMaxTwBuckets }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_tw_reuse.
func (o SysctlConfigResponseOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *bool { return v.NetIpv4TcpTwReuse }).(pulumi.BoolPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_intvl.
func (o SysctlConfigResponseOutput) NetIpv4TcpkeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetIpv4TcpkeepaliveIntvl }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_buckets.
func (o SysctlConfigResponseOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetNetfilterNfConntrackBuckets }).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_max.
func (o SysctlConfigResponseOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.NetNetfilterNfConntrackMax }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.max_map_count.
func (o SysctlConfigResponseOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.VmMaxMapCount }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.swappiness.
func (o SysctlConfigResponseOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.VmSwappiness }).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.vfs_cache_pressure.
func (o SysctlConfigResponseOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SysctlConfigResponse) *int { return v.VmVfsCachePressure }).(pulumi.IntPtrOutput)
}

type SysctlConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SysctlConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SysctlConfigResponse)(nil)).Elem()
}

func (o SysctlConfigResponsePtrOutput) ToSysctlConfigResponsePtrOutput() SysctlConfigResponsePtrOutput {
	return o
}

func (o SysctlConfigResponsePtrOutput) ToSysctlConfigResponsePtrOutputWithContext(ctx context.Context) SysctlConfigResponsePtrOutput {
	return o
}

func (o SysctlConfigResponsePtrOutput) Elem() SysctlConfigResponseOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) SysctlConfigResponse {
		if v != nil {
			return *v
		}
		var ret SysctlConfigResponse
		return ret
	}).(SysctlConfigResponseOutput)
}

// Sysctl setting fs.aio-max-nr.
func (o SysctlConfigResponsePtrOutput) FsAioMaxNr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.FsAioMaxNr
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.file-max.
func (o SysctlConfigResponsePtrOutput) FsFileMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.FsFileMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.inotify.max_user_watches.
func (o SysctlConfigResponsePtrOutput) FsInotifyMaxUserWatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.FsInotifyMaxUserWatches
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting fs.nr_open.
func (o SysctlConfigResponsePtrOutput) FsNrOpen() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.FsNrOpen
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting kernel.threads-max.
func (o SysctlConfigResponsePtrOutput) KernelThreadsMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.KernelThreadsMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.netdev_max_backlog.
func (o SysctlConfigResponsePtrOutput) NetCoreNetdevMaxBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreNetdevMaxBacklog
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.optmem_max.
func (o SysctlConfigResponsePtrOutput) NetCoreOptmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreOptmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_default.
func (o SysctlConfigResponsePtrOutput) NetCoreRmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemDefault
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.rmem_max.
func (o SysctlConfigResponsePtrOutput) NetCoreRmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreRmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.somaxconn.
func (o SysctlConfigResponsePtrOutput) NetCoreSomaxconn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreSomaxconn
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_default.
func (o SysctlConfigResponsePtrOutput) NetCoreWmemDefault() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemDefault
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.core.wmem_max.
func (o SysctlConfigResponsePtrOutput) NetCoreWmemMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetCoreWmemMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.ip_local_port_range.
func (o SysctlConfigResponsePtrOutput) NetIpv4IpLocalPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetIpv4IpLocalPortRange
	}).(pulumi.StringPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh1.
func (o SysctlConfigResponsePtrOutput) NetIpv4NeighDefaultGcThresh1() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh1
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh2.
func (o SysctlConfigResponsePtrOutput) NetIpv4NeighDefaultGcThresh2() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh2
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.neigh.default.gc_thresh3.
func (o SysctlConfigResponsePtrOutput) NetIpv4NeighDefaultGcThresh3() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4NeighDefaultGcThresh3
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_fin_timeout.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpFinTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpFinTimeout
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_probes.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpKeepaliveProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveProbes
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_time.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpKeepaliveTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpKeepaliveTime
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_syn_backlog.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpMaxSynBacklog() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxSynBacklog
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_max_tw_buckets.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpMaxTwBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpMaxTwBuckets
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.ipv4.tcp_tw_reuse.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpTwReuse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpTwReuse
	}).(pulumi.BoolPtrOutput)
}

// Sysctl setting net.ipv4.tcp_keepalive_intvl.
func (o SysctlConfigResponsePtrOutput) NetIpv4TcpkeepaliveIntvl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetIpv4TcpkeepaliveIntvl
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_buckets.
func (o SysctlConfigResponsePtrOutput) NetNetfilterNfConntrackBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackBuckets
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting net.netfilter.nf_conntrack_max.
func (o SysctlConfigResponsePtrOutput) NetNetfilterNfConntrackMax() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NetNetfilterNfConntrackMax
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.max_map_count.
func (o SysctlConfigResponsePtrOutput) VmMaxMapCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VmMaxMapCount
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.swappiness.
func (o SysctlConfigResponsePtrOutput) VmSwappiness() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VmSwappiness
	}).(pulumi.IntPtrOutput)
}

// Sysctl setting vm.vfs_cache_pressure.
func (o SysctlConfigResponsePtrOutput) VmVfsCachePressure() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SysctlConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VmVfsCachePressure
	}).(pulumi.IntPtrOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Time in a week.
type TimeInWeek struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.
	HourSlots []int `pulumi:"hourSlots"`
}

// TimeInWeekInput is an input type that accepts TimeInWeekArgs and TimeInWeekOutput values.
// You can construct a concrete instance of `TimeInWeekInput` via:
//
//	TimeInWeekArgs{...}
type TimeInWeekInput interface {
	pulumi.Input

	ToTimeInWeekOutput() TimeInWeekOutput
	ToTimeInWeekOutputWithContext(context.Context) TimeInWeekOutput
}

// Time in a week.
type TimeInWeekArgs struct {
	// The day of the week.
	Day pulumi.StringPtrInput `pulumi:"day"`
	// Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.
	HourSlots pulumi.IntArrayInput `pulumi:"hourSlots"`
}

func (TimeInWeekArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeInWeek)(nil)).Elem()
}

func (i TimeInWeekArgs) ToTimeInWeekOutput() TimeInWeekOutput {
	return i.ToTimeInWeekOutputWithContext(context.Background())
}

func (i TimeInWeekArgs) ToTimeInWeekOutputWithContext(ctx context.Context) TimeInWeekOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeInWeekOutput)
}

// TimeInWeekArrayInput is an input type that accepts TimeInWeekArray and TimeInWeekArrayOutput values.
// You can construct a concrete instance of `TimeInWeekArrayInput` via:
//
//	TimeInWeekArray{ TimeInWeekArgs{...} }
type TimeInWeekArrayInput interface {
	pulumi.Input

	ToTimeInWeekArrayOutput() TimeInWeekArrayOutput
	ToTimeInWeekArrayOutputWithContext(context.Context) TimeInWeekArrayOutput
}

type TimeInWeekArray []TimeInWeekInput

func (TimeInWeekArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeInWeek)(nil)).Elem()
}

func (i TimeInWeekArray) ToTimeInWeekArrayOutput() TimeInWeekArrayOutput {
	return i.ToTimeInWeekArrayOutputWithContext(context.Background())
}

func (i TimeInWeekArray) ToTimeInWeekArrayOutputWithContext(ctx context.Context) TimeInWeekArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeInWeekArrayOutput)
}

// Time in a week.
type TimeInWeekOutput struct{ *pulumi.OutputState }

func (TimeInWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeInWeek)(nil)).Elem()
}

func (o TimeInWeekOutput) ToTimeInWeekOutput() TimeInWeekOutput {
	return o
}

func (o TimeInWeekOutput) ToTimeInWeekOutputWithContext(ctx context.Context) TimeInWeekOutput {
	return o
}

// The day of the week.
func (o TimeInWeekOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeInWeek) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.
func (o TimeInWeekOutput) HourSlots() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TimeInWeek) []int { return v.HourSlots }).(pulumi.IntArrayOutput)
}

type TimeInWeekArrayOutput struct{ *pulumi.OutputState }

func (TimeInWeekArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeInWeek)(nil)).Elem()
}

func (o TimeInWeekArrayOutput) ToTimeInWeekArrayOutput() TimeInWeekArrayOutput {
	return o
}

func (o TimeInWeekArrayOutput) ToTimeInWeekArrayOutputWithContext(ctx context.Context) TimeInWeekArrayOutput {
	return o
}

func (o TimeInWeekArrayOutput) Index(i pulumi.IntInput) TimeInWeekOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeInWeek {
		return vs[0].([]TimeInWeek)[vs[1].(int)]
	}).(TimeInWeekOutput)
}

// Time in a week.
type TimeInWeekResponse struct {
	// The day of the week.
	Day *string `pulumi:"day"`
	// Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.
	HourSlots []int `pulumi:"hourSlots"`
}

// Time in a week.
type TimeInWeekResponseOutput struct{ *pulumi.OutputState }

func (TimeInWeekResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeInWeekResponse)(nil)).Elem()
}

func (o TimeInWeekResponseOutput) ToTimeInWeekResponseOutput() TimeInWeekResponseOutput {
	return o
}

func (o TimeInWeekResponseOutput) ToTimeInWeekResponseOutputWithContext(ctx context.Context) TimeInWeekResponseOutput {
	return o
}

// The day of the week.
func (o TimeInWeekResponseOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeInWeekResponse) *string { return v.Day }).(pulumi.StringPtrOutput)
}

// Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.
func (o TimeInWeekResponseOutput) HourSlots() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TimeInWeekResponse) []int { return v.HourSlots }).(pulumi.IntArrayOutput)
}

type TimeInWeekResponseArrayOutput struct{ *pulumi.OutputState }

func (TimeInWeekResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeInWeekResponse)(nil)).Elem()
}

func (o TimeInWeekResponseArrayOutput) ToTimeInWeekResponseArrayOutput() TimeInWeekResponseArrayOutput {
	return o
}

func (o TimeInWeekResponseArrayOutput) ToTimeInWeekResponseArrayOutputWithContext(ctx context.Context) TimeInWeekResponseArrayOutput {
	return o
}

func (o TimeInWeekResponseArrayOutput) Index(i pulumi.IntInput) TimeInWeekResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeInWeekResponse {
		return vs[0].([]TimeInWeekResponse)[vs[1].(int)]
	}).(TimeInWeekResponseOutput)
}

// For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
type TimeSpan struct {
	// The end of a time span
	End *string `pulumi:"end"`
	// The start of a time span
	Start *string `pulumi:"start"`
}

// TimeSpanInput is an input type that accepts TimeSpanArgs and TimeSpanOutput values.
// You can construct a concrete instance of `TimeSpanInput` via:
//
//	TimeSpanArgs{...}
type TimeSpanInput interface {
	pulumi.Input

	ToTimeSpanOutput() TimeSpanOutput
	ToTimeSpanOutputWithContext(context.Context) TimeSpanOutput
}

// For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
type TimeSpanArgs struct {
	// The end of a time span
	End pulumi.StringPtrInput `pulumi:"end"`
	// The start of a time span
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (TimeSpanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSpan)(nil)).Elem()
}

func (i TimeSpanArgs) ToTimeSpanOutput() TimeSpanOutput {
	return i.ToTimeSpanOutputWithContext(context.Background())
}

func (i TimeSpanArgs) ToTimeSpanOutputWithContext(ctx context.Context) TimeSpanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSpanOutput)
}

// TimeSpanArrayInput is an input type that accepts TimeSpanArray and TimeSpanArrayOutput values.
// You can construct a concrete instance of `TimeSpanArrayInput` via:
//
//	TimeSpanArray{ TimeSpanArgs{...} }
type TimeSpanArrayInput interface {
	pulumi.Input

	ToTimeSpanArrayOutput() TimeSpanArrayOutput
	ToTimeSpanArrayOutputWithContext(context.Context) TimeSpanArrayOutput
}

type TimeSpanArray []TimeSpanInput

func (TimeSpanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSpan)(nil)).Elem()
}

func (i TimeSpanArray) ToTimeSpanArrayOutput() TimeSpanArrayOutput {
	return i.ToTimeSpanArrayOutputWithContext(context.Background())
}

func (i TimeSpanArray) ToTimeSpanArrayOutputWithContext(ctx context.Context) TimeSpanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSpanArrayOutput)
}

// For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
type TimeSpanOutput struct{ *pulumi.OutputState }

func (TimeSpanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSpan)(nil)).Elem()
}

func (o TimeSpanOutput) ToTimeSpanOutput() TimeSpanOutput {
	return o
}

func (o TimeSpanOutput) ToTimeSpanOutputWithContext(ctx context.Context) TimeSpanOutput {
	return o
}

// The end of a time span
func (o TimeSpanOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSpan) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The start of a time span
func (o TimeSpanOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSpan) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type TimeSpanArrayOutput struct{ *pulumi.OutputState }

func (TimeSpanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSpan)(nil)).Elem()
}

func (o TimeSpanArrayOutput) ToTimeSpanArrayOutput() TimeSpanArrayOutput {
	return o
}

func (o TimeSpanArrayOutput) ToTimeSpanArrayOutputWithContext(ctx context.Context) TimeSpanArrayOutput {
	return o
}

func (o TimeSpanArrayOutput) Index(i pulumi.IntInput) TimeSpanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSpan {
		return vs[0].([]TimeSpan)[vs[1].(int)]
	}).(TimeSpanOutput)
}

// For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
type TimeSpanResponse struct {
	// The end of a time span
	End *string `pulumi:"end"`
	// The start of a time span
	Start *string `pulumi:"start"`
}

// For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.
type TimeSpanResponseOutput struct{ *pulumi.OutputState }

func (TimeSpanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSpanResponse)(nil)).Elem()
}

func (o TimeSpanResponseOutput) ToTimeSpanResponseOutput() TimeSpanResponseOutput {
	return o
}

func (o TimeSpanResponseOutput) ToTimeSpanResponseOutputWithContext(ctx context.Context) TimeSpanResponseOutput {
	return o
}

// The end of a time span
func (o TimeSpanResponseOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSpanResponse) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The start of a time span
func (o TimeSpanResponseOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TimeSpanResponse) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type TimeSpanResponseArrayOutput struct{ *pulumi.OutputState }

func (TimeSpanResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSpanResponse)(nil)).Elem()
}

func (o TimeSpanResponseArrayOutput) ToTimeSpanResponseArrayOutput() TimeSpanResponseArrayOutput {
	return o
}

func (o TimeSpanResponseArrayOutput) ToTimeSpanResponseArrayOutputWithContext(ctx context.Context) TimeSpanResponseArrayOutput {
	return o
}

func (o TimeSpanResponseArrayOutput) Index(i pulumi.IntInput) TimeSpanResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSpanResponse {
		return vs[0].([]TimeSpanResponse)[vs[1].(int)]
	}).(TimeSpanResponseOutput)
}

// Details about a user assigned identity.
type UserAssignedIdentity struct {
	// The client ID of the user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the user assigned identity.
	ObjectId *string `pulumi:"objectId"`
	// The resource ID of the user assigned identity.
	ResourceId *string `pulumi:"resourceId"`
}

// UserAssignedIdentityInput is an input type that accepts UserAssignedIdentityArgs and UserAssignedIdentityOutput values.
// You can construct a concrete instance of `UserAssignedIdentityInput` via:
//
//	UserAssignedIdentityArgs{...}
type UserAssignedIdentityInput interface {
	pulumi.Input

	ToUserAssignedIdentityOutput() UserAssignedIdentityOutput
	ToUserAssignedIdentityOutputWithContext(context.Context) UserAssignedIdentityOutput
}

// Details about a user assigned identity.
type UserAssignedIdentityArgs struct {
	// The client ID of the user assigned identity.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The object ID of the user assigned identity.
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// The resource ID of the user assigned identity.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (UserAssignedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentity)(nil)).Elem()
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityOutput() UserAssignedIdentityOutput {
	return i.ToUserAssignedIdentityOutputWithContext(context.Background())
}

func (i UserAssignedIdentityArgs) ToUserAssignedIdentityOutputWithContext(ctx context.Context) UserAssignedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityOutput)
}

// UserAssignedIdentityMapInput is an input type that accepts UserAssignedIdentityMap and UserAssignedIdentityMapOutput values.
// You can construct a concrete instance of `UserAssignedIdentityMapInput` via:
//
//	UserAssignedIdentityMap{ "key": UserAssignedIdentityArgs{...} }
type UserAssignedIdentityMapInput interface {
	pulumi.Input

	ToUserAssignedIdentityMapOutput() UserAssignedIdentityMapOutput
	ToUserAssignedIdentityMapOutputWithContext(context.Context) UserAssignedIdentityMapOutput
}

type UserAssignedIdentityMap map[string]UserAssignedIdentityInput

func (UserAssignedIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentity)(nil)).Elem()
}

func (i UserAssignedIdentityMap) ToUserAssignedIdentityMapOutput() UserAssignedIdentityMapOutput {
	return i.ToUserAssignedIdentityMapOutputWithContext(context.Background())
}

func (i UserAssignedIdentityMap) ToUserAssignedIdentityMapOutputWithContext(ctx context.Context) UserAssignedIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAssignedIdentityMapOutput)
}

// Details about a user assigned identity.
type UserAssignedIdentityOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentity)(nil)).Elem()
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityOutput() UserAssignedIdentityOutput {
	return o
}

func (o UserAssignedIdentityOutput) ToUserAssignedIdentityOutputWithContext(ctx context.Context) UserAssignedIdentityOutput {
	return o
}

// The client ID of the user assigned identity.
func (o UserAssignedIdentityOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentity) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the user assigned identity.
func (o UserAssignedIdentityOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentity) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The resource ID of the user assigned identity.
func (o UserAssignedIdentityOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentity) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentity)(nil)).Elem()
}

func (o UserAssignedIdentityMapOutput) ToUserAssignedIdentityMapOutput() UserAssignedIdentityMapOutput {
	return o
}

func (o UserAssignedIdentityMapOutput) ToUserAssignedIdentityMapOutputWithContext(ctx context.Context) UserAssignedIdentityMapOutput {
	return o
}

func (o UserAssignedIdentityMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentity {
		return vs[0].(map[string]UserAssignedIdentity)[vs[1].(string)]
	}).(UserAssignedIdentityOutput)
}

// Details about a user assigned identity.
type UserAssignedIdentityResponse struct {
	// The client ID of the user assigned identity.
	ClientId *string `pulumi:"clientId"`
	// The object ID of the user assigned identity.
	ObjectId *string `pulumi:"objectId"`
	// The resource ID of the user assigned identity.
	ResourceId *string `pulumi:"resourceId"`
}

// Details about a user assigned identity.
type UserAssignedIdentityResponseOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutput() UserAssignedIdentityResponseOutput {
	return o
}

func (o UserAssignedIdentityResponseOutput) ToUserAssignedIdentityResponseOutputWithContext(ctx context.Context) UserAssignedIdentityResponseOutput {
	return o
}

// The client ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The object ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// The resource ID of the user assigned identity.
func (o UserAssignedIdentityResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserAssignedIdentityResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type UserAssignedIdentityResponseMapOutput struct{ *pulumi.OutputState }

func (UserAssignedIdentityResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]UserAssignedIdentityResponse)(nil)).Elem()
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutput() UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) ToUserAssignedIdentityResponseMapOutputWithContext(ctx context.Context) UserAssignedIdentityResponseMapOutput {
	return o
}

func (o UserAssignedIdentityResponseMapOutput) MapIndex(k pulumi.StringInput) UserAssignedIdentityResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) UserAssignedIdentityResponse {
		return vs[0].(map[string]UserAssignedIdentityResponse)[vs[1].(string)]
	}).(UserAssignedIdentityResponseOutput)
}

// Windows gMSA Profile in the managed cluster.
type WindowsGmsaProfile struct {
	// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	DnsServer *string `pulumi:"dnsServer"`
	// Specifies whether to enable Windows gMSA in the managed cluster.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	RootDomainName *string `pulumi:"rootDomainName"`
}

// WindowsGmsaProfileInput is an input type that accepts WindowsGmsaProfileArgs and WindowsGmsaProfileOutput values.
// You can construct a concrete instance of `WindowsGmsaProfileInput` via:
//
//	WindowsGmsaProfileArgs{...}
type WindowsGmsaProfileInput interface {
	pulumi.Input

	ToWindowsGmsaProfileOutput() WindowsGmsaProfileOutput
	ToWindowsGmsaProfileOutputWithContext(context.Context) WindowsGmsaProfileOutput
}

// Windows gMSA Profile in the managed cluster.
type WindowsGmsaProfileArgs struct {
	// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// Specifies whether to enable Windows gMSA in the managed cluster.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	RootDomainName pulumi.StringPtrInput `pulumi:"rootDomainName"`
}

func (WindowsGmsaProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsGmsaProfile)(nil)).Elem()
}

func (i WindowsGmsaProfileArgs) ToWindowsGmsaProfileOutput() WindowsGmsaProfileOutput {
	return i.ToWindowsGmsaProfileOutputWithContext(context.Background())
}

func (i WindowsGmsaProfileArgs) ToWindowsGmsaProfileOutputWithContext(ctx context.Context) WindowsGmsaProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsGmsaProfileOutput)
}

func (i WindowsGmsaProfileArgs) ToWindowsGmsaProfilePtrOutput() WindowsGmsaProfilePtrOutput {
	return i.ToWindowsGmsaProfilePtrOutputWithContext(context.Background())
}

func (i WindowsGmsaProfileArgs) ToWindowsGmsaProfilePtrOutputWithContext(ctx context.Context) WindowsGmsaProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsGmsaProfileOutput).ToWindowsGmsaProfilePtrOutputWithContext(ctx)
}

// WindowsGmsaProfilePtrInput is an input type that accepts WindowsGmsaProfileArgs, WindowsGmsaProfilePtr and WindowsGmsaProfilePtrOutput values.
// You can construct a concrete instance of `WindowsGmsaProfilePtrInput` via:
//
//	        WindowsGmsaProfileArgs{...}
//
//	or:
//
//	        nil
type WindowsGmsaProfilePtrInput interface {
	pulumi.Input

	ToWindowsGmsaProfilePtrOutput() WindowsGmsaProfilePtrOutput
	ToWindowsGmsaProfilePtrOutputWithContext(context.Context) WindowsGmsaProfilePtrOutput
}

type windowsGmsaProfilePtrType WindowsGmsaProfileArgs

func WindowsGmsaProfilePtr(v *WindowsGmsaProfileArgs) WindowsGmsaProfilePtrInput {
	return (*windowsGmsaProfilePtrType)(v)
}

func (*windowsGmsaProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsGmsaProfile)(nil)).Elem()
}

func (i *windowsGmsaProfilePtrType) ToWindowsGmsaProfilePtrOutput() WindowsGmsaProfilePtrOutput {
	return i.ToWindowsGmsaProfilePtrOutputWithContext(context.Background())
}

func (i *windowsGmsaProfilePtrType) ToWindowsGmsaProfilePtrOutputWithContext(ctx context.Context) WindowsGmsaProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsGmsaProfilePtrOutput)
}

// Windows gMSA Profile in the managed cluster.
type WindowsGmsaProfileOutput struct{ *pulumi.OutputState }

func (WindowsGmsaProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsGmsaProfile)(nil)).Elem()
}

func (o WindowsGmsaProfileOutput) ToWindowsGmsaProfileOutput() WindowsGmsaProfileOutput {
	return o
}

func (o WindowsGmsaProfileOutput) ToWindowsGmsaProfileOutputWithContext(ctx context.Context) WindowsGmsaProfileOutput {
	return o
}

func (o WindowsGmsaProfileOutput) ToWindowsGmsaProfilePtrOutput() WindowsGmsaProfilePtrOutput {
	return o.ToWindowsGmsaProfilePtrOutputWithContext(context.Background())
}

func (o WindowsGmsaProfileOutput) ToWindowsGmsaProfilePtrOutputWithContext(ctx context.Context) WindowsGmsaProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsGmsaProfile) *WindowsGmsaProfile {
		return &v
	}).(WindowsGmsaProfilePtrOutput)
}

// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfile) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable Windows gMSA in the managed cluster.
func (o WindowsGmsaProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfile) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileOutput) RootDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfile) *string { return v.RootDomainName }).(pulumi.StringPtrOutput)
}

type WindowsGmsaProfilePtrOutput struct{ *pulumi.OutputState }

func (WindowsGmsaProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsGmsaProfile)(nil)).Elem()
}

func (o WindowsGmsaProfilePtrOutput) ToWindowsGmsaProfilePtrOutput() WindowsGmsaProfilePtrOutput {
	return o
}

func (o WindowsGmsaProfilePtrOutput) ToWindowsGmsaProfilePtrOutputWithContext(ctx context.Context) WindowsGmsaProfilePtrOutput {
	return o
}

func (o WindowsGmsaProfilePtrOutput) Elem() WindowsGmsaProfileOutput {
	return o.ApplyT(func(v *WindowsGmsaProfile) WindowsGmsaProfile {
		if v != nil {
			return *v
		}
		var ret WindowsGmsaProfile
		return ret
	}).(WindowsGmsaProfileOutput)
}

// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfilePtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfile) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to enable Windows gMSA in the managed cluster.
func (o WindowsGmsaProfilePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfile) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfilePtrOutput) RootDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfile) *string {
		if v == nil {
			return nil
		}
		return v.RootDomainName
	}).(pulumi.StringPtrOutput)
}

// Windows gMSA Profile in the managed cluster.
type WindowsGmsaProfileResponse struct {
	// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	DnsServer *string `pulumi:"dnsServer"`
	// Specifies whether to enable Windows gMSA in the managed cluster.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
	RootDomainName *string `pulumi:"rootDomainName"`
}

// Windows gMSA Profile in the managed cluster.
type WindowsGmsaProfileResponseOutput struct{ *pulumi.OutputState }

func (WindowsGmsaProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsGmsaProfileResponse)(nil)).Elem()
}

func (o WindowsGmsaProfileResponseOutput) ToWindowsGmsaProfileResponseOutput() WindowsGmsaProfileResponseOutput {
	return o
}

func (o WindowsGmsaProfileResponseOutput) ToWindowsGmsaProfileResponseOutputWithContext(ctx context.Context) WindowsGmsaProfileResponseOutput {
	return o
}

// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileResponseOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfileResponse) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable Windows gMSA in the managed cluster.
func (o WindowsGmsaProfileResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfileResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileResponseOutput) RootDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsGmsaProfileResponse) *string { return v.RootDomainName }).(pulumi.StringPtrOutput)
}

type WindowsGmsaProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (WindowsGmsaProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsGmsaProfileResponse)(nil)).Elem()
}

func (o WindowsGmsaProfileResponsePtrOutput) ToWindowsGmsaProfileResponsePtrOutput() WindowsGmsaProfileResponsePtrOutput {
	return o
}

func (o WindowsGmsaProfileResponsePtrOutput) ToWindowsGmsaProfileResponsePtrOutputWithContext(ctx context.Context) WindowsGmsaProfileResponsePtrOutput {
	return o
}

func (o WindowsGmsaProfileResponsePtrOutput) Elem() WindowsGmsaProfileResponseOutput {
	return o.ApplyT(func(v *WindowsGmsaProfileResponse) WindowsGmsaProfileResponse {
		if v != nil {
			return *v
		}
		var ret WindowsGmsaProfileResponse
		return ret
	}).(WindowsGmsaProfileResponseOutput)
}

// Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileResponsePtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to enable Windows gMSA in the managed cluster.
func (o WindowsGmsaProfileResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfileResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.
func (o WindowsGmsaProfileResponsePtrOutput) RootDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsGmsaProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.RootDomainName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsPtrOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsResponseOutput{})
	pulumi.RegisterOutputType(AgentPoolUpgradeSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultKmsOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultKmsPtrOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultKmsResponseOutput{})
	pulumi.RegisterOutputType(AzureKeyVaultKmsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceLinuxProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceNetworkProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerServiceSshPublicKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(CreationDataOutput{})
	pulumi.RegisterOutputType(CreationDataPtrOutput{})
	pulumi.RegisterOutputType(CreationDataResponseOutput{})
	pulumi.RegisterOutputType(CreationDataResponsePtrOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseOutput{})
	pulumi.RegisterOutputType(CredentialResultResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(KubeletConfigOutput{})
	pulumi.RegisterOutputType(KubeletConfigPtrOutput{})
	pulumi.RegisterOutputType(KubeletConfigResponseOutput{})
	pulumi.RegisterOutputType(KubeletConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LinuxOSConfigOutput{})
	pulumi.RegisterOutputType(LinuxOSConfigPtrOutput{})
	pulumi.RegisterOutputType(LinuxOSConfigResponseOutput{})
	pulumi.RegisterOutputType(LinuxOSConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAADProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAPIServerAccessProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileMapOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileResponseMapOutput{})
	pulumi.RegisterOutputType(ManagedClusterAddonProfileResponseIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAgentPoolProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterAutoUpgradeProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterAutoUpgradeProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterAutoUpgradeProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterAutoUpgradeProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterHTTPProxyConfigOutput{})
	pulumi.RegisterOutputType(ManagedClusterHTTPProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterHTTPProxyConfigResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterHTTPProxyConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedClusterIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileWebAppRoutingOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileWebAppRoutingPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileWebAppRoutingResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterIngressProfileWebAppRoutingResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileManagedOutboundIPsOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileManagedOutboundIPsPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutboundIPPrefixesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutboundIPPrefixesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutboundIPsOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileOutboundIPsPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseManagedOutboundIPsPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutboundIPPrefixesPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutboundIPsOutput{})
	pulumi.RegisterOutputType(ManagedClusterLoadBalancerProfileResponseOutboundIPsPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterManagedOutboundIPProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterManagedOutboundIPProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterManagedOutboundIPProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterManagedOutboundIPProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterNATGatewayProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterNATGatewayProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterNATGatewayProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterNATGatewayProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterOIDCIssuerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterOIDCIssuerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterOIDCIssuerProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterOIDCIssuerProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityExceptionOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityExceptionArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityExceptionResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityExceptionResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProvisioningErrorBodyResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProvisioningErrorBodyResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProvisioningErrorBodyResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProvisioningErrorResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityProvisioningErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedClusterPodIdentityResponseProvisioningInfoOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesAutoScalerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesAutoScalerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesForSnapshotResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponseAutoScalerProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterSKUResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileAzureDefenderOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileAzureDefenderPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileAzureDefenderResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileAzureDefenderResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileWorkloadIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileWorkloadIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterSecurityProfileWorkloadIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterServicePrincipalProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileDiskCSIDriverOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileDiskCSIDriverPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileDiskCSIDriverResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileDiskCSIDriverResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileFileCSIDriverOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileFileCSIDriverPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileFileCSIDriverResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileFileCSIDriverResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileSnapshotControllerOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileSnapshotControllerPtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileSnapshotControllerResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterStorageProfileSnapshotControllerResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfilePtrOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponseOutput{})
	pulumi.RegisterOutputType(ManagedClusterWindowsProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkProfileForSnapshotResponseOutput{})
	pulumi.RegisterOutputType(PowerStateOutput{})
	pulumi.RegisterOutputType(PowerStatePtrOutput{})
	pulumi.RegisterOutputType(PowerStateResponseOutput{})
	pulumi.RegisterOutputType(PowerStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkResourceOutput{})
	pulumi.RegisterOutputType(PrivateLinkResourceArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkResourceResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceOutput{})
	pulumi.RegisterOutputType(ResourceReferenceArrayOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(ResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(SysctlConfigOutput{})
	pulumi.RegisterOutputType(SysctlConfigPtrOutput{})
	pulumi.RegisterOutputType(SysctlConfigResponseOutput{})
	pulumi.RegisterOutputType(SysctlConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TimeInWeekOutput{})
	pulumi.RegisterOutputType(TimeInWeekArrayOutput{})
	pulumi.RegisterOutputType(TimeInWeekResponseOutput{})
	pulumi.RegisterOutputType(TimeInWeekResponseArrayOutput{})
	pulumi.RegisterOutputType(TimeSpanOutput{})
	pulumi.RegisterOutputType(TimeSpanArrayOutput{})
	pulumi.RegisterOutputType(TimeSpanResponseOutput{})
	pulumi.RegisterOutputType(TimeSpanResponseArrayOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityMapOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseOutput{})
	pulumi.RegisterOutputType(UserAssignedIdentityResponseMapOutput{})
	pulumi.RegisterOutputType(WindowsGmsaProfileOutput{})
	pulumi.RegisterOutputType(WindowsGmsaProfilePtrOutput{})
	pulumi.RegisterOutputType(WindowsGmsaProfileResponseOutput{})
	pulumi.RegisterOutputType(WindowsGmsaProfileResponsePtrOutput{})
}
