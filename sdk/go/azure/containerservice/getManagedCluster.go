// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package containerservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Managed cluster.
// API Version: 2021-03-01.
func LookupManagedCluster(ctx *pulumi.Context, args *LookupManagedClusterArgs, opts ...pulumi.InvokeOption) (*LookupManagedClusterResult, error) {
	var rv LookupManagedClusterResult
	err := ctx.Invoke("azure-native:containerservice:getManagedCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupManagedClusterArgs struct {
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName string `pulumi:"resourceName"`
}

// Managed cluster.
type LookupManagedClusterResult struct {
	// Profile of Azure Active Directory configuration.
	AadProfile *ManagedClusterAADProfileResponse `pulumi:"aadProfile"`
	// Profile of managed cluster add-on.
	AddonProfiles map[string]ManagedClusterAddonProfileResponse `pulumi:"addonProfiles"`
	// Properties of the agent pool.
	AgentPoolProfiles []ManagedClusterAgentPoolProfileResponse `pulumi:"agentPoolProfiles"`
	// Access profile for managed cluster API server.
	ApiServerAccessProfile *ManagedClusterAPIServerAccessProfileResponse `pulumi:"apiServerAccessProfile"`
	// Parameters to be applied to the cluster-autoscaler when enabled
	AutoScalerProfile *ManagedClusterPropertiesResponseAutoScalerProfile `pulumi:"autoScalerProfile"`
	// Profile of auto upgrade configuration.
	AutoUpgradeProfile *ManagedClusterAutoUpgradeProfileResponse `pulumi:"autoUpgradeProfile"`
	// FQDN for the master pool which used by proxy config.
	AzurePortalFQDN string `pulumi:"azurePortalFQDN"`
	// If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
	DisableLocalAccounts *bool `pulumi:"disableLocalAccounts"`
	// ResourceId of the disk encryption set to use for enabling encryption at rest.
	DiskEncryptionSetID *string `pulumi:"diskEncryptionSetID"`
	// DNS prefix specified when creating the managed cluster.
	DnsPrefix *string `pulumi:"dnsPrefix"`
	// (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
	EnablePodSecurityPolicy *bool `pulumi:"enablePodSecurityPolicy"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `pulumi:"enableRBAC"`
	// The extended location of the Virtual Machine.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// FQDN for the master pool.
	Fqdn string `pulumi:"fqdn"`
	// FQDN subdomain specified when creating private cluster with custom private dns zone.
	FqdnSubdomain *string `pulumi:"fqdnSubdomain"`
	// Configurations for provisioning the cluster with HTTP proxy servers.
	HttpProxyConfig *ManagedClusterHTTPProxyConfigResponse `pulumi:"httpProxyConfig"`
	// Resource Id
	Id string `pulumi:"id"`
	// The identity of the managed cluster, if configured.
	Identity *ManagedClusterIdentityResponse `pulumi:"identity"`
	// Identities associated with the cluster.
	IdentityProfile map[string]ManagedClusterPropertiesResponseIdentityProfile `pulumi:"identityProfile"`
	// Version of Kubernetes specified when creating the managed cluster.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// Profile for Linux VMs in the container service cluster.
	LinuxProfile *ContainerServiceLinuxProfileResponse `pulumi:"linuxProfile"`
	// Resource location
	Location string `pulumi:"location"`
	// The max number of agent pools for the managed cluster.
	MaxAgentPools int `pulumi:"maxAgentPools"`
	// Resource name
	Name string `pulumi:"name"`
	// Profile of network configuration.
	NetworkProfile *ContainerServiceNetworkProfileResponse `pulumi:"networkProfile"`
	// Name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `pulumi:"nodeResourceGroup"`
	// Profile of managed cluster pod identity.
	PodIdentityProfile *ManagedClusterPodIdentityProfileResponse `pulumi:"podIdentityProfile"`
	// Represents the Power State of the cluster
	PowerState PowerStateResponse `pulumi:"powerState"`
	// FQDN of private cluster.
	PrivateFQDN string `pulumi:"privateFQDN"`
	// Private link resources associated with the cluster.
	PrivateLinkResources []PrivateLinkResourceResponse `pulumi:"privateLinkResources"`
	// The current deployment or provisioning state, which only appears in the response.
	ProvisioningState string `pulumi:"provisioningState"`
	// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
	ServicePrincipalProfile *ManagedClusterServicePrincipalProfileResponse `pulumi:"servicePrincipalProfile"`
	// The managed cluster SKU.
	Sku *ManagedClusterSKUResponse `pulumi:"sku"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
	// Profile for Windows VMs in the container service cluster.
	WindowsProfile *ManagedClusterWindowsProfileResponse `pulumi:"windowsProfile"`
}

// Defaults sets the appropriate defaults for LookupManagedClusterResult
func (val *LookupManagedClusterResult) Defaults() *LookupManagedClusterResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.NetworkProfile = tmp.NetworkProfile.Defaults()

	return &tmp
}

func LookupManagedClusterOutput(ctx *pulumi.Context, args LookupManagedClusterOutputArgs, opts ...pulumi.InvokeOption) LookupManagedClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedClusterResult, error) {
			args := v.(LookupManagedClusterArgs)
			r, err := LookupManagedCluster(ctx, &args, opts...)
			var s LookupManagedClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupManagedClusterResultOutput)
}

type LookupManagedClusterOutputArgs struct {
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the managed cluster resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
}

func (LookupManagedClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedClusterArgs)(nil)).Elem()
}

// Managed cluster.
type LookupManagedClusterResultOutput struct{ *pulumi.OutputState }

func (LookupManagedClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedClusterResult)(nil)).Elem()
}

func (o LookupManagedClusterResultOutput) ToLookupManagedClusterResultOutput() LookupManagedClusterResultOutput {
	return o
}

func (o LookupManagedClusterResultOutput) ToLookupManagedClusterResultOutputWithContext(ctx context.Context) LookupManagedClusterResultOutput {
	return o
}

// Profile of Azure Active Directory configuration.
func (o LookupManagedClusterResultOutput) AadProfile() ManagedClusterAADProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterAADProfileResponse { return v.AadProfile }).(ManagedClusterAADProfileResponsePtrOutput)
}

// Profile of managed cluster add-on.
func (o LookupManagedClusterResultOutput) AddonProfiles() ManagedClusterAddonProfileResponseMapOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) map[string]ManagedClusterAddonProfileResponse {
		return v.AddonProfiles
	}).(ManagedClusterAddonProfileResponseMapOutput)
}

// Properties of the agent pool.
func (o LookupManagedClusterResultOutput) AgentPoolProfiles() ManagedClusterAgentPoolProfileResponseArrayOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) []ManagedClusterAgentPoolProfileResponse {
		return v.AgentPoolProfiles
	}).(ManagedClusterAgentPoolProfileResponseArrayOutput)
}

// Access profile for managed cluster API server.
func (o LookupManagedClusterResultOutput) ApiServerAccessProfile() ManagedClusterAPIServerAccessProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterAPIServerAccessProfileResponse {
		return v.ApiServerAccessProfile
	}).(ManagedClusterAPIServerAccessProfileResponsePtrOutput)
}

// Parameters to be applied to the cluster-autoscaler when enabled
func (o LookupManagedClusterResultOutput) AutoScalerProfile() ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterPropertiesResponseAutoScalerProfile {
		return v.AutoScalerProfile
	}).(ManagedClusterPropertiesResponseAutoScalerProfilePtrOutput)
}

// Profile of auto upgrade configuration.
func (o LookupManagedClusterResultOutput) AutoUpgradeProfile() ManagedClusterAutoUpgradeProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterAutoUpgradeProfileResponse {
		return v.AutoUpgradeProfile
	}).(ManagedClusterAutoUpgradeProfileResponsePtrOutput)
}

// FQDN for the master pool which used by proxy config.
func (o LookupManagedClusterResultOutput) AzurePortalFQDN() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.AzurePortalFQDN }).(pulumi.StringOutput)
}

// If set to true, getting static credential will be disabled for this cluster. Expected to only be used for AAD clusters.
func (o LookupManagedClusterResultOutput) DisableLocalAccounts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *bool { return v.DisableLocalAccounts }).(pulumi.BoolPtrOutput)
}

// ResourceId of the disk encryption set to use for enabling encryption at rest.
func (o LookupManagedClusterResultOutput) DiskEncryptionSetID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *string { return v.DiskEncryptionSetID }).(pulumi.StringPtrOutput)
}

// DNS prefix specified when creating the managed cluster.
func (o LookupManagedClusterResultOutput) DnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *string { return v.DnsPrefix }).(pulumi.StringPtrOutput)
}

// (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
func (o LookupManagedClusterResultOutput) EnablePodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *bool { return v.EnablePodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kubernetes Role-Based Access Control.
func (o LookupManagedClusterResultOutput) EnableRBAC() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *bool { return v.EnableRBAC }).(pulumi.BoolPtrOutput)
}

// The extended location of the Virtual Machine.
func (o LookupManagedClusterResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// FQDN for the master pool.
func (o LookupManagedClusterResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// FQDN subdomain specified when creating private cluster with custom private dns zone.
func (o LookupManagedClusterResultOutput) FqdnSubdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *string { return v.FqdnSubdomain }).(pulumi.StringPtrOutput)
}

// Configurations for provisioning the cluster with HTTP proxy servers.
func (o LookupManagedClusterResultOutput) HttpProxyConfig() ManagedClusterHTTPProxyConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterHTTPProxyConfigResponse { return v.HttpProxyConfig }).(ManagedClusterHTTPProxyConfigResponsePtrOutput)
}

// Resource Id
func (o LookupManagedClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the managed cluster, if configured.
func (o LookupManagedClusterResultOutput) Identity() ManagedClusterIdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterIdentityResponse { return v.Identity }).(ManagedClusterIdentityResponsePtrOutput)
}

// Identities associated with the cluster.
func (o LookupManagedClusterResultOutput) IdentityProfile() ManagedClusterPropertiesResponseIdentityProfileMapOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) map[string]ManagedClusterPropertiesResponseIdentityProfile {
		return v.IdentityProfile
	}).(ManagedClusterPropertiesResponseIdentityProfileMapOutput)
}

// Version of Kubernetes specified when creating the managed cluster.
func (o LookupManagedClusterResultOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// Profile for Linux VMs in the container service cluster.
func (o LookupManagedClusterResultOutput) LinuxProfile() ContainerServiceLinuxProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ContainerServiceLinuxProfileResponse { return v.LinuxProfile }).(ContainerServiceLinuxProfileResponsePtrOutput)
}

// Resource location
func (o LookupManagedClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

// The max number of agent pools for the managed cluster.
func (o LookupManagedClusterResultOutput) MaxAgentPools() pulumi.IntOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) int { return v.MaxAgentPools }).(pulumi.IntOutput)
}

// Resource name
func (o LookupManagedClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

// Profile of network configuration.
func (o LookupManagedClusterResultOutput) NetworkProfile() ContainerServiceNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ContainerServiceNetworkProfileResponse { return v.NetworkProfile }).(ContainerServiceNetworkProfileResponsePtrOutput)
}

// Name of the resource group containing agent pool nodes.
func (o LookupManagedClusterResultOutput) NodeResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *string { return v.NodeResourceGroup }).(pulumi.StringPtrOutput)
}

// Profile of managed cluster pod identity.
func (o LookupManagedClusterResultOutput) PodIdentityProfile() ManagedClusterPodIdentityProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterPodIdentityProfileResponse {
		return v.PodIdentityProfile
	}).(ManagedClusterPodIdentityProfileResponsePtrOutput)
}

// Represents the Power State of the cluster
func (o LookupManagedClusterResultOutput) PowerState() PowerStateResponseOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) PowerStateResponse { return v.PowerState }).(PowerStateResponseOutput)
}

// FQDN of private cluster.
func (o LookupManagedClusterResultOutput) PrivateFQDN() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.PrivateFQDN }).(pulumi.StringOutput)
}

// Private link resources associated with the cluster.
func (o LookupManagedClusterResultOutput) PrivateLinkResources() PrivateLinkResourceResponseArrayOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) []PrivateLinkResourceResponse { return v.PrivateLinkResources }).(PrivateLinkResourceResponseArrayOutput)
}

// The current deployment or provisioning state, which only appears in the response.
func (o LookupManagedClusterResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Information about a service principal identity for the cluster to use for manipulating Azure APIs.
func (o LookupManagedClusterResultOutput) ServicePrincipalProfile() ManagedClusterServicePrincipalProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterServicePrincipalProfileResponse {
		return v.ServicePrincipalProfile
	}).(ManagedClusterServicePrincipalProfileResponsePtrOutput)
}

// The managed cluster SKU.
func (o LookupManagedClusterResultOutput) Sku() ManagedClusterSKUResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterSKUResponse { return v.Sku }).(ManagedClusterSKUResponsePtrOutput)
}

// Resource tags
func (o LookupManagedClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o LookupManagedClusterResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) string { return v.Type }).(pulumi.StringOutput)
}

// Profile for Windows VMs in the container service cluster.
func (o LookupManagedClusterResultOutput) WindowsProfile() ManagedClusterWindowsProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupManagedClusterResult) *ManagedClusterWindowsProfileResponse { return v.WindowsProfile }).(ManagedClusterWindowsProfileResponsePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedClusterResultOutput{})
}
