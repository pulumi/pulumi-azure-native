// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurations struct {
	// Enable or disable R services (SQL 2016 onwards).
	IsRServicesEnabled *bool `pulumi:"isRServicesEnabled"`
}

// AdditionalFeaturesServerConfigurationsInput is an input type that accepts AdditionalFeaturesServerConfigurationsArgs and AdditionalFeaturesServerConfigurationsOutput values.
// You can construct a concrete instance of `AdditionalFeaturesServerConfigurationsInput` via:
//
//          AdditionalFeaturesServerConfigurationsArgs{...}
type AdditionalFeaturesServerConfigurationsInput interface {
	pulumi.Input

	ToAdditionalFeaturesServerConfigurationsOutput() AdditionalFeaturesServerConfigurationsOutput
	ToAdditionalFeaturesServerConfigurationsOutputWithContext(context.Context) AdditionalFeaturesServerConfigurationsOutput
}

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurationsArgs struct {
	// Enable or disable R services (SQL 2016 onwards).
	IsRServicesEnabled pulumi.BoolPtrInput `pulumi:"isRServicesEnabled"`
}

func (AdditionalFeaturesServerConfigurationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalFeaturesServerConfigurations)(nil)).Elem()
}

func (i AdditionalFeaturesServerConfigurationsArgs) ToAdditionalFeaturesServerConfigurationsOutput() AdditionalFeaturesServerConfigurationsOutput {
	return i.ToAdditionalFeaturesServerConfigurationsOutputWithContext(context.Background())
}

func (i AdditionalFeaturesServerConfigurationsArgs) ToAdditionalFeaturesServerConfigurationsOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsOutput)
}

func (i AdditionalFeaturesServerConfigurationsArgs) ToAdditionalFeaturesServerConfigurationsPtrOutput() AdditionalFeaturesServerConfigurationsPtrOutput {
	return i.ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(context.Background())
}

func (i AdditionalFeaturesServerConfigurationsArgs) ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsOutput).ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(ctx)
}

// AdditionalFeaturesServerConfigurationsPtrInput is an input type that accepts AdditionalFeaturesServerConfigurationsArgs, AdditionalFeaturesServerConfigurationsPtr and AdditionalFeaturesServerConfigurationsPtrOutput values.
// You can construct a concrete instance of `AdditionalFeaturesServerConfigurationsPtrInput` via:
//
//          AdditionalFeaturesServerConfigurationsArgs{...}
//
//  or:
//
//          nil
type AdditionalFeaturesServerConfigurationsPtrInput interface {
	pulumi.Input

	ToAdditionalFeaturesServerConfigurationsPtrOutput() AdditionalFeaturesServerConfigurationsPtrOutput
	ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(context.Context) AdditionalFeaturesServerConfigurationsPtrOutput
}

type additionalFeaturesServerConfigurationsPtrType AdditionalFeaturesServerConfigurationsArgs

func AdditionalFeaturesServerConfigurationsPtr(v *AdditionalFeaturesServerConfigurationsArgs) AdditionalFeaturesServerConfigurationsPtrInput {
	return (*additionalFeaturesServerConfigurationsPtrType)(v)
}

func (*additionalFeaturesServerConfigurationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalFeaturesServerConfigurations)(nil)).Elem()
}

func (i *additionalFeaturesServerConfigurationsPtrType) ToAdditionalFeaturesServerConfigurationsPtrOutput() AdditionalFeaturesServerConfigurationsPtrOutput {
	return i.ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(context.Background())
}

func (i *additionalFeaturesServerConfigurationsPtrType) ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsPtrOutput)
}

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurationsOutput struct{ *pulumi.OutputState }

func (AdditionalFeaturesServerConfigurationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalFeaturesServerConfigurations)(nil)).Elem()
}

func (o AdditionalFeaturesServerConfigurationsOutput) ToAdditionalFeaturesServerConfigurationsOutput() AdditionalFeaturesServerConfigurationsOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsOutput) ToAdditionalFeaturesServerConfigurationsOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsOutput) ToAdditionalFeaturesServerConfigurationsPtrOutput() AdditionalFeaturesServerConfigurationsPtrOutput {
	return o.ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(context.Background())
}

func (o AdditionalFeaturesServerConfigurationsOutput) ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsPtrOutput {
	return o.ApplyT(func(v AdditionalFeaturesServerConfigurations) *AdditionalFeaturesServerConfigurations {
		return &v
	}).(AdditionalFeaturesServerConfigurationsPtrOutput)
}

// Enable or disable R services (SQL 2016 onwards).
func (o AdditionalFeaturesServerConfigurationsOutput) IsRServicesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdditionalFeaturesServerConfigurations) *bool { return v.IsRServicesEnabled }).(pulumi.BoolPtrOutput)
}

type AdditionalFeaturesServerConfigurationsPtrOutput struct{ *pulumi.OutputState }

func (AdditionalFeaturesServerConfigurationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalFeaturesServerConfigurations)(nil)).Elem()
}

func (o AdditionalFeaturesServerConfigurationsPtrOutput) ToAdditionalFeaturesServerConfigurationsPtrOutput() AdditionalFeaturesServerConfigurationsPtrOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsPtrOutput) ToAdditionalFeaturesServerConfigurationsPtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsPtrOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsPtrOutput) Elem() AdditionalFeaturesServerConfigurationsOutput {
	return o.ApplyT(func(v *AdditionalFeaturesServerConfigurations) AdditionalFeaturesServerConfigurations { return *v }).(AdditionalFeaturesServerConfigurationsOutput)
}

// Enable or disable R services (SQL 2016 onwards).
func (o AdditionalFeaturesServerConfigurationsPtrOutput) IsRServicesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdditionalFeaturesServerConfigurations) *bool {
		if v == nil {
			return nil
		}
		return v.IsRServicesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurationsResponse struct {
	// Enable or disable R services (SQL 2016 onwards).
	IsRServicesEnabled *bool `pulumi:"isRServicesEnabled"`
}

// AdditionalFeaturesServerConfigurationsResponseInput is an input type that accepts AdditionalFeaturesServerConfigurationsResponseArgs and AdditionalFeaturesServerConfigurationsResponseOutput values.
// You can construct a concrete instance of `AdditionalFeaturesServerConfigurationsResponseInput` via:
//
//          AdditionalFeaturesServerConfigurationsResponseArgs{...}
type AdditionalFeaturesServerConfigurationsResponseInput interface {
	pulumi.Input

	ToAdditionalFeaturesServerConfigurationsResponseOutput() AdditionalFeaturesServerConfigurationsResponseOutput
	ToAdditionalFeaturesServerConfigurationsResponseOutputWithContext(context.Context) AdditionalFeaturesServerConfigurationsResponseOutput
}

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurationsResponseArgs struct {
	// Enable or disable R services (SQL 2016 onwards).
	IsRServicesEnabled pulumi.BoolPtrInput `pulumi:"isRServicesEnabled"`
}

func (AdditionalFeaturesServerConfigurationsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalFeaturesServerConfigurationsResponse)(nil)).Elem()
}

func (i AdditionalFeaturesServerConfigurationsResponseArgs) ToAdditionalFeaturesServerConfigurationsResponseOutput() AdditionalFeaturesServerConfigurationsResponseOutput {
	return i.ToAdditionalFeaturesServerConfigurationsResponseOutputWithContext(context.Background())
}

func (i AdditionalFeaturesServerConfigurationsResponseArgs) ToAdditionalFeaturesServerConfigurationsResponseOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsResponseOutput)
}

func (i AdditionalFeaturesServerConfigurationsResponseArgs) ToAdditionalFeaturesServerConfigurationsResponsePtrOutput() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return i.ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(context.Background())
}

func (i AdditionalFeaturesServerConfigurationsResponseArgs) ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsResponseOutput).ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(ctx)
}

// AdditionalFeaturesServerConfigurationsResponsePtrInput is an input type that accepts AdditionalFeaturesServerConfigurationsResponseArgs, AdditionalFeaturesServerConfigurationsResponsePtr and AdditionalFeaturesServerConfigurationsResponsePtrOutput values.
// You can construct a concrete instance of `AdditionalFeaturesServerConfigurationsResponsePtrInput` via:
//
//          AdditionalFeaturesServerConfigurationsResponseArgs{...}
//
//  or:
//
//          nil
type AdditionalFeaturesServerConfigurationsResponsePtrInput interface {
	pulumi.Input

	ToAdditionalFeaturesServerConfigurationsResponsePtrOutput() AdditionalFeaturesServerConfigurationsResponsePtrOutput
	ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(context.Context) AdditionalFeaturesServerConfigurationsResponsePtrOutput
}

type additionalFeaturesServerConfigurationsResponsePtrType AdditionalFeaturesServerConfigurationsResponseArgs

func AdditionalFeaturesServerConfigurationsResponsePtr(v *AdditionalFeaturesServerConfigurationsResponseArgs) AdditionalFeaturesServerConfigurationsResponsePtrInput {
	return (*additionalFeaturesServerConfigurationsResponsePtrType)(v)
}

func (*additionalFeaturesServerConfigurationsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalFeaturesServerConfigurationsResponse)(nil)).Elem()
}

func (i *additionalFeaturesServerConfigurationsResponsePtrType) ToAdditionalFeaturesServerConfigurationsResponsePtrOutput() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return i.ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(context.Background())
}

func (i *additionalFeaturesServerConfigurationsResponsePtrType) ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdditionalFeaturesServerConfigurationsResponsePtrOutput)
}

// Additional SQL Server feature settings.
type AdditionalFeaturesServerConfigurationsResponseOutput struct{ *pulumi.OutputState }

func (AdditionalFeaturesServerConfigurationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdditionalFeaturesServerConfigurationsResponse)(nil)).Elem()
}

func (o AdditionalFeaturesServerConfigurationsResponseOutput) ToAdditionalFeaturesServerConfigurationsResponseOutput() AdditionalFeaturesServerConfigurationsResponseOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsResponseOutput) ToAdditionalFeaturesServerConfigurationsResponseOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponseOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsResponseOutput) ToAdditionalFeaturesServerConfigurationsResponsePtrOutput() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o.ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(context.Background())
}

func (o AdditionalFeaturesServerConfigurationsResponseOutput) ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o.ApplyT(func(v AdditionalFeaturesServerConfigurationsResponse) *AdditionalFeaturesServerConfigurationsResponse {
		return &v
	}).(AdditionalFeaturesServerConfigurationsResponsePtrOutput)
}

// Enable or disable R services (SQL 2016 onwards).
func (o AdditionalFeaturesServerConfigurationsResponseOutput) IsRServicesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AdditionalFeaturesServerConfigurationsResponse) *bool { return v.IsRServicesEnabled }).(pulumi.BoolPtrOutput)
}

type AdditionalFeaturesServerConfigurationsResponsePtrOutput struct{ *pulumi.OutputState }

func (AdditionalFeaturesServerConfigurationsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdditionalFeaturesServerConfigurationsResponse)(nil)).Elem()
}

func (o AdditionalFeaturesServerConfigurationsResponsePtrOutput) ToAdditionalFeaturesServerConfigurationsResponsePtrOutput() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsResponsePtrOutput) ToAdditionalFeaturesServerConfigurationsResponsePtrOutputWithContext(ctx context.Context) AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o
}

func (o AdditionalFeaturesServerConfigurationsResponsePtrOutput) Elem() AdditionalFeaturesServerConfigurationsResponseOutput {
	return o.ApplyT(func(v *AdditionalFeaturesServerConfigurationsResponse) AdditionalFeaturesServerConfigurationsResponse {
		return *v
	}).(AdditionalFeaturesServerConfigurationsResponseOutput)
}

// Enable or disable R services (SQL 2016 onwards).
func (o AdditionalFeaturesServerConfigurationsResponsePtrOutput) IsRServicesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AdditionalFeaturesServerConfigurationsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsRServicesEnabled
	}).(pulumi.BoolPtrOutput)
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettings struct {
	// Backup schedule type.
	BackupScheduleType *string `pulumi:"backupScheduleType"`
	// Include or exclude system databases from auto backup.
	BackupSystemDbs *bool `pulumi:"backupSystemDbs"`
	// Enable or disable autobackup on SQL virtual machine.
	Enable *bool `pulumi:"enable"`
	// Enable or disable encryption for backup on SQL virtual machine.
	EnableEncryption *bool `pulumi:"enableEncryption"`
	// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
	FullBackupFrequency *string `pulumi:"fullBackupFrequency"`
	// Start time of a given day during which full backups can take place. 0-23 hours.
	FullBackupStartTime *int `pulumi:"fullBackupStartTime"`
	// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
	FullBackupWindowHours *int `pulumi:"fullBackupWindowHours"`
	// Frequency of log backups. 5-60 minutes.
	LogBackupFrequency *int `pulumi:"logBackupFrequency"`
	// Password for encryption on backup.
	Password *string `pulumi:"password"`
	// Retention period of backup: 1-30 days.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// Storage account key where backup will be taken to.
	StorageAccessKey *string `pulumi:"storageAccessKey"`
	// Storage account url where backup will be taken to.
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
}

// AutoBackupSettingsInput is an input type that accepts AutoBackupSettingsArgs and AutoBackupSettingsOutput values.
// You can construct a concrete instance of `AutoBackupSettingsInput` via:
//
//          AutoBackupSettingsArgs{...}
type AutoBackupSettingsInput interface {
	pulumi.Input

	ToAutoBackupSettingsOutput() AutoBackupSettingsOutput
	ToAutoBackupSettingsOutputWithContext(context.Context) AutoBackupSettingsOutput
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettingsArgs struct {
	// Backup schedule type.
	BackupScheduleType pulumi.StringPtrInput `pulumi:"backupScheduleType"`
	// Include or exclude system databases from auto backup.
	BackupSystemDbs pulumi.BoolPtrInput `pulumi:"backupSystemDbs"`
	// Enable or disable autobackup on SQL virtual machine.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Enable or disable encryption for backup on SQL virtual machine.
	EnableEncryption pulumi.BoolPtrInput `pulumi:"enableEncryption"`
	// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
	FullBackupFrequency pulumi.StringPtrInput `pulumi:"fullBackupFrequency"`
	// Start time of a given day during which full backups can take place. 0-23 hours.
	FullBackupStartTime pulumi.IntPtrInput `pulumi:"fullBackupStartTime"`
	// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
	FullBackupWindowHours pulumi.IntPtrInput `pulumi:"fullBackupWindowHours"`
	// Frequency of log backups. 5-60 minutes.
	LogBackupFrequency pulumi.IntPtrInput `pulumi:"logBackupFrequency"`
	// Password for encryption on backup.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Retention period of backup: 1-30 days.
	RetentionPeriod pulumi.IntPtrInput `pulumi:"retentionPeriod"`
	// Storage account key where backup will be taken to.
	StorageAccessKey pulumi.StringPtrInput `pulumi:"storageAccessKey"`
	// Storage account url where backup will be taken to.
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
}

func (AutoBackupSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoBackupSettings)(nil)).Elem()
}

func (i AutoBackupSettingsArgs) ToAutoBackupSettingsOutput() AutoBackupSettingsOutput {
	return i.ToAutoBackupSettingsOutputWithContext(context.Background())
}

func (i AutoBackupSettingsArgs) ToAutoBackupSettingsOutputWithContext(ctx context.Context) AutoBackupSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsOutput)
}

func (i AutoBackupSettingsArgs) ToAutoBackupSettingsPtrOutput() AutoBackupSettingsPtrOutput {
	return i.ToAutoBackupSettingsPtrOutputWithContext(context.Background())
}

func (i AutoBackupSettingsArgs) ToAutoBackupSettingsPtrOutputWithContext(ctx context.Context) AutoBackupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsOutput).ToAutoBackupSettingsPtrOutputWithContext(ctx)
}

// AutoBackupSettingsPtrInput is an input type that accepts AutoBackupSettingsArgs, AutoBackupSettingsPtr and AutoBackupSettingsPtrOutput values.
// You can construct a concrete instance of `AutoBackupSettingsPtrInput` via:
//
//          AutoBackupSettingsArgs{...}
//
//  or:
//
//          nil
type AutoBackupSettingsPtrInput interface {
	pulumi.Input

	ToAutoBackupSettingsPtrOutput() AutoBackupSettingsPtrOutput
	ToAutoBackupSettingsPtrOutputWithContext(context.Context) AutoBackupSettingsPtrOutput
}

type autoBackupSettingsPtrType AutoBackupSettingsArgs

func AutoBackupSettingsPtr(v *AutoBackupSettingsArgs) AutoBackupSettingsPtrInput {
	return (*autoBackupSettingsPtrType)(v)
}

func (*autoBackupSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoBackupSettings)(nil)).Elem()
}

func (i *autoBackupSettingsPtrType) ToAutoBackupSettingsPtrOutput() AutoBackupSettingsPtrOutput {
	return i.ToAutoBackupSettingsPtrOutputWithContext(context.Background())
}

func (i *autoBackupSettingsPtrType) ToAutoBackupSettingsPtrOutputWithContext(ctx context.Context) AutoBackupSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsPtrOutput)
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettingsOutput struct{ *pulumi.OutputState }

func (AutoBackupSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoBackupSettings)(nil)).Elem()
}

func (o AutoBackupSettingsOutput) ToAutoBackupSettingsOutput() AutoBackupSettingsOutput {
	return o
}

func (o AutoBackupSettingsOutput) ToAutoBackupSettingsOutputWithContext(ctx context.Context) AutoBackupSettingsOutput {
	return o
}

func (o AutoBackupSettingsOutput) ToAutoBackupSettingsPtrOutput() AutoBackupSettingsPtrOutput {
	return o.ToAutoBackupSettingsPtrOutputWithContext(context.Background())
}

func (o AutoBackupSettingsOutput) ToAutoBackupSettingsPtrOutputWithContext(ctx context.Context) AutoBackupSettingsPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *AutoBackupSettings {
		return &v
	}).(AutoBackupSettingsPtrOutput)
}

// Backup schedule type.
func (o AutoBackupSettingsOutput) BackupScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *string { return v.BackupScheduleType }).(pulumi.StringPtrOutput)
}

// Include or exclude system databases from auto backup.
func (o AutoBackupSettingsOutput) BackupSystemDbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *bool { return v.BackupSystemDbs }).(pulumi.BoolPtrOutput)
}

// Enable or disable autobackup on SQL virtual machine.
func (o AutoBackupSettingsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Enable or disable encryption for backup on SQL virtual machine.
func (o AutoBackupSettingsOutput) EnableEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *bool { return v.EnableEncryption }).(pulumi.BoolPtrOutput)
}

// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
func (o AutoBackupSettingsOutput) FullBackupFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *string { return v.FullBackupFrequency }).(pulumi.StringPtrOutput)
}

// Start time of a given day during which full backups can take place. 0-23 hours.
func (o AutoBackupSettingsOutput) FullBackupStartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *int { return v.FullBackupStartTime }).(pulumi.IntPtrOutput)
}

// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
func (o AutoBackupSettingsOutput) FullBackupWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *int { return v.FullBackupWindowHours }).(pulumi.IntPtrOutput)
}

// Frequency of log backups. 5-60 minutes.
func (o AutoBackupSettingsOutput) LogBackupFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *int { return v.LogBackupFrequency }).(pulumi.IntPtrOutput)
}

// Password for encryption on backup.
func (o AutoBackupSettingsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Retention period of backup: 1-30 days.
func (o AutoBackupSettingsOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *int { return v.RetentionPeriod }).(pulumi.IntPtrOutput)
}

// Storage account key where backup will be taken to.
func (o AutoBackupSettingsOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *string { return v.StorageAccessKey }).(pulumi.StringPtrOutput)
}

// Storage account url where backup will be taken to.
func (o AutoBackupSettingsOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettings) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

type AutoBackupSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoBackupSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoBackupSettings)(nil)).Elem()
}

func (o AutoBackupSettingsPtrOutput) ToAutoBackupSettingsPtrOutput() AutoBackupSettingsPtrOutput {
	return o
}

func (o AutoBackupSettingsPtrOutput) ToAutoBackupSettingsPtrOutputWithContext(ctx context.Context) AutoBackupSettingsPtrOutput {
	return o
}

func (o AutoBackupSettingsPtrOutput) Elem() AutoBackupSettingsOutput {
	return o.ApplyT(func(v *AutoBackupSettings) AutoBackupSettings { return *v }).(AutoBackupSettingsOutput)
}

// Backup schedule type.
func (o AutoBackupSettingsPtrOutput) BackupScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *string {
		if v == nil {
			return nil
		}
		return v.BackupScheduleType
	}).(pulumi.StringPtrOutput)
}

// Include or exclude system databases from auto backup.
func (o AutoBackupSettingsPtrOutput) BackupSystemDbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *bool {
		if v == nil {
			return nil
		}
		return v.BackupSystemDbs
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable autobackup on SQL virtual machine.
func (o AutoBackupSettingsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable encryption for backup on SQL virtual machine.
func (o AutoBackupSettingsPtrOutput) EnableEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEncryption
	}).(pulumi.BoolPtrOutput)
}

// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
func (o AutoBackupSettingsPtrOutput) FullBackupFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *string {
		if v == nil {
			return nil
		}
		return v.FullBackupFrequency
	}).(pulumi.StringPtrOutput)
}

// Start time of a given day during which full backups can take place. 0-23 hours.
func (o AutoBackupSettingsPtrOutput) FullBackupStartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupStartTime
	}).(pulumi.IntPtrOutput)
}

// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
func (o AutoBackupSettingsPtrOutput) FullBackupWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupWindowHours
	}).(pulumi.IntPtrOutput)
}

// Frequency of log backups. 5-60 minutes.
func (o AutoBackupSettingsPtrOutput) LogBackupFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *int {
		if v == nil {
			return nil
		}
		return v.LogBackupFrequency
	}).(pulumi.IntPtrOutput)
}

// Password for encryption on backup.
func (o AutoBackupSettingsPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Retention period of backup: 1-30 days.
func (o AutoBackupSettingsPtrOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.IntPtrOutput)
}

// Storage account key where backup will be taken to.
func (o AutoBackupSettingsPtrOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccessKey
	}).(pulumi.StringPtrOutput)
}

// Storage account url where backup will be taken to.
func (o AutoBackupSettingsPtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettings) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettingsResponse struct {
	// Backup schedule type.
	BackupScheduleType *string `pulumi:"backupScheduleType"`
	// Include or exclude system databases from auto backup.
	BackupSystemDbs *bool `pulumi:"backupSystemDbs"`
	// Enable or disable autobackup on SQL virtual machine.
	Enable *bool `pulumi:"enable"`
	// Enable or disable encryption for backup on SQL virtual machine.
	EnableEncryption *bool `pulumi:"enableEncryption"`
	// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
	FullBackupFrequency *string `pulumi:"fullBackupFrequency"`
	// Start time of a given day during which full backups can take place. 0-23 hours.
	FullBackupStartTime *int `pulumi:"fullBackupStartTime"`
	// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
	FullBackupWindowHours *int `pulumi:"fullBackupWindowHours"`
	// Frequency of log backups. 5-60 minutes.
	LogBackupFrequency *int `pulumi:"logBackupFrequency"`
	// Password for encryption on backup.
	Password *string `pulumi:"password"`
	// Retention period of backup: 1-30 days.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// Storage account key where backup will be taken to.
	StorageAccessKey *string `pulumi:"storageAccessKey"`
	// Storage account url where backup will be taken to.
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
}

// AutoBackupSettingsResponseInput is an input type that accepts AutoBackupSettingsResponseArgs and AutoBackupSettingsResponseOutput values.
// You can construct a concrete instance of `AutoBackupSettingsResponseInput` via:
//
//          AutoBackupSettingsResponseArgs{...}
type AutoBackupSettingsResponseInput interface {
	pulumi.Input

	ToAutoBackupSettingsResponseOutput() AutoBackupSettingsResponseOutput
	ToAutoBackupSettingsResponseOutputWithContext(context.Context) AutoBackupSettingsResponseOutput
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettingsResponseArgs struct {
	// Backup schedule type.
	BackupScheduleType pulumi.StringPtrInput `pulumi:"backupScheduleType"`
	// Include or exclude system databases from auto backup.
	BackupSystemDbs pulumi.BoolPtrInput `pulumi:"backupSystemDbs"`
	// Enable or disable autobackup on SQL virtual machine.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Enable or disable encryption for backup on SQL virtual machine.
	EnableEncryption pulumi.BoolPtrInput `pulumi:"enableEncryption"`
	// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
	FullBackupFrequency pulumi.StringPtrInput `pulumi:"fullBackupFrequency"`
	// Start time of a given day during which full backups can take place. 0-23 hours.
	FullBackupStartTime pulumi.IntPtrInput `pulumi:"fullBackupStartTime"`
	// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
	FullBackupWindowHours pulumi.IntPtrInput `pulumi:"fullBackupWindowHours"`
	// Frequency of log backups. 5-60 minutes.
	LogBackupFrequency pulumi.IntPtrInput `pulumi:"logBackupFrequency"`
	// Password for encryption on backup.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Retention period of backup: 1-30 days.
	RetentionPeriod pulumi.IntPtrInput `pulumi:"retentionPeriod"`
	// Storage account key where backup will be taken to.
	StorageAccessKey pulumi.StringPtrInput `pulumi:"storageAccessKey"`
	// Storage account url where backup will be taken to.
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
}

func (AutoBackupSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoBackupSettingsResponse)(nil)).Elem()
}

func (i AutoBackupSettingsResponseArgs) ToAutoBackupSettingsResponseOutput() AutoBackupSettingsResponseOutput {
	return i.ToAutoBackupSettingsResponseOutputWithContext(context.Background())
}

func (i AutoBackupSettingsResponseArgs) ToAutoBackupSettingsResponseOutputWithContext(ctx context.Context) AutoBackupSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsResponseOutput)
}

func (i AutoBackupSettingsResponseArgs) ToAutoBackupSettingsResponsePtrOutput() AutoBackupSettingsResponsePtrOutput {
	return i.ToAutoBackupSettingsResponsePtrOutputWithContext(context.Background())
}

func (i AutoBackupSettingsResponseArgs) ToAutoBackupSettingsResponsePtrOutputWithContext(ctx context.Context) AutoBackupSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsResponseOutput).ToAutoBackupSettingsResponsePtrOutputWithContext(ctx)
}

// AutoBackupSettingsResponsePtrInput is an input type that accepts AutoBackupSettingsResponseArgs, AutoBackupSettingsResponsePtr and AutoBackupSettingsResponsePtrOutput values.
// You can construct a concrete instance of `AutoBackupSettingsResponsePtrInput` via:
//
//          AutoBackupSettingsResponseArgs{...}
//
//  or:
//
//          nil
type AutoBackupSettingsResponsePtrInput interface {
	pulumi.Input

	ToAutoBackupSettingsResponsePtrOutput() AutoBackupSettingsResponsePtrOutput
	ToAutoBackupSettingsResponsePtrOutputWithContext(context.Context) AutoBackupSettingsResponsePtrOutput
}

type autoBackupSettingsResponsePtrType AutoBackupSettingsResponseArgs

func AutoBackupSettingsResponsePtr(v *AutoBackupSettingsResponseArgs) AutoBackupSettingsResponsePtrInput {
	return (*autoBackupSettingsResponsePtrType)(v)
}

func (*autoBackupSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoBackupSettingsResponse)(nil)).Elem()
}

func (i *autoBackupSettingsResponsePtrType) ToAutoBackupSettingsResponsePtrOutput() AutoBackupSettingsResponsePtrOutput {
	return i.ToAutoBackupSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *autoBackupSettingsResponsePtrType) ToAutoBackupSettingsResponsePtrOutputWithContext(ctx context.Context) AutoBackupSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoBackupSettingsResponsePtrOutput)
}

// Configure backups for databases in your SQL virtual machine.
type AutoBackupSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoBackupSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoBackupSettingsResponse)(nil)).Elem()
}

func (o AutoBackupSettingsResponseOutput) ToAutoBackupSettingsResponseOutput() AutoBackupSettingsResponseOutput {
	return o
}

func (o AutoBackupSettingsResponseOutput) ToAutoBackupSettingsResponseOutputWithContext(ctx context.Context) AutoBackupSettingsResponseOutput {
	return o
}

func (o AutoBackupSettingsResponseOutput) ToAutoBackupSettingsResponsePtrOutput() AutoBackupSettingsResponsePtrOutput {
	return o.ToAutoBackupSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AutoBackupSettingsResponseOutput) ToAutoBackupSettingsResponsePtrOutputWithContext(ctx context.Context) AutoBackupSettingsResponsePtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *AutoBackupSettingsResponse {
		return &v
	}).(AutoBackupSettingsResponsePtrOutput)
}

// Backup schedule type.
func (o AutoBackupSettingsResponseOutput) BackupScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *string { return v.BackupScheduleType }).(pulumi.StringPtrOutput)
}

// Include or exclude system databases from auto backup.
func (o AutoBackupSettingsResponseOutput) BackupSystemDbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *bool { return v.BackupSystemDbs }).(pulumi.BoolPtrOutput)
}

// Enable or disable autobackup on SQL virtual machine.
func (o AutoBackupSettingsResponseOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Enable or disable encryption for backup on SQL virtual machine.
func (o AutoBackupSettingsResponseOutput) EnableEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *bool { return v.EnableEncryption }).(pulumi.BoolPtrOutput)
}

// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
func (o AutoBackupSettingsResponseOutput) FullBackupFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *string { return v.FullBackupFrequency }).(pulumi.StringPtrOutput)
}

// Start time of a given day during which full backups can take place. 0-23 hours.
func (o AutoBackupSettingsResponseOutput) FullBackupStartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *int { return v.FullBackupStartTime }).(pulumi.IntPtrOutput)
}

// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
func (o AutoBackupSettingsResponseOutput) FullBackupWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *int { return v.FullBackupWindowHours }).(pulumi.IntPtrOutput)
}

// Frequency of log backups. 5-60 minutes.
func (o AutoBackupSettingsResponseOutput) LogBackupFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *int { return v.LogBackupFrequency }).(pulumi.IntPtrOutput)
}

// Password for encryption on backup.
func (o AutoBackupSettingsResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Retention period of backup: 1-30 days.
func (o AutoBackupSettingsResponseOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *int { return v.RetentionPeriod }).(pulumi.IntPtrOutput)
}

// Storage account key where backup will be taken to.
func (o AutoBackupSettingsResponseOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *string { return v.StorageAccessKey }).(pulumi.StringPtrOutput)
}

// Storage account url where backup will be taken to.
func (o AutoBackupSettingsResponseOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoBackupSettingsResponse) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

type AutoBackupSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoBackupSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoBackupSettingsResponse)(nil)).Elem()
}

func (o AutoBackupSettingsResponsePtrOutput) ToAutoBackupSettingsResponsePtrOutput() AutoBackupSettingsResponsePtrOutput {
	return o
}

func (o AutoBackupSettingsResponsePtrOutput) ToAutoBackupSettingsResponsePtrOutputWithContext(ctx context.Context) AutoBackupSettingsResponsePtrOutput {
	return o
}

func (o AutoBackupSettingsResponsePtrOutput) Elem() AutoBackupSettingsResponseOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) AutoBackupSettingsResponse { return *v }).(AutoBackupSettingsResponseOutput)
}

// Backup schedule type.
func (o AutoBackupSettingsResponsePtrOutput) BackupScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BackupScheduleType
	}).(pulumi.StringPtrOutput)
}

// Include or exclude system databases from auto backup.
func (o AutoBackupSettingsResponsePtrOutput) BackupSystemDbs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.BackupSystemDbs
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable autobackup on SQL virtual machine.
func (o AutoBackupSettingsResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Enable or disable encryption for backup on SQL virtual machine.
func (o AutoBackupSettingsResponsePtrOutput) EnableEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEncryption
	}).(pulumi.BoolPtrOutput)
}

// Frequency of full backups. In both cases, full backups begin during the next scheduled time window.
func (o AutoBackupSettingsResponsePtrOutput) FullBackupFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.FullBackupFrequency
	}).(pulumi.StringPtrOutput)
}

// Start time of a given day during which full backups can take place. 0-23 hours.
func (o AutoBackupSettingsResponsePtrOutput) FullBackupStartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupStartTime
	}).(pulumi.IntPtrOutput)
}

// Duration of the time window of a given day during which full backups can take place. 1-23 hours.
func (o AutoBackupSettingsResponsePtrOutput) FullBackupWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FullBackupWindowHours
	}).(pulumi.IntPtrOutput)
}

// Frequency of log backups. 5-60 minutes.
func (o AutoBackupSettingsResponsePtrOutput) LogBackupFrequency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.LogBackupFrequency
	}).(pulumi.IntPtrOutput)
}

// Password for encryption on backup.
func (o AutoBackupSettingsResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Retention period of backup: 1-30 days.
func (o AutoBackupSettingsResponsePtrOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionPeriod
	}).(pulumi.IntPtrOutput)
}

// Storage account key where backup will be taken to.
func (o AutoBackupSettingsResponsePtrOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccessKey
	}).(pulumi.StringPtrOutput)
}

// Storage account url where backup will be taken to.
func (o AutoBackupSettingsResponsePtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoBackupSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettings struct {
	// Day of week to apply the patch on.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// Enable or disable autopatching on SQL virtual machine.
	Enable *bool `pulumi:"enable"`
	// Duration of patching.
	MaintenanceWindowDuration *int `pulumi:"maintenanceWindowDuration"`
	// Hour of the day when patching is initiated. Local VM time.
	MaintenanceWindowStartingHour *int `pulumi:"maintenanceWindowStartingHour"`
}

// AutoPatchingSettingsInput is an input type that accepts AutoPatchingSettingsArgs and AutoPatchingSettingsOutput values.
// You can construct a concrete instance of `AutoPatchingSettingsInput` via:
//
//          AutoPatchingSettingsArgs{...}
type AutoPatchingSettingsInput interface {
	pulumi.Input

	ToAutoPatchingSettingsOutput() AutoPatchingSettingsOutput
	ToAutoPatchingSettingsOutputWithContext(context.Context) AutoPatchingSettingsOutput
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettingsArgs struct {
	// Day of week to apply the patch on.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// Enable or disable autopatching on SQL virtual machine.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Duration of patching.
	MaintenanceWindowDuration pulumi.IntPtrInput `pulumi:"maintenanceWindowDuration"`
	// Hour of the day when patching is initiated. Local VM time.
	MaintenanceWindowStartingHour pulumi.IntPtrInput `pulumi:"maintenanceWindowStartingHour"`
}

func (AutoPatchingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPatchingSettings)(nil)).Elem()
}

func (i AutoPatchingSettingsArgs) ToAutoPatchingSettingsOutput() AutoPatchingSettingsOutput {
	return i.ToAutoPatchingSettingsOutputWithContext(context.Background())
}

func (i AutoPatchingSettingsArgs) ToAutoPatchingSettingsOutputWithContext(ctx context.Context) AutoPatchingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsOutput)
}

func (i AutoPatchingSettingsArgs) ToAutoPatchingSettingsPtrOutput() AutoPatchingSettingsPtrOutput {
	return i.ToAutoPatchingSettingsPtrOutputWithContext(context.Background())
}

func (i AutoPatchingSettingsArgs) ToAutoPatchingSettingsPtrOutputWithContext(ctx context.Context) AutoPatchingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsOutput).ToAutoPatchingSettingsPtrOutputWithContext(ctx)
}

// AutoPatchingSettingsPtrInput is an input type that accepts AutoPatchingSettingsArgs, AutoPatchingSettingsPtr and AutoPatchingSettingsPtrOutput values.
// You can construct a concrete instance of `AutoPatchingSettingsPtrInput` via:
//
//          AutoPatchingSettingsArgs{...}
//
//  or:
//
//          nil
type AutoPatchingSettingsPtrInput interface {
	pulumi.Input

	ToAutoPatchingSettingsPtrOutput() AutoPatchingSettingsPtrOutput
	ToAutoPatchingSettingsPtrOutputWithContext(context.Context) AutoPatchingSettingsPtrOutput
}

type autoPatchingSettingsPtrType AutoPatchingSettingsArgs

func AutoPatchingSettingsPtr(v *AutoPatchingSettingsArgs) AutoPatchingSettingsPtrInput {
	return (*autoPatchingSettingsPtrType)(v)
}

func (*autoPatchingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPatchingSettings)(nil)).Elem()
}

func (i *autoPatchingSettingsPtrType) ToAutoPatchingSettingsPtrOutput() AutoPatchingSettingsPtrOutput {
	return i.ToAutoPatchingSettingsPtrOutputWithContext(context.Background())
}

func (i *autoPatchingSettingsPtrType) ToAutoPatchingSettingsPtrOutputWithContext(ctx context.Context) AutoPatchingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsPtrOutput)
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettingsOutput struct{ *pulumi.OutputState }

func (AutoPatchingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPatchingSettings)(nil)).Elem()
}

func (o AutoPatchingSettingsOutput) ToAutoPatchingSettingsOutput() AutoPatchingSettingsOutput {
	return o
}

func (o AutoPatchingSettingsOutput) ToAutoPatchingSettingsOutputWithContext(ctx context.Context) AutoPatchingSettingsOutput {
	return o
}

func (o AutoPatchingSettingsOutput) ToAutoPatchingSettingsPtrOutput() AutoPatchingSettingsPtrOutput {
	return o.ToAutoPatchingSettingsPtrOutputWithContext(context.Background())
}

func (o AutoPatchingSettingsOutput) ToAutoPatchingSettingsPtrOutputWithContext(ctx context.Context) AutoPatchingSettingsPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettings) *AutoPatchingSettings {
		return &v
	}).(AutoPatchingSettingsPtrOutput)
}

// Day of week to apply the patch on.
func (o AutoPatchingSettingsOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettings) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// Enable or disable autopatching on SQL virtual machine.
func (o AutoPatchingSettingsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettings) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Duration of patching.
func (o AutoPatchingSettingsOutput) MaintenanceWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettings) *int { return v.MaintenanceWindowDuration }).(pulumi.IntPtrOutput)
}

// Hour of the day when patching is initiated. Local VM time.
func (o AutoPatchingSettingsOutput) MaintenanceWindowStartingHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettings) *int { return v.MaintenanceWindowStartingHour }).(pulumi.IntPtrOutput)
}

type AutoPatchingSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoPatchingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPatchingSettings)(nil)).Elem()
}

func (o AutoPatchingSettingsPtrOutput) ToAutoPatchingSettingsPtrOutput() AutoPatchingSettingsPtrOutput {
	return o
}

func (o AutoPatchingSettingsPtrOutput) ToAutoPatchingSettingsPtrOutputWithContext(ctx context.Context) AutoPatchingSettingsPtrOutput {
	return o
}

func (o AutoPatchingSettingsPtrOutput) Elem() AutoPatchingSettingsOutput {
	return o.ApplyT(func(v *AutoPatchingSettings) AutoPatchingSettings { return *v }).(AutoPatchingSettingsOutput)
}

// Day of week to apply the patch on.
func (o AutoPatchingSettingsPtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettings) *string {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// Enable or disable autopatching on SQL virtual machine.
func (o AutoPatchingSettingsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Duration of patching.
func (o AutoPatchingSettingsPtrOutput) MaintenanceWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowDuration
	}).(pulumi.IntPtrOutput)
}

// Hour of the day when patching is initiated. Local VM time.
func (o AutoPatchingSettingsPtrOutput) MaintenanceWindowStartingHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowStartingHour
	}).(pulumi.IntPtrOutput)
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettingsResponse struct {
	// Day of week to apply the patch on.
	DayOfWeek *string `pulumi:"dayOfWeek"`
	// Enable or disable autopatching on SQL virtual machine.
	Enable *bool `pulumi:"enable"`
	// Duration of patching.
	MaintenanceWindowDuration *int `pulumi:"maintenanceWindowDuration"`
	// Hour of the day when patching is initiated. Local VM time.
	MaintenanceWindowStartingHour *int `pulumi:"maintenanceWindowStartingHour"`
}

// AutoPatchingSettingsResponseInput is an input type that accepts AutoPatchingSettingsResponseArgs and AutoPatchingSettingsResponseOutput values.
// You can construct a concrete instance of `AutoPatchingSettingsResponseInput` via:
//
//          AutoPatchingSettingsResponseArgs{...}
type AutoPatchingSettingsResponseInput interface {
	pulumi.Input

	ToAutoPatchingSettingsResponseOutput() AutoPatchingSettingsResponseOutput
	ToAutoPatchingSettingsResponseOutputWithContext(context.Context) AutoPatchingSettingsResponseOutput
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettingsResponseArgs struct {
	// Day of week to apply the patch on.
	DayOfWeek pulumi.StringPtrInput `pulumi:"dayOfWeek"`
	// Enable or disable autopatching on SQL virtual machine.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Duration of patching.
	MaintenanceWindowDuration pulumi.IntPtrInput `pulumi:"maintenanceWindowDuration"`
	// Hour of the day when patching is initiated. Local VM time.
	MaintenanceWindowStartingHour pulumi.IntPtrInput `pulumi:"maintenanceWindowStartingHour"`
}

func (AutoPatchingSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPatchingSettingsResponse)(nil)).Elem()
}

func (i AutoPatchingSettingsResponseArgs) ToAutoPatchingSettingsResponseOutput() AutoPatchingSettingsResponseOutput {
	return i.ToAutoPatchingSettingsResponseOutputWithContext(context.Background())
}

func (i AutoPatchingSettingsResponseArgs) ToAutoPatchingSettingsResponseOutputWithContext(ctx context.Context) AutoPatchingSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsResponseOutput)
}

func (i AutoPatchingSettingsResponseArgs) ToAutoPatchingSettingsResponsePtrOutput() AutoPatchingSettingsResponsePtrOutput {
	return i.ToAutoPatchingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i AutoPatchingSettingsResponseArgs) ToAutoPatchingSettingsResponsePtrOutputWithContext(ctx context.Context) AutoPatchingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsResponseOutput).ToAutoPatchingSettingsResponsePtrOutputWithContext(ctx)
}

// AutoPatchingSettingsResponsePtrInput is an input type that accepts AutoPatchingSettingsResponseArgs, AutoPatchingSettingsResponsePtr and AutoPatchingSettingsResponsePtrOutput values.
// You can construct a concrete instance of `AutoPatchingSettingsResponsePtrInput` via:
//
//          AutoPatchingSettingsResponseArgs{...}
//
//  or:
//
//          nil
type AutoPatchingSettingsResponsePtrInput interface {
	pulumi.Input

	ToAutoPatchingSettingsResponsePtrOutput() AutoPatchingSettingsResponsePtrOutput
	ToAutoPatchingSettingsResponsePtrOutputWithContext(context.Context) AutoPatchingSettingsResponsePtrOutput
}

type autoPatchingSettingsResponsePtrType AutoPatchingSettingsResponseArgs

func AutoPatchingSettingsResponsePtr(v *AutoPatchingSettingsResponseArgs) AutoPatchingSettingsResponsePtrInput {
	return (*autoPatchingSettingsResponsePtrType)(v)
}

func (*autoPatchingSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPatchingSettingsResponse)(nil)).Elem()
}

func (i *autoPatchingSettingsResponsePtrType) ToAutoPatchingSettingsResponsePtrOutput() AutoPatchingSettingsResponsePtrOutput {
	return i.ToAutoPatchingSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *autoPatchingSettingsResponsePtrType) ToAutoPatchingSettingsResponsePtrOutputWithContext(ctx context.Context) AutoPatchingSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoPatchingSettingsResponsePtrOutput)
}

// Set a patching window during which Windows and SQL patches will be applied.
type AutoPatchingSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoPatchingSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoPatchingSettingsResponse)(nil)).Elem()
}

func (o AutoPatchingSettingsResponseOutput) ToAutoPatchingSettingsResponseOutput() AutoPatchingSettingsResponseOutput {
	return o
}

func (o AutoPatchingSettingsResponseOutput) ToAutoPatchingSettingsResponseOutputWithContext(ctx context.Context) AutoPatchingSettingsResponseOutput {
	return o
}

func (o AutoPatchingSettingsResponseOutput) ToAutoPatchingSettingsResponsePtrOutput() AutoPatchingSettingsResponsePtrOutput {
	return o.ToAutoPatchingSettingsResponsePtrOutputWithContext(context.Background())
}

func (o AutoPatchingSettingsResponseOutput) ToAutoPatchingSettingsResponsePtrOutputWithContext(ctx context.Context) AutoPatchingSettingsResponsePtrOutput {
	return o.ApplyT(func(v AutoPatchingSettingsResponse) *AutoPatchingSettingsResponse {
		return &v
	}).(AutoPatchingSettingsResponsePtrOutput)
}

// Day of week to apply the patch on.
func (o AutoPatchingSettingsResponseOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettingsResponse) *string { return v.DayOfWeek }).(pulumi.StringPtrOutput)
}

// Enable or disable autopatching on SQL virtual machine.
func (o AutoPatchingSettingsResponseOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettingsResponse) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Duration of patching.
func (o AutoPatchingSettingsResponseOutput) MaintenanceWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettingsResponse) *int { return v.MaintenanceWindowDuration }).(pulumi.IntPtrOutput)
}

// Hour of the day when patching is initiated. Local VM time.
func (o AutoPatchingSettingsResponseOutput) MaintenanceWindowStartingHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoPatchingSettingsResponse) *int { return v.MaintenanceWindowStartingHour }).(pulumi.IntPtrOutput)
}

type AutoPatchingSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoPatchingSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoPatchingSettingsResponse)(nil)).Elem()
}

func (o AutoPatchingSettingsResponsePtrOutput) ToAutoPatchingSettingsResponsePtrOutput() AutoPatchingSettingsResponsePtrOutput {
	return o
}

func (o AutoPatchingSettingsResponsePtrOutput) ToAutoPatchingSettingsResponsePtrOutputWithContext(ctx context.Context) AutoPatchingSettingsResponsePtrOutput {
	return o
}

func (o AutoPatchingSettingsResponsePtrOutput) Elem() AutoPatchingSettingsResponseOutput {
	return o.ApplyT(func(v *AutoPatchingSettingsResponse) AutoPatchingSettingsResponse { return *v }).(AutoPatchingSettingsResponseOutput)
}

// Day of week to apply the patch on.
func (o AutoPatchingSettingsResponsePtrOutput) DayOfWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.StringPtrOutput)
}

// Enable or disable autopatching on SQL virtual machine.
func (o AutoPatchingSettingsResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Duration of patching.
func (o AutoPatchingSettingsResponsePtrOutput) MaintenanceWindowDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowDuration
	}).(pulumi.IntPtrOutput)
}

// Hour of the day when patching is initiated. Local VM time.
func (o AutoPatchingSettingsResponsePtrOutput) MaintenanceWindowStartingHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoPatchingSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaintenanceWindowStartingHour
	}).(pulumi.IntPtrOutput)
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettings struct {
	// Azure Key Vault url.
	AzureKeyVaultUrl *string `pulumi:"azureKeyVaultUrl"`
	// Credential name.
	CredentialName *string `pulumi:"credentialName"`
	// Enable or disable key vault credential setting.
	Enable *bool `pulumi:"enable"`
	// Service principal name to access key vault.
	ServicePrincipalName *string `pulumi:"servicePrincipalName"`
	// Service principal name secret to access key vault.
	ServicePrincipalSecret *string `pulumi:"servicePrincipalSecret"`
}

// KeyVaultCredentialSettingsInput is an input type that accepts KeyVaultCredentialSettingsArgs and KeyVaultCredentialSettingsOutput values.
// You can construct a concrete instance of `KeyVaultCredentialSettingsInput` via:
//
//          KeyVaultCredentialSettingsArgs{...}
type KeyVaultCredentialSettingsInput interface {
	pulumi.Input

	ToKeyVaultCredentialSettingsOutput() KeyVaultCredentialSettingsOutput
	ToKeyVaultCredentialSettingsOutputWithContext(context.Context) KeyVaultCredentialSettingsOutput
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettingsArgs struct {
	// Azure Key Vault url.
	AzureKeyVaultUrl pulumi.StringPtrInput `pulumi:"azureKeyVaultUrl"`
	// Credential name.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// Enable or disable key vault credential setting.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Service principal name to access key vault.
	ServicePrincipalName pulumi.StringPtrInput `pulumi:"servicePrincipalName"`
	// Service principal name secret to access key vault.
	ServicePrincipalSecret pulumi.StringPtrInput `pulumi:"servicePrincipalSecret"`
}

func (KeyVaultCredentialSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCredentialSettings)(nil)).Elem()
}

func (i KeyVaultCredentialSettingsArgs) ToKeyVaultCredentialSettingsOutput() KeyVaultCredentialSettingsOutput {
	return i.ToKeyVaultCredentialSettingsOutputWithContext(context.Background())
}

func (i KeyVaultCredentialSettingsArgs) ToKeyVaultCredentialSettingsOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsOutput)
}

func (i KeyVaultCredentialSettingsArgs) ToKeyVaultCredentialSettingsPtrOutput() KeyVaultCredentialSettingsPtrOutput {
	return i.ToKeyVaultCredentialSettingsPtrOutputWithContext(context.Background())
}

func (i KeyVaultCredentialSettingsArgs) ToKeyVaultCredentialSettingsPtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsOutput).ToKeyVaultCredentialSettingsPtrOutputWithContext(ctx)
}

// KeyVaultCredentialSettingsPtrInput is an input type that accepts KeyVaultCredentialSettingsArgs, KeyVaultCredentialSettingsPtr and KeyVaultCredentialSettingsPtrOutput values.
// You can construct a concrete instance of `KeyVaultCredentialSettingsPtrInput` via:
//
//          KeyVaultCredentialSettingsArgs{...}
//
//  or:
//
//          nil
type KeyVaultCredentialSettingsPtrInput interface {
	pulumi.Input

	ToKeyVaultCredentialSettingsPtrOutput() KeyVaultCredentialSettingsPtrOutput
	ToKeyVaultCredentialSettingsPtrOutputWithContext(context.Context) KeyVaultCredentialSettingsPtrOutput
}

type keyVaultCredentialSettingsPtrType KeyVaultCredentialSettingsArgs

func KeyVaultCredentialSettingsPtr(v *KeyVaultCredentialSettingsArgs) KeyVaultCredentialSettingsPtrInput {
	return (*keyVaultCredentialSettingsPtrType)(v)
}

func (*keyVaultCredentialSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCredentialSettings)(nil)).Elem()
}

func (i *keyVaultCredentialSettingsPtrType) ToKeyVaultCredentialSettingsPtrOutput() KeyVaultCredentialSettingsPtrOutput {
	return i.ToKeyVaultCredentialSettingsPtrOutputWithContext(context.Background())
}

func (i *keyVaultCredentialSettingsPtrType) ToKeyVaultCredentialSettingsPtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsPtrOutput)
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettingsOutput struct{ *pulumi.OutputState }

func (KeyVaultCredentialSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCredentialSettings)(nil)).Elem()
}

func (o KeyVaultCredentialSettingsOutput) ToKeyVaultCredentialSettingsOutput() KeyVaultCredentialSettingsOutput {
	return o
}

func (o KeyVaultCredentialSettingsOutput) ToKeyVaultCredentialSettingsOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsOutput {
	return o
}

func (o KeyVaultCredentialSettingsOutput) ToKeyVaultCredentialSettingsPtrOutput() KeyVaultCredentialSettingsPtrOutput {
	return o.ToKeyVaultCredentialSettingsPtrOutputWithContext(context.Background())
}

func (o KeyVaultCredentialSettingsOutput) ToKeyVaultCredentialSettingsPtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *KeyVaultCredentialSettings {
		return &v
	}).(KeyVaultCredentialSettingsPtrOutput)
}

// Azure Key Vault url.
func (o KeyVaultCredentialSettingsOutput) AzureKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *string { return v.AzureKeyVaultUrl }).(pulumi.StringPtrOutput)
}

// Credential name.
func (o KeyVaultCredentialSettingsOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// Enable or disable key vault credential setting.
func (o KeyVaultCredentialSettingsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Service principal name to access key vault.
func (o KeyVaultCredentialSettingsOutput) ServicePrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *string { return v.ServicePrincipalName }).(pulumi.StringPtrOutput)
}

// Service principal name secret to access key vault.
func (o KeyVaultCredentialSettingsOutput) ServicePrincipalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettings) *string { return v.ServicePrincipalSecret }).(pulumi.StringPtrOutput)
}

type KeyVaultCredentialSettingsPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCredentialSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCredentialSettings)(nil)).Elem()
}

func (o KeyVaultCredentialSettingsPtrOutput) ToKeyVaultCredentialSettingsPtrOutput() KeyVaultCredentialSettingsPtrOutput {
	return o
}

func (o KeyVaultCredentialSettingsPtrOutput) ToKeyVaultCredentialSettingsPtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsPtrOutput {
	return o
}

func (o KeyVaultCredentialSettingsPtrOutput) Elem() KeyVaultCredentialSettingsOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) KeyVaultCredentialSettings { return *v }).(KeyVaultCredentialSettingsOutput)
}

// Azure Key Vault url.
func (o KeyVaultCredentialSettingsPtrOutput) AzureKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) *string {
		if v == nil {
			return nil
		}
		return v.AzureKeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// Credential name.
func (o KeyVaultCredentialSettingsPtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// Enable or disable key vault credential setting.
func (o KeyVaultCredentialSettingsPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Service principal name to access key vault.
func (o KeyVaultCredentialSettingsPtrOutput) ServicePrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalName
	}).(pulumi.StringPtrOutput)
}

// Service principal name secret to access key vault.
func (o KeyVaultCredentialSettingsPtrOutput) ServicePrincipalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalSecret
	}).(pulumi.StringPtrOutput)
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettingsResponse struct {
	// Azure Key Vault url.
	AzureKeyVaultUrl *string `pulumi:"azureKeyVaultUrl"`
	// Credential name.
	CredentialName *string `pulumi:"credentialName"`
	// Enable or disable key vault credential setting.
	Enable *bool `pulumi:"enable"`
	// Service principal name to access key vault.
	ServicePrincipalName *string `pulumi:"servicePrincipalName"`
	// Service principal name secret to access key vault.
	ServicePrincipalSecret *string `pulumi:"servicePrincipalSecret"`
}

// KeyVaultCredentialSettingsResponseInput is an input type that accepts KeyVaultCredentialSettingsResponseArgs and KeyVaultCredentialSettingsResponseOutput values.
// You can construct a concrete instance of `KeyVaultCredentialSettingsResponseInput` via:
//
//          KeyVaultCredentialSettingsResponseArgs{...}
type KeyVaultCredentialSettingsResponseInput interface {
	pulumi.Input

	ToKeyVaultCredentialSettingsResponseOutput() KeyVaultCredentialSettingsResponseOutput
	ToKeyVaultCredentialSettingsResponseOutputWithContext(context.Context) KeyVaultCredentialSettingsResponseOutput
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettingsResponseArgs struct {
	// Azure Key Vault url.
	AzureKeyVaultUrl pulumi.StringPtrInput `pulumi:"azureKeyVaultUrl"`
	// Credential name.
	CredentialName pulumi.StringPtrInput `pulumi:"credentialName"`
	// Enable or disable key vault credential setting.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Service principal name to access key vault.
	ServicePrincipalName pulumi.StringPtrInput `pulumi:"servicePrincipalName"`
	// Service principal name secret to access key vault.
	ServicePrincipalSecret pulumi.StringPtrInput `pulumi:"servicePrincipalSecret"`
}

func (KeyVaultCredentialSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCredentialSettingsResponse)(nil)).Elem()
}

func (i KeyVaultCredentialSettingsResponseArgs) ToKeyVaultCredentialSettingsResponseOutput() KeyVaultCredentialSettingsResponseOutput {
	return i.ToKeyVaultCredentialSettingsResponseOutputWithContext(context.Background())
}

func (i KeyVaultCredentialSettingsResponseArgs) ToKeyVaultCredentialSettingsResponseOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsResponseOutput)
}

func (i KeyVaultCredentialSettingsResponseArgs) ToKeyVaultCredentialSettingsResponsePtrOutput() KeyVaultCredentialSettingsResponsePtrOutput {
	return i.ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(context.Background())
}

func (i KeyVaultCredentialSettingsResponseArgs) ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsResponseOutput).ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(ctx)
}

// KeyVaultCredentialSettingsResponsePtrInput is an input type that accepts KeyVaultCredentialSettingsResponseArgs, KeyVaultCredentialSettingsResponsePtr and KeyVaultCredentialSettingsResponsePtrOutput values.
// You can construct a concrete instance of `KeyVaultCredentialSettingsResponsePtrInput` via:
//
//          KeyVaultCredentialSettingsResponseArgs{...}
//
//  or:
//
//          nil
type KeyVaultCredentialSettingsResponsePtrInput interface {
	pulumi.Input

	ToKeyVaultCredentialSettingsResponsePtrOutput() KeyVaultCredentialSettingsResponsePtrOutput
	ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(context.Context) KeyVaultCredentialSettingsResponsePtrOutput
}

type keyVaultCredentialSettingsResponsePtrType KeyVaultCredentialSettingsResponseArgs

func KeyVaultCredentialSettingsResponsePtr(v *KeyVaultCredentialSettingsResponseArgs) KeyVaultCredentialSettingsResponsePtrInput {
	return (*keyVaultCredentialSettingsResponsePtrType)(v)
}

func (*keyVaultCredentialSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCredentialSettingsResponse)(nil)).Elem()
}

func (i *keyVaultCredentialSettingsResponsePtrType) ToKeyVaultCredentialSettingsResponsePtrOutput() KeyVaultCredentialSettingsResponsePtrOutput {
	return i.ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *keyVaultCredentialSettingsResponsePtrType) ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCredentialSettingsResponsePtrOutput)
}

// Configure your SQL virtual machine to be able to connect to the Azure Key Vault service.
type KeyVaultCredentialSettingsResponseOutput struct{ *pulumi.OutputState }

func (KeyVaultCredentialSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCredentialSettingsResponse)(nil)).Elem()
}

func (o KeyVaultCredentialSettingsResponseOutput) ToKeyVaultCredentialSettingsResponseOutput() KeyVaultCredentialSettingsResponseOutput {
	return o
}

func (o KeyVaultCredentialSettingsResponseOutput) ToKeyVaultCredentialSettingsResponseOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponseOutput {
	return o
}

func (o KeyVaultCredentialSettingsResponseOutput) ToKeyVaultCredentialSettingsResponsePtrOutput() KeyVaultCredentialSettingsResponsePtrOutput {
	return o.ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(context.Background())
}

func (o KeyVaultCredentialSettingsResponseOutput) ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponsePtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *KeyVaultCredentialSettingsResponse {
		return &v
	}).(KeyVaultCredentialSettingsResponsePtrOutput)
}

// Azure Key Vault url.
func (o KeyVaultCredentialSettingsResponseOutput) AzureKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *string { return v.AzureKeyVaultUrl }).(pulumi.StringPtrOutput)
}

// Credential name.
func (o KeyVaultCredentialSettingsResponseOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *string { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// Enable or disable key vault credential setting.
func (o KeyVaultCredentialSettingsResponseOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Service principal name to access key vault.
func (o KeyVaultCredentialSettingsResponseOutput) ServicePrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *string { return v.ServicePrincipalName }).(pulumi.StringPtrOutput)
}

// Service principal name secret to access key vault.
func (o KeyVaultCredentialSettingsResponseOutput) ServicePrincipalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCredentialSettingsResponse) *string { return v.ServicePrincipalSecret }).(pulumi.StringPtrOutput)
}

type KeyVaultCredentialSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCredentialSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCredentialSettingsResponse)(nil)).Elem()
}

func (o KeyVaultCredentialSettingsResponsePtrOutput) ToKeyVaultCredentialSettingsResponsePtrOutput() KeyVaultCredentialSettingsResponsePtrOutput {
	return o
}

func (o KeyVaultCredentialSettingsResponsePtrOutput) ToKeyVaultCredentialSettingsResponsePtrOutputWithContext(ctx context.Context) KeyVaultCredentialSettingsResponsePtrOutput {
	return o
}

func (o KeyVaultCredentialSettingsResponsePtrOutput) Elem() KeyVaultCredentialSettingsResponseOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) KeyVaultCredentialSettingsResponse { return *v }).(KeyVaultCredentialSettingsResponseOutput)
}

// Azure Key Vault url.
func (o KeyVaultCredentialSettingsResponsePtrOutput) AzureKeyVaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AzureKeyVaultUrl
	}).(pulumi.StringPtrOutput)
}

// Credential name.
func (o KeyVaultCredentialSettingsResponsePtrOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CredentialName
	}).(pulumi.StringPtrOutput)
}

// Enable or disable key vault credential setting.
func (o KeyVaultCredentialSettingsResponsePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

// Service principal name to access key vault.
func (o KeyVaultCredentialSettingsResponsePtrOutput) ServicePrincipalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalName
	}).(pulumi.StringPtrOutput)
}

// Service principal name secret to access key vault.
func (o KeyVaultCredentialSettingsResponsePtrOutput) ServicePrincipalSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCredentialSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServicePrincipalSecret
	}).(pulumi.StringPtrOutput)
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfiguration struct {
	// Resource id of the load balancer.
	LoadBalancerResourceId *string `pulumi:"loadBalancerResourceId"`
	// Private IP address.
	PrivateIpAddress *PrivateIPAddress `pulumi:"privateIpAddress"`
	// Probe port.
	ProbePort *int `pulumi:"probePort"`
	// Resource id of the public IP.
	PublicIpAddressResourceId *string `pulumi:"publicIpAddressResourceId"`
	// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
	SqlVirtualMachineInstances []string `pulumi:"sqlVirtualMachineInstances"`
}

// LoadBalancerConfigurationInput is an input type that accepts LoadBalancerConfigurationArgs and LoadBalancerConfigurationOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationInput` via:
//
//          LoadBalancerConfigurationArgs{...}
type LoadBalancerConfigurationInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput
	ToLoadBalancerConfigurationOutputWithContext(context.Context) LoadBalancerConfigurationOutput
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfigurationArgs struct {
	// Resource id of the load balancer.
	LoadBalancerResourceId pulumi.StringPtrInput `pulumi:"loadBalancerResourceId"`
	// Private IP address.
	PrivateIpAddress PrivateIPAddressPtrInput `pulumi:"privateIpAddress"`
	// Probe port.
	ProbePort pulumi.IntPtrInput `pulumi:"probePort"`
	// Resource id of the public IP.
	PublicIpAddressResourceId pulumi.StringPtrInput `pulumi:"publicIpAddressResourceId"`
	// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
	SqlVirtualMachineInstances pulumi.StringArrayInput `pulumi:"sqlVirtualMachineInstances"`
}

func (LoadBalancerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfiguration)(nil)).Elem()
}

func (i LoadBalancerConfigurationArgs) ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput {
	return i.ToLoadBalancerConfigurationOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationArgs) ToLoadBalancerConfigurationOutputWithContext(ctx context.Context) LoadBalancerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationOutput)
}

// LoadBalancerConfigurationArrayInput is an input type that accepts LoadBalancerConfigurationArray and LoadBalancerConfigurationArrayOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationArrayInput` via:
//
//          LoadBalancerConfigurationArray{ LoadBalancerConfigurationArgs{...} }
type LoadBalancerConfigurationArrayInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput
	ToLoadBalancerConfigurationArrayOutputWithContext(context.Context) LoadBalancerConfigurationArrayOutput
}

type LoadBalancerConfigurationArray []LoadBalancerConfigurationInput

func (LoadBalancerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfiguration)(nil)).Elem()
}

func (i LoadBalancerConfigurationArray) ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput {
	return i.ToLoadBalancerConfigurationArrayOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationArray) ToLoadBalancerConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationArrayOutput)
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfigurationOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfiguration)(nil)).Elem()
}

func (o LoadBalancerConfigurationOutput) ToLoadBalancerConfigurationOutput() LoadBalancerConfigurationOutput {
	return o
}

func (o LoadBalancerConfigurationOutput) ToLoadBalancerConfigurationOutputWithContext(ctx context.Context) LoadBalancerConfigurationOutput {
	return o
}

// Resource id of the load balancer.
func (o LoadBalancerConfigurationOutput) LoadBalancerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) *string { return v.LoadBalancerResourceId }).(pulumi.StringPtrOutput)
}

// Private IP address.
func (o LoadBalancerConfigurationOutput) PrivateIpAddress() PrivateIPAddressPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) *PrivateIPAddress { return v.PrivateIpAddress }).(PrivateIPAddressPtrOutput)
}

// Probe port.
func (o LoadBalancerConfigurationOutput) ProbePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) *int { return v.ProbePort }).(pulumi.IntPtrOutput)
}

// Resource id of the public IP.
func (o LoadBalancerConfigurationOutput) PublicIpAddressResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) *string { return v.PublicIpAddressResourceId }).(pulumi.StringPtrOutput)
}

// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
func (o LoadBalancerConfigurationOutput) SqlVirtualMachineInstances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerConfiguration) []string { return v.SqlVirtualMachineInstances }).(pulumi.StringArrayOutput)
}

type LoadBalancerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfiguration)(nil)).Elem()
}

func (o LoadBalancerConfigurationArrayOutput) ToLoadBalancerConfigurationArrayOutput() LoadBalancerConfigurationArrayOutput {
	return o
}

func (o LoadBalancerConfigurationArrayOutput) ToLoadBalancerConfigurationArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationArrayOutput {
	return o
}

func (o LoadBalancerConfigurationArrayOutput) Index(i pulumi.IntInput) LoadBalancerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerConfiguration {
		return vs[0].([]LoadBalancerConfiguration)[vs[1].(int)]
	}).(LoadBalancerConfigurationOutput)
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfigurationResponse struct {
	// Resource id of the load balancer.
	LoadBalancerResourceId *string `pulumi:"loadBalancerResourceId"`
	// Private IP address.
	PrivateIpAddress *PrivateIPAddressResponse `pulumi:"privateIpAddress"`
	// Probe port.
	ProbePort *int `pulumi:"probePort"`
	// Resource id of the public IP.
	PublicIpAddressResourceId *string `pulumi:"publicIpAddressResourceId"`
	// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
	SqlVirtualMachineInstances []string `pulumi:"sqlVirtualMachineInstances"`
}

// LoadBalancerConfigurationResponseInput is an input type that accepts LoadBalancerConfigurationResponseArgs and LoadBalancerConfigurationResponseOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationResponseInput` via:
//
//          LoadBalancerConfigurationResponseArgs{...}
type LoadBalancerConfigurationResponseInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationResponseOutput() LoadBalancerConfigurationResponseOutput
	ToLoadBalancerConfigurationResponseOutputWithContext(context.Context) LoadBalancerConfigurationResponseOutput
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfigurationResponseArgs struct {
	// Resource id of the load balancer.
	LoadBalancerResourceId pulumi.StringPtrInput `pulumi:"loadBalancerResourceId"`
	// Private IP address.
	PrivateIpAddress PrivateIPAddressResponsePtrInput `pulumi:"privateIpAddress"`
	// Probe port.
	ProbePort pulumi.IntPtrInput `pulumi:"probePort"`
	// Resource id of the public IP.
	PublicIpAddressResourceId pulumi.StringPtrInput `pulumi:"publicIpAddressResourceId"`
	// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
	SqlVirtualMachineInstances pulumi.StringArrayInput `pulumi:"sqlVirtualMachineInstances"`
}

func (LoadBalancerConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (i LoadBalancerConfigurationResponseArgs) ToLoadBalancerConfigurationResponseOutput() LoadBalancerConfigurationResponseOutput {
	return i.ToLoadBalancerConfigurationResponseOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationResponseArgs) ToLoadBalancerConfigurationResponseOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationResponseOutput)
}

// LoadBalancerConfigurationResponseArrayInput is an input type that accepts LoadBalancerConfigurationResponseArray and LoadBalancerConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerConfigurationResponseArrayInput` via:
//
//          LoadBalancerConfigurationResponseArray{ LoadBalancerConfigurationResponseArgs{...} }
type LoadBalancerConfigurationResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerConfigurationResponseArrayOutput() LoadBalancerConfigurationResponseArrayOutput
	ToLoadBalancerConfigurationResponseArrayOutputWithContext(context.Context) LoadBalancerConfigurationResponseArrayOutput
}

type LoadBalancerConfigurationResponseArray []LoadBalancerConfigurationResponseInput

func (LoadBalancerConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (i LoadBalancerConfigurationResponseArray) ToLoadBalancerConfigurationResponseArrayOutput() LoadBalancerConfigurationResponseArrayOutput {
	return i.ToLoadBalancerConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerConfigurationResponseArray) ToLoadBalancerConfigurationResponseArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerConfigurationResponseArrayOutput)
}

// A load balancer configuration for an availability group listener.
type LoadBalancerConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerConfigurationResponseOutput) ToLoadBalancerConfigurationResponseOutput() LoadBalancerConfigurationResponseOutput {
	return o
}

func (o LoadBalancerConfigurationResponseOutput) ToLoadBalancerConfigurationResponseOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseOutput {
	return o
}

// Resource id of the load balancer.
func (o LoadBalancerConfigurationResponseOutput) LoadBalancerResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) *string { return v.LoadBalancerResourceId }).(pulumi.StringPtrOutput)
}

// Private IP address.
func (o LoadBalancerConfigurationResponseOutput) PrivateIpAddress() PrivateIPAddressResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) *PrivateIPAddressResponse { return v.PrivateIpAddress }).(PrivateIPAddressResponsePtrOutput)
}

// Probe port.
func (o LoadBalancerConfigurationResponseOutput) ProbePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) *int { return v.ProbePort }).(pulumi.IntPtrOutput)
}

// Resource id of the public IP.
func (o LoadBalancerConfigurationResponseOutput) PublicIpAddressResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) *string { return v.PublicIpAddressResourceId }).(pulumi.StringPtrOutput)
}

// List of the SQL virtual machine instance resource id's that are enrolled into the availability group listener.
func (o LoadBalancerConfigurationResponseOutput) SqlVirtualMachineInstances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadBalancerConfigurationResponse) []string { return v.SqlVirtualMachineInstances }).(pulumi.StringArrayOutput)
}

type LoadBalancerConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerConfigurationResponse)(nil)).Elem()
}

func (o LoadBalancerConfigurationResponseArrayOutput) ToLoadBalancerConfigurationResponseArrayOutput() LoadBalancerConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerConfigurationResponseArrayOutput) ToLoadBalancerConfigurationResponseArrayOutputWithContext(ctx context.Context) LoadBalancerConfigurationResponseArrayOutput {
	return o
}

func (o LoadBalancerConfigurationResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerConfigurationResponse {
		return vs[0].([]LoadBalancerConfigurationResponse)[vs[1].(int)]
	}).(LoadBalancerConfigurationResponseOutput)
}

// A private IP address bound to the availability group listener.
type PrivateIPAddress struct {
	// Private IP address bound to the availability group listener.
	IpAddress *string `pulumi:"ipAddress"`
	// Subnet used to include private IP.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
}

// PrivateIPAddressInput is an input type that accepts PrivateIPAddressArgs and PrivateIPAddressOutput values.
// You can construct a concrete instance of `PrivateIPAddressInput` via:
//
//          PrivateIPAddressArgs{...}
type PrivateIPAddressInput interface {
	pulumi.Input

	ToPrivateIPAddressOutput() PrivateIPAddressOutput
	ToPrivateIPAddressOutputWithContext(context.Context) PrivateIPAddressOutput
}

// A private IP address bound to the availability group listener.
type PrivateIPAddressArgs struct {
	// Private IP address bound to the availability group listener.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Subnet used to include private IP.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
}

func (PrivateIPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAddress)(nil)).Elem()
}

func (i PrivateIPAddressArgs) ToPrivateIPAddressOutput() PrivateIPAddressOutput {
	return i.ToPrivateIPAddressOutputWithContext(context.Background())
}

func (i PrivateIPAddressArgs) ToPrivateIPAddressOutputWithContext(ctx context.Context) PrivateIPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressOutput)
}

func (i PrivateIPAddressArgs) ToPrivateIPAddressPtrOutput() PrivateIPAddressPtrOutput {
	return i.ToPrivateIPAddressPtrOutputWithContext(context.Background())
}

func (i PrivateIPAddressArgs) ToPrivateIPAddressPtrOutputWithContext(ctx context.Context) PrivateIPAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressOutput).ToPrivateIPAddressPtrOutputWithContext(ctx)
}

// PrivateIPAddressPtrInput is an input type that accepts PrivateIPAddressArgs, PrivateIPAddressPtr and PrivateIPAddressPtrOutput values.
// You can construct a concrete instance of `PrivateIPAddressPtrInput` via:
//
//          PrivateIPAddressArgs{...}
//
//  or:
//
//          nil
type PrivateIPAddressPtrInput interface {
	pulumi.Input

	ToPrivateIPAddressPtrOutput() PrivateIPAddressPtrOutput
	ToPrivateIPAddressPtrOutputWithContext(context.Context) PrivateIPAddressPtrOutput
}

type privateIPAddressPtrType PrivateIPAddressArgs

func PrivateIPAddressPtr(v *PrivateIPAddressArgs) PrivateIPAddressPtrInput {
	return (*privateIPAddressPtrType)(v)
}

func (*privateIPAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAddress)(nil)).Elem()
}

func (i *privateIPAddressPtrType) ToPrivateIPAddressPtrOutput() PrivateIPAddressPtrOutput {
	return i.ToPrivateIPAddressPtrOutputWithContext(context.Background())
}

func (i *privateIPAddressPtrType) ToPrivateIPAddressPtrOutputWithContext(ctx context.Context) PrivateIPAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressPtrOutput)
}

// A private IP address bound to the availability group listener.
type PrivateIPAddressOutput struct{ *pulumi.OutputState }

func (PrivateIPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAddress)(nil)).Elem()
}

func (o PrivateIPAddressOutput) ToPrivateIPAddressOutput() PrivateIPAddressOutput {
	return o
}

func (o PrivateIPAddressOutput) ToPrivateIPAddressOutputWithContext(ctx context.Context) PrivateIPAddressOutput {
	return o
}

func (o PrivateIPAddressOutput) ToPrivateIPAddressPtrOutput() PrivateIPAddressPtrOutput {
	return o.ToPrivateIPAddressPtrOutputWithContext(context.Background())
}

func (o PrivateIPAddressOutput) ToPrivateIPAddressPtrOutputWithContext(ctx context.Context) PrivateIPAddressPtrOutput {
	return o.ApplyT(func(v PrivateIPAddress) *PrivateIPAddress {
		return &v
	}).(PrivateIPAddressPtrOutput)
}

// Private IP address bound to the availability group listener.
func (o PrivateIPAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIPAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Subnet used to include private IP.
func (o PrivateIPAddressOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIPAddress) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

type PrivateIPAddressPtrOutput struct{ *pulumi.OutputState }

func (PrivateIPAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAddress)(nil)).Elem()
}

func (o PrivateIPAddressPtrOutput) ToPrivateIPAddressPtrOutput() PrivateIPAddressPtrOutput {
	return o
}

func (o PrivateIPAddressPtrOutput) ToPrivateIPAddressPtrOutputWithContext(ctx context.Context) PrivateIPAddressPtrOutput {
	return o
}

func (o PrivateIPAddressPtrOutput) Elem() PrivateIPAddressOutput {
	return o.ApplyT(func(v *PrivateIPAddress) PrivateIPAddress { return *v }).(PrivateIPAddressOutput)
}

// Private IP address bound to the availability group listener.
func (o PrivateIPAddressPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet used to include private IP.
func (o PrivateIPAddressPtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateIPAddress) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// A private IP address bound to the availability group listener.
type PrivateIPAddressResponse struct {
	// Private IP address bound to the availability group listener.
	IpAddress *string `pulumi:"ipAddress"`
	// Subnet used to include private IP.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
}

// PrivateIPAddressResponseInput is an input type that accepts PrivateIPAddressResponseArgs and PrivateIPAddressResponseOutput values.
// You can construct a concrete instance of `PrivateIPAddressResponseInput` via:
//
//          PrivateIPAddressResponseArgs{...}
type PrivateIPAddressResponseInput interface {
	pulumi.Input

	ToPrivateIPAddressResponseOutput() PrivateIPAddressResponseOutput
	ToPrivateIPAddressResponseOutputWithContext(context.Context) PrivateIPAddressResponseOutput
}

// A private IP address bound to the availability group listener.
type PrivateIPAddressResponseArgs struct {
	// Private IP address bound to the availability group listener.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Subnet used to include private IP.
	SubnetResourceId pulumi.StringPtrInput `pulumi:"subnetResourceId"`
}

func (PrivateIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAddressResponse)(nil)).Elem()
}

func (i PrivateIPAddressResponseArgs) ToPrivateIPAddressResponseOutput() PrivateIPAddressResponseOutput {
	return i.ToPrivateIPAddressResponseOutputWithContext(context.Background())
}

func (i PrivateIPAddressResponseArgs) ToPrivateIPAddressResponseOutputWithContext(ctx context.Context) PrivateIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressResponseOutput)
}

func (i PrivateIPAddressResponseArgs) ToPrivateIPAddressResponsePtrOutput() PrivateIPAddressResponsePtrOutput {
	return i.ToPrivateIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i PrivateIPAddressResponseArgs) ToPrivateIPAddressResponsePtrOutputWithContext(ctx context.Context) PrivateIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressResponseOutput).ToPrivateIPAddressResponsePtrOutputWithContext(ctx)
}

// PrivateIPAddressResponsePtrInput is an input type that accepts PrivateIPAddressResponseArgs, PrivateIPAddressResponsePtr and PrivateIPAddressResponsePtrOutput values.
// You can construct a concrete instance of `PrivateIPAddressResponsePtrInput` via:
//
//          PrivateIPAddressResponseArgs{...}
//
//  or:
//
//          nil
type PrivateIPAddressResponsePtrInput interface {
	pulumi.Input

	ToPrivateIPAddressResponsePtrOutput() PrivateIPAddressResponsePtrOutput
	ToPrivateIPAddressResponsePtrOutputWithContext(context.Context) PrivateIPAddressResponsePtrOutput
}

type privateIPAddressResponsePtrType PrivateIPAddressResponseArgs

func PrivateIPAddressResponsePtr(v *PrivateIPAddressResponseArgs) PrivateIPAddressResponsePtrInput {
	return (*privateIPAddressResponsePtrType)(v)
}

func (*privateIPAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAddressResponse)(nil)).Elem()
}

func (i *privateIPAddressResponsePtrType) ToPrivateIPAddressResponsePtrOutput() PrivateIPAddressResponsePtrOutput {
	return i.ToPrivateIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i *privateIPAddressResponsePtrType) ToPrivateIPAddressResponsePtrOutputWithContext(ctx context.Context) PrivateIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateIPAddressResponsePtrOutput)
}

// A private IP address bound to the availability group listener.
type PrivateIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PrivateIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateIPAddressResponse)(nil)).Elem()
}

func (o PrivateIPAddressResponseOutput) ToPrivateIPAddressResponseOutput() PrivateIPAddressResponseOutput {
	return o
}

func (o PrivateIPAddressResponseOutput) ToPrivateIPAddressResponseOutputWithContext(ctx context.Context) PrivateIPAddressResponseOutput {
	return o
}

func (o PrivateIPAddressResponseOutput) ToPrivateIPAddressResponsePtrOutput() PrivateIPAddressResponsePtrOutput {
	return o.ToPrivateIPAddressResponsePtrOutputWithContext(context.Background())
}

func (o PrivateIPAddressResponseOutput) ToPrivateIPAddressResponsePtrOutputWithContext(ctx context.Context) PrivateIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PrivateIPAddressResponse) *PrivateIPAddressResponse {
		return &v
	}).(PrivateIPAddressResponsePtrOutput)
}

// Private IP address bound to the availability group listener.
func (o PrivateIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Subnet used to include private IP.
func (o PrivateIPAddressResponseOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateIPAddressResponse) *string { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

type PrivateIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateIPAddressResponse)(nil)).Elem()
}

func (o PrivateIPAddressResponsePtrOutput) ToPrivateIPAddressResponsePtrOutput() PrivateIPAddressResponsePtrOutput {
	return o
}

func (o PrivateIPAddressResponsePtrOutput) ToPrivateIPAddressResponsePtrOutputWithContext(ctx context.Context) PrivateIPAddressResponsePtrOutput {
	return o
}

func (o PrivateIPAddressResponsePtrOutput) Elem() PrivateIPAddressResponseOutput {
	return o.ApplyT(func(v *PrivateIPAddressResponse) PrivateIPAddressResponse { return *v }).(PrivateIPAddressResponseOutput)
}

// Private IP address bound to the availability group listener.
func (o PrivateIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// Subnet used to include private IP.
func (o PrivateIPAddressResponsePtrOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.SubnetResourceId
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentity struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
}

// ResourceIdentityInput is an input type that accepts ResourceIdentityArgs and ResourceIdentityOutput values.
// You can construct a concrete instance of `ResourceIdentityInput` via:
//
//          ResourceIdentityArgs{...}
type ResourceIdentityInput interface {
	pulumi.Input

	ToResourceIdentityOutput() ResourceIdentityOutput
	ToResourceIdentityOutputWithContext(context.Context) ResourceIdentityOutput
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityArgs struct {
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (i ResourceIdentityArgs) ToResourceIdentityOutput() ResourceIdentityOutput {
	return i.ToResourceIdentityOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput)
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i ResourceIdentityArgs) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityOutput).ToResourceIdentityPtrOutputWithContext(ctx)
}

// ResourceIdentityPtrInput is an input type that accepts ResourceIdentityArgs, ResourceIdentityPtr and ResourceIdentityPtrOutput values.
// You can construct a concrete instance of `ResourceIdentityPtrInput` via:
//
//          ResourceIdentityArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityPtrInput interface {
	pulumi.Input

	ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput
	ToResourceIdentityPtrOutputWithContext(context.Context) ResourceIdentityPtrOutput
}

type resourceIdentityPtrType ResourceIdentityArgs

func ResourceIdentityPtr(v *ResourceIdentityArgs) ResourceIdentityPtrInput {
	return (*resourceIdentityPtrType)(v)
}

func (*resourceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return i.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (i *resourceIdentityPtrType) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityOutput struct{ *pulumi.OutputState }

func (ResourceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityOutput) ToResourceIdentityOutput() ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityOutputWithContext(ctx context.Context) ResourceIdentityOutput {
	return o
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o.ToResourceIdentityPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *ResourceIdentity {
		return &v
	}).(ResourceIdentityPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentity)(nil)).Elem()
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutput() ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) ToResourceIdentityPtrOutputWithContext(ctx context.Context) ResourceIdentityPtrOutput {
	return o
}

func (o ResourceIdentityPtrOutput) Elem() ResourceIdentityOutput {
	return o.ApplyT(func(v *ResourceIdentity) ResourceIdentity { return *v }).(ResourceIdentityOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponse struct {
	// The Azure Active Directory principal id.
	PrincipalId string `pulumi:"principalId"`
	// The Azure Active Directory tenant id.
	TenantId string `pulumi:"tenantId"`
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type *string `pulumi:"type"`
}

// ResourceIdentityResponseInput is an input type that accepts ResourceIdentityResponseArgs and ResourceIdentityResponseOutput values.
// You can construct a concrete instance of `ResourceIdentityResponseInput` via:
//
//          ResourceIdentityResponseArgs{...}
type ResourceIdentityResponseInput interface {
	pulumi.Input

	ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput
	ToResourceIdentityResponseOutputWithContext(context.Context) ResourceIdentityResponseOutput
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponseArgs struct {
	// The Azure Active Directory principal id.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Azure Active Directory tenant id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ResourceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return i.ToResourceIdentityResponseOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput)
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ResourceIdentityResponseArgs) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponseOutput).ToResourceIdentityResponsePtrOutputWithContext(ctx)
}

// ResourceIdentityResponsePtrInput is an input type that accepts ResourceIdentityResponseArgs, ResourceIdentityResponsePtr and ResourceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ResourceIdentityResponsePtrInput` via:
//
//          ResourceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ResourceIdentityResponsePtrInput interface {
	pulumi.Input

	ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput
	ToResourceIdentityResponsePtrOutputWithContext(context.Context) ResourceIdentityResponsePtrOutput
}

type resourceIdentityResponsePtrType ResourceIdentityResponseArgs

func ResourceIdentityResponsePtr(v *ResourceIdentityResponseArgs) ResourceIdentityResponsePtrInput {
	return (*resourceIdentityResponsePtrType)(v)
}

func (*resourceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return i.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *resourceIdentityResponsePtrType) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceIdentityResponsePtrOutput)
}

// Azure Active Directory identity configuration for a resource.
type ResourceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutput() ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponseOutputWithContext(ctx context.Context) ResourceIdentityResponseOutput {
	return o
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o.ToResourceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityResponseOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *ResourceIdentityResponse {
		return &v
	}).(ResourceIdentityResponsePtrOutput)
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ResourceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceIdentityResponse)(nil)).Elem()
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutput() ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) ToResourceIdentityResponsePtrOutputWithContext(ctx context.Context) ResourceIdentityResponsePtrOutput {
	return o
}

func (o ResourceIdentityResponsePtrOutput) Elem() ResourceIdentityResponseOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) ResourceIdentityResponse { return *v }).(ResourceIdentityResponseOutput)
}

// The Azure Active Directory principal id.
func (o ResourceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory tenant id.
func (o ResourceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.
func (o ResourceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Set disk storage settings for SQL Server.
type SQLStorageSettings struct {
	// SQL Server default file path
	DefaultFilePath *string `pulumi:"defaultFilePath"`
	// Logical Unit Numbers for the disks.
	Luns []int `pulumi:"luns"`
}

// SQLStorageSettingsInput is an input type that accepts SQLStorageSettingsArgs and SQLStorageSettingsOutput values.
// You can construct a concrete instance of `SQLStorageSettingsInput` via:
//
//          SQLStorageSettingsArgs{...}
type SQLStorageSettingsInput interface {
	pulumi.Input

	ToSQLStorageSettingsOutput() SQLStorageSettingsOutput
	ToSQLStorageSettingsOutputWithContext(context.Context) SQLStorageSettingsOutput
}

// Set disk storage settings for SQL Server.
type SQLStorageSettingsArgs struct {
	// SQL Server default file path
	DefaultFilePath pulumi.StringPtrInput `pulumi:"defaultFilePath"`
	// Logical Unit Numbers for the disks.
	Luns pulumi.IntArrayInput `pulumi:"luns"`
}

func (SQLStorageSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SQLStorageSettings)(nil)).Elem()
}

func (i SQLStorageSettingsArgs) ToSQLStorageSettingsOutput() SQLStorageSettingsOutput {
	return i.ToSQLStorageSettingsOutputWithContext(context.Background())
}

func (i SQLStorageSettingsArgs) ToSQLStorageSettingsOutputWithContext(ctx context.Context) SQLStorageSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsOutput)
}

func (i SQLStorageSettingsArgs) ToSQLStorageSettingsPtrOutput() SQLStorageSettingsPtrOutput {
	return i.ToSQLStorageSettingsPtrOutputWithContext(context.Background())
}

func (i SQLStorageSettingsArgs) ToSQLStorageSettingsPtrOutputWithContext(ctx context.Context) SQLStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsOutput).ToSQLStorageSettingsPtrOutputWithContext(ctx)
}

// SQLStorageSettingsPtrInput is an input type that accepts SQLStorageSettingsArgs, SQLStorageSettingsPtr and SQLStorageSettingsPtrOutput values.
// You can construct a concrete instance of `SQLStorageSettingsPtrInput` via:
//
//          SQLStorageSettingsArgs{...}
//
//  or:
//
//          nil
type SQLStorageSettingsPtrInput interface {
	pulumi.Input

	ToSQLStorageSettingsPtrOutput() SQLStorageSettingsPtrOutput
	ToSQLStorageSettingsPtrOutputWithContext(context.Context) SQLStorageSettingsPtrOutput
}

type sqlstorageSettingsPtrType SQLStorageSettingsArgs

func SQLStorageSettingsPtr(v *SQLStorageSettingsArgs) SQLStorageSettingsPtrInput {
	return (*sqlstorageSettingsPtrType)(v)
}

func (*sqlstorageSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SQLStorageSettings)(nil)).Elem()
}

func (i *sqlstorageSettingsPtrType) ToSQLStorageSettingsPtrOutput() SQLStorageSettingsPtrOutput {
	return i.ToSQLStorageSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlstorageSettingsPtrType) ToSQLStorageSettingsPtrOutputWithContext(ctx context.Context) SQLStorageSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsPtrOutput)
}

// Set disk storage settings for SQL Server.
type SQLStorageSettingsOutput struct{ *pulumi.OutputState }

func (SQLStorageSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SQLStorageSettings)(nil)).Elem()
}

func (o SQLStorageSettingsOutput) ToSQLStorageSettingsOutput() SQLStorageSettingsOutput {
	return o
}

func (o SQLStorageSettingsOutput) ToSQLStorageSettingsOutputWithContext(ctx context.Context) SQLStorageSettingsOutput {
	return o
}

func (o SQLStorageSettingsOutput) ToSQLStorageSettingsPtrOutput() SQLStorageSettingsPtrOutput {
	return o.ToSQLStorageSettingsPtrOutputWithContext(context.Background())
}

func (o SQLStorageSettingsOutput) ToSQLStorageSettingsPtrOutputWithContext(ctx context.Context) SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v SQLStorageSettings) *SQLStorageSettings {
		return &v
	}).(SQLStorageSettingsPtrOutput)
}

// SQL Server default file path
func (o SQLStorageSettingsOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQLStorageSettings) *string { return v.DefaultFilePath }).(pulumi.StringPtrOutput)
}

// Logical Unit Numbers for the disks.
func (o SQLStorageSettingsOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SQLStorageSettings) []int { return v.Luns }).(pulumi.IntArrayOutput)
}

type SQLStorageSettingsPtrOutput struct{ *pulumi.OutputState }

func (SQLStorageSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SQLStorageSettings)(nil)).Elem()
}

func (o SQLStorageSettingsPtrOutput) ToSQLStorageSettingsPtrOutput() SQLStorageSettingsPtrOutput {
	return o
}

func (o SQLStorageSettingsPtrOutput) ToSQLStorageSettingsPtrOutputWithContext(ctx context.Context) SQLStorageSettingsPtrOutput {
	return o
}

func (o SQLStorageSettingsPtrOutput) Elem() SQLStorageSettingsOutput {
	return o.ApplyT(func(v *SQLStorageSettings) SQLStorageSettings { return *v }).(SQLStorageSettingsOutput)
}

// SQL Server default file path
func (o SQLStorageSettingsPtrOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQLStorageSettings) *string {
		if v == nil {
			return nil
		}
		return v.DefaultFilePath
	}).(pulumi.StringPtrOutput)
}

// Logical Unit Numbers for the disks.
func (o SQLStorageSettingsPtrOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SQLStorageSettings) []int {
		if v == nil {
			return nil
		}
		return v.Luns
	}).(pulumi.IntArrayOutput)
}

// Set disk storage settings for SQL Server.
type SQLStorageSettingsResponse struct {
	// SQL Server default file path
	DefaultFilePath *string `pulumi:"defaultFilePath"`
	// Logical Unit Numbers for the disks.
	Luns []int `pulumi:"luns"`
}

// SQLStorageSettingsResponseInput is an input type that accepts SQLStorageSettingsResponseArgs and SQLStorageSettingsResponseOutput values.
// You can construct a concrete instance of `SQLStorageSettingsResponseInput` via:
//
//          SQLStorageSettingsResponseArgs{...}
type SQLStorageSettingsResponseInput interface {
	pulumi.Input

	ToSQLStorageSettingsResponseOutput() SQLStorageSettingsResponseOutput
	ToSQLStorageSettingsResponseOutputWithContext(context.Context) SQLStorageSettingsResponseOutput
}

// Set disk storage settings for SQL Server.
type SQLStorageSettingsResponseArgs struct {
	// SQL Server default file path
	DefaultFilePath pulumi.StringPtrInput `pulumi:"defaultFilePath"`
	// Logical Unit Numbers for the disks.
	Luns pulumi.IntArrayInput `pulumi:"luns"`
}

func (SQLStorageSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SQLStorageSettingsResponse)(nil)).Elem()
}

func (i SQLStorageSettingsResponseArgs) ToSQLStorageSettingsResponseOutput() SQLStorageSettingsResponseOutput {
	return i.ToSQLStorageSettingsResponseOutputWithContext(context.Background())
}

func (i SQLStorageSettingsResponseArgs) ToSQLStorageSettingsResponseOutputWithContext(ctx context.Context) SQLStorageSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsResponseOutput)
}

func (i SQLStorageSettingsResponseArgs) ToSQLStorageSettingsResponsePtrOutput() SQLStorageSettingsResponsePtrOutput {
	return i.ToSQLStorageSettingsResponsePtrOutputWithContext(context.Background())
}

func (i SQLStorageSettingsResponseArgs) ToSQLStorageSettingsResponsePtrOutputWithContext(ctx context.Context) SQLStorageSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsResponseOutput).ToSQLStorageSettingsResponsePtrOutputWithContext(ctx)
}

// SQLStorageSettingsResponsePtrInput is an input type that accepts SQLStorageSettingsResponseArgs, SQLStorageSettingsResponsePtr and SQLStorageSettingsResponsePtrOutput values.
// You can construct a concrete instance of `SQLStorageSettingsResponsePtrInput` via:
//
//          SQLStorageSettingsResponseArgs{...}
//
//  or:
//
//          nil
type SQLStorageSettingsResponsePtrInput interface {
	pulumi.Input

	ToSQLStorageSettingsResponsePtrOutput() SQLStorageSettingsResponsePtrOutput
	ToSQLStorageSettingsResponsePtrOutputWithContext(context.Context) SQLStorageSettingsResponsePtrOutput
}

type sqlstorageSettingsResponsePtrType SQLStorageSettingsResponseArgs

func SQLStorageSettingsResponsePtr(v *SQLStorageSettingsResponseArgs) SQLStorageSettingsResponsePtrInput {
	return (*sqlstorageSettingsResponsePtrType)(v)
}

func (*sqlstorageSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SQLStorageSettingsResponse)(nil)).Elem()
}

func (i *sqlstorageSettingsResponsePtrType) ToSQLStorageSettingsResponsePtrOutput() SQLStorageSettingsResponsePtrOutput {
	return i.ToSQLStorageSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *sqlstorageSettingsResponsePtrType) ToSQLStorageSettingsResponsePtrOutputWithContext(ctx context.Context) SQLStorageSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SQLStorageSettingsResponsePtrOutput)
}

// Set disk storage settings for SQL Server.
type SQLStorageSettingsResponseOutput struct{ *pulumi.OutputState }

func (SQLStorageSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SQLStorageSettingsResponse)(nil)).Elem()
}

func (o SQLStorageSettingsResponseOutput) ToSQLStorageSettingsResponseOutput() SQLStorageSettingsResponseOutput {
	return o
}

func (o SQLStorageSettingsResponseOutput) ToSQLStorageSettingsResponseOutputWithContext(ctx context.Context) SQLStorageSettingsResponseOutput {
	return o
}

func (o SQLStorageSettingsResponseOutput) ToSQLStorageSettingsResponsePtrOutput() SQLStorageSettingsResponsePtrOutput {
	return o.ToSQLStorageSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SQLStorageSettingsResponseOutput) ToSQLStorageSettingsResponsePtrOutputWithContext(ctx context.Context) SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v SQLStorageSettingsResponse) *SQLStorageSettingsResponse {
		return &v
	}).(SQLStorageSettingsResponsePtrOutput)
}

// SQL Server default file path
func (o SQLStorageSettingsResponseOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SQLStorageSettingsResponse) *string { return v.DefaultFilePath }).(pulumi.StringPtrOutput)
}

// Logical Unit Numbers for the disks.
func (o SQLStorageSettingsResponseOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v SQLStorageSettingsResponse) []int { return v.Luns }).(pulumi.IntArrayOutput)
}

type SQLStorageSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SQLStorageSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SQLStorageSettingsResponse)(nil)).Elem()
}

func (o SQLStorageSettingsResponsePtrOutput) ToSQLStorageSettingsResponsePtrOutput() SQLStorageSettingsResponsePtrOutput {
	return o
}

func (o SQLStorageSettingsResponsePtrOutput) ToSQLStorageSettingsResponsePtrOutputWithContext(ctx context.Context) SQLStorageSettingsResponsePtrOutput {
	return o
}

func (o SQLStorageSettingsResponsePtrOutput) Elem() SQLStorageSettingsResponseOutput {
	return o.ApplyT(func(v *SQLStorageSettingsResponse) SQLStorageSettingsResponse { return *v }).(SQLStorageSettingsResponseOutput)
}

// SQL Server default file path
func (o SQLStorageSettingsResponsePtrOutput) DefaultFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SQLStorageSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DefaultFilePath
	}).(pulumi.StringPtrOutput)
}

// Logical Unit Numbers for the disks.
func (o SQLStorageSettingsResponsePtrOutput) Luns() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *SQLStorageSettingsResponse) []int {
		if v == nil {
			return nil
		}
		return v.Luns
	}).(pulumi.IntArrayOutput)
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettings struct {
	// Additional SQL feature settings.
	AdditionalFeaturesServerConfigurations *AdditionalFeaturesServerConfigurations `pulumi:"additionalFeaturesServerConfigurations"`
	// SQL connectivity type settings.
	SqlConnectivityUpdateSettings *SqlConnectivityUpdateSettings `pulumi:"sqlConnectivityUpdateSettings"`
	// SQL storage update settings.
	SqlStorageUpdateSettings *SqlStorageUpdateSettings `pulumi:"sqlStorageUpdateSettings"`
	// SQL workload type settings.
	SqlWorkloadTypeUpdateSettings *SqlWorkloadTypeUpdateSettings `pulumi:"sqlWorkloadTypeUpdateSettings"`
}

// ServerConfigurationsManagementSettingsInput is an input type that accepts ServerConfigurationsManagementSettingsArgs and ServerConfigurationsManagementSettingsOutput values.
// You can construct a concrete instance of `ServerConfigurationsManagementSettingsInput` via:
//
//          ServerConfigurationsManagementSettingsArgs{...}
type ServerConfigurationsManagementSettingsInput interface {
	pulumi.Input

	ToServerConfigurationsManagementSettingsOutput() ServerConfigurationsManagementSettingsOutput
	ToServerConfigurationsManagementSettingsOutputWithContext(context.Context) ServerConfigurationsManagementSettingsOutput
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettingsArgs struct {
	// Additional SQL feature settings.
	AdditionalFeaturesServerConfigurations AdditionalFeaturesServerConfigurationsPtrInput `pulumi:"additionalFeaturesServerConfigurations"`
	// SQL connectivity type settings.
	SqlConnectivityUpdateSettings SqlConnectivityUpdateSettingsPtrInput `pulumi:"sqlConnectivityUpdateSettings"`
	// SQL storage update settings.
	SqlStorageUpdateSettings SqlStorageUpdateSettingsPtrInput `pulumi:"sqlStorageUpdateSettings"`
	// SQL workload type settings.
	SqlWorkloadTypeUpdateSettings SqlWorkloadTypeUpdateSettingsPtrInput `pulumi:"sqlWorkloadTypeUpdateSettings"`
}

func (ServerConfigurationsManagementSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerConfigurationsManagementSettings)(nil)).Elem()
}

func (i ServerConfigurationsManagementSettingsArgs) ToServerConfigurationsManagementSettingsOutput() ServerConfigurationsManagementSettingsOutput {
	return i.ToServerConfigurationsManagementSettingsOutputWithContext(context.Background())
}

func (i ServerConfigurationsManagementSettingsArgs) ToServerConfigurationsManagementSettingsOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsOutput)
}

func (i ServerConfigurationsManagementSettingsArgs) ToServerConfigurationsManagementSettingsPtrOutput() ServerConfigurationsManagementSettingsPtrOutput {
	return i.ToServerConfigurationsManagementSettingsPtrOutputWithContext(context.Background())
}

func (i ServerConfigurationsManagementSettingsArgs) ToServerConfigurationsManagementSettingsPtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsOutput).ToServerConfigurationsManagementSettingsPtrOutputWithContext(ctx)
}

// ServerConfigurationsManagementSettingsPtrInput is an input type that accepts ServerConfigurationsManagementSettingsArgs, ServerConfigurationsManagementSettingsPtr and ServerConfigurationsManagementSettingsPtrOutput values.
// You can construct a concrete instance of `ServerConfigurationsManagementSettingsPtrInput` via:
//
//          ServerConfigurationsManagementSettingsArgs{...}
//
//  or:
//
//          nil
type ServerConfigurationsManagementSettingsPtrInput interface {
	pulumi.Input

	ToServerConfigurationsManagementSettingsPtrOutput() ServerConfigurationsManagementSettingsPtrOutput
	ToServerConfigurationsManagementSettingsPtrOutputWithContext(context.Context) ServerConfigurationsManagementSettingsPtrOutput
}

type serverConfigurationsManagementSettingsPtrType ServerConfigurationsManagementSettingsArgs

func ServerConfigurationsManagementSettingsPtr(v *ServerConfigurationsManagementSettingsArgs) ServerConfigurationsManagementSettingsPtrInput {
	return (*serverConfigurationsManagementSettingsPtrType)(v)
}

func (*serverConfigurationsManagementSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerConfigurationsManagementSettings)(nil)).Elem()
}

func (i *serverConfigurationsManagementSettingsPtrType) ToServerConfigurationsManagementSettingsPtrOutput() ServerConfigurationsManagementSettingsPtrOutput {
	return i.ToServerConfigurationsManagementSettingsPtrOutputWithContext(context.Background())
}

func (i *serverConfigurationsManagementSettingsPtrType) ToServerConfigurationsManagementSettingsPtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsPtrOutput)
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettingsOutput struct{ *pulumi.OutputState }

func (ServerConfigurationsManagementSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerConfigurationsManagementSettings)(nil)).Elem()
}

func (o ServerConfigurationsManagementSettingsOutput) ToServerConfigurationsManagementSettingsOutput() ServerConfigurationsManagementSettingsOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsOutput) ToServerConfigurationsManagementSettingsOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsOutput) ToServerConfigurationsManagementSettingsPtrOutput() ServerConfigurationsManagementSettingsPtrOutput {
	return o.ToServerConfigurationsManagementSettingsPtrOutputWithContext(context.Background())
}

func (o ServerConfigurationsManagementSettingsOutput) ToServerConfigurationsManagementSettingsPtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsPtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettings) *ServerConfigurationsManagementSettings {
		return &v
	}).(ServerConfigurationsManagementSettingsPtrOutput)
}

// Additional SQL feature settings.
func (o ServerConfigurationsManagementSettingsOutput) AdditionalFeaturesServerConfigurations() AdditionalFeaturesServerConfigurationsPtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettings) *AdditionalFeaturesServerConfigurations {
		return v.AdditionalFeaturesServerConfigurations
	}).(AdditionalFeaturesServerConfigurationsPtrOutput)
}

// SQL connectivity type settings.
func (o ServerConfigurationsManagementSettingsOutput) SqlConnectivityUpdateSettings() SqlConnectivityUpdateSettingsPtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettings) *SqlConnectivityUpdateSettings {
		return v.SqlConnectivityUpdateSettings
	}).(SqlConnectivityUpdateSettingsPtrOutput)
}

// SQL storage update settings.
func (o ServerConfigurationsManagementSettingsOutput) SqlStorageUpdateSettings() SqlStorageUpdateSettingsPtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettings) *SqlStorageUpdateSettings {
		return v.SqlStorageUpdateSettings
	}).(SqlStorageUpdateSettingsPtrOutput)
}

// SQL workload type settings.
func (o ServerConfigurationsManagementSettingsOutput) SqlWorkloadTypeUpdateSettings() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettings) *SqlWorkloadTypeUpdateSettings {
		return v.SqlWorkloadTypeUpdateSettings
	}).(SqlWorkloadTypeUpdateSettingsPtrOutput)
}

type ServerConfigurationsManagementSettingsPtrOutput struct{ *pulumi.OutputState }

func (ServerConfigurationsManagementSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerConfigurationsManagementSettings)(nil)).Elem()
}

func (o ServerConfigurationsManagementSettingsPtrOutput) ToServerConfigurationsManagementSettingsPtrOutput() ServerConfigurationsManagementSettingsPtrOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsPtrOutput) ToServerConfigurationsManagementSettingsPtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsPtrOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsPtrOutput) Elem() ServerConfigurationsManagementSettingsOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettings) ServerConfigurationsManagementSettings { return *v }).(ServerConfigurationsManagementSettingsOutput)
}

// Additional SQL feature settings.
func (o ServerConfigurationsManagementSettingsPtrOutput) AdditionalFeaturesServerConfigurations() AdditionalFeaturesServerConfigurationsPtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettings) *AdditionalFeaturesServerConfigurations {
		if v == nil {
			return nil
		}
		return v.AdditionalFeaturesServerConfigurations
	}).(AdditionalFeaturesServerConfigurationsPtrOutput)
}

// SQL connectivity type settings.
func (o ServerConfigurationsManagementSettingsPtrOutput) SqlConnectivityUpdateSettings() SqlConnectivityUpdateSettingsPtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettings) *SqlConnectivityUpdateSettings {
		if v == nil {
			return nil
		}
		return v.SqlConnectivityUpdateSettings
	}).(SqlConnectivityUpdateSettingsPtrOutput)
}

// SQL storage update settings.
func (o ServerConfigurationsManagementSettingsPtrOutput) SqlStorageUpdateSettings() SqlStorageUpdateSettingsPtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettings) *SqlStorageUpdateSettings {
		if v == nil {
			return nil
		}
		return v.SqlStorageUpdateSettings
	}).(SqlStorageUpdateSettingsPtrOutput)
}

// SQL workload type settings.
func (o ServerConfigurationsManagementSettingsPtrOutput) SqlWorkloadTypeUpdateSettings() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettings) *SqlWorkloadTypeUpdateSettings {
		if v == nil {
			return nil
		}
		return v.SqlWorkloadTypeUpdateSettings
	}).(SqlWorkloadTypeUpdateSettingsPtrOutput)
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettingsResponse struct {
	// Additional SQL feature settings.
	AdditionalFeaturesServerConfigurations *AdditionalFeaturesServerConfigurationsResponse `pulumi:"additionalFeaturesServerConfigurations"`
	// SQL connectivity type settings.
	SqlConnectivityUpdateSettings *SqlConnectivityUpdateSettingsResponse `pulumi:"sqlConnectivityUpdateSettings"`
	// SQL storage update settings.
	SqlStorageUpdateSettings *SqlStorageUpdateSettingsResponse `pulumi:"sqlStorageUpdateSettings"`
	// SQL workload type settings.
	SqlWorkloadTypeUpdateSettings *SqlWorkloadTypeUpdateSettingsResponse `pulumi:"sqlWorkloadTypeUpdateSettings"`
}

// ServerConfigurationsManagementSettingsResponseInput is an input type that accepts ServerConfigurationsManagementSettingsResponseArgs and ServerConfigurationsManagementSettingsResponseOutput values.
// You can construct a concrete instance of `ServerConfigurationsManagementSettingsResponseInput` via:
//
//          ServerConfigurationsManagementSettingsResponseArgs{...}
type ServerConfigurationsManagementSettingsResponseInput interface {
	pulumi.Input

	ToServerConfigurationsManagementSettingsResponseOutput() ServerConfigurationsManagementSettingsResponseOutput
	ToServerConfigurationsManagementSettingsResponseOutputWithContext(context.Context) ServerConfigurationsManagementSettingsResponseOutput
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettingsResponseArgs struct {
	// Additional SQL feature settings.
	AdditionalFeaturesServerConfigurations AdditionalFeaturesServerConfigurationsResponsePtrInput `pulumi:"additionalFeaturesServerConfigurations"`
	// SQL connectivity type settings.
	SqlConnectivityUpdateSettings SqlConnectivityUpdateSettingsResponsePtrInput `pulumi:"sqlConnectivityUpdateSettings"`
	// SQL storage update settings.
	SqlStorageUpdateSettings SqlStorageUpdateSettingsResponsePtrInput `pulumi:"sqlStorageUpdateSettings"`
	// SQL workload type settings.
	SqlWorkloadTypeUpdateSettings SqlWorkloadTypeUpdateSettingsResponsePtrInput `pulumi:"sqlWorkloadTypeUpdateSettings"`
}

func (ServerConfigurationsManagementSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerConfigurationsManagementSettingsResponse)(nil)).Elem()
}

func (i ServerConfigurationsManagementSettingsResponseArgs) ToServerConfigurationsManagementSettingsResponseOutput() ServerConfigurationsManagementSettingsResponseOutput {
	return i.ToServerConfigurationsManagementSettingsResponseOutputWithContext(context.Background())
}

func (i ServerConfigurationsManagementSettingsResponseArgs) ToServerConfigurationsManagementSettingsResponseOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsResponseOutput)
}

func (i ServerConfigurationsManagementSettingsResponseArgs) ToServerConfigurationsManagementSettingsResponsePtrOutput() ServerConfigurationsManagementSettingsResponsePtrOutput {
	return i.ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ServerConfigurationsManagementSettingsResponseArgs) ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsResponseOutput).ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(ctx)
}

// ServerConfigurationsManagementSettingsResponsePtrInput is an input type that accepts ServerConfigurationsManagementSettingsResponseArgs, ServerConfigurationsManagementSettingsResponsePtr and ServerConfigurationsManagementSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ServerConfigurationsManagementSettingsResponsePtrInput` via:
//
//          ServerConfigurationsManagementSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ServerConfigurationsManagementSettingsResponsePtrInput interface {
	pulumi.Input

	ToServerConfigurationsManagementSettingsResponsePtrOutput() ServerConfigurationsManagementSettingsResponsePtrOutput
	ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(context.Context) ServerConfigurationsManagementSettingsResponsePtrOutput
}

type serverConfigurationsManagementSettingsResponsePtrType ServerConfigurationsManagementSettingsResponseArgs

func ServerConfigurationsManagementSettingsResponsePtr(v *ServerConfigurationsManagementSettingsResponseArgs) ServerConfigurationsManagementSettingsResponsePtrInput {
	return (*serverConfigurationsManagementSettingsResponsePtrType)(v)
}

func (*serverConfigurationsManagementSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerConfigurationsManagementSettingsResponse)(nil)).Elem()
}

func (i *serverConfigurationsManagementSettingsResponsePtrType) ToServerConfigurationsManagementSettingsResponsePtrOutput() ServerConfigurationsManagementSettingsResponsePtrOutput {
	return i.ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *serverConfigurationsManagementSettingsResponsePtrType) ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerConfigurationsManagementSettingsResponsePtrOutput)
}

// Set the connectivity, storage and workload settings.
type ServerConfigurationsManagementSettingsResponseOutput struct{ *pulumi.OutputState }

func (ServerConfigurationsManagementSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerConfigurationsManagementSettingsResponse)(nil)).Elem()
}

func (o ServerConfigurationsManagementSettingsResponseOutput) ToServerConfigurationsManagementSettingsResponseOutput() ServerConfigurationsManagementSettingsResponseOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsResponseOutput) ToServerConfigurationsManagementSettingsResponseOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponseOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsResponseOutput) ToServerConfigurationsManagementSettingsResponsePtrOutput() ServerConfigurationsManagementSettingsResponsePtrOutput {
	return o.ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ServerConfigurationsManagementSettingsResponseOutput) ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettingsResponse) *ServerConfigurationsManagementSettingsResponse {
		return &v
	}).(ServerConfigurationsManagementSettingsResponsePtrOutput)
}

// Additional SQL feature settings.
func (o ServerConfigurationsManagementSettingsResponseOutput) AdditionalFeaturesServerConfigurations() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettingsResponse) *AdditionalFeaturesServerConfigurationsResponse {
		return v.AdditionalFeaturesServerConfigurations
	}).(AdditionalFeaturesServerConfigurationsResponsePtrOutput)
}

// SQL connectivity type settings.
func (o ServerConfigurationsManagementSettingsResponseOutput) SqlConnectivityUpdateSettings() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettingsResponse) *SqlConnectivityUpdateSettingsResponse {
		return v.SqlConnectivityUpdateSettings
	}).(SqlConnectivityUpdateSettingsResponsePtrOutput)
}

// SQL storage update settings.
func (o ServerConfigurationsManagementSettingsResponseOutput) SqlStorageUpdateSettings() SqlStorageUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettingsResponse) *SqlStorageUpdateSettingsResponse {
		return v.SqlStorageUpdateSettings
	}).(SqlStorageUpdateSettingsResponsePtrOutput)
}

// SQL workload type settings.
func (o ServerConfigurationsManagementSettingsResponseOutput) SqlWorkloadTypeUpdateSettings() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v ServerConfigurationsManagementSettingsResponse) *SqlWorkloadTypeUpdateSettingsResponse {
		return v.SqlWorkloadTypeUpdateSettings
	}).(SqlWorkloadTypeUpdateSettingsResponsePtrOutput)
}

type ServerConfigurationsManagementSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ServerConfigurationsManagementSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerConfigurationsManagementSettingsResponse)(nil)).Elem()
}

func (o ServerConfigurationsManagementSettingsResponsePtrOutput) ToServerConfigurationsManagementSettingsResponsePtrOutput() ServerConfigurationsManagementSettingsResponsePtrOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsResponsePtrOutput) ToServerConfigurationsManagementSettingsResponsePtrOutputWithContext(ctx context.Context) ServerConfigurationsManagementSettingsResponsePtrOutput {
	return o
}

func (o ServerConfigurationsManagementSettingsResponsePtrOutput) Elem() ServerConfigurationsManagementSettingsResponseOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettingsResponse) ServerConfigurationsManagementSettingsResponse {
		return *v
	}).(ServerConfigurationsManagementSettingsResponseOutput)
}

// Additional SQL feature settings.
func (o ServerConfigurationsManagementSettingsResponsePtrOutput) AdditionalFeaturesServerConfigurations() AdditionalFeaturesServerConfigurationsResponsePtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettingsResponse) *AdditionalFeaturesServerConfigurationsResponse {
		if v == nil {
			return nil
		}
		return v.AdditionalFeaturesServerConfigurations
	}).(AdditionalFeaturesServerConfigurationsResponsePtrOutput)
}

// SQL connectivity type settings.
func (o ServerConfigurationsManagementSettingsResponsePtrOutput) SqlConnectivityUpdateSettings() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettingsResponse) *SqlConnectivityUpdateSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlConnectivityUpdateSettings
	}).(SqlConnectivityUpdateSettingsResponsePtrOutput)
}

// SQL storage update settings.
func (o ServerConfigurationsManagementSettingsResponsePtrOutput) SqlStorageUpdateSettings() SqlStorageUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettingsResponse) *SqlStorageUpdateSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlStorageUpdateSettings
	}).(SqlStorageUpdateSettingsResponsePtrOutput)
}

// SQL workload type settings.
func (o ServerConfigurationsManagementSettingsResponsePtrOutput) SqlWorkloadTypeUpdateSettings() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v *ServerConfigurationsManagementSettingsResponse) *SqlWorkloadTypeUpdateSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlWorkloadTypeUpdateSettings
	}).(SqlWorkloadTypeUpdateSettingsResponsePtrOutput)
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettings struct {
	// SQL Server connectivity option.
	ConnectivityType *string `pulumi:"connectivityType"`
	// SQL Server port.
	Port *int `pulumi:"port"`
	// SQL Server sysadmin login password.
	SqlAuthUpdatePassword *string `pulumi:"sqlAuthUpdatePassword"`
	// SQL Server sysadmin login to create.
	SqlAuthUpdateUserName *string `pulumi:"sqlAuthUpdateUserName"`
}

// SqlConnectivityUpdateSettingsInput is an input type that accepts SqlConnectivityUpdateSettingsArgs and SqlConnectivityUpdateSettingsOutput values.
// You can construct a concrete instance of `SqlConnectivityUpdateSettingsInput` via:
//
//          SqlConnectivityUpdateSettingsArgs{...}
type SqlConnectivityUpdateSettingsInput interface {
	pulumi.Input

	ToSqlConnectivityUpdateSettingsOutput() SqlConnectivityUpdateSettingsOutput
	ToSqlConnectivityUpdateSettingsOutputWithContext(context.Context) SqlConnectivityUpdateSettingsOutput
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettingsArgs struct {
	// SQL Server connectivity option.
	ConnectivityType pulumi.StringPtrInput `pulumi:"connectivityType"`
	// SQL Server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// SQL Server sysadmin login password.
	SqlAuthUpdatePassword pulumi.StringPtrInput `pulumi:"sqlAuthUpdatePassword"`
	// SQL Server sysadmin login to create.
	SqlAuthUpdateUserName pulumi.StringPtrInput `pulumi:"sqlAuthUpdateUserName"`
}

func (SqlConnectivityUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectivityUpdateSettings)(nil)).Elem()
}

func (i SqlConnectivityUpdateSettingsArgs) ToSqlConnectivityUpdateSettingsOutput() SqlConnectivityUpdateSettingsOutput {
	return i.ToSqlConnectivityUpdateSettingsOutputWithContext(context.Background())
}

func (i SqlConnectivityUpdateSettingsArgs) ToSqlConnectivityUpdateSettingsOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsOutput)
}

func (i SqlConnectivityUpdateSettingsArgs) ToSqlConnectivityUpdateSettingsPtrOutput() SqlConnectivityUpdateSettingsPtrOutput {
	return i.ToSqlConnectivityUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i SqlConnectivityUpdateSettingsArgs) ToSqlConnectivityUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsOutput).ToSqlConnectivityUpdateSettingsPtrOutputWithContext(ctx)
}

// SqlConnectivityUpdateSettingsPtrInput is an input type that accepts SqlConnectivityUpdateSettingsArgs, SqlConnectivityUpdateSettingsPtr and SqlConnectivityUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `SqlConnectivityUpdateSettingsPtrInput` via:
//
//          SqlConnectivityUpdateSettingsArgs{...}
//
//  or:
//
//          nil
type SqlConnectivityUpdateSettingsPtrInput interface {
	pulumi.Input

	ToSqlConnectivityUpdateSettingsPtrOutput() SqlConnectivityUpdateSettingsPtrOutput
	ToSqlConnectivityUpdateSettingsPtrOutputWithContext(context.Context) SqlConnectivityUpdateSettingsPtrOutput
}

type sqlConnectivityUpdateSettingsPtrType SqlConnectivityUpdateSettingsArgs

func SqlConnectivityUpdateSettingsPtr(v *SqlConnectivityUpdateSettingsArgs) SqlConnectivityUpdateSettingsPtrInput {
	return (*sqlConnectivityUpdateSettingsPtrType)(v)
}

func (*sqlConnectivityUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectivityUpdateSettings)(nil)).Elem()
}

func (i *sqlConnectivityUpdateSettingsPtrType) ToSqlConnectivityUpdateSettingsPtrOutput() SqlConnectivityUpdateSettingsPtrOutput {
	return i.ToSqlConnectivityUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlConnectivityUpdateSettingsPtrType) ToSqlConnectivityUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsPtrOutput)
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettingsOutput struct{ *pulumi.OutputState }

func (SqlConnectivityUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectivityUpdateSettings)(nil)).Elem()
}

func (o SqlConnectivityUpdateSettingsOutput) ToSqlConnectivityUpdateSettingsOutput() SqlConnectivityUpdateSettingsOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsOutput) ToSqlConnectivityUpdateSettingsOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsOutput) ToSqlConnectivityUpdateSettingsPtrOutput() SqlConnectivityUpdateSettingsPtrOutput {
	return o.ToSqlConnectivityUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o SqlConnectivityUpdateSettingsOutput) ToSqlConnectivityUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettings) *SqlConnectivityUpdateSettings {
		return &v
	}).(SqlConnectivityUpdateSettingsPtrOutput)
}

// SQL Server connectivity option.
func (o SqlConnectivityUpdateSettingsOutput) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettings) *string { return v.ConnectivityType }).(pulumi.StringPtrOutput)
}

// SQL Server port.
func (o SqlConnectivityUpdateSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// SQL Server sysadmin login password.
func (o SqlConnectivityUpdateSettingsOutput) SqlAuthUpdatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettings) *string { return v.SqlAuthUpdatePassword }).(pulumi.StringPtrOutput)
}

// SQL Server sysadmin login to create.
func (o SqlConnectivityUpdateSettingsOutput) SqlAuthUpdateUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettings) *string { return v.SqlAuthUpdateUserName }).(pulumi.StringPtrOutput)
}

type SqlConnectivityUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlConnectivityUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectivityUpdateSettings)(nil)).Elem()
}

func (o SqlConnectivityUpdateSettingsPtrOutput) ToSqlConnectivityUpdateSettingsPtrOutput() SqlConnectivityUpdateSettingsPtrOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsPtrOutput) ToSqlConnectivityUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsPtrOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsPtrOutput) Elem() SqlConnectivityUpdateSettingsOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettings) SqlConnectivityUpdateSettings { return *v }).(SqlConnectivityUpdateSettingsOutput)
}

// SQL Server connectivity option.
func (o SqlConnectivityUpdateSettingsPtrOutput) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettings) *string {
		if v == nil {
			return nil
		}
		return v.ConnectivityType
	}).(pulumi.StringPtrOutput)
}

// SQL Server port.
func (o SqlConnectivityUpdateSettingsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettings) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// SQL Server sysadmin login password.
func (o SqlConnectivityUpdateSettingsPtrOutput) SqlAuthUpdatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettings) *string {
		if v == nil {
			return nil
		}
		return v.SqlAuthUpdatePassword
	}).(pulumi.StringPtrOutput)
}

// SQL Server sysadmin login to create.
func (o SqlConnectivityUpdateSettingsPtrOutput) SqlAuthUpdateUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettings) *string {
		if v == nil {
			return nil
		}
		return v.SqlAuthUpdateUserName
	}).(pulumi.StringPtrOutput)
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettingsResponse struct {
	// SQL Server connectivity option.
	ConnectivityType *string `pulumi:"connectivityType"`
	// SQL Server port.
	Port *int `pulumi:"port"`
	// SQL Server sysadmin login password.
	SqlAuthUpdatePassword *string `pulumi:"sqlAuthUpdatePassword"`
	// SQL Server sysadmin login to create.
	SqlAuthUpdateUserName *string `pulumi:"sqlAuthUpdateUserName"`
}

// SqlConnectivityUpdateSettingsResponseInput is an input type that accepts SqlConnectivityUpdateSettingsResponseArgs and SqlConnectivityUpdateSettingsResponseOutput values.
// You can construct a concrete instance of `SqlConnectivityUpdateSettingsResponseInput` via:
//
//          SqlConnectivityUpdateSettingsResponseArgs{...}
type SqlConnectivityUpdateSettingsResponseInput interface {
	pulumi.Input

	ToSqlConnectivityUpdateSettingsResponseOutput() SqlConnectivityUpdateSettingsResponseOutput
	ToSqlConnectivityUpdateSettingsResponseOutputWithContext(context.Context) SqlConnectivityUpdateSettingsResponseOutput
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettingsResponseArgs struct {
	// SQL Server connectivity option.
	ConnectivityType pulumi.StringPtrInput `pulumi:"connectivityType"`
	// SQL Server port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// SQL Server sysadmin login password.
	SqlAuthUpdatePassword pulumi.StringPtrInput `pulumi:"sqlAuthUpdatePassword"`
	// SQL Server sysadmin login to create.
	SqlAuthUpdateUserName pulumi.StringPtrInput `pulumi:"sqlAuthUpdateUserName"`
}

func (SqlConnectivityUpdateSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectivityUpdateSettingsResponse)(nil)).Elem()
}

func (i SqlConnectivityUpdateSettingsResponseArgs) ToSqlConnectivityUpdateSettingsResponseOutput() SqlConnectivityUpdateSettingsResponseOutput {
	return i.ToSqlConnectivityUpdateSettingsResponseOutputWithContext(context.Background())
}

func (i SqlConnectivityUpdateSettingsResponseArgs) ToSqlConnectivityUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsResponseOutput)
}

func (i SqlConnectivityUpdateSettingsResponseArgs) ToSqlConnectivityUpdateSettingsResponsePtrOutput() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return i.ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i SqlConnectivityUpdateSettingsResponseArgs) ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsResponseOutput).ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(ctx)
}

// SqlConnectivityUpdateSettingsResponsePtrInput is an input type that accepts SqlConnectivityUpdateSettingsResponseArgs, SqlConnectivityUpdateSettingsResponsePtr and SqlConnectivityUpdateSettingsResponsePtrOutput values.
// You can construct a concrete instance of `SqlConnectivityUpdateSettingsResponsePtrInput` via:
//
//          SqlConnectivityUpdateSettingsResponseArgs{...}
//
//  or:
//
//          nil
type SqlConnectivityUpdateSettingsResponsePtrInput interface {
	pulumi.Input

	ToSqlConnectivityUpdateSettingsResponsePtrOutput() SqlConnectivityUpdateSettingsResponsePtrOutput
	ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(context.Context) SqlConnectivityUpdateSettingsResponsePtrOutput
}

type sqlConnectivityUpdateSettingsResponsePtrType SqlConnectivityUpdateSettingsResponseArgs

func SqlConnectivityUpdateSettingsResponsePtr(v *SqlConnectivityUpdateSettingsResponseArgs) SqlConnectivityUpdateSettingsResponsePtrInput {
	return (*sqlConnectivityUpdateSettingsResponsePtrType)(v)
}

func (*sqlConnectivityUpdateSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectivityUpdateSettingsResponse)(nil)).Elem()
}

func (i *sqlConnectivityUpdateSettingsResponsePtrType) ToSqlConnectivityUpdateSettingsResponsePtrOutput() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return i.ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *sqlConnectivityUpdateSettingsResponsePtrType) ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlConnectivityUpdateSettingsResponsePtrOutput)
}

// Set the access level and network port settings for SQL Server.
type SqlConnectivityUpdateSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlConnectivityUpdateSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlConnectivityUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlConnectivityUpdateSettingsResponseOutput) ToSqlConnectivityUpdateSettingsResponseOutput() SqlConnectivityUpdateSettingsResponseOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsResponseOutput) ToSqlConnectivityUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponseOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsResponseOutput) ToSqlConnectivityUpdateSettingsResponsePtrOutput() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o.ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SqlConnectivityUpdateSettingsResponseOutput) ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettingsResponse) *SqlConnectivityUpdateSettingsResponse {
		return &v
	}).(SqlConnectivityUpdateSettingsResponsePtrOutput)
}

// SQL Server connectivity option.
func (o SqlConnectivityUpdateSettingsResponseOutput) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettingsResponse) *string { return v.ConnectivityType }).(pulumi.StringPtrOutput)
}

// SQL Server port.
func (o SqlConnectivityUpdateSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// SQL Server sysadmin login password.
func (o SqlConnectivityUpdateSettingsResponseOutput) SqlAuthUpdatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettingsResponse) *string { return v.SqlAuthUpdatePassword }).(pulumi.StringPtrOutput)
}

// SQL Server sysadmin login to create.
func (o SqlConnectivityUpdateSettingsResponseOutput) SqlAuthUpdateUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlConnectivityUpdateSettingsResponse) *string { return v.SqlAuthUpdateUserName }).(pulumi.StringPtrOutput)
}

type SqlConnectivityUpdateSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlConnectivityUpdateSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlConnectivityUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlConnectivityUpdateSettingsResponsePtrOutput) ToSqlConnectivityUpdateSettingsResponsePtrOutput() SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsResponsePtrOutput) ToSqlConnectivityUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlConnectivityUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlConnectivityUpdateSettingsResponsePtrOutput) Elem() SqlConnectivityUpdateSettingsResponseOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettingsResponse) SqlConnectivityUpdateSettingsResponse { return *v }).(SqlConnectivityUpdateSettingsResponseOutput)
}

// SQL Server connectivity option.
func (o SqlConnectivityUpdateSettingsResponsePtrOutput) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConnectivityType
	}).(pulumi.StringPtrOutput)
}

// SQL Server port.
func (o SqlConnectivityUpdateSettingsResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// SQL Server sysadmin login password.
func (o SqlConnectivityUpdateSettingsResponsePtrOutput) SqlAuthUpdatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlAuthUpdatePassword
	}).(pulumi.StringPtrOutput)
}

// SQL Server sysadmin login to create.
func (o SqlConnectivityUpdateSettingsResponsePtrOutput) SqlAuthUpdateUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlConnectivityUpdateSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlAuthUpdateUserName
	}).(pulumi.StringPtrOutput)
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettings struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType *string `pulumi:"diskConfigurationType"`
	// Virtual machine disk count.
	DiskCount *int `pulumi:"diskCount"`
	// Device id of the first disk to be updated.
	StartingDeviceId *int `pulumi:"startingDeviceId"`
}

// SqlStorageUpdateSettingsInput is an input type that accepts SqlStorageUpdateSettingsArgs and SqlStorageUpdateSettingsOutput values.
// You can construct a concrete instance of `SqlStorageUpdateSettingsInput` via:
//
//          SqlStorageUpdateSettingsArgs{...}
type SqlStorageUpdateSettingsInput interface {
	pulumi.Input

	ToSqlStorageUpdateSettingsOutput() SqlStorageUpdateSettingsOutput
	ToSqlStorageUpdateSettingsOutputWithContext(context.Context) SqlStorageUpdateSettingsOutput
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettingsArgs struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType pulumi.StringPtrInput `pulumi:"diskConfigurationType"`
	// Virtual machine disk count.
	DiskCount pulumi.IntPtrInput `pulumi:"diskCount"`
	// Device id of the first disk to be updated.
	StartingDeviceId pulumi.IntPtrInput `pulumi:"startingDeviceId"`
}

func (SqlStorageUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStorageUpdateSettings)(nil)).Elem()
}

func (i SqlStorageUpdateSettingsArgs) ToSqlStorageUpdateSettingsOutput() SqlStorageUpdateSettingsOutput {
	return i.ToSqlStorageUpdateSettingsOutputWithContext(context.Background())
}

func (i SqlStorageUpdateSettingsArgs) ToSqlStorageUpdateSettingsOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsOutput)
}

func (i SqlStorageUpdateSettingsArgs) ToSqlStorageUpdateSettingsPtrOutput() SqlStorageUpdateSettingsPtrOutput {
	return i.ToSqlStorageUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i SqlStorageUpdateSettingsArgs) ToSqlStorageUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsOutput).ToSqlStorageUpdateSettingsPtrOutputWithContext(ctx)
}

// SqlStorageUpdateSettingsPtrInput is an input type that accepts SqlStorageUpdateSettingsArgs, SqlStorageUpdateSettingsPtr and SqlStorageUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `SqlStorageUpdateSettingsPtrInput` via:
//
//          SqlStorageUpdateSettingsArgs{...}
//
//  or:
//
//          nil
type SqlStorageUpdateSettingsPtrInput interface {
	pulumi.Input

	ToSqlStorageUpdateSettingsPtrOutput() SqlStorageUpdateSettingsPtrOutput
	ToSqlStorageUpdateSettingsPtrOutputWithContext(context.Context) SqlStorageUpdateSettingsPtrOutput
}

type sqlStorageUpdateSettingsPtrType SqlStorageUpdateSettingsArgs

func SqlStorageUpdateSettingsPtr(v *SqlStorageUpdateSettingsArgs) SqlStorageUpdateSettingsPtrInput {
	return (*sqlStorageUpdateSettingsPtrType)(v)
}

func (*sqlStorageUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStorageUpdateSettings)(nil)).Elem()
}

func (i *sqlStorageUpdateSettingsPtrType) ToSqlStorageUpdateSettingsPtrOutput() SqlStorageUpdateSettingsPtrOutput {
	return i.ToSqlStorageUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlStorageUpdateSettingsPtrType) ToSqlStorageUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsPtrOutput)
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettingsOutput struct{ *pulumi.OutputState }

func (SqlStorageUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStorageUpdateSettings)(nil)).Elem()
}

func (o SqlStorageUpdateSettingsOutput) ToSqlStorageUpdateSettingsOutput() SqlStorageUpdateSettingsOutput {
	return o
}

func (o SqlStorageUpdateSettingsOutput) ToSqlStorageUpdateSettingsOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsOutput {
	return o
}

func (o SqlStorageUpdateSettingsOutput) ToSqlStorageUpdateSettingsPtrOutput() SqlStorageUpdateSettingsPtrOutput {
	return o.ToSqlStorageUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o SqlStorageUpdateSettingsOutput) ToSqlStorageUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettings) *SqlStorageUpdateSettings {
		return &v
	}).(SqlStorageUpdateSettingsPtrOutput)
}

// Disk configuration to apply to SQL Server.
func (o SqlStorageUpdateSettingsOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettings) *string { return v.DiskConfigurationType }).(pulumi.StringPtrOutput)
}

// Virtual machine disk count.
func (o SqlStorageUpdateSettingsOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettings) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

// Device id of the first disk to be updated.
func (o SqlStorageUpdateSettingsOutput) StartingDeviceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettings) *int { return v.StartingDeviceId }).(pulumi.IntPtrOutput)
}

type SqlStorageUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlStorageUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStorageUpdateSettings)(nil)).Elem()
}

func (o SqlStorageUpdateSettingsPtrOutput) ToSqlStorageUpdateSettingsPtrOutput() SqlStorageUpdateSettingsPtrOutput {
	return o
}

func (o SqlStorageUpdateSettingsPtrOutput) ToSqlStorageUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsPtrOutput {
	return o
}

func (o SqlStorageUpdateSettingsPtrOutput) Elem() SqlStorageUpdateSettingsOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettings) SqlStorageUpdateSettings { return *v }).(SqlStorageUpdateSettingsOutput)
}

// Disk configuration to apply to SQL Server.
func (o SqlStorageUpdateSettingsPtrOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettings) *string {
		if v == nil {
			return nil
		}
		return v.DiskConfigurationType
	}).(pulumi.StringPtrOutput)
}

// Virtual machine disk count.
func (o SqlStorageUpdateSettingsPtrOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettings) *int {
		if v == nil {
			return nil
		}
		return v.DiskCount
	}).(pulumi.IntPtrOutput)
}

// Device id of the first disk to be updated.
func (o SqlStorageUpdateSettingsPtrOutput) StartingDeviceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettings) *int {
		if v == nil {
			return nil
		}
		return v.StartingDeviceId
	}).(pulumi.IntPtrOutput)
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettingsResponse struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType *string `pulumi:"diskConfigurationType"`
	// Virtual machine disk count.
	DiskCount *int `pulumi:"diskCount"`
	// Device id of the first disk to be updated.
	StartingDeviceId *int `pulumi:"startingDeviceId"`
}

// SqlStorageUpdateSettingsResponseInput is an input type that accepts SqlStorageUpdateSettingsResponseArgs and SqlStorageUpdateSettingsResponseOutput values.
// You can construct a concrete instance of `SqlStorageUpdateSettingsResponseInput` via:
//
//          SqlStorageUpdateSettingsResponseArgs{...}
type SqlStorageUpdateSettingsResponseInput interface {
	pulumi.Input

	ToSqlStorageUpdateSettingsResponseOutput() SqlStorageUpdateSettingsResponseOutput
	ToSqlStorageUpdateSettingsResponseOutputWithContext(context.Context) SqlStorageUpdateSettingsResponseOutput
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettingsResponseArgs struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType pulumi.StringPtrInput `pulumi:"diskConfigurationType"`
	// Virtual machine disk count.
	DiskCount pulumi.IntPtrInput `pulumi:"diskCount"`
	// Device id of the first disk to be updated.
	StartingDeviceId pulumi.IntPtrInput `pulumi:"startingDeviceId"`
}

func (SqlStorageUpdateSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStorageUpdateSettingsResponse)(nil)).Elem()
}

func (i SqlStorageUpdateSettingsResponseArgs) ToSqlStorageUpdateSettingsResponseOutput() SqlStorageUpdateSettingsResponseOutput {
	return i.ToSqlStorageUpdateSettingsResponseOutputWithContext(context.Background())
}

func (i SqlStorageUpdateSettingsResponseArgs) ToSqlStorageUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsResponseOutput)
}

func (i SqlStorageUpdateSettingsResponseArgs) ToSqlStorageUpdateSettingsResponsePtrOutput() SqlStorageUpdateSettingsResponsePtrOutput {
	return i.ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i SqlStorageUpdateSettingsResponseArgs) ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsResponseOutput).ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(ctx)
}

// SqlStorageUpdateSettingsResponsePtrInput is an input type that accepts SqlStorageUpdateSettingsResponseArgs, SqlStorageUpdateSettingsResponsePtr and SqlStorageUpdateSettingsResponsePtrOutput values.
// You can construct a concrete instance of `SqlStorageUpdateSettingsResponsePtrInput` via:
//
//          SqlStorageUpdateSettingsResponseArgs{...}
//
//  or:
//
//          nil
type SqlStorageUpdateSettingsResponsePtrInput interface {
	pulumi.Input

	ToSqlStorageUpdateSettingsResponsePtrOutput() SqlStorageUpdateSettingsResponsePtrOutput
	ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(context.Context) SqlStorageUpdateSettingsResponsePtrOutput
}

type sqlStorageUpdateSettingsResponsePtrType SqlStorageUpdateSettingsResponseArgs

func SqlStorageUpdateSettingsResponsePtr(v *SqlStorageUpdateSettingsResponseArgs) SqlStorageUpdateSettingsResponsePtrInput {
	return (*sqlStorageUpdateSettingsResponsePtrType)(v)
}

func (*sqlStorageUpdateSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStorageUpdateSettingsResponse)(nil)).Elem()
}

func (i *sqlStorageUpdateSettingsResponsePtrType) ToSqlStorageUpdateSettingsResponsePtrOutput() SqlStorageUpdateSettingsResponsePtrOutput {
	return i.ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *sqlStorageUpdateSettingsResponsePtrType) ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStorageUpdateSettingsResponsePtrOutput)
}

// Set disk storage settings for SQL Server.
type SqlStorageUpdateSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlStorageUpdateSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStorageUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlStorageUpdateSettingsResponseOutput) ToSqlStorageUpdateSettingsResponseOutput() SqlStorageUpdateSettingsResponseOutput {
	return o
}

func (o SqlStorageUpdateSettingsResponseOutput) ToSqlStorageUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponseOutput {
	return o
}

func (o SqlStorageUpdateSettingsResponseOutput) ToSqlStorageUpdateSettingsResponsePtrOutput() SqlStorageUpdateSettingsResponsePtrOutput {
	return o.ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SqlStorageUpdateSettingsResponseOutput) ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettingsResponse) *SqlStorageUpdateSettingsResponse {
		return &v
	}).(SqlStorageUpdateSettingsResponsePtrOutput)
}

// Disk configuration to apply to SQL Server.
func (o SqlStorageUpdateSettingsResponseOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettingsResponse) *string { return v.DiskConfigurationType }).(pulumi.StringPtrOutput)
}

// Virtual machine disk count.
func (o SqlStorageUpdateSettingsResponseOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettingsResponse) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

// Device id of the first disk to be updated.
func (o SqlStorageUpdateSettingsResponseOutput) StartingDeviceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlStorageUpdateSettingsResponse) *int { return v.StartingDeviceId }).(pulumi.IntPtrOutput)
}

type SqlStorageUpdateSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlStorageUpdateSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStorageUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlStorageUpdateSettingsResponsePtrOutput) ToSqlStorageUpdateSettingsResponsePtrOutput() SqlStorageUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlStorageUpdateSettingsResponsePtrOutput) ToSqlStorageUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlStorageUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlStorageUpdateSettingsResponsePtrOutput) Elem() SqlStorageUpdateSettingsResponseOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettingsResponse) SqlStorageUpdateSettingsResponse { return *v }).(SqlStorageUpdateSettingsResponseOutput)
}

// Disk configuration to apply to SQL Server.
func (o SqlStorageUpdateSettingsResponsePtrOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskConfigurationType
	}).(pulumi.StringPtrOutput)
}

// Virtual machine disk count.
func (o SqlStorageUpdateSettingsResponsePtrOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.DiskCount
	}).(pulumi.IntPtrOutput)
}

// Device id of the first disk to be updated.
func (o SqlStorageUpdateSettingsResponsePtrOutput) StartingDeviceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlStorageUpdateSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.StartingDeviceId
	}).(pulumi.IntPtrOutput)
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettings struct {
	// SQL Server workload type.
	SqlWorkloadType *string `pulumi:"sqlWorkloadType"`
}

// SqlWorkloadTypeUpdateSettingsInput is an input type that accepts SqlWorkloadTypeUpdateSettingsArgs and SqlWorkloadTypeUpdateSettingsOutput values.
// You can construct a concrete instance of `SqlWorkloadTypeUpdateSettingsInput` via:
//
//          SqlWorkloadTypeUpdateSettingsArgs{...}
type SqlWorkloadTypeUpdateSettingsInput interface {
	pulumi.Input

	ToSqlWorkloadTypeUpdateSettingsOutput() SqlWorkloadTypeUpdateSettingsOutput
	ToSqlWorkloadTypeUpdateSettingsOutputWithContext(context.Context) SqlWorkloadTypeUpdateSettingsOutput
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettingsArgs struct {
	// SQL Server workload type.
	SqlWorkloadType pulumi.StringPtrInput `pulumi:"sqlWorkloadType"`
}

func (SqlWorkloadTypeUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlWorkloadTypeUpdateSettings)(nil)).Elem()
}

func (i SqlWorkloadTypeUpdateSettingsArgs) ToSqlWorkloadTypeUpdateSettingsOutput() SqlWorkloadTypeUpdateSettingsOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsOutputWithContext(context.Background())
}

func (i SqlWorkloadTypeUpdateSettingsArgs) ToSqlWorkloadTypeUpdateSettingsOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsOutput)
}

func (i SqlWorkloadTypeUpdateSettingsArgs) ToSqlWorkloadTypeUpdateSettingsPtrOutput() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i SqlWorkloadTypeUpdateSettingsArgs) ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsOutput).ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(ctx)
}

// SqlWorkloadTypeUpdateSettingsPtrInput is an input type that accepts SqlWorkloadTypeUpdateSettingsArgs, SqlWorkloadTypeUpdateSettingsPtr and SqlWorkloadTypeUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `SqlWorkloadTypeUpdateSettingsPtrInput` via:
//
//          SqlWorkloadTypeUpdateSettingsArgs{...}
//
//  or:
//
//          nil
type SqlWorkloadTypeUpdateSettingsPtrInput interface {
	pulumi.Input

	ToSqlWorkloadTypeUpdateSettingsPtrOutput() SqlWorkloadTypeUpdateSettingsPtrOutput
	ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(context.Context) SqlWorkloadTypeUpdateSettingsPtrOutput
}

type sqlWorkloadTypeUpdateSettingsPtrType SqlWorkloadTypeUpdateSettingsArgs

func SqlWorkloadTypeUpdateSettingsPtr(v *SqlWorkloadTypeUpdateSettingsArgs) SqlWorkloadTypeUpdateSettingsPtrInput {
	return (*sqlWorkloadTypeUpdateSettingsPtrType)(v)
}

func (*sqlWorkloadTypeUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlWorkloadTypeUpdateSettings)(nil)).Elem()
}

func (i *sqlWorkloadTypeUpdateSettingsPtrType) ToSqlWorkloadTypeUpdateSettingsPtrOutput() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlWorkloadTypeUpdateSettingsPtrType) ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsPtrOutput)
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettingsOutput struct{ *pulumi.OutputState }

func (SqlWorkloadTypeUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlWorkloadTypeUpdateSettings)(nil)).Elem()
}

func (o SqlWorkloadTypeUpdateSettingsOutput) ToSqlWorkloadTypeUpdateSettingsOutput() SqlWorkloadTypeUpdateSettingsOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsOutput) ToSqlWorkloadTypeUpdateSettingsOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsOutput) ToSqlWorkloadTypeUpdateSettingsPtrOutput() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o.ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o SqlWorkloadTypeUpdateSettingsOutput) ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o.ApplyT(func(v SqlWorkloadTypeUpdateSettings) *SqlWorkloadTypeUpdateSettings {
		return &v
	}).(SqlWorkloadTypeUpdateSettingsPtrOutput)
}

// SQL Server workload type.
func (o SqlWorkloadTypeUpdateSettingsOutput) SqlWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlWorkloadTypeUpdateSettings) *string { return v.SqlWorkloadType }).(pulumi.StringPtrOutput)
}

type SqlWorkloadTypeUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlWorkloadTypeUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlWorkloadTypeUpdateSettings)(nil)).Elem()
}

func (o SqlWorkloadTypeUpdateSettingsPtrOutput) ToSqlWorkloadTypeUpdateSettingsPtrOutput() SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsPtrOutput) ToSqlWorkloadTypeUpdateSettingsPtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsPtrOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsPtrOutput) Elem() SqlWorkloadTypeUpdateSettingsOutput {
	return o.ApplyT(func(v *SqlWorkloadTypeUpdateSettings) SqlWorkloadTypeUpdateSettings { return *v }).(SqlWorkloadTypeUpdateSettingsOutput)
}

// SQL Server workload type.
func (o SqlWorkloadTypeUpdateSettingsPtrOutput) SqlWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlWorkloadTypeUpdateSettings) *string {
		if v == nil {
			return nil
		}
		return v.SqlWorkloadType
	}).(pulumi.StringPtrOutput)
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettingsResponse struct {
	// SQL Server workload type.
	SqlWorkloadType *string `pulumi:"sqlWorkloadType"`
}

// SqlWorkloadTypeUpdateSettingsResponseInput is an input type that accepts SqlWorkloadTypeUpdateSettingsResponseArgs and SqlWorkloadTypeUpdateSettingsResponseOutput values.
// You can construct a concrete instance of `SqlWorkloadTypeUpdateSettingsResponseInput` via:
//
//          SqlWorkloadTypeUpdateSettingsResponseArgs{...}
type SqlWorkloadTypeUpdateSettingsResponseInput interface {
	pulumi.Input

	ToSqlWorkloadTypeUpdateSettingsResponseOutput() SqlWorkloadTypeUpdateSettingsResponseOutput
	ToSqlWorkloadTypeUpdateSettingsResponseOutputWithContext(context.Context) SqlWorkloadTypeUpdateSettingsResponseOutput
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettingsResponseArgs struct {
	// SQL Server workload type.
	SqlWorkloadType pulumi.StringPtrInput `pulumi:"sqlWorkloadType"`
}

func (SqlWorkloadTypeUpdateSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlWorkloadTypeUpdateSettingsResponse)(nil)).Elem()
}

func (i SqlWorkloadTypeUpdateSettingsResponseArgs) ToSqlWorkloadTypeUpdateSettingsResponseOutput() SqlWorkloadTypeUpdateSettingsResponseOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsResponseOutputWithContext(context.Background())
}

func (i SqlWorkloadTypeUpdateSettingsResponseArgs) ToSqlWorkloadTypeUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsResponseOutput)
}

func (i SqlWorkloadTypeUpdateSettingsResponseArgs) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutput() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i SqlWorkloadTypeUpdateSettingsResponseArgs) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsResponseOutput).ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(ctx)
}

// SqlWorkloadTypeUpdateSettingsResponsePtrInput is an input type that accepts SqlWorkloadTypeUpdateSettingsResponseArgs, SqlWorkloadTypeUpdateSettingsResponsePtr and SqlWorkloadTypeUpdateSettingsResponsePtrOutput values.
// You can construct a concrete instance of `SqlWorkloadTypeUpdateSettingsResponsePtrInput` via:
//
//          SqlWorkloadTypeUpdateSettingsResponseArgs{...}
//
//  or:
//
//          nil
type SqlWorkloadTypeUpdateSettingsResponsePtrInput interface {
	pulumi.Input

	ToSqlWorkloadTypeUpdateSettingsResponsePtrOutput() SqlWorkloadTypeUpdateSettingsResponsePtrOutput
	ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(context.Context) SqlWorkloadTypeUpdateSettingsResponsePtrOutput
}

type sqlWorkloadTypeUpdateSettingsResponsePtrType SqlWorkloadTypeUpdateSettingsResponseArgs

func SqlWorkloadTypeUpdateSettingsResponsePtr(v *SqlWorkloadTypeUpdateSettingsResponseArgs) SqlWorkloadTypeUpdateSettingsResponsePtrInput {
	return (*sqlWorkloadTypeUpdateSettingsResponsePtrType)(v)
}

func (*sqlWorkloadTypeUpdateSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlWorkloadTypeUpdateSettingsResponse)(nil)).Elem()
}

func (i *sqlWorkloadTypeUpdateSettingsResponsePtrType) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutput() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return i.ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *sqlWorkloadTypeUpdateSettingsResponsePtrType) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlWorkloadTypeUpdateSettingsResponsePtrOutput)
}

// Set workload type to optimize storage for SQL Server.
type SqlWorkloadTypeUpdateSettingsResponseOutput struct{ *pulumi.OutputState }

func (SqlWorkloadTypeUpdateSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlWorkloadTypeUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlWorkloadTypeUpdateSettingsResponseOutput) ToSqlWorkloadTypeUpdateSettingsResponseOutput() SqlWorkloadTypeUpdateSettingsResponseOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsResponseOutput) ToSqlWorkloadTypeUpdateSettingsResponseOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponseOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsResponseOutput) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutput() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o.ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(context.Background())
}

func (o SqlWorkloadTypeUpdateSettingsResponseOutput) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlWorkloadTypeUpdateSettingsResponse) *SqlWorkloadTypeUpdateSettingsResponse {
		return &v
	}).(SqlWorkloadTypeUpdateSettingsResponsePtrOutput)
}

// SQL Server workload type.
func (o SqlWorkloadTypeUpdateSettingsResponseOutput) SqlWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlWorkloadTypeUpdateSettingsResponse) *string { return v.SqlWorkloadType }).(pulumi.StringPtrOutput)
}

type SqlWorkloadTypeUpdateSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (SqlWorkloadTypeUpdateSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlWorkloadTypeUpdateSettingsResponse)(nil)).Elem()
}

func (o SqlWorkloadTypeUpdateSettingsResponsePtrOutput) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutput() SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsResponsePtrOutput) ToSqlWorkloadTypeUpdateSettingsResponsePtrOutputWithContext(ctx context.Context) SqlWorkloadTypeUpdateSettingsResponsePtrOutput {
	return o
}

func (o SqlWorkloadTypeUpdateSettingsResponsePtrOutput) Elem() SqlWorkloadTypeUpdateSettingsResponseOutput {
	return o.ApplyT(func(v *SqlWorkloadTypeUpdateSettingsResponse) SqlWorkloadTypeUpdateSettingsResponse { return *v }).(SqlWorkloadTypeUpdateSettingsResponseOutput)
}

// SQL Server workload type.
func (o SqlWorkloadTypeUpdateSettingsResponsePtrOutput) SqlWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlWorkloadTypeUpdateSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlWorkloadType
	}).(pulumi.StringPtrOutput)
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettings struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType *string `pulumi:"diskConfigurationType"`
	// SQL Server Data Storage Settings.
	SqlDataSettings *SQLStorageSettings `pulumi:"sqlDataSettings"`
	// SQL Server Log Storage Settings.
	SqlLogSettings *SQLStorageSettings `pulumi:"sqlLogSettings"`
	// SQL Server TempDb Storage Settings.
	SqlTempDbSettings *SQLStorageSettings `pulumi:"sqlTempDbSettings"`
	// Storage workload type.
	StorageWorkloadType *string `pulumi:"storageWorkloadType"`
}

// StorageConfigurationSettingsInput is an input type that accepts StorageConfigurationSettingsArgs and StorageConfigurationSettingsOutput values.
// You can construct a concrete instance of `StorageConfigurationSettingsInput` via:
//
//          StorageConfigurationSettingsArgs{...}
type StorageConfigurationSettingsInput interface {
	pulumi.Input

	ToStorageConfigurationSettingsOutput() StorageConfigurationSettingsOutput
	ToStorageConfigurationSettingsOutputWithContext(context.Context) StorageConfigurationSettingsOutput
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettingsArgs struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType pulumi.StringPtrInput `pulumi:"diskConfigurationType"`
	// SQL Server Data Storage Settings.
	SqlDataSettings SQLStorageSettingsPtrInput `pulumi:"sqlDataSettings"`
	// SQL Server Log Storage Settings.
	SqlLogSettings SQLStorageSettingsPtrInput `pulumi:"sqlLogSettings"`
	// SQL Server TempDb Storage Settings.
	SqlTempDbSettings SQLStorageSettingsPtrInput `pulumi:"sqlTempDbSettings"`
	// Storage workload type.
	StorageWorkloadType pulumi.StringPtrInput `pulumi:"storageWorkloadType"`
}

func (StorageConfigurationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageConfigurationSettings)(nil)).Elem()
}

func (i StorageConfigurationSettingsArgs) ToStorageConfigurationSettingsOutput() StorageConfigurationSettingsOutput {
	return i.ToStorageConfigurationSettingsOutputWithContext(context.Background())
}

func (i StorageConfigurationSettingsArgs) ToStorageConfigurationSettingsOutputWithContext(ctx context.Context) StorageConfigurationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsOutput)
}

func (i StorageConfigurationSettingsArgs) ToStorageConfigurationSettingsPtrOutput() StorageConfigurationSettingsPtrOutput {
	return i.ToStorageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i StorageConfigurationSettingsArgs) ToStorageConfigurationSettingsPtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsOutput).ToStorageConfigurationSettingsPtrOutputWithContext(ctx)
}

// StorageConfigurationSettingsPtrInput is an input type that accepts StorageConfigurationSettingsArgs, StorageConfigurationSettingsPtr and StorageConfigurationSettingsPtrOutput values.
// You can construct a concrete instance of `StorageConfigurationSettingsPtrInput` via:
//
//          StorageConfigurationSettingsArgs{...}
//
//  or:
//
//          nil
type StorageConfigurationSettingsPtrInput interface {
	pulumi.Input

	ToStorageConfigurationSettingsPtrOutput() StorageConfigurationSettingsPtrOutput
	ToStorageConfigurationSettingsPtrOutputWithContext(context.Context) StorageConfigurationSettingsPtrOutput
}

type storageConfigurationSettingsPtrType StorageConfigurationSettingsArgs

func StorageConfigurationSettingsPtr(v *StorageConfigurationSettingsArgs) StorageConfigurationSettingsPtrInput {
	return (*storageConfigurationSettingsPtrType)(v)
}

func (*storageConfigurationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageConfigurationSettings)(nil)).Elem()
}

func (i *storageConfigurationSettingsPtrType) ToStorageConfigurationSettingsPtrOutput() StorageConfigurationSettingsPtrOutput {
	return i.ToStorageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (i *storageConfigurationSettingsPtrType) ToStorageConfigurationSettingsPtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsPtrOutput)
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettingsOutput struct{ *pulumi.OutputState }

func (StorageConfigurationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageConfigurationSettings)(nil)).Elem()
}

func (o StorageConfigurationSettingsOutput) ToStorageConfigurationSettingsOutput() StorageConfigurationSettingsOutput {
	return o
}

func (o StorageConfigurationSettingsOutput) ToStorageConfigurationSettingsOutputWithContext(ctx context.Context) StorageConfigurationSettingsOutput {
	return o
}

func (o StorageConfigurationSettingsOutput) ToStorageConfigurationSettingsPtrOutput() StorageConfigurationSettingsPtrOutput {
	return o.ToStorageConfigurationSettingsPtrOutputWithContext(context.Background())
}

func (o StorageConfigurationSettingsOutput) ToStorageConfigurationSettingsPtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *StorageConfigurationSettings {
		return &v
	}).(StorageConfigurationSettingsPtrOutput)
}

// Disk configuration to apply to SQL Server.
func (o StorageConfigurationSettingsOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *string { return v.DiskConfigurationType }).(pulumi.StringPtrOutput)
}

// SQL Server Data Storage Settings.
func (o StorageConfigurationSettingsOutput) SqlDataSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *SQLStorageSettings { return v.SqlDataSettings }).(SQLStorageSettingsPtrOutput)
}

// SQL Server Log Storage Settings.
func (o StorageConfigurationSettingsOutput) SqlLogSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *SQLStorageSettings { return v.SqlLogSettings }).(SQLStorageSettingsPtrOutput)
}

// SQL Server TempDb Storage Settings.
func (o StorageConfigurationSettingsOutput) SqlTempDbSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *SQLStorageSettings { return v.SqlTempDbSettings }).(SQLStorageSettingsPtrOutput)
}

// Storage workload type.
func (o StorageConfigurationSettingsOutput) StorageWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettings) *string { return v.StorageWorkloadType }).(pulumi.StringPtrOutput)
}

type StorageConfigurationSettingsPtrOutput struct{ *pulumi.OutputState }

func (StorageConfigurationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageConfigurationSettings)(nil)).Elem()
}

func (o StorageConfigurationSettingsPtrOutput) ToStorageConfigurationSettingsPtrOutput() StorageConfigurationSettingsPtrOutput {
	return o
}

func (o StorageConfigurationSettingsPtrOutput) ToStorageConfigurationSettingsPtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsPtrOutput {
	return o
}

func (o StorageConfigurationSettingsPtrOutput) Elem() StorageConfigurationSettingsOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) StorageConfigurationSettings { return *v }).(StorageConfigurationSettingsOutput)
}

// Disk configuration to apply to SQL Server.
func (o StorageConfigurationSettingsPtrOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return v.DiskConfigurationType
	}).(pulumi.StringPtrOutput)
}

// SQL Server Data Storage Settings.
func (o StorageConfigurationSettingsPtrOutput) SqlDataSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) *SQLStorageSettings {
		if v == nil {
			return nil
		}
		return v.SqlDataSettings
	}).(SQLStorageSettingsPtrOutput)
}

// SQL Server Log Storage Settings.
func (o StorageConfigurationSettingsPtrOutput) SqlLogSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) *SQLStorageSettings {
		if v == nil {
			return nil
		}
		return v.SqlLogSettings
	}).(SQLStorageSettingsPtrOutput)
}

// SQL Server TempDb Storage Settings.
func (o StorageConfigurationSettingsPtrOutput) SqlTempDbSettings() SQLStorageSettingsPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) *SQLStorageSettings {
		if v == nil {
			return nil
		}
		return v.SqlTempDbSettings
	}).(SQLStorageSettingsPtrOutput)
}

// Storage workload type.
func (o StorageConfigurationSettingsPtrOutput) StorageWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettings) *string {
		if v == nil {
			return nil
		}
		return v.StorageWorkloadType
	}).(pulumi.StringPtrOutput)
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettingsResponse struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType *string `pulumi:"diskConfigurationType"`
	// SQL Server Data Storage Settings.
	SqlDataSettings *SQLStorageSettingsResponse `pulumi:"sqlDataSettings"`
	// SQL Server Log Storage Settings.
	SqlLogSettings *SQLStorageSettingsResponse `pulumi:"sqlLogSettings"`
	// SQL Server TempDb Storage Settings.
	SqlTempDbSettings *SQLStorageSettingsResponse `pulumi:"sqlTempDbSettings"`
	// Storage workload type.
	StorageWorkloadType *string `pulumi:"storageWorkloadType"`
}

// StorageConfigurationSettingsResponseInput is an input type that accepts StorageConfigurationSettingsResponseArgs and StorageConfigurationSettingsResponseOutput values.
// You can construct a concrete instance of `StorageConfigurationSettingsResponseInput` via:
//
//          StorageConfigurationSettingsResponseArgs{...}
type StorageConfigurationSettingsResponseInput interface {
	pulumi.Input

	ToStorageConfigurationSettingsResponseOutput() StorageConfigurationSettingsResponseOutput
	ToStorageConfigurationSettingsResponseOutputWithContext(context.Context) StorageConfigurationSettingsResponseOutput
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettingsResponseArgs struct {
	// Disk configuration to apply to SQL Server.
	DiskConfigurationType pulumi.StringPtrInput `pulumi:"diskConfigurationType"`
	// SQL Server Data Storage Settings.
	SqlDataSettings SQLStorageSettingsResponsePtrInput `pulumi:"sqlDataSettings"`
	// SQL Server Log Storage Settings.
	SqlLogSettings SQLStorageSettingsResponsePtrInput `pulumi:"sqlLogSettings"`
	// SQL Server TempDb Storage Settings.
	SqlTempDbSettings SQLStorageSettingsResponsePtrInput `pulumi:"sqlTempDbSettings"`
	// Storage workload type.
	StorageWorkloadType pulumi.StringPtrInput `pulumi:"storageWorkloadType"`
}

func (StorageConfigurationSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageConfigurationSettingsResponse)(nil)).Elem()
}

func (i StorageConfigurationSettingsResponseArgs) ToStorageConfigurationSettingsResponseOutput() StorageConfigurationSettingsResponseOutput {
	return i.ToStorageConfigurationSettingsResponseOutputWithContext(context.Background())
}

func (i StorageConfigurationSettingsResponseArgs) ToStorageConfigurationSettingsResponseOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsResponseOutput)
}

func (i StorageConfigurationSettingsResponseArgs) ToStorageConfigurationSettingsResponsePtrOutput() StorageConfigurationSettingsResponsePtrOutput {
	return i.ToStorageConfigurationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i StorageConfigurationSettingsResponseArgs) ToStorageConfigurationSettingsResponsePtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsResponseOutput).ToStorageConfigurationSettingsResponsePtrOutputWithContext(ctx)
}

// StorageConfigurationSettingsResponsePtrInput is an input type that accepts StorageConfigurationSettingsResponseArgs, StorageConfigurationSettingsResponsePtr and StorageConfigurationSettingsResponsePtrOutput values.
// You can construct a concrete instance of `StorageConfigurationSettingsResponsePtrInput` via:
//
//          StorageConfigurationSettingsResponseArgs{...}
//
//  or:
//
//          nil
type StorageConfigurationSettingsResponsePtrInput interface {
	pulumi.Input

	ToStorageConfigurationSettingsResponsePtrOutput() StorageConfigurationSettingsResponsePtrOutput
	ToStorageConfigurationSettingsResponsePtrOutputWithContext(context.Context) StorageConfigurationSettingsResponsePtrOutput
}

type storageConfigurationSettingsResponsePtrType StorageConfigurationSettingsResponseArgs

func StorageConfigurationSettingsResponsePtr(v *StorageConfigurationSettingsResponseArgs) StorageConfigurationSettingsResponsePtrInput {
	return (*storageConfigurationSettingsResponsePtrType)(v)
}

func (*storageConfigurationSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageConfigurationSettingsResponse)(nil)).Elem()
}

func (i *storageConfigurationSettingsResponsePtrType) ToStorageConfigurationSettingsResponsePtrOutput() StorageConfigurationSettingsResponsePtrOutput {
	return i.ToStorageConfigurationSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *storageConfigurationSettingsResponsePtrType) ToStorageConfigurationSettingsResponsePtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageConfigurationSettingsResponsePtrOutput)
}

// Storage Configurations for SQL Data, Log and TempDb.
type StorageConfigurationSettingsResponseOutput struct{ *pulumi.OutputState }

func (StorageConfigurationSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageConfigurationSettingsResponse)(nil)).Elem()
}

func (o StorageConfigurationSettingsResponseOutput) ToStorageConfigurationSettingsResponseOutput() StorageConfigurationSettingsResponseOutput {
	return o
}

func (o StorageConfigurationSettingsResponseOutput) ToStorageConfigurationSettingsResponseOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponseOutput {
	return o
}

func (o StorageConfigurationSettingsResponseOutput) ToStorageConfigurationSettingsResponsePtrOutput() StorageConfigurationSettingsResponsePtrOutput {
	return o.ToStorageConfigurationSettingsResponsePtrOutputWithContext(context.Background())
}

func (o StorageConfigurationSettingsResponseOutput) ToStorageConfigurationSettingsResponsePtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponsePtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *StorageConfigurationSettingsResponse {
		return &v
	}).(StorageConfigurationSettingsResponsePtrOutput)
}

// Disk configuration to apply to SQL Server.
func (o StorageConfigurationSettingsResponseOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *string { return v.DiskConfigurationType }).(pulumi.StringPtrOutput)
}

// SQL Server Data Storage Settings.
func (o StorageConfigurationSettingsResponseOutput) SqlDataSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse { return v.SqlDataSettings }).(SQLStorageSettingsResponsePtrOutput)
}

// SQL Server Log Storage Settings.
func (o StorageConfigurationSettingsResponseOutput) SqlLogSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse { return v.SqlLogSettings }).(SQLStorageSettingsResponsePtrOutput)
}

// SQL Server TempDb Storage Settings.
func (o StorageConfigurationSettingsResponseOutput) SqlTempDbSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse { return v.SqlTempDbSettings }).(SQLStorageSettingsResponsePtrOutput)
}

// Storage workload type.
func (o StorageConfigurationSettingsResponseOutput) StorageWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageConfigurationSettingsResponse) *string { return v.StorageWorkloadType }).(pulumi.StringPtrOutput)
}

type StorageConfigurationSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (StorageConfigurationSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageConfigurationSettingsResponse)(nil)).Elem()
}

func (o StorageConfigurationSettingsResponsePtrOutput) ToStorageConfigurationSettingsResponsePtrOutput() StorageConfigurationSettingsResponsePtrOutput {
	return o
}

func (o StorageConfigurationSettingsResponsePtrOutput) ToStorageConfigurationSettingsResponsePtrOutputWithContext(ctx context.Context) StorageConfigurationSettingsResponsePtrOutput {
	return o
}

func (o StorageConfigurationSettingsResponsePtrOutput) Elem() StorageConfigurationSettingsResponseOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) StorageConfigurationSettingsResponse { return *v }).(StorageConfigurationSettingsResponseOutput)
}

// Disk configuration to apply to SQL Server.
func (o StorageConfigurationSettingsResponsePtrOutput) DiskConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DiskConfigurationType
	}).(pulumi.StringPtrOutput)
}

// SQL Server Data Storage Settings.
func (o StorageConfigurationSettingsResponsePtrOutput) SqlDataSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlDataSettings
	}).(SQLStorageSettingsResponsePtrOutput)
}

// SQL Server Log Storage Settings.
func (o StorageConfigurationSettingsResponsePtrOutput) SqlLogSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlLogSettings
	}).(SQLStorageSettingsResponsePtrOutput)
}

// SQL Server TempDb Storage Settings.
func (o StorageConfigurationSettingsResponsePtrOutput) SqlTempDbSettings() SQLStorageSettingsResponsePtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) *SQLStorageSettingsResponse {
		if v == nil {
			return nil
		}
		return v.SqlTempDbSettings
	}).(SQLStorageSettingsResponsePtrOutput)
}

// Storage workload type.
func (o StorageConfigurationSettingsResponsePtrOutput) StorageWorkloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageConfigurationSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageWorkloadType
	}).(pulumi.StringPtrOutput)
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentials struct {
	// Cluster bootstrap account password.
	ClusterBootstrapAccountPassword *string `pulumi:"clusterBootstrapAccountPassword"`
	// Cluster operator account password.
	ClusterOperatorAccountPassword *string `pulumi:"clusterOperatorAccountPassword"`
	// SQL service account password.
	SqlServiceAccountPassword *string `pulumi:"sqlServiceAccountPassword"`
}

// WsfcDomainCredentialsInput is an input type that accepts WsfcDomainCredentialsArgs and WsfcDomainCredentialsOutput values.
// You can construct a concrete instance of `WsfcDomainCredentialsInput` via:
//
//          WsfcDomainCredentialsArgs{...}
type WsfcDomainCredentialsInput interface {
	pulumi.Input

	ToWsfcDomainCredentialsOutput() WsfcDomainCredentialsOutput
	ToWsfcDomainCredentialsOutputWithContext(context.Context) WsfcDomainCredentialsOutput
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentialsArgs struct {
	// Cluster bootstrap account password.
	ClusterBootstrapAccountPassword pulumi.StringPtrInput `pulumi:"clusterBootstrapAccountPassword"`
	// Cluster operator account password.
	ClusterOperatorAccountPassword pulumi.StringPtrInput `pulumi:"clusterOperatorAccountPassword"`
	// SQL service account password.
	SqlServiceAccountPassword pulumi.StringPtrInput `pulumi:"sqlServiceAccountPassword"`
}

func (WsfcDomainCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainCredentials)(nil)).Elem()
}

func (i WsfcDomainCredentialsArgs) ToWsfcDomainCredentialsOutput() WsfcDomainCredentialsOutput {
	return i.ToWsfcDomainCredentialsOutputWithContext(context.Background())
}

func (i WsfcDomainCredentialsArgs) ToWsfcDomainCredentialsOutputWithContext(ctx context.Context) WsfcDomainCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsOutput)
}

func (i WsfcDomainCredentialsArgs) ToWsfcDomainCredentialsPtrOutput() WsfcDomainCredentialsPtrOutput {
	return i.ToWsfcDomainCredentialsPtrOutputWithContext(context.Background())
}

func (i WsfcDomainCredentialsArgs) ToWsfcDomainCredentialsPtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsOutput).ToWsfcDomainCredentialsPtrOutputWithContext(ctx)
}

// WsfcDomainCredentialsPtrInput is an input type that accepts WsfcDomainCredentialsArgs, WsfcDomainCredentialsPtr and WsfcDomainCredentialsPtrOutput values.
// You can construct a concrete instance of `WsfcDomainCredentialsPtrInput` via:
//
//          WsfcDomainCredentialsArgs{...}
//
//  or:
//
//          nil
type WsfcDomainCredentialsPtrInput interface {
	pulumi.Input

	ToWsfcDomainCredentialsPtrOutput() WsfcDomainCredentialsPtrOutput
	ToWsfcDomainCredentialsPtrOutputWithContext(context.Context) WsfcDomainCredentialsPtrOutput
}

type wsfcDomainCredentialsPtrType WsfcDomainCredentialsArgs

func WsfcDomainCredentialsPtr(v *WsfcDomainCredentialsArgs) WsfcDomainCredentialsPtrInput {
	return (*wsfcDomainCredentialsPtrType)(v)
}

func (*wsfcDomainCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainCredentials)(nil)).Elem()
}

func (i *wsfcDomainCredentialsPtrType) ToWsfcDomainCredentialsPtrOutput() WsfcDomainCredentialsPtrOutput {
	return i.ToWsfcDomainCredentialsPtrOutputWithContext(context.Background())
}

func (i *wsfcDomainCredentialsPtrType) ToWsfcDomainCredentialsPtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsPtrOutput)
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentialsOutput struct{ *pulumi.OutputState }

func (WsfcDomainCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainCredentials)(nil)).Elem()
}

func (o WsfcDomainCredentialsOutput) ToWsfcDomainCredentialsOutput() WsfcDomainCredentialsOutput {
	return o
}

func (o WsfcDomainCredentialsOutput) ToWsfcDomainCredentialsOutputWithContext(ctx context.Context) WsfcDomainCredentialsOutput {
	return o
}

func (o WsfcDomainCredentialsOutput) ToWsfcDomainCredentialsPtrOutput() WsfcDomainCredentialsPtrOutput {
	return o.ToWsfcDomainCredentialsPtrOutputWithContext(context.Background())
}

func (o WsfcDomainCredentialsOutput) ToWsfcDomainCredentialsPtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentials) *WsfcDomainCredentials {
		return &v
	}).(WsfcDomainCredentialsPtrOutput)
}

// Cluster bootstrap account password.
func (o WsfcDomainCredentialsOutput) ClusterBootstrapAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentials) *string { return v.ClusterBootstrapAccountPassword }).(pulumi.StringPtrOutput)
}

// Cluster operator account password.
func (o WsfcDomainCredentialsOutput) ClusterOperatorAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentials) *string { return v.ClusterOperatorAccountPassword }).(pulumi.StringPtrOutput)
}

// SQL service account password.
func (o WsfcDomainCredentialsOutput) SqlServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentials) *string { return v.SqlServiceAccountPassword }).(pulumi.StringPtrOutput)
}

type WsfcDomainCredentialsPtrOutput struct{ *pulumi.OutputState }

func (WsfcDomainCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainCredentials)(nil)).Elem()
}

func (o WsfcDomainCredentialsPtrOutput) ToWsfcDomainCredentialsPtrOutput() WsfcDomainCredentialsPtrOutput {
	return o
}

func (o WsfcDomainCredentialsPtrOutput) ToWsfcDomainCredentialsPtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsPtrOutput {
	return o
}

func (o WsfcDomainCredentialsPtrOutput) Elem() WsfcDomainCredentialsOutput {
	return o.ApplyT(func(v *WsfcDomainCredentials) WsfcDomainCredentials { return *v }).(WsfcDomainCredentialsOutput)
}

// Cluster bootstrap account password.
func (o WsfcDomainCredentialsPtrOutput) ClusterBootstrapAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ClusterBootstrapAccountPassword
	}).(pulumi.StringPtrOutput)
}

// Cluster operator account password.
func (o WsfcDomainCredentialsPtrOutput) ClusterOperatorAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ClusterOperatorAccountPassword
	}).(pulumi.StringPtrOutput)
}

// SQL service account password.
func (o WsfcDomainCredentialsPtrOutput) SqlServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentialsResponse struct {
	// Cluster bootstrap account password.
	ClusterBootstrapAccountPassword *string `pulumi:"clusterBootstrapAccountPassword"`
	// Cluster operator account password.
	ClusterOperatorAccountPassword *string `pulumi:"clusterOperatorAccountPassword"`
	// SQL service account password.
	SqlServiceAccountPassword *string `pulumi:"sqlServiceAccountPassword"`
}

// WsfcDomainCredentialsResponseInput is an input type that accepts WsfcDomainCredentialsResponseArgs and WsfcDomainCredentialsResponseOutput values.
// You can construct a concrete instance of `WsfcDomainCredentialsResponseInput` via:
//
//          WsfcDomainCredentialsResponseArgs{...}
type WsfcDomainCredentialsResponseInput interface {
	pulumi.Input

	ToWsfcDomainCredentialsResponseOutput() WsfcDomainCredentialsResponseOutput
	ToWsfcDomainCredentialsResponseOutputWithContext(context.Context) WsfcDomainCredentialsResponseOutput
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentialsResponseArgs struct {
	// Cluster bootstrap account password.
	ClusterBootstrapAccountPassword pulumi.StringPtrInput `pulumi:"clusterBootstrapAccountPassword"`
	// Cluster operator account password.
	ClusterOperatorAccountPassword pulumi.StringPtrInput `pulumi:"clusterOperatorAccountPassword"`
	// SQL service account password.
	SqlServiceAccountPassword pulumi.StringPtrInput `pulumi:"sqlServiceAccountPassword"`
}

func (WsfcDomainCredentialsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainCredentialsResponse)(nil)).Elem()
}

func (i WsfcDomainCredentialsResponseArgs) ToWsfcDomainCredentialsResponseOutput() WsfcDomainCredentialsResponseOutput {
	return i.ToWsfcDomainCredentialsResponseOutputWithContext(context.Background())
}

func (i WsfcDomainCredentialsResponseArgs) ToWsfcDomainCredentialsResponseOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsResponseOutput)
}

func (i WsfcDomainCredentialsResponseArgs) ToWsfcDomainCredentialsResponsePtrOutput() WsfcDomainCredentialsResponsePtrOutput {
	return i.ToWsfcDomainCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i WsfcDomainCredentialsResponseArgs) ToWsfcDomainCredentialsResponsePtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsResponseOutput).ToWsfcDomainCredentialsResponsePtrOutputWithContext(ctx)
}

// WsfcDomainCredentialsResponsePtrInput is an input type that accepts WsfcDomainCredentialsResponseArgs, WsfcDomainCredentialsResponsePtr and WsfcDomainCredentialsResponsePtrOutput values.
// You can construct a concrete instance of `WsfcDomainCredentialsResponsePtrInput` via:
//
//          WsfcDomainCredentialsResponseArgs{...}
//
//  or:
//
//          nil
type WsfcDomainCredentialsResponsePtrInput interface {
	pulumi.Input

	ToWsfcDomainCredentialsResponsePtrOutput() WsfcDomainCredentialsResponsePtrOutput
	ToWsfcDomainCredentialsResponsePtrOutputWithContext(context.Context) WsfcDomainCredentialsResponsePtrOutput
}

type wsfcDomainCredentialsResponsePtrType WsfcDomainCredentialsResponseArgs

func WsfcDomainCredentialsResponsePtr(v *WsfcDomainCredentialsResponseArgs) WsfcDomainCredentialsResponsePtrInput {
	return (*wsfcDomainCredentialsResponsePtrType)(v)
}

func (*wsfcDomainCredentialsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainCredentialsResponse)(nil)).Elem()
}

func (i *wsfcDomainCredentialsResponsePtrType) ToWsfcDomainCredentialsResponsePtrOutput() WsfcDomainCredentialsResponsePtrOutput {
	return i.ToWsfcDomainCredentialsResponsePtrOutputWithContext(context.Background())
}

func (i *wsfcDomainCredentialsResponsePtrType) ToWsfcDomainCredentialsResponsePtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainCredentialsResponsePtrOutput)
}

// Domain credentials for setting up Windows Server Failover Cluster for SQL availability group.
type WsfcDomainCredentialsResponseOutput struct{ *pulumi.OutputState }

func (WsfcDomainCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainCredentialsResponse)(nil)).Elem()
}

func (o WsfcDomainCredentialsResponseOutput) ToWsfcDomainCredentialsResponseOutput() WsfcDomainCredentialsResponseOutput {
	return o
}

func (o WsfcDomainCredentialsResponseOutput) ToWsfcDomainCredentialsResponseOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponseOutput {
	return o
}

func (o WsfcDomainCredentialsResponseOutput) ToWsfcDomainCredentialsResponsePtrOutput() WsfcDomainCredentialsResponsePtrOutput {
	return o.ToWsfcDomainCredentialsResponsePtrOutputWithContext(context.Background())
}

func (o WsfcDomainCredentialsResponseOutput) ToWsfcDomainCredentialsResponsePtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponsePtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentialsResponse) *WsfcDomainCredentialsResponse {
		return &v
	}).(WsfcDomainCredentialsResponsePtrOutput)
}

// Cluster bootstrap account password.
func (o WsfcDomainCredentialsResponseOutput) ClusterBootstrapAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentialsResponse) *string { return v.ClusterBootstrapAccountPassword }).(pulumi.StringPtrOutput)
}

// Cluster operator account password.
func (o WsfcDomainCredentialsResponseOutput) ClusterOperatorAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentialsResponse) *string { return v.ClusterOperatorAccountPassword }).(pulumi.StringPtrOutput)
}

// SQL service account password.
func (o WsfcDomainCredentialsResponseOutput) SqlServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainCredentialsResponse) *string { return v.SqlServiceAccountPassword }).(pulumi.StringPtrOutput)
}

type WsfcDomainCredentialsResponsePtrOutput struct{ *pulumi.OutputState }

func (WsfcDomainCredentialsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainCredentialsResponse)(nil)).Elem()
}

func (o WsfcDomainCredentialsResponsePtrOutput) ToWsfcDomainCredentialsResponsePtrOutput() WsfcDomainCredentialsResponsePtrOutput {
	return o
}

func (o WsfcDomainCredentialsResponsePtrOutput) ToWsfcDomainCredentialsResponsePtrOutputWithContext(ctx context.Context) WsfcDomainCredentialsResponsePtrOutput {
	return o
}

func (o WsfcDomainCredentialsResponsePtrOutput) Elem() WsfcDomainCredentialsResponseOutput {
	return o.ApplyT(func(v *WsfcDomainCredentialsResponse) WsfcDomainCredentialsResponse { return *v }).(WsfcDomainCredentialsResponseOutput)
}

// Cluster bootstrap account password.
func (o WsfcDomainCredentialsResponsePtrOutput) ClusterBootstrapAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterBootstrapAccountPassword
	}).(pulumi.StringPtrOutput)
}

// Cluster operator account password.
func (o WsfcDomainCredentialsResponsePtrOutput) ClusterOperatorAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterOperatorAccountPassword
	}).(pulumi.StringPtrOutput)
}

// SQL service account password.
func (o WsfcDomainCredentialsResponsePtrOutput) SqlServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainCredentialsResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfile struct {
	// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
	ClusterBootstrapAccount *string `pulumi:"clusterBootstrapAccount"`
	// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
	ClusterOperatorAccount *string `pulumi:"clusterOperatorAccount"`
	// Fully qualified name of the domain.
	DomainFqdn *string `pulumi:"domainFqdn"`
	// Optional path for fileshare witness.
	FileShareWitnessPath *string `pulumi:"fileShareWitnessPath"`
	// Organizational Unit path in which the nodes and cluster will be present.
	OuPath *string `pulumi:"ouPath"`
	// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccount *string `pulumi:"sqlServiceAccount"`
	// Primary key of the witness storage account.
	StorageAccountPrimaryKey *string `pulumi:"storageAccountPrimaryKey"`
	// Fully qualified ARM resource id of the witness storage account.
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
}

// WsfcDomainProfileInput is an input type that accepts WsfcDomainProfileArgs and WsfcDomainProfileOutput values.
// You can construct a concrete instance of `WsfcDomainProfileInput` via:
//
//          WsfcDomainProfileArgs{...}
type WsfcDomainProfileInput interface {
	pulumi.Input

	ToWsfcDomainProfileOutput() WsfcDomainProfileOutput
	ToWsfcDomainProfileOutputWithContext(context.Context) WsfcDomainProfileOutput
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfileArgs struct {
	// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
	ClusterBootstrapAccount pulumi.StringPtrInput `pulumi:"clusterBootstrapAccount"`
	// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
	ClusterOperatorAccount pulumi.StringPtrInput `pulumi:"clusterOperatorAccount"`
	// Fully qualified name of the domain.
	DomainFqdn pulumi.StringPtrInput `pulumi:"domainFqdn"`
	// Optional path for fileshare witness.
	FileShareWitnessPath pulumi.StringPtrInput `pulumi:"fileShareWitnessPath"`
	// Organizational Unit path in which the nodes and cluster will be present.
	OuPath pulumi.StringPtrInput `pulumi:"ouPath"`
	// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccount pulumi.StringPtrInput `pulumi:"sqlServiceAccount"`
	// Primary key of the witness storage account.
	StorageAccountPrimaryKey pulumi.StringPtrInput `pulumi:"storageAccountPrimaryKey"`
	// Fully qualified ARM resource id of the witness storage account.
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
}

func (WsfcDomainProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainProfile)(nil)).Elem()
}

func (i WsfcDomainProfileArgs) ToWsfcDomainProfileOutput() WsfcDomainProfileOutput {
	return i.ToWsfcDomainProfileOutputWithContext(context.Background())
}

func (i WsfcDomainProfileArgs) ToWsfcDomainProfileOutputWithContext(ctx context.Context) WsfcDomainProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfileOutput)
}

func (i WsfcDomainProfileArgs) ToWsfcDomainProfilePtrOutput() WsfcDomainProfilePtrOutput {
	return i.ToWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (i WsfcDomainProfileArgs) ToWsfcDomainProfilePtrOutputWithContext(ctx context.Context) WsfcDomainProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfileOutput).ToWsfcDomainProfilePtrOutputWithContext(ctx)
}

// WsfcDomainProfilePtrInput is an input type that accepts WsfcDomainProfileArgs, WsfcDomainProfilePtr and WsfcDomainProfilePtrOutput values.
// You can construct a concrete instance of `WsfcDomainProfilePtrInput` via:
//
//          WsfcDomainProfileArgs{...}
//
//  or:
//
//          nil
type WsfcDomainProfilePtrInput interface {
	pulumi.Input

	ToWsfcDomainProfilePtrOutput() WsfcDomainProfilePtrOutput
	ToWsfcDomainProfilePtrOutputWithContext(context.Context) WsfcDomainProfilePtrOutput
}

type wsfcDomainProfilePtrType WsfcDomainProfileArgs

func WsfcDomainProfilePtr(v *WsfcDomainProfileArgs) WsfcDomainProfilePtrInput {
	return (*wsfcDomainProfilePtrType)(v)
}

func (*wsfcDomainProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainProfile)(nil)).Elem()
}

func (i *wsfcDomainProfilePtrType) ToWsfcDomainProfilePtrOutput() WsfcDomainProfilePtrOutput {
	return i.ToWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (i *wsfcDomainProfilePtrType) ToWsfcDomainProfilePtrOutputWithContext(ctx context.Context) WsfcDomainProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfilePtrOutput)
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfileOutput struct{ *pulumi.OutputState }

func (WsfcDomainProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainProfile)(nil)).Elem()
}

func (o WsfcDomainProfileOutput) ToWsfcDomainProfileOutput() WsfcDomainProfileOutput {
	return o
}

func (o WsfcDomainProfileOutput) ToWsfcDomainProfileOutputWithContext(ctx context.Context) WsfcDomainProfileOutput {
	return o
}

func (o WsfcDomainProfileOutput) ToWsfcDomainProfilePtrOutput() WsfcDomainProfilePtrOutput {
	return o.ToWsfcDomainProfilePtrOutputWithContext(context.Background())
}

func (o WsfcDomainProfileOutput) ToWsfcDomainProfilePtrOutputWithContext(ctx context.Context) WsfcDomainProfilePtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *WsfcDomainProfile {
		return &v
	}).(WsfcDomainProfilePtrOutput)
}

// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
func (o WsfcDomainProfileOutput) ClusterBootstrapAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.ClusterBootstrapAccount }).(pulumi.StringPtrOutput)
}

// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
func (o WsfcDomainProfileOutput) ClusterOperatorAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.ClusterOperatorAccount }).(pulumi.StringPtrOutput)
}

// Fully qualified name of the domain.
func (o WsfcDomainProfileOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.DomainFqdn }).(pulumi.StringPtrOutput)
}

// Optional path for fileshare witness.
func (o WsfcDomainProfileOutput) FileShareWitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.FileShareWitnessPath }).(pulumi.StringPtrOutput)
}

// Organizational Unit path in which the nodes and cluster will be present.
func (o WsfcDomainProfileOutput) OuPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.OuPath }).(pulumi.StringPtrOutput)
}

// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o WsfcDomainProfileOutput) SqlServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.SqlServiceAccount }).(pulumi.StringPtrOutput)
}

// Primary key of the witness storage account.
func (o WsfcDomainProfileOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.StorageAccountPrimaryKey }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM resource id of the witness storage account.
func (o WsfcDomainProfileOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfile) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

type WsfcDomainProfilePtrOutput struct{ *pulumi.OutputState }

func (WsfcDomainProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainProfile)(nil)).Elem()
}

func (o WsfcDomainProfilePtrOutput) ToWsfcDomainProfilePtrOutput() WsfcDomainProfilePtrOutput {
	return o
}

func (o WsfcDomainProfilePtrOutput) ToWsfcDomainProfilePtrOutputWithContext(ctx context.Context) WsfcDomainProfilePtrOutput {
	return o
}

func (o WsfcDomainProfilePtrOutput) Elem() WsfcDomainProfileOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) WsfcDomainProfile { return *v }).(WsfcDomainProfileOutput)
}

// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
func (o WsfcDomainProfilePtrOutput) ClusterBootstrapAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClusterBootstrapAccount
	}).(pulumi.StringPtrOutput)
}

// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
func (o WsfcDomainProfilePtrOutput) ClusterOperatorAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.ClusterOperatorAccount
	}).(pulumi.StringPtrOutput)
}

// Fully qualified name of the domain.
func (o WsfcDomainProfilePtrOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.DomainFqdn
	}).(pulumi.StringPtrOutput)
}

// Optional path for fileshare witness.
func (o WsfcDomainProfilePtrOutput) FileShareWitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.FileShareWitnessPath
	}).(pulumi.StringPtrOutput)
}

// Organizational Unit path in which the nodes and cluster will be present.
func (o WsfcDomainProfilePtrOutput) OuPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.OuPath
	}).(pulumi.StringPtrOutput)
}

// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o WsfcDomainProfilePtrOutput) SqlServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Primary key of the witness storage account.
func (o WsfcDomainProfilePtrOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountPrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM resource id of the witness storage account.
func (o WsfcDomainProfilePtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfile) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfileResponse struct {
	// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
	ClusterBootstrapAccount *string `pulumi:"clusterBootstrapAccount"`
	// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
	ClusterOperatorAccount *string `pulumi:"clusterOperatorAccount"`
	// Fully qualified name of the domain.
	DomainFqdn *string `pulumi:"domainFqdn"`
	// Optional path for fileshare witness.
	FileShareWitnessPath *string `pulumi:"fileShareWitnessPath"`
	// Organizational Unit path in which the nodes and cluster will be present.
	OuPath *string `pulumi:"ouPath"`
	// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccount *string `pulumi:"sqlServiceAccount"`
	// Primary key of the witness storage account.
	StorageAccountPrimaryKey *string `pulumi:"storageAccountPrimaryKey"`
	// Fully qualified ARM resource id of the witness storage account.
	StorageAccountUrl *string `pulumi:"storageAccountUrl"`
}

// WsfcDomainProfileResponseInput is an input type that accepts WsfcDomainProfileResponseArgs and WsfcDomainProfileResponseOutput values.
// You can construct a concrete instance of `WsfcDomainProfileResponseInput` via:
//
//          WsfcDomainProfileResponseArgs{...}
type WsfcDomainProfileResponseInput interface {
	pulumi.Input

	ToWsfcDomainProfileResponseOutput() WsfcDomainProfileResponseOutput
	ToWsfcDomainProfileResponseOutputWithContext(context.Context) WsfcDomainProfileResponseOutput
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfileResponseArgs struct {
	// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
	ClusterBootstrapAccount pulumi.StringPtrInput `pulumi:"clusterBootstrapAccount"`
	// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
	ClusterOperatorAccount pulumi.StringPtrInput `pulumi:"clusterOperatorAccount"`
	// Fully qualified name of the domain.
	DomainFqdn pulumi.StringPtrInput `pulumi:"domainFqdn"`
	// Optional path for fileshare witness.
	FileShareWitnessPath pulumi.StringPtrInput `pulumi:"fileShareWitnessPath"`
	// Organizational Unit path in which the nodes and cluster will be present.
	OuPath pulumi.StringPtrInput `pulumi:"ouPath"`
	// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
	SqlServiceAccount pulumi.StringPtrInput `pulumi:"sqlServiceAccount"`
	// Primary key of the witness storage account.
	StorageAccountPrimaryKey pulumi.StringPtrInput `pulumi:"storageAccountPrimaryKey"`
	// Fully qualified ARM resource id of the witness storage account.
	StorageAccountUrl pulumi.StringPtrInput `pulumi:"storageAccountUrl"`
}

func (WsfcDomainProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainProfileResponse)(nil)).Elem()
}

func (i WsfcDomainProfileResponseArgs) ToWsfcDomainProfileResponseOutput() WsfcDomainProfileResponseOutput {
	return i.ToWsfcDomainProfileResponseOutputWithContext(context.Background())
}

func (i WsfcDomainProfileResponseArgs) ToWsfcDomainProfileResponseOutputWithContext(ctx context.Context) WsfcDomainProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfileResponseOutput)
}

func (i WsfcDomainProfileResponseArgs) ToWsfcDomainProfileResponsePtrOutput() WsfcDomainProfileResponsePtrOutput {
	return i.ToWsfcDomainProfileResponsePtrOutputWithContext(context.Background())
}

func (i WsfcDomainProfileResponseArgs) ToWsfcDomainProfileResponsePtrOutputWithContext(ctx context.Context) WsfcDomainProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfileResponseOutput).ToWsfcDomainProfileResponsePtrOutputWithContext(ctx)
}

// WsfcDomainProfileResponsePtrInput is an input type that accepts WsfcDomainProfileResponseArgs, WsfcDomainProfileResponsePtr and WsfcDomainProfileResponsePtrOutput values.
// You can construct a concrete instance of `WsfcDomainProfileResponsePtrInput` via:
//
//          WsfcDomainProfileResponseArgs{...}
//
//  or:
//
//          nil
type WsfcDomainProfileResponsePtrInput interface {
	pulumi.Input

	ToWsfcDomainProfileResponsePtrOutput() WsfcDomainProfileResponsePtrOutput
	ToWsfcDomainProfileResponsePtrOutputWithContext(context.Context) WsfcDomainProfileResponsePtrOutput
}

type wsfcDomainProfileResponsePtrType WsfcDomainProfileResponseArgs

func WsfcDomainProfileResponsePtr(v *WsfcDomainProfileResponseArgs) WsfcDomainProfileResponsePtrInput {
	return (*wsfcDomainProfileResponsePtrType)(v)
}

func (*wsfcDomainProfileResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainProfileResponse)(nil)).Elem()
}

func (i *wsfcDomainProfileResponsePtrType) ToWsfcDomainProfileResponsePtrOutput() WsfcDomainProfileResponsePtrOutput {
	return i.ToWsfcDomainProfileResponsePtrOutputWithContext(context.Background())
}

func (i *wsfcDomainProfileResponsePtrType) ToWsfcDomainProfileResponsePtrOutputWithContext(ctx context.Context) WsfcDomainProfileResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsfcDomainProfileResponsePtrOutput)
}

// Active Directory account details to operate Windows Server Failover Cluster.
type WsfcDomainProfileResponseOutput struct{ *pulumi.OutputState }

func (WsfcDomainProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsfcDomainProfileResponse)(nil)).Elem()
}

func (o WsfcDomainProfileResponseOutput) ToWsfcDomainProfileResponseOutput() WsfcDomainProfileResponseOutput {
	return o
}

func (o WsfcDomainProfileResponseOutput) ToWsfcDomainProfileResponseOutputWithContext(ctx context.Context) WsfcDomainProfileResponseOutput {
	return o
}

func (o WsfcDomainProfileResponseOutput) ToWsfcDomainProfileResponsePtrOutput() WsfcDomainProfileResponsePtrOutput {
	return o.ToWsfcDomainProfileResponsePtrOutputWithContext(context.Background())
}

func (o WsfcDomainProfileResponseOutput) ToWsfcDomainProfileResponsePtrOutputWithContext(ctx context.Context) WsfcDomainProfileResponsePtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *WsfcDomainProfileResponse {
		return &v
	}).(WsfcDomainProfileResponsePtrOutput)
}

// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
func (o WsfcDomainProfileResponseOutput) ClusterBootstrapAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.ClusterBootstrapAccount }).(pulumi.StringPtrOutput)
}

// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
func (o WsfcDomainProfileResponseOutput) ClusterOperatorAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.ClusterOperatorAccount }).(pulumi.StringPtrOutput)
}

// Fully qualified name of the domain.
func (o WsfcDomainProfileResponseOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.DomainFqdn }).(pulumi.StringPtrOutput)
}

// Optional path for fileshare witness.
func (o WsfcDomainProfileResponseOutput) FileShareWitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.FileShareWitnessPath }).(pulumi.StringPtrOutput)
}

// Organizational Unit path in which the nodes and cluster will be present.
func (o WsfcDomainProfileResponseOutput) OuPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.OuPath }).(pulumi.StringPtrOutput)
}

// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o WsfcDomainProfileResponseOutput) SqlServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.SqlServiceAccount }).(pulumi.StringPtrOutput)
}

// Primary key of the witness storage account.
func (o WsfcDomainProfileResponseOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.StorageAccountPrimaryKey }).(pulumi.StringPtrOutput)
}

// Fully qualified ARM resource id of the witness storage account.
func (o WsfcDomainProfileResponseOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsfcDomainProfileResponse) *string { return v.StorageAccountUrl }).(pulumi.StringPtrOutput)
}

type WsfcDomainProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (WsfcDomainProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsfcDomainProfileResponse)(nil)).Elem()
}

func (o WsfcDomainProfileResponsePtrOutput) ToWsfcDomainProfileResponsePtrOutput() WsfcDomainProfileResponsePtrOutput {
	return o
}

func (o WsfcDomainProfileResponsePtrOutput) ToWsfcDomainProfileResponsePtrOutputWithContext(ctx context.Context) WsfcDomainProfileResponsePtrOutput {
	return o
}

func (o WsfcDomainProfileResponsePtrOutput) Elem() WsfcDomainProfileResponseOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) WsfcDomainProfileResponse { return *v }).(WsfcDomainProfileResponseOutput)
}

// Account name used for creating cluster (at minimum needs permissions to 'Create Computer Objects' in domain).
func (o WsfcDomainProfileResponsePtrOutput) ClusterBootstrapAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterBootstrapAccount
	}).(pulumi.StringPtrOutput)
}

// Account name used for operating cluster i.e. will be part of administrators group on all the participating virtual machines in the cluster.
func (o WsfcDomainProfileResponsePtrOutput) ClusterOperatorAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClusterOperatorAccount
	}).(pulumi.StringPtrOutput)
}

// Fully qualified name of the domain.
func (o WsfcDomainProfileResponsePtrOutput) DomainFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainFqdn
	}).(pulumi.StringPtrOutput)
}

// Optional path for fileshare witness.
func (o WsfcDomainProfileResponsePtrOutput) FileShareWitnessPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.FileShareWitnessPath
	}).(pulumi.StringPtrOutput)
}

// Organizational Unit path in which the nodes and cluster will be present.
func (o WsfcDomainProfileResponsePtrOutput) OuPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.OuPath
	}).(pulumi.StringPtrOutput)
}

// Account name under which SQL service will run on all participating SQL virtual machines in the cluster.
func (o WsfcDomainProfileResponsePtrOutput) SqlServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.SqlServiceAccount
	}).(pulumi.StringPtrOutput)
}

// Primary key of the witness storage account.
func (o WsfcDomainProfileResponsePtrOutput) StorageAccountPrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountPrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Fully qualified ARM resource id of the witness storage account.
func (o WsfcDomainProfileResponsePtrOutput) StorageAccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsfcDomainProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccountUrl
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AdditionalFeaturesServerConfigurationsOutput{})
	pulumi.RegisterOutputType(AdditionalFeaturesServerConfigurationsPtrOutput{})
	pulumi.RegisterOutputType(AdditionalFeaturesServerConfigurationsResponseOutput{})
	pulumi.RegisterOutputType(AdditionalFeaturesServerConfigurationsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoBackupSettingsOutput{})
	pulumi.RegisterOutputType(AutoBackupSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoBackupSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoBackupSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoPatchingSettingsOutput{})
	pulumi.RegisterOutputType(AutoPatchingSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoPatchingSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoPatchingSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCredentialSettingsOutput{})
	pulumi.RegisterOutputType(KeyVaultCredentialSettingsPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCredentialSettingsResponseOutput{})
	pulumi.RegisterOutputType(KeyVaultCredentialSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateIPAddressOutput{})
	pulumi.RegisterOutputType(PrivateIPAddressPtrOutput{})
	pulumi.RegisterOutputType(PrivateIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PrivateIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityOutput{})
	pulumi.RegisterOutputType(ResourceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ResourceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(SQLStorageSettingsOutput{})
	pulumi.RegisterOutputType(SQLStorageSettingsPtrOutput{})
	pulumi.RegisterOutputType(SQLStorageSettingsResponseOutput{})
	pulumi.RegisterOutputType(SQLStorageSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ServerConfigurationsManagementSettingsOutput{})
	pulumi.RegisterOutputType(ServerConfigurationsManagementSettingsPtrOutput{})
	pulumi.RegisterOutputType(ServerConfigurationsManagementSettingsResponseOutput{})
	pulumi.RegisterOutputType(ServerConfigurationsManagementSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlConnectivityUpdateSettingsOutput{})
	pulumi.RegisterOutputType(SqlConnectivityUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlConnectivityUpdateSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlConnectivityUpdateSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlStorageUpdateSettingsOutput{})
	pulumi.RegisterOutputType(SqlStorageUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlStorageUpdateSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlStorageUpdateSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SqlWorkloadTypeUpdateSettingsOutput{})
	pulumi.RegisterOutputType(SqlWorkloadTypeUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlWorkloadTypeUpdateSettingsResponseOutput{})
	pulumi.RegisterOutputType(SqlWorkloadTypeUpdateSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(StorageConfigurationSettingsOutput{})
	pulumi.RegisterOutputType(StorageConfigurationSettingsPtrOutput{})
	pulumi.RegisterOutputType(StorageConfigurationSettingsResponseOutput{})
	pulumi.RegisterOutputType(StorageConfigurationSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(WsfcDomainCredentialsOutput{})
	pulumi.RegisterOutputType(WsfcDomainCredentialsPtrOutput{})
	pulumi.RegisterOutputType(WsfcDomainCredentialsResponseOutput{})
	pulumi.RegisterOutputType(WsfcDomainCredentialsResponsePtrOutput{})
	pulumi.RegisterOutputType(WsfcDomainProfileOutput{})
	pulumi.RegisterOutputType(WsfcDomainProfilePtrOutput{})
	pulumi.RegisterOutputType(WsfcDomainProfileResponseOutput{})
	pulumi.RegisterOutputType(WsfcDomainProfileResponsePtrOutput{})
}
