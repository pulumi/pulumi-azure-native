// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181015

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Represents an environment instance
type Environment struct {
	pulumi.CustomResourceState

	// The name or email address of the user who has claimed the environment
	ClaimedByUserName pulumi.StringOutput `pulumi:"claimedByUserName"`
	// The AAD object Id of the user who has claimed the environment
	ClaimedByUserObjectId pulumi.StringOutput `pulumi:"claimedByUserObjectId"`
	// The user principal Id of the user who has claimed the environment
	ClaimedByUserPrincipalId pulumi.StringOutput `pulumi:"claimedByUserPrincipalId"`
	// Is the environment claimed or not
	IsClaimed pulumi.BoolOutput `pulumi:"isClaimed"`
	// Last known power state of the environment
	LastKnownPowerState pulumi.StringOutput `pulumi:"lastKnownPowerState"`
	// The details of the latest operation. ex: status, error
	LatestOperationResult LatestOperationResultResponseOutput `pulumi:"latestOperationResult"`
	// The location of the resource.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network details of the environment
	NetworkInterface NetworkInterfaceResponseOutput `pulumi:"networkInterface"`
	// When the password was last reset on the environment.
	PasswordLastReset pulumi.StringOutput `pulumi:"passwordLastReset"`
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// The set of a VM and the setting id it was created for
	ResourceSets ResourceSetResponsePtrOutput `pulumi:"resourceSets"`
	// The tags of the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// How long the environment has been used by a lab user
	TotalUsage pulumi.StringOutput `pulumi:"totalUsage"`
	// The type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringPtrOutput `pulumi:"uniqueIdentifier"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil || args.EnvironmentName == nil {
		return nil, errors.New("missing required argument 'EnvironmentName'")
	}
	if args == nil || args.EnvironmentSettingName == nil {
		return nil, errors.New("missing required argument 'EnvironmentSettingName'")
	}
	if args == nil || args.LabAccountName == nil {
		return nil, errors.New("missing required argument 'LabAccountName'")
	}
	if args == nil || args.LabName == nil {
		return nil, errors.New("missing required argument 'LabName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &EnvironmentArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:labservices/latest:Environment"),
		},
	})
	opts = append(opts, aliases)
	var resource Environment
	err := ctx.RegisterResource("azure-nextgen:labservices/v20181015:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("azure-nextgen:labservices/v20181015:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	// The name or email address of the user who has claimed the environment
	ClaimedByUserName *string `pulumi:"claimedByUserName"`
	// The AAD object Id of the user who has claimed the environment
	ClaimedByUserObjectId *string `pulumi:"claimedByUserObjectId"`
	// The user principal Id of the user who has claimed the environment
	ClaimedByUserPrincipalId *string `pulumi:"claimedByUserPrincipalId"`
	// Is the environment claimed or not
	IsClaimed *bool `pulumi:"isClaimed"`
	// Last known power state of the environment
	LastKnownPowerState *string `pulumi:"lastKnownPowerState"`
	// The details of the latest operation. ex: status, error
	LatestOperationResult *LatestOperationResultResponse `pulumi:"latestOperationResult"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The name of the resource.
	Name *string `pulumi:"name"`
	// Network details of the environment
	NetworkInterface *NetworkInterfaceResponse `pulumi:"networkInterface"`
	// When the password was last reset on the environment.
	PasswordLastReset *string `pulumi:"passwordLastReset"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The set of a VM and the setting id it was created for
	ResourceSets *ResourceSetResponse `pulumi:"resourceSets"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// How long the environment has been used by a lab user
	TotalUsage *string `pulumi:"totalUsage"`
	// The type of the resource.
	Type *string `pulumi:"type"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `pulumi:"uniqueIdentifier"`
}

type EnvironmentState struct {
	// The name or email address of the user who has claimed the environment
	ClaimedByUserName pulumi.StringPtrInput
	// The AAD object Id of the user who has claimed the environment
	ClaimedByUserObjectId pulumi.StringPtrInput
	// The user principal Id of the user who has claimed the environment
	ClaimedByUserPrincipalId pulumi.StringPtrInput
	// Is the environment claimed or not
	IsClaimed pulumi.BoolPtrInput
	// Last known power state of the environment
	LastKnownPowerState pulumi.StringPtrInput
	// The details of the latest operation. ex: status, error
	LatestOperationResult LatestOperationResultResponsePtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The name of the resource.
	Name pulumi.StringPtrInput
	// Network details of the environment
	NetworkInterface NetworkInterfaceResponsePtrInput
	// When the password was last reset on the environment.
	PasswordLastReset pulumi.StringPtrInput
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput
	// The set of a VM and the setting id it was created for
	ResourceSets ResourceSetResponsePtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// How long the environment has been used by a lab user
	TotalUsage pulumi.StringPtrInput
	// The type of the resource.
	Type pulumi.StringPtrInput
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringPtrInput
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// The name of the environment.
	EnvironmentName string `pulumi:"environmentName"`
	// The name of the environment Setting.
	EnvironmentSettingName string `pulumi:"environmentSettingName"`
	// The name of the lab Account.
	LabAccountName string `pulumi:"labAccountName"`
	// The name of the lab.
	LabName string `pulumi:"labName"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The provisioning status of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The set of a VM and the setting id it was created for
	ResourceSets *ResourceSet `pulumi:"resourceSets"`
	// The tags of the resource.
	Tags map[string]string `pulumi:"tags"`
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier *string `pulumi:"uniqueIdentifier"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// The name of the environment.
	EnvironmentName pulumi.StringInput
	// The name of the environment Setting.
	EnvironmentSettingName pulumi.StringInput
	// The name of the lab Account.
	LabAccountName pulumi.StringInput
	// The name of the lab.
	LabName pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The provisioning status of the resource.
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The set of a VM and the setting id it was created for
	ResourceSets ResourceSetPtrInput
	// The tags of the resource.
	Tags pulumi.StringMapInput
	// The unique immutable identifier of a resource (Guid).
	UniqueIdentifier pulumi.StringPtrInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}
