// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// This represents the details about a User's environment and its state.
type EnvironmentDetailsResponse struct {
	// Description of the Environment
	Description string `pulumi:"description"`
	// Publishing state of the environment setting Possible values are Creating, Created, Failed
	EnvironmentState string `pulumi:"environmentState"`
	// Resource Id of the environment
	Id string `pulumi:"id"`
	// The details of the latest operation. ex: status, error
	LatestOperationResult LatestOperationResultResponse `pulumi:"latestOperationResult"`
	// Name of the Environment
	Name string `pulumi:"name"`
	// When the password was last reset on the environment.
	PasswordLastReset string `pulumi:"passwordLastReset"`
	// The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
	ProvisioningState string `pulumi:"provisioningState"`
	// How long the environment has been used by a lab user
	TotalUsage string `pulumi:"totalUsage"`
	// Details of backing DTL virtual machine with compute and network details.
	VirtualMachineDetails VirtualMachineDetailsResponse `pulumi:"virtualMachineDetails"`
}

// EnvironmentDetailsResponseInput is an input type that accepts EnvironmentDetailsResponseArgs and EnvironmentDetailsResponseOutput values.
// You can construct a concrete instance of `EnvironmentDetailsResponseInput` via:
//
//          EnvironmentDetailsResponseArgs{...}
type EnvironmentDetailsResponseInput interface {
	pulumi.Input

	ToEnvironmentDetailsResponseOutput() EnvironmentDetailsResponseOutput
	ToEnvironmentDetailsResponseOutputWithContext(context.Context) EnvironmentDetailsResponseOutput
}

// This represents the details about a User's environment and its state.
type EnvironmentDetailsResponseArgs struct {
	// Description of the Environment
	Description pulumi.StringInput `pulumi:"description"`
	// Publishing state of the environment setting Possible values are Creating, Created, Failed
	EnvironmentState pulumi.StringInput `pulumi:"environmentState"`
	// Resource Id of the environment
	Id pulumi.StringInput `pulumi:"id"`
	// The details of the latest operation. ex: status, error
	LatestOperationResult LatestOperationResultResponseInput `pulumi:"latestOperationResult"`
	// Name of the Environment
	Name pulumi.StringInput `pulumi:"name"`
	// When the password was last reset on the environment.
	PasswordLastReset pulumi.StringInput `pulumi:"passwordLastReset"`
	// The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// How long the environment has been used by a lab user
	TotalUsage pulumi.StringInput `pulumi:"totalUsage"`
	// Details of backing DTL virtual machine with compute and network details.
	VirtualMachineDetails VirtualMachineDetailsResponseInput `pulumi:"virtualMachineDetails"`
}

func (EnvironmentDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDetailsResponse)(nil)).Elem()
}

func (i EnvironmentDetailsResponseArgs) ToEnvironmentDetailsResponseOutput() EnvironmentDetailsResponseOutput {
	return i.ToEnvironmentDetailsResponseOutputWithContext(context.Background())
}

func (i EnvironmentDetailsResponseArgs) ToEnvironmentDetailsResponseOutputWithContext(ctx context.Context) EnvironmentDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDetailsResponseOutput)
}

// EnvironmentDetailsResponseArrayInput is an input type that accepts EnvironmentDetailsResponseArray and EnvironmentDetailsResponseArrayOutput values.
// You can construct a concrete instance of `EnvironmentDetailsResponseArrayInput` via:
//
//          EnvironmentDetailsResponseArray{ EnvironmentDetailsResponseArgs{...} }
type EnvironmentDetailsResponseArrayInput interface {
	pulumi.Input

	ToEnvironmentDetailsResponseArrayOutput() EnvironmentDetailsResponseArrayOutput
	ToEnvironmentDetailsResponseArrayOutputWithContext(context.Context) EnvironmentDetailsResponseArrayOutput
}

type EnvironmentDetailsResponseArray []EnvironmentDetailsResponseInput

func (EnvironmentDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDetailsResponse)(nil)).Elem()
}

func (i EnvironmentDetailsResponseArray) ToEnvironmentDetailsResponseArrayOutput() EnvironmentDetailsResponseArrayOutput {
	return i.ToEnvironmentDetailsResponseArrayOutputWithContext(context.Background())
}

func (i EnvironmentDetailsResponseArray) ToEnvironmentDetailsResponseArrayOutputWithContext(ctx context.Context) EnvironmentDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentDetailsResponseArrayOutput)
}

// This represents the details about a User's environment and its state.
type EnvironmentDetailsResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentDetailsResponse)(nil)).Elem()
}

func (o EnvironmentDetailsResponseOutput) ToEnvironmentDetailsResponseOutput() EnvironmentDetailsResponseOutput {
	return o
}

func (o EnvironmentDetailsResponseOutput) ToEnvironmentDetailsResponseOutputWithContext(ctx context.Context) EnvironmentDetailsResponseOutput {
	return o
}

// Description of the Environment
func (o EnvironmentDetailsResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.Description }).(pulumi.StringOutput)
}

// Publishing state of the environment setting Possible values are Creating, Created, Failed
func (o EnvironmentDetailsResponseOutput) EnvironmentState() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.EnvironmentState }).(pulumi.StringOutput)
}

// Resource Id of the environment
func (o EnvironmentDetailsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The details of the latest operation. ex: status, error
func (o EnvironmentDetailsResponseOutput) LatestOperationResult() LatestOperationResultResponseOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) LatestOperationResultResponse { return v.LatestOperationResult }).(LatestOperationResultResponseOutput)
}

// Name of the Environment
func (o EnvironmentDetailsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// When the password was last reset on the environment.
func (o EnvironmentDetailsResponseOutput) PasswordLastReset() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.PasswordLastReset }).(pulumi.StringOutput)
}

// The provisioning state of the environment. This also includes LabIsFull and NotYetProvisioned status.
func (o EnvironmentDetailsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// How long the environment has been used by a lab user
func (o EnvironmentDetailsResponseOutput) TotalUsage() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) string { return v.TotalUsage }).(pulumi.StringOutput)
}

// Details of backing DTL virtual machine with compute and network details.
func (o EnvironmentDetailsResponseOutput) VirtualMachineDetails() VirtualMachineDetailsResponseOutput {
	return o.ApplyT(func(v EnvironmentDetailsResponse) VirtualMachineDetailsResponse { return v.VirtualMachineDetails }).(VirtualMachineDetailsResponseOutput)
}

type EnvironmentDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentDetailsResponse)(nil)).Elem()
}

func (o EnvironmentDetailsResponseArrayOutput) ToEnvironmentDetailsResponseArrayOutput() EnvironmentDetailsResponseArrayOutput {
	return o
}

func (o EnvironmentDetailsResponseArrayOutput) ToEnvironmentDetailsResponseArrayOutputWithContext(ctx context.Context) EnvironmentDetailsResponseArrayOutput {
	return o
}

func (o EnvironmentDetailsResponseArrayOutput) Index(i pulumi.IntInput) EnvironmentDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentDetailsResponse {
		return vs[0].([]EnvironmentDetailsResponse)[vs[1].(int)]
	}).(EnvironmentDetailsResponseOutput)
}

// Represents a size category supported by this Lab Account (small, medium or large)
type EnvironmentSizeResponse struct {
	// The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
	MaxPrice float64 `pulumi:"maxPrice"`
	// The amount of memory available (in GB). This is the minimum amount of memory within this tier.
	MinMemory float64 `pulumi:"minMemory"`
	// The number of cores a VM of this size has. This is the minimum number of cores within this tier.
	MinNumberOfCores int `pulumi:"minNumberOfCores"`
	// The size category
	Name *string `pulumi:"name"`
	// Represents a set of compute sizes that can serve this given size type
	VmSizes []SizeInfoResponse `pulumi:"vmSizes"`
}

// EnvironmentSizeResponseInput is an input type that accepts EnvironmentSizeResponseArgs and EnvironmentSizeResponseOutput values.
// You can construct a concrete instance of `EnvironmentSizeResponseInput` via:
//
//          EnvironmentSizeResponseArgs{...}
type EnvironmentSizeResponseInput interface {
	pulumi.Input

	ToEnvironmentSizeResponseOutput() EnvironmentSizeResponseOutput
	ToEnvironmentSizeResponseOutputWithContext(context.Context) EnvironmentSizeResponseOutput
}

// Represents a size category supported by this Lab Account (small, medium or large)
type EnvironmentSizeResponseArgs struct {
	// The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
	MaxPrice pulumi.Float64Input `pulumi:"maxPrice"`
	// The amount of memory available (in GB). This is the minimum amount of memory within this tier.
	MinMemory pulumi.Float64Input `pulumi:"minMemory"`
	// The number of cores a VM of this size has. This is the minimum number of cores within this tier.
	MinNumberOfCores pulumi.IntInput `pulumi:"minNumberOfCores"`
	// The size category
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Represents a set of compute sizes that can serve this given size type
	VmSizes SizeInfoResponseArrayInput `pulumi:"vmSizes"`
}

func (EnvironmentSizeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSizeResponse)(nil)).Elem()
}

func (i EnvironmentSizeResponseArgs) ToEnvironmentSizeResponseOutput() EnvironmentSizeResponseOutput {
	return i.ToEnvironmentSizeResponseOutputWithContext(context.Background())
}

func (i EnvironmentSizeResponseArgs) ToEnvironmentSizeResponseOutputWithContext(ctx context.Context) EnvironmentSizeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSizeResponseOutput)
}

// EnvironmentSizeResponseArrayInput is an input type that accepts EnvironmentSizeResponseArray and EnvironmentSizeResponseArrayOutput values.
// You can construct a concrete instance of `EnvironmentSizeResponseArrayInput` via:
//
//          EnvironmentSizeResponseArray{ EnvironmentSizeResponseArgs{...} }
type EnvironmentSizeResponseArrayInput interface {
	pulumi.Input

	ToEnvironmentSizeResponseArrayOutput() EnvironmentSizeResponseArrayOutput
	ToEnvironmentSizeResponseArrayOutputWithContext(context.Context) EnvironmentSizeResponseArrayOutput
}

type EnvironmentSizeResponseArray []EnvironmentSizeResponseInput

func (EnvironmentSizeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSizeResponse)(nil)).Elem()
}

func (i EnvironmentSizeResponseArray) ToEnvironmentSizeResponseArrayOutput() EnvironmentSizeResponseArrayOutput {
	return i.ToEnvironmentSizeResponseArrayOutputWithContext(context.Background())
}

func (i EnvironmentSizeResponseArray) ToEnvironmentSizeResponseArrayOutputWithContext(ctx context.Context) EnvironmentSizeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentSizeResponseArrayOutput)
}

// Represents a size category supported by this Lab Account (small, medium or large)
type EnvironmentSizeResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentSizeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentSizeResponse)(nil)).Elem()
}

func (o EnvironmentSizeResponseOutput) ToEnvironmentSizeResponseOutput() EnvironmentSizeResponseOutput {
	return o
}

func (o EnvironmentSizeResponseOutput) ToEnvironmentSizeResponseOutputWithContext(ctx context.Context) EnvironmentSizeResponseOutput {
	return o
}

// The pay-as-you-go dollar price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost. This is the maximum price of all prices within this tier.
func (o EnvironmentSizeResponseOutput) MaxPrice() pulumi.Float64Output {
	return o.ApplyT(func(v EnvironmentSizeResponse) float64 { return v.MaxPrice }).(pulumi.Float64Output)
}

// The amount of memory available (in GB). This is the minimum amount of memory within this tier.
func (o EnvironmentSizeResponseOutput) MinMemory() pulumi.Float64Output {
	return o.ApplyT(func(v EnvironmentSizeResponse) float64 { return v.MinMemory }).(pulumi.Float64Output)
}

// The number of cores a VM of this size has. This is the minimum number of cores within this tier.
func (o EnvironmentSizeResponseOutput) MinNumberOfCores() pulumi.IntOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) int { return v.MinNumberOfCores }).(pulumi.IntOutput)
}

// The size category
func (o EnvironmentSizeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Represents a set of compute sizes that can serve this given size type
func (o EnvironmentSizeResponseOutput) VmSizes() SizeInfoResponseArrayOutput {
	return o.ApplyT(func(v EnvironmentSizeResponse) []SizeInfoResponse { return v.VmSizes }).(SizeInfoResponseArrayOutput)
}

type EnvironmentSizeResponseArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentSizeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentSizeResponse)(nil)).Elem()
}

func (o EnvironmentSizeResponseArrayOutput) ToEnvironmentSizeResponseArrayOutput() EnvironmentSizeResponseArrayOutput {
	return o
}

func (o EnvironmentSizeResponseArrayOutput) ToEnvironmentSizeResponseArrayOutputWithContext(ctx context.Context) EnvironmentSizeResponseArrayOutput {
	return o
}

func (o EnvironmentSizeResponseArrayOutput) Index(i pulumi.IntInput) EnvironmentSizeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentSizeResponse {
		return vs[0].([]EnvironmentSizeResponse)[vs[1].(int)]
	}).(EnvironmentSizeResponseOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponse struct {
	// The offer of the gallery image.
	Offer *string `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType *string `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher *string `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku *string `pulumi:"sku"`
	// The version of the gallery image.
	Version *string `pulumi:"version"`
}

// GalleryImageReferenceResponseInput is an input type that accepts GalleryImageReferenceResponseArgs and GalleryImageReferenceResponseOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponseInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
type GalleryImageReferenceResponseInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput
	ToGalleryImageReferenceResponseOutputWithContext(context.Context) GalleryImageReferenceResponseOutput
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseArgs struct {
	// The offer of the gallery image.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// The OS type of the gallery image.
	OsType pulumi.StringPtrInput `pulumi:"osType"`
	// The publisher of the gallery image.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// The SKU of the gallery image.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// The version of the gallery image.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GalleryImageReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return i.ToGalleryImageReferenceResponseOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput)
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i GalleryImageReferenceResponseArgs) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponseOutput).ToGalleryImageReferenceResponsePtrOutputWithContext(ctx)
}

// GalleryImageReferenceResponsePtrInput is an input type that accepts GalleryImageReferenceResponseArgs, GalleryImageReferenceResponsePtr and GalleryImageReferenceResponsePtrOutput values.
// You can construct a concrete instance of `GalleryImageReferenceResponsePtrInput` via:
//
//          GalleryImageReferenceResponseArgs{...}
//
//  or:
//
//          nil
type GalleryImageReferenceResponsePtrInput interface {
	pulumi.Input

	ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput
	ToGalleryImageReferenceResponsePtrOutputWithContext(context.Context) GalleryImageReferenceResponsePtrOutput
}

type galleryImageReferenceResponsePtrType GalleryImageReferenceResponseArgs

func GalleryImageReferenceResponsePtr(v *GalleryImageReferenceResponseArgs) GalleryImageReferenceResponsePtrInput {
	return (*galleryImageReferenceResponsePtrType)(v)
}

func (*galleryImageReferenceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return i.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (i *galleryImageReferenceResponsePtrType) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GalleryImageReferenceResponsePtrOutput)
}

// The reference information for an Azure Marketplace image.
type GalleryImageReferenceResponseOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutput() GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponseOutputWithContext(ctx context.Context) GalleryImageReferenceResponseOutput {
	return o
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o.ToGalleryImageReferenceResponsePtrOutputWithContext(context.Background())
}

func (o GalleryImageReferenceResponseOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *GalleryImageReferenceResponse {
		return &v
	}).(GalleryImageReferenceResponsePtrOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponseOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponseOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.OsType }).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponseOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GalleryImageReferenceResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GalleryImageReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (GalleryImageReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GalleryImageReferenceResponse)(nil)).Elem()
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutput() GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) ToGalleryImageReferenceResponsePtrOutputWithContext(ctx context.Context) GalleryImageReferenceResponsePtrOutput {
	return o
}

func (o GalleryImageReferenceResponsePtrOutput) Elem() GalleryImageReferenceResponseOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) GalleryImageReferenceResponse { return *v }).(GalleryImageReferenceResponseOutput)
}

// The offer of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// The OS type of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) OsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.OsType
	}).(pulumi.StringPtrOutput)
}

// The publisher of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// The SKU of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// The version of the gallery image.
func (o GalleryImageReferenceResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GalleryImageReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// This represents the details about a lab that the User is in, and its state.
type LabDetailsResponse struct {
	// The Id of the lab.
	Id *string `pulumi:"id"`
	// Name of the lab
	Name *string `pulumi:"name"`
	// The provisioning state of the lab.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The maximum duration a user can use a VM in this lab.
	UsageQuota string `pulumi:"usageQuota"`
}

// LabDetailsResponseInput is an input type that accepts LabDetailsResponseArgs and LabDetailsResponseOutput values.
// You can construct a concrete instance of `LabDetailsResponseInput` via:
//
//          LabDetailsResponseArgs{...}
type LabDetailsResponseInput interface {
	pulumi.Input

	ToLabDetailsResponseOutput() LabDetailsResponseOutput
	ToLabDetailsResponseOutputWithContext(context.Context) LabDetailsResponseOutput
}

// This represents the details about a lab that the User is in, and its state.
type LabDetailsResponseArgs struct {
	// The Id of the lab.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the lab
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the lab.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The maximum duration a user can use a VM in this lab.
	UsageQuota pulumi.StringInput `pulumi:"usageQuota"`
}

func (LabDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LabDetailsResponse)(nil)).Elem()
}

func (i LabDetailsResponseArgs) ToLabDetailsResponseOutput() LabDetailsResponseOutput {
	return i.ToLabDetailsResponseOutputWithContext(context.Background())
}

func (i LabDetailsResponseArgs) ToLabDetailsResponseOutputWithContext(ctx context.Context) LabDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabDetailsResponseOutput)
}

// LabDetailsResponseArrayInput is an input type that accepts LabDetailsResponseArray and LabDetailsResponseArrayOutput values.
// You can construct a concrete instance of `LabDetailsResponseArrayInput` via:
//
//          LabDetailsResponseArray{ LabDetailsResponseArgs{...} }
type LabDetailsResponseArrayInput interface {
	pulumi.Input

	ToLabDetailsResponseArrayOutput() LabDetailsResponseArrayOutput
	ToLabDetailsResponseArrayOutputWithContext(context.Context) LabDetailsResponseArrayOutput
}

type LabDetailsResponseArray []LabDetailsResponseInput

func (LabDetailsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabDetailsResponse)(nil)).Elem()
}

func (i LabDetailsResponseArray) ToLabDetailsResponseArrayOutput() LabDetailsResponseArrayOutput {
	return i.ToLabDetailsResponseArrayOutputWithContext(context.Background())
}

func (i LabDetailsResponseArray) ToLabDetailsResponseArrayOutputWithContext(ctx context.Context) LabDetailsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LabDetailsResponseArrayOutput)
}

// This represents the details about a lab that the User is in, and its state.
type LabDetailsResponseOutput struct{ *pulumi.OutputState }

func (LabDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LabDetailsResponse)(nil)).Elem()
}

func (o LabDetailsResponseOutput) ToLabDetailsResponseOutput() LabDetailsResponseOutput {
	return o
}

func (o LabDetailsResponseOutput) ToLabDetailsResponseOutputWithContext(ctx context.Context) LabDetailsResponseOutput {
	return o
}

// The Id of the lab.
func (o LabDetailsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabDetailsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the lab
func (o LabDetailsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabDetailsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the lab.
func (o LabDetailsResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LabDetailsResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The maximum duration a user can use a VM in this lab.
func (o LabDetailsResponseOutput) UsageQuota() pulumi.StringOutput {
	return o.ApplyT(func(v LabDetailsResponse) string { return v.UsageQuota }).(pulumi.StringOutput)
}

type LabDetailsResponseArrayOutput struct{ *pulumi.OutputState }

func (LabDetailsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LabDetailsResponse)(nil)).Elem()
}

func (o LabDetailsResponseArrayOutput) ToLabDetailsResponseArrayOutput() LabDetailsResponseArrayOutput {
	return o
}

func (o LabDetailsResponseArrayOutput) ToLabDetailsResponseArrayOutputWithContext(ctx context.Context) LabDetailsResponseArrayOutput {
	return o
}

func (o LabDetailsResponseArrayOutput) Index(i pulumi.IntInput) LabDetailsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LabDetailsResponse {
		return vs[0].([]LabDetailsResponse)[vs[1].(int)]
	}).(LabDetailsResponseOutput)
}

// Details of the status of an operation.
type LatestOperationResultResponse struct {
	// Error code on failure.
	ErrorCode string `pulumi:"errorCode"`
	// The error message.
	ErrorMessage string `pulumi:"errorMessage"`
	// The HttpMethod - PUT/POST/DELETE for the operation.
	HttpMethod string `pulumi:"httpMethod"`
	// The URL to use to check long-running operation status
	OperationUrl string `pulumi:"operationUrl"`
	// Request URI of the operation.
	RequestUri string `pulumi:"requestUri"`
	// The current status of the operation.
	Status string `pulumi:"status"`
}

// LatestOperationResultResponseInput is an input type that accepts LatestOperationResultResponseArgs and LatestOperationResultResponseOutput values.
// You can construct a concrete instance of `LatestOperationResultResponseInput` via:
//
//          LatestOperationResultResponseArgs{...}
type LatestOperationResultResponseInput interface {
	pulumi.Input

	ToLatestOperationResultResponseOutput() LatestOperationResultResponseOutput
	ToLatestOperationResultResponseOutputWithContext(context.Context) LatestOperationResultResponseOutput
}

// Details of the status of an operation.
type LatestOperationResultResponseArgs struct {
	// Error code on failure.
	ErrorCode pulumi.StringInput `pulumi:"errorCode"`
	// The error message.
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	// The HttpMethod - PUT/POST/DELETE for the operation.
	HttpMethod pulumi.StringInput `pulumi:"httpMethod"`
	// The URL to use to check long-running operation status
	OperationUrl pulumi.StringInput `pulumi:"operationUrl"`
	// Request URI of the operation.
	RequestUri pulumi.StringInput `pulumi:"requestUri"`
	// The current status of the operation.
	Status pulumi.StringInput `pulumi:"status"`
}

func (LatestOperationResultResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LatestOperationResultResponse)(nil)).Elem()
}

func (i LatestOperationResultResponseArgs) ToLatestOperationResultResponseOutput() LatestOperationResultResponseOutput {
	return i.ToLatestOperationResultResponseOutputWithContext(context.Background())
}

func (i LatestOperationResultResponseArgs) ToLatestOperationResultResponseOutputWithContext(ctx context.Context) LatestOperationResultResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LatestOperationResultResponseOutput)
}

func (i LatestOperationResultResponseArgs) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return i.ToLatestOperationResultResponsePtrOutputWithContext(context.Background())
}

func (i LatestOperationResultResponseArgs) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LatestOperationResultResponseOutput).ToLatestOperationResultResponsePtrOutputWithContext(ctx)
}

// LatestOperationResultResponsePtrInput is an input type that accepts LatestOperationResultResponseArgs, LatestOperationResultResponsePtr and LatestOperationResultResponsePtrOutput values.
// You can construct a concrete instance of `LatestOperationResultResponsePtrInput` via:
//
//          LatestOperationResultResponseArgs{...}
//
//  or:
//
//          nil
type LatestOperationResultResponsePtrInput interface {
	pulumi.Input

	ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput
	ToLatestOperationResultResponsePtrOutputWithContext(context.Context) LatestOperationResultResponsePtrOutput
}

type latestOperationResultResponsePtrType LatestOperationResultResponseArgs

func LatestOperationResultResponsePtr(v *LatestOperationResultResponseArgs) LatestOperationResultResponsePtrInput {
	return (*latestOperationResultResponsePtrType)(v)
}

func (*latestOperationResultResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LatestOperationResultResponse)(nil)).Elem()
}

func (i *latestOperationResultResponsePtrType) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return i.ToLatestOperationResultResponsePtrOutputWithContext(context.Background())
}

func (i *latestOperationResultResponsePtrType) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LatestOperationResultResponsePtrOutput)
}

// Details of the status of an operation.
type LatestOperationResultResponseOutput struct{ *pulumi.OutputState }

func (LatestOperationResultResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LatestOperationResultResponse)(nil)).Elem()
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponseOutput() LatestOperationResultResponseOutput {
	return o
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponseOutputWithContext(ctx context.Context) LatestOperationResultResponseOutput {
	return o
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return o.ToLatestOperationResultResponsePtrOutputWithContext(context.Background())
}

func (o LatestOperationResultResponseOutput) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) *LatestOperationResultResponse {
		return &v
	}).(LatestOperationResultResponsePtrOutput)
}

// Error code on failure.
func (o LatestOperationResultResponseOutput) ErrorCode() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.ErrorCode }).(pulumi.StringOutput)
}

// The error message.
func (o LatestOperationResultResponseOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

// The HttpMethod - PUT/POST/DELETE for the operation.
func (o LatestOperationResultResponseOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// The URL to use to check long-running operation status
func (o LatestOperationResultResponseOutput) OperationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.OperationUrl }).(pulumi.StringOutput)
}

// Request URI of the operation.
func (o LatestOperationResultResponseOutput) RequestUri() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.RequestUri }).(pulumi.StringOutput)
}

// The current status of the operation.
func (o LatestOperationResultResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LatestOperationResultResponse) string { return v.Status }).(pulumi.StringOutput)
}

type LatestOperationResultResponsePtrOutput struct{ *pulumi.OutputState }

func (LatestOperationResultResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LatestOperationResultResponse)(nil)).Elem()
}

func (o LatestOperationResultResponsePtrOutput) ToLatestOperationResultResponsePtrOutput() LatestOperationResultResponsePtrOutput {
	return o
}

func (o LatestOperationResultResponsePtrOutput) ToLatestOperationResultResponsePtrOutputWithContext(ctx context.Context) LatestOperationResultResponsePtrOutput {
	return o
}

func (o LatestOperationResultResponsePtrOutput) Elem() LatestOperationResultResponseOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) LatestOperationResultResponse { return *v }).(LatestOperationResultResponseOutput)
}

// Error code on failure.
func (o LatestOperationResultResponsePtrOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorCode
	}).(pulumi.StringPtrOutput)
}

// The error message.
func (o LatestOperationResultResponsePtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

// The HttpMethod - PUT/POST/DELETE for the operation.
func (o LatestOperationResultResponsePtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// The URL to use to check long-running operation status
func (o LatestOperationResultResponsePtrOutput) OperationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.OperationUrl
	}).(pulumi.StringPtrOutput)
}

// Request URI of the operation.
func (o LatestOperationResultResponsePtrOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequestUri
	}).(pulumi.StringPtrOutput)
}

// The current status of the operation.
func (o LatestOperationResultResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LatestOperationResultResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// Network details of the environment
type NetworkInterfaceResponse struct {
	// PrivateIp address of the Compute VM
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Connection information for Windows
	RdpAuthority string `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority string `pulumi:"sshAuthority"`
	// Username of the VM
	Username string `pulumi:"username"`
}

// NetworkInterfaceResponseInput is an input type that accepts NetworkInterfaceResponseArgs and NetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseInput` via:
//
//          NetworkInterfaceResponseArgs{...}
type NetworkInterfaceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput
	ToNetworkInterfaceResponseOutputWithContext(context.Context) NetworkInterfaceResponseOutput
}

// Network details of the environment
type NetworkInterfaceResponseArgs struct {
	// PrivateIp address of the Compute VM
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Connection information for Windows
	RdpAuthority pulumi.StringInput `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority pulumi.StringInput `pulumi:"sshAuthority"`
	// Username of the VM
	Username pulumi.StringInput `pulumi:"username"`
}

func (NetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return i.ToNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput)
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return i.ToNetworkInterfaceResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput).ToNetworkInterfaceResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceResponsePtrInput is an input type that accepts NetworkInterfaceResponseArgs, NetworkInterfaceResponsePtr and NetworkInterfaceResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponsePtrInput` via:
//
//          NetworkInterfaceResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput
	ToNetworkInterfaceResponsePtrOutputWithContext(context.Context) NetworkInterfaceResponsePtrOutput
}

type networkInterfaceResponsePtrType NetworkInterfaceResponseArgs

func NetworkInterfaceResponsePtr(v *NetworkInterfaceResponseArgs) NetworkInterfaceResponsePtrInput {
	return (*networkInterfaceResponsePtrType)(v)
}

func (*networkInterfaceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceResponse)(nil)).Elem()
}

func (i *networkInterfaceResponsePtrType) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return i.ToNetworkInterfaceResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceResponsePtrType) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponsePtrOutput)
}

// Network details of the environment
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return o.ToNetworkInterfaceResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceResponse {
		return &v
	}).(NetworkInterfaceResponsePtrOutput)
}

// PrivateIp address of the Compute VM
func (o NetworkInterfaceResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Connection information for Windows
func (o NetworkInterfaceResponseOutput) RdpAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.RdpAuthority }).(pulumi.StringOutput)
}

// Connection information for Linux
func (o NetworkInterfaceResponseOutput) SshAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.SshAuthority }).(pulumi.StringOutput)
}

// Username of the VM
func (o NetworkInterfaceResponseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Username }).(pulumi.StringOutput)
}

type NetworkInterfaceResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponsePtrOutput) ToNetworkInterfaceResponsePtrOutput() NetworkInterfaceResponsePtrOutput {
	return o
}

func (o NetworkInterfaceResponsePtrOutput) ToNetworkInterfaceResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceResponsePtrOutput {
	return o
}

func (o NetworkInterfaceResponsePtrOutput) Elem() NetworkInterfaceResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) NetworkInterfaceResponse { return *v }).(NetworkInterfaceResponseOutput)
}

// PrivateIp address of the Compute VM
func (o NetworkInterfaceResponsePtrOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIpAddress
	}).(pulumi.StringPtrOutput)
}

// Connection information for Windows
func (o NetworkInterfaceResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// Connection information for Linux
func (o NetworkInterfaceResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

// Username of the VM
func (o NetworkInterfaceResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// Represents the status of an operation that used the batch API.
type OperationBatchStatusResponseItemResponse struct {
	// status of the long running operation for an environment
	OperationUrl string `pulumi:"operationUrl"`
	// status of the long running operation for an environment
	Status string `pulumi:"status"`
}

// OperationBatchStatusResponseItemResponseInput is an input type that accepts OperationBatchStatusResponseItemResponseArgs and OperationBatchStatusResponseItemResponseOutput values.
// You can construct a concrete instance of `OperationBatchStatusResponseItemResponseInput` via:
//
//          OperationBatchStatusResponseItemResponseArgs{...}
type OperationBatchStatusResponseItemResponseInput interface {
	pulumi.Input

	ToOperationBatchStatusResponseItemResponseOutput() OperationBatchStatusResponseItemResponseOutput
	ToOperationBatchStatusResponseItemResponseOutputWithContext(context.Context) OperationBatchStatusResponseItemResponseOutput
}

// Represents the status of an operation that used the batch API.
type OperationBatchStatusResponseItemResponseArgs struct {
	// status of the long running operation for an environment
	OperationUrl pulumi.StringInput `pulumi:"operationUrl"`
	// status of the long running operation for an environment
	Status pulumi.StringInput `pulumi:"status"`
}

func (OperationBatchStatusResponseItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationBatchStatusResponseItemResponse)(nil)).Elem()
}

func (i OperationBatchStatusResponseItemResponseArgs) ToOperationBatchStatusResponseItemResponseOutput() OperationBatchStatusResponseItemResponseOutput {
	return i.ToOperationBatchStatusResponseItemResponseOutputWithContext(context.Background())
}

func (i OperationBatchStatusResponseItemResponseArgs) ToOperationBatchStatusResponseItemResponseOutputWithContext(ctx context.Context) OperationBatchStatusResponseItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationBatchStatusResponseItemResponseOutput)
}

// OperationBatchStatusResponseItemResponseArrayInput is an input type that accepts OperationBatchStatusResponseItemResponseArray and OperationBatchStatusResponseItemResponseArrayOutput values.
// You can construct a concrete instance of `OperationBatchStatusResponseItemResponseArrayInput` via:
//
//          OperationBatchStatusResponseItemResponseArray{ OperationBatchStatusResponseItemResponseArgs{...} }
type OperationBatchStatusResponseItemResponseArrayInput interface {
	pulumi.Input

	ToOperationBatchStatusResponseItemResponseArrayOutput() OperationBatchStatusResponseItemResponseArrayOutput
	ToOperationBatchStatusResponseItemResponseArrayOutputWithContext(context.Context) OperationBatchStatusResponseItemResponseArrayOutput
}

type OperationBatchStatusResponseItemResponseArray []OperationBatchStatusResponseItemResponseInput

func (OperationBatchStatusResponseItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OperationBatchStatusResponseItemResponse)(nil)).Elem()
}

func (i OperationBatchStatusResponseItemResponseArray) ToOperationBatchStatusResponseItemResponseArrayOutput() OperationBatchStatusResponseItemResponseArrayOutput {
	return i.ToOperationBatchStatusResponseItemResponseArrayOutputWithContext(context.Background())
}

func (i OperationBatchStatusResponseItemResponseArray) ToOperationBatchStatusResponseItemResponseArrayOutputWithContext(ctx context.Context) OperationBatchStatusResponseItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperationBatchStatusResponseItemResponseArrayOutput)
}

// Represents the status of an operation that used the batch API.
type OperationBatchStatusResponseItemResponseOutput struct{ *pulumi.OutputState }

func (OperationBatchStatusResponseItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OperationBatchStatusResponseItemResponse)(nil)).Elem()
}

func (o OperationBatchStatusResponseItemResponseOutput) ToOperationBatchStatusResponseItemResponseOutput() OperationBatchStatusResponseItemResponseOutput {
	return o
}

func (o OperationBatchStatusResponseItemResponseOutput) ToOperationBatchStatusResponseItemResponseOutputWithContext(ctx context.Context) OperationBatchStatusResponseItemResponseOutput {
	return o
}

// status of the long running operation for an environment
func (o OperationBatchStatusResponseItemResponseOutput) OperationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v OperationBatchStatusResponseItemResponse) string { return v.OperationUrl }).(pulumi.StringOutput)
}

// status of the long running operation for an environment
func (o OperationBatchStatusResponseItemResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OperationBatchStatusResponseItemResponse) string { return v.Status }).(pulumi.StringOutput)
}

type OperationBatchStatusResponseItemResponseArrayOutput struct{ *pulumi.OutputState }

func (OperationBatchStatusResponseItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OperationBatchStatusResponseItemResponse)(nil)).Elem()
}

func (o OperationBatchStatusResponseItemResponseArrayOutput) ToOperationBatchStatusResponseItemResponseArrayOutput() OperationBatchStatusResponseItemResponseArrayOutput {
	return o
}

func (o OperationBatchStatusResponseItemResponseArrayOutput) ToOperationBatchStatusResponseItemResponseArrayOutputWithContext(ctx context.Context) OperationBatchStatusResponseItemResponseArrayOutput {
	return o
}

func (o OperationBatchStatusResponseItemResponseArrayOutput) Index(i pulumi.IntInput) OperationBatchStatusResponseItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OperationBatchStatusResponseItemResponse {
		return vs[0].([]OperationBatchStatusResponseItemResponse)[vs[1].(int)]
	}).(OperationBatchStatusResponseItemResponseOutput)
}

// Details of a Reference Vm
type ReferenceVm struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password *string `pulumi:"password"`
	// The username of the virtual machine
	UserName string `pulumi:"userName"`
}

// ReferenceVmInput is an input type that accepts ReferenceVmArgs and ReferenceVmOutput values.
// You can construct a concrete instance of `ReferenceVmInput` via:
//
//          ReferenceVmArgs{...}
type ReferenceVmInput interface {
	pulumi.Input

	ToReferenceVmOutput() ReferenceVmOutput
	ToReferenceVmOutputWithContext(context.Context) ReferenceVmOutput
}

// Details of a Reference Vm
type ReferenceVmArgs struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username of the virtual machine
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (ReferenceVmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVm)(nil)).Elem()
}

func (i ReferenceVmArgs) ToReferenceVmOutput() ReferenceVmOutput {
	return i.ToReferenceVmOutputWithContext(context.Background())
}

func (i ReferenceVmArgs) ToReferenceVmOutputWithContext(ctx context.Context) ReferenceVmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmOutput)
}

func (i ReferenceVmArgs) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return i.ToReferenceVmPtrOutputWithContext(context.Background())
}

func (i ReferenceVmArgs) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmOutput).ToReferenceVmPtrOutputWithContext(ctx)
}

// ReferenceVmPtrInput is an input type that accepts ReferenceVmArgs, ReferenceVmPtr and ReferenceVmPtrOutput values.
// You can construct a concrete instance of `ReferenceVmPtrInput` via:
//
//          ReferenceVmArgs{...}
//
//  or:
//
//          nil
type ReferenceVmPtrInput interface {
	pulumi.Input

	ToReferenceVmPtrOutput() ReferenceVmPtrOutput
	ToReferenceVmPtrOutputWithContext(context.Context) ReferenceVmPtrOutput
}

type referenceVmPtrType ReferenceVmArgs

func ReferenceVmPtr(v *ReferenceVmArgs) ReferenceVmPtrInput {
	return (*referenceVmPtrType)(v)
}

func (*referenceVmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVm)(nil)).Elem()
}

func (i *referenceVmPtrType) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return i.ToReferenceVmPtrOutputWithContext(context.Background())
}

func (i *referenceVmPtrType) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmPtrOutput)
}

// Details of a Reference Vm
type ReferenceVmOutput struct{ *pulumi.OutputState }

func (ReferenceVmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVm)(nil)).Elem()
}

func (o ReferenceVmOutput) ToReferenceVmOutput() ReferenceVmOutput {
	return o
}

func (o ReferenceVmOutput) ToReferenceVmOutputWithContext(ctx context.Context) ReferenceVmOutput {
	return o
}

func (o ReferenceVmOutput) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return o.ToReferenceVmPtrOutputWithContext(context.Background())
}

func (o ReferenceVmOutput) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return o.ApplyT(func(v ReferenceVm) *ReferenceVm {
		return &v
	}).(ReferenceVmPtrOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceVm) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceVm) string { return v.UserName }).(pulumi.StringOutput)
}

type ReferenceVmPtrOutput struct{ *pulumi.OutputState }

func (ReferenceVmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVm)(nil)).Elem()
}

func (o ReferenceVmPtrOutput) ToReferenceVmPtrOutput() ReferenceVmPtrOutput {
	return o
}

func (o ReferenceVmPtrOutput) ToReferenceVmPtrOutputWithContext(ctx context.Context) ReferenceVmPtrOutput {
	return o
}

func (o ReferenceVmPtrOutput) Elem() ReferenceVmOutput {
	return o.ApplyT(func(v *ReferenceVm) ReferenceVm { return *v }).(ReferenceVmOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVm) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVm) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// Details of a Reference Vm
type ReferenceVmResponse struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password *string `pulumi:"password"`
	// The username of the virtual machine
	UserName string `pulumi:"userName"`
	// VM resource Id for the environment
	VmResourceId string `pulumi:"vmResourceId"`
	// The state details for the reference virtual machine.
	VmStateDetails VmStateDetailsResponse `pulumi:"vmStateDetails"`
}

// ReferenceVmResponseInput is an input type that accepts ReferenceVmResponseArgs and ReferenceVmResponseOutput values.
// You can construct a concrete instance of `ReferenceVmResponseInput` via:
//
//          ReferenceVmResponseArgs{...}
type ReferenceVmResponseInput interface {
	pulumi.Input

	ToReferenceVmResponseOutput() ReferenceVmResponseOutput
	ToReferenceVmResponseOutputWithContext(context.Context) ReferenceVmResponseOutput
}

// Details of a Reference Vm
type ReferenceVmResponseArgs struct {
	// The password of the virtual machine. This will be set to null in GET resource API
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username of the virtual machine
	UserName pulumi.StringInput `pulumi:"userName"`
	// VM resource Id for the environment
	VmResourceId pulumi.StringInput `pulumi:"vmResourceId"`
	// The state details for the reference virtual machine.
	VmStateDetails VmStateDetailsResponseInput `pulumi:"vmStateDetails"`
}

func (ReferenceVmResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVmResponse)(nil)).Elem()
}

func (i ReferenceVmResponseArgs) ToReferenceVmResponseOutput() ReferenceVmResponseOutput {
	return i.ToReferenceVmResponseOutputWithContext(context.Background())
}

func (i ReferenceVmResponseArgs) ToReferenceVmResponseOutputWithContext(ctx context.Context) ReferenceVmResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmResponseOutput)
}

func (i ReferenceVmResponseArgs) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return i.ToReferenceVmResponsePtrOutputWithContext(context.Background())
}

func (i ReferenceVmResponseArgs) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmResponseOutput).ToReferenceVmResponsePtrOutputWithContext(ctx)
}

// ReferenceVmResponsePtrInput is an input type that accepts ReferenceVmResponseArgs, ReferenceVmResponsePtr and ReferenceVmResponsePtrOutput values.
// You can construct a concrete instance of `ReferenceVmResponsePtrInput` via:
//
//          ReferenceVmResponseArgs{...}
//
//  or:
//
//          nil
type ReferenceVmResponsePtrInput interface {
	pulumi.Input

	ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput
	ToReferenceVmResponsePtrOutputWithContext(context.Context) ReferenceVmResponsePtrOutput
}

type referenceVmResponsePtrType ReferenceVmResponseArgs

func ReferenceVmResponsePtr(v *ReferenceVmResponseArgs) ReferenceVmResponsePtrInput {
	return (*referenceVmResponsePtrType)(v)
}

func (*referenceVmResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVmResponse)(nil)).Elem()
}

func (i *referenceVmResponsePtrType) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return i.ToReferenceVmResponsePtrOutputWithContext(context.Background())
}

func (i *referenceVmResponsePtrType) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferenceVmResponsePtrOutput)
}

// Details of a Reference Vm
type ReferenceVmResponseOutput struct{ *pulumi.OutputState }

func (ReferenceVmResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferenceVmResponse)(nil)).Elem()
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponseOutput() ReferenceVmResponseOutput {
	return o
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponseOutputWithContext(ctx context.Context) ReferenceVmResponseOutput {
	return o
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return o.ToReferenceVmResponsePtrOutputWithContext(context.Background())
}

func (o ReferenceVmResponseOutput) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return o.ApplyT(func(v ReferenceVmResponse) *ReferenceVmResponse {
		return &v
	}).(ReferenceVmResponsePtrOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferenceVmResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceVmResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// VM resource Id for the environment
func (o ReferenceVmResponseOutput) VmResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ReferenceVmResponse) string { return v.VmResourceId }).(pulumi.StringOutput)
}

// The state details for the reference virtual machine.
func (o ReferenceVmResponseOutput) VmStateDetails() VmStateDetailsResponseOutput {
	return o.ApplyT(func(v ReferenceVmResponse) VmStateDetailsResponse { return v.VmStateDetails }).(VmStateDetailsResponseOutput)
}

type ReferenceVmResponsePtrOutput struct{ *pulumi.OutputState }

func (ReferenceVmResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReferenceVmResponse)(nil)).Elem()
}

func (o ReferenceVmResponsePtrOutput) ToReferenceVmResponsePtrOutput() ReferenceVmResponsePtrOutput {
	return o
}

func (o ReferenceVmResponsePtrOutput) ToReferenceVmResponsePtrOutputWithContext(ctx context.Context) ReferenceVmResponsePtrOutput {
	return o
}

func (o ReferenceVmResponsePtrOutput) Elem() ReferenceVmResponseOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) ReferenceVmResponse { return *v }).(ReferenceVmResponseOutput)
}

// The password of the virtual machine. This will be set to null in GET resource API
func (o ReferenceVmResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the virtual machine
func (o ReferenceVmResponsePtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ReferenceVmResponsePtrOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VmResourceId
	}).(pulumi.StringPtrOutput)
}

// The state details for the reference virtual machine.
func (o ReferenceVmResponsePtrOutput) VmStateDetails() VmStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v *ReferenceVmResponse) *VmStateDetailsResponse {
		if v == nil {
			return nil
		}
		return &v.VmStateDetails
	}).(VmStateDetailsResponsePtrOutput)
}

// The availability information of sizes across regions
type RegionalAvailabilityResponse struct {
	// Corresponding region
	Region *string `pulumi:"region"`
	// List of all the size information for the region
	SizeAvailabilities []SizeAvailabilityResponse `pulumi:"sizeAvailabilities"`
}

// RegionalAvailabilityResponseInput is an input type that accepts RegionalAvailabilityResponseArgs and RegionalAvailabilityResponseOutput values.
// You can construct a concrete instance of `RegionalAvailabilityResponseInput` via:
//
//          RegionalAvailabilityResponseArgs{...}
type RegionalAvailabilityResponseInput interface {
	pulumi.Input

	ToRegionalAvailabilityResponseOutput() RegionalAvailabilityResponseOutput
	ToRegionalAvailabilityResponseOutputWithContext(context.Context) RegionalAvailabilityResponseOutput
}

// The availability information of sizes across regions
type RegionalAvailabilityResponseArgs struct {
	// Corresponding region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// List of all the size information for the region
	SizeAvailabilities SizeAvailabilityResponseArrayInput `pulumi:"sizeAvailabilities"`
}

func (RegionalAvailabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalAvailabilityResponse)(nil)).Elem()
}

func (i RegionalAvailabilityResponseArgs) ToRegionalAvailabilityResponseOutput() RegionalAvailabilityResponseOutput {
	return i.ToRegionalAvailabilityResponseOutputWithContext(context.Background())
}

func (i RegionalAvailabilityResponseArgs) ToRegionalAvailabilityResponseOutputWithContext(ctx context.Context) RegionalAvailabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalAvailabilityResponseOutput)
}

// RegionalAvailabilityResponseArrayInput is an input type that accepts RegionalAvailabilityResponseArray and RegionalAvailabilityResponseArrayOutput values.
// You can construct a concrete instance of `RegionalAvailabilityResponseArrayInput` via:
//
//          RegionalAvailabilityResponseArray{ RegionalAvailabilityResponseArgs{...} }
type RegionalAvailabilityResponseArrayInput interface {
	pulumi.Input

	ToRegionalAvailabilityResponseArrayOutput() RegionalAvailabilityResponseArrayOutput
	ToRegionalAvailabilityResponseArrayOutputWithContext(context.Context) RegionalAvailabilityResponseArrayOutput
}

type RegionalAvailabilityResponseArray []RegionalAvailabilityResponseInput

func (RegionalAvailabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalAvailabilityResponse)(nil)).Elem()
}

func (i RegionalAvailabilityResponseArray) ToRegionalAvailabilityResponseArrayOutput() RegionalAvailabilityResponseArrayOutput {
	return i.ToRegionalAvailabilityResponseArrayOutputWithContext(context.Background())
}

func (i RegionalAvailabilityResponseArray) ToRegionalAvailabilityResponseArrayOutputWithContext(ctx context.Context) RegionalAvailabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegionalAvailabilityResponseArrayOutput)
}

// The availability information of sizes across regions
type RegionalAvailabilityResponseOutput struct{ *pulumi.OutputState }

func (RegionalAvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalAvailabilityResponse)(nil)).Elem()
}

func (o RegionalAvailabilityResponseOutput) ToRegionalAvailabilityResponseOutput() RegionalAvailabilityResponseOutput {
	return o
}

func (o RegionalAvailabilityResponseOutput) ToRegionalAvailabilityResponseOutputWithContext(ctx context.Context) RegionalAvailabilityResponseOutput {
	return o
}

// Corresponding region
func (o RegionalAvailabilityResponseOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionalAvailabilityResponse) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// List of all the size information for the region
func (o RegionalAvailabilityResponseOutput) SizeAvailabilities() SizeAvailabilityResponseArrayOutput {
	return o.ApplyT(func(v RegionalAvailabilityResponse) []SizeAvailabilityResponse { return v.SizeAvailabilities }).(SizeAvailabilityResponseArrayOutput)
}

type RegionalAvailabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (RegionalAvailabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegionalAvailabilityResponse)(nil)).Elem()
}

func (o RegionalAvailabilityResponseArrayOutput) ToRegionalAvailabilityResponseArrayOutput() RegionalAvailabilityResponseArrayOutput {
	return o
}

func (o RegionalAvailabilityResponseArrayOutput) ToRegionalAvailabilityResponseArrayOutputWithContext(ctx context.Context) RegionalAvailabilityResponseArrayOutput {
	return o
}

func (o RegionalAvailabilityResponseArrayOutput) Index(i pulumi.IntInput) RegionalAvailabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegionalAvailabilityResponse {
		return vs[0].([]RegionalAvailabilityResponse)[vs[1].(int)]
	}).(RegionalAvailabilityResponseOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSet struct {
	// resourceSettingId for the environment
	ResourceSettingId *string `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId *string `pulumi:"vmResourceId"`
}

// ResourceSetInput is an input type that accepts ResourceSetArgs and ResourceSetOutput values.
// You can construct a concrete instance of `ResourceSetInput` via:
//
//          ResourceSetArgs{...}
type ResourceSetInput interface {
	pulumi.Input

	ToResourceSetOutput() ResourceSetOutput
	ToResourceSetOutputWithContext(context.Context) ResourceSetOutput
}

// Represents a VM and the setting Id it was created for.
type ResourceSetArgs struct {
	// resourceSettingId for the environment
	ResourceSettingId pulumi.StringPtrInput `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId pulumi.StringPtrInput `pulumi:"vmResourceId"`
}

func (ResourceSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSet)(nil)).Elem()
}

func (i ResourceSetArgs) ToResourceSetOutput() ResourceSetOutput {
	return i.ToResourceSetOutputWithContext(context.Background())
}

func (i ResourceSetArgs) ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetOutput)
}

func (i ResourceSetArgs) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return i.ToResourceSetPtrOutputWithContext(context.Background())
}

func (i ResourceSetArgs) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetOutput).ToResourceSetPtrOutputWithContext(ctx)
}

// ResourceSetPtrInput is an input type that accepts ResourceSetArgs, ResourceSetPtr and ResourceSetPtrOutput values.
// You can construct a concrete instance of `ResourceSetPtrInput` via:
//
//          ResourceSetArgs{...}
//
//  or:
//
//          nil
type ResourceSetPtrInput interface {
	pulumi.Input

	ToResourceSetPtrOutput() ResourceSetPtrOutput
	ToResourceSetPtrOutputWithContext(context.Context) ResourceSetPtrOutput
}

type resourceSetPtrType ResourceSetArgs

func ResourceSetPtr(v *ResourceSetArgs) ResourceSetPtrInput {
	return (*resourceSetPtrType)(v)
}

func (*resourceSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSet)(nil)).Elem()
}

func (i *resourceSetPtrType) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return i.ToResourceSetPtrOutputWithContext(context.Background())
}

func (i *resourceSetPtrType) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetPtrOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSetOutput struct{ *pulumi.OutputState }

func (ResourceSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSet)(nil)).Elem()
}

func (o ResourceSetOutput) ToResourceSetOutput() ResourceSetOutput {
	return o
}

func (o ResourceSetOutput) ToResourceSetOutputWithContext(ctx context.Context) ResourceSetOutput {
	return o
}

func (o ResourceSetOutput) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return o.ToResourceSetPtrOutputWithContext(context.Background())
}

func (o ResourceSetOutput) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return o.ApplyT(func(v ResourceSet) *ResourceSet {
		return &v
	}).(ResourceSetPtrOutput)
}

// resourceSettingId for the environment
func (o ResourceSetOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSet) *string { return v.ResourceSettingId }).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSet) *string { return v.VmResourceId }).(pulumi.StringPtrOutput)
}

type ResourceSetPtrOutput struct{ *pulumi.OutputState }

func (ResourceSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSet)(nil)).Elem()
}

func (o ResourceSetPtrOutput) ToResourceSetPtrOutput() ResourceSetPtrOutput {
	return o
}

func (o ResourceSetPtrOutput) ToResourceSetPtrOutputWithContext(ctx context.Context) ResourceSetPtrOutput {
	return o
}

func (o ResourceSetPtrOutput) Elem() ResourceSetOutput {
	return o.ApplyT(func(v *ResourceSet) ResourceSet { return *v }).(ResourceSetOutput)
}

// resourceSettingId for the environment
func (o ResourceSetPtrOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSet) *string {
		if v == nil {
			return nil
		}
		return v.ResourceSettingId
	}).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetPtrOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSet) *string {
		if v == nil {
			return nil
		}
		return v.VmResourceId
	}).(pulumi.StringPtrOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSetResponse struct {
	// resourceSettingId for the environment
	ResourceSettingId *string `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId *string `pulumi:"vmResourceId"`
}

// ResourceSetResponseInput is an input type that accepts ResourceSetResponseArgs and ResourceSetResponseOutput values.
// You can construct a concrete instance of `ResourceSetResponseInput` via:
//
//          ResourceSetResponseArgs{...}
type ResourceSetResponseInput interface {
	pulumi.Input

	ToResourceSetResponseOutput() ResourceSetResponseOutput
	ToResourceSetResponseOutputWithContext(context.Context) ResourceSetResponseOutput
}

// Represents a VM and the setting Id it was created for.
type ResourceSetResponseArgs struct {
	// resourceSettingId for the environment
	ResourceSettingId pulumi.StringPtrInput `pulumi:"resourceSettingId"`
	// VM resource Id for the environment
	VmResourceId pulumi.StringPtrInput `pulumi:"vmResourceId"`
}

func (ResourceSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResponse)(nil)).Elem()
}

func (i ResourceSetResponseArgs) ToResourceSetResponseOutput() ResourceSetResponseOutput {
	return i.ToResourceSetResponseOutputWithContext(context.Background())
}

func (i ResourceSetResponseArgs) ToResourceSetResponseOutputWithContext(ctx context.Context) ResourceSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResponseOutput)
}

func (i ResourceSetResponseArgs) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return i.ToResourceSetResponsePtrOutputWithContext(context.Background())
}

func (i ResourceSetResponseArgs) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResponseOutput).ToResourceSetResponsePtrOutputWithContext(ctx)
}

// ResourceSetResponsePtrInput is an input type that accepts ResourceSetResponseArgs, ResourceSetResponsePtr and ResourceSetResponsePtrOutput values.
// You can construct a concrete instance of `ResourceSetResponsePtrInput` via:
//
//          ResourceSetResponseArgs{...}
//
//  or:
//
//          nil
type ResourceSetResponsePtrInput interface {
	pulumi.Input

	ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput
	ToResourceSetResponsePtrOutputWithContext(context.Context) ResourceSetResponsePtrOutput
}

type resourceSetResponsePtrType ResourceSetResponseArgs

func ResourceSetResponsePtr(v *ResourceSetResponseArgs) ResourceSetResponsePtrInput {
	return (*resourceSetResponsePtrType)(v)
}

func (*resourceSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResponse)(nil)).Elem()
}

func (i *resourceSetResponsePtrType) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return i.ToResourceSetResponsePtrOutputWithContext(context.Background())
}

func (i *resourceSetResponsePtrType) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResponsePtrOutput)
}

// Represents a VM and the setting Id it was created for.
type ResourceSetResponseOutput struct{ *pulumi.OutputState }

func (ResourceSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResponse)(nil)).Elem()
}

func (o ResourceSetResponseOutput) ToResourceSetResponseOutput() ResourceSetResponseOutput {
	return o
}

func (o ResourceSetResponseOutput) ToResourceSetResponseOutputWithContext(ctx context.Context) ResourceSetResponseOutput {
	return o
}

func (o ResourceSetResponseOutput) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return o.ToResourceSetResponsePtrOutputWithContext(context.Background())
}

func (o ResourceSetResponseOutput) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *ResourceSetResponse {
		return &v
	}).(ResourceSetResponsePtrOutput)
}

// resourceSettingId for the environment
func (o ResourceSetResponseOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *string { return v.ResourceSettingId }).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetResponseOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResponse) *string { return v.VmResourceId }).(pulumi.StringPtrOutput)
}

type ResourceSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResponse)(nil)).Elem()
}

func (o ResourceSetResponsePtrOutput) ToResourceSetResponsePtrOutput() ResourceSetResponsePtrOutput {
	return o
}

func (o ResourceSetResponsePtrOutput) ToResourceSetResponsePtrOutputWithContext(ctx context.Context) ResourceSetResponsePtrOutput {
	return o
}

func (o ResourceSetResponsePtrOutput) Elem() ResourceSetResponseOutput {
	return o.ApplyT(func(v *ResourceSetResponse) ResourceSetResponse { return *v }).(ResourceSetResponseOutput)
}

// resourceSettingId for the environment
func (o ResourceSetResponsePtrOutput) ResourceSettingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceSettingId
	}).(pulumi.StringPtrOutput)
}

// VM resource Id for the environment
func (o ResourceSetResponsePtrOutput) VmResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResponse) *string {
		if v == nil {
			return nil
		}
		return v.VmResourceId
	}).(pulumi.StringPtrOutput)
}

// Represents resource specific settings
type ResourceSettings struct {
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId *string `pulumi:"galleryImageResourceId"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVm `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size *string `pulumi:"size"`
}

// ResourceSettingsInput is an input type that accepts ResourceSettingsArgs and ResourceSettingsOutput values.
// You can construct a concrete instance of `ResourceSettingsInput` via:
//
//          ResourceSettingsArgs{...}
type ResourceSettingsInput interface {
	pulumi.Input

	ToResourceSettingsOutput() ResourceSettingsOutput
	ToResourceSettingsOutputWithContext(context.Context) ResourceSettingsOutput
}

// Represents resource specific settings
type ResourceSettingsArgs struct {
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId pulumi.StringPtrInput `pulumi:"galleryImageResourceId"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVmInput `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size pulumi.StringPtrInput `pulumi:"size"`
}

func (ResourceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettings)(nil)).Elem()
}

func (i ResourceSettingsArgs) ToResourceSettingsOutput() ResourceSettingsOutput {
	return i.ToResourceSettingsOutputWithContext(context.Background())
}

func (i ResourceSettingsArgs) ToResourceSettingsOutputWithContext(ctx context.Context) ResourceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsOutput)
}

func (i ResourceSettingsArgs) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return i.ToResourceSettingsPtrOutputWithContext(context.Background())
}

func (i ResourceSettingsArgs) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsOutput).ToResourceSettingsPtrOutputWithContext(ctx)
}

// ResourceSettingsPtrInput is an input type that accepts ResourceSettingsArgs, ResourceSettingsPtr and ResourceSettingsPtrOutput values.
// You can construct a concrete instance of `ResourceSettingsPtrInput` via:
//
//          ResourceSettingsArgs{...}
//
//  or:
//
//          nil
type ResourceSettingsPtrInput interface {
	pulumi.Input

	ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput
	ToResourceSettingsPtrOutputWithContext(context.Context) ResourceSettingsPtrOutput
}

type resourceSettingsPtrType ResourceSettingsArgs

func ResourceSettingsPtr(v *ResourceSettingsArgs) ResourceSettingsPtrInput {
	return (*resourceSettingsPtrType)(v)
}

func (*resourceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettings)(nil)).Elem()
}

func (i *resourceSettingsPtrType) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return i.ToResourceSettingsPtrOutputWithContext(context.Background())
}

func (i *resourceSettingsPtrType) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsPtrOutput)
}

// Represents resource specific settings
type ResourceSettingsOutput struct{ *pulumi.OutputState }

func (ResourceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettings)(nil)).Elem()
}

func (o ResourceSettingsOutput) ToResourceSettingsOutput() ResourceSettingsOutput {
	return o
}

func (o ResourceSettingsOutput) ToResourceSettingsOutputWithContext(ctx context.Context) ResourceSettingsOutput {
	return o
}

func (o ResourceSettingsOutput) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return o.ToResourceSettingsPtrOutputWithContext(context.Background())
}

func (o ResourceSettingsOutput) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return o.ApplyT(func(v ResourceSettings) *ResourceSettings {
		return &v
	}).(ResourceSettingsPtrOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettings) *string { return v.GalleryImageResourceId }).(pulumi.StringPtrOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsOutput) ReferenceVm() ReferenceVmOutput {
	return o.ApplyT(func(v ResourceSettings) ReferenceVm { return v.ReferenceVm }).(ReferenceVmOutput)
}

// The size of the virtual machine
func (o ResourceSettingsOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettings) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type ResourceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ResourceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettings)(nil)).Elem()
}

func (o ResourceSettingsPtrOutput) ToResourceSettingsPtrOutput() ResourceSettingsPtrOutput {
	return o
}

func (o ResourceSettingsPtrOutput) ToResourceSettingsPtrOutputWithContext(ctx context.Context) ResourceSettingsPtrOutput {
	return o
}

func (o ResourceSettingsPtrOutput) Elem() ResourceSettingsOutput {
	return o.ApplyT(func(v *ResourceSettings) ResourceSettings { return *v }).(ResourceSettingsOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsPtrOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.GalleryImageResourceId
	}).(pulumi.StringPtrOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsPtrOutput) ReferenceVm() ReferenceVmPtrOutput {
	return o.ApplyT(func(v *ResourceSettings) *ReferenceVm {
		if v == nil {
			return nil
		}
		return &v.ReferenceVm
	}).(ReferenceVmPtrOutput)
}

// The size of the virtual machine
func (o ResourceSettingsPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettings) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Represents resource specific settings
type ResourceSettingsResponse struct {
	// The translated compute cores of the virtual machine
	Cores int `pulumi:"cores"`
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId *string `pulumi:"galleryImageResourceId"`
	// The unique id of the resource setting
	Id string `pulumi:"id"`
	// The name of the image used to created the environment setting
	ImageName string `pulumi:"imageName"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVmResponse `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size *string `pulumi:"size"`
}

// ResourceSettingsResponseInput is an input type that accepts ResourceSettingsResponseArgs and ResourceSettingsResponseOutput values.
// You can construct a concrete instance of `ResourceSettingsResponseInput` via:
//
//          ResourceSettingsResponseArgs{...}
type ResourceSettingsResponseInput interface {
	pulumi.Input

	ToResourceSettingsResponseOutput() ResourceSettingsResponseOutput
	ToResourceSettingsResponseOutputWithContext(context.Context) ResourceSettingsResponseOutput
}

// Represents resource specific settings
type ResourceSettingsResponseArgs struct {
	// The translated compute cores of the virtual machine
	Cores pulumi.IntInput `pulumi:"cores"`
	// The resource id of the gallery image used for creating the virtual machine
	GalleryImageResourceId pulumi.StringPtrInput `pulumi:"galleryImageResourceId"`
	// The unique id of the resource setting
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the image used to created the environment setting
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// Details specific to Reference Vm
	ReferenceVm ReferenceVmResponseInput `pulumi:"referenceVm"`
	// The size of the virtual machine
	Size pulumi.StringPtrInput `pulumi:"size"`
}

func (ResourceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettingsResponse)(nil)).Elem()
}

func (i ResourceSettingsResponseArgs) ToResourceSettingsResponseOutput() ResourceSettingsResponseOutput {
	return i.ToResourceSettingsResponseOutputWithContext(context.Background())
}

func (i ResourceSettingsResponseArgs) ToResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsResponseOutput)
}

func (i ResourceSettingsResponseArgs) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return i.ToResourceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ResourceSettingsResponseArgs) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsResponseOutput).ToResourceSettingsResponsePtrOutputWithContext(ctx)
}

// ResourceSettingsResponsePtrInput is an input type that accepts ResourceSettingsResponseArgs, ResourceSettingsResponsePtr and ResourceSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ResourceSettingsResponsePtrInput` via:
//
//          ResourceSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ResourceSettingsResponsePtrInput interface {
	pulumi.Input

	ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput
	ToResourceSettingsResponsePtrOutputWithContext(context.Context) ResourceSettingsResponsePtrOutput
}

type resourceSettingsResponsePtrType ResourceSettingsResponseArgs

func ResourceSettingsResponsePtr(v *ResourceSettingsResponseArgs) ResourceSettingsResponsePtrInput {
	return (*resourceSettingsResponsePtrType)(v)
}

func (*resourceSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettingsResponse)(nil)).Elem()
}

func (i *resourceSettingsResponsePtrType) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return i.ToResourceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *resourceSettingsResponsePtrType) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSettingsResponsePtrOutput)
}

// Represents resource specific settings
type ResourceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ResourceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponseOutput() ResourceSettingsResponseOutput {
	return o
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponseOutputWithContext(ctx context.Context) ResourceSettingsResponseOutput {
	return o
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return o.ToResourceSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ResourceSettingsResponseOutput) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *ResourceSettingsResponse {
		return &v
	}).(ResourceSettingsResponsePtrOutput)
}

// The translated compute cores of the virtual machine
func (o ResourceSettingsResponseOutput) Cores() pulumi.IntOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) int { return v.Cores }).(pulumi.IntOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsResponseOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *string { return v.GalleryImageResourceId }).(pulumi.StringPtrOutput)
}

// The unique id of the resource setting
func (o ResourceSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the image used to created the environment setting
func (o ResourceSettingsResponseOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) string { return v.ImageName }).(pulumi.StringOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsResponseOutput) ReferenceVm() ReferenceVmResponseOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) ReferenceVmResponse { return v.ReferenceVm }).(ReferenceVmResponseOutput)
}

// The size of the virtual machine
func (o ResourceSettingsResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSettingsResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

type ResourceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ResourceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSettingsResponse)(nil)).Elem()
}

func (o ResourceSettingsResponsePtrOutput) ToResourceSettingsResponsePtrOutput() ResourceSettingsResponsePtrOutput {
	return o
}

func (o ResourceSettingsResponsePtrOutput) ToResourceSettingsResponsePtrOutputWithContext(ctx context.Context) ResourceSettingsResponsePtrOutput {
	return o
}

func (o ResourceSettingsResponsePtrOutput) Elem() ResourceSettingsResponseOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) ResourceSettingsResponse { return *v }).(ResourceSettingsResponseOutput)
}

// The translated compute cores of the virtual machine
func (o ResourceSettingsResponsePtrOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Cores
	}).(pulumi.IntPtrOutput)
}

// The resource id of the gallery image used for creating the virtual machine
func (o ResourceSettingsResponsePtrOutput) GalleryImageResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.GalleryImageResourceId
	}).(pulumi.StringPtrOutput)
}

// The unique id of the resource setting
func (o ResourceSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the image used to created the environment setting
func (o ResourceSettingsResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ImageName
	}).(pulumi.StringPtrOutput)
}

// Details specific to Reference Vm
func (o ResourceSettingsResponsePtrOutput) ReferenceVm() ReferenceVmResponsePtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *ReferenceVmResponse {
		if v == nil {
			return nil
		}
		return &v.ReferenceVm
	}).(ReferenceVmResponsePtrOutput)
}

// The size of the virtual machine
func (o ResourceSettingsResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Represents the size information
type SizeAvailabilityResponse struct {
	// Whether or not this size category is available
	IsAvailable *bool `pulumi:"isAvailable"`
	// The category of the size (Basic, Standard, Performance).
	SizeCategory *string `pulumi:"sizeCategory"`
}

// SizeAvailabilityResponseInput is an input type that accepts SizeAvailabilityResponseArgs and SizeAvailabilityResponseOutput values.
// You can construct a concrete instance of `SizeAvailabilityResponseInput` via:
//
//          SizeAvailabilityResponseArgs{...}
type SizeAvailabilityResponseInput interface {
	pulumi.Input

	ToSizeAvailabilityResponseOutput() SizeAvailabilityResponseOutput
	ToSizeAvailabilityResponseOutputWithContext(context.Context) SizeAvailabilityResponseOutput
}

// Represents the size information
type SizeAvailabilityResponseArgs struct {
	// Whether or not this size category is available
	IsAvailable pulumi.BoolPtrInput `pulumi:"isAvailable"`
	// The category of the size (Basic, Standard, Performance).
	SizeCategory pulumi.StringPtrInput `pulumi:"sizeCategory"`
}

func (SizeAvailabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeAvailabilityResponse)(nil)).Elem()
}

func (i SizeAvailabilityResponseArgs) ToSizeAvailabilityResponseOutput() SizeAvailabilityResponseOutput {
	return i.ToSizeAvailabilityResponseOutputWithContext(context.Background())
}

func (i SizeAvailabilityResponseArgs) ToSizeAvailabilityResponseOutputWithContext(ctx context.Context) SizeAvailabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeAvailabilityResponseOutput)
}

// SizeAvailabilityResponseArrayInput is an input type that accepts SizeAvailabilityResponseArray and SizeAvailabilityResponseArrayOutput values.
// You can construct a concrete instance of `SizeAvailabilityResponseArrayInput` via:
//
//          SizeAvailabilityResponseArray{ SizeAvailabilityResponseArgs{...} }
type SizeAvailabilityResponseArrayInput interface {
	pulumi.Input

	ToSizeAvailabilityResponseArrayOutput() SizeAvailabilityResponseArrayOutput
	ToSizeAvailabilityResponseArrayOutputWithContext(context.Context) SizeAvailabilityResponseArrayOutput
}

type SizeAvailabilityResponseArray []SizeAvailabilityResponseInput

func (SizeAvailabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeAvailabilityResponse)(nil)).Elem()
}

func (i SizeAvailabilityResponseArray) ToSizeAvailabilityResponseArrayOutput() SizeAvailabilityResponseArrayOutput {
	return i.ToSizeAvailabilityResponseArrayOutputWithContext(context.Background())
}

func (i SizeAvailabilityResponseArray) ToSizeAvailabilityResponseArrayOutputWithContext(ctx context.Context) SizeAvailabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeAvailabilityResponseArrayOutput)
}

// Represents the size information
type SizeAvailabilityResponseOutput struct{ *pulumi.OutputState }

func (SizeAvailabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeAvailabilityResponse)(nil)).Elem()
}

func (o SizeAvailabilityResponseOutput) ToSizeAvailabilityResponseOutput() SizeAvailabilityResponseOutput {
	return o
}

func (o SizeAvailabilityResponseOutput) ToSizeAvailabilityResponseOutputWithContext(ctx context.Context) SizeAvailabilityResponseOutput {
	return o
}

// Whether or not this size category is available
func (o SizeAvailabilityResponseOutput) IsAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SizeAvailabilityResponse) *bool { return v.IsAvailable }).(pulumi.BoolPtrOutput)
}

// The category of the size (Basic, Standard, Performance).
func (o SizeAvailabilityResponseOutput) SizeCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SizeAvailabilityResponse) *string { return v.SizeCategory }).(pulumi.StringPtrOutput)
}

type SizeAvailabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (SizeAvailabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeAvailabilityResponse)(nil)).Elem()
}

func (o SizeAvailabilityResponseArrayOutput) ToSizeAvailabilityResponseArrayOutput() SizeAvailabilityResponseArrayOutput {
	return o
}

func (o SizeAvailabilityResponseArrayOutput) ToSizeAvailabilityResponseArrayOutputWithContext(ctx context.Context) SizeAvailabilityResponseArrayOutput {
	return o
}

func (o SizeAvailabilityResponseArrayOutput) Index(i pulumi.IntInput) SizeAvailabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SizeAvailabilityResponse {
		return vs[0].([]SizeAvailabilityResponse)[vs[1].(int)]
	}).(SizeAvailabilityResponseOutput)
}

// Represents the size configuration under the lab account
type SizeConfigurationPropertiesResponse struct {
	// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
	EnvironmentSizes []EnvironmentSizeResponse `pulumi:"environmentSizes"`
}

// SizeConfigurationPropertiesResponseInput is an input type that accepts SizeConfigurationPropertiesResponseArgs and SizeConfigurationPropertiesResponseOutput values.
// You can construct a concrete instance of `SizeConfigurationPropertiesResponseInput` via:
//
//          SizeConfigurationPropertiesResponseArgs{...}
type SizeConfigurationPropertiesResponseInput interface {
	pulumi.Input

	ToSizeConfigurationPropertiesResponseOutput() SizeConfigurationPropertiesResponseOutput
	ToSizeConfigurationPropertiesResponseOutputWithContext(context.Context) SizeConfigurationPropertiesResponseOutput
}

// Represents the size configuration under the lab account
type SizeConfigurationPropertiesResponseArgs struct {
	// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
	EnvironmentSizes EnvironmentSizeResponseArrayInput `pulumi:"environmentSizes"`
}

func (SizeConfigurationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (i SizeConfigurationPropertiesResponseArgs) ToSizeConfigurationPropertiesResponseOutput() SizeConfigurationPropertiesResponseOutput {
	return i.ToSizeConfigurationPropertiesResponseOutputWithContext(context.Background())
}

func (i SizeConfigurationPropertiesResponseArgs) ToSizeConfigurationPropertiesResponseOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConfigurationPropertiesResponseOutput)
}

func (i SizeConfigurationPropertiesResponseArgs) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return i.ToSizeConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i SizeConfigurationPropertiesResponseArgs) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConfigurationPropertiesResponseOutput).ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx)
}

// SizeConfigurationPropertiesResponsePtrInput is an input type that accepts SizeConfigurationPropertiesResponseArgs, SizeConfigurationPropertiesResponsePtr and SizeConfigurationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `SizeConfigurationPropertiesResponsePtrInput` via:
//
//          SizeConfigurationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type SizeConfigurationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput
	ToSizeConfigurationPropertiesResponsePtrOutputWithContext(context.Context) SizeConfigurationPropertiesResponsePtrOutput
}

type sizeConfigurationPropertiesResponsePtrType SizeConfigurationPropertiesResponseArgs

func SizeConfigurationPropertiesResponsePtr(v *SizeConfigurationPropertiesResponseArgs) SizeConfigurationPropertiesResponsePtrInput {
	return (*sizeConfigurationPropertiesResponsePtrType)(v)
}

func (*sizeConfigurationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (i *sizeConfigurationPropertiesResponsePtrType) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return i.ToSizeConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *sizeConfigurationPropertiesResponsePtrType) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConfigurationPropertiesResponsePtrOutput)
}

// Represents the size configuration under the lab account
type SizeConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (SizeConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponseOutput() SizeConfigurationPropertiesResponseOutput {
	return o
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponseOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponseOutput {
	return o
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return o.ToSizeConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o SizeConfigurationPropertiesResponseOutput) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v SizeConfigurationPropertiesResponse) *SizeConfigurationPropertiesResponse {
		return &v
	}).(SizeConfigurationPropertiesResponsePtrOutput)
}

// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
func (o SizeConfigurationPropertiesResponseOutput) EnvironmentSizes() EnvironmentSizeResponseArrayOutput {
	return o.ApplyT(func(v SizeConfigurationPropertiesResponse) []EnvironmentSizeResponse { return v.EnvironmentSizes }).(EnvironmentSizeResponseArrayOutput)
}

type SizeConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (SizeConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SizeConfigurationPropertiesResponse)(nil)).Elem()
}

func (o SizeConfigurationPropertiesResponsePtrOutput) ToSizeConfigurationPropertiesResponsePtrOutput() SizeConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o SizeConfigurationPropertiesResponsePtrOutput) ToSizeConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) SizeConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o SizeConfigurationPropertiesResponsePtrOutput) Elem() SizeConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *SizeConfigurationPropertiesResponse) SizeConfigurationPropertiesResponse { return *v }).(SizeConfigurationPropertiesResponseOutput)
}

// Represents a list of size categories supported by this Lab Account (Small, Medium, Large)
func (o SizeConfigurationPropertiesResponsePtrOutput) EnvironmentSizes() EnvironmentSizeResponseArrayOutput {
	return o.ApplyT(func(v *SizeConfigurationPropertiesResponse) []EnvironmentSizeResponse {
		if v == nil {
			return nil
		}
		return v.EnvironmentSizes
	}).(EnvironmentSizeResponseArrayOutput)
}

// Contains detailed information about a size
type SizeInfoResponse struct {
	// Represents the actual compute size, e.g. Standard_A2_v2.
	ComputeSize *string `pulumi:"computeSize"`
	// The amount of memory available (in GB).
	Memory *float64 `pulumi:"memory"`
	// The number of cores a VM of this size has.
	NumberOfCores *int `pulumi:"numberOfCores"`
	// The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
	Price *float64 `pulumi:"price"`
}

// SizeInfoResponseInput is an input type that accepts SizeInfoResponseArgs and SizeInfoResponseOutput values.
// You can construct a concrete instance of `SizeInfoResponseInput` via:
//
//          SizeInfoResponseArgs{...}
type SizeInfoResponseInput interface {
	pulumi.Input

	ToSizeInfoResponseOutput() SizeInfoResponseOutput
	ToSizeInfoResponseOutputWithContext(context.Context) SizeInfoResponseOutput
}

// Contains detailed information about a size
type SizeInfoResponseArgs struct {
	// Represents the actual compute size, e.g. Standard_A2_v2.
	ComputeSize pulumi.StringPtrInput `pulumi:"computeSize"`
	// The amount of memory available (in GB).
	Memory pulumi.Float64PtrInput `pulumi:"memory"`
	// The number of cores a VM of this size has.
	NumberOfCores pulumi.IntPtrInput `pulumi:"numberOfCores"`
	// The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
	Price pulumi.Float64PtrInput `pulumi:"price"`
}

func (SizeInfoResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeInfoResponse)(nil)).Elem()
}

func (i SizeInfoResponseArgs) ToSizeInfoResponseOutput() SizeInfoResponseOutput {
	return i.ToSizeInfoResponseOutputWithContext(context.Background())
}

func (i SizeInfoResponseArgs) ToSizeInfoResponseOutputWithContext(ctx context.Context) SizeInfoResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeInfoResponseOutput)
}

// SizeInfoResponseArrayInput is an input type that accepts SizeInfoResponseArray and SizeInfoResponseArrayOutput values.
// You can construct a concrete instance of `SizeInfoResponseArrayInput` via:
//
//          SizeInfoResponseArray{ SizeInfoResponseArgs{...} }
type SizeInfoResponseArrayInput interface {
	pulumi.Input

	ToSizeInfoResponseArrayOutput() SizeInfoResponseArrayOutput
	ToSizeInfoResponseArrayOutputWithContext(context.Context) SizeInfoResponseArrayOutput
}

type SizeInfoResponseArray []SizeInfoResponseInput

func (SizeInfoResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeInfoResponse)(nil)).Elem()
}

func (i SizeInfoResponseArray) ToSizeInfoResponseArrayOutput() SizeInfoResponseArrayOutput {
	return i.ToSizeInfoResponseArrayOutputWithContext(context.Background())
}

func (i SizeInfoResponseArray) ToSizeInfoResponseArrayOutputWithContext(ctx context.Context) SizeInfoResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeInfoResponseArrayOutput)
}

// Contains detailed information about a size
type SizeInfoResponseOutput struct{ *pulumi.OutputState }

func (SizeInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SizeInfoResponse)(nil)).Elem()
}

func (o SizeInfoResponseOutput) ToSizeInfoResponseOutput() SizeInfoResponseOutput {
	return o
}

func (o SizeInfoResponseOutput) ToSizeInfoResponseOutputWithContext(ctx context.Context) SizeInfoResponseOutput {
	return o
}

// Represents the actual compute size, e.g. Standard_A2_v2.
func (o SizeInfoResponseOutput) ComputeSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *string { return v.ComputeSize }).(pulumi.StringPtrOutput)
}

// The amount of memory available (in GB).
func (o SizeInfoResponseOutput) Memory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *float64 { return v.Memory }).(pulumi.Float64PtrOutput)
}

// The number of cores a VM of this size has.
func (o SizeInfoResponseOutput) NumberOfCores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *int { return v.NumberOfCores }).(pulumi.IntPtrOutput)
}

// The pay-as-you-go price per hour this size will cost. It does not include discounts and may not reflect the actual price the size will cost.
func (o SizeInfoResponseOutput) Price() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SizeInfoResponse) *float64 { return v.Price }).(pulumi.Float64PtrOutput)
}

type SizeInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (SizeInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SizeInfoResponse)(nil)).Elem()
}

func (o SizeInfoResponseArrayOutput) ToSizeInfoResponseArrayOutput() SizeInfoResponseArrayOutput {
	return o
}

func (o SizeInfoResponseArrayOutput) ToSizeInfoResponseArrayOutputWithContext(ctx context.Context) SizeInfoResponseArrayOutput {
	return o
}

func (o SizeInfoResponseArrayOutput) Index(i pulumi.IntInput) SizeInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SizeInfoResponse {
		return vs[0].([]SizeInfoResponse)[vs[1].(int)]
	}).(SizeInfoResponseOutput)
}

// Details of the backing virtual machine.
type VirtualMachineDetailsResponse struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState string `pulumi:"lastKnownPowerState"`
	// PrivateIp address of the compute VM
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Provisioning state of the Dtl VM
	ProvisioningState string `pulumi:"provisioningState"`
	// Connection information for Windows
	RdpAuthority string `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority string `pulumi:"sshAuthority"`
	// Compute VM login user name
	UserName string `pulumi:"userName"`
}

// VirtualMachineDetailsResponseInput is an input type that accepts VirtualMachineDetailsResponseArgs and VirtualMachineDetailsResponseOutput values.
// You can construct a concrete instance of `VirtualMachineDetailsResponseInput` via:
//
//          VirtualMachineDetailsResponseArgs{...}
type VirtualMachineDetailsResponseInput interface {
	pulumi.Input

	ToVirtualMachineDetailsResponseOutput() VirtualMachineDetailsResponseOutput
	ToVirtualMachineDetailsResponseOutputWithContext(context.Context) VirtualMachineDetailsResponseOutput
}

// Details of the backing virtual machine.
type VirtualMachineDetailsResponseArgs struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState pulumi.StringInput `pulumi:"lastKnownPowerState"`
	// PrivateIp address of the compute VM
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Provisioning state of the Dtl VM
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Connection information for Windows
	RdpAuthority pulumi.StringInput `pulumi:"rdpAuthority"`
	// Connection information for Linux
	SshAuthority pulumi.StringInput `pulumi:"sshAuthority"`
	// Compute VM login user name
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (VirtualMachineDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDetailsResponse)(nil)).Elem()
}

func (i VirtualMachineDetailsResponseArgs) ToVirtualMachineDetailsResponseOutput() VirtualMachineDetailsResponseOutput {
	return i.ToVirtualMachineDetailsResponseOutputWithContext(context.Background())
}

func (i VirtualMachineDetailsResponseArgs) ToVirtualMachineDetailsResponseOutputWithContext(ctx context.Context) VirtualMachineDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineDetailsResponseOutput)
}

// Details of the backing virtual machine.
type VirtualMachineDetailsResponseOutput struct{ *pulumi.OutputState }

func (VirtualMachineDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineDetailsResponse)(nil)).Elem()
}

func (o VirtualMachineDetailsResponseOutput) ToVirtualMachineDetailsResponseOutput() VirtualMachineDetailsResponseOutput {
	return o
}

func (o VirtualMachineDetailsResponseOutput) ToVirtualMachineDetailsResponseOutputWithContext(ctx context.Context) VirtualMachineDetailsResponseOutput {
	return o
}

// Last known compute power state captured in DTL
func (o VirtualMachineDetailsResponseOutput) LastKnownPowerState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.LastKnownPowerState }).(pulumi.StringOutput)
}

// PrivateIp address of the compute VM
func (o VirtualMachineDetailsResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Provisioning state of the Dtl VM
func (o VirtualMachineDetailsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Connection information for Windows
func (o VirtualMachineDetailsResponseOutput) RdpAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.RdpAuthority }).(pulumi.StringOutput)
}

// Connection information for Linux
func (o VirtualMachineDetailsResponseOutput) SshAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.SshAuthority }).(pulumi.StringOutput)
}

// Compute VM login user name
func (o VirtualMachineDetailsResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineDetailsResponse) string { return v.UserName }).(pulumi.StringOutput)
}

// Details about the state of the reference virtual machine.
type VmStateDetailsResponse struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState string `pulumi:"lastKnownPowerState"`
	// The power state of the reference virtual machine.
	PowerState string `pulumi:"powerState"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority string `pulumi:"rdpAuthority"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority string `pulumi:"sshAuthority"`
}

// VmStateDetailsResponseInput is an input type that accepts VmStateDetailsResponseArgs and VmStateDetailsResponseOutput values.
// You can construct a concrete instance of `VmStateDetailsResponseInput` via:
//
//          VmStateDetailsResponseArgs{...}
type VmStateDetailsResponseInput interface {
	pulumi.Input

	ToVmStateDetailsResponseOutput() VmStateDetailsResponseOutput
	ToVmStateDetailsResponseOutputWithContext(context.Context) VmStateDetailsResponseOutput
}

// Details about the state of the reference virtual machine.
type VmStateDetailsResponseArgs struct {
	// Last known compute power state captured in DTL
	LastKnownPowerState pulumi.StringInput `pulumi:"lastKnownPowerState"`
	// The power state of the reference virtual machine.
	PowerState pulumi.StringInput `pulumi:"powerState"`
	// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
	RdpAuthority pulumi.StringInput `pulumi:"rdpAuthority"`
	// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
	SshAuthority pulumi.StringInput `pulumi:"sshAuthority"`
}

func (VmStateDetailsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmStateDetailsResponse)(nil)).Elem()
}

func (i VmStateDetailsResponseArgs) ToVmStateDetailsResponseOutput() VmStateDetailsResponseOutput {
	return i.ToVmStateDetailsResponseOutputWithContext(context.Background())
}

func (i VmStateDetailsResponseArgs) ToVmStateDetailsResponseOutputWithContext(ctx context.Context) VmStateDetailsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmStateDetailsResponseOutput)
}

func (i VmStateDetailsResponseArgs) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return i.ToVmStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i VmStateDetailsResponseArgs) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmStateDetailsResponseOutput).ToVmStateDetailsResponsePtrOutputWithContext(ctx)
}

// VmStateDetailsResponsePtrInput is an input type that accepts VmStateDetailsResponseArgs, VmStateDetailsResponsePtr and VmStateDetailsResponsePtrOutput values.
// You can construct a concrete instance of `VmStateDetailsResponsePtrInput` via:
//
//          VmStateDetailsResponseArgs{...}
//
//  or:
//
//          nil
type VmStateDetailsResponsePtrInput interface {
	pulumi.Input

	ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput
	ToVmStateDetailsResponsePtrOutputWithContext(context.Context) VmStateDetailsResponsePtrOutput
}

type vmStateDetailsResponsePtrType VmStateDetailsResponseArgs

func VmStateDetailsResponsePtr(v *VmStateDetailsResponseArgs) VmStateDetailsResponsePtrInput {
	return (*vmStateDetailsResponsePtrType)(v)
}

func (*vmStateDetailsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmStateDetailsResponse)(nil)).Elem()
}

func (i *vmStateDetailsResponsePtrType) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return i.ToVmStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (i *vmStateDetailsResponsePtrType) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmStateDetailsResponsePtrOutput)
}

// Details about the state of the reference virtual machine.
type VmStateDetailsResponseOutput struct{ *pulumi.OutputState }

func (VmStateDetailsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmStateDetailsResponse)(nil)).Elem()
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponseOutput() VmStateDetailsResponseOutput {
	return o
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponseOutputWithContext(ctx context.Context) VmStateDetailsResponseOutput {
	return o
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return o.ToVmStateDetailsResponsePtrOutputWithContext(context.Background())
}

func (o VmStateDetailsResponseOutput) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) *VmStateDetailsResponse {
		return &v
	}).(VmStateDetailsResponsePtrOutput)
}

// Last known compute power state captured in DTL
func (o VmStateDetailsResponseOutput) LastKnownPowerState() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.LastKnownPowerState }).(pulumi.StringOutput)
}

// The power state of the reference virtual machine.
func (o VmStateDetailsResponseOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.PowerState }).(pulumi.StringOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o VmStateDetailsResponseOutput) RdpAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.RdpAuthority }).(pulumi.StringOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o VmStateDetailsResponseOutput) SshAuthority() pulumi.StringOutput {
	return o.ApplyT(func(v VmStateDetailsResponse) string { return v.SshAuthority }).(pulumi.StringOutput)
}

type VmStateDetailsResponsePtrOutput struct{ *pulumi.OutputState }

func (VmStateDetailsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmStateDetailsResponse)(nil)).Elem()
}

func (o VmStateDetailsResponsePtrOutput) ToVmStateDetailsResponsePtrOutput() VmStateDetailsResponsePtrOutput {
	return o
}

func (o VmStateDetailsResponsePtrOutput) ToVmStateDetailsResponsePtrOutputWithContext(ctx context.Context) VmStateDetailsResponsePtrOutput {
	return o
}

func (o VmStateDetailsResponsePtrOutput) Elem() VmStateDetailsResponseOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) VmStateDetailsResponse { return *v }).(VmStateDetailsResponseOutput)
}

// Last known compute power state captured in DTL
func (o VmStateDetailsResponsePtrOutput) LastKnownPowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastKnownPowerState
	}).(pulumi.StringPtrOutput)
}

// The power state of the reference virtual machine.
func (o VmStateDetailsResponsePtrOutput) PowerState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PowerState
	}).(pulumi.StringPtrOutput)
}

// The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
func (o VmStateDetailsResponsePtrOutput) RdpAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RdpAuthority
	}).(pulumi.StringPtrOutput)
}

// The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
func (o VmStateDetailsResponsePtrOutput) SshAuthority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmStateDetailsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SshAuthority
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EnvironmentDetailsResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentSizeResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentSizeResponseArrayOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponseOutput{})
	pulumi.RegisterOutputType(GalleryImageReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(LabDetailsResponseOutput{})
	pulumi.RegisterOutputType(LabDetailsResponseArrayOutput{})
	pulumi.RegisterOutputType(LatestOperationResultResponseOutput{})
	pulumi.RegisterOutputType(LatestOperationResultResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponsePtrOutput{})
	pulumi.RegisterOutputType(OperationBatchStatusResponseItemResponseOutput{})
	pulumi.RegisterOutputType(OperationBatchStatusResponseItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ReferenceVmOutput{})
	pulumi.RegisterOutputType(ReferenceVmPtrOutput{})
	pulumi.RegisterOutputType(ReferenceVmResponseOutput{})
	pulumi.RegisterOutputType(ReferenceVmResponsePtrOutput{})
	pulumi.RegisterOutputType(RegionalAvailabilityResponseOutput{})
	pulumi.RegisterOutputType(RegionalAvailabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceSetOutput{})
	pulumi.RegisterOutputType(ResourceSetPtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResponseOutput{})
	pulumi.RegisterOutputType(ResourceSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceSettingsOutput{})
	pulumi.RegisterOutputType(ResourceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ResourceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ResourceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(SizeAvailabilityResponseOutput{})
	pulumi.RegisterOutputType(SizeAvailabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(SizeConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(SizeConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(SizeInfoResponseOutput{})
	pulumi.RegisterOutputType(SizeInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmStateDetailsResponseOutput{})
	pulumi.RegisterOutputType(VmStateDetailsResponsePtrOutput{})
}
