// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211001preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
func LookupLabPlan(ctx *pulumi.Context, args *LookupLabPlanArgs, opts ...pulumi.InvokeOption) (*LookupLabPlanResult, error) {
	var rv LookupLabPlanResult
	err := ctx.Invoke("azure-native:labservices/v20211001preview:getLabPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupLabPlanArgs struct {
	// The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI.
	LabPlanName string `pulumi:"labPlanName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
type LookupLabPlanResult struct {
	// The allowed regions for the lab creator to use when creating labs using this lab plan.
	AllowedRegions []string `pulumi:"allowedRegions"`
	// The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
	DefaultAutoShutdownProfile *AutoShutdownProfileResponse `pulumi:"defaultAutoShutdownProfile"`
	// The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
	DefaultConnectionProfile *ConnectionProfileResponse `pulumi:"defaultConnectionProfile"`
	// The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
	DefaultNetworkProfile *LabPlanNetworkProfileResponse `pulumi:"defaultNetworkProfile"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// Base Url of the lms instance this lab plan can link lab rosters against.
	LinkedLmsInstance *string `pulumi:"linkedLmsInstance"`
	// The geo-location where the resource lives
	Location string `pulumi:"location"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Current provisioning state of the lab plan.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
	SharedGalleryId *string `pulumi:"sharedGalleryId"`
	// Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
	SupportInfo *SupportInfoResponse `pulumi:"supportInfo"`
	// Metadata pertaining to creation and last modification of the lab plan.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// Defaults sets the appropriate defaults for LookupLabPlanResult
func (val *LookupLabPlanResult) Defaults() *LookupLabPlanResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.DefaultAutoShutdownProfile = tmp.DefaultAutoShutdownProfile.Defaults()

	tmp.DefaultConnectionProfile = tmp.DefaultConnectionProfile.Defaults()

	return &tmp
}

func LookupLabPlanOutput(ctx *pulumi.Context, args LookupLabPlanOutputArgs, opts ...pulumi.InvokeOption) LookupLabPlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLabPlanResult, error) {
			args := v.(LookupLabPlanArgs)
			r, err := LookupLabPlan(ctx, &args, opts...)
			var s LookupLabPlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLabPlanResultOutput)
}

type LookupLabPlanOutputArgs struct {
	// The name of the lab plan that uniquely identifies it within containing resource group. Used in resource URIs and in UI.
	LabPlanName pulumi.StringInput `pulumi:"labPlanName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupLabPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabPlanArgs)(nil)).Elem()
}

// Lab Plans act as a permission container for creating labs via labs.azure.com. Additionally, they can provide a set of default configurations that will apply at the time of creating a lab, but these defaults can still be overwritten.
type LookupLabPlanResultOutput struct{ *pulumi.OutputState }

func (LookupLabPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLabPlanResult)(nil)).Elem()
}

func (o LookupLabPlanResultOutput) ToLookupLabPlanResultOutput() LookupLabPlanResultOutput {
	return o
}

func (o LookupLabPlanResultOutput) ToLookupLabPlanResultOutputWithContext(ctx context.Context) LookupLabPlanResultOutput {
	return o
}

// The allowed regions for the lab creator to use when creating labs using this lab plan.
func (o LookupLabPlanResultOutput) AllowedRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLabPlanResult) []string { return v.AllowedRegions }).(pulumi.StringArrayOutput)
}

// The default lab shutdown profile. This can be changed on a lab resource and only provides a default profile.
func (o LookupLabPlanResultOutput) DefaultAutoShutdownProfile() AutoShutdownProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *AutoShutdownProfileResponse { return v.DefaultAutoShutdownProfile }).(AutoShutdownProfileResponsePtrOutput)
}

// The default lab connection profile. This can be changed on a lab resource and only provides a default profile.
func (o LookupLabPlanResultOutput) DefaultConnectionProfile() ConnectionProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *ConnectionProfileResponse { return v.DefaultConnectionProfile }).(ConnectionProfileResponsePtrOutput)
}

// The lab plan network profile. To enforce lab network policies they must be defined here and cannot be changed when there are existing labs associated with this lab plan.
func (o LookupLabPlanResultOutput) DefaultNetworkProfile() LabPlanNetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *LabPlanNetworkProfileResponse { return v.DefaultNetworkProfile }).(LabPlanNetworkProfileResponsePtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o LookupLabPlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabPlanResult) string { return v.Id }).(pulumi.StringOutput)
}

// Base Url of the lms instance this lab plan can link lab rosters against.
func (o LookupLabPlanResultOutput) LinkedLmsInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *string { return v.LinkedLmsInstance }).(pulumi.StringPtrOutput)
}

// The geo-location where the resource lives
func (o LookupLabPlanResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabPlanResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the resource
func (o LookupLabPlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabPlanResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current provisioning state of the lab plan.
func (o LookupLabPlanResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabPlanResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource ID of the Shared Image Gallery attached to this lab plan. When saving a lab template virtual machine image it will be persisted in this gallery. Shared images from the gallery can be made available to use when creating new labs.
func (o LookupLabPlanResultOutput) SharedGalleryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *string { return v.SharedGalleryId }).(pulumi.StringPtrOutput)
}

// Support contact information and instructions for users of the lab plan. This information is displayed to lab owners and virtual machine users for all labs in the lab plan.
func (o LookupLabPlanResultOutput) SupportInfo() SupportInfoResponsePtrOutput {
	return o.ApplyT(func(v LookupLabPlanResult) *SupportInfoResponse { return v.SupportInfo }).(SupportInfoResponsePtrOutput)
}

// Metadata pertaining to creation and last modification of the lab plan.
func (o LookupLabPlanResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupLabPlanResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Resource tags.
func (o LookupLabPlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLabPlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o LookupLabPlanResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLabPlanResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLabPlanResultOutput{})
}
