// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20201001preview

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define the virtualMachineTemplate.
func LookupVirtualMachineTemplate(ctx *pulumi.Context, args *LookupVirtualMachineTemplateArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineTemplateResult, error) {
	var rv LookupVirtualMachineTemplateResult
	err := ctx.Invoke("azure-native:connectedvmwarevsphere/v20201001preview:getVirtualMachineTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualMachineTemplateArgs struct {
	// The Resource Group Name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the virtual machine template resource.
	VirtualMachineTemplateName string `pulumi:"virtualMachineTemplateName"`
}

// Define the virtualMachineTemplate.
type LookupVirtualMachineTemplateResult struct {
	// Gets the name of the corresponding resource in Kubernetes.
	CustomResourceName string `pulumi:"customResourceName"`
	// Gets or sets the disks the template.
	Disks []VirtualDiskResponse `pulumi:"disks"`
	// Gets or sets the extended location.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Firmware type
	FirmwareType string `pulumi:"firmwareType"`
	// Gets or sets the folder path of the template.
	FolderPath string `pulumi:"folderPath"`
	// Gets or sets the Id.
	Id string `pulumi:"id"`
	// Gets or sets the inventory Item ID for the virtual machine template.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// Gets or sets the location.
	Location string `pulumi:"location"`
	// Gets or sets memory size in MBs for the template.
	MemorySizeMB int `pulumi:"memorySizeMB"`
	// Gets or sets the vCenter Managed Object name for the virtual machine template.
	MoName string `pulumi:"moName"`
	// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine
	// template.
	MoRefId *string `pulumi:"moRefId"`
	// Gets or sets the name.
	Name string `pulumi:"name"`
	// Gets or sets the network interfaces of the template.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// Gets or sets the number of vCPUs for the template.
	NumCPUs int `pulumi:"numCPUs"`
	// Gets or sets the number of cores per socket for the template.
	// Defaults to 1 if unspecified.
	NumCoresPerSocket int `pulumi:"numCoresPerSocket"`
	// Gets or sets os name.
	OsName string `pulumi:"osName"`
	// Gets or sets the type of the os.
	OsType string `pulumi:"osType"`
	// Gets or sets the provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource status information.
	Statuses []ResourceStatusResponse `pulumi:"statuses"`
	// The system data.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets or sets the Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Gets or sets the current version of VMware Tools.
	ToolsVersion string `pulumi:"toolsVersion"`
	// Gets or sets the current version status of VMware Tools installed in the guest operating system.
	ToolsVersionStatus string `pulumi:"toolsVersionStatus"`
	// Gets or sets the type of the resource.
	Type string `pulumi:"type"`
	// Gets or sets a unique identifier for this resource.
	Uuid string `pulumi:"uuid"`
	// Gets or sets the ARM Id of the vCenter resource in which this template resides.
	VCenterId *string `pulumi:"vCenterId"`
}
