// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220110preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define the virtualMachine.
func LookupVirtualMachine(ctx *pulumi.Context, args *LookupVirtualMachineArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineResult, error) {
	var rv LookupVirtualMachineResult
	err := ctx.Invoke("azure-native:connectedvmwarevsphere/v20220110preview:getVirtualMachine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualMachineArgs struct {
	// The Resource Group Name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the virtual machine resource.
	VirtualMachineName string `pulumi:"virtualMachineName"`
}

// Define the virtualMachine.
type LookupVirtualMachineResult struct {
	// Gets the name of the corresponding resource in Kubernetes.
	CustomResourceName string `pulumi:"customResourceName"`
	// Gets or sets the extended location.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Firmware type
	FirmwareType *string `pulumi:"firmwareType"`
	// Gets or sets the folder path of the vm.
	FolderPath string `pulumi:"folderPath"`
	// Guest agent status properties.
	GuestAgentProfile *GuestAgentProfileResponse `pulumi:"guestAgentProfile"`
	// Hardware properties.
	HardwareProfile *HardwareProfileResponse `pulumi:"hardwareProfile"`
	// Gets or sets the Id.
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Gets or sets the instance uuid of the vm.
	InstanceUuid string `pulumi:"instanceUuid"`
	// Gets or sets the inventory Item ID for the virtual machine.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// Gets or sets the location.
	Location string `pulumi:"location"`
	// Gets or sets the vCenter Managed Object name for the virtual machine.
	MoName string `pulumi:"moName"`
	// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
	MoRefId *string `pulumi:"moRefId"`
	// Gets or sets the name.
	Name string `pulumi:"name"`
	// Network properties.
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// OS properties.
	OsProfile *OsProfileResponse `pulumi:"osProfile"`
	// Placement properties.
	PlacementProfile *PlacementProfileResponse `pulumi:"placementProfile"`
	// Gets the power state of the virtual machine.
	PowerState string `pulumi:"powerState"`
	// Gets or sets the provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
	// deploy.
	ResourcePoolId *string `pulumi:"resourcePoolId"`
	// Gets the security profile.
	SecurityProfile *SecurityProfileResponse `pulumi:"securityProfile"`
	// Gets or sets the SMBIOS UUID of the vm.
	SmbiosUuid *string `pulumi:"smbiosUuid"`
	// The resource status information.
	Statuses []ResourceStatusResponse `pulumi:"statuses"`
	// Storage properties.
	StorageProfile *StorageProfileResponse `pulumi:"storageProfile"`
	// The system data.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets or sets the Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Gets or sets the ARM Id of the template resource to deploy the virtual machine.
	TemplateId *string `pulumi:"templateId"`
	// Gets or sets the type of the resource.
	Type string `pulumi:"type"`
	// Gets or sets a unique identifier for this resource.
	Uuid string `pulumi:"uuid"`
	// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
	VCenterId *string `pulumi:"vCenterId"`
	// Gets or sets a unique identifier for the vm resource.
	VmId string `pulumi:"vmId"`
}

func LookupVirtualMachineOutput(ctx *pulumi.Context, args LookupVirtualMachineOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineResult, error) {
			args := v.(LookupVirtualMachineArgs)
			r, err := LookupVirtualMachine(ctx, &args, opts...)
			var s LookupVirtualMachineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineResultOutput)
}

type LookupVirtualMachineOutputArgs struct {
	// The Resource Group Name.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Name of the virtual machine resource.
	VirtualMachineName pulumi.StringInput `pulumi:"virtualMachineName"`
}

func (LookupVirtualMachineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineArgs)(nil)).Elem()
}

// Define the virtualMachine.
type LookupVirtualMachineResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineResult)(nil)).Elem()
}

func (o LookupVirtualMachineResultOutput) ToLookupVirtualMachineResultOutput() LookupVirtualMachineResultOutput {
	return o
}

func (o LookupVirtualMachineResultOutput) ToLookupVirtualMachineResultOutputWithContext(ctx context.Context) LookupVirtualMachineResultOutput {
	return o
}

// Gets the name of the corresponding resource in Kubernetes.
func (o LookupVirtualMachineResultOutput) CustomResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.CustomResourceName }).(pulumi.StringOutput)
}

// Gets or sets the extended location.
func (o LookupVirtualMachineResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Firmware type
func (o LookupVirtualMachineResultOutput) FirmwareType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.FirmwareType }).(pulumi.StringPtrOutput)
}

// Gets or sets the folder path of the vm.
func (o LookupVirtualMachineResultOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.FolderPath }).(pulumi.StringOutput)
}

// Guest agent status properties.
func (o LookupVirtualMachineResultOutput) GuestAgentProfile() GuestAgentProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *GuestAgentProfileResponse { return v.GuestAgentProfile }).(GuestAgentProfileResponsePtrOutput)
}

// Hardware properties.
func (o LookupVirtualMachineResultOutput) HardwareProfile() HardwareProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *HardwareProfileResponse { return v.HardwareProfile }).(HardwareProfileResponsePtrOutput)
}

// Gets or sets the Id.
func (o LookupVirtualMachineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Id }).(pulumi.StringOutput)
}

// The identity of the resource.
func (o LookupVirtualMachineResultOutput) Identity() IdentityResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *IdentityResponse { return v.Identity }).(IdentityResponsePtrOutput)
}

// Gets or sets the instance uuid of the vm.
func (o LookupVirtualMachineResultOutput) InstanceUuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.InstanceUuid }).(pulumi.StringOutput)
}

// Gets or sets the inventory Item ID for the virtual machine.
func (o LookupVirtualMachineResultOutput) InventoryItemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.InventoryItemId }).(pulumi.StringPtrOutput)
}

// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
func (o LookupVirtualMachineResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Gets or sets the location.
func (o LookupVirtualMachineResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Location }).(pulumi.StringOutput)
}

// Gets or sets the vCenter Managed Object name for the virtual machine.
func (o LookupVirtualMachineResultOutput) MoName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.MoName }).(pulumi.StringOutput)
}

// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
func (o LookupVirtualMachineResultOutput) MoRefId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.MoRefId }).(pulumi.StringPtrOutput)
}

// Gets or sets the name.
func (o LookupVirtualMachineResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Name }).(pulumi.StringOutput)
}

// Network properties.
func (o LookupVirtualMachineResultOutput) NetworkProfile() NetworkProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *NetworkProfileResponse { return v.NetworkProfile }).(NetworkProfileResponsePtrOutput)
}

// OS properties.
func (o LookupVirtualMachineResultOutput) OsProfile() OsProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *OsProfileResponse { return v.OsProfile }).(OsProfileResponsePtrOutput)
}

// Placement properties.
func (o LookupVirtualMachineResultOutput) PlacementProfile() PlacementProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *PlacementProfileResponse { return v.PlacementProfile }).(PlacementProfileResponsePtrOutput)
}

// Gets the power state of the virtual machine.
func (o LookupVirtualMachineResultOutput) PowerState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.PowerState }).(pulumi.StringOutput)
}

// Gets or sets the provisioning state.
func (o LookupVirtualMachineResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
// deploy.
func (o LookupVirtualMachineResultOutput) ResourcePoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.ResourcePoolId }).(pulumi.StringPtrOutput)
}

// Gets the security profile.
func (o LookupVirtualMachineResultOutput) SecurityProfile() SecurityProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *SecurityProfileResponse { return v.SecurityProfile }).(SecurityProfileResponsePtrOutput)
}

// Gets or sets the SMBIOS UUID of the vm.
func (o LookupVirtualMachineResultOutput) SmbiosUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.SmbiosUuid }).(pulumi.StringPtrOutput)
}

// The resource status information.
func (o LookupVirtualMachineResultOutput) Statuses() ResourceStatusResponseArrayOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) []ResourceStatusResponse { return v.Statuses }).(ResourceStatusResponseArrayOutput)
}

// Storage properties.
func (o LookupVirtualMachineResultOutput) StorageProfile() StorageProfileResponsePtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *StorageProfileResponse { return v.StorageProfile }).(StorageProfileResponsePtrOutput)
}

// The system data.
func (o LookupVirtualMachineResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Gets or sets the Resource tags.
func (o LookupVirtualMachineResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Gets or sets the ARM Id of the template resource to deploy the virtual machine.
func (o LookupVirtualMachineResultOutput) TemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.TemplateId }).(pulumi.StringPtrOutput)
}

// Gets or sets the type of the resource.
func (o LookupVirtualMachineResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Type }).(pulumi.StringOutput)
}

// Gets or sets a unique identifier for this resource.
func (o LookupVirtualMachineResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.Uuid }).(pulumi.StringOutput)
}

// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
func (o LookupVirtualMachineResultOutput) VCenterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) *string { return v.VCenterId }).(pulumi.StringPtrOutput)
}

// Gets or sets a unique identifier for the vm resource.
func (o LookupVirtualMachineResultOutput) VmId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineResult) string { return v.VmId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineResultOutput{})
}
