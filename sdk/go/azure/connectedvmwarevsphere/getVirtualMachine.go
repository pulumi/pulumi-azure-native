// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package connectedvmwarevsphere

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Define the virtualMachine.
// API Version: 2020-10-01-preview.
func LookupVirtualMachine(ctx *pulumi.Context, args *LookupVirtualMachineArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineResult, error) {
	var rv LookupVirtualMachineResult
	err := ctx.Invoke("azure-native:connectedvmwarevsphere:getVirtualMachine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVirtualMachineArgs struct {
	// The Resource Group Name.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the virtual machine resource.
	VirtualMachineName string `pulumi:"virtualMachineName"`
}

// Define the virtualMachine.
type LookupVirtualMachineResult struct {
	// Gets the name of the corresponding resource in Kubernetes.
	CustomResourceName string `pulumi:"customResourceName"`
	// Gets or sets the extended location.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Firmware type
	FirmwareType *string `pulumi:"firmwareType"`
	// Gets or sets the folder path of the vm.
	FolderPath string `pulumi:"folderPath"`
	// Guest agent status properties.
	GuestAgentProfile *GuestAgentProfileResponse `pulumi:"guestAgentProfile"`
	// Hardware properties.
	HardwareProfile *HardwareProfileResponse `pulumi:"hardwareProfile"`
	// Gets or sets the Id.
	Id string `pulumi:"id"`
	// The identity of the resource.
	Identity *IdentityResponse `pulumi:"identity"`
	// Gets or sets the instance uuid of the vm.
	InstanceUuid string `pulumi:"instanceUuid"`
	// Gets or sets the inventory Item ID for the virtual machine.
	InventoryItemId *string `pulumi:"inventoryItemId"`
	// Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
	Kind *string `pulumi:"kind"`
	// Gets or sets the location.
	Location string `pulumi:"location"`
	// Gets or sets the vCenter Managed Object name for the virtual machine.
	MoName string `pulumi:"moName"`
	// Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.
	MoRefId *string `pulumi:"moRefId"`
	// Gets or sets the name.
	Name string `pulumi:"name"`
	// Network properties.
	NetworkProfile *NetworkProfileResponse `pulumi:"networkProfile"`
	// OS properties.
	OsProfile *OsProfileResponse `pulumi:"osProfile"`
	// Placement properties.
	PlacementProfile *PlacementProfileResponse `pulumi:"placementProfile"`
	// Gets the power state of the virtual machine.
	PowerState string `pulumi:"powerState"`
	// Gets or sets the provisioning state.
	ProvisioningState string `pulumi:"provisioningState"`
	// Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will
	// deploy.
	ResourcePoolId *string `pulumi:"resourcePoolId"`
	// Gets or sets the SMBIOS UUID of the vm.
	SmbiosUuid *string `pulumi:"smbiosUuid"`
	// The resource status information.
	Statuses []ResourceStatusResponse `pulumi:"statuses"`
	// Storage properties.
	StorageProfile *StorageProfileResponse `pulumi:"storageProfile"`
	// The system data.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Gets or sets the Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Gets or sets the ARM Id of the template resource to deploy the virtual machine.
	TemplateId *string `pulumi:"templateId"`
	// Gets or sets the type of the resource.
	Type string `pulumi:"type"`
	// Gets or sets a unique identifier for this resource.
	Uuid string `pulumi:"uuid"`
	// Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.
	VCenterId *string `pulumi:"vCenterId"`
	// Gets or sets a unique identifier for the vm resource.
	VmId string `pulumi:"vmId"`
}
