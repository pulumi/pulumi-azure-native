// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20190801

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An Azure Cosmos DB Cassandra keyspace.
//
// Deprecated: Version 2019-08-01 will be removed in v2 of the provider.
func LookupCassandraResourceCassandraKeyspace(ctx *pulumi.Context, args *LookupCassandraResourceCassandraKeyspaceArgs, opts ...pulumi.InvokeOption) (*LookupCassandraResourceCassandraKeyspaceResult, error) {
	var rv LookupCassandraResourceCassandraKeyspaceResult
	err := ctx.Invoke("azure-native:documentdb/v20190801:getCassandraResourceCassandraKeyspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCassandraResourceCassandraKeyspaceArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// Cosmos DB keyspace name.
	KeyspaceName string `pulumi:"keyspaceName"`
	// Name of an Azure resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// An Azure Cosmos DB Cassandra keyspace.
type LookupCassandraResourceCassandraKeyspaceResult struct {
	// The unique resource identifier of the ARM resource.
	Id string `pulumi:"id"`
	// The location of the resource group to which the resource belongs.
	Location *string `pulumi:"location"`
	// The name of the ARM resource.
	Name     string                                          `pulumi:"name"`
	Resource *CassandraKeyspaceGetPropertiesResponseResource `pulumi:"resource"`
	// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
	Tags map[string]string `pulumi:"tags"`
	// The type of Azure resource.
	Type string `pulumi:"type"`
}

func LookupCassandraResourceCassandraKeyspaceOutput(ctx *pulumi.Context, args LookupCassandraResourceCassandraKeyspaceOutputArgs, opts ...pulumi.InvokeOption) LookupCassandraResourceCassandraKeyspaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCassandraResourceCassandraKeyspaceResult, error) {
			args := v.(LookupCassandraResourceCassandraKeyspaceArgs)
			r, err := LookupCassandraResourceCassandraKeyspace(ctx, &args, opts...)
			var s LookupCassandraResourceCassandraKeyspaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCassandraResourceCassandraKeyspaceResultOutput)
}

type LookupCassandraResourceCassandraKeyspaceOutputArgs struct {
	// Cosmos DB database account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Cosmos DB keyspace name.
	KeyspaceName pulumi.StringInput `pulumi:"keyspaceName"`
	// Name of an Azure resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupCassandraResourceCassandraKeyspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraResourceCassandraKeyspaceArgs)(nil)).Elem()
}

// An Azure Cosmos DB Cassandra keyspace.
type LookupCassandraResourceCassandraKeyspaceResultOutput struct{ *pulumi.OutputState }

func (LookupCassandraResourceCassandraKeyspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCassandraResourceCassandraKeyspaceResult)(nil)).Elem()
}

func (o LookupCassandraResourceCassandraKeyspaceResultOutput) ToLookupCassandraResourceCassandraKeyspaceResultOutput() LookupCassandraResourceCassandraKeyspaceResultOutput {
	return o
}

func (o LookupCassandraResourceCassandraKeyspaceResultOutput) ToLookupCassandraResourceCassandraKeyspaceResultOutputWithContext(ctx context.Context) LookupCassandraResourceCassandraKeyspaceResultOutput {
	return o
}

// The unique resource identifier of the ARM resource.
func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the resource group to which the resource belongs.
func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the ARM resource.
func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Resource() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) *CassandraKeyspaceGetPropertiesResponseResource {
		return v.Resource
	}).(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput)
}

// Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".
func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of Azure resource.
func (o LookupCassandraResourceCassandraKeyspaceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCassandraResourceCassandraKeyspaceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCassandraResourceCassandraKeyspaceResultOutput{})
}
