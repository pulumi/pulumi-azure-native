// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200601preview

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupSqlResourceSqlRoleDefinition(ctx *pulumi.Context, args *LookupSqlResourceSqlRoleDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupSqlResourceSqlRoleDefinitionResult, error) {
	var rv LookupSqlResourceSqlRoleDefinitionResult
	err := ctx.Invoke("azure-nextgen:documentdb/v20200601preview:getSqlResourceSqlRoleDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSqlResourceSqlRoleDefinitionArgs struct {
	// Cosmos DB database account name.
	AccountName string `pulumi:"accountName"`
	// The name of the resource group. The name is case insensitive.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The GUID for the Role Definition.
	RoleDefinitionId string `pulumi:"roleDefinitionId"`
}

// An Azure Cosmos DB SQL Role Definition.
type LookupSqlResourceSqlRoleDefinitionResult struct {
	// A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
	AssignableScopes []string `pulumi:"assignableScopes"`
	// The name of the database account.
	Name string `pulumi:"name"`
	// The set of operations allowed through this Role Definition.
	Permissions []PermissionResponse `pulumi:"permissions"`
	// A user-friendly name for the Role Definition. Must be unique for the database account.
	RoleName *string `pulumi:"roleName"`
	// The type of Azure resource.
	Type string `pulumi:"type"`
}
