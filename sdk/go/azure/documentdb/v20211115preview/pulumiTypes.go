// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20211115preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Analytical storage specific properties.
type AnalyticalStorageConfiguration struct {
	// Describes the types of schema for analytical storage.
	SchemaType *string `pulumi:"schemaType"`
}

// AnalyticalStorageConfigurationInput is an input type that accepts AnalyticalStorageConfigurationArgs and AnalyticalStorageConfigurationOutput values.
// You can construct a concrete instance of `AnalyticalStorageConfigurationInput` via:
//
//	AnalyticalStorageConfigurationArgs{...}
type AnalyticalStorageConfigurationInput interface {
	pulumi.Input

	ToAnalyticalStorageConfigurationOutput() AnalyticalStorageConfigurationOutput
	ToAnalyticalStorageConfigurationOutputWithContext(context.Context) AnalyticalStorageConfigurationOutput
}

// Analytical storage specific properties.
type AnalyticalStorageConfigurationArgs struct {
	// Describes the types of schema for analytical storage.
	SchemaType pulumi.StringPtrInput `pulumi:"schemaType"`
}

func (AnalyticalStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticalStorageConfiguration)(nil)).Elem()
}

func (i AnalyticalStorageConfigurationArgs) ToAnalyticalStorageConfigurationOutput() AnalyticalStorageConfigurationOutput {
	return i.ToAnalyticalStorageConfigurationOutputWithContext(context.Background())
}

func (i AnalyticalStorageConfigurationArgs) ToAnalyticalStorageConfigurationOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticalStorageConfigurationOutput)
}

func (i AnalyticalStorageConfigurationArgs) ToAnalyticalStorageConfigurationPtrOutput() AnalyticalStorageConfigurationPtrOutput {
	return i.ToAnalyticalStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyticalStorageConfigurationArgs) ToAnalyticalStorageConfigurationPtrOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticalStorageConfigurationOutput).ToAnalyticalStorageConfigurationPtrOutputWithContext(ctx)
}

// AnalyticalStorageConfigurationPtrInput is an input type that accepts AnalyticalStorageConfigurationArgs, AnalyticalStorageConfigurationPtr and AnalyticalStorageConfigurationPtrOutput values.
// You can construct a concrete instance of `AnalyticalStorageConfigurationPtrInput` via:
//
//	        AnalyticalStorageConfigurationArgs{...}
//
//	or:
//
//	        nil
type AnalyticalStorageConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyticalStorageConfigurationPtrOutput() AnalyticalStorageConfigurationPtrOutput
	ToAnalyticalStorageConfigurationPtrOutputWithContext(context.Context) AnalyticalStorageConfigurationPtrOutput
}

type analyticalStorageConfigurationPtrType AnalyticalStorageConfigurationArgs

func AnalyticalStorageConfigurationPtr(v *AnalyticalStorageConfigurationArgs) AnalyticalStorageConfigurationPtrInput {
	return (*analyticalStorageConfigurationPtrType)(v)
}

func (*analyticalStorageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticalStorageConfiguration)(nil)).Elem()
}

func (i *analyticalStorageConfigurationPtrType) ToAnalyticalStorageConfigurationPtrOutput() AnalyticalStorageConfigurationPtrOutput {
	return i.ToAnalyticalStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyticalStorageConfigurationPtrType) ToAnalyticalStorageConfigurationPtrOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticalStorageConfigurationPtrOutput)
}

// Analytical storage specific properties.
type AnalyticalStorageConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticalStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticalStorageConfiguration)(nil)).Elem()
}

func (o AnalyticalStorageConfigurationOutput) ToAnalyticalStorageConfigurationOutput() AnalyticalStorageConfigurationOutput {
	return o
}

func (o AnalyticalStorageConfigurationOutput) ToAnalyticalStorageConfigurationOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationOutput {
	return o
}

func (o AnalyticalStorageConfigurationOutput) ToAnalyticalStorageConfigurationPtrOutput() AnalyticalStorageConfigurationPtrOutput {
	return o.ToAnalyticalStorageConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyticalStorageConfigurationOutput) ToAnalyticalStorageConfigurationPtrOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyticalStorageConfiguration) *AnalyticalStorageConfiguration {
		return &v
	}).(AnalyticalStorageConfigurationPtrOutput)
}

// Describes the types of schema for analytical storage.
func (o AnalyticalStorageConfigurationOutput) SchemaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticalStorageConfiguration) *string { return v.SchemaType }).(pulumi.StringPtrOutput)
}

type AnalyticalStorageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyticalStorageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticalStorageConfiguration)(nil)).Elem()
}

func (o AnalyticalStorageConfigurationPtrOutput) ToAnalyticalStorageConfigurationPtrOutput() AnalyticalStorageConfigurationPtrOutput {
	return o
}

func (o AnalyticalStorageConfigurationPtrOutput) ToAnalyticalStorageConfigurationPtrOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationPtrOutput {
	return o
}

func (o AnalyticalStorageConfigurationPtrOutput) Elem() AnalyticalStorageConfigurationOutput {
	return o.ApplyT(func(v *AnalyticalStorageConfiguration) AnalyticalStorageConfiguration {
		if v != nil {
			return *v
		}
		var ret AnalyticalStorageConfiguration
		return ret
	}).(AnalyticalStorageConfigurationOutput)
}

// Describes the types of schema for analytical storage.
func (o AnalyticalStorageConfigurationPtrOutput) SchemaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticalStorageConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SchemaType
	}).(pulumi.StringPtrOutput)
}

// Analytical storage specific properties.
type AnalyticalStorageConfigurationResponse struct {
	// Describes the types of schema for analytical storage.
	SchemaType *string `pulumi:"schemaType"`
}

// Analytical storage specific properties.
type AnalyticalStorageConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AnalyticalStorageConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticalStorageConfigurationResponse)(nil)).Elem()
}

func (o AnalyticalStorageConfigurationResponseOutput) ToAnalyticalStorageConfigurationResponseOutput() AnalyticalStorageConfigurationResponseOutput {
	return o
}

func (o AnalyticalStorageConfigurationResponseOutput) ToAnalyticalStorageConfigurationResponseOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationResponseOutput {
	return o
}

// Describes the types of schema for analytical storage.
func (o AnalyticalStorageConfigurationResponseOutput) SchemaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticalStorageConfigurationResponse) *string { return v.SchemaType }).(pulumi.StringPtrOutput)
}

type AnalyticalStorageConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AnalyticalStorageConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticalStorageConfigurationResponse)(nil)).Elem()
}

func (o AnalyticalStorageConfigurationResponsePtrOutput) ToAnalyticalStorageConfigurationResponsePtrOutput() AnalyticalStorageConfigurationResponsePtrOutput {
	return o
}

func (o AnalyticalStorageConfigurationResponsePtrOutput) ToAnalyticalStorageConfigurationResponsePtrOutputWithContext(ctx context.Context) AnalyticalStorageConfigurationResponsePtrOutput {
	return o
}

func (o AnalyticalStorageConfigurationResponsePtrOutput) Elem() AnalyticalStorageConfigurationResponseOutput {
	return o.ApplyT(func(v *AnalyticalStorageConfigurationResponse) AnalyticalStorageConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AnalyticalStorageConfigurationResponse
		return ret
	}).(AnalyticalStorageConfigurationResponseOutput)
}

// Describes the types of schema for analytical storage.
func (o AnalyticalStorageConfigurationResponsePtrOutput) SchemaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyticalStorageConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.SchemaType
	}).(pulumi.StringPtrOutput)
}

type ApiProperties struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion *string `pulumi:"serverVersion"`
}

// ApiPropertiesInput is an input type that accepts ApiPropertiesArgs and ApiPropertiesOutput values.
// You can construct a concrete instance of `ApiPropertiesInput` via:
//
//	ApiPropertiesArgs{...}
type ApiPropertiesInput interface {
	pulumi.Input

	ToApiPropertiesOutput() ApiPropertiesOutput
	ToApiPropertiesOutputWithContext(context.Context) ApiPropertiesOutput
}

type ApiPropertiesArgs struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion pulumi.StringPtrInput `pulumi:"serverVersion"`
}

func (ApiPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProperties)(nil)).Elem()
}

func (i ApiPropertiesArgs) ToApiPropertiesOutput() ApiPropertiesOutput {
	return i.ToApiPropertiesOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesOutputWithContext(ctx context.Context) ApiPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput)
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiPropertiesArgs) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesOutput).ToApiPropertiesPtrOutputWithContext(ctx)
}

// ApiPropertiesPtrInput is an input type that accepts ApiPropertiesArgs, ApiPropertiesPtr and ApiPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiPropertiesPtrInput` via:
//
//	        ApiPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApiPropertiesPtrInput interface {
	pulumi.Input

	ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput
	ToApiPropertiesPtrOutputWithContext(context.Context) ApiPropertiesPtrOutput
}

type apiPropertiesPtrType ApiPropertiesArgs

func ApiPropertiesPtr(v *ApiPropertiesArgs) ApiPropertiesPtrInput {
	return (*apiPropertiesPtrType)(v)
}

func (*apiPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProperties)(nil)).Elem()
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return i.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiPropertiesPtrType) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiPropertiesPtrOutput)
}

type ApiPropertiesOutput struct{ *pulumi.OutputState }

func (ApiPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiProperties)(nil)).Elem()
}

func (o ApiPropertiesOutput) ToApiPropertiesOutput() ApiPropertiesOutput {
	return o
}

func (o ApiPropertiesOutput) ToApiPropertiesOutputWithContext(ctx context.Context) ApiPropertiesOutput {
	return o
}

func (o ApiPropertiesOutput) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return o.ToApiPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiPropertiesOutput) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiProperties) *ApiProperties {
		return &v
	}).(ApiPropertiesPtrOutput)
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiProperties) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

type ApiPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiProperties)(nil)).Elem()
}

func (o ApiPropertiesPtrOutput) ToApiPropertiesPtrOutput() ApiPropertiesPtrOutput {
	return o
}

func (o ApiPropertiesPtrOutput) ToApiPropertiesPtrOutputWithContext(ctx context.Context) ApiPropertiesPtrOutput {
	return o
}

func (o ApiPropertiesPtrOutput) Elem() ApiPropertiesOutput {
	return o.ApplyT(func(v *ApiProperties) ApiProperties {
		if v != nil {
			return *v
		}
		var ret ApiProperties
		return ret
	}).(ApiPropertiesOutput)
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesPtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

type ApiPropertiesResponse struct {
	// Describes the ServerVersion of an a MongoDB account.
	ServerVersion *string `pulumi:"serverVersion"`
}

type ApiPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutput() ApiPropertiesResponseOutput {
	return o
}

func (o ApiPropertiesResponseOutput) ToApiPropertiesResponseOutputWithContext(ctx context.Context) ApiPropertiesResponseOutput {
	return o
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesResponseOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiPropertiesResponse) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

type ApiPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiPropertiesResponse)(nil)).Elem()
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutput() ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) ToApiPropertiesResponsePtrOutputWithContext(ctx context.Context) ApiPropertiesResponsePtrOutput {
	return o
}

func (o ApiPropertiesResponsePtrOutput) Elem() ApiPropertiesResponseOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) ApiPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret ApiPropertiesResponse
		return ret
	}).(ApiPropertiesResponseOutput)
}

// Describes the ServerVersion of an a MongoDB account.
func (o ApiPropertiesResponsePtrOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerVersion
	}).(pulumi.StringPtrOutput)
}

// Ldap authentication method properties. This feature is in preview.
type AuthenticationMethodLdapProperties struct {
	// Distinguished name of the object to start the recursive search of users from.
	SearchBaseDistinguishedName *string `pulumi:"searchBaseDistinguishedName"`
	// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
	SearchFilterTemplate *string       `pulumi:"searchFilterTemplate"`
	ServerCertificates   []Certificate `pulumi:"serverCertificates"`
	// Hostname of the LDAP server.
	ServerHostname *string `pulumi:"serverHostname"`
	// Port of the LDAP server.
	ServerPort *int `pulumi:"serverPort"`
	// Distinguished name of the look up user account, who can look up user details on authentication.
	ServiceUserDistinguishedName *string `pulumi:"serviceUserDistinguishedName"`
	// Password of the look up user.
	ServiceUserPassword *string `pulumi:"serviceUserPassword"`
}

// AuthenticationMethodLdapPropertiesInput is an input type that accepts AuthenticationMethodLdapPropertiesArgs and AuthenticationMethodLdapPropertiesOutput values.
// You can construct a concrete instance of `AuthenticationMethodLdapPropertiesInput` via:
//
//	AuthenticationMethodLdapPropertiesArgs{...}
type AuthenticationMethodLdapPropertiesInput interface {
	pulumi.Input

	ToAuthenticationMethodLdapPropertiesOutput() AuthenticationMethodLdapPropertiesOutput
	ToAuthenticationMethodLdapPropertiesOutputWithContext(context.Context) AuthenticationMethodLdapPropertiesOutput
}

// Ldap authentication method properties. This feature is in preview.
type AuthenticationMethodLdapPropertiesArgs struct {
	// Distinguished name of the object to start the recursive search of users from.
	SearchBaseDistinguishedName pulumi.StringPtrInput `pulumi:"searchBaseDistinguishedName"`
	// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
	SearchFilterTemplate pulumi.StringPtrInput `pulumi:"searchFilterTemplate"`
	ServerCertificates   CertificateArrayInput `pulumi:"serverCertificates"`
	// Hostname of the LDAP server.
	ServerHostname pulumi.StringPtrInput `pulumi:"serverHostname"`
	// Port of the LDAP server.
	ServerPort pulumi.IntPtrInput `pulumi:"serverPort"`
	// Distinguished name of the look up user account, who can look up user details on authentication.
	ServiceUserDistinguishedName pulumi.StringPtrInput `pulumi:"serviceUserDistinguishedName"`
	// Password of the look up user.
	ServiceUserPassword pulumi.StringPtrInput `pulumi:"serviceUserPassword"`
}

func (AuthenticationMethodLdapPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethodLdapProperties)(nil)).Elem()
}

func (i AuthenticationMethodLdapPropertiesArgs) ToAuthenticationMethodLdapPropertiesOutput() AuthenticationMethodLdapPropertiesOutput {
	return i.ToAuthenticationMethodLdapPropertiesOutputWithContext(context.Background())
}

func (i AuthenticationMethodLdapPropertiesArgs) ToAuthenticationMethodLdapPropertiesOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationMethodLdapPropertiesOutput)
}

func (i AuthenticationMethodLdapPropertiesArgs) ToAuthenticationMethodLdapPropertiesPtrOutput() AuthenticationMethodLdapPropertiesPtrOutput {
	return i.ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(context.Background())
}

func (i AuthenticationMethodLdapPropertiesArgs) ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationMethodLdapPropertiesOutput).ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(ctx)
}

// AuthenticationMethodLdapPropertiesPtrInput is an input type that accepts AuthenticationMethodLdapPropertiesArgs, AuthenticationMethodLdapPropertiesPtr and AuthenticationMethodLdapPropertiesPtrOutput values.
// You can construct a concrete instance of `AuthenticationMethodLdapPropertiesPtrInput` via:
//
//	        AuthenticationMethodLdapPropertiesArgs{...}
//
//	or:
//
//	        nil
type AuthenticationMethodLdapPropertiesPtrInput interface {
	pulumi.Input

	ToAuthenticationMethodLdapPropertiesPtrOutput() AuthenticationMethodLdapPropertiesPtrOutput
	ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(context.Context) AuthenticationMethodLdapPropertiesPtrOutput
}

type authenticationMethodLdapPropertiesPtrType AuthenticationMethodLdapPropertiesArgs

func AuthenticationMethodLdapPropertiesPtr(v *AuthenticationMethodLdapPropertiesArgs) AuthenticationMethodLdapPropertiesPtrInput {
	return (*authenticationMethodLdapPropertiesPtrType)(v)
}

func (*authenticationMethodLdapPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMethodLdapProperties)(nil)).Elem()
}

func (i *authenticationMethodLdapPropertiesPtrType) ToAuthenticationMethodLdapPropertiesPtrOutput() AuthenticationMethodLdapPropertiesPtrOutput {
	return i.ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(context.Background())
}

func (i *authenticationMethodLdapPropertiesPtrType) ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationMethodLdapPropertiesPtrOutput)
}

// Ldap authentication method properties. This feature is in preview.
type AuthenticationMethodLdapPropertiesOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodLdapPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethodLdapProperties)(nil)).Elem()
}

func (o AuthenticationMethodLdapPropertiesOutput) ToAuthenticationMethodLdapPropertiesOutput() AuthenticationMethodLdapPropertiesOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesOutput) ToAuthenticationMethodLdapPropertiesOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesOutput) ToAuthenticationMethodLdapPropertiesPtrOutput() AuthenticationMethodLdapPropertiesPtrOutput {
	return o.ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodLdapPropertiesOutput) ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationMethodLdapProperties) *AuthenticationMethodLdapProperties {
		return &v
	}).(AuthenticationMethodLdapPropertiesPtrOutput)
}

// Distinguished name of the object to start the recursive search of users from.
func (o AuthenticationMethodLdapPropertiesOutput) SearchBaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *string { return v.SearchBaseDistinguishedName }).(pulumi.StringPtrOutput)
}

// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
func (o AuthenticationMethodLdapPropertiesOutput) SearchFilterTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *string { return v.SearchFilterTemplate }).(pulumi.StringPtrOutput)
}

func (o AuthenticationMethodLdapPropertiesOutput) ServerCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) []Certificate { return v.ServerCertificates }).(CertificateArrayOutput)
}

// Hostname of the LDAP server.
func (o AuthenticationMethodLdapPropertiesOutput) ServerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *string { return v.ServerHostname }).(pulumi.StringPtrOutput)
}

// Port of the LDAP server.
func (o AuthenticationMethodLdapPropertiesOutput) ServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *int { return v.ServerPort }).(pulumi.IntPtrOutput)
}

// Distinguished name of the look up user account, who can look up user details on authentication.
func (o AuthenticationMethodLdapPropertiesOutput) ServiceUserDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *string { return v.ServiceUserDistinguishedName }).(pulumi.StringPtrOutput)
}

// Password of the look up user.
func (o AuthenticationMethodLdapPropertiesOutput) ServiceUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapProperties) *string { return v.ServiceUserPassword }).(pulumi.StringPtrOutput)
}

type AuthenticationMethodLdapPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodLdapPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMethodLdapProperties)(nil)).Elem()
}

func (o AuthenticationMethodLdapPropertiesPtrOutput) ToAuthenticationMethodLdapPropertiesPtrOutput() AuthenticationMethodLdapPropertiesPtrOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesPtrOutput) ToAuthenticationMethodLdapPropertiesPtrOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesPtrOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesPtrOutput) Elem() AuthenticationMethodLdapPropertiesOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) AuthenticationMethodLdapProperties {
		if v != nil {
			return *v
		}
		var ret AuthenticationMethodLdapProperties
		return ret
	}).(AuthenticationMethodLdapPropertiesOutput)
}

// Distinguished name of the object to start the recursive search of users from.
func (o AuthenticationMethodLdapPropertiesPtrOutput) SearchBaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *string {
		if v == nil {
			return nil
		}
		return v.SearchBaseDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
func (o AuthenticationMethodLdapPropertiesPtrOutput) SearchFilterTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *string {
		if v == nil {
			return nil
		}
		return v.SearchFilterTemplate
	}).(pulumi.StringPtrOutput)
}

func (o AuthenticationMethodLdapPropertiesPtrOutput) ServerCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) []Certificate {
		if v == nil {
			return nil
		}
		return v.ServerCertificates
	}).(CertificateArrayOutput)
}

// Hostname of the LDAP server.
func (o AuthenticationMethodLdapPropertiesPtrOutput) ServerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServerHostname
	}).(pulumi.StringPtrOutput)
}

// Port of the LDAP server.
func (o AuthenticationMethodLdapPropertiesPtrOutput) ServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *int {
		if v == nil {
			return nil
		}
		return v.ServerPort
	}).(pulumi.IntPtrOutput)
}

// Distinguished name of the look up user account, who can look up user details on authentication.
func (o AuthenticationMethodLdapPropertiesPtrOutput) ServiceUserDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUserDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Password of the look up user.
func (o AuthenticationMethodLdapPropertiesPtrOutput) ServiceUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUserPassword
	}).(pulumi.StringPtrOutput)
}

// Ldap authentication method properties. This feature is in preview.
type AuthenticationMethodLdapPropertiesResponse struct {
	// Distinguished name of the object to start the recursive search of users from.
	SearchBaseDistinguishedName *string `pulumi:"searchBaseDistinguishedName"`
	// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
	SearchFilterTemplate *string               `pulumi:"searchFilterTemplate"`
	ServerCertificates   []CertificateResponse `pulumi:"serverCertificates"`
	// Hostname of the LDAP server.
	ServerHostname *string `pulumi:"serverHostname"`
	// Port of the LDAP server.
	ServerPort *int `pulumi:"serverPort"`
	// Distinguished name of the look up user account, who can look up user details on authentication.
	ServiceUserDistinguishedName *string `pulumi:"serviceUserDistinguishedName"`
	// Password of the look up user.
	ServiceUserPassword *string `pulumi:"serviceUserPassword"`
}

// Ldap authentication method properties. This feature is in preview.
type AuthenticationMethodLdapPropertiesResponseOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodLdapPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethodLdapPropertiesResponse)(nil)).Elem()
}

func (o AuthenticationMethodLdapPropertiesResponseOutput) ToAuthenticationMethodLdapPropertiesResponseOutput() AuthenticationMethodLdapPropertiesResponseOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesResponseOutput) ToAuthenticationMethodLdapPropertiesResponseOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesResponseOutput {
	return o
}

// Distinguished name of the object to start the recursive search of users from.
func (o AuthenticationMethodLdapPropertiesResponseOutput) SearchBaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *string { return v.SearchBaseDistinguishedName }).(pulumi.StringPtrOutput)
}

// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
func (o AuthenticationMethodLdapPropertiesResponseOutput) SearchFilterTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *string { return v.SearchFilterTemplate }).(pulumi.StringPtrOutput)
}

func (o AuthenticationMethodLdapPropertiesResponseOutput) ServerCertificates() CertificateResponseArrayOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) []CertificateResponse { return v.ServerCertificates }).(CertificateResponseArrayOutput)
}

// Hostname of the LDAP server.
func (o AuthenticationMethodLdapPropertiesResponseOutput) ServerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *string { return v.ServerHostname }).(pulumi.StringPtrOutput)
}

// Port of the LDAP server.
func (o AuthenticationMethodLdapPropertiesResponseOutput) ServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *int { return v.ServerPort }).(pulumi.IntPtrOutput)
}

// Distinguished name of the look up user account, who can look up user details on authentication.
func (o AuthenticationMethodLdapPropertiesResponseOutput) ServiceUserDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *string { return v.ServiceUserDistinguishedName }).(pulumi.StringPtrOutput)
}

// Password of the look up user.
func (o AuthenticationMethodLdapPropertiesResponseOutput) ServiceUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthenticationMethodLdapPropertiesResponse) *string { return v.ServiceUserPassword }).(pulumi.StringPtrOutput)
}

type AuthenticationMethodLdapPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodLdapPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationMethodLdapPropertiesResponse)(nil)).Elem()
}

func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ToAuthenticationMethodLdapPropertiesResponsePtrOutput() AuthenticationMethodLdapPropertiesResponsePtrOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ToAuthenticationMethodLdapPropertiesResponsePtrOutputWithContext(ctx context.Context) AuthenticationMethodLdapPropertiesResponsePtrOutput {
	return o
}

func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) Elem() AuthenticationMethodLdapPropertiesResponseOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) AuthenticationMethodLdapPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret AuthenticationMethodLdapPropertiesResponse
		return ret
	}).(AuthenticationMethodLdapPropertiesResponseOutput)
}

// Distinguished name of the object to start the recursive search of users from.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) SearchBaseDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SearchBaseDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) SearchFilterTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.SearchFilterTemplate
	}).(pulumi.StringPtrOutput)
}

func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ServerCertificates() CertificateResponseArrayOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) []CertificateResponse {
		if v == nil {
			return nil
		}
		return v.ServerCertificates
	}).(CertificateResponseArrayOutput)
}

// Hostname of the LDAP server.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ServerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerHostname
	}).(pulumi.StringPtrOutput)
}

// Port of the LDAP server.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.ServerPort
	}).(pulumi.IntPtrOutput)
}

// Distinguished name of the look up user account, who can look up user details on authentication.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ServiceUserDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUserDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// Password of the look up user.
func (o AuthenticationMethodLdapPropertiesResponsePtrOutput) ServiceUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthenticationMethodLdapPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUserPassword
	}).(pulumi.StringPtrOutput)
}

type AutoscaleSettings struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// AutoscaleSettingsInput is an input type that accepts AutoscaleSettingsArgs and AutoscaleSettingsOutput values.
// You can construct a concrete instance of `AutoscaleSettingsInput` via:
//
//	AutoscaleSettingsArgs{...}
type AutoscaleSettingsInput interface {
	pulumi.Input

	ToAutoscaleSettingsOutput() AutoscaleSettingsOutput
	ToAutoscaleSettingsOutputWithContext(context.Context) AutoscaleSettingsOutput
}

type AutoscaleSettingsArgs struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (AutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleSettings)(nil)).Elem()
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsOutput() AutoscaleSettingsOutput {
	return i.ToAutoscaleSettingsOutputWithContext(context.Background())
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsOutputWithContext(ctx context.Context) AutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsOutput)
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return i.ToAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i AutoscaleSettingsArgs) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsOutput).ToAutoscaleSettingsPtrOutputWithContext(ctx)
}

// AutoscaleSettingsPtrInput is an input type that accepts AutoscaleSettingsArgs, AutoscaleSettingsPtr and AutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `AutoscaleSettingsPtrInput` via:
//
//	        AutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type AutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput
	ToAutoscaleSettingsPtrOutputWithContext(context.Context) AutoscaleSettingsPtrOutput
}

type autoscaleSettingsPtrType AutoscaleSettingsArgs

func AutoscaleSettingsPtr(v *AutoscaleSettingsArgs) AutoscaleSettingsPtrInput {
	return (*autoscaleSettingsPtrType)(v)
}

func (*autoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleSettings)(nil)).Elem()
}

func (i *autoscaleSettingsPtrType) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return i.ToAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *autoscaleSettingsPtrType) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscaleSettingsPtrOutput)
}

type AutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleSettings)(nil)).Elem()
}

func (o AutoscaleSettingsOutput) ToAutoscaleSettingsOutput() AutoscaleSettingsOutput {
	return o
}

func (o AutoscaleSettingsOutput) ToAutoscaleSettingsOutputWithContext(ctx context.Context) AutoscaleSettingsOutput {
	return o
}

func (o AutoscaleSettingsOutput) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return o.ToAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o AutoscaleSettingsOutput) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscaleSettings) *AutoscaleSettings {
		return &v
	}).(AutoscaleSettingsPtrOutput)
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type AutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleSettings)(nil)).Elem()
}

func (o AutoscaleSettingsPtrOutput) ToAutoscaleSettingsPtrOutput() AutoscaleSettingsPtrOutput {
	return o
}

func (o AutoscaleSettingsPtrOutput) ToAutoscaleSettingsPtrOutputWithContext(ctx context.Context) AutoscaleSettingsPtrOutput {
	return o
}

func (o AutoscaleSettingsPtrOutput) Elem() AutoscaleSettingsOutput {
	return o.ApplyT(func(v *AutoscaleSettings) AutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret AutoscaleSettings
		return ret
	}).(AutoscaleSettingsOutput)
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type AutoscaleSettingsResponse struct {
	// Represents maximum throughput, the resource can scale up to.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

type AutoscaleSettingsResponseOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscaleSettingsResponse)(nil)).Elem()
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponseOutput() AutoscaleSettingsResponseOutput {
	return o
}

func (o AutoscaleSettingsResponseOutput) ToAutoscaleSettingsResponseOutputWithContext(ctx context.Context) AutoscaleSettingsResponseOutput {
	return o
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsResponseOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscaleSettingsResponse) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type AutoscaleSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoscaleSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscaleSettingsResponse)(nil)).Elem()
}

func (o AutoscaleSettingsResponsePtrOutput) ToAutoscaleSettingsResponsePtrOutput() AutoscaleSettingsResponsePtrOutput {
	return o
}

func (o AutoscaleSettingsResponsePtrOutput) ToAutoscaleSettingsResponsePtrOutputWithContext(ctx context.Context) AutoscaleSettingsResponsePtrOutput {
	return o
}

func (o AutoscaleSettingsResponsePtrOutput) Elem() AutoscaleSettingsResponseOutput {
	return o.ApplyT(func(v *AutoscaleSettingsResponse) AutoscaleSettingsResponse {
		if v != nil {
			return *v
		}
		var ret AutoscaleSettingsResponse
		return ret
	}).(AutoscaleSettingsResponseOutput)
}

// Represents maximum throughput, the resource can scale up to.
func (o AutoscaleSettingsResponsePtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscaleSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

// The object representing the state of the migration between the backup policies.
type BackupPolicyMigrationState struct {
	// Time at which the backup policy migration started (ISO-8601 format).
	StartTime *string `pulumi:"startTime"`
	// Describes the status of migration between backup policy types.
	Status *string `pulumi:"status"`
	// Describes the target backup policy type of the backup policy migration.
	TargetType *string `pulumi:"targetType"`
}

// The object representing the state of the migration between the backup policies.
type BackupPolicyMigrationStateResponse struct {
	// Time at which the backup policy migration started (ISO-8601 format).
	StartTime *string `pulumi:"startTime"`
	// Describes the status of migration between backup policy types.
	Status *string `pulumi:"status"`
	// Describes the target backup policy type of the backup policy migration.
	TargetType *string `pulumi:"targetType"`
}

// Cosmos DB capability object
type Capability struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//	CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Cosmos DB capability object
type CapabilityArgs struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//	CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Cosmos DB capability object
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Cosmos DB capability object
type CapabilityResponse struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// Cosmos DB capability object
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// The object that represents all properties related to capacity enforcement on an account.
type Capacity struct {
	// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
	TotalThroughputLimit *int `pulumi:"totalThroughputLimit"`
}

// CapacityInput is an input type that accepts CapacityArgs and CapacityOutput values.
// You can construct a concrete instance of `CapacityInput` via:
//
//	CapacityArgs{...}
type CapacityInput interface {
	pulumi.Input

	ToCapacityOutput() CapacityOutput
	ToCapacityOutputWithContext(context.Context) CapacityOutput
}

// The object that represents all properties related to capacity enforcement on an account.
type CapacityArgs struct {
	// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
	TotalThroughputLimit pulumi.IntPtrInput `pulumi:"totalThroughputLimit"`
}

func (CapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capacity)(nil)).Elem()
}

func (i CapacityArgs) ToCapacityOutput() CapacityOutput {
	return i.ToCapacityOutputWithContext(context.Background())
}

func (i CapacityArgs) ToCapacityOutputWithContext(ctx context.Context) CapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityOutput)
}

func (i CapacityArgs) ToCapacityPtrOutput() CapacityPtrOutput {
	return i.ToCapacityPtrOutputWithContext(context.Background())
}

func (i CapacityArgs) ToCapacityPtrOutputWithContext(ctx context.Context) CapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityOutput).ToCapacityPtrOutputWithContext(ctx)
}

// CapacityPtrInput is an input type that accepts CapacityArgs, CapacityPtr and CapacityPtrOutput values.
// You can construct a concrete instance of `CapacityPtrInput` via:
//
//	        CapacityArgs{...}
//
//	or:
//
//	        nil
type CapacityPtrInput interface {
	pulumi.Input

	ToCapacityPtrOutput() CapacityPtrOutput
	ToCapacityPtrOutputWithContext(context.Context) CapacityPtrOutput
}

type capacityPtrType CapacityArgs

func CapacityPtr(v *CapacityArgs) CapacityPtrInput {
	return (*capacityPtrType)(v)
}

func (*capacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Capacity)(nil)).Elem()
}

func (i *capacityPtrType) ToCapacityPtrOutput() CapacityPtrOutput {
	return i.ToCapacityPtrOutputWithContext(context.Background())
}

func (i *capacityPtrType) ToCapacityPtrOutputWithContext(ctx context.Context) CapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityPtrOutput)
}

// The object that represents all properties related to capacity enforcement on an account.
type CapacityOutput struct{ *pulumi.OutputState }

func (CapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capacity)(nil)).Elem()
}

func (o CapacityOutput) ToCapacityOutput() CapacityOutput {
	return o
}

func (o CapacityOutput) ToCapacityOutputWithContext(ctx context.Context) CapacityOutput {
	return o
}

func (o CapacityOutput) ToCapacityPtrOutput() CapacityPtrOutput {
	return o.ToCapacityPtrOutputWithContext(context.Background())
}

func (o CapacityOutput) ToCapacityPtrOutputWithContext(ctx context.Context) CapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Capacity) *Capacity {
		return &v
	}).(CapacityPtrOutput)
}

// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
func (o CapacityOutput) TotalThroughputLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Capacity) *int { return v.TotalThroughputLimit }).(pulumi.IntPtrOutput)
}

type CapacityPtrOutput struct{ *pulumi.OutputState }

func (CapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Capacity)(nil)).Elem()
}

func (o CapacityPtrOutput) ToCapacityPtrOutput() CapacityPtrOutput {
	return o
}

func (o CapacityPtrOutput) ToCapacityPtrOutputWithContext(ctx context.Context) CapacityPtrOutput {
	return o
}

func (o CapacityPtrOutput) Elem() CapacityOutput {
	return o.ApplyT(func(v *Capacity) Capacity {
		if v != nil {
			return *v
		}
		var ret Capacity
		return ret
	}).(CapacityOutput)
}

// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
func (o CapacityPtrOutput) TotalThroughputLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Capacity) *int {
		if v == nil {
			return nil
		}
		return v.TotalThroughputLimit
	}).(pulumi.IntPtrOutput)
}

// The object that represents all properties related to capacity enforcement on an account.
type CapacityResponse struct {
	// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
	TotalThroughputLimit *int `pulumi:"totalThroughputLimit"`
}

// The object that represents all properties related to capacity enforcement on an account.
type CapacityResponseOutput struct{ *pulumi.OutputState }

func (CapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityResponse)(nil)).Elem()
}

func (o CapacityResponseOutput) ToCapacityResponseOutput() CapacityResponseOutput {
	return o
}

func (o CapacityResponseOutput) ToCapacityResponseOutputWithContext(ctx context.Context) CapacityResponseOutput {
	return o
}

// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
func (o CapacityResponseOutput) TotalThroughputLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityResponse) *int { return v.TotalThroughputLimit }).(pulumi.IntPtrOutput)
}

type CapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (CapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityResponse)(nil)).Elem()
}

func (o CapacityResponsePtrOutput) ToCapacityResponsePtrOutput() CapacityResponsePtrOutput {
	return o
}

func (o CapacityResponsePtrOutput) ToCapacityResponsePtrOutputWithContext(ctx context.Context) CapacityResponsePtrOutput {
	return o
}

func (o CapacityResponsePtrOutput) Elem() CapacityResponseOutput {
	return o.ApplyT(func(v *CapacityResponse) CapacityResponse {
		if v != nil {
			return *v
		}
		var ret CapacityResponse
		return ret
	}).(CapacityResponseOutput)
}

// The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
func (o CapacityResponsePtrOutput) TotalThroughputLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.TotalThroughputLimit
	}).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type CassandraKeyspaceGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsOutput() CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraKeyspaceGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutput() CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) ToCassandraKeyspaceGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) Elem() CassandraKeyspaceGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) CassandraKeyspaceGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret CassandraKeyspaceGetPropertiesResponseOptions
		return ret
	}).(CassandraKeyspaceGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type CassandraKeyspaceGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutput() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type CassandraKeyspaceGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Elem() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) CassandraKeyspaceGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret CassandraKeyspaceGetPropertiesResponseResource
		return ret
	}).(CassandraKeyspaceGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResource struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
}

// CassandraKeyspaceResourceInput is an input type that accepts CassandraKeyspaceResourceArgs and CassandraKeyspaceResourceOutput values.
// You can construct a concrete instance of `CassandraKeyspaceResourceInput` via:
//
//	CassandraKeyspaceResourceArgs{...}
type CassandraKeyspaceResourceInput interface {
	pulumi.Input

	ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput
	ToCassandraKeyspaceResourceOutputWithContext(context.Context) CassandraKeyspaceResourceOutput
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResourceArgs struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id pulumi.StringInput `pulumi:"id"`
}

func (CassandraKeyspaceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceResource)(nil)).Elem()
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput {
	return i.ToCassandraKeyspaceResourceOutputWithContext(context.Background())
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutputWithContext(ctx context.Context) CassandraKeyspaceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourceOutput)
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceResource)(nil)).Elem()
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput {
	return o
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourceOutputWithContext(ctx context.Context) CassandraKeyspaceResourceOutput {
	return o
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceResource) string { return v.Id }).(pulumi.StringOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKey struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// CassandraPartitionKeyInput is an input type that accepts CassandraPartitionKeyArgs and CassandraPartitionKeyOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyInput` via:
//
//	CassandraPartitionKeyArgs{...}
type CassandraPartitionKeyInput interface {
	pulumi.Input

	ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput
	ToCassandraPartitionKeyOutputWithContext(context.Context) CassandraPartitionKeyOutput
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyArgs struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CassandraPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput {
	return i.ToCassandraPartitionKeyOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutputWithContext(ctx context.Context) CassandraPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyOutput)
}

// CassandraPartitionKeyArrayInput is an input type that accepts CassandraPartitionKeyArray and CassandraPartitionKeyArrayOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyArrayInput` via:
//
//	CassandraPartitionKeyArray{ CassandraPartitionKeyArgs{...} }
type CassandraPartitionKeyArrayInput interface {
	pulumi.Input

	ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput
	ToCassandraPartitionKeyArrayOutputWithContext(context.Context) CassandraPartitionKeyArrayOutput
}

type CassandraPartitionKeyArray []CassandraPartitionKeyInput

func (CassandraPartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput {
	return i.ToCassandraPartitionKeyArrayOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyArrayOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKey)(nil)).Elem()
}

func (o CassandraPartitionKeyOutput) ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput {
	return o
}

func (o CassandraPartitionKeyOutput) ToCassandraPartitionKeyOutputWithContext(ctx context.Context) CassandraPartitionKeyOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKey)(nil)).Elem()
}

func (o CassandraPartitionKeyArrayOutput) ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput {
	return o
}

func (o CassandraPartitionKeyArrayOutput) ToCassandraPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyArrayOutput {
	return o
}

func (o CassandraPartitionKeyArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKey {
		return vs[0].([]CassandraPartitionKey)[vs[1].(int)]
	}).(CassandraPartitionKeyOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponse struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutput() CassandraPartitionKeyResponseOutput {
	return o
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutput() CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKeyResponse {
		return vs[0].([]CassandraPartitionKeyResponse)[vs[1].(int)]
	}).(CassandraPartitionKeyResponseOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchema struct {
	// List of cluster key.
	ClusterKeys []ClusterKey `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []Column `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKey `pulumi:"partitionKeys"`
}

// CassandraSchemaInput is an input type that accepts CassandraSchemaArgs and CassandraSchemaOutput values.
// You can construct a concrete instance of `CassandraSchemaInput` via:
//
//	CassandraSchemaArgs{...}
type CassandraSchemaInput interface {
	pulumi.Input

	ToCassandraSchemaOutput() CassandraSchemaOutput
	ToCassandraSchemaOutputWithContext(context.Context) CassandraSchemaOutput
}

// Cosmos DB Cassandra table schema
type CassandraSchemaArgs struct {
	// List of cluster key.
	ClusterKeys ClusterKeyArrayInput `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns ColumnArrayInput `pulumi:"columns"`
	// List of partition key.
	PartitionKeys CassandraPartitionKeyArrayInput `pulumi:"partitionKeys"`
}

func (CassandraSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchema)(nil)).Elem()
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutput() CassandraSchemaOutput {
	return i.ToCassandraSchemaOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutputWithContext(ctx context.Context) CassandraSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput)
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput).ToCassandraSchemaPtrOutputWithContext(ctx)
}

// CassandraSchemaPtrInput is an input type that accepts CassandraSchemaArgs, CassandraSchemaPtr and CassandraSchemaPtrOutput values.
// You can construct a concrete instance of `CassandraSchemaPtrInput` via:
//
//	        CassandraSchemaArgs{...}
//
//	or:
//
//	        nil
type CassandraSchemaPtrInput interface {
	pulumi.Input

	ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput
	ToCassandraSchemaPtrOutputWithContext(context.Context) CassandraSchemaPtrOutput
}

type cassandraSchemaPtrType CassandraSchemaArgs

func CassandraSchemaPtr(v *CassandraSchemaArgs) CassandraSchemaPtrInput {
	return (*cassandraSchemaPtrType)(v)
}

func (*cassandraSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchema)(nil)).Elem()
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaPtrOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaOutput struct{ *pulumi.OutputState }

func (CassandraSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchema)(nil)).Elem()
}

func (o CassandraSchemaOutput) ToCassandraSchemaOutput() CassandraSchemaOutput {
	return o
}

func (o CassandraSchemaOutput) ToCassandraSchemaOutputWithContext(ctx context.Context) CassandraSchemaOutput {
	return o
}

func (o CassandraSchemaOutput) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return o.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (o CassandraSchemaOutput) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraSchema) *CassandraSchema {
		return &v
	}).(CassandraSchemaPtrOutput)
}

// List of cluster key.
func (o CassandraSchemaOutput) ClusterKeys() ClusterKeyArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []ClusterKey { return v.ClusterKeys }).(ClusterKeyArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaOutput) Columns() ColumnArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []Column { return v.Columns }).(ColumnArrayOutput)
}

// List of partition key.
func (o CassandraSchemaOutput) PartitionKeys() CassandraPartitionKeyArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []CassandraPartitionKey { return v.PartitionKeys }).(CassandraPartitionKeyArrayOutput)
}

type CassandraSchemaPtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchema)(nil)).Elem()
}

func (o CassandraSchemaPtrOutput) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return o
}

func (o CassandraSchemaPtrOutput) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return o
}

func (o CassandraSchemaPtrOutput) Elem() CassandraSchemaOutput {
	return o.ApplyT(func(v *CassandraSchema) CassandraSchema {
		if v != nil {
			return *v
		}
		var ret CassandraSchema
		return ret
	}).(CassandraSchemaOutput)
}

// List of cluster key.
func (o CassandraSchemaPtrOutput) ClusterKeys() ClusterKeyArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []ClusterKey {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaPtrOutput) Columns() ColumnArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []Column {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnArrayOutput)
}

// List of partition key.
func (o CassandraSchemaPtrOutput) PartitionKeys() CassandraPartitionKeyArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []CassandraPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyArrayOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponse struct {
	// List of cluster key.
	ClusterKeys []ClusterKeyResponse `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []ColumnResponse `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKeyResponse `pulumi:"partitionKeys"`
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponseOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutput() CassandraSchemaResponseOutput {
	return o
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutputWithContext(ctx context.Context) CassandraSchemaResponseOutput {
	return o
}

// List of cluster key.
func (o CassandraSchemaResponseOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ClusterKeyResponse { return v.ClusterKeys }).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponseOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ColumnResponse { return v.Columns }).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponseOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []CassandraPartitionKeyResponse { return v.PartitionKeys }).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraSchemaResponsePtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) Elem() CassandraSchemaResponseOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) CassandraSchemaResponse {
		if v != nil {
			return *v
		}
		var ret CassandraSchemaResponse
		return ret
	}).(CassandraSchemaResponseOutput)
}

// List of cluster key.
func (o CassandraSchemaResponsePtrOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ClusterKeyResponse {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponsePtrOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ColumnResponse {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponsePtrOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []CassandraPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraTableGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type CassandraTableGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsOutput() CassandraTableGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsOutput) ToCassandraTableGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o CassandraTableGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraTableGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CassandraTableGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutput() CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) ToCassandraTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) Elem() CassandraTableGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) CassandraTableGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret CassandraTableGetPropertiesResponseOptions
		return ret
	}).(CassandraTableGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraTableGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchemaResponse `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type CassandraTableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutput() CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

// Analytical TTL.
func (o CassandraTableGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse { return v.Schema }).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type CassandraTableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Elem() CassandraTableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) CassandraTableGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret CassandraTableGetPropertiesResponseResource
		return ret
	}).(CassandraTableGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.IntPtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB Cassandra table resource object
type CassandraTableResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchema `pulumi:"schema"`
}

// CassandraTableResourceInput is an input type that accepts CassandraTableResourceArgs and CassandraTableResourceOutput values.
// You can construct a concrete instance of `CassandraTableResourceInput` via:
//
//	CassandraTableResourceArgs{...}
type CassandraTableResourceInput interface {
	pulumi.Input

	ToCassandraTableResourceOutput() CassandraTableResourceOutput
	ToCassandraTableResourceOutputWithContext(context.Context) CassandraTableResourceOutput
}

// Cosmos DB Cassandra table resource object
type CassandraTableResourceArgs struct {
	// Analytical TTL.
	AnalyticalStorageTtl pulumi.IntPtrInput `pulumi:"analyticalStorageTtl"`
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id pulumi.StringInput `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema CassandraSchemaPtrInput `pulumi:"schema"`
}

func (CassandraTableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableResource)(nil)).Elem()
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutput() CassandraTableResourceOutput {
	return i.ToCassandraTableResourceOutputWithContext(context.Background())
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutputWithContext(ctx context.Context) CassandraTableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourceOutput)
}

// Cosmos DB Cassandra table resource object
type CassandraTableResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableResource)(nil)).Elem()
}

func (o CassandraTableResourceOutput) ToCassandraTableResourceOutput() CassandraTableResourceOutput {
	return o
}

func (o CassandraTableResourceOutput) ToCassandraTableResourceOutputWithContext(ctx context.Context) CassandraTableResourceOutput {
	return o
}

// Analytical TTL.
func (o CassandraTableResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableResource) string { return v.Id }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) Schema() CassandraSchemaPtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *CassandraSchema { return v.Schema }).(CassandraSchemaPtrOutput)
}

type CassandraViewGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type CassandraViewGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (CassandraViewGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraViewGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraViewGetPropertiesResponseOptionsOutput) ToCassandraViewGetPropertiesResponseOptionsOutput() CassandraViewGetPropertiesResponseOptionsOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseOptionsOutput) ToCassandraViewGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) CassandraViewGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o CassandraViewGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraViewGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CassandraViewGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (CassandraViewGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraViewGetPropertiesResponseOptions)(nil)).Elem()
}

func (o CassandraViewGetPropertiesResponseOptionsPtrOutput) ToCassandraViewGetPropertiesResponseOptionsPtrOutput() CassandraViewGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseOptionsPtrOutput) ToCassandraViewGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) CassandraViewGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseOptionsPtrOutput) Elem() CassandraViewGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseOptions) CassandraViewGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret CassandraViewGetPropertiesResponseOptions
		return ret
	}).(CassandraViewGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CassandraViewGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o CassandraViewGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type CassandraViewGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra view
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
	// View Definition of the Cosmos DB Cassandra view
	ViewDefinition string `pulumi:"viewDefinition"`
}

type CassandraViewGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraViewGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraViewGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraViewGetPropertiesResponseResourceOutput) ToCassandraViewGetPropertiesResponseResourceOutput() CassandraViewGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseResourceOutput) ToCassandraViewGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraViewGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraViewGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra view
func (o CassandraViewGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraViewGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraViewGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

// View Definition of the Cosmos DB Cassandra view
func (o CassandraViewGetPropertiesResponseResourceOutput) ViewDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewGetPropertiesResponseResource) string { return v.ViewDefinition }).(pulumi.StringOutput)
}

type CassandraViewGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraViewGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraViewGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraViewGetPropertiesResponseResourcePtrOutput) ToCassandraViewGetPropertiesResponseResourcePtrOutput() CassandraViewGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseResourcePtrOutput) ToCassandraViewGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraViewGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraViewGetPropertiesResponseResourcePtrOutput) Elem() CassandraViewGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) CassandraViewGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret CassandraViewGetPropertiesResponseResource
		return ret
	}).(CassandraViewGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraViewGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra view
func (o CassandraViewGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraViewGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraViewGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// View Definition of the Cosmos DB Cassandra view
func (o CassandraViewGetPropertiesResponseResourcePtrOutput) ViewDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraViewGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.ViewDefinition
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB Cassandra view resource object
type CassandraViewResource struct {
	// Name of the Cosmos DB Cassandra view
	Id string `pulumi:"id"`
	// View Definition of the Cosmos DB Cassandra view
	ViewDefinition string `pulumi:"viewDefinition"`
}

// CassandraViewResourceInput is an input type that accepts CassandraViewResourceArgs and CassandraViewResourceOutput values.
// You can construct a concrete instance of `CassandraViewResourceInput` via:
//
//	CassandraViewResourceArgs{...}
type CassandraViewResourceInput interface {
	pulumi.Input

	ToCassandraViewResourceOutput() CassandraViewResourceOutput
	ToCassandraViewResourceOutputWithContext(context.Context) CassandraViewResourceOutput
}

// Cosmos DB Cassandra view resource object
type CassandraViewResourceArgs struct {
	// Name of the Cosmos DB Cassandra view
	Id pulumi.StringInput `pulumi:"id"`
	// View Definition of the Cosmos DB Cassandra view
	ViewDefinition pulumi.StringInput `pulumi:"viewDefinition"`
}

func (CassandraViewResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraViewResource)(nil)).Elem()
}

func (i CassandraViewResourceArgs) ToCassandraViewResourceOutput() CassandraViewResourceOutput {
	return i.ToCassandraViewResourceOutputWithContext(context.Background())
}

func (i CassandraViewResourceArgs) ToCassandraViewResourceOutputWithContext(ctx context.Context) CassandraViewResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraViewResourceOutput)
}

// Cosmos DB Cassandra view resource object
type CassandraViewResourceOutput struct{ *pulumi.OutputState }

func (CassandraViewResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraViewResource)(nil)).Elem()
}

func (o CassandraViewResourceOutput) ToCassandraViewResourceOutput() CassandraViewResourceOutput {
	return o
}

func (o CassandraViewResourceOutput) ToCassandraViewResourceOutputWithContext(ctx context.Context) CassandraViewResourceOutput {
	return o
}

// Name of the Cosmos DB Cassandra view
func (o CassandraViewResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewResource) string { return v.Id }).(pulumi.StringOutput)
}

// View Definition of the Cosmos DB Cassandra view
func (o CassandraViewResourceOutput) ViewDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraViewResource) string { return v.ViewDefinition }).(pulumi.StringOutput)
}

type Certificate struct {
	// PEM formatted public key.
	Pem *string `pulumi:"pem"`
}

// CertificateInput is an input type that accepts CertificateArgs and CertificateOutput values.
// You can construct a concrete instance of `CertificateInput` via:
//
//	CertificateArgs{...}
type CertificateInput interface {
	pulumi.Input

	ToCertificateOutput() CertificateOutput
	ToCertificateOutputWithContext(context.Context) CertificateOutput
}

type CertificateArgs struct {
	// PEM formatted public key.
	Pem pulumi.StringPtrInput `pulumi:"pem"`
}

func (CertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificate)(nil)).Elem()
}

func (i CertificateArgs) ToCertificateOutput() CertificateOutput {
	return i.ToCertificateOutputWithContext(context.Background())
}

func (i CertificateArgs) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOutput)
}

// CertificateArrayInput is an input type that accepts CertificateArray and CertificateArrayOutput values.
// You can construct a concrete instance of `CertificateArrayInput` via:
//
//	CertificateArray{ CertificateArgs{...} }
type CertificateArrayInput interface {
	pulumi.Input

	ToCertificateArrayOutput() CertificateArrayOutput
	ToCertificateArrayOutputWithContext(context.Context) CertificateArrayOutput
}

type CertificateArray []CertificateInput

func (CertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Certificate)(nil)).Elem()
}

func (i CertificateArray) ToCertificateArrayOutput() CertificateArrayOutput {
	return i.ToCertificateArrayOutputWithContext(context.Background())
}

func (i CertificateArray) ToCertificateArrayOutputWithContext(ctx context.Context) CertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateArrayOutput)
}

type CertificateOutput struct{ *pulumi.OutputState }

func (CertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Certificate)(nil)).Elem()
}

func (o CertificateOutput) ToCertificateOutput() CertificateOutput {
	return o
}

func (o CertificateOutput) ToCertificateOutputWithContext(ctx context.Context) CertificateOutput {
	return o
}

// PEM formatted public key.
func (o CertificateOutput) Pem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Certificate) *string { return v.Pem }).(pulumi.StringPtrOutput)
}

type CertificateArrayOutput struct{ *pulumi.OutputState }

func (CertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Certificate)(nil)).Elem()
}

func (o CertificateArrayOutput) ToCertificateArrayOutput() CertificateArrayOutput {
	return o
}

func (o CertificateArrayOutput) ToCertificateArrayOutputWithContext(ctx context.Context) CertificateArrayOutput {
	return o
}

func (o CertificateArrayOutput) Index(i pulumi.IntInput) CertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Certificate {
		return vs[0].([]Certificate)[vs[1].(int)]
	}).(CertificateOutput)
}

type CertificateResponse struct {
	// PEM formatted public key.
	Pem *string `pulumi:"pem"`
}

type CertificateResponseOutput struct{ *pulumi.OutputState }

func (CertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateResponse)(nil)).Elem()
}

func (o CertificateResponseOutput) ToCertificateResponseOutput() CertificateResponseOutput {
	return o
}

func (o CertificateResponseOutput) ToCertificateResponseOutputWithContext(ctx context.Context) CertificateResponseOutput {
	return o
}

// PEM formatted public key.
func (o CertificateResponseOutput) Pem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateResponse) *string { return v.Pem }).(pulumi.StringPtrOutput)
}

type CertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (CertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateResponse)(nil)).Elem()
}

func (o CertificateResponseArrayOutput) ToCertificateResponseArrayOutput() CertificateResponseArrayOutput {
	return o
}

func (o CertificateResponseArrayOutput) ToCertificateResponseArrayOutputWithContext(ctx context.Context) CertificateResponseArrayOutput {
	return o
}

func (o CertificateResponseArrayOutput) Index(i pulumi.IntInput) CertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateResponse {
		return vs[0].([]CertificateResponse)[vs[1].(int)]
	}).(CertificateResponseOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKey struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// ClusterKeyInput is an input type that accepts ClusterKeyArgs and ClusterKeyOutput values.
// You can construct a concrete instance of `ClusterKeyInput` via:
//
//	ClusterKeyArgs{...}
type ClusterKeyInput interface {
	pulumi.Input

	ToClusterKeyOutput() ClusterKeyOutput
	ToClusterKeyOutputWithContext(context.Context) ClusterKeyOutput
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyArgs struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (ClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArgs) ToClusterKeyOutput() ClusterKeyOutput {
	return i.ToClusterKeyOutputWithContext(context.Background())
}

func (i ClusterKeyArgs) ToClusterKeyOutputWithContext(ctx context.Context) ClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyOutput)
}

// ClusterKeyArrayInput is an input type that accepts ClusterKeyArray and ClusterKeyArrayOutput values.
// You can construct a concrete instance of `ClusterKeyArrayInput` via:
//
//	ClusterKeyArray{ ClusterKeyArgs{...} }
type ClusterKeyArrayInput interface {
	pulumi.Input

	ToClusterKeyArrayOutput() ClusterKeyArrayOutput
	ToClusterKeyArrayOutputWithContext(context.Context) ClusterKeyArrayOutput
}

type ClusterKeyArray []ClusterKeyInput

func (ClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArray) ToClusterKeyArrayOutput() ClusterKeyArrayOutput {
	return i.ToClusterKeyArrayOutputWithContext(context.Background())
}

func (i ClusterKeyArray) ToClusterKeyArrayOutputWithContext(ctx context.Context) ClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyArrayOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyOutput struct{ *pulumi.OutputState }

func (ClusterKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKey)(nil)).Elem()
}

func (o ClusterKeyOutput) ToClusterKeyOutput() ClusterKeyOutput {
	return o
}

func (o ClusterKeyOutput) ToClusterKeyOutputWithContext(ctx context.Context) ClusterKeyOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKey) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKey)(nil)).Elem()
}

func (o ClusterKeyArrayOutput) ToClusterKeyArrayOutput() ClusterKeyArrayOutput {
	return o
}

func (o ClusterKeyArrayOutput) ToClusterKeyArrayOutputWithContext(ctx context.Context) ClusterKeyArrayOutput {
	return o
}

func (o ClusterKeyArrayOutput) Index(i pulumi.IntInput) ClusterKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKey {
		return vs[0].([]ClusterKey)[vs[1].(int)]
	}).(ClusterKeyOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponse struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponseOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutput() ClusterKeyResponseOutput {
	return o
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutputWithContext(ctx context.Context) ClusterKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyResponseOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutput() ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutputWithContext(ctx context.Context) ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) Index(i pulumi.IntInput) ClusterKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKeyResponse {
		return vs[0].([]ClusterKeyResponse)[vs[1].(int)]
	}).(ClusterKeyResponseOutput)
}

// Properties of a managed Cassandra cluster.
type ClusterResourceProperties struct {
	// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// Whether Cassandra audit logging is enabled
	CassandraAuditLoggingEnabled *bool `pulumi:"cassandraAuditLoggingEnabled"`
	// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
	CassandraVersion *string `pulumi:"cassandraVersion"`
	// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
	ClientCertificates []Certificate `pulumi:"clientCertificates"`
	// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
	ClusterNameOverride *string `pulumi:"clusterNameOverride"`
	// Whether the cluster and associated data centers has been deallocated.
	Deallocated *bool `pulumi:"deallocated"`
	// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
	DelegatedManagementSubnetId *string `pulumi:"delegatedManagementSubnetId"`
	// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
	ExternalGossipCertificates []Certificate `pulumi:"externalGossipCertificates"`
	// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
	ExternalSeedNodes []SeedNode `pulumi:"externalSeedNodes"`
	// Number of hours to wait between taking a backup of the cluster.
	HoursBetweenBackups *int `pulumi:"hoursBetweenBackups"`
	// Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
	InitialCassandraAdminPassword *string `pulumi:"initialCassandraAdminPassword"`
	// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
	PrometheusEndpoint *SeedNode `pulumi:"prometheusEndpoint"`
	// The status of the resource at the time the operation was called.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
	RepairEnabled *bool `pulumi:"repairEnabled"`
	// To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
	RestoreFromBackupId *string `pulumi:"restoreFromBackupId"`
}

// ClusterResourcePropertiesInput is an input type that accepts ClusterResourcePropertiesArgs and ClusterResourcePropertiesOutput values.
// You can construct a concrete instance of `ClusterResourcePropertiesInput` via:
//
//	ClusterResourcePropertiesArgs{...}
type ClusterResourcePropertiesInput interface {
	pulumi.Input

	ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput
	ToClusterResourcePropertiesOutputWithContext(context.Context) ClusterResourcePropertiesOutput
}

// Properties of a managed Cassandra cluster.
type ClusterResourcePropertiesArgs struct {
	// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
	AuthenticationMethod pulumi.StringPtrInput `pulumi:"authenticationMethod"`
	// Whether Cassandra audit logging is enabled
	CassandraAuditLoggingEnabled pulumi.BoolPtrInput `pulumi:"cassandraAuditLoggingEnabled"`
	// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
	CassandraVersion pulumi.StringPtrInput `pulumi:"cassandraVersion"`
	// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
	ClientCertificates CertificateArrayInput `pulumi:"clientCertificates"`
	// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
	ClusterNameOverride pulumi.StringPtrInput `pulumi:"clusterNameOverride"`
	// Whether the cluster and associated data centers has been deallocated.
	Deallocated pulumi.BoolPtrInput `pulumi:"deallocated"`
	// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
	DelegatedManagementSubnetId pulumi.StringPtrInput `pulumi:"delegatedManagementSubnetId"`
	// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
	ExternalGossipCertificates CertificateArrayInput `pulumi:"externalGossipCertificates"`
	// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
	ExternalSeedNodes SeedNodeArrayInput `pulumi:"externalSeedNodes"`
	// Number of hours to wait between taking a backup of the cluster.
	HoursBetweenBackups pulumi.IntPtrInput `pulumi:"hoursBetweenBackups"`
	// Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
	InitialCassandraAdminPassword pulumi.StringPtrInput `pulumi:"initialCassandraAdminPassword"`
	// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
	PrometheusEndpoint SeedNodePtrInput `pulumi:"prometheusEndpoint"`
	// The status of the resource at the time the operation was called.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
	RepairEnabled pulumi.BoolPtrInput `pulumi:"repairEnabled"`
	// To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
	RestoreFromBackupId pulumi.StringPtrInput `pulumi:"restoreFromBackupId"`
}

func (ClusterResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceProperties)(nil)).Elem()
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput {
	return i.ToClusterResourcePropertiesOutputWithContext(context.Background())
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesOutputWithContext(ctx context.Context) ClusterResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesOutput)
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return i.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i ClusterResourcePropertiesArgs) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesOutput).ToClusterResourcePropertiesPtrOutputWithContext(ctx)
}

// ClusterResourcePropertiesPtrInput is an input type that accepts ClusterResourcePropertiesArgs, ClusterResourcePropertiesPtr and ClusterResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `ClusterResourcePropertiesPtrInput` via:
//
//	        ClusterResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type ClusterResourcePropertiesPtrInput interface {
	pulumi.Input

	ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput
	ToClusterResourcePropertiesPtrOutputWithContext(context.Context) ClusterResourcePropertiesPtrOutput
}

type clusterResourcePropertiesPtrType ClusterResourcePropertiesArgs

func ClusterResourcePropertiesPtr(v *ClusterResourcePropertiesArgs) ClusterResourcePropertiesPtrInput {
	return (*clusterResourcePropertiesPtrType)(v)
}

func (*clusterResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceProperties)(nil)).Elem()
}

func (i *clusterResourcePropertiesPtrType) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return i.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *clusterResourcePropertiesPtrType) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourcePropertiesPtrOutput)
}

// Properties of a managed Cassandra cluster.
type ClusterResourcePropertiesOutput struct{ *pulumi.OutputState }

func (ClusterResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceProperties)(nil)).Elem()
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesOutput() ClusterResourcePropertiesOutput {
	return o
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesOutputWithContext(ctx context.Context) ClusterResourcePropertiesOutput {
	return o
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return o.ToClusterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o ClusterResourcePropertiesOutput) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceProperties) *ClusterResourceProperties {
		return &v
	}).(ClusterResourcePropertiesPtrOutput)
}

// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
func (o ClusterResourcePropertiesOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.AuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Whether Cassandra audit logging is enabled
func (o ClusterResourcePropertiesOutput) CassandraAuditLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *bool { return v.CassandraAuditLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
func (o ClusterResourcePropertiesOutput) CassandraVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.CassandraVersion }).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
func (o ClusterResourcePropertiesOutput) ClientCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v ClusterResourceProperties) []Certificate { return v.ClientCertificates }).(CertificateArrayOutput)
}

// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
func (o ClusterResourcePropertiesOutput) ClusterNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.ClusterNameOverride }).(pulumi.StringPtrOutput)
}

// Whether the cluster and associated data centers has been deallocated.
func (o ClusterResourcePropertiesOutput) Deallocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *bool { return v.Deallocated }).(pulumi.BoolPtrOutput)
}

// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
func (o ClusterResourcePropertiesOutput) DelegatedManagementSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.DelegatedManagementSubnetId }).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
func (o ClusterResourcePropertiesOutput) ExternalGossipCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v ClusterResourceProperties) []Certificate { return v.ExternalGossipCertificates }).(CertificateArrayOutput)
}

// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
func (o ClusterResourcePropertiesOutput) ExternalSeedNodes() SeedNodeArrayOutput {
	return o.ApplyT(func(v ClusterResourceProperties) []SeedNode { return v.ExternalSeedNodes }).(SeedNodeArrayOutput)
}

// Number of hours to wait between taking a backup of the cluster.
func (o ClusterResourcePropertiesOutput) HoursBetweenBackups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *int { return v.HoursBetweenBackups }).(pulumi.IntPtrOutput)
}

// Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
func (o ClusterResourcePropertiesOutput) InitialCassandraAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.InitialCassandraAdminPassword }).(pulumi.StringPtrOutput)
}

// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
func (o ClusterResourcePropertiesOutput) PrometheusEndpoint() SeedNodePtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *SeedNode { return v.PrometheusEndpoint }).(SeedNodePtrOutput)
}

// The status of the resource at the time the operation was called.
func (o ClusterResourcePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
func (o ClusterResourcePropertiesOutput) RepairEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *bool { return v.RepairEnabled }).(pulumi.BoolPtrOutput)
}

// To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
func (o ClusterResourcePropertiesOutput) RestoreFromBackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceProperties) *string { return v.RestoreFromBackupId }).(pulumi.StringPtrOutput)
}

type ClusterResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceProperties)(nil)).Elem()
}

func (o ClusterResourcePropertiesPtrOutput) ToClusterResourcePropertiesPtrOutput() ClusterResourcePropertiesPtrOutput {
	return o
}

func (o ClusterResourcePropertiesPtrOutput) ToClusterResourcePropertiesPtrOutputWithContext(ctx context.Context) ClusterResourcePropertiesPtrOutput {
	return o
}

func (o ClusterResourcePropertiesPtrOutput) Elem() ClusterResourcePropertiesOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) ClusterResourceProperties {
		if v != nil {
			return *v
		}
		var ret ClusterResourceProperties
		return ret
	}).(ClusterResourcePropertiesOutput)
}

// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
func (o ClusterResourcePropertiesPtrOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethod
	}).(pulumi.StringPtrOutput)
}

// Whether Cassandra audit logging is enabled
func (o ClusterResourcePropertiesPtrOutput) CassandraAuditLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.CassandraAuditLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
func (o ClusterResourcePropertiesPtrOutput) CassandraVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.CassandraVersion
	}).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
func (o ClusterResourcePropertiesPtrOutput) ClientCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) []Certificate {
		if v == nil {
			return nil
		}
		return v.ClientCertificates
	}).(CertificateArrayOutput)
}

// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
func (o ClusterResourcePropertiesPtrOutput) ClusterNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ClusterNameOverride
	}).(pulumi.StringPtrOutput)
}

// Whether the cluster and associated data centers has been deallocated.
func (o ClusterResourcePropertiesPtrOutput) Deallocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Deallocated
	}).(pulumi.BoolPtrOutput)
}

// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
func (o ClusterResourcePropertiesPtrOutput) DelegatedManagementSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedManagementSubnetId
	}).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
func (o ClusterResourcePropertiesPtrOutput) ExternalGossipCertificates() CertificateArrayOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) []Certificate {
		if v == nil {
			return nil
		}
		return v.ExternalGossipCertificates
	}).(CertificateArrayOutput)
}

// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
func (o ClusterResourcePropertiesPtrOutput) ExternalSeedNodes() SeedNodeArrayOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) []SeedNode {
		if v == nil {
			return nil
		}
		return v.ExternalSeedNodes
	}).(SeedNodeArrayOutput)
}

// Number of hours to wait between taking a backup of the cluster.
func (o ClusterResourcePropertiesPtrOutput) HoursBetweenBackups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *int {
		if v == nil {
			return nil
		}
		return v.HoursBetweenBackups
	}).(pulumi.IntPtrOutput)
}

// Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
func (o ClusterResourcePropertiesPtrOutput) InitialCassandraAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.InitialCassandraAdminPassword
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
func (o ClusterResourcePropertiesPtrOutput) PrometheusEndpoint() SeedNodePtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *SeedNode {
		if v == nil {
			return nil
		}
		return v.PrometheusEndpoint
	}).(SeedNodePtrOutput)
}

// The status of the resource at the time the operation was called.
func (o ClusterResourcePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
func (o ClusterResourcePropertiesPtrOutput) RepairEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.RepairEnabled
	}).(pulumi.BoolPtrOutput)
}

// To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
func (o ClusterResourcePropertiesPtrOutput) RestoreFromBackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RestoreFromBackupId
	}).(pulumi.StringPtrOutput)
}

// Properties of a managed Cassandra cluster.
type ClusterResourceResponseProperties struct {
	// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
	AuthenticationMethod *string `pulumi:"authenticationMethod"`
	// Whether Cassandra audit logging is enabled
	CassandraAuditLoggingEnabled *bool `pulumi:"cassandraAuditLoggingEnabled"`
	// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
	CassandraVersion *string `pulumi:"cassandraVersion"`
	// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
	ClientCertificates []CertificateResponse `pulumi:"clientCertificates"`
	// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
	ClusterNameOverride *string `pulumi:"clusterNameOverride"`
	// Whether the cluster and associated data centers has been deallocated.
	Deallocated *bool `pulumi:"deallocated"`
	// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
	DelegatedManagementSubnetId *string `pulumi:"delegatedManagementSubnetId"`
	// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
	ExternalGossipCertificates []CertificateResponse `pulumi:"externalGossipCertificates"`
	// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
	ExternalSeedNodes []SeedNodeResponse `pulumi:"externalSeedNodes"`
	// List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.
	GossipCertificates []CertificateResponse `pulumi:"gossipCertificates"`
	// Number of hours to wait between taking a backup of the cluster.
	HoursBetweenBackups *int `pulumi:"hoursBetweenBackups"`
	// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
	PrometheusEndpoint *SeedNodeResponse `pulumi:"prometheusEndpoint"`
	// The status of the resource at the time the operation was called.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
	RepairEnabled *bool `pulumi:"repairEnabled"`
	// List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes.
	SeedNodes []SeedNodeResponse `pulumi:"seedNodes"`
}

// Properties of a managed Cassandra cluster.
type ClusterResourceResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ClusterResourceResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceResponseProperties)(nil)).Elem()
}

func (o ClusterResourceResponsePropertiesOutput) ToClusterResourceResponsePropertiesOutput() ClusterResourceResponsePropertiesOutput {
	return o
}

func (o ClusterResourceResponsePropertiesOutput) ToClusterResourceResponsePropertiesOutputWithContext(ctx context.Context) ClusterResourceResponsePropertiesOutput {
	return o
}

// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.
func (o ClusterResourceResponsePropertiesOutput) AuthenticationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *string { return v.AuthenticationMethod }).(pulumi.StringPtrOutput)
}

// Whether Cassandra audit logging is enabled
func (o ClusterResourceResponsePropertiesOutput) CassandraAuditLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *bool { return v.CassandraAuditLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
func (o ClusterResourceResponsePropertiesOutput) CassandraVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *string { return v.CassandraVersion }).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
func (o ClusterResourceResponsePropertiesOutput) ClientCertificates() CertificateResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) []CertificateResponse { return v.ClientCertificates }).(CertificateResponseArrayOutput)
}

// If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
func (o ClusterResourceResponsePropertiesOutput) ClusterNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *string { return v.ClusterNameOverride }).(pulumi.StringPtrOutput)
}

// Whether the cluster and associated data centers has been deallocated.
func (o ClusterResourceResponsePropertiesOutput) Deallocated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *bool { return v.Deallocated }).(pulumi.BoolPtrOutput)
}

// Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
func (o ClusterResourceResponsePropertiesOutput) DelegatedManagementSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *string { return v.DelegatedManagementSubnetId }).(pulumi.StringPtrOutput)
}

// List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
func (o ClusterResourceResponsePropertiesOutput) ExternalGossipCertificates() CertificateResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) []CertificateResponse { return v.ExternalGossipCertificates }).(CertificateResponseArrayOutput)
}

// List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
func (o ClusterResourceResponsePropertiesOutput) ExternalSeedNodes() SeedNodeResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) []SeedNodeResponse { return v.ExternalSeedNodes }).(SeedNodeResponseArrayOutput)
}

// List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.
func (o ClusterResourceResponsePropertiesOutput) GossipCertificates() CertificateResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) []CertificateResponse { return v.GossipCertificates }).(CertificateResponseArrayOutput)
}

// Number of hours to wait between taking a backup of the cluster.
func (o ClusterResourceResponsePropertiesOutput) HoursBetweenBackups() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *int { return v.HoursBetweenBackups }).(pulumi.IntPtrOutput)
}

// Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
func (o ClusterResourceResponsePropertiesOutput) PrometheusEndpoint() SeedNodeResponsePtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *SeedNodeResponse { return v.PrometheusEndpoint }).(SeedNodeResponsePtrOutput)
}

// The status of the resource at the time the operation was called.
func (o ClusterResourceResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
func (o ClusterResourceResponsePropertiesOutput) RepairEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) *bool { return v.RepairEnabled }).(pulumi.BoolPtrOutput)
}

// List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes.
func (o ClusterResourceResponsePropertiesOutput) SeedNodes() SeedNodeResponseArrayOutput {
	return o.ApplyT(func(v ClusterResourceResponseProperties) []SeedNodeResponse { return v.SeedNodes }).(SeedNodeResponseArrayOutput)
}

// Cosmos DB Cassandra table column
type Column struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// ColumnInput is an input type that accepts ColumnArgs and ColumnOutput values.
// You can construct a concrete instance of `ColumnInput` via:
//
//	ColumnArgs{...}
type ColumnInput interface {
	pulumi.Input

	ToColumnOutput() ColumnOutput
	ToColumnOutputWithContext(context.Context) ColumnOutput
}

// Cosmos DB Cassandra table column
type ColumnArgs struct {
	// Name of the Cosmos DB Cassandra table column
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Column)(nil)).Elem()
}

func (i ColumnArgs) ToColumnOutput() ColumnOutput {
	return i.ToColumnOutputWithContext(context.Background())
}

func (i ColumnArgs) ToColumnOutputWithContext(ctx context.Context) ColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnOutput)
}

// ColumnArrayInput is an input type that accepts ColumnArray and ColumnArrayOutput values.
// You can construct a concrete instance of `ColumnArrayInput` via:
//
//	ColumnArray{ ColumnArgs{...} }
type ColumnArrayInput interface {
	pulumi.Input

	ToColumnArrayOutput() ColumnArrayOutput
	ToColumnArrayOutputWithContext(context.Context) ColumnArrayOutput
}

type ColumnArray []ColumnInput

func (ColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Column)(nil)).Elem()
}

func (i ColumnArray) ToColumnArrayOutput() ColumnArrayOutput {
	return i.ToColumnArrayOutputWithContext(context.Background())
}

func (i ColumnArray) ToColumnArrayOutputWithContext(ctx context.Context) ColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnArrayOutput)
}

// Cosmos DB Cassandra table column
type ColumnOutput struct{ *pulumi.OutputState }

func (ColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Column)(nil)).Elem()
}

func (o ColumnOutput) ToColumnOutput() ColumnOutput {
	return o
}

func (o ColumnOutput) ToColumnOutputWithContext(ctx context.Context) ColumnOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Column) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Column) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnArrayOutput struct{ *pulumi.OutputState }

func (ColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Column)(nil)).Elem()
}

func (o ColumnArrayOutput) ToColumnArrayOutput() ColumnArrayOutput {
	return o
}

func (o ColumnArrayOutput) ToColumnArrayOutputWithContext(ctx context.Context) ColumnArrayOutput {
	return o
}

func (o ColumnArrayOutput) Index(i pulumi.IntInput) ColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Column {
		return vs[0].([]Column)[vs[1].(int)]
	}).(ColumnOutput)
}

// Cosmos DB Cassandra table column
type ColumnResponse struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// Cosmos DB Cassandra table column
type ColumnResponseOutput struct{ *pulumi.OutputState }

func (ColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseOutput) ToColumnResponseOutput() ColumnResponseOutput {
	return o
}

func (o ColumnResponseOutput) ToColumnResponseOutputWithContext(ctx context.Context) ColumnResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (ColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutput() ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutputWithContext(ctx context.Context) ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) Index(i pulumi.IntInput) ColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ColumnResponse {
		return vs[0].([]ColumnResponse)[vs[1].(int)]
	}).(ColumnResponseOutput)
}

type CompositePath struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// CompositePathInput is an input type that accepts CompositePathArgs and CompositePathOutput values.
// You can construct a concrete instance of `CompositePathInput` via:
//
//	CompositePathArgs{...}
type CompositePathInput interface {
	pulumi.Input

	ToCompositePathOutput() CompositePathOutput
	ToCompositePathOutputWithContext(context.Context) CompositePathOutput
}

type CompositePathArgs struct {
	// Sort order for composite paths.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (CompositePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePath)(nil)).Elem()
}

func (i CompositePathArgs) ToCompositePathOutput() CompositePathOutput {
	return i.ToCompositePathOutputWithContext(context.Background())
}

func (i CompositePathArgs) ToCompositePathOutputWithContext(ctx context.Context) CompositePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathOutput)
}

// CompositePathArrayInput is an input type that accepts CompositePathArray and CompositePathArrayOutput values.
// You can construct a concrete instance of `CompositePathArrayInput` via:
//
//	CompositePathArray{ CompositePathArgs{...} }
type CompositePathArrayInput interface {
	pulumi.Input

	ToCompositePathArrayOutput() CompositePathArrayOutput
	ToCompositePathArrayOutputWithContext(context.Context) CompositePathArrayOutput
}

type CompositePathArray []CompositePathInput

func (CompositePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePath)(nil)).Elem()
}

func (i CompositePathArray) ToCompositePathArrayOutput() CompositePathArrayOutput {
	return i.ToCompositePathArrayOutputWithContext(context.Background())
}

func (i CompositePathArray) ToCompositePathArrayOutputWithContext(ctx context.Context) CompositePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathArrayOutput)
}

type CompositePathOutput struct{ *pulumi.OutputState }

func (CompositePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePath)(nil)).Elem()
}

func (o CompositePathOutput) ToCompositePathOutput() CompositePathOutput {
	return o
}

func (o CompositePathOutput) ToCompositePathOutputWithContext(ctx context.Context) CompositePathOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePath) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathArrayOutput struct{ *pulumi.OutputState }

func (CompositePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePath)(nil)).Elem()
}

func (o CompositePathArrayOutput) ToCompositePathArrayOutput() CompositePathArrayOutput {
	return o
}

func (o CompositePathArrayOutput) ToCompositePathArrayOutputWithContext(ctx context.Context) CompositePathArrayOutput {
	return o
}

func (o CompositePathArrayOutput) Index(i pulumi.IntInput) CompositePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePath {
		return vs[0].([]CompositePath)[vs[1].(int)]
	}).(CompositePathOutput)
}

type CompositePathResponse struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

type CompositePathResponseOutput struct{ *pulumi.OutputState }

func (CompositePathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutput() CompositePathResponseOutput {
	return o
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutputWithContext(ctx context.Context) CompositePathResponseOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathResponseOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathResponseArrayOutput struct{ *pulumi.OutputState }

func (CompositePathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutput() CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutputWithContext(ctx context.Context) CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) Index(i pulumi.IntInput) CompositePathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePathResponse {
		return vs[0].([]CompositePathResponse)[vs[1].(int)]
	}).(CompositePathResponseOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ConflictResolutionPolicy
func (val *ConflictResolutionPolicy) Defaults() *ConflictResolutionPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Mode) {
		mode_ := "LastWriterWins"
		tmp.Mode = &mode_
	}
	return &tmp
}

// ConflictResolutionPolicyInput is an input type that accepts ConflictResolutionPolicyArgs and ConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyInput` via:
//
//	ConflictResolutionPolicyArgs{...}
type ConflictResolutionPolicyInput interface {
	pulumi.Input

	ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput
	ToConflictResolutionPolicyOutputWithContext(context.Context) ConflictResolutionPolicyOutput
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ConflictResolutionPolicyArgs
func (val *ConflictResolutionPolicyArgs) Defaults() *ConflictResolutionPolicyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Mode) {
		tmp.Mode = pulumi.StringPtr("LastWriterWins")
	}
	return &tmp
}
func (ConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicy)(nil)).Elem()
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput {
	return i.ToConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutputWithContext(ctx context.Context) ConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput)
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput).ToConflictResolutionPolicyPtrOutputWithContext(ctx)
}

// ConflictResolutionPolicyPtrInput is an input type that accepts ConflictResolutionPolicyArgs, ConflictResolutionPolicyPtr and ConflictResolutionPolicyPtrOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyPtrInput` via:
//
//	        ConflictResolutionPolicyArgs{...}
//
//	or:
//
//	        nil
type ConflictResolutionPolicyPtrInput interface {
	pulumi.Input

	ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput
	ToConflictResolutionPolicyPtrOutputWithContext(context.Context) ConflictResolutionPolicyPtrOutput
}

type conflictResolutionPolicyPtrType ConflictResolutionPolicyArgs

func ConflictResolutionPolicyPtr(v *ConflictResolutionPolicyArgs) ConflictResolutionPolicyPtrInput {
	return (*conflictResolutionPolicyPtrType)(v)
}

func (*conflictResolutionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicy)(nil)).Elem()
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicy)(nil)).Elem()
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput {
	return o
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyOutputWithContext(ctx context.Context) ConflictResolutionPolicyOutput {
	return o
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return o.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConflictResolutionPolicy) *ConflictResolutionPolicy {
		return &v
	}).(ConflictResolutionPolicyPtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicy)(nil)).Elem()
}

func (o ConflictResolutionPolicyPtrOutput) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return o
}

func (o ConflictResolutionPolicyPtrOutput) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return o
}

func (o ConflictResolutionPolicyPtrOutput) Elem() ConflictResolutionPolicyOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) ConflictResolutionPolicy {
		if v != nil {
			return *v
		}
		var ret ConflictResolutionPolicy
		return ret
	}).(ConflictResolutionPolicyOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyPtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyPtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponse struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// Defaults sets the appropriate defaults for ConflictResolutionPolicyResponse
func (val *ConflictResolutionPolicyResponse) Defaults() *ConflictResolutionPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Mode) {
		mode_ := "LastWriterWins"
		tmp.Mode = &mode_
	}
	return &tmp
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutput() ConflictResolutionPolicyResponseOutput {
	return o
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponseOutput {
	return o
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) Elem() ConflictResolutionPolicyResponseOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) ConflictResolutionPolicyResponse {
		if v != nil {
			return *v
		}
		var ret ConflictResolutionPolicyResponse
		return ret
	}).(ConflictResolutionPolicyResponseOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicy struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel DefaultConsistencyLevel `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *float64 `pulumi:"maxStalenessPrefix"`
}

// ConsistencyPolicyInput is an input type that accepts ConsistencyPolicyArgs and ConsistencyPolicyOutput values.
// You can construct a concrete instance of `ConsistencyPolicyInput` via:
//
//	ConsistencyPolicyArgs{...}
type ConsistencyPolicyInput interface {
	pulumi.Input

	ToConsistencyPolicyOutput() ConsistencyPolicyOutput
	ToConsistencyPolicyOutputWithContext(context.Context) ConsistencyPolicyOutput
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyArgs struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel DefaultConsistencyLevelInput `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix pulumi.Float64PtrInput `pulumi:"maxStalenessPrefix"`
}

func (ConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicy)(nil)).Elem()
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutput() ConsistencyPolicyOutput {
	return i.ToConsistencyPolicyOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutputWithContext(ctx context.Context) ConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput)
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput).ToConsistencyPolicyPtrOutputWithContext(ctx)
}

// ConsistencyPolicyPtrInput is an input type that accepts ConsistencyPolicyArgs, ConsistencyPolicyPtr and ConsistencyPolicyPtrOutput values.
// You can construct a concrete instance of `ConsistencyPolicyPtrInput` via:
//
//	        ConsistencyPolicyArgs{...}
//
//	or:
//
//	        nil
type ConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput
	ToConsistencyPolicyPtrOutputWithContext(context.Context) ConsistencyPolicyPtrOutput
}

type consistencyPolicyPtrType ConsistencyPolicyArgs

func ConsistencyPolicyPtr(v *ConsistencyPolicyArgs) ConsistencyPolicyPtrInput {
	return (*consistencyPolicyPtrType)(v)
}

func (*consistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicy)(nil)).Elem()
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicy)(nil)).Elem()
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyOutput() ConsistencyPolicyOutput {
	return o
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyOutputWithContext(ctx context.Context) ConsistencyPolicyOutput {
	return o
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return o.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConsistencyPolicy) *ConsistencyPolicy {
		return &v
	}).(ConsistencyPolicyPtrOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyOutput) DefaultConsistencyLevel() DefaultConsistencyLevelOutput {
	return o.ApplyT(func(v ConsistencyPolicy) DefaultConsistencyLevel { return v.DefaultConsistencyLevel }).(DefaultConsistencyLevelOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConsistencyPolicy) *float64 { return v.MaxStalenessPrefix }).(pulumi.Float64PtrOutput)
}

type ConsistencyPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicy)(nil)).Elem()
}

func (o ConsistencyPolicyPtrOutput) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return o
}

func (o ConsistencyPolicyPtrOutput) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return o
}

func (o ConsistencyPolicyPtrOutput) Elem() ConsistencyPolicyOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) ConsistencyPolicy {
		if v != nil {
			return *v
		}
		var ret ConsistencyPolicy
		return ret
	}).(ConsistencyPolicyOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyPtrOutput) DefaultConsistencyLevel() DefaultConsistencyLevelPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *DefaultConsistencyLevel {
		if v == nil {
			return nil
		}
		return &v.DefaultConsistencyLevel
	}).(DefaultConsistencyLevelPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyPtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyPtrOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.Float64PtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponse struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *float64 `pulumi:"maxStalenessPrefix"`
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutput() ConsistencyPolicyResponseOutput {
	return o
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutputWithContext(ctx context.Context) ConsistencyPolicyResponseOutput {
	return o
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponseOutput) DefaultConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) string { return v.DefaultConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *float64 { return v.MaxStalenessPrefix }).(pulumi.Float64PtrOutput)
}

type ConsistencyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) Elem() ConsistencyPolicyResponseOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) ConsistencyPolicyResponse {
		if v != nil {
			return *v
		}
		var ret ConsistencyPolicyResponse
		return ret
	}).(ConsistencyPolicyResponseOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponsePtrOutput) DefaultConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.Float64PtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKey struct {
	// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ContainerPartitionKey
func (val *ContainerPartitionKey) Defaults() *ContainerPartitionKey {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Kind) {
		kind_ := "Hash"
		tmp.Kind = &kind_
	}
	return &tmp
}

// ContainerPartitionKeyInput is an input type that accepts ContainerPartitionKeyArgs and ContainerPartitionKeyOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyInput` via:
//
//	ContainerPartitionKeyArgs{...}
type ContainerPartitionKeyInput interface {
	pulumi.Input

	ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput
	ToContainerPartitionKeyOutputWithContext(context.Context) ContainerPartitionKeyOutput
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyArgs struct {
	// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version pulumi.IntPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ContainerPartitionKeyArgs
func (val *ContainerPartitionKeyArgs) Defaults() *ContainerPartitionKeyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Kind) {
		tmp.Kind = pulumi.StringPtr("Hash")
	}
	return &tmp
}
func (ContainerPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKey)(nil)).Elem()
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput {
	return i.ToContainerPartitionKeyOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutputWithContext(ctx context.Context) ContainerPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput)
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput).ToContainerPartitionKeyPtrOutputWithContext(ctx)
}

// ContainerPartitionKeyPtrInput is an input type that accepts ContainerPartitionKeyArgs, ContainerPartitionKeyPtr and ContainerPartitionKeyPtrOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyPtrInput` via:
//
//	        ContainerPartitionKeyArgs{...}
//
//	or:
//
//	        nil
type ContainerPartitionKeyPtrInput interface {
	pulumi.Input

	ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput
	ToContainerPartitionKeyPtrOutputWithContext(context.Context) ContainerPartitionKeyPtrOutput
}

type containerPartitionKeyPtrType ContainerPartitionKeyArgs

func ContainerPartitionKeyPtr(v *ContainerPartitionKeyArgs) ContainerPartitionKeyPtrInput {
	return (*containerPartitionKeyPtrType)(v)
}

func (*containerPartitionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKey)(nil)).Elem()
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKey)(nil)).Elem()
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput {
	return o
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyOutputWithContext(ctx context.Context) ContainerPartitionKeyOutput {
	return o
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return o.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerPartitionKey) *ContainerPartitionKey {
		return &v
	}).(ContainerPartitionKeyPtrOutput)
}

// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
func (o ContainerPartitionKeyOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKey) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKey) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyPtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKey)(nil)).Elem()
}

func (o ContainerPartitionKeyPtrOutput) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return o
}

func (o ContainerPartitionKeyPtrOutput) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return o
}

func (o ContainerPartitionKeyPtrOutput) Elem() ContainerPartitionKeyOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) ContainerPartitionKey {
		if v != nil {
			return *v
		}
		var ret ContainerPartitionKey
		return ret
	}).(ContainerPartitionKeyOutput)
}

// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
func (o ContainerPartitionKeyPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponse struct {
	// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates if the container is using a system generated partition key
	SystemKey bool `pulumi:"systemKey"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ContainerPartitionKeyResponse
func (val *ContainerPartitionKeyResponse) Defaults() *ContainerPartitionKeyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Kind) {
		kind_ := "Hash"
		tmp.Kind = &kind_
	}
	return &tmp
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutput() ContainerPartitionKeyResponseOutput {
	return o
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyResponseOutput {
	return o
}

// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
func (o ContainerPartitionKeyResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates if the container is using a system generated partition key
func (o ContainerPartitionKeyResponseOutput) SystemKey() pulumi.BoolOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) bool { return v.SystemKey }).(pulumi.BoolOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) Elem() ContainerPartitionKeyResponseOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) ContainerPartitionKeyResponse {
		if v != nil {
			return *v
		}
		var ret ContainerPartitionKeyResponse
		return ret
	}).(ContainerPartitionKeyResponseOutput)
}

// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
func (o ContainerPartitionKeyResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponsePtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates if the container is using a system generated partition key
func (o ContainerPartitionKeyResponsePtrOutput) SystemKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.SystemKey
	}).(pulumi.BoolPtrOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// The object representing continuous mode backup policy.
type ContinuousModeBackupPolicy struct {
	// The object representing the state of the migration between the backup policies.
	MigrationState *BackupPolicyMigrationState `pulumi:"migrationState"`
	// Describes the mode of backups.
	// Expected value is 'Continuous'.
	Type string `pulumi:"type"`
}

// The object representing continuous mode backup policy.
type ContinuousModeBackupPolicyResponse struct {
	// The object representing the state of the migration between the backup policies.
	MigrationState *BackupPolicyMigrationStateResponse `pulumi:"migrationState"`
	// Describes the mode of backups.
	// Expected value is 'Continuous'.
	Type string `pulumi:"type"`
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicy struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders *string `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins string `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders *string `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds *float64 `pulumi:"maxAgeInSeconds"`
}

// CorsPolicyInput is an input type that accepts CorsPolicyArgs and CorsPolicyOutput values.
// You can construct a concrete instance of `CorsPolicyInput` via:
//
//	CorsPolicyArgs{...}
type CorsPolicyInput interface {
	pulumi.Input

	ToCorsPolicyOutput() CorsPolicyOutput
	ToCorsPolicyOutputWithContext(context.Context) CorsPolicyOutput
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyArgs struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders pulumi.StringPtrInput `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods pulumi.StringPtrInput `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins pulumi.StringInput `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders pulumi.StringPtrInput `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds pulumi.Float64PtrInput `pulumi:"maxAgeInSeconds"`
}

func (CorsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsPolicy)(nil)).Elem()
}

func (i CorsPolicyArgs) ToCorsPolicyOutput() CorsPolicyOutput {
	return i.ToCorsPolicyOutputWithContext(context.Background())
}

func (i CorsPolicyArgs) ToCorsPolicyOutputWithContext(ctx context.Context) CorsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsPolicyOutput)
}

// CorsPolicyArrayInput is an input type that accepts CorsPolicyArray and CorsPolicyArrayOutput values.
// You can construct a concrete instance of `CorsPolicyArrayInput` via:
//
//	CorsPolicyArray{ CorsPolicyArgs{...} }
type CorsPolicyArrayInput interface {
	pulumi.Input

	ToCorsPolicyArrayOutput() CorsPolicyArrayOutput
	ToCorsPolicyArrayOutputWithContext(context.Context) CorsPolicyArrayOutput
}

type CorsPolicyArray []CorsPolicyInput

func (CorsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsPolicy)(nil)).Elem()
}

func (i CorsPolicyArray) ToCorsPolicyArrayOutput() CorsPolicyArrayOutput {
	return i.ToCorsPolicyArrayOutputWithContext(context.Background())
}

func (i CorsPolicyArray) ToCorsPolicyArrayOutputWithContext(ctx context.Context) CorsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsPolicyArrayOutput)
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyOutput struct{ *pulumi.OutputState }

func (CorsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsPolicy)(nil)).Elem()
}

func (o CorsPolicyOutput) ToCorsPolicyOutput() CorsPolicyOutput {
	return o
}

func (o CorsPolicyOutput) ToCorsPolicyOutputWithContext(ctx context.Context) CorsPolicyOutput {
	return o
}

// The request headers that the origin domain may specify on the CORS request.
func (o CorsPolicyOutput) AllowedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicy) *string { return v.AllowedHeaders }).(pulumi.StringPtrOutput)
}

// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
func (o CorsPolicyOutput) AllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicy) *string { return v.AllowedMethods }).(pulumi.StringPtrOutput)
}

// The origin domains that are permitted to make a request against the service via CORS.
func (o CorsPolicyOutput) AllowedOrigins() pulumi.StringOutput {
	return o.ApplyT(func(v CorsPolicy) string { return v.AllowedOrigins }).(pulumi.StringOutput)
}

// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
func (o CorsPolicyOutput) ExposedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicy) *string { return v.ExposedHeaders }).(pulumi.StringPtrOutput)
}

// The maximum amount time that a browser should cache the preflight OPTIONS request.
func (o CorsPolicyOutput) MaxAgeInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CorsPolicy) *float64 { return v.MaxAgeInSeconds }).(pulumi.Float64PtrOutput)
}

type CorsPolicyArrayOutput struct{ *pulumi.OutputState }

func (CorsPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsPolicy)(nil)).Elem()
}

func (o CorsPolicyArrayOutput) ToCorsPolicyArrayOutput() CorsPolicyArrayOutput {
	return o
}

func (o CorsPolicyArrayOutput) ToCorsPolicyArrayOutputWithContext(ctx context.Context) CorsPolicyArrayOutput {
	return o
}

func (o CorsPolicyArrayOutput) Index(i pulumi.IntInput) CorsPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsPolicy {
		return vs[0].([]CorsPolicy)[vs[1].(int)]
	}).(CorsPolicyOutput)
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyResponse struct {
	// The request headers that the origin domain may specify on the CORS request.
	AllowedHeaders *string `pulumi:"allowedHeaders"`
	// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
	AllowedMethods *string `pulumi:"allowedMethods"`
	// The origin domains that are permitted to make a request against the service via CORS.
	AllowedOrigins string `pulumi:"allowedOrigins"`
	// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
	ExposedHeaders *string `pulumi:"exposedHeaders"`
	// The maximum amount time that a browser should cache the preflight OPTIONS request.
	MaxAgeInSeconds *float64 `pulumi:"maxAgeInSeconds"`
}

// The CORS policy for the Cosmos DB database account.
type CorsPolicyResponseOutput struct{ *pulumi.OutputState }

func (CorsPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsPolicyResponse)(nil)).Elem()
}

func (o CorsPolicyResponseOutput) ToCorsPolicyResponseOutput() CorsPolicyResponseOutput {
	return o
}

func (o CorsPolicyResponseOutput) ToCorsPolicyResponseOutputWithContext(ctx context.Context) CorsPolicyResponseOutput {
	return o
}

// The request headers that the origin domain may specify on the CORS request.
func (o CorsPolicyResponseOutput) AllowedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.AllowedHeaders }).(pulumi.StringPtrOutput)
}

// The methods (HTTP request verbs) that the origin domain may use for a CORS request.
func (o CorsPolicyResponseOutput) AllowedMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.AllowedMethods }).(pulumi.StringPtrOutput)
}

// The origin domains that are permitted to make a request against the service via CORS.
func (o CorsPolicyResponseOutput) AllowedOrigins() pulumi.StringOutput {
	return o.ApplyT(func(v CorsPolicyResponse) string { return v.AllowedOrigins }).(pulumi.StringOutput)
}

// The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
func (o CorsPolicyResponseOutput) ExposedHeaders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *string { return v.ExposedHeaders }).(pulumi.StringPtrOutput)
}

// The maximum amount time that a browser should cache the preflight OPTIONS request.
func (o CorsPolicyResponseOutput) MaxAgeInSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CorsPolicyResponse) *float64 { return v.MaxAgeInSeconds }).(pulumi.Float64PtrOutput)
}

type CorsPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (CorsPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CorsPolicyResponse)(nil)).Elem()
}

func (o CorsPolicyResponseArrayOutput) ToCorsPolicyResponseArrayOutput() CorsPolicyResponseArrayOutput {
	return o
}

func (o CorsPolicyResponseArrayOutput) ToCorsPolicyResponseArrayOutputWithContext(ctx context.Context) CorsPolicyResponseArrayOutput {
	return o
}

func (o CorsPolicyResponseArrayOutput) Index(i pulumi.IntInput) CorsPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CorsPolicyResponse {
		return vs[0].([]CorsPolicyResponse)[vs[1].(int)]
	}).(CorsPolicyResponseOutput)
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettings `pulumi:"autoscaleSettings"`
	// Request Units per second. For example, "throughput": 10000.
	Throughput *int `pulumi:"throughput"`
}

// CreateUpdateOptionsInput is an input type that accepts CreateUpdateOptionsArgs and CreateUpdateOptionsOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsInput` via:
//
//	CreateUpdateOptionsArgs{...}
type CreateUpdateOptionsInput interface {
	pulumi.Input

	ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput
	ToCreateUpdateOptionsOutputWithContext(context.Context) CreateUpdateOptionsOutput
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptionsArgs struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings AutoscaleSettingsPtrInput `pulumi:"autoscaleSettings"`
	// Request Units per second. For example, "throughput": 10000.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
}

func (CreateUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateUpdateOptions)(nil)).Elem()
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput {
	return i.ToCreateUpdateOptionsOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutputWithContext(ctx context.Context) CreateUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput)
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput).ToCreateUpdateOptionsPtrOutputWithContext(ctx)
}

// CreateUpdateOptionsPtrInput is an input type that accepts CreateUpdateOptionsArgs, CreateUpdateOptionsPtr and CreateUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsPtrInput` via:
//
//	        CreateUpdateOptionsArgs{...}
//
//	or:
//
//	        nil
type CreateUpdateOptionsPtrInput interface {
	pulumi.Input

	ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput
	ToCreateUpdateOptionsPtrOutputWithContext(context.Context) CreateUpdateOptionsPtrOutput
}

type createUpdateOptionsPtrType CreateUpdateOptionsArgs

func CreateUpdateOptionsPtr(v *CreateUpdateOptionsArgs) CreateUpdateOptionsPtrInput {
	return (*createUpdateOptionsPtrType)(v)
}

func (*createUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateUpdateOptions)(nil)).Elem()
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsPtrOutput)
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptionsOutput struct{ *pulumi.OutputState }

func (CreateUpdateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateUpdateOptions)(nil)).Elem()
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput {
	return o
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsOutputWithContext(ctx context.Context) CreateUpdateOptionsOutput {
	return o
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return o.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CreateUpdateOptions) *CreateUpdateOptions {
		return &v
	}).(CreateUpdateOptionsPtrOutput)
}

// Specifies the Autoscale settings.
func (o CreateUpdateOptionsOutput) AutoscaleSettings() AutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v CreateUpdateOptions) *AutoscaleSettings { return v.AutoscaleSettings }).(AutoscaleSettingsPtrOutput)
}

// Request Units per second. For example, "throughput": 10000.
func (o CreateUpdateOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CreateUpdateOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type CreateUpdateOptionsPtrOutput struct{ *pulumi.OutputState }

func (CreateUpdateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateUpdateOptions)(nil)).Elem()
}

func (o CreateUpdateOptionsPtrOutput) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return o
}

func (o CreateUpdateOptionsPtrOutput) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return o
}

func (o CreateUpdateOptionsPtrOutput) Elem() CreateUpdateOptionsOutput {
	return o.ApplyT(func(v *CreateUpdateOptions) CreateUpdateOptions {
		if v != nil {
			return *v
		}
		var ret CreateUpdateOptions
		return ret
	}).(CreateUpdateOptionsOutput)
}

// Specifies the Autoscale settings.
func (o CreateUpdateOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v *CreateUpdateOptions) *AutoscaleSettings {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsPtrOutput)
}

// Request Units per second. For example, "throughput": 10000.
func (o CreateUpdateOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CreateUpdateOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Properties of a managed Cassandra data center.
type DataCenterResourceProperties struct {
	// Ldap authentication method properties. This feature is in preview.
	AuthenticationMethodLdapProperties *AuthenticationMethodLdapProperties `pulumi:"authenticationMethodLdapProperties"`
	// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
	AvailabilityZone *bool `pulumi:"availabilityZone"`
	// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
	BackupStorageCustomerKeyUri *string `pulumi:"backupStorageCustomerKeyUri"`
	// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
	Base64EncodedCassandraYamlFragment *string `pulumi:"base64EncodedCassandraYamlFragment"`
	// The region this data center should be created in.
	DataCenterLocation *string `pulumi:"dataCenterLocation"`
	// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
	DelegatedSubnetId *string `pulumi:"delegatedSubnetId"`
	// Number of disk used for data centers. Default value is 4.
	DiskCapacity *int `pulumi:"diskCapacity"`
	// Disk SKU used for data centers. Default value is P30.
	DiskSku *string `pulumi:"diskSku"`
	// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
	ManagedDiskCustomerKeyUri *string `pulumi:"managedDiskCustomerKeyUri"`
	// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// The status of the resource at the time the operation was called.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
	Sku *string `pulumi:"sku"`
}

// DataCenterResourcePropertiesInput is an input type that accepts DataCenterResourcePropertiesArgs and DataCenterResourcePropertiesOutput values.
// You can construct a concrete instance of `DataCenterResourcePropertiesInput` via:
//
//	DataCenterResourcePropertiesArgs{...}
type DataCenterResourcePropertiesInput interface {
	pulumi.Input

	ToDataCenterResourcePropertiesOutput() DataCenterResourcePropertiesOutput
	ToDataCenterResourcePropertiesOutputWithContext(context.Context) DataCenterResourcePropertiesOutput
}

// Properties of a managed Cassandra data center.
type DataCenterResourcePropertiesArgs struct {
	// Ldap authentication method properties. This feature is in preview.
	AuthenticationMethodLdapProperties AuthenticationMethodLdapPropertiesPtrInput `pulumi:"authenticationMethodLdapProperties"`
	// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
	AvailabilityZone pulumi.BoolPtrInput `pulumi:"availabilityZone"`
	// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
	BackupStorageCustomerKeyUri pulumi.StringPtrInput `pulumi:"backupStorageCustomerKeyUri"`
	// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
	Base64EncodedCassandraYamlFragment pulumi.StringPtrInput `pulumi:"base64EncodedCassandraYamlFragment"`
	// The region this data center should be created in.
	DataCenterLocation pulumi.StringPtrInput `pulumi:"dataCenterLocation"`
	// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
	DelegatedSubnetId pulumi.StringPtrInput `pulumi:"delegatedSubnetId"`
	// Number of disk used for data centers. Default value is 4.
	DiskCapacity pulumi.IntPtrInput `pulumi:"diskCapacity"`
	// Disk SKU used for data centers. Default value is P30.
	DiskSku pulumi.StringPtrInput `pulumi:"diskSku"`
	// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
	ManagedDiskCustomerKeyUri pulumi.StringPtrInput `pulumi:"managedDiskCustomerKeyUri"`
	// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The status of the resource at the time the operation was called.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (DataCenterResourcePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCenterResourceProperties)(nil)).Elem()
}

func (i DataCenterResourcePropertiesArgs) ToDataCenterResourcePropertiesOutput() DataCenterResourcePropertiesOutput {
	return i.ToDataCenterResourcePropertiesOutputWithContext(context.Background())
}

func (i DataCenterResourcePropertiesArgs) ToDataCenterResourcePropertiesOutputWithContext(ctx context.Context) DataCenterResourcePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCenterResourcePropertiesOutput)
}

func (i DataCenterResourcePropertiesArgs) ToDataCenterResourcePropertiesPtrOutput() DataCenterResourcePropertiesPtrOutput {
	return i.ToDataCenterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i DataCenterResourcePropertiesArgs) ToDataCenterResourcePropertiesPtrOutputWithContext(ctx context.Context) DataCenterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCenterResourcePropertiesOutput).ToDataCenterResourcePropertiesPtrOutputWithContext(ctx)
}

// DataCenterResourcePropertiesPtrInput is an input type that accepts DataCenterResourcePropertiesArgs, DataCenterResourcePropertiesPtr and DataCenterResourcePropertiesPtrOutput values.
// You can construct a concrete instance of `DataCenterResourcePropertiesPtrInput` via:
//
//	        DataCenterResourcePropertiesArgs{...}
//
//	or:
//
//	        nil
type DataCenterResourcePropertiesPtrInput interface {
	pulumi.Input

	ToDataCenterResourcePropertiesPtrOutput() DataCenterResourcePropertiesPtrOutput
	ToDataCenterResourcePropertiesPtrOutputWithContext(context.Context) DataCenterResourcePropertiesPtrOutput
}

type dataCenterResourcePropertiesPtrType DataCenterResourcePropertiesArgs

func DataCenterResourcePropertiesPtr(v *DataCenterResourcePropertiesArgs) DataCenterResourcePropertiesPtrInput {
	return (*dataCenterResourcePropertiesPtrType)(v)
}

func (*dataCenterResourcePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCenterResourceProperties)(nil)).Elem()
}

func (i *dataCenterResourcePropertiesPtrType) ToDataCenterResourcePropertiesPtrOutput() DataCenterResourcePropertiesPtrOutput {
	return i.ToDataCenterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (i *dataCenterResourcePropertiesPtrType) ToDataCenterResourcePropertiesPtrOutputWithContext(ctx context.Context) DataCenterResourcePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCenterResourcePropertiesPtrOutput)
}

// Properties of a managed Cassandra data center.
type DataCenterResourcePropertiesOutput struct{ *pulumi.OutputState }

func (DataCenterResourcePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCenterResourceProperties)(nil)).Elem()
}

func (o DataCenterResourcePropertiesOutput) ToDataCenterResourcePropertiesOutput() DataCenterResourcePropertiesOutput {
	return o
}

func (o DataCenterResourcePropertiesOutput) ToDataCenterResourcePropertiesOutputWithContext(ctx context.Context) DataCenterResourcePropertiesOutput {
	return o
}

func (o DataCenterResourcePropertiesOutput) ToDataCenterResourcePropertiesPtrOutput() DataCenterResourcePropertiesPtrOutput {
	return o.ToDataCenterResourcePropertiesPtrOutputWithContext(context.Background())
}

func (o DataCenterResourcePropertiesOutput) ToDataCenterResourcePropertiesPtrOutputWithContext(ctx context.Context) DataCenterResourcePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataCenterResourceProperties) *DataCenterResourceProperties {
		return &v
	}).(DataCenterResourcePropertiesPtrOutput)
}

// Ldap authentication method properties. This feature is in preview.
func (o DataCenterResourcePropertiesOutput) AuthenticationMethodLdapProperties() AuthenticationMethodLdapPropertiesPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *AuthenticationMethodLdapProperties {
		return v.AuthenticationMethodLdapProperties
	}).(AuthenticationMethodLdapPropertiesPtrOutput)
}

// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
func (o DataCenterResourcePropertiesOutput) AvailabilityZone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *bool { return v.AvailabilityZone }).(pulumi.BoolPtrOutput)
}

// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
func (o DataCenterResourcePropertiesOutput) BackupStorageCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.BackupStorageCustomerKeyUri }).(pulumi.StringPtrOutput)
}

// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
func (o DataCenterResourcePropertiesOutput) Base64EncodedCassandraYamlFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.Base64EncodedCassandraYamlFragment }).(pulumi.StringPtrOutput)
}

// The region this data center should be created in.
func (o DataCenterResourcePropertiesOutput) DataCenterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.DataCenterLocation }).(pulumi.StringPtrOutput)
}

// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
func (o DataCenterResourcePropertiesOutput) DelegatedSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.DelegatedSubnetId }).(pulumi.StringPtrOutput)
}

// Number of disk used for data centers. Default value is 4.
func (o DataCenterResourcePropertiesOutput) DiskCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *int { return v.DiskCapacity }).(pulumi.IntPtrOutput)
}

// Disk SKU used for data centers. Default value is P30.
func (o DataCenterResourcePropertiesOutput) DiskSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.DiskSku }).(pulumi.StringPtrOutput)
}

// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
func (o DataCenterResourcePropertiesOutput) ManagedDiskCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.ManagedDiskCustomerKeyUri }).(pulumi.StringPtrOutput)
}

// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
func (o DataCenterResourcePropertiesOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The status of the resource at the time the operation was called.
func (o DataCenterResourcePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
func (o DataCenterResourcePropertiesOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceProperties) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

type DataCenterResourcePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DataCenterResourcePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCenterResourceProperties)(nil)).Elem()
}

func (o DataCenterResourcePropertiesPtrOutput) ToDataCenterResourcePropertiesPtrOutput() DataCenterResourcePropertiesPtrOutput {
	return o
}

func (o DataCenterResourcePropertiesPtrOutput) ToDataCenterResourcePropertiesPtrOutputWithContext(ctx context.Context) DataCenterResourcePropertiesPtrOutput {
	return o
}

func (o DataCenterResourcePropertiesPtrOutput) Elem() DataCenterResourcePropertiesOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) DataCenterResourceProperties {
		if v != nil {
			return *v
		}
		var ret DataCenterResourceProperties
		return ret
	}).(DataCenterResourcePropertiesOutput)
}

// Ldap authentication method properties. This feature is in preview.
func (o DataCenterResourcePropertiesPtrOutput) AuthenticationMethodLdapProperties() AuthenticationMethodLdapPropertiesPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *AuthenticationMethodLdapProperties {
		if v == nil {
			return nil
		}
		return v.AuthenticationMethodLdapProperties
	}).(AuthenticationMethodLdapPropertiesPtrOutput)
}

// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
func (o DataCenterResourcePropertiesPtrOutput) AvailabilityZone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *bool {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.BoolPtrOutput)
}

// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
func (o DataCenterResourcePropertiesPtrOutput) BackupStorageCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.BackupStorageCustomerKeyUri
	}).(pulumi.StringPtrOutput)
}

// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
func (o DataCenterResourcePropertiesPtrOutput) Base64EncodedCassandraYamlFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Base64EncodedCassandraYamlFragment
	}).(pulumi.StringPtrOutput)
}

// The region this data center should be created in.
func (o DataCenterResourcePropertiesPtrOutput) DataCenterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DataCenterLocation
	}).(pulumi.StringPtrOutput)
}

// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
func (o DataCenterResourcePropertiesPtrOutput) DelegatedSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DelegatedSubnetId
	}).(pulumi.StringPtrOutput)
}

// Number of disk used for data centers. Default value is 4.
func (o DataCenterResourcePropertiesPtrOutput) DiskCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *int {
		if v == nil {
			return nil
		}
		return v.DiskCapacity
	}).(pulumi.IntPtrOutput)
}

// Disk SKU used for data centers. Default value is P30.
func (o DataCenterResourcePropertiesPtrOutput) DiskSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DiskSku
	}).(pulumi.StringPtrOutput)
}

// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
func (o DataCenterResourcePropertiesPtrOutput) ManagedDiskCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ManagedDiskCustomerKeyUri
	}).(pulumi.StringPtrOutput)
}

// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
func (o DataCenterResourcePropertiesPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// The status of the resource at the time the operation was called.
func (o DataCenterResourcePropertiesPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
func (o DataCenterResourcePropertiesPtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCenterResourceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Properties of a managed Cassandra data center.
type DataCenterResourceResponseProperties struct {
	// Ldap authentication method properties. This feature is in preview.
	AuthenticationMethodLdapProperties *AuthenticationMethodLdapPropertiesResponse `pulumi:"authenticationMethodLdapProperties"`
	// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
	AvailabilityZone *bool `pulumi:"availabilityZone"`
	// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
	BackupStorageCustomerKeyUri *string `pulumi:"backupStorageCustomerKeyUri"`
	// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
	Base64EncodedCassandraYamlFragment *string `pulumi:"base64EncodedCassandraYamlFragment"`
	// The region this data center should be created in.
	DataCenterLocation *string `pulumi:"dataCenterLocation"`
	// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
	DelegatedSubnetId *string `pulumi:"delegatedSubnetId"`
	// Number of disk used for data centers. Default value is 4.
	DiskCapacity *int `pulumi:"diskCapacity"`
	// Disk SKU used for data centers. Default value is P30.
	DiskSku *string `pulumi:"diskSku"`
	// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
	ManagedDiskCustomerKeyUri *string `pulumi:"managedDiskCustomerKeyUri"`
	// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
	NodeCount *int `pulumi:"nodeCount"`
	// The status of the resource at the time the operation was called.
	ProvisioningState *string `pulumi:"provisioningState"`
	// IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.
	SeedNodes []SeedNodeResponse `pulumi:"seedNodes"`
	// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
	Sku *string `pulumi:"sku"`
}

// Properties of a managed Cassandra data center.
type DataCenterResourceResponsePropertiesOutput struct{ *pulumi.OutputState }

func (DataCenterResourceResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataCenterResourceResponseProperties)(nil)).Elem()
}

func (o DataCenterResourceResponsePropertiesOutput) ToDataCenterResourceResponsePropertiesOutput() DataCenterResourceResponsePropertiesOutput {
	return o
}

func (o DataCenterResourceResponsePropertiesOutput) ToDataCenterResourceResponsePropertiesOutputWithContext(ctx context.Context) DataCenterResourceResponsePropertiesOutput {
	return o
}

// Ldap authentication method properties. This feature is in preview.
func (o DataCenterResourceResponsePropertiesOutput) AuthenticationMethodLdapProperties() AuthenticationMethodLdapPropertiesResponsePtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *AuthenticationMethodLdapPropertiesResponse {
		return v.AuthenticationMethodLdapProperties
	}).(AuthenticationMethodLdapPropertiesResponsePtrOutput)
}

// If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
func (o DataCenterResourceResponsePropertiesOutput) AvailabilityZone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *bool { return v.AvailabilityZone }).(pulumi.BoolPtrOutput)
}

// Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
func (o DataCenterResourceResponsePropertiesOutput) BackupStorageCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.BackupStorageCustomerKeyUri }).(pulumi.StringPtrOutput)
}

// A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
func (o DataCenterResourceResponsePropertiesOutput) Base64EncodedCassandraYamlFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.Base64EncodedCassandraYamlFragment }).(pulumi.StringPtrOutput)
}

// The region this data center should be created in.
func (o DataCenterResourceResponsePropertiesOutput) DataCenterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.DataCenterLocation }).(pulumi.StringPtrOutput)
}

// Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
func (o DataCenterResourceResponsePropertiesOutput) DelegatedSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.DelegatedSubnetId }).(pulumi.StringPtrOutput)
}

// Number of disk used for data centers. Default value is 4.
func (o DataCenterResourceResponsePropertiesOutput) DiskCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *int { return v.DiskCapacity }).(pulumi.IntPtrOutput)
}

// Disk SKU used for data centers. Default value is P30.
func (o DataCenterResourceResponsePropertiesOutput) DiskSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.DiskSku }).(pulumi.StringPtrOutput)
}

// Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
func (o DataCenterResourceResponsePropertiesOutput) ManagedDiskCustomerKeyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.ManagedDiskCustomerKeyUri }).(pulumi.StringPtrOutput)
}

// The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
func (o DataCenterResourceResponsePropertiesOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The status of the resource at the time the operation was called.
func (o DataCenterResourceResponsePropertiesOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.
func (o DataCenterResourceResponsePropertiesOutput) SeedNodes() SeedNodeResponseArrayOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) []SeedNodeResponse { return v.SeedNodes }).(SeedNodeResponseArrayOutput)
}

// Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
func (o DataCenterResourceResponsePropertiesOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataCenterResourceResponseProperties) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Resource for a regional service location.
type DataTransferRegionalServiceResourceResponse struct {
	// The location name.
	Location string `pulumi:"location"`
	// The regional service name.
	Name string `pulumi:"name"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Properties for DataTransferServiceResource.
type DataTransferServiceResourcePropertiesResponse struct {
	// Time of the last state change (ISO-8601 format).
	CreationTime string `pulumi:"creationTime"`
	// Instance count for the service.
	InstanceCount *int `pulumi:"instanceCount"`
	// Instance type for the service.
	InstanceSize *string `pulumi:"instanceSize"`
	// An array that contains all of the locations for the service.
	Locations []DataTransferRegionalServiceResourceResponse `pulumi:"locations"`
	// ServiceType for the service.
	// Expected value is 'DataTransfer'.
	ServiceType string `pulumi:"serviceType"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringResponse struct {
	// Value of the connection string
	ConnectionString string `pulumi:"connectionString"`
	// Description of the connection string
	Description string `pulumi:"description"`
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringResponseOutput struct{ *pulumi.OutputState }

func (DatabaseAccountConnectionStringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountConnectionStringResponse)(nil)).Elem()
}

func (o DatabaseAccountConnectionStringResponseOutput) ToDatabaseAccountConnectionStringResponseOutput() DatabaseAccountConnectionStringResponseOutput {
	return o
}

func (o DatabaseAccountConnectionStringResponseOutput) ToDatabaseAccountConnectionStringResponseOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringResponseOutput {
	return o
}

// Value of the connection string
func (o DatabaseAccountConnectionStringResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAccountConnectionStringResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Description of the connection string
func (o DatabaseAccountConnectionStringResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAccountConnectionStringResponse) string { return v.Description }).(pulumi.StringOutput)
}

type DatabaseAccountConnectionStringResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAccountConnectionStringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAccountConnectionStringResponse)(nil)).Elem()
}

func (o DatabaseAccountConnectionStringResponseArrayOutput) ToDatabaseAccountConnectionStringResponseArrayOutput() DatabaseAccountConnectionStringResponseArrayOutput {
	return o
}

func (o DatabaseAccountConnectionStringResponseArrayOutput) ToDatabaseAccountConnectionStringResponseArrayOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringResponseArrayOutput {
	return o
}

func (o DatabaseAccountConnectionStringResponseArrayOutput) Index(i pulumi.IntInput) DatabaseAccountConnectionStringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAccountConnectionStringResponse {
		return vs[0].([]DatabaseAccountConnectionStringResponse)[vs[1].(int)]
	}).(DatabaseAccountConnectionStringResponseOutput)
}

// Specific Databases to restore.
type DatabaseRestoreResource struct {
	// The names of the collections available for restore.
	CollectionNames []string `pulumi:"collectionNames"`
	// The name of the database available for restore.
	DatabaseName *string `pulumi:"databaseName"`
}

// DatabaseRestoreResourceInput is an input type that accepts DatabaseRestoreResourceArgs and DatabaseRestoreResourceOutput values.
// You can construct a concrete instance of `DatabaseRestoreResourceInput` via:
//
//	DatabaseRestoreResourceArgs{...}
type DatabaseRestoreResourceInput interface {
	pulumi.Input

	ToDatabaseRestoreResourceOutput() DatabaseRestoreResourceOutput
	ToDatabaseRestoreResourceOutputWithContext(context.Context) DatabaseRestoreResourceOutput
}

// Specific Databases to restore.
type DatabaseRestoreResourceArgs struct {
	// The names of the collections available for restore.
	CollectionNames pulumi.StringArrayInput `pulumi:"collectionNames"`
	// The name of the database available for restore.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
}

func (DatabaseRestoreResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRestoreResource)(nil)).Elem()
}

func (i DatabaseRestoreResourceArgs) ToDatabaseRestoreResourceOutput() DatabaseRestoreResourceOutput {
	return i.ToDatabaseRestoreResourceOutputWithContext(context.Background())
}

func (i DatabaseRestoreResourceArgs) ToDatabaseRestoreResourceOutputWithContext(ctx context.Context) DatabaseRestoreResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRestoreResourceOutput)
}

// DatabaseRestoreResourceArrayInput is an input type that accepts DatabaseRestoreResourceArray and DatabaseRestoreResourceArrayOutput values.
// You can construct a concrete instance of `DatabaseRestoreResourceArrayInput` via:
//
//	DatabaseRestoreResourceArray{ DatabaseRestoreResourceArgs{...} }
type DatabaseRestoreResourceArrayInput interface {
	pulumi.Input

	ToDatabaseRestoreResourceArrayOutput() DatabaseRestoreResourceArrayOutput
	ToDatabaseRestoreResourceArrayOutputWithContext(context.Context) DatabaseRestoreResourceArrayOutput
}

type DatabaseRestoreResourceArray []DatabaseRestoreResourceInput

func (DatabaseRestoreResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRestoreResource)(nil)).Elem()
}

func (i DatabaseRestoreResourceArray) ToDatabaseRestoreResourceArrayOutput() DatabaseRestoreResourceArrayOutput {
	return i.ToDatabaseRestoreResourceArrayOutputWithContext(context.Background())
}

func (i DatabaseRestoreResourceArray) ToDatabaseRestoreResourceArrayOutputWithContext(ctx context.Context) DatabaseRestoreResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRestoreResourceArrayOutput)
}

// Specific Databases to restore.
type DatabaseRestoreResourceOutput struct{ *pulumi.OutputState }

func (DatabaseRestoreResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRestoreResource)(nil)).Elem()
}

func (o DatabaseRestoreResourceOutput) ToDatabaseRestoreResourceOutput() DatabaseRestoreResourceOutput {
	return o
}

func (o DatabaseRestoreResourceOutput) ToDatabaseRestoreResourceOutputWithContext(ctx context.Context) DatabaseRestoreResourceOutput {
	return o
}

// The names of the collections available for restore.
func (o DatabaseRestoreResourceOutput) CollectionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseRestoreResource) []string { return v.CollectionNames }).(pulumi.StringArrayOutput)
}

// The name of the database available for restore.
func (o DatabaseRestoreResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRestoreResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type DatabaseRestoreResourceArrayOutput struct{ *pulumi.OutputState }

func (DatabaseRestoreResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRestoreResource)(nil)).Elem()
}

func (o DatabaseRestoreResourceArrayOutput) ToDatabaseRestoreResourceArrayOutput() DatabaseRestoreResourceArrayOutput {
	return o
}

func (o DatabaseRestoreResourceArrayOutput) ToDatabaseRestoreResourceArrayOutputWithContext(ctx context.Context) DatabaseRestoreResourceArrayOutput {
	return o
}

func (o DatabaseRestoreResourceArrayOutput) Index(i pulumi.IntInput) DatabaseRestoreResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseRestoreResource {
		return vs[0].([]DatabaseRestoreResource)[vs[1].(int)]
	}).(DatabaseRestoreResourceOutput)
}

// Specific Databases to restore.
type DatabaseRestoreResourceResponse struct {
	// The names of the collections available for restore.
	CollectionNames []string `pulumi:"collectionNames"`
	// The name of the database available for restore.
	DatabaseName *string `pulumi:"databaseName"`
}

// Specific Databases to restore.
type DatabaseRestoreResourceResponseOutput struct{ *pulumi.OutputState }

func (DatabaseRestoreResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRestoreResourceResponse)(nil)).Elem()
}

func (o DatabaseRestoreResourceResponseOutput) ToDatabaseRestoreResourceResponseOutput() DatabaseRestoreResourceResponseOutput {
	return o
}

func (o DatabaseRestoreResourceResponseOutput) ToDatabaseRestoreResourceResponseOutputWithContext(ctx context.Context) DatabaseRestoreResourceResponseOutput {
	return o
}

// The names of the collections available for restore.
func (o DatabaseRestoreResourceResponseOutput) CollectionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseRestoreResourceResponse) []string { return v.CollectionNames }).(pulumi.StringArrayOutput)
}

// The name of the database available for restore.
func (o DatabaseRestoreResourceResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRestoreResourceResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

type DatabaseRestoreResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseRestoreResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRestoreResourceResponse)(nil)).Elem()
}

func (o DatabaseRestoreResourceResponseArrayOutput) ToDatabaseRestoreResourceResponseArrayOutput() DatabaseRestoreResourceResponseArrayOutput {
	return o
}

func (o DatabaseRestoreResourceResponseArrayOutput) ToDatabaseRestoreResourceResponseArrayOutputWithContext(ctx context.Context) DatabaseRestoreResourceResponseArrayOutput {
	return o
}

func (o DatabaseRestoreResourceResponseArrayOutput) Index(i pulumi.IntInput) DatabaseRestoreResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseRestoreResourceResponse {
		return vs[0].([]DatabaseRestoreResourceResponse)[vs[1].(int)]
	}).(DatabaseRestoreResourceResponseOutput)
}

// Indicates what diagnostic log settings are to be enabled.
type DiagnosticLogSettings struct {
	// Describe the level of detail with which queries are to be logged.
	EnableFullTextQuery *EnableFullTextQuery `pulumi:"enableFullTextQuery"`
}

// DiagnosticLogSettingsInput is an input type that accepts DiagnosticLogSettingsArgs and DiagnosticLogSettingsOutput values.
// You can construct a concrete instance of `DiagnosticLogSettingsInput` via:
//
//	DiagnosticLogSettingsArgs{...}
type DiagnosticLogSettingsInput interface {
	pulumi.Input

	ToDiagnosticLogSettingsOutput() DiagnosticLogSettingsOutput
	ToDiagnosticLogSettingsOutputWithContext(context.Context) DiagnosticLogSettingsOutput
}

// Indicates what diagnostic log settings are to be enabled.
type DiagnosticLogSettingsArgs struct {
	// Describe the level of detail with which queries are to be logged.
	EnableFullTextQuery EnableFullTextQueryPtrInput `pulumi:"enableFullTextQuery"`
}

func (DiagnosticLogSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLogSettings)(nil)).Elem()
}

func (i DiagnosticLogSettingsArgs) ToDiagnosticLogSettingsOutput() DiagnosticLogSettingsOutput {
	return i.ToDiagnosticLogSettingsOutputWithContext(context.Background())
}

func (i DiagnosticLogSettingsArgs) ToDiagnosticLogSettingsOutputWithContext(ctx context.Context) DiagnosticLogSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticLogSettingsOutput)
}

func (i DiagnosticLogSettingsArgs) ToDiagnosticLogSettingsPtrOutput() DiagnosticLogSettingsPtrOutput {
	return i.ToDiagnosticLogSettingsPtrOutputWithContext(context.Background())
}

func (i DiagnosticLogSettingsArgs) ToDiagnosticLogSettingsPtrOutputWithContext(ctx context.Context) DiagnosticLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticLogSettingsOutput).ToDiagnosticLogSettingsPtrOutputWithContext(ctx)
}

// DiagnosticLogSettingsPtrInput is an input type that accepts DiagnosticLogSettingsArgs, DiagnosticLogSettingsPtr and DiagnosticLogSettingsPtrOutput values.
// You can construct a concrete instance of `DiagnosticLogSettingsPtrInput` via:
//
//	        DiagnosticLogSettingsArgs{...}
//
//	or:
//
//	        nil
type DiagnosticLogSettingsPtrInput interface {
	pulumi.Input

	ToDiagnosticLogSettingsPtrOutput() DiagnosticLogSettingsPtrOutput
	ToDiagnosticLogSettingsPtrOutputWithContext(context.Context) DiagnosticLogSettingsPtrOutput
}

type diagnosticLogSettingsPtrType DiagnosticLogSettingsArgs

func DiagnosticLogSettingsPtr(v *DiagnosticLogSettingsArgs) DiagnosticLogSettingsPtrInput {
	return (*diagnosticLogSettingsPtrType)(v)
}

func (*diagnosticLogSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticLogSettings)(nil)).Elem()
}

func (i *diagnosticLogSettingsPtrType) ToDiagnosticLogSettingsPtrOutput() DiagnosticLogSettingsPtrOutput {
	return i.ToDiagnosticLogSettingsPtrOutputWithContext(context.Background())
}

func (i *diagnosticLogSettingsPtrType) ToDiagnosticLogSettingsPtrOutputWithContext(ctx context.Context) DiagnosticLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticLogSettingsPtrOutput)
}

// Indicates what diagnostic log settings are to be enabled.
type DiagnosticLogSettingsOutput struct{ *pulumi.OutputState }

func (DiagnosticLogSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLogSettings)(nil)).Elem()
}

func (o DiagnosticLogSettingsOutput) ToDiagnosticLogSettingsOutput() DiagnosticLogSettingsOutput {
	return o
}

func (o DiagnosticLogSettingsOutput) ToDiagnosticLogSettingsOutputWithContext(ctx context.Context) DiagnosticLogSettingsOutput {
	return o
}

func (o DiagnosticLogSettingsOutput) ToDiagnosticLogSettingsPtrOutput() DiagnosticLogSettingsPtrOutput {
	return o.ToDiagnosticLogSettingsPtrOutputWithContext(context.Background())
}

func (o DiagnosticLogSettingsOutput) ToDiagnosticLogSettingsPtrOutputWithContext(ctx context.Context) DiagnosticLogSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticLogSettings) *DiagnosticLogSettings {
		return &v
	}).(DiagnosticLogSettingsPtrOutput)
}

// Describe the level of detail with which queries are to be logged.
func (o DiagnosticLogSettingsOutput) EnableFullTextQuery() EnableFullTextQueryPtrOutput {
	return o.ApplyT(func(v DiagnosticLogSettings) *EnableFullTextQuery { return v.EnableFullTextQuery }).(EnableFullTextQueryPtrOutput)
}

type DiagnosticLogSettingsPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticLogSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticLogSettings)(nil)).Elem()
}

func (o DiagnosticLogSettingsPtrOutput) ToDiagnosticLogSettingsPtrOutput() DiagnosticLogSettingsPtrOutput {
	return o
}

func (o DiagnosticLogSettingsPtrOutput) ToDiagnosticLogSettingsPtrOutputWithContext(ctx context.Context) DiagnosticLogSettingsPtrOutput {
	return o
}

func (o DiagnosticLogSettingsPtrOutput) Elem() DiagnosticLogSettingsOutput {
	return o.ApplyT(func(v *DiagnosticLogSettings) DiagnosticLogSettings {
		if v != nil {
			return *v
		}
		var ret DiagnosticLogSettings
		return ret
	}).(DiagnosticLogSettingsOutput)
}

// Describe the level of detail with which queries are to be logged.
func (o DiagnosticLogSettingsPtrOutput) EnableFullTextQuery() EnableFullTextQueryPtrOutput {
	return o.ApplyT(func(v *DiagnosticLogSettings) *EnableFullTextQuery {
		if v == nil {
			return nil
		}
		return v.EnableFullTextQuery
	}).(EnableFullTextQueryPtrOutput)
}

// Indicates what diagnostic log settings are to be enabled.
type DiagnosticLogSettingsResponse struct {
	// Describe the level of detail with which queries are to be logged.
	EnableFullTextQuery *string `pulumi:"enableFullTextQuery"`
}

// Indicates what diagnostic log settings are to be enabled.
type DiagnosticLogSettingsResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticLogSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticLogSettingsResponse)(nil)).Elem()
}

func (o DiagnosticLogSettingsResponseOutput) ToDiagnosticLogSettingsResponseOutput() DiagnosticLogSettingsResponseOutput {
	return o
}

func (o DiagnosticLogSettingsResponseOutput) ToDiagnosticLogSettingsResponseOutputWithContext(ctx context.Context) DiagnosticLogSettingsResponseOutput {
	return o
}

// Describe the level of detail with which queries are to be logged.
func (o DiagnosticLogSettingsResponseOutput) EnableFullTextQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiagnosticLogSettingsResponse) *string { return v.EnableFullTextQuery }).(pulumi.StringPtrOutput)
}

type DiagnosticLogSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticLogSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticLogSettingsResponse)(nil)).Elem()
}

func (o DiagnosticLogSettingsResponsePtrOutput) ToDiagnosticLogSettingsResponsePtrOutput() DiagnosticLogSettingsResponsePtrOutput {
	return o
}

func (o DiagnosticLogSettingsResponsePtrOutput) ToDiagnosticLogSettingsResponsePtrOutputWithContext(ctx context.Context) DiagnosticLogSettingsResponsePtrOutput {
	return o
}

func (o DiagnosticLogSettingsResponsePtrOutput) Elem() DiagnosticLogSettingsResponseOutput {
	return o.ApplyT(func(v *DiagnosticLogSettingsResponse) DiagnosticLogSettingsResponse {
		if v != nil {
			return *v
		}
		var ret DiagnosticLogSettingsResponse
		return ret
	}).(DiagnosticLogSettingsResponseOutput)
}

// Describe the level of detail with which queries are to be logged.
func (o DiagnosticLogSettingsResponsePtrOutput) EnableFullTextQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiagnosticLogSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnableFullTextQuery
	}).(pulumi.StringPtrOutput)
}

type ExcludedPath struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// ExcludedPathInput is an input type that accepts ExcludedPathArgs and ExcludedPathOutput values.
// You can construct a concrete instance of `ExcludedPathInput` via:
//
//	ExcludedPathArgs{...}
type ExcludedPathInput interface {
	pulumi.Input

	ToExcludedPathOutput() ExcludedPathOutput
	ToExcludedPathOutputWithContext(context.Context) ExcludedPathOutput
}

type ExcludedPathArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ExcludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArgs) ToExcludedPathOutput() ExcludedPathOutput {
	return i.ToExcludedPathOutputWithContext(context.Background())
}

func (i ExcludedPathArgs) ToExcludedPathOutputWithContext(ctx context.Context) ExcludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathOutput)
}

// ExcludedPathArrayInput is an input type that accepts ExcludedPathArray and ExcludedPathArrayOutput values.
// You can construct a concrete instance of `ExcludedPathArrayInput` via:
//
//	ExcludedPathArray{ ExcludedPathArgs{...} }
type ExcludedPathArrayInput interface {
	pulumi.Input

	ToExcludedPathArrayOutput() ExcludedPathArrayOutput
	ToExcludedPathArrayOutputWithContext(context.Context) ExcludedPathArrayOutput
}

type ExcludedPathArray []ExcludedPathInput

func (ExcludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArray) ToExcludedPathArrayOutput() ExcludedPathArrayOutput {
	return i.ToExcludedPathArrayOutputWithContext(context.Background())
}

func (i ExcludedPathArray) ToExcludedPathArrayOutputWithContext(ctx context.Context) ExcludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathArrayOutput)
}

type ExcludedPathOutput struct{ *pulumi.OutputState }

func (ExcludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPath)(nil)).Elem()
}

func (o ExcludedPathOutput) ToExcludedPathOutput() ExcludedPathOutput {
	return o
}

func (o ExcludedPathOutput) ToExcludedPathOutputWithContext(ctx context.Context) ExcludedPathOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPath)(nil)).Elem()
}

func (o ExcludedPathArrayOutput) ToExcludedPathArrayOutput() ExcludedPathArrayOutput {
	return o
}

func (o ExcludedPathArrayOutput) ToExcludedPathArrayOutputWithContext(ctx context.Context) ExcludedPathArrayOutput {
	return o
}

func (o ExcludedPathArrayOutput) Index(i pulumi.IntInput) ExcludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPath {
		return vs[0].([]ExcludedPath)[vs[1].(int)]
	}).(ExcludedPathOutput)
}

type ExcludedPathResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

type ExcludedPathResponseOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutput() ExcludedPathResponseOutput {
	return o
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutputWithContext(ctx context.Context) ExcludedPathResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutput() ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutputWithContext(ctx context.Context) ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) Index(i pulumi.IntInput) ExcludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPathResponse {
		return vs[0].([]ExcludedPathResponse)[vs[1].(int)]
	}).(ExcludedPathResponseOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponse struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName *string `pulumi:"locationName"`
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponseOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutput() FailoverPolicyResponseOutput {
	return o
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutputWithContext(ctx context.Context) FailoverPolicyResponseOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o FailoverPolicyResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o FailoverPolicyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the region in which the database account exists.
func (o FailoverPolicyResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type FailoverPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutput() FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) Index(i pulumi.IntInput) FailoverPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverPolicyResponse {
		return vs[0].([]FailoverPolicyResponse)[vs[1].(int)]
	}).(FailoverPolicyResponseOutput)
}

// Resource for a regional service location.
type GraphAPIComputeRegionalServiceResourceResponse struct {
	// The regional endpoint for GraphAPICompute.
	GraphApiComputeEndpoint string `pulumi:"graphApiComputeEndpoint"`
	// The location name.
	Location string `pulumi:"location"`
	// The regional service name.
	Name string `pulumi:"name"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Properties for GraphAPIComputeServiceResource.
type GraphAPIComputeServiceResourcePropertiesResponse struct {
	// Time of the last state change (ISO-8601 format).
	CreationTime string `pulumi:"creationTime"`
	// GraphAPICompute endpoint for the service.
	GraphApiComputeEndpoint *string `pulumi:"graphApiComputeEndpoint"`
	// Instance count for the service.
	InstanceCount *int `pulumi:"instanceCount"`
	// Instance type for the service.
	InstanceSize *string `pulumi:"instanceSize"`
	// An array that contains all of the locations for the service.
	Locations []GraphAPIComputeRegionalServiceResourceResponse `pulumi:"locations"`
	// ServiceType for the service.
	// Expected value is 'GraphAPICompute'.
	ServiceType string `pulumi:"serviceType"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Cosmos DB Graph resource object
type GraphResource struct {
	// Name of the Cosmos DB Graph
	Id string `pulumi:"id"`
}

// GraphResourceInput is an input type that accepts GraphResourceArgs and GraphResourceOutput values.
// You can construct a concrete instance of `GraphResourceInput` via:
//
//	GraphResourceArgs{...}
type GraphResourceInput interface {
	pulumi.Input

	ToGraphResourceOutput() GraphResourceOutput
	ToGraphResourceOutputWithContext(context.Context) GraphResourceOutput
}

// Cosmos DB Graph resource object
type GraphResourceArgs struct {
	// Name of the Cosmos DB Graph
	Id pulumi.StringInput `pulumi:"id"`
}

func (GraphResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphResource)(nil)).Elem()
}

func (i GraphResourceArgs) ToGraphResourceOutput() GraphResourceOutput {
	return i.ToGraphResourceOutputWithContext(context.Background())
}

func (i GraphResourceArgs) ToGraphResourceOutputWithContext(ctx context.Context) GraphResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphResourceOutput)
}

// Cosmos DB Graph resource object
type GraphResourceOutput struct{ *pulumi.OutputState }

func (GraphResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphResource)(nil)).Elem()
}

func (o GraphResourceOutput) ToGraphResourceOutput() GraphResourceOutput {
	return o
}

func (o GraphResourceOutput) ToGraphResourceOutputWithContext(ctx context.Context) GraphResourceOutput {
	return o
}

// Name of the Cosmos DB Graph
func (o GraphResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GraphResource) string { return v.Id }).(pulumi.StringOutput)
}

type GraphResourceGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type GraphResourceGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (GraphResourceGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphResourceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GraphResourceGetPropertiesResponseOptionsOutput) ToGraphResourceGetPropertiesResponseOptionsOutput() GraphResourceGetPropertiesResponseOptionsOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseOptionsOutput) ToGraphResourceGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) GraphResourceGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o GraphResourceGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v GraphResourceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GraphResourceGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphResourceGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type GraphResourceGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (GraphResourceGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphResourceGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GraphResourceGetPropertiesResponseOptionsPtrOutput) ToGraphResourceGetPropertiesResponseOptionsPtrOutput() GraphResourceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseOptionsPtrOutput) ToGraphResourceGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GraphResourceGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseOptionsPtrOutput) Elem() GraphResourceGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *GraphResourceGetPropertiesResponseOptions) GraphResourceGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret GraphResourceGetPropertiesResponseOptions
		return ret
	}).(GraphResourceGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o GraphResourceGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *GraphResourceGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GraphResourceGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphResourceGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type GraphResourceGetPropertiesResponseResource struct {
	// Name of the Cosmos DB Graph
	Id string `pulumi:"id"`
}

type GraphResourceGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GraphResourceGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphResourceGetPropertiesResponseResource)(nil)).Elem()
}

func (o GraphResourceGetPropertiesResponseResourceOutput) ToGraphResourceGetPropertiesResponseResourceOutput() GraphResourceGetPropertiesResponseResourceOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseResourceOutput) ToGraphResourceGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GraphResourceGetPropertiesResponseResourceOutput {
	return o
}

// Name of the Cosmos DB Graph
func (o GraphResourceGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GraphResourceGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

type GraphResourceGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GraphResourceGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphResourceGetPropertiesResponseResource)(nil)).Elem()
}

func (o GraphResourceGetPropertiesResponseResourcePtrOutput) ToGraphResourceGetPropertiesResponseResourcePtrOutput() GraphResourceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseResourcePtrOutput) ToGraphResourceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GraphResourceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GraphResourceGetPropertiesResponseResourcePtrOutput) Elem() GraphResourceGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GraphResourceGetPropertiesResponseResource) GraphResourceGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret GraphResourceGetPropertiesResponseResource
		return ret
	}).(GraphResourceGetPropertiesResponseResourceOutput)
}

// Name of the Cosmos DB Graph
func (o GraphResourceGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphResourceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GremlinDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type GremlinDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsOutput() GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) ToGremlinDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type GremlinDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutput() GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) ToGremlinDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() GremlinDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) GremlinDatabaseGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret GremlinDatabaseGetPropertiesResponseOptions
		return ret
	}).(GremlinDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type GremlinDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type GremlinDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutput() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type GremlinDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Elem() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) GremlinDatabaseGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret GremlinDatabaseGetPropertiesResponseResource
		return ret
	}).(GremlinDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResource struct {
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
}

// GremlinDatabaseResourceInput is an input type that accepts GremlinDatabaseResourceArgs and GremlinDatabaseResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseResourceInput` via:
//
//	GremlinDatabaseResourceArgs{...}
type GremlinDatabaseResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput
	ToGremlinDatabaseResourceOutputWithContext(context.Context) GremlinDatabaseResourceOutput
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResourceArgs struct {
	// Name of the Cosmos DB Gremlin database
	Id pulumi.StringInput `pulumi:"id"`
}

func (GremlinDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseResource)(nil)).Elem()
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput {
	return i.ToGremlinDatabaseResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutputWithContext(ctx context.Context) GremlinDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourceOutput)
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseResource)(nil)).Elem()
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput {
	return o
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourceOutputWithContext(ctx context.Context) GremlinDatabaseResourceOutput {
	return o
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

// Specific Gremlin Databases to restore.
type GremlinDatabaseRestoreResource struct {
	// The name of the gremlin database available for restore.
	DatabaseName *string `pulumi:"databaseName"`
	// The names of the graphs available for restore.
	GraphNames []string `pulumi:"graphNames"`
}

// GremlinDatabaseRestoreResourceInput is an input type that accepts GremlinDatabaseRestoreResourceArgs and GremlinDatabaseRestoreResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseRestoreResourceInput` via:
//
//	GremlinDatabaseRestoreResourceArgs{...}
type GremlinDatabaseRestoreResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseRestoreResourceOutput() GremlinDatabaseRestoreResourceOutput
	ToGremlinDatabaseRestoreResourceOutputWithContext(context.Context) GremlinDatabaseRestoreResourceOutput
}

// Specific Gremlin Databases to restore.
type GremlinDatabaseRestoreResourceArgs struct {
	// The name of the gremlin database available for restore.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// The names of the graphs available for restore.
	GraphNames pulumi.StringArrayInput `pulumi:"graphNames"`
}

func (GremlinDatabaseRestoreResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseRestoreResource)(nil)).Elem()
}

func (i GremlinDatabaseRestoreResourceArgs) ToGremlinDatabaseRestoreResourceOutput() GremlinDatabaseRestoreResourceOutput {
	return i.ToGremlinDatabaseRestoreResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseRestoreResourceArgs) ToGremlinDatabaseRestoreResourceOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseRestoreResourceOutput)
}

// GremlinDatabaseRestoreResourceArrayInput is an input type that accepts GremlinDatabaseRestoreResourceArray and GremlinDatabaseRestoreResourceArrayOutput values.
// You can construct a concrete instance of `GremlinDatabaseRestoreResourceArrayInput` via:
//
//	GremlinDatabaseRestoreResourceArray{ GremlinDatabaseRestoreResourceArgs{...} }
type GremlinDatabaseRestoreResourceArrayInput interface {
	pulumi.Input

	ToGremlinDatabaseRestoreResourceArrayOutput() GremlinDatabaseRestoreResourceArrayOutput
	ToGremlinDatabaseRestoreResourceArrayOutputWithContext(context.Context) GremlinDatabaseRestoreResourceArrayOutput
}

type GremlinDatabaseRestoreResourceArray []GremlinDatabaseRestoreResourceInput

func (GremlinDatabaseRestoreResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinDatabaseRestoreResource)(nil)).Elem()
}

func (i GremlinDatabaseRestoreResourceArray) ToGremlinDatabaseRestoreResourceArrayOutput() GremlinDatabaseRestoreResourceArrayOutput {
	return i.ToGremlinDatabaseRestoreResourceArrayOutputWithContext(context.Background())
}

func (i GremlinDatabaseRestoreResourceArray) ToGremlinDatabaseRestoreResourceArrayOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseRestoreResourceArrayOutput)
}

// Specific Gremlin Databases to restore.
type GremlinDatabaseRestoreResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseRestoreResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseRestoreResource)(nil)).Elem()
}

func (o GremlinDatabaseRestoreResourceOutput) ToGremlinDatabaseRestoreResourceOutput() GremlinDatabaseRestoreResourceOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceOutput) ToGremlinDatabaseRestoreResourceOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceOutput {
	return o
}

// The name of the gremlin database available for restore.
func (o GremlinDatabaseRestoreResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseRestoreResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The names of the graphs available for restore.
func (o GremlinDatabaseRestoreResourceOutput) GraphNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinDatabaseRestoreResource) []string { return v.GraphNames }).(pulumi.StringArrayOutput)
}

type GremlinDatabaseRestoreResourceArrayOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseRestoreResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinDatabaseRestoreResource)(nil)).Elem()
}

func (o GremlinDatabaseRestoreResourceArrayOutput) ToGremlinDatabaseRestoreResourceArrayOutput() GremlinDatabaseRestoreResourceArrayOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceArrayOutput) ToGremlinDatabaseRestoreResourceArrayOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceArrayOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceArrayOutput) Index(i pulumi.IntInput) GremlinDatabaseRestoreResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinDatabaseRestoreResource {
		return vs[0].([]GremlinDatabaseRestoreResource)[vs[1].(int)]
	}).(GremlinDatabaseRestoreResourceOutput)
}

// Specific Gremlin Databases to restore.
type GremlinDatabaseRestoreResourceResponse struct {
	// The name of the gremlin database available for restore.
	DatabaseName *string `pulumi:"databaseName"`
	// The names of the graphs available for restore.
	GraphNames []string `pulumi:"graphNames"`
}

// Specific Gremlin Databases to restore.
type GremlinDatabaseRestoreResourceResponseOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseRestoreResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseRestoreResourceResponse)(nil)).Elem()
}

func (o GremlinDatabaseRestoreResourceResponseOutput) ToGremlinDatabaseRestoreResourceResponseOutput() GremlinDatabaseRestoreResourceResponseOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceResponseOutput) ToGremlinDatabaseRestoreResourceResponseOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceResponseOutput {
	return o
}

// The name of the gremlin database available for restore.
func (o GremlinDatabaseRestoreResourceResponseOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseRestoreResourceResponse) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// The names of the graphs available for restore.
func (o GremlinDatabaseRestoreResourceResponseOutput) GraphNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinDatabaseRestoreResourceResponse) []string { return v.GraphNames }).(pulumi.StringArrayOutput)
}

type GremlinDatabaseRestoreResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseRestoreResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinDatabaseRestoreResourceResponse)(nil)).Elem()
}

func (o GremlinDatabaseRestoreResourceResponseArrayOutput) ToGremlinDatabaseRestoreResourceResponseArrayOutput() GremlinDatabaseRestoreResourceResponseArrayOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceResponseArrayOutput) ToGremlinDatabaseRestoreResourceResponseArrayOutputWithContext(ctx context.Context) GremlinDatabaseRestoreResourceResponseArrayOutput {
	return o
}

func (o GremlinDatabaseRestoreResourceResponseArrayOutput) Index(i pulumi.IntInput) GremlinDatabaseRestoreResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinDatabaseRestoreResourceResponse {
		return vs[0].([]GremlinDatabaseRestoreResourceResponse)[vs[1].(int)]
	}).(GremlinDatabaseRestoreResourceResponseOutput)
}

type GremlinGraphGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type GremlinGraphGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsOutput() GremlinGraphGetPropertiesResponseOptionsOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsOutput) ToGremlinGraphGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o GremlinGraphGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinGraphGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type GremlinGraphGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseOptions)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutput() GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) ToGremlinGraphGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) Elem() GremlinGraphGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) GremlinGraphGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret GremlinGraphGetPropertiesResponseOptions
		return ret
	}).(GremlinGraphGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o GremlinGraphGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphGetPropertiesResponseResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for GremlinGraphGetPropertiesResponseResource
func (val *GremlinGraphGetPropertiesResponseResource) Defaults() *GremlinGraphGetPropertiesResponseResource {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ConflictResolutionPolicy = tmp.ConflictResolutionPolicy.Defaults()

	tmp.IndexingPolicy = tmp.IndexingPolicy.Defaults()

	tmp.PartitionKey = tmp.PartitionKey.Defaults()

	return &tmp
}

type GremlinGraphGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutput() GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type GremlinGraphGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Elem() GremlinGraphGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) GremlinGraphGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret GremlinGraphGetPropertiesResponseResource
		return ret
	}).(GremlinGraphGetPropertiesResponseResourceOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for GremlinGraphResource
func (val *GremlinGraphResource) Defaults() *GremlinGraphResource {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ConflictResolutionPolicy = tmp.ConflictResolutionPolicy.Defaults()

	tmp.IndexingPolicy = tmp.IndexingPolicy.Defaults()

	tmp.PartitionKey = tmp.PartitionKey.Defaults()

	return &tmp
}

// GremlinGraphResourceInput is an input type that accepts GremlinGraphResourceArgs and GremlinGraphResourceOutput values.
// You can construct a concrete instance of `GremlinGraphResourceInput` via:
//
//	GremlinGraphResourceArgs{...}
type GremlinGraphResourceInput interface {
	pulumi.Input

	ToGremlinGraphResourceOutput() GremlinGraphResourceOutput
	ToGremlinGraphResourceOutputWithContext(context.Context) GremlinGraphResourceOutput
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResourceArgs struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for GremlinGraphResourceArgs
func (val *GremlinGraphResourceArgs) Defaults() *GremlinGraphResourceArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (GremlinGraphResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphResource)(nil)).Elem()
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutput() GremlinGraphResourceOutput {
	return i.ToGremlinGraphResourceOutputWithContext(context.Background())
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutputWithContext(ctx context.Context) GremlinGraphResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourceOutput)
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphResource)(nil)).Elem()
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourceOutput() GremlinGraphResourceOutput {
	return o
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourceOutputWithContext(ctx context.Context) GremlinGraphResourceOutput {
	return o
}

// The conflict resolution policy for the graph.
func (o GremlinGraphResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *ConflictResolutionPolicy { return v.ConflictResolutionPolicy }).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o GremlinGraphResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphResourceOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *IndexingPolicy { return v.IndexingPolicy }).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphResourceOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *ContainerPartitionKey { return v.PartitionKey }).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *UniqueKeyPolicy { return v.UniqueKeyPolicy }).(UniqueKeyPolicyPtrOutput)
}

// The paths that are included in indexing
type IncludedPath struct {
	// List of indexes for this path
	Indexes []Indexes `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// IncludedPathInput is an input type that accepts IncludedPathArgs and IncludedPathOutput values.
// You can construct a concrete instance of `IncludedPathInput` via:
//
//	IncludedPathArgs{...}
type IncludedPathInput interface {
	pulumi.Input

	ToIncludedPathOutput() IncludedPathOutput
	ToIncludedPathOutputWithContext(context.Context) IncludedPathOutput
}

// The paths that are included in indexing
type IncludedPathArgs struct {
	// List of indexes for this path
	Indexes IndexesArrayInput `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (IncludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPath)(nil)).Elem()
}

func (i IncludedPathArgs) ToIncludedPathOutput() IncludedPathOutput {
	return i.ToIncludedPathOutputWithContext(context.Background())
}

func (i IncludedPathArgs) ToIncludedPathOutputWithContext(ctx context.Context) IncludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathOutput)
}

// IncludedPathArrayInput is an input type that accepts IncludedPathArray and IncludedPathArrayOutput values.
// You can construct a concrete instance of `IncludedPathArrayInput` via:
//
//	IncludedPathArray{ IncludedPathArgs{...} }
type IncludedPathArrayInput interface {
	pulumi.Input

	ToIncludedPathArrayOutput() IncludedPathArrayOutput
	ToIncludedPathArrayOutputWithContext(context.Context) IncludedPathArrayOutput
}

type IncludedPathArray []IncludedPathInput

func (IncludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPath)(nil)).Elem()
}

func (i IncludedPathArray) ToIncludedPathArrayOutput() IncludedPathArrayOutput {
	return i.ToIncludedPathArrayOutputWithContext(context.Background())
}

func (i IncludedPathArray) ToIncludedPathArrayOutputWithContext(ctx context.Context) IncludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathArrayOutput)
}

// The paths that are included in indexing
type IncludedPathOutput struct{ *pulumi.OutputState }

func (IncludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPath)(nil)).Elem()
}

func (o IncludedPathOutput) ToIncludedPathOutput() IncludedPathOutput {
	return o
}

func (o IncludedPathOutput) ToIncludedPathOutputWithContext(ctx context.Context) IncludedPathOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathOutput) Indexes() IndexesArrayOutput {
	return o.ApplyT(func(v IncludedPath) []Indexes { return v.Indexes }).(IndexesArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPath)(nil)).Elem()
}

func (o IncludedPathArrayOutput) ToIncludedPathArrayOutput() IncludedPathArrayOutput {
	return o
}

func (o IncludedPathArrayOutput) ToIncludedPathArrayOutputWithContext(ctx context.Context) IncludedPathArrayOutput {
	return o
}

func (o IncludedPathArrayOutput) Index(i pulumi.IntInput) IncludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPath {
		return vs[0].([]IncludedPath)[vs[1].(int)]
	}).(IncludedPathOutput)
}

// The paths that are included in indexing
type IncludedPathResponse struct {
	// List of indexes for this path
	Indexes []IndexesResponse `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// The paths that are included in indexing
type IncludedPathResponseOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutput() IncludedPathResponseOutput {
	return o
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutputWithContext(ctx context.Context) IncludedPathResponseOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathResponseOutput) Indexes() IndexesResponseArrayOutput {
	return o.ApplyT(func(v IncludedPathResponse) []IndexesResponse { return v.Indexes }).(IndexesResponseArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutput() IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutputWithContext(ctx context.Context) IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) Index(i pulumi.IntInput) IncludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPathResponse {
		return vs[0].([]IncludedPathResponse)[vs[1].(int)]
	}).(IncludedPathResponseOutput)
}

// The indexes for the path.
type Indexes struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// Defaults sets the appropriate defaults for Indexes
func (val *Indexes) Defaults() *Indexes {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataType) {
		dataType_ := "String"
		tmp.DataType = &dataType_
	}
	if isZero(tmp.Kind) {
		kind_ := "Hash"
		tmp.Kind = &kind_
	}
	return &tmp
}

// IndexesInput is an input type that accepts IndexesArgs and IndexesOutput values.
// You can construct a concrete instance of `IndexesInput` via:
//
//	IndexesArgs{...}
type IndexesInput interface {
	pulumi.Input

	ToIndexesOutput() IndexesOutput
	ToIndexesOutputWithContext(context.Context) IndexesOutput
}

// The indexes for the path.
type IndexesArgs struct {
	// The datatype for which the indexing behavior is applied to.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Indicates the type of index.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
}

// Defaults sets the appropriate defaults for IndexesArgs
func (val *IndexesArgs) Defaults() *IndexesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataType) {
		tmp.DataType = pulumi.StringPtr("String")
	}
	if isZero(tmp.Kind) {
		tmp.Kind = pulumi.StringPtr("Hash")
	}
	return &tmp
}
func (IndexesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Indexes)(nil)).Elem()
}

func (i IndexesArgs) ToIndexesOutput() IndexesOutput {
	return i.ToIndexesOutputWithContext(context.Background())
}

func (i IndexesArgs) ToIndexesOutputWithContext(ctx context.Context) IndexesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesOutput)
}

// IndexesArrayInput is an input type that accepts IndexesArray and IndexesArrayOutput values.
// You can construct a concrete instance of `IndexesArrayInput` via:
//
//	IndexesArray{ IndexesArgs{...} }
type IndexesArrayInput interface {
	pulumi.Input

	ToIndexesArrayOutput() IndexesArrayOutput
	ToIndexesArrayOutputWithContext(context.Context) IndexesArrayOutput
}

type IndexesArray []IndexesInput

func (IndexesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Indexes)(nil)).Elem()
}

func (i IndexesArray) ToIndexesArrayOutput() IndexesArrayOutput {
	return i.ToIndexesArrayOutputWithContext(context.Background())
}

func (i IndexesArray) ToIndexesArrayOutputWithContext(ctx context.Context) IndexesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesArrayOutput)
}

// The indexes for the path.
type IndexesOutput struct{ *pulumi.OutputState }

func (IndexesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Indexes)(nil)).Elem()
}

func (o IndexesOutput) ToIndexesOutput() IndexesOutput {
	return o
}

func (o IndexesOutput) ToIndexesOutputWithContext(ctx context.Context) IndexesOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Indexes) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Indexes) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Indexes) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesArrayOutput struct{ *pulumi.OutputState }

func (IndexesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Indexes)(nil)).Elem()
}

func (o IndexesArrayOutput) ToIndexesArrayOutput() IndexesArrayOutput {
	return o
}

func (o IndexesArrayOutput) ToIndexesArrayOutputWithContext(ctx context.Context) IndexesArrayOutput {
	return o
}

func (o IndexesArrayOutput) Index(i pulumi.IntInput) IndexesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Indexes {
		return vs[0].([]Indexes)[vs[1].(int)]
	}).(IndexesOutput)
}

// The indexes for the path.
type IndexesResponse struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// Defaults sets the appropriate defaults for IndexesResponse
func (val *IndexesResponse) Defaults() *IndexesResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.DataType) {
		dataType_ := "String"
		tmp.DataType = &dataType_
	}
	if isZero(tmp.Kind) {
		kind_ := "Hash"
		tmp.Kind = &kind_
	}
	return &tmp
}

// The indexes for the path.
type IndexesResponseOutput struct{ *pulumi.OutputState }

func (IndexesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseOutput) ToIndexesResponseOutput() IndexesResponseOutput {
	return o
}

func (o IndexesResponseOutput) ToIndexesResponseOutputWithContext(ctx context.Context) IndexesResponseOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesResponseOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesResponseArrayOutput struct{ *pulumi.OutputState }

func (IndexesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutput() IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutputWithContext(ctx context.Context) IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) Index(i pulumi.IntInput) IndexesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexesResponse {
		return vs[0].([]IndexesResponse)[vs[1].(int)]
	}).(IndexesResponseOutput)
}

// Cosmos DB indexing policy
type IndexingPolicy struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePath `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPath `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPath `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpec `pulumi:"spatialIndexes"`
}

// Defaults sets the appropriate defaults for IndexingPolicy
func (val *IndexingPolicy) Defaults() *IndexingPolicy {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IndexingMode) {
		indexingMode_ := "consistent"
		tmp.IndexingMode = &indexingMode_
	}
	return &tmp
}

// IndexingPolicyInput is an input type that accepts IndexingPolicyArgs and IndexingPolicyOutput values.
// You can construct a concrete instance of `IndexingPolicyInput` via:
//
//	IndexingPolicyArgs{...}
type IndexingPolicyInput interface {
	pulumi.Input

	ToIndexingPolicyOutput() IndexingPolicyOutput
	ToIndexingPolicyOutputWithContext(context.Context) IndexingPolicyOutput
}

// Cosmos DB indexing policy
type IndexingPolicyArgs struct {
	// Indicates if the indexing policy is automatic
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes CompositePathArrayArrayInput `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths ExcludedPathArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths IncludedPathArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes SpatialSpecArrayInput `pulumi:"spatialIndexes"`
}

// Defaults sets the appropriate defaults for IndexingPolicyArgs
func (val *IndexingPolicyArgs) Defaults() *IndexingPolicyArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IndexingMode) {
		tmp.IndexingMode = pulumi.StringPtr("consistent")
	}
	return &tmp
}
func (IndexingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicy)(nil)).Elem()
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutput() IndexingPolicyOutput {
	return i.ToIndexingPolicyOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutputWithContext(ctx context.Context) IndexingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput)
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput).ToIndexingPolicyPtrOutputWithContext(ctx)
}

// IndexingPolicyPtrInput is an input type that accepts IndexingPolicyArgs, IndexingPolicyPtr and IndexingPolicyPtrOutput values.
// You can construct a concrete instance of `IndexingPolicyPtrInput` via:
//
//	        IndexingPolicyArgs{...}
//
//	or:
//
//	        nil
type IndexingPolicyPtrInput interface {
	pulumi.Input

	ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput
	ToIndexingPolicyPtrOutputWithContext(context.Context) IndexingPolicyPtrOutput
}

type indexingPolicyPtrType IndexingPolicyArgs

func IndexingPolicyPtr(v *IndexingPolicyArgs) IndexingPolicyPtrInput {
	return (*indexingPolicyPtrType)(v)
}

func (*indexingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicy)(nil)).Elem()
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyPtrOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyOutput struct{ *pulumi.OutputState }

func (IndexingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicy)(nil)).Elem()
}

func (o IndexingPolicyOutput) ToIndexingPolicyOutput() IndexingPolicyOutput {
	return o
}

func (o IndexingPolicyOutput) ToIndexingPolicyOutputWithContext(ctx context.Context) IndexingPolicyOutput {
	return o
}

func (o IndexingPolicyOutput) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return o.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (o IndexingPolicyOutput) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexingPolicy) *IndexingPolicy {
		return &v
	}).(IndexingPolicyPtrOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyOutput) CompositeIndexes() CompositePathArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) [][]CompositePath { return v.CompositeIndexes }).(CompositePathArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyOutput) ExcludedPaths() ExcludedPathArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []ExcludedPath { return v.ExcludedPaths }).(ExcludedPathArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyOutput) IncludedPaths() IncludedPathArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []IncludedPath { return v.IncludedPaths }).(IncludedPathArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicy) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyOutput) SpatialIndexes() SpatialSpecArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []SpatialSpec { return v.SpatialIndexes }).(SpatialSpecArrayOutput)
}

type IndexingPolicyPtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicy)(nil)).Elem()
}

func (o IndexingPolicyPtrOutput) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return o
}

func (o IndexingPolicyPtrOutput) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return o
}

func (o IndexingPolicyPtrOutput) Elem() IndexingPolicyOutput {
	return o.ApplyT(func(v *IndexingPolicy) IndexingPolicy {
		if v != nil {
			return *v
		}
		var ret IndexingPolicy
		return ret
	}).(IndexingPolicyOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyPtrOutput) CompositeIndexes() CompositePathArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) [][]CompositePath {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyPtrOutput) ExcludedPaths() ExcludedPathArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []ExcludedPath {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyPtrOutput) IncludedPaths() IncludedPathArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []IncludedPath {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyPtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicy) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyPtrOutput) SpatialIndexes() SpatialSpecArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []SpatialSpec {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecArrayOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyResponse struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePathResponse `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPathResponse `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPathResponse `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpecResponse `pulumi:"spatialIndexes"`
}

// Defaults sets the appropriate defaults for IndexingPolicyResponse
func (val *IndexingPolicyResponse) Defaults() *IndexingPolicyResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.IndexingMode) {
		indexingMode_ := "consistent"
		tmp.IndexingMode = &indexingMode_
	}
	return &tmp
}

// Cosmos DB indexing policy
type IndexingPolicyResponseOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutput() IndexingPolicyResponseOutput {
	return o
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutputWithContext(ctx context.Context) IndexingPolicyResponseOutput {
	return o
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponseOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponseOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) [][]CompositePathResponse { return v.CompositeIndexes }).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponseOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []ExcludedPathResponse { return v.ExcludedPaths }).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponseOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []IncludedPathResponse { return v.IncludedPaths }).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponseOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponseOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []SpatialSpecResponse { return v.SpatialIndexes }).(SpatialSpecResponseArrayOutput)
}

type IndexingPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) Elem() IndexingPolicyResponseOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) IndexingPolicyResponse {
		if v != nil {
			return *v
		}
		var ret IndexingPolicyResponse
		return ret
	}).(IndexingPolicyResponseOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponsePtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponsePtrOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) [][]CompositePathResponse {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponsePtrOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []ExcludedPathResponse {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponsePtrOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []IncludedPathResponse {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponsePtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponsePtrOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []SpatialSpecResponse {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecResponseArrayOutput)
}

// IpAddressOrRange object
type IpAddressOrRange struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange *string `pulumi:"ipAddressOrRange"`
}

// IpAddressOrRangeInput is an input type that accepts IpAddressOrRangeArgs and IpAddressOrRangeOutput values.
// You can construct a concrete instance of `IpAddressOrRangeInput` via:
//
//	IpAddressOrRangeArgs{...}
type IpAddressOrRangeInput interface {
	pulumi.Input

	ToIpAddressOrRangeOutput() IpAddressOrRangeOutput
	ToIpAddressOrRangeOutputWithContext(context.Context) IpAddressOrRangeOutput
}

// IpAddressOrRange object
type IpAddressOrRangeArgs struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange pulumi.StringPtrInput `pulumi:"ipAddressOrRange"`
}

func (IpAddressOrRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressOrRange)(nil)).Elem()
}

func (i IpAddressOrRangeArgs) ToIpAddressOrRangeOutput() IpAddressOrRangeOutput {
	return i.ToIpAddressOrRangeOutputWithContext(context.Background())
}

func (i IpAddressOrRangeArgs) ToIpAddressOrRangeOutputWithContext(ctx context.Context) IpAddressOrRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOrRangeOutput)
}

// IpAddressOrRangeArrayInput is an input type that accepts IpAddressOrRangeArray and IpAddressOrRangeArrayOutput values.
// You can construct a concrete instance of `IpAddressOrRangeArrayInput` via:
//
//	IpAddressOrRangeArray{ IpAddressOrRangeArgs{...} }
type IpAddressOrRangeArrayInput interface {
	pulumi.Input

	ToIpAddressOrRangeArrayOutput() IpAddressOrRangeArrayOutput
	ToIpAddressOrRangeArrayOutputWithContext(context.Context) IpAddressOrRangeArrayOutput
}

type IpAddressOrRangeArray []IpAddressOrRangeInput

func (IpAddressOrRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressOrRange)(nil)).Elem()
}

func (i IpAddressOrRangeArray) ToIpAddressOrRangeArrayOutput() IpAddressOrRangeArrayOutput {
	return i.ToIpAddressOrRangeArrayOutputWithContext(context.Background())
}

func (i IpAddressOrRangeArray) ToIpAddressOrRangeArrayOutputWithContext(ctx context.Context) IpAddressOrRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressOrRangeArrayOutput)
}

// IpAddressOrRange object
type IpAddressOrRangeOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressOrRange)(nil)).Elem()
}

func (o IpAddressOrRangeOutput) ToIpAddressOrRangeOutput() IpAddressOrRangeOutput {
	return o
}

func (o IpAddressOrRangeOutput) ToIpAddressOrRangeOutputWithContext(ctx context.Context) IpAddressOrRangeOutput {
	return o
}

// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
func (o IpAddressOrRangeOutput) IpAddressOrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressOrRange) *string { return v.IpAddressOrRange }).(pulumi.StringPtrOutput)
}

type IpAddressOrRangeArrayOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressOrRange)(nil)).Elem()
}

func (o IpAddressOrRangeArrayOutput) ToIpAddressOrRangeArrayOutput() IpAddressOrRangeArrayOutput {
	return o
}

func (o IpAddressOrRangeArrayOutput) ToIpAddressOrRangeArrayOutputWithContext(ctx context.Context) IpAddressOrRangeArrayOutput {
	return o
}

func (o IpAddressOrRangeArrayOutput) Index(i pulumi.IntInput) IpAddressOrRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressOrRange {
		return vs[0].([]IpAddressOrRange)[vs[1].(int)]
	}).(IpAddressOrRangeOutput)
}

// IpAddressOrRange object
type IpAddressOrRangeResponse struct {
	// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
	IpAddressOrRange *string `pulumi:"ipAddressOrRange"`
}

// IpAddressOrRange object
type IpAddressOrRangeResponseOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressOrRangeResponse)(nil)).Elem()
}

func (o IpAddressOrRangeResponseOutput) ToIpAddressOrRangeResponseOutput() IpAddressOrRangeResponseOutput {
	return o
}

func (o IpAddressOrRangeResponseOutput) ToIpAddressOrRangeResponseOutputWithContext(ctx context.Context) IpAddressOrRangeResponseOutput {
	return o
}

// A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.
func (o IpAddressOrRangeResponseOutput) IpAddressOrRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressOrRangeResponse) *string { return v.IpAddressOrRange }).(pulumi.StringPtrOutput)
}

type IpAddressOrRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (IpAddressOrRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressOrRangeResponse)(nil)).Elem()
}

func (o IpAddressOrRangeResponseArrayOutput) ToIpAddressOrRangeResponseArrayOutput() IpAddressOrRangeResponseArrayOutput {
	return o
}

func (o IpAddressOrRangeResponseArrayOutput) ToIpAddressOrRangeResponseArrayOutputWithContext(ctx context.Context) IpAddressOrRangeResponseArrayOutput {
	return o
}

func (o IpAddressOrRangeResponseArrayOutput) Index(i pulumi.IntInput) IpAddressOrRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressOrRangeResponse {
		return vs[0].([]IpAddressOrRangeResponse)[vs[1].(int)]
	}).(IpAddressOrRangeResponseOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type Location struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
}

// LocationInput is an input type that accepts LocationArgs and LocationOutput values.
// You can construct a concrete instance of `LocationInput` via:
//
//	LocationArgs{...}
type LocationInput interface {
	pulumi.Input

	ToLocationOutput() LocationOutput
	ToLocationOutputWithContext(context.Context) LocationOutput
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationArgs struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant pulumi.BoolPtrInput `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
}

func (LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Location)(nil)).Elem()
}

func (i LocationArgs) ToLocationOutput() LocationOutput {
	return i.ToLocationOutputWithContext(context.Background())
}

func (i LocationArgs) ToLocationOutputWithContext(ctx context.Context) LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationOutput)
}

// LocationArrayInput is an input type that accepts LocationArray and LocationArrayOutput values.
// You can construct a concrete instance of `LocationArrayInput` via:
//
//	LocationArray{ LocationArgs{...} }
type LocationArrayInput interface {
	pulumi.Input

	ToLocationArrayOutput() LocationArrayOutput
	ToLocationArrayOutputWithContext(context.Context) LocationArrayOutput
}

type LocationArray []LocationInput

func (LocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Location)(nil)).Elem()
}

func (i LocationArray) ToLocationArrayOutput() LocationArrayOutput {
	return i.ToLocationArrayOutputWithContext(context.Background())
}

func (i LocationArray) ToLocationArrayOutputWithContext(ctx context.Context) LocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationOutput struct{ *pulumi.OutputState }

func (LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Location)(nil)).Elem()
}

func (o LocationOutput) ToLocationOutput() LocationOutput {
	return o
}

func (o LocationOutput) ToLocationOutputWithContext(ctx context.Context) LocationOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Location) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Location) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Location) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type LocationArrayOutput struct{ *pulumi.OutputState }

func (LocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Location)(nil)).Elem()
}

func (o LocationArrayOutput) ToLocationArrayOutput() LocationArrayOutput {
	return o
}

func (o LocationArrayOutput) ToLocationArrayOutputWithContext(ctx context.Context) LocationArrayOutput {
	return o
}

func (o LocationArrayOutput) Index(i pulumi.IntInput) LocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Location {
		return vs[0].([]Location)[vs[1].(int)]
	}).(LocationOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponse struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint string `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponseOutput struct{ *pulumi.OutputState }

func (LocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationResponse)(nil)).Elem()
}

func (o LocationResponseOutput) ToLocationResponseOutput() LocationResponseOutput {
	return o
}

func (o LocationResponseOutput) ToLocationResponseOutputWithContext(ctx context.Context) LocationResponseOutput {
	return o
}

// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
func (o LocationResponseOutput) DocumentEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.DocumentEndpoint }).(pulumi.StringOutput)
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocationResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o LocationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationResponseOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LocationResponse) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
func (o LocationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type LocationResponseArrayOutput struct{ *pulumi.OutputState }

func (LocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationResponse)(nil)).Elem()
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutput() LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutputWithContext(ctx context.Context) LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) Index(i pulumi.IntInput) LocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationResponse {
		return vs[0].([]LocationResponse)[vs[1].(int)]
	}).(LocationResponseOutput)
}

// Identity for the resource.
type ManagedCassandraManagedServiceIdentity struct {
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// ManagedCassandraManagedServiceIdentityInput is an input type that accepts ManagedCassandraManagedServiceIdentityArgs and ManagedCassandraManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedCassandraManagedServiceIdentityInput` via:
//
//	ManagedCassandraManagedServiceIdentityArgs{...}
type ManagedCassandraManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedCassandraManagedServiceIdentityOutput() ManagedCassandraManagedServiceIdentityOutput
	ToManagedCassandraManagedServiceIdentityOutputWithContext(context.Context) ManagedCassandraManagedServiceIdentityOutput
}

// Identity for the resource.
type ManagedCassandraManagedServiceIdentityArgs struct {
	// The type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedCassandraManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCassandraManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedCassandraManagedServiceIdentityArgs) ToManagedCassandraManagedServiceIdentityOutput() ManagedCassandraManagedServiceIdentityOutput {
	return i.ToManagedCassandraManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedCassandraManagedServiceIdentityArgs) ToManagedCassandraManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCassandraManagedServiceIdentityOutput)
}

func (i ManagedCassandraManagedServiceIdentityArgs) ToManagedCassandraManagedServiceIdentityPtrOutput() ManagedCassandraManagedServiceIdentityPtrOutput {
	return i.ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedCassandraManagedServiceIdentityArgs) ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCassandraManagedServiceIdentityOutput).ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedCassandraManagedServiceIdentityPtrInput is an input type that accepts ManagedCassandraManagedServiceIdentityArgs, ManagedCassandraManagedServiceIdentityPtr and ManagedCassandraManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedCassandraManagedServiceIdentityPtrInput` via:
//
//	        ManagedCassandraManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedCassandraManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedCassandraManagedServiceIdentityPtrOutput() ManagedCassandraManagedServiceIdentityPtrOutput
	ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedCassandraManagedServiceIdentityPtrOutput
}

type managedCassandraManagedServiceIdentityPtrType ManagedCassandraManagedServiceIdentityArgs

func ManagedCassandraManagedServiceIdentityPtr(v *ManagedCassandraManagedServiceIdentityArgs) ManagedCassandraManagedServiceIdentityPtrInput {
	return (*managedCassandraManagedServiceIdentityPtrType)(v)
}

func (*managedCassandraManagedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCassandraManagedServiceIdentity)(nil)).Elem()
}

func (i *managedCassandraManagedServiceIdentityPtrType) ToManagedCassandraManagedServiceIdentityPtrOutput() ManagedCassandraManagedServiceIdentityPtrOutput {
	return i.ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedCassandraManagedServiceIdentityPtrType) ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedCassandraManagedServiceIdentityPtrOutput)
}

// Identity for the resource.
type ManagedCassandraManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedCassandraManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCassandraManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedCassandraManagedServiceIdentityOutput) ToManagedCassandraManagedServiceIdentityOutput() ManagedCassandraManagedServiceIdentityOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityOutput) ToManagedCassandraManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityOutput) ToManagedCassandraManagedServiceIdentityPtrOutput() ManagedCassandraManagedServiceIdentityPtrOutput {
	return o.ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedCassandraManagedServiceIdentityOutput) ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedCassandraManagedServiceIdentity) *ManagedCassandraManagedServiceIdentity {
		return &v
	}).(ManagedCassandraManagedServiceIdentityPtrOutput)
}

// The type of the resource.
func (o ManagedCassandraManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedCassandraManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedCassandraManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedCassandraManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCassandraManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedCassandraManagedServiceIdentityPtrOutput) ToManagedCassandraManagedServiceIdentityPtrOutput() ManagedCassandraManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityPtrOutput) ToManagedCassandraManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityPtrOutput) Elem() ManagedCassandraManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentity) ManagedCassandraManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedCassandraManagedServiceIdentity
		return ret
	}).(ManagedCassandraManagedServiceIdentityOutput)
}

// The type of the resource.
func (o ManagedCassandraManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type ManagedCassandraManagedServiceIdentityResponse struct {
	// The object id of the identity resource.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the resource.
	TenantId string `pulumi:"tenantId"`
	// The type of the resource.
	Type *string `pulumi:"type"`
}

// Identity for the resource.
type ManagedCassandraManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedCassandraManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCassandraManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedCassandraManagedServiceIdentityResponseOutput) ToManagedCassandraManagedServiceIdentityResponseOutput() ManagedCassandraManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityResponseOutput) ToManagedCassandraManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityResponseOutput {
	return o
}

// The object id of the identity resource.
func (o ManagedCassandraManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCassandraManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the resource.
func (o ManagedCassandraManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedCassandraManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of the resource.
func (o ManagedCassandraManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedCassandraManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedCassandraManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedCassandraManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedCassandraManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) ToManagedCassandraManagedServiceIdentityResponsePtrOutput() ManagedCassandraManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) ToManagedCassandraManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedCassandraManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) Elem() ManagedCassandraManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentityResponse) ManagedCassandraManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedCassandraManagedServiceIdentityResponse
		return ret
	}).(ManagedCassandraManagedServiceIdentityResponseOutput)
}

// The object id of the identity resource.
func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the resource.
func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of the resource.
func (o ManagedCassandraManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedCassandraManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentity struct {
	// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type *ResourceIdentityType `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Identity for the resource.
type ManagedServiceIdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type ResourceIdentityTypePtrInput `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ManagedServiceIdentityOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ResourceIdentityType { return v.Type }).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ManagedServiceIdentityPtrOutput) Type() ResourceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *ResourceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ResourceIdentityTypePtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponse struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
	Type *string `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// Identity for the resource.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// The client id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Resource for a regional service location.
type MaterializedViewsBuilderRegionalServiceResourceResponse struct {
	// The location name.
	Location string `pulumi:"location"`
	// The regional service name.
	Name string `pulumi:"name"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Properties for MaterializedViewsBuilderServiceResource.
type MaterializedViewsBuilderServiceResourcePropertiesResponse struct {
	// Time of the last state change (ISO-8601 format).
	CreationTime string `pulumi:"creationTime"`
	// Instance count for the service.
	InstanceCount *int `pulumi:"instanceCount"`
	// Instance type for the service.
	InstanceSize *string `pulumi:"instanceSize"`
	// An array that contains all of the locations for the service.
	Locations []MaterializedViewsBuilderRegionalServiceResourceResponse `pulumi:"locations"`
	// ServiceType for the service.
	// Expected value is 'MaterializedViewsBuilder'.
	ServiceType string `pulumi:"serviceType"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

type MongoDBCollectionGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type MongoDBCollectionGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsOutput() MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) ToMongoDBCollectionGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBCollectionGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type MongoDBCollectionGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutput() MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) ToMongoDBCollectionGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) Elem() MongoDBCollectionGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) MongoDBCollectionGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret MongoDBCollectionGetPropertiesResponseOptions
		return ret
	}).(MongoDBCollectionGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBCollectionGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type MongoDBCollectionGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndexResponse `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type MongoDBCollectionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutput() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

// Analytical TTL.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse { return v.Indexes }).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type MongoDBCollectionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Elem() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) MongoDBCollectionGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret MongoDBCollectionGetPropertiesResponseResource
		return ret
	}).(MongoDBCollectionGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) map[string]string {
		if v == nil {
			return nil
		}
		return v.ShardKey
	}).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *int `pulumi:"analyticalStorageTtl"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndex `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
}

// MongoDBCollectionResourceInput is an input type that accepts MongoDBCollectionResourceArgs and MongoDBCollectionResourceOutput values.
// You can construct a concrete instance of `MongoDBCollectionResourceInput` via:
//
//	MongoDBCollectionResourceArgs{...}
type MongoDBCollectionResourceInput interface {
	pulumi.Input

	ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput
	ToMongoDBCollectionResourceOutputWithContext(context.Context) MongoDBCollectionResourceOutput
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResourceArgs struct {
	// Analytical TTL.
	AnalyticalStorageTtl pulumi.IntPtrInput `pulumi:"analyticalStorageTtl"`
	// Name of the Cosmos DB MongoDB collection
	Id pulumi.StringInput `pulumi:"id"`
	// List of index keys
	Indexes MongoIndexArrayInput `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey pulumi.StringMapInput `pulumi:"shardKey"`
}

func (MongoDBCollectionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionResource)(nil)).Elem()
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput {
	return i.ToMongoDBCollectionResourceOutputWithContext(context.Background())
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutputWithContext(ctx context.Context) MongoDBCollectionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourceOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionResource)(nil)).Elem()
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput {
	return o
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourceOutputWithContext(ctx context.Context) MongoDBCollectionResourceOutput {
	return o
}

// Analytical TTL.
func (o MongoDBCollectionResourceOutput) AnalyticalStorageTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) *int { return v.AnalyticalStorageTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionResourceOutput) Indexes() MongoIndexArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) []MongoIndex { return v.Indexes }).(MongoIndexArrayOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

type MongoDBDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type MongoDBDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsOutput() MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutput() MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) ToMongoDBDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() MongoDBDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) MongoDBDatabaseGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret MongoDBDatabaseGetPropertiesResponseOptions
		return ret
	}).(MongoDBDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type MongoDBDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutput() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type MongoDBDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Elem() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) MongoDBDatabaseGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret MongoDBDatabaseGetPropertiesResponseResource
		return ret
	}).(MongoDBDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResource struct {
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
}

// MongoDBDatabaseResourceInput is an input type that accepts MongoDBDatabaseResourceArgs and MongoDBDatabaseResourceOutput values.
// You can construct a concrete instance of `MongoDBDatabaseResourceInput` via:
//
//	MongoDBDatabaseResourceArgs{...}
type MongoDBDatabaseResourceInput interface {
	pulumi.Input

	ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput
	ToMongoDBDatabaseResourceOutputWithContext(context.Context) MongoDBDatabaseResourceOutput
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResourceArgs struct {
	// Name of the Cosmos DB MongoDB database
	Id pulumi.StringInput `pulumi:"id"`
}

func (MongoDBDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseResource)(nil)).Elem()
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput {
	return i.ToMongoDBDatabaseResourceOutputWithContext(context.Background())
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourceOutput)
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseResource)(nil)).Elem()
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput {
	return o
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseResourceOutput {
	return o
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndex struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeys `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptions `pulumi:"options"`
}

// MongoIndexInput is an input type that accepts MongoIndexArgs and MongoIndexOutput values.
// You can construct a concrete instance of `MongoIndexInput` via:
//
//	MongoIndexArgs{...}
type MongoIndexInput interface {
	pulumi.Input

	ToMongoIndexOutput() MongoIndexOutput
	ToMongoIndexOutputWithContext(context.Context) MongoIndexOutput
}

// Cosmos DB MongoDB collection index key
type MongoIndexArgs struct {
	// Cosmos DB MongoDB collection index keys
	Key MongoIndexKeysPtrInput `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options MongoIndexOptionsPtrInput `pulumi:"options"`
}

func (MongoIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndex)(nil)).Elem()
}

func (i MongoIndexArgs) ToMongoIndexOutput() MongoIndexOutput {
	return i.ToMongoIndexOutputWithContext(context.Background())
}

func (i MongoIndexArgs) ToMongoIndexOutputWithContext(ctx context.Context) MongoIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOutput)
}

// MongoIndexArrayInput is an input type that accepts MongoIndexArray and MongoIndexArrayOutput values.
// You can construct a concrete instance of `MongoIndexArrayInput` via:
//
//	MongoIndexArray{ MongoIndexArgs{...} }
type MongoIndexArrayInput interface {
	pulumi.Input

	ToMongoIndexArrayOutput() MongoIndexArrayOutput
	ToMongoIndexArrayOutputWithContext(context.Context) MongoIndexArrayOutput
}

type MongoIndexArray []MongoIndexInput

func (MongoIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndex)(nil)).Elem()
}

func (i MongoIndexArray) ToMongoIndexArrayOutput() MongoIndexArrayOutput {
	return i.ToMongoIndexArrayOutputWithContext(context.Background())
}

func (i MongoIndexArray) ToMongoIndexArrayOutputWithContext(ctx context.Context) MongoIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexArrayOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexOutput struct{ *pulumi.OutputState }

func (MongoIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndex)(nil)).Elem()
}

func (o MongoIndexOutput) ToMongoIndexOutput() MongoIndexOutput {
	return o
}

func (o MongoIndexOutput) ToMongoIndexOutputWithContext(ctx context.Context) MongoIndexOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexOutput) Key() MongoIndexKeysPtrOutput {
	return o.ApplyT(func(v MongoIndex) *MongoIndexKeys { return v.Key }).(MongoIndexKeysPtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexOutput) Options() MongoIndexOptionsPtrOutput {
	return o.ApplyT(func(v MongoIndex) *MongoIndexOptions { return v.Options }).(MongoIndexOptionsPtrOutput)
}

type MongoIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndex)(nil)).Elem()
}

func (o MongoIndexArrayOutput) ToMongoIndexArrayOutput() MongoIndexArrayOutput {
	return o
}

func (o MongoIndexArrayOutput) ToMongoIndexArrayOutputWithContext(ctx context.Context) MongoIndexArrayOutput {
	return o
}

func (o MongoIndexArrayOutput) Index(i pulumi.IntInput) MongoIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndex {
		return vs[0].([]MongoIndex)[vs[1].(int)]
	}).(MongoIndexOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeys struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// MongoIndexKeysInput is an input type that accepts MongoIndexKeysArgs and MongoIndexKeysOutput values.
// You can construct a concrete instance of `MongoIndexKeysInput` via:
//
//	MongoIndexKeysArgs{...}
type MongoIndexKeysInput interface {
	pulumi.Input

	ToMongoIndexKeysOutput() MongoIndexKeysOutput
	ToMongoIndexKeysOutputWithContext(context.Context) MongoIndexKeysOutput
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysArgs struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (MongoIndexKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeys)(nil)).Elem()
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutput() MongoIndexKeysOutput {
	return i.ToMongoIndexKeysOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutputWithContext(ctx context.Context) MongoIndexKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput)
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput).ToMongoIndexKeysPtrOutputWithContext(ctx)
}

// MongoIndexKeysPtrInput is an input type that accepts MongoIndexKeysArgs, MongoIndexKeysPtr and MongoIndexKeysPtrOutput values.
// You can construct a concrete instance of `MongoIndexKeysPtrInput` via:
//
//	        MongoIndexKeysArgs{...}
//
//	or:
//
//	        nil
type MongoIndexKeysPtrInput interface {
	pulumi.Input

	ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput
	ToMongoIndexKeysPtrOutputWithContext(context.Context) MongoIndexKeysPtrOutput
}

type mongoIndexKeysPtrType MongoIndexKeysArgs

func MongoIndexKeysPtr(v *MongoIndexKeysArgs) MongoIndexKeysPtrInput {
	return (*mongoIndexKeysPtrType)(v)
}

func (*mongoIndexKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeys)(nil)).Elem()
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysPtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeys)(nil)).Elem()
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysOutput() MongoIndexKeysOutput {
	return o
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysOutputWithContext(ctx context.Context) MongoIndexKeysOutput {
	return o
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return o.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoIndexKeys) *MongoIndexKeys {
		return &v
	}).(MongoIndexKeysPtrOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeys) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysPtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeys)(nil)).Elem()
}

func (o MongoIndexKeysPtrOutput) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return o
}

func (o MongoIndexKeysPtrOutput) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return o
}

func (o MongoIndexKeysPtrOutput) Elem() MongoIndexKeysOutput {
	return o.ApplyT(func(v *MongoIndexKeys) MongoIndexKeys {
		if v != nil {
			return *v
		}
		var ret MongoIndexKeys
		return ret
	}).(MongoIndexKeysOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeys) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponse struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutput() MongoIndexKeysResponseOutput {
	return o
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutputWithContext(ctx context.Context) MongoIndexKeysResponseOutput {
	return o
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeysResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) Elem() MongoIndexKeysResponseOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) MongoIndexKeysResponse {
		if v != nil {
			return *v
		}
		var ret MongoIndexKeysResponse
		return ret
	}).(MongoIndexKeysResponseOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponsePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptions struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// MongoIndexOptionsInput is an input type that accepts MongoIndexOptionsArgs and MongoIndexOptionsOutput values.
// You can construct a concrete instance of `MongoIndexOptionsInput` via:
//
//	MongoIndexOptionsArgs{...}
type MongoIndexOptionsInput interface {
	pulumi.Input

	ToMongoIndexOptionsOutput() MongoIndexOptionsOutput
	ToMongoIndexOptionsOutputWithContext(context.Context) MongoIndexOptionsOutput
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsArgs struct {
	// Expire after seconds
	ExpireAfterSeconds pulumi.IntPtrInput `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoIndexOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptions)(nil)).Elem()
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutput() MongoIndexOptionsOutput {
	return i.ToMongoIndexOptionsOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutputWithContext(ctx context.Context) MongoIndexOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput)
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput).ToMongoIndexOptionsPtrOutputWithContext(ctx)
}

// MongoIndexOptionsPtrInput is an input type that accepts MongoIndexOptionsArgs, MongoIndexOptionsPtr and MongoIndexOptionsPtrOutput values.
// You can construct a concrete instance of `MongoIndexOptionsPtrInput` via:
//
//	        MongoIndexOptionsArgs{...}
//
//	or:
//
//	        nil
type MongoIndexOptionsPtrInput interface {
	pulumi.Input

	ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput
	ToMongoIndexOptionsPtrOutputWithContext(context.Context) MongoIndexOptionsPtrOutput
}

type mongoIndexOptionsPtrType MongoIndexOptionsArgs

func MongoIndexOptionsPtr(v *MongoIndexOptionsArgs) MongoIndexOptionsPtrInput {
	return (*mongoIndexOptionsPtrType)(v)
}

func (*mongoIndexOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptions)(nil)).Elem()
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptions)(nil)).Elem()
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsOutput() MongoIndexOptionsOutput {
	return o
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsOutputWithContext(ctx context.Context) MongoIndexOptionsOutput {
	return o
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return o.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoIndexOptions) *MongoIndexOptions {
		return &v
	}).(MongoIndexOptionsPtrOutput)
}

// Expire after seconds
func (o MongoIndexOptionsOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptions) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptions) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptions)(nil)).Elem()
}

func (o MongoIndexOptionsPtrOutput) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return o
}

func (o MongoIndexOptionsPtrOutput) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return o
}

func (o MongoIndexOptionsPtrOutput) Elem() MongoIndexOptionsOutput {
	return o.ApplyT(func(v *MongoIndexOptions) MongoIndexOptions {
		if v != nil {
			return *v
		}
		var ret MongoIndexOptions
		return ret
	}).(MongoIndexOptionsOutput)
}

// Expire after seconds
func (o MongoIndexOptionsPtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptions) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsPtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponse struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutput() MongoIndexOptionsResponseOutput {
	return o
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutputWithContext(ctx context.Context) MongoIndexOptionsResponseOutput {
	return o
}

// Expire after seconds
func (o MongoIndexOptionsResponseOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponseOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) Elem() MongoIndexOptionsResponseOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) MongoIndexOptionsResponse {
		if v != nil {
			return *v
		}
		var ret MongoIndexOptionsResponse
		return ret
	}).(MongoIndexOptionsResponseOutput)
}

// Expire after seconds
func (o MongoIndexOptionsResponsePtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponsePtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponse struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeysResponse `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptionsResponse `pulumi:"options"`
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutput() MongoIndexResponseOutput {
	return o
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutputWithContext(ctx context.Context) MongoIndexResponseOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexResponseOutput) Key() MongoIndexKeysResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexKeysResponse { return v.Key }).(MongoIndexKeysResponsePtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexResponseOutput) Options() MongoIndexOptionsResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexOptionsResponse { return v.Options }).(MongoIndexOptionsResponsePtrOutput)
}

type MongoIndexResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutput() MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutputWithContext(ctx context.Context) MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) Index(i pulumi.IntInput) MongoIndexResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndexResponse {
		return vs[0].([]MongoIndexResponse)[vs[1].(int)]
	}).(MongoIndexResponseOutput)
}

// The object representing periodic mode backup policy.
type PeriodicModeBackupPolicy struct {
	// The object representing the state of the migration between the backup policies.
	MigrationState *BackupPolicyMigrationState `pulumi:"migrationState"`
	// Configuration values for periodic mode backup
	PeriodicModeProperties *PeriodicModeProperties `pulumi:"periodicModeProperties"`
	// Describes the mode of backups.
	// Expected value is 'Periodic'.
	Type string `pulumi:"type"`
}

// The object representing periodic mode backup policy.
type PeriodicModeBackupPolicyResponse struct {
	// The object representing the state of the migration between the backup policies.
	MigrationState *BackupPolicyMigrationStateResponse `pulumi:"migrationState"`
	// Configuration values for periodic mode backup
	PeriodicModeProperties *PeriodicModePropertiesResponse `pulumi:"periodicModeProperties"`
	// Describes the mode of backups.
	// Expected value is 'Periodic'.
	Type string `pulumi:"type"`
}

// Configuration values for periodic mode backup
type PeriodicModeProperties struct {
	// An integer representing the interval in minutes between two backups
	BackupIntervalInMinutes *int `pulumi:"backupIntervalInMinutes"`
	// An integer representing the time (in hours) that each backup is retained
	BackupRetentionIntervalInHours *int `pulumi:"backupRetentionIntervalInHours"`
	// Enum to indicate type of backup residency
	BackupStorageRedundancy *string `pulumi:"backupStorageRedundancy"`
}

// Configuration values for periodic mode backup
type PeriodicModePropertiesResponse struct {
	// An integer representing the interval in minutes between two backups
	BackupIntervalInMinutes *int `pulumi:"backupIntervalInMinutes"`
	// An integer representing the time (in hours) that each backup is retained
	BackupRetentionIntervalInHours *int `pulumi:"backupRetentionIntervalInHours"`
	// Enum to indicate type of backup residency
	BackupStorageRedundancy *string `pulumi:"backupStorageRedundancy"`
}

// The set of data plane operations permitted through this Role Definition.
type Permission struct {
	// An array of data actions that are allowed.
	DataActions []string `pulumi:"dataActions"`
	// An array of data actions that are denied.
	NotDataActions []string `pulumi:"notDataActions"`
}

// PermissionInput is an input type that accepts PermissionArgs and PermissionOutput values.
// You can construct a concrete instance of `PermissionInput` via:
//
//	PermissionArgs{...}
type PermissionInput interface {
	pulumi.Input

	ToPermissionOutput() PermissionOutput
	ToPermissionOutputWithContext(context.Context) PermissionOutput
}

// The set of data plane operations permitted through this Role Definition.
type PermissionArgs struct {
	// An array of data actions that are allowed.
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	// An array of data actions that are denied.
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (PermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Permission)(nil)).Elem()
}

func (i PermissionArgs) ToPermissionOutput() PermissionOutput {
	return i.ToPermissionOutputWithContext(context.Background())
}

func (i PermissionArgs) ToPermissionOutputWithContext(ctx context.Context) PermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionOutput)
}

// PermissionArrayInput is an input type that accepts PermissionArray and PermissionArrayOutput values.
// You can construct a concrete instance of `PermissionArrayInput` via:
//
//	PermissionArray{ PermissionArgs{...} }
type PermissionArrayInput interface {
	pulumi.Input

	ToPermissionArrayOutput() PermissionArrayOutput
	ToPermissionArrayOutputWithContext(context.Context) PermissionArrayOutput
}

type PermissionArray []PermissionInput

func (PermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Permission)(nil)).Elem()
}

func (i PermissionArray) ToPermissionArrayOutput() PermissionArrayOutput {
	return i.ToPermissionArrayOutputWithContext(context.Background())
}

func (i PermissionArray) ToPermissionArrayOutputWithContext(ctx context.Context) PermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionArrayOutput)
}

// The set of data plane operations permitted through this Role Definition.
type PermissionOutput struct{ *pulumi.OutputState }

func (PermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Permission)(nil)).Elem()
}

func (o PermissionOutput) ToPermissionOutput() PermissionOutput {
	return o
}

func (o PermissionOutput) ToPermissionOutputWithContext(ctx context.Context) PermissionOutput {
	return o
}

// An array of data actions that are allowed.
func (o PermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

// An array of data actions that are denied.
func (o PermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Permission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type PermissionArrayOutput struct{ *pulumi.OutputState }

func (PermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Permission)(nil)).Elem()
}

func (o PermissionArrayOutput) ToPermissionArrayOutput() PermissionArrayOutput {
	return o
}

func (o PermissionArrayOutput) ToPermissionArrayOutputWithContext(ctx context.Context) PermissionArrayOutput {
	return o
}

func (o PermissionArrayOutput) Index(i pulumi.IntInput) PermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Permission {
		return vs[0].([]Permission)[vs[1].(int)]
	}).(PermissionOutput)
}

// The set of data plane operations permitted through this Role Definition.
type PermissionResponse struct {
	// An array of data actions that are allowed.
	DataActions []string `pulumi:"dataActions"`
	// An array of data actions that are denied.
	NotDataActions []string `pulumi:"notDataActions"`
}

// The set of data plane operations permitted through this Role Definition.
type PermissionResponseOutput struct{ *pulumi.OutputState }

func (PermissionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionResponse)(nil)).Elem()
}

func (o PermissionResponseOutput) ToPermissionResponseOutput() PermissionResponseOutput {
	return o
}

func (o PermissionResponseOutput) ToPermissionResponseOutputWithContext(ctx context.Context) PermissionResponseOutput {
	return o
}

// An array of data actions that are allowed.
func (o PermissionResponseOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

// An array of data actions that are denied.
func (o PermissionResponseOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionResponse) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type PermissionResponseArrayOutput struct{ *pulumi.OutputState }

func (PermissionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PermissionResponse)(nil)).Elem()
}

func (o PermissionResponseArrayOutput) ToPermissionResponseArrayOutput() PermissionResponseArrayOutput {
	return o
}

func (o PermissionResponseArrayOutput) ToPermissionResponseArrayOutputWithContext(ctx context.Context) PermissionResponseArrayOutput {
	return o
}

func (o PermissionResponseArrayOutput) Index(i pulumi.IntInput) PermissionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PermissionResponse {
		return vs[0].([]PermissionResponse)[vs[1].(int)]
	}).(PermissionResponseOutput)
}

// A private endpoint connection
type PrivateEndpointConnectionResponse struct {
	// Group id of the private endpoint.
	GroupId *string `pulumi:"groupId"`
	// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
	Id string `pulumi:"id"`
	// The name of the resource
	Name string `pulumi:"name"`
	// Private endpoint which the connection belongs to.
	PrivateEndpoint *PrivateEndpointPropertyResponse `pulumi:"privateEndpoint"`
	// Connection State of the Private Endpoint Connection.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStatePropertyResponse `pulumi:"privateLinkServiceConnectionState"`
	// Provisioning state of the private endpoint.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
	Type string `pulumi:"type"`
}

// A private endpoint connection
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// Group id of the private endpoint.
func (o PrivateEndpointConnectionResponseOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the resource
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private endpoint which the connection belongs to.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointPropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateEndpointPropertyResponse { return v.PrivateEndpoint }).(PrivateEndpointPropertyResponsePtrOutput)
}

// Connection State of the Private Endpoint Connection.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStatePropertyResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePropertyResponsePtrOutput)
}

// Provisioning state of the private endpoint.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Private endpoint which the connection belongs to.
type PrivateEndpointProperty struct {
	// Resource id of the private endpoint.
	Id *string `pulumi:"id"`
}

// PrivateEndpointPropertyInput is an input type that accepts PrivateEndpointPropertyArgs and PrivateEndpointPropertyOutput values.
// You can construct a concrete instance of `PrivateEndpointPropertyInput` via:
//
//	PrivateEndpointPropertyArgs{...}
type PrivateEndpointPropertyInput interface {
	pulumi.Input

	ToPrivateEndpointPropertyOutput() PrivateEndpointPropertyOutput
	ToPrivateEndpointPropertyOutputWithContext(context.Context) PrivateEndpointPropertyOutput
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyArgs struct {
	// Resource id of the private endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (PrivateEndpointPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointProperty)(nil)).Elem()
}

func (i PrivateEndpointPropertyArgs) ToPrivateEndpointPropertyOutput() PrivateEndpointPropertyOutput {
	return i.ToPrivateEndpointPropertyOutputWithContext(context.Background())
}

func (i PrivateEndpointPropertyArgs) ToPrivateEndpointPropertyOutputWithContext(ctx context.Context) PrivateEndpointPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertyOutput)
}

func (i PrivateEndpointPropertyArgs) ToPrivateEndpointPropertyPtrOutput() PrivateEndpointPropertyPtrOutput {
	return i.ToPrivateEndpointPropertyPtrOutputWithContext(context.Background())
}

func (i PrivateEndpointPropertyArgs) ToPrivateEndpointPropertyPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertyOutput).ToPrivateEndpointPropertyPtrOutputWithContext(ctx)
}

// PrivateEndpointPropertyPtrInput is an input type that accepts PrivateEndpointPropertyArgs, PrivateEndpointPropertyPtr and PrivateEndpointPropertyPtrOutput values.
// You can construct a concrete instance of `PrivateEndpointPropertyPtrInput` via:
//
//	        PrivateEndpointPropertyArgs{...}
//
//	or:
//
//	        nil
type PrivateEndpointPropertyPtrInput interface {
	pulumi.Input

	ToPrivateEndpointPropertyPtrOutput() PrivateEndpointPropertyPtrOutput
	ToPrivateEndpointPropertyPtrOutputWithContext(context.Context) PrivateEndpointPropertyPtrOutput
}

type privateEndpointPropertyPtrType PrivateEndpointPropertyArgs

func PrivateEndpointPropertyPtr(v *PrivateEndpointPropertyArgs) PrivateEndpointPropertyPtrInput {
	return (*privateEndpointPropertyPtrType)(v)
}

func (*privateEndpointPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointProperty)(nil)).Elem()
}

func (i *privateEndpointPropertyPtrType) ToPrivateEndpointPropertyPtrOutput() PrivateEndpointPropertyPtrOutput {
	return i.ToPrivateEndpointPropertyPtrOutputWithContext(context.Background())
}

func (i *privateEndpointPropertyPtrType) ToPrivateEndpointPropertyPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointPropertyPtrOutput)
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointProperty)(nil)).Elem()
}

func (o PrivateEndpointPropertyOutput) ToPrivateEndpointPropertyOutput() PrivateEndpointPropertyOutput {
	return o
}

func (o PrivateEndpointPropertyOutput) ToPrivateEndpointPropertyOutputWithContext(ctx context.Context) PrivateEndpointPropertyOutput {
	return o
}

func (o PrivateEndpointPropertyOutput) ToPrivateEndpointPropertyPtrOutput() PrivateEndpointPropertyPtrOutput {
	return o.ToPrivateEndpointPropertyPtrOutputWithContext(context.Background())
}

func (o PrivateEndpointPropertyOutput) ToPrivateEndpointPropertyPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateEndpointProperty) *PrivateEndpointProperty {
		return &v
	}).(PrivateEndpointPropertyPtrOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointProperty) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPropertyPtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointProperty)(nil)).Elem()
}

func (o PrivateEndpointPropertyPtrOutput) ToPrivateEndpointPropertyPtrOutput() PrivateEndpointPropertyPtrOutput {
	return o
}

func (o PrivateEndpointPropertyPtrOutput) ToPrivateEndpointPropertyPtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyPtrOutput {
	return o
}

func (o PrivateEndpointPropertyPtrOutput) Elem() PrivateEndpointPropertyOutput {
	return o.ApplyT(func(v *PrivateEndpointProperty) PrivateEndpointProperty {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointProperty
		return ret
	}).(PrivateEndpointPropertyOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointProperty) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyResponse struct {
	// Resource id of the private endpoint.
	Id *string `pulumi:"id"`
}

// Private endpoint which the connection belongs to.
type PrivateEndpointPropertyResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutput() PrivateEndpointPropertyResponseOutput {
	return o
}

func (o PrivateEndpointPropertyResponseOutput) ToPrivateEndpointPropertyResponseOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponseOutput {
	return o
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointPropertyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type PrivateEndpointPropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointPropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointPropertyResponse)(nil)).Elem()
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutput() PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) ToPrivateEndpointPropertyResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointPropertyResponsePtrOutput {
	return o
}

func (o PrivateEndpointPropertyResponsePtrOutput) Elem() PrivateEndpointPropertyResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) PrivateEndpointPropertyResponse {
		if v != nil {
			return *v
		}
		var ret PrivateEndpointPropertyResponse
		return ret
	}).(PrivateEndpointPropertyResponseOutput)
}

// Resource id of the private endpoint.
func (o PrivateEndpointPropertyResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointPropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStateProperty struct {
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStatePropertyInput is an input type that accepts PrivateLinkServiceConnectionStatePropertyArgs and PrivateLinkServiceConnectionStatePropertyOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePropertyInput` via:
//
//	PrivateLinkServiceConnectionStatePropertyArgs{...}
type PrivateLinkServiceConnectionStatePropertyInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePropertyOutput() PrivateLinkServiceConnectionStatePropertyOutput
	ToPrivateLinkServiceConnectionStatePropertyOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePropertyOutput
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyArgs struct {
	// The private link service connection description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The private link service connection status.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStatePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateProperty)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStatePropertyArgs) ToPrivateLinkServiceConnectionStatePropertyOutput() PrivateLinkServiceConnectionStatePropertyOutput {
	return i.ToPrivateLinkServiceConnectionStatePropertyOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStatePropertyArgs) ToPrivateLinkServiceConnectionStatePropertyOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePropertyOutput)
}

func (i PrivateLinkServiceConnectionStatePropertyArgs) ToPrivateLinkServiceConnectionStatePropertyPtrOutput() PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStatePropertyArgs) ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePropertyOutput).ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePropertyPtrInput is an input type that accepts PrivateLinkServiceConnectionStatePropertyArgs, PrivateLinkServiceConnectionStatePropertyPtr and PrivateLinkServiceConnectionStatePropertyPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePropertyPtrInput` via:
//
//	        PrivateLinkServiceConnectionStatePropertyArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkServiceConnectionStatePropertyPtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePropertyPtrOutput() PrivateLinkServiceConnectionStatePropertyPtrOutput
	ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePropertyPtrOutput
}

type privateLinkServiceConnectionStatePropertyPtrType PrivateLinkServiceConnectionStatePropertyArgs

func PrivateLinkServiceConnectionStatePropertyPtr(v *PrivateLinkServiceConnectionStatePropertyArgs) PrivateLinkServiceConnectionStatePropertyPtrInput {
	return (*privateLinkServiceConnectionStatePropertyPtrType)(v)
}

func (*privateLinkServiceConnectionStatePropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateProperty)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePropertyPtrType) ToPrivateLinkServiceConnectionStatePropertyPtrOutput() PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePropertyPtrType) ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePropertyPtrOutput)
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateProperty)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyOutput) ToPrivateLinkServiceConnectionStatePropertyOutput() PrivateLinkServiceConnectionStatePropertyOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyOutput) ToPrivateLinkServiceConnectionStatePropertyOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyOutput) ToPrivateLinkServiceConnectionStatePropertyPtrOutput() PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStatePropertyOutput) ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkServiceConnectionStateProperty) *PrivateLinkServiceConnectionStateProperty {
		return &v
	}).(PrivateLinkServiceConnectionStatePropertyPtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePropertyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateProperty) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateProperty) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePropertyPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateProperty)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyPtrOutput) ToPrivateLinkServiceConnectionStatePropertyPtrOutput() PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyPtrOutput) ToPrivateLinkServiceConnectionStatePropertyPtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyPtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyPtrOutput) Elem() PrivateLinkServiceConnectionStatePropertyOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateProperty) PrivateLinkServiceConnectionStateProperty {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStateProperty
		return ret
	}).(PrivateLinkServiceConnectionStatePropertyOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePropertyPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateProperty) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateProperty) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyResponse struct {
	// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
	ActionsRequired string `pulumi:"actionsRequired"`
	// The private link service connection description.
	Description *string `pulumi:"description"`
	// The private link service connection status.
	Status *string `pulumi:"status"`
}

// Connection State of the Private Endpoint Connection.
type PrivateLinkServiceConnectionStatePropertyResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponseOutput() PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ToPrivateLinkServiceConnectionStatePropertyResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o
}

// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) ActionsRequired() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) string { return v.ActionsRequired }).(pulumi.StringOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStatePropertyResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePropertyResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStatePropertyResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutput() PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ToPrivateLinkServiceConnectionStatePropertyResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePropertyResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Elem() PrivateLinkServiceConnectionStatePropertyResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) PrivateLinkServiceConnectionStatePropertyResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkServiceConnectionStatePropertyResponse
		return ret
	}).(PrivateLinkServiceConnectionStatePropertyResponseOutput)
}

// Any action that is required beyond basic workflow (approve/ reject/ disconnect)
func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The private link service connection description.
func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The private link service connection status.
func (o PrivateLinkServiceConnectionStatePropertyResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStatePropertyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The set of data plane operations permitted through this Role Definition.
type Privilege struct {
	// An array of actions that are allowed.
	Actions []string `pulumi:"actions"`
	// An Azure Cosmos DB Mongo DB Resource.
	Resource *PrivilegeResource `pulumi:"resource"`
}

// PrivilegeInput is an input type that accepts PrivilegeArgs and PrivilegeOutput values.
// You can construct a concrete instance of `PrivilegeInput` via:
//
//	PrivilegeArgs{...}
type PrivilegeInput interface {
	pulumi.Input

	ToPrivilegeOutput() PrivilegeOutput
	ToPrivilegeOutputWithContext(context.Context) PrivilegeOutput
}

// The set of data plane operations permitted through this Role Definition.
type PrivilegeArgs struct {
	// An array of actions that are allowed.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// An Azure Cosmos DB Mongo DB Resource.
	Resource PrivilegeResourcePtrInput `pulumi:"resource"`
}

func (PrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Privilege)(nil)).Elem()
}

func (i PrivilegeArgs) ToPrivilegeOutput() PrivilegeOutput {
	return i.ToPrivilegeOutputWithContext(context.Background())
}

func (i PrivilegeArgs) ToPrivilegeOutputWithContext(ctx context.Context) PrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeOutput)
}

// PrivilegeArrayInput is an input type that accepts PrivilegeArray and PrivilegeArrayOutput values.
// You can construct a concrete instance of `PrivilegeArrayInput` via:
//
//	PrivilegeArray{ PrivilegeArgs{...} }
type PrivilegeArrayInput interface {
	pulumi.Input

	ToPrivilegeArrayOutput() PrivilegeArrayOutput
	ToPrivilegeArrayOutputWithContext(context.Context) PrivilegeArrayOutput
}

type PrivilegeArray []PrivilegeInput

func (PrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Privilege)(nil)).Elem()
}

func (i PrivilegeArray) ToPrivilegeArrayOutput() PrivilegeArrayOutput {
	return i.ToPrivilegeArrayOutputWithContext(context.Background())
}

func (i PrivilegeArray) ToPrivilegeArrayOutputWithContext(ctx context.Context) PrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeArrayOutput)
}

// The set of data plane operations permitted through this Role Definition.
type PrivilegeOutput struct{ *pulumi.OutputState }

func (PrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Privilege)(nil)).Elem()
}

func (o PrivilegeOutput) ToPrivilegeOutput() PrivilegeOutput {
	return o
}

func (o PrivilegeOutput) ToPrivilegeOutputWithContext(ctx context.Context) PrivilegeOutput {
	return o
}

// An array of actions that are allowed.
func (o PrivilegeOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Privilege) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// An Azure Cosmos DB Mongo DB Resource.
func (o PrivilegeOutput) Resource() PrivilegeResourcePtrOutput {
	return o.ApplyT(func(v Privilege) *PrivilegeResource { return v.Resource }).(PrivilegeResourcePtrOutput)
}

type PrivilegeArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Privilege)(nil)).Elem()
}

func (o PrivilegeArrayOutput) ToPrivilegeArrayOutput() PrivilegeArrayOutput {
	return o
}

func (o PrivilegeArrayOutput) ToPrivilegeArrayOutputWithContext(ctx context.Context) PrivilegeArrayOutput {
	return o
}

func (o PrivilegeArrayOutput) Index(i pulumi.IntInput) PrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Privilege {
		return vs[0].([]Privilege)[vs[1].(int)]
	}).(PrivilegeOutput)
}

// An Azure Cosmos DB Mongo DB Resource.
type PrivilegeResource struct {
	// The collection name the role is applied.
	Collection *string `pulumi:"collection"`
	// The database name the role is applied.
	Db *string `pulumi:"db"`
}

// PrivilegeResourceInput is an input type that accepts PrivilegeResourceArgs and PrivilegeResourceOutput values.
// You can construct a concrete instance of `PrivilegeResourceInput` via:
//
//	PrivilegeResourceArgs{...}
type PrivilegeResourceInput interface {
	pulumi.Input

	ToPrivilegeResourceOutput() PrivilegeResourceOutput
	ToPrivilegeResourceOutputWithContext(context.Context) PrivilegeResourceOutput
}

// An Azure Cosmos DB Mongo DB Resource.
type PrivilegeResourceArgs struct {
	// The collection name the role is applied.
	Collection pulumi.StringPtrInput `pulumi:"collection"`
	// The database name the role is applied.
	Db pulumi.StringPtrInput `pulumi:"db"`
}

func (PrivilegeResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeResource)(nil)).Elem()
}

func (i PrivilegeResourceArgs) ToPrivilegeResourceOutput() PrivilegeResourceOutput {
	return i.ToPrivilegeResourceOutputWithContext(context.Background())
}

func (i PrivilegeResourceArgs) ToPrivilegeResourceOutputWithContext(ctx context.Context) PrivilegeResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeResourceOutput)
}

func (i PrivilegeResourceArgs) ToPrivilegeResourcePtrOutput() PrivilegeResourcePtrOutput {
	return i.ToPrivilegeResourcePtrOutputWithContext(context.Background())
}

func (i PrivilegeResourceArgs) ToPrivilegeResourcePtrOutputWithContext(ctx context.Context) PrivilegeResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeResourceOutput).ToPrivilegeResourcePtrOutputWithContext(ctx)
}

// PrivilegeResourcePtrInput is an input type that accepts PrivilegeResourceArgs, PrivilegeResourcePtr and PrivilegeResourcePtrOutput values.
// You can construct a concrete instance of `PrivilegeResourcePtrInput` via:
//
//	        PrivilegeResourceArgs{...}
//
//	or:
//
//	        nil
type PrivilegeResourcePtrInput interface {
	pulumi.Input

	ToPrivilegeResourcePtrOutput() PrivilegeResourcePtrOutput
	ToPrivilegeResourcePtrOutputWithContext(context.Context) PrivilegeResourcePtrOutput
}

type privilegeResourcePtrType PrivilegeResourceArgs

func PrivilegeResourcePtr(v *PrivilegeResourceArgs) PrivilegeResourcePtrInput {
	return (*privilegeResourcePtrType)(v)
}

func (*privilegeResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivilegeResource)(nil)).Elem()
}

func (i *privilegeResourcePtrType) ToPrivilegeResourcePtrOutput() PrivilegeResourcePtrOutput {
	return i.ToPrivilegeResourcePtrOutputWithContext(context.Background())
}

func (i *privilegeResourcePtrType) ToPrivilegeResourcePtrOutputWithContext(ctx context.Context) PrivilegeResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivilegeResourcePtrOutput)
}

// An Azure Cosmos DB Mongo DB Resource.
type PrivilegeResourceOutput struct{ *pulumi.OutputState }

func (PrivilegeResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeResource)(nil)).Elem()
}

func (o PrivilegeResourceOutput) ToPrivilegeResourceOutput() PrivilegeResourceOutput {
	return o
}

func (o PrivilegeResourceOutput) ToPrivilegeResourceOutputWithContext(ctx context.Context) PrivilegeResourceOutput {
	return o
}

func (o PrivilegeResourceOutput) ToPrivilegeResourcePtrOutput() PrivilegeResourcePtrOutput {
	return o.ToPrivilegeResourcePtrOutputWithContext(context.Background())
}

func (o PrivilegeResourceOutput) ToPrivilegeResourcePtrOutputWithContext(ctx context.Context) PrivilegeResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivilegeResource) *PrivilegeResource {
		return &v
	}).(PrivilegeResourcePtrOutput)
}

// The collection name the role is applied.
func (o PrivilegeResourceOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegeResource) *string { return v.Collection }).(pulumi.StringPtrOutput)
}

// The database name the role is applied.
func (o PrivilegeResourceOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegeResource) *string { return v.Db }).(pulumi.StringPtrOutput)
}

type PrivilegeResourcePtrOutput struct{ *pulumi.OutputState }

func (PrivilegeResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivilegeResource)(nil)).Elem()
}

func (o PrivilegeResourcePtrOutput) ToPrivilegeResourcePtrOutput() PrivilegeResourcePtrOutput {
	return o
}

func (o PrivilegeResourcePtrOutput) ToPrivilegeResourcePtrOutputWithContext(ctx context.Context) PrivilegeResourcePtrOutput {
	return o
}

func (o PrivilegeResourcePtrOutput) Elem() PrivilegeResourceOutput {
	return o.ApplyT(func(v *PrivilegeResource) PrivilegeResource {
		if v != nil {
			return *v
		}
		var ret PrivilegeResource
		return ret
	}).(PrivilegeResourceOutput)
}

// The collection name the role is applied.
func (o PrivilegeResourcePtrOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivilegeResource) *string {
		if v == nil {
			return nil
		}
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// The database name the role is applied.
func (o PrivilegeResourcePtrOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivilegeResource) *string {
		if v == nil {
			return nil
		}
		return v.Db
	}).(pulumi.StringPtrOutput)
}

// The set of data plane operations permitted through this Role Definition.
type PrivilegeResponse struct {
	// An array of actions that are allowed.
	Actions []string `pulumi:"actions"`
	// An Azure Cosmos DB Mongo DB Resource.
	Resource *PrivilegeResponseResource `pulumi:"resource"`
}

// The set of data plane operations permitted through this Role Definition.
type PrivilegeResponseOutput struct{ *pulumi.OutputState }

func (PrivilegeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeResponse)(nil)).Elem()
}

func (o PrivilegeResponseOutput) ToPrivilegeResponseOutput() PrivilegeResponseOutput {
	return o
}

func (o PrivilegeResponseOutput) ToPrivilegeResponseOutputWithContext(ctx context.Context) PrivilegeResponseOutput {
	return o
}

// An array of actions that are allowed.
func (o PrivilegeResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivilegeResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// An Azure Cosmos DB Mongo DB Resource.
func (o PrivilegeResponseOutput) Resource() PrivilegeResponseResourcePtrOutput {
	return o.ApplyT(func(v PrivilegeResponse) *PrivilegeResponseResource { return v.Resource }).(PrivilegeResponseResourcePtrOutput)
}

type PrivilegeResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivilegeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivilegeResponse)(nil)).Elem()
}

func (o PrivilegeResponseArrayOutput) ToPrivilegeResponseArrayOutput() PrivilegeResponseArrayOutput {
	return o
}

func (o PrivilegeResponseArrayOutput) ToPrivilegeResponseArrayOutputWithContext(ctx context.Context) PrivilegeResponseArrayOutput {
	return o
}

func (o PrivilegeResponseArrayOutput) Index(i pulumi.IntInput) PrivilegeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivilegeResponse {
		return vs[0].([]PrivilegeResponse)[vs[1].(int)]
	}).(PrivilegeResponseOutput)
}

// An Azure Cosmos DB Mongo DB Resource.
type PrivilegeResponseResource struct {
	// The collection name the role is applied.
	Collection *string `pulumi:"collection"`
	// The database name the role is applied.
	Db *string `pulumi:"db"`
}

// An Azure Cosmos DB Mongo DB Resource.
type PrivilegeResponseResourceOutput struct{ *pulumi.OutputState }

func (PrivilegeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivilegeResponseResource)(nil)).Elem()
}

func (o PrivilegeResponseResourceOutput) ToPrivilegeResponseResourceOutput() PrivilegeResponseResourceOutput {
	return o
}

func (o PrivilegeResponseResourceOutput) ToPrivilegeResponseResourceOutputWithContext(ctx context.Context) PrivilegeResponseResourceOutput {
	return o
}

// The collection name the role is applied.
func (o PrivilegeResponseResourceOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegeResponseResource) *string { return v.Collection }).(pulumi.StringPtrOutput)
}

// The database name the role is applied.
func (o PrivilegeResponseResourceOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivilegeResponseResource) *string { return v.Db }).(pulumi.StringPtrOutput)
}

type PrivilegeResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (PrivilegeResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivilegeResponseResource)(nil)).Elem()
}

func (o PrivilegeResponseResourcePtrOutput) ToPrivilegeResponseResourcePtrOutput() PrivilegeResponseResourcePtrOutput {
	return o
}

func (o PrivilegeResponseResourcePtrOutput) ToPrivilegeResponseResourcePtrOutputWithContext(ctx context.Context) PrivilegeResponseResourcePtrOutput {
	return o
}

func (o PrivilegeResponseResourcePtrOutput) Elem() PrivilegeResponseResourceOutput {
	return o.ApplyT(func(v *PrivilegeResponseResource) PrivilegeResponseResource {
		if v != nil {
			return *v
		}
		var ret PrivilegeResponseResource
		return ret
	}).(PrivilegeResponseResourceOutput)
}

// The collection name the role is applied.
func (o PrivilegeResponseResourcePtrOutput) Collection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivilegeResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Collection
	}).(pulumi.StringPtrOutput)
}

// The database name the role is applied.
func (o PrivilegeResponseResourcePtrOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivilegeResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Db
	}).(pulumi.StringPtrOutput)
}

// Parameters to indicate the information about the restore.
type RestoreParameters struct {
	// List of specific databases available for restore.
	DatabasesToRestore []DatabaseRestoreResource `pulumi:"databasesToRestore"`
	// List of specific gremlin databases available for restore.
	GremlinDatabasesToRestore []GremlinDatabaseRestoreResource `pulumi:"gremlinDatabasesToRestore"`
	// Describes the mode of the restore.
	RestoreMode *string `pulumi:"restoreMode"`
	// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
	RestoreSource *string `pulumi:"restoreSource"`
	// Time to which the account has to be restored (ISO-8601 format).
	RestoreTimestampInUtc *string `pulumi:"restoreTimestampInUtc"`
	// List of specific tables available for restore.
	TablesToRestore []string `pulumi:"tablesToRestore"`
}

// RestoreParametersInput is an input type that accepts RestoreParametersArgs and RestoreParametersOutput values.
// You can construct a concrete instance of `RestoreParametersInput` via:
//
//	RestoreParametersArgs{...}
type RestoreParametersInput interface {
	pulumi.Input

	ToRestoreParametersOutput() RestoreParametersOutput
	ToRestoreParametersOutputWithContext(context.Context) RestoreParametersOutput
}

// Parameters to indicate the information about the restore.
type RestoreParametersArgs struct {
	// List of specific databases available for restore.
	DatabasesToRestore DatabaseRestoreResourceArrayInput `pulumi:"databasesToRestore"`
	// List of specific gremlin databases available for restore.
	GremlinDatabasesToRestore GremlinDatabaseRestoreResourceArrayInput `pulumi:"gremlinDatabasesToRestore"`
	// Describes the mode of the restore.
	RestoreMode pulumi.StringPtrInput `pulumi:"restoreMode"`
	// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
	RestoreSource pulumi.StringPtrInput `pulumi:"restoreSource"`
	// Time to which the account has to be restored (ISO-8601 format).
	RestoreTimestampInUtc pulumi.StringPtrInput `pulumi:"restoreTimestampInUtc"`
	// List of specific tables available for restore.
	TablesToRestore pulumi.StringArrayInput `pulumi:"tablesToRestore"`
}

func (RestoreParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreParameters)(nil)).Elem()
}

func (i RestoreParametersArgs) ToRestoreParametersOutput() RestoreParametersOutput {
	return i.ToRestoreParametersOutputWithContext(context.Background())
}

func (i RestoreParametersArgs) ToRestoreParametersOutputWithContext(ctx context.Context) RestoreParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreParametersOutput)
}

func (i RestoreParametersArgs) ToRestoreParametersPtrOutput() RestoreParametersPtrOutput {
	return i.ToRestoreParametersPtrOutputWithContext(context.Background())
}

func (i RestoreParametersArgs) ToRestoreParametersPtrOutputWithContext(ctx context.Context) RestoreParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreParametersOutput).ToRestoreParametersPtrOutputWithContext(ctx)
}

// RestoreParametersPtrInput is an input type that accepts RestoreParametersArgs, RestoreParametersPtr and RestoreParametersPtrOutput values.
// You can construct a concrete instance of `RestoreParametersPtrInput` via:
//
//	        RestoreParametersArgs{...}
//
//	or:
//
//	        nil
type RestoreParametersPtrInput interface {
	pulumi.Input

	ToRestoreParametersPtrOutput() RestoreParametersPtrOutput
	ToRestoreParametersPtrOutputWithContext(context.Context) RestoreParametersPtrOutput
}

type restoreParametersPtrType RestoreParametersArgs

func RestoreParametersPtr(v *RestoreParametersArgs) RestoreParametersPtrInput {
	return (*restoreParametersPtrType)(v)
}

func (*restoreParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreParameters)(nil)).Elem()
}

func (i *restoreParametersPtrType) ToRestoreParametersPtrOutput() RestoreParametersPtrOutput {
	return i.ToRestoreParametersPtrOutputWithContext(context.Background())
}

func (i *restoreParametersPtrType) ToRestoreParametersPtrOutputWithContext(ctx context.Context) RestoreParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreParametersPtrOutput)
}

// Parameters to indicate the information about the restore.
type RestoreParametersOutput struct{ *pulumi.OutputState }

func (RestoreParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreParameters)(nil)).Elem()
}

func (o RestoreParametersOutput) ToRestoreParametersOutput() RestoreParametersOutput {
	return o
}

func (o RestoreParametersOutput) ToRestoreParametersOutputWithContext(ctx context.Context) RestoreParametersOutput {
	return o
}

func (o RestoreParametersOutput) ToRestoreParametersPtrOutput() RestoreParametersPtrOutput {
	return o.ToRestoreParametersPtrOutputWithContext(context.Background())
}

func (o RestoreParametersOutput) ToRestoreParametersPtrOutputWithContext(ctx context.Context) RestoreParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestoreParameters) *RestoreParameters {
		return &v
	}).(RestoreParametersPtrOutput)
}

// List of specific databases available for restore.
func (o RestoreParametersOutput) DatabasesToRestore() DatabaseRestoreResourceArrayOutput {
	return o.ApplyT(func(v RestoreParameters) []DatabaseRestoreResource { return v.DatabasesToRestore }).(DatabaseRestoreResourceArrayOutput)
}

// List of specific gremlin databases available for restore.
func (o RestoreParametersOutput) GremlinDatabasesToRestore() GremlinDatabaseRestoreResourceArrayOutput {
	return o.ApplyT(func(v RestoreParameters) []GremlinDatabaseRestoreResource { return v.GremlinDatabasesToRestore }).(GremlinDatabaseRestoreResourceArrayOutput)
}

// Describes the mode of the restore.
func (o RestoreParametersOutput) RestoreMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParameters) *string { return v.RestoreMode }).(pulumi.StringPtrOutput)
}

// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
func (o RestoreParametersOutput) RestoreSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParameters) *string { return v.RestoreSource }).(pulumi.StringPtrOutput)
}

// Time to which the account has to be restored (ISO-8601 format).
func (o RestoreParametersOutput) RestoreTimestampInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParameters) *string { return v.RestoreTimestampInUtc }).(pulumi.StringPtrOutput)
}

// List of specific tables available for restore.
func (o RestoreParametersOutput) TablesToRestore() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreParameters) []string { return v.TablesToRestore }).(pulumi.StringArrayOutput)
}

type RestoreParametersPtrOutput struct{ *pulumi.OutputState }

func (RestoreParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreParameters)(nil)).Elem()
}

func (o RestoreParametersPtrOutput) ToRestoreParametersPtrOutput() RestoreParametersPtrOutput {
	return o
}

func (o RestoreParametersPtrOutput) ToRestoreParametersPtrOutputWithContext(ctx context.Context) RestoreParametersPtrOutput {
	return o
}

func (o RestoreParametersPtrOutput) Elem() RestoreParametersOutput {
	return o.ApplyT(func(v *RestoreParameters) RestoreParameters {
		if v != nil {
			return *v
		}
		var ret RestoreParameters
		return ret
	}).(RestoreParametersOutput)
}

// List of specific databases available for restore.
func (o RestoreParametersPtrOutput) DatabasesToRestore() DatabaseRestoreResourceArrayOutput {
	return o.ApplyT(func(v *RestoreParameters) []DatabaseRestoreResource {
		if v == nil {
			return nil
		}
		return v.DatabasesToRestore
	}).(DatabaseRestoreResourceArrayOutput)
}

// List of specific gremlin databases available for restore.
func (o RestoreParametersPtrOutput) GremlinDatabasesToRestore() GremlinDatabaseRestoreResourceArrayOutput {
	return o.ApplyT(func(v *RestoreParameters) []GremlinDatabaseRestoreResource {
		if v == nil {
			return nil
		}
		return v.GremlinDatabasesToRestore
	}).(GremlinDatabaseRestoreResourceArrayOutput)
}

// Describes the mode of the restore.
func (o RestoreParametersPtrOutput) RestoreMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParameters) *string {
		if v == nil {
			return nil
		}
		return v.RestoreMode
	}).(pulumi.StringPtrOutput)
}

// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
func (o RestoreParametersPtrOutput) RestoreSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParameters) *string {
		if v == nil {
			return nil
		}
		return v.RestoreSource
	}).(pulumi.StringPtrOutput)
}

// Time to which the account has to be restored (ISO-8601 format).
func (o RestoreParametersPtrOutput) RestoreTimestampInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParameters) *string {
		if v == nil {
			return nil
		}
		return v.RestoreTimestampInUtc
	}).(pulumi.StringPtrOutput)
}

// List of specific tables available for restore.
func (o RestoreParametersPtrOutput) TablesToRestore() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreParameters) []string {
		if v == nil {
			return nil
		}
		return v.TablesToRestore
	}).(pulumi.StringArrayOutput)
}

// Parameters to indicate the information about the restore.
type RestoreParametersResponse struct {
	// List of specific databases available for restore.
	DatabasesToRestore []DatabaseRestoreResourceResponse `pulumi:"databasesToRestore"`
	// List of specific gremlin databases available for restore.
	GremlinDatabasesToRestore []GremlinDatabaseRestoreResourceResponse `pulumi:"gremlinDatabasesToRestore"`
	// Describes the mode of the restore.
	RestoreMode *string `pulumi:"restoreMode"`
	// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
	RestoreSource *string `pulumi:"restoreSource"`
	// Time to which the account has to be restored (ISO-8601 format).
	RestoreTimestampInUtc *string `pulumi:"restoreTimestampInUtc"`
	// List of specific tables available for restore.
	TablesToRestore []string `pulumi:"tablesToRestore"`
}

// Parameters to indicate the information about the restore.
type RestoreParametersResponseOutput struct{ *pulumi.OutputState }

func (RestoreParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreParametersResponse)(nil)).Elem()
}

func (o RestoreParametersResponseOutput) ToRestoreParametersResponseOutput() RestoreParametersResponseOutput {
	return o
}

func (o RestoreParametersResponseOutput) ToRestoreParametersResponseOutputWithContext(ctx context.Context) RestoreParametersResponseOutput {
	return o
}

// List of specific databases available for restore.
func (o RestoreParametersResponseOutput) DatabasesToRestore() DatabaseRestoreResourceResponseArrayOutput {
	return o.ApplyT(func(v RestoreParametersResponse) []DatabaseRestoreResourceResponse { return v.DatabasesToRestore }).(DatabaseRestoreResourceResponseArrayOutput)
}

// List of specific gremlin databases available for restore.
func (o RestoreParametersResponseOutput) GremlinDatabasesToRestore() GremlinDatabaseRestoreResourceResponseArrayOutput {
	return o.ApplyT(func(v RestoreParametersResponse) []GremlinDatabaseRestoreResourceResponse {
		return v.GremlinDatabasesToRestore
	}).(GremlinDatabaseRestoreResourceResponseArrayOutput)
}

// Describes the mode of the restore.
func (o RestoreParametersResponseOutput) RestoreMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParametersResponse) *string { return v.RestoreMode }).(pulumi.StringPtrOutput)
}

// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
func (o RestoreParametersResponseOutput) RestoreSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParametersResponse) *string { return v.RestoreSource }).(pulumi.StringPtrOutput)
}

// Time to which the account has to be restored (ISO-8601 format).
func (o RestoreParametersResponseOutput) RestoreTimestampInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RestoreParametersResponse) *string { return v.RestoreTimestampInUtc }).(pulumi.StringPtrOutput)
}

// List of specific tables available for restore.
func (o RestoreParametersResponseOutput) TablesToRestore() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestoreParametersResponse) []string { return v.TablesToRestore }).(pulumi.StringArrayOutput)
}

type RestoreParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RestoreParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreParametersResponse)(nil)).Elem()
}

func (o RestoreParametersResponsePtrOutput) ToRestoreParametersResponsePtrOutput() RestoreParametersResponsePtrOutput {
	return o
}

func (o RestoreParametersResponsePtrOutput) ToRestoreParametersResponsePtrOutputWithContext(ctx context.Context) RestoreParametersResponsePtrOutput {
	return o
}

func (o RestoreParametersResponsePtrOutput) Elem() RestoreParametersResponseOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) RestoreParametersResponse {
		if v != nil {
			return *v
		}
		var ret RestoreParametersResponse
		return ret
	}).(RestoreParametersResponseOutput)
}

// List of specific databases available for restore.
func (o RestoreParametersResponsePtrOutput) DatabasesToRestore() DatabaseRestoreResourceResponseArrayOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) []DatabaseRestoreResourceResponse {
		if v == nil {
			return nil
		}
		return v.DatabasesToRestore
	}).(DatabaseRestoreResourceResponseArrayOutput)
}

// List of specific gremlin databases available for restore.
func (o RestoreParametersResponsePtrOutput) GremlinDatabasesToRestore() GremlinDatabaseRestoreResourceResponseArrayOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) []GremlinDatabaseRestoreResourceResponse {
		if v == nil {
			return nil
		}
		return v.GremlinDatabasesToRestore
	}).(GremlinDatabaseRestoreResourceResponseArrayOutput)
}

// Describes the mode of the restore.
func (o RestoreParametersResponsePtrOutput) RestoreMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.RestoreMode
	}).(pulumi.StringPtrOutput)
}

// The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}
func (o RestoreParametersResponsePtrOutput) RestoreSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.RestoreSource
	}).(pulumi.StringPtrOutput)
}

// Time to which the account has to be restored (ISO-8601 format).
func (o RestoreParametersResponsePtrOutput) RestoreTimestampInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.RestoreTimestampInUtc
	}).(pulumi.StringPtrOutput)
}

// List of specific tables available for restore.
func (o RestoreParametersResponsePtrOutput) TablesToRestore() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RestoreParametersResponse) []string {
		if v == nil {
			return nil
		}
		return v.TablesToRestore
	}).(pulumi.StringArrayOutput)
}

// The set of roles permitted through this Role Definition.
type Role struct {
	// The database name the role is applied.
	Db *string `pulumi:"db"`
	// The role name.
	Role *string `pulumi:"role"`
}

// RoleInput is an input type that accepts RoleArgs and RoleOutput values.
// You can construct a concrete instance of `RoleInput` via:
//
//	RoleArgs{...}
type RoleInput interface {
	pulumi.Input

	ToRoleOutput() RoleOutput
	ToRoleOutputWithContext(context.Context) RoleOutput
}

// The set of roles permitted through this Role Definition.
type RoleArgs struct {
	// The database name the role is applied.
	Db pulumi.StringPtrInput `pulumi:"db"`
	// The role name.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (RoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Role)(nil)).Elem()
}

func (i RoleArgs) ToRoleOutput() RoleOutput {
	return i.ToRoleOutputWithContext(context.Background())
}

func (i RoleArgs) ToRoleOutputWithContext(ctx context.Context) RoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleOutput)
}

// RoleArrayInput is an input type that accepts RoleArray and RoleArrayOutput values.
// You can construct a concrete instance of `RoleArrayInput` via:
//
//	RoleArray{ RoleArgs{...} }
type RoleArrayInput interface {
	pulumi.Input

	ToRoleArrayOutput() RoleArrayOutput
	ToRoleArrayOutputWithContext(context.Context) RoleArrayOutput
}

type RoleArray []RoleInput

func (RoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Role)(nil)).Elem()
}

func (i RoleArray) ToRoleArrayOutput() RoleArrayOutput {
	return i.ToRoleArrayOutputWithContext(context.Background())
}

func (i RoleArray) ToRoleArrayOutputWithContext(ctx context.Context) RoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleArrayOutput)
}

// The set of roles permitted through this Role Definition.
type RoleOutput struct{ *pulumi.OutputState }

func (RoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Role)(nil)).Elem()
}

func (o RoleOutput) ToRoleOutput() RoleOutput {
	return o
}

func (o RoleOutput) ToRoleOutputWithContext(ctx context.Context) RoleOutput {
	return o
}

// The database name the role is applied.
func (o RoleOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Role) *string { return v.Db }).(pulumi.StringPtrOutput)
}

// The role name.
func (o RoleOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Role) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type RoleArrayOutput struct{ *pulumi.OutputState }

func (RoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Role)(nil)).Elem()
}

func (o RoleArrayOutput) ToRoleArrayOutput() RoleArrayOutput {
	return o
}

func (o RoleArrayOutput) ToRoleArrayOutputWithContext(ctx context.Context) RoleArrayOutput {
	return o
}

func (o RoleArrayOutput) Index(i pulumi.IntInput) RoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Role {
		return vs[0].([]Role)[vs[1].(int)]
	}).(RoleOutput)
}

// The set of roles permitted through this Role Definition.
type RoleResponse struct {
	// The database name the role is applied.
	Db *string `pulumi:"db"`
	// The role name.
	Role *string `pulumi:"role"`
}

// The set of roles permitted through this Role Definition.
type RoleResponseOutput struct{ *pulumi.OutputState }

func (RoleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleResponse)(nil)).Elem()
}

func (o RoleResponseOutput) ToRoleResponseOutput() RoleResponseOutput {
	return o
}

func (o RoleResponseOutput) ToRoleResponseOutputWithContext(ctx context.Context) RoleResponseOutput {
	return o
}

// The database name the role is applied.
func (o RoleResponseOutput) Db() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleResponse) *string { return v.Db }).(pulumi.StringPtrOutput)
}

// The role name.
func (o RoleResponseOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleResponse) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type RoleResponseArrayOutput struct{ *pulumi.OutputState }

func (RoleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleResponse)(nil)).Elem()
}

func (o RoleResponseArrayOutput) ToRoleResponseArrayOutput() RoleResponseArrayOutput {
	return o
}

func (o RoleResponseArrayOutput) ToRoleResponseArrayOutputWithContext(ctx context.Context) RoleResponseArrayOutput {
	return o
}

func (o RoleResponseArrayOutput) Index(i pulumi.IntInput) RoleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleResponse {
		return vs[0].([]RoleResponse)[vs[1].(int)]
	}).(RoleResponseOutput)
}

type SeedNode struct {
	// IP address of this seed node.
	IpAddress *string `pulumi:"ipAddress"`
}

// SeedNodeInput is an input type that accepts SeedNodeArgs and SeedNodeOutput values.
// You can construct a concrete instance of `SeedNodeInput` via:
//
//	SeedNodeArgs{...}
type SeedNodeInput interface {
	pulumi.Input

	ToSeedNodeOutput() SeedNodeOutput
	ToSeedNodeOutputWithContext(context.Context) SeedNodeOutput
}

type SeedNodeArgs struct {
	// IP address of this seed node.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (SeedNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SeedNode)(nil)).Elem()
}

func (i SeedNodeArgs) ToSeedNodeOutput() SeedNodeOutput {
	return i.ToSeedNodeOutputWithContext(context.Background())
}

func (i SeedNodeArgs) ToSeedNodeOutputWithContext(ctx context.Context) SeedNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeedNodeOutput)
}

func (i SeedNodeArgs) ToSeedNodePtrOutput() SeedNodePtrOutput {
	return i.ToSeedNodePtrOutputWithContext(context.Background())
}

func (i SeedNodeArgs) ToSeedNodePtrOutputWithContext(ctx context.Context) SeedNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeedNodeOutput).ToSeedNodePtrOutputWithContext(ctx)
}

// SeedNodePtrInput is an input type that accepts SeedNodeArgs, SeedNodePtr and SeedNodePtrOutput values.
// You can construct a concrete instance of `SeedNodePtrInput` via:
//
//	        SeedNodeArgs{...}
//
//	or:
//
//	        nil
type SeedNodePtrInput interface {
	pulumi.Input

	ToSeedNodePtrOutput() SeedNodePtrOutput
	ToSeedNodePtrOutputWithContext(context.Context) SeedNodePtrOutput
}

type seedNodePtrType SeedNodeArgs

func SeedNodePtr(v *SeedNodeArgs) SeedNodePtrInput {
	return (*seedNodePtrType)(v)
}

func (*seedNodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SeedNode)(nil)).Elem()
}

func (i *seedNodePtrType) ToSeedNodePtrOutput() SeedNodePtrOutput {
	return i.ToSeedNodePtrOutputWithContext(context.Background())
}

func (i *seedNodePtrType) ToSeedNodePtrOutputWithContext(ctx context.Context) SeedNodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeedNodePtrOutput)
}

// SeedNodeArrayInput is an input type that accepts SeedNodeArray and SeedNodeArrayOutput values.
// You can construct a concrete instance of `SeedNodeArrayInput` via:
//
//	SeedNodeArray{ SeedNodeArgs{...} }
type SeedNodeArrayInput interface {
	pulumi.Input

	ToSeedNodeArrayOutput() SeedNodeArrayOutput
	ToSeedNodeArrayOutputWithContext(context.Context) SeedNodeArrayOutput
}

type SeedNodeArray []SeedNodeInput

func (SeedNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeedNode)(nil)).Elem()
}

func (i SeedNodeArray) ToSeedNodeArrayOutput() SeedNodeArrayOutput {
	return i.ToSeedNodeArrayOutputWithContext(context.Background())
}

func (i SeedNodeArray) ToSeedNodeArrayOutputWithContext(ctx context.Context) SeedNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SeedNodeArrayOutput)
}

type SeedNodeOutput struct{ *pulumi.OutputState }

func (SeedNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeedNode)(nil)).Elem()
}

func (o SeedNodeOutput) ToSeedNodeOutput() SeedNodeOutput {
	return o
}

func (o SeedNodeOutput) ToSeedNodeOutputWithContext(ctx context.Context) SeedNodeOutput {
	return o
}

func (o SeedNodeOutput) ToSeedNodePtrOutput() SeedNodePtrOutput {
	return o.ToSeedNodePtrOutputWithContext(context.Background())
}

func (o SeedNodeOutput) ToSeedNodePtrOutputWithContext(ctx context.Context) SeedNodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SeedNode) *SeedNode {
		return &v
	}).(SeedNodePtrOutput)
}

// IP address of this seed node.
func (o SeedNodeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SeedNode) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type SeedNodePtrOutput struct{ *pulumi.OutputState }

func (SeedNodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeedNode)(nil)).Elem()
}

func (o SeedNodePtrOutput) ToSeedNodePtrOutput() SeedNodePtrOutput {
	return o
}

func (o SeedNodePtrOutput) ToSeedNodePtrOutputWithContext(ctx context.Context) SeedNodePtrOutput {
	return o
}

func (o SeedNodePtrOutput) Elem() SeedNodeOutput {
	return o.ApplyT(func(v *SeedNode) SeedNode {
		if v != nil {
			return *v
		}
		var ret SeedNode
		return ret
	}).(SeedNodeOutput)
}

// IP address of this seed node.
func (o SeedNodePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SeedNode) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

type SeedNodeArrayOutput struct{ *pulumi.OutputState }

func (SeedNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeedNode)(nil)).Elem()
}

func (o SeedNodeArrayOutput) ToSeedNodeArrayOutput() SeedNodeArrayOutput {
	return o
}

func (o SeedNodeArrayOutput) ToSeedNodeArrayOutputWithContext(ctx context.Context) SeedNodeArrayOutput {
	return o
}

func (o SeedNodeArrayOutput) Index(i pulumi.IntInput) SeedNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SeedNode {
		return vs[0].([]SeedNode)[vs[1].(int)]
	}).(SeedNodeOutput)
}

type SeedNodeResponse struct {
	// IP address of this seed node.
	IpAddress *string `pulumi:"ipAddress"`
}

type SeedNodeResponseOutput struct{ *pulumi.OutputState }

func (SeedNodeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SeedNodeResponse)(nil)).Elem()
}

func (o SeedNodeResponseOutput) ToSeedNodeResponseOutput() SeedNodeResponseOutput {
	return o
}

func (o SeedNodeResponseOutput) ToSeedNodeResponseOutputWithContext(ctx context.Context) SeedNodeResponseOutput {
	return o
}

// IP address of this seed node.
func (o SeedNodeResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SeedNodeResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type SeedNodeResponsePtrOutput struct{ *pulumi.OutputState }

func (SeedNodeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SeedNodeResponse)(nil)).Elem()
}

func (o SeedNodeResponsePtrOutput) ToSeedNodeResponsePtrOutput() SeedNodeResponsePtrOutput {
	return o
}

func (o SeedNodeResponsePtrOutput) ToSeedNodeResponsePtrOutputWithContext(ctx context.Context) SeedNodeResponsePtrOutput {
	return o
}

func (o SeedNodeResponsePtrOutput) Elem() SeedNodeResponseOutput {
	return o.ApplyT(func(v *SeedNodeResponse) SeedNodeResponse {
		if v != nil {
			return *v
		}
		var ret SeedNodeResponse
		return ret
	}).(SeedNodeResponseOutput)
}

// IP address of this seed node.
func (o SeedNodeResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SeedNodeResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

type SeedNodeResponseArrayOutput struct{ *pulumi.OutputState }

func (SeedNodeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SeedNodeResponse)(nil)).Elem()
}

func (o SeedNodeResponseArrayOutput) ToSeedNodeResponseArrayOutput() SeedNodeResponseArrayOutput {
	return o
}

func (o SeedNodeResponseArrayOutput) ToSeedNodeResponseArrayOutputWithContext(ctx context.Context) SeedNodeResponseArrayOutput {
	return o
}

func (o SeedNodeResponseArrayOutput) Index(i pulumi.IntInput) SeedNodeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SeedNodeResponse {
		return vs[0].([]SeedNodeResponse)[vs[1].(int)]
	}).(SeedNodeResponseOutput)
}

type SpatialSpec struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

// SpatialSpecInput is an input type that accepts SpatialSpecArgs and SpatialSpecOutput values.
// You can construct a concrete instance of `SpatialSpecInput` via:
//
//	SpatialSpecArgs{...}
type SpatialSpecInput interface {
	pulumi.Input

	ToSpatialSpecOutput() SpatialSpecOutput
	ToSpatialSpecOutputWithContext(context.Context) SpatialSpecOutput
}

type SpatialSpecArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// List of path's spatial type
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SpatialSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArgs) ToSpatialSpecOutput() SpatialSpecOutput {
	return i.ToSpatialSpecOutputWithContext(context.Background())
}

func (i SpatialSpecArgs) ToSpatialSpecOutputWithContext(ctx context.Context) SpatialSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecOutput)
}

// SpatialSpecArrayInput is an input type that accepts SpatialSpecArray and SpatialSpecArrayOutput values.
// You can construct a concrete instance of `SpatialSpecArrayInput` via:
//
//	SpatialSpecArray{ SpatialSpecArgs{...} }
type SpatialSpecArrayInput interface {
	pulumi.Input

	ToSpatialSpecArrayOutput() SpatialSpecArrayOutput
	ToSpatialSpecArrayOutputWithContext(context.Context) SpatialSpecArrayOutput
}

type SpatialSpecArray []SpatialSpecInput

func (SpatialSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutput() SpatialSpecArrayOutput {
	return i.ToSpatialSpecArrayOutputWithContext(context.Background())
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutputWithContext(ctx context.Context) SpatialSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecArrayOutput)
}

type SpatialSpecOutput struct{ *pulumi.OutputState }

func (SpatialSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpec)(nil)).Elem()
}

func (o SpatialSpecOutput) ToSpatialSpecOutput() SpatialSpecOutput {
	return o
}

func (o SpatialSpecOutput) ToSpatialSpecOutputWithContext(ctx context.Context) SpatialSpecOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpec) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpec) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpec)(nil)).Elem()
}

func (o SpatialSpecArrayOutput) ToSpatialSpecArrayOutput() SpatialSpecArrayOutput {
	return o
}

func (o SpatialSpecArrayOutput) ToSpatialSpecArrayOutputWithContext(ctx context.Context) SpatialSpecArrayOutput {
	return o
}

func (o SpatialSpecArrayOutput) Index(i pulumi.IntInput) SpatialSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpec {
		return vs[0].([]SpatialSpec)[vs[1].(int)]
	}).(SpatialSpecOutput)
}

type SpatialSpecResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

type SpatialSpecResponseOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutput() SpatialSpecResponseOutput {
	return o
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutputWithContext(ctx context.Context) SpatialSpecResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpecResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecResponseOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpecResponse) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecResponseArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutput() SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutputWithContext(ctx context.Context) SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) Index(i pulumi.IntInput) SpatialSpecResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpecResponse {
		return vs[0].([]SpatialSpecResponse)[vs[1].(int)]
	}).(SpatialSpecResponseOutput)
}

type SqlContainerGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type SqlContainerGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsOutput() SqlContainerGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsOutput) ToSqlContainerGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o SqlContainerGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlContainerGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type SqlContainerGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutput() SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) ToSqlContainerGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) Elem() SqlContainerGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) SqlContainerGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret SqlContainerGetPropertiesResponseOptions
		return ret
	}).(SqlContainerGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlContainerGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type SqlContainerGetPropertiesResponseResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *float64 `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for SqlContainerGetPropertiesResponseResource
func (val *SqlContainerGetPropertiesResponseResource) Defaults() *SqlContainerGetPropertiesResponseResource {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ConflictResolutionPolicy = tmp.ConflictResolutionPolicy.Defaults()

	tmp.IndexingPolicy = tmp.IndexingPolicy.Defaults()

	tmp.PartitionKey = tmp.PartitionKey.Defaults()

	return &tmp
}

type SqlContainerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutput() SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

// Analytical TTL.
func (o SqlContainerGetPropertiesResponseResourceOutput) AnalyticalStorageTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *float64 { return v.AnalyticalStorageTtl }).(pulumi.Float64PtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type SqlContainerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Elem() SqlContainerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) SqlContainerGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret SqlContainerGetPropertiesResponseResource
		return ret
	}).(SqlContainerGetPropertiesResponseResourceOutput)
}

// Analytical TTL.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) AnalyticalStorageTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return v.AnalyticalStorageTtl
	}).(pulumi.Float64PtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB SQL container resource object
type SqlContainerResource struct {
	// Analytical TTL.
	AnalyticalStorageTtl *float64 `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for SqlContainerResource
func (val *SqlContainerResource) Defaults() *SqlContainerResource {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ConflictResolutionPolicy = tmp.ConflictResolutionPolicy.Defaults()

	tmp.IndexingPolicy = tmp.IndexingPolicy.Defaults()

	tmp.PartitionKey = tmp.PartitionKey.Defaults()

	return &tmp
}

// SqlContainerResourceInput is an input type that accepts SqlContainerResourceArgs and SqlContainerResourceOutput values.
// You can construct a concrete instance of `SqlContainerResourceInput` via:
//
//	SqlContainerResourceArgs{...}
type SqlContainerResourceInput interface {
	pulumi.Input

	ToSqlContainerResourceOutput() SqlContainerResourceOutput
	ToSqlContainerResourceOutputWithContext(context.Context) SqlContainerResourceOutput
}

// Cosmos DB SQL container resource object
type SqlContainerResourceArgs struct {
	// Analytical TTL.
	AnalyticalStorageTtl pulumi.Float64PtrInput `pulumi:"analyticalStorageTtl"`
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

// Defaults sets the appropriate defaults for SqlContainerResourceArgs
func (val *SqlContainerResourceArgs) Defaults() *SqlContainerResourceArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (SqlContainerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerResource)(nil)).Elem()
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutput() SqlContainerResourceOutput {
	return i.ToSqlContainerResourceOutputWithContext(context.Background())
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutputWithContext(ctx context.Context) SqlContainerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourceOutput)
}

// Cosmos DB SQL container resource object
type SqlContainerResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerResource)(nil)).Elem()
}

func (o SqlContainerResourceOutput) ToSqlContainerResourceOutput() SqlContainerResourceOutput {
	return o
}

func (o SqlContainerResourceOutput) ToSqlContainerResourceOutputWithContext(ctx context.Context) SqlContainerResourceOutput {
	return o
}

// Analytical TTL.
func (o SqlContainerResourceOutput) AnalyticalStorageTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *float64 { return v.AnalyticalStorageTtl }).(pulumi.Float64PtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *ConflictResolutionPolicy { return v.ConflictResolutionPolicy }).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o SqlContainerResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerResourceOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *IndexingPolicy { return v.IndexingPolicy }).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerResourceOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *ContainerPartitionKey { return v.PartitionKey }).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *UniqueKeyPolicy { return v.UniqueKeyPolicy }).(UniqueKeyPolicyPtrOutput)
}

type SqlDatabaseGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type SqlDatabaseGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsOutput() SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsOutput) ToSqlDatabaseGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o SqlDatabaseGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse { return v.AutoscaleSettings }).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlDatabaseGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type SqlDatabaseGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseOptions)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutput() SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) ToSqlDatabaseGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) Elem() SqlDatabaseGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) SqlDatabaseGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret SqlDatabaseGetPropertiesResponseOptions
		return ret
	}).(SqlDatabaseGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o SqlDatabaseGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResource struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls *string `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users *string `pulumi:"users"`
}

type SqlDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutput() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Colls }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Elem() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) SqlDatabaseGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret SqlDatabaseGetPropertiesResponseResource
		return ret
	}).(SqlDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Colls
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB SQL database resource object
type SqlDatabaseResource struct {
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
}

// SqlDatabaseResourceInput is an input type that accepts SqlDatabaseResourceArgs and SqlDatabaseResourceOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceInput` via:
//
//	SqlDatabaseResourceArgs{...}
type SqlDatabaseResourceInput interface {
	pulumi.Input

	ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput
	ToSqlDatabaseResourceOutputWithContext(context.Context) SqlDatabaseResourceOutput
}

// Cosmos DB SQL database resource object
type SqlDatabaseResourceArgs struct {
	// Name of the Cosmos DB SQL database
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResource)(nil)).Elem()
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput {
	return i.ToSqlDatabaseResourceOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutputWithContext(ctx context.Context) SqlDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceOutput)
}

// Cosmos DB SQL database resource object
type SqlDatabaseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResource)(nil)).Elem()
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput {
	return o
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourceOutputWithContext(ctx context.Context) SqlDatabaseResourceOutput {
	return o
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

// Resource for a regional service location.
type SqlDedicatedGatewayRegionalServiceResourceResponse struct {
	// The location name.
	Location string `pulumi:"location"`
	// The regional service name.
	Name string `pulumi:"name"`
	// The regional endpoint for SqlDedicatedGateway.
	SqlDedicatedGatewayEndpoint string `pulumi:"sqlDedicatedGatewayEndpoint"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

// Properties for SqlDedicatedGatewayServiceResource.
type SqlDedicatedGatewayServiceResourcePropertiesResponse struct {
	// Time of the last state change (ISO-8601 format).
	CreationTime string `pulumi:"creationTime"`
	// Instance count for the service.
	InstanceCount *int `pulumi:"instanceCount"`
	// Instance type for the service.
	InstanceSize *string `pulumi:"instanceSize"`
	// An array that contains all of the locations for the service.
	Locations []SqlDedicatedGatewayRegionalServiceResourceResponse `pulumi:"locations"`
	// ServiceType for the service.
	// Expected value is 'SqlDedicatedGateway'.
	ServiceType string `pulumi:"serviceType"`
	// SqlDedicatedGateway endpoint for the service.
	SqlDedicatedGatewayEndpoint *string `pulumi:"sqlDedicatedGatewayEndpoint"`
	// Describes the status of a service.
	Status string `pulumi:"status"`
}

type SqlStoredProcedureGetPropertiesResponseResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type SqlStoredProcedureGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutput() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type SqlStoredProcedureGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Elem() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) SqlStoredProcedureGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret SqlStoredProcedureGetPropertiesResponseResource
		return ret
	}).(SqlStoredProcedureGetPropertiesResponseResourceOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
}

// SqlStoredProcedureResourceInput is an input type that accepts SqlStoredProcedureResourceArgs and SqlStoredProcedureResourceOutput values.
// You can construct a concrete instance of `SqlStoredProcedureResourceInput` via:
//
//	SqlStoredProcedureResourceArgs{...}
type SqlStoredProcedureResourceInput interface {
	pulumi.Input

	ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput
	ToSqlStoredProcedureResourceOutputWithContext(context.Context) SqlStoredProcedureResourceOutput
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResourceArgs struct {
	// Body of the Stored Procedure
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlStoredProcedureResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureResource)(nil)).Elem()
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput {
	return i.ToSqlStoredProcedureResourceOutputWithContext(context.Background())
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutputWithContext(ctx context.Context) SqlStoredProcedureResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourceOutput)
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureResource)(nil)).Elem()
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput {
	return o
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourceOutputWithContext(ctx context.Context) SqlStoredProcedureResourceOutput {
	return o
}

// Body of the Stored Procedure
func (o SqlStoredProcedureResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureResource) string { return v.Id }).(pulumi.StringOutput)
}

type SqlTriggerGetPropertiesResponseResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type SqlTriggerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutput() SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type SqlTriggerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Elem() SqlTriggerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) SqlTriggerGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret SqlTriggerGetPropertiesResponseResource
		return ret
	}).(SqlTriggerGetPropertiesResponseResourceOutput)
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerOperation
	}).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
}

// SqlTriggerResourceInput is an input type that accepts SqlTriggerResourceArgs and SqlTriggerResourceOutput values.
// You can construct a concrete instance of `SqlTriggerResourceInput` via:
//
//	SqlTriggerResourceArgs{...}
type SqlTriggerResourceInput interface {
	pulumi.Input

	ToSqlTriggerResourceOutput() SqlTriggerResourceOutput
	ToSqlTriggerResourceOutputWithContext(context.Context) SqlTriggerResourceOutput
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResourceArgs struct {
	// Body of the Trigger
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id pulumi.StringInput `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation pulumi.StringPtrInput `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
}

func (SqlTriggerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerResource)(nil)).Elem()
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutput() SqlTriggerResourceOutput {
	return i.ToSqlTriggerResourceOutputWithContext(context.Background())
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutputWithContext(ctx context.Context) SqlTriggerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourceOutput)
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerResource)(nil)).Elem()
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourceOutput() SqlTriggerResourceOutput {
	return o
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourceOutputWithContext(ctx context.Context) SqlTriggerResourceOutput {
	return o
}

// Body of the Trigger
func (o SqlTriggerResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerResource) string { return v.Id }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type SqlUserDefinedFunctionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Elem() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) SqlUserDefinedFunctionGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret SqlUserDefinedFunctionGetPropertiesResponseResource
		return ret
	}).(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
}

// SqlUserDefinedFunctionResourceInput is an input type that accepts SqlUserDefinedFunctionResourceArgs and SqlUserDefinedFunctionResourceOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionResourceInput` via:
//
//	SqlUserDefinedFunctionResourceArgs{...}
type SqlUserDefinedFunctionResourceInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput
	ToSqlUserDefinedFunctionResourceOutputWithContext(context.Context) SqlUserDefinedFunctionResourceOutput
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResourceArgs struct {
	// Body of the User Defined Function
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlUserDefinedFunctionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput {
	return i.ToSqlUserDefinedFunctionResourceOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourceOutput)
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourceOutput {
	return o
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionResource) string { return v.Id }).(pulumi.StringOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

type TableGetPropertiesResponseOptions struct {
	// Specifies the Autoscale settings.
	AutoscaleSettings *AutoscaleSettingsResponse `pulumi:"autoscaleSettings"`
	// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
	Throughput *int `pulumi:"throughput"`
}

type TableGetPropertiesResponseOptionsOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsOutput() TableGetPropertiesResponseOptionsOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsOutput) ToTableGetPropertiesResponseOptionsOutputWithContext(ctx context.Context) TableGetPropertiesResponseOptionsOutput {
	return o
}

// Specifies the Autoscale settings.
func (o TableGetPropertiesResponseOptionsOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseOptions) *AutoscaleSettingsResponse { return v.AutoscaleSettings }).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o TableGetPropertiesResponseOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

type TableGetPropertiesResponseOptionsPtrOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseOptions)(nil)).Elem()
}

func (o TableGetPropertiesResponseOptionsPtrOutput) ToTableGetPropertiesResponseOptionsPtrOutput() TableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsPtrOutput) ToTableGetPropertiesResponseOptionsPtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseOptionsPtrOutput {
	return o
}

func (o TableGetPropertiesResponseOptionsPtrOutput) Elem() TableGetPropertiesResponseOptionsOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) TableGetPropertiesResponseOptions {
		if v != nil {
			return *v
		}
		var ret TableGetPropertiesResponseOptions
		return ret
	}).(TableGetPropertiesResponseOptionsOutput)
}

// Specifies the Autoscale settings.
func (o TableGetPropertiesResponseOptionsPtrOutput) AutoscaleSettings() AutoscaleSettingsResponsePtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) *AutoscaleSettingsResponse {
		if v == nil {
			return nil
		}
		return v.AutoscaleSettings
	}).(AutoscaleSettingsResponsePtrOutput)
}

// Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
func (o TableGetPropertiesResponseOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

type TableGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts float64 `pulumi:"ts"`
}

type TableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutput() TableGetPropertiesResponseResourceOutput {
	return o
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourceOutput) Ts() pulumi.Float64Output {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) float64 { return v.Ts }).(pulumi.Float64Output)
}

type TableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) Elem() TableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) TableGetPropertiesResponseResource {
		if v != nil {
			return *v
		}
		var ret TableGetPropertiesResponseResource
		return ret
	}).(TableGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *float64 {
		if v == nil {
			return nil
		}
		return &v.Ts
	}).(pulumi.Float64PtrOutput)
}

// Cosmos DB table resource object
type TableResource struct {
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
}

// TableResourceInput is an input type that accepts TableResourceArgs and TableResourceOutput values.
// You can construct a concrete instance of `TableResourceInput` via:
//
//	TableResourceArgs{...}
type TableResourceInput interface {
	pulumi.Input

	ToTableResourceOutput() TableResourceOutput
	ToTableResourceOutputWithContext(context.Context) TableResourceOutput
}

// Cosmos DB table resource object
type TableResourceArgs struct {
	// Name of the Cosmos DB table
	Id pulumi.StringInput `pulumi:"id"`
}

func (TableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableResource)(nil)).Elem()
}

func (i TableResourceArgs) ToTableResourceOutput() TableResourceOutput {
	return i.ToTableResourceOutputWithContext(context.Background())
}

func (i TableResourceArgs) ToTableResourceOutputWithContext(ctx context.Context) TableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourceOutput)
}

// Cosmos DB table resource object
type TableResourceOutput struct{ *pulumi.OutputState }

func (TableResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableResource)(nil)).Elem()
}

func (o TableResourceOutput) ToTableResourceOutput() TableResourceOutput {
	return o
}

func (o TableResourceOutput) ToTableResourceOutputWithContext(ctx context.Context) TableResourceOutput {
	return o
}

// Name of the Cosmos DB table
func (o TableResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableResource) string { return v.Id }).(pulumi.StringOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKey struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// UniqueKeyInput is an input type that accepts UniqueKeyArgs and UniqueKeyOutput values.
// You can construct a concrete instance of `UniqueKeyInput` via:
//
//	UniqueKeyArgs{...}
type UniqueKeyInput interface {
	pulumi.Input

	ToUniqueKeyOutput() UniqueKeyOutput
	ToUniqueKeyOutputWithContext(context.Context) UniqueKeyOutput
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyArgs struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (UniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArgs) ToUniqueKeyOutput() UniqueKeyOutput {
	return i.ToUniqueKeyOutputWithContext(context.Background())
}

func (i UniqueKeyArgs) ToUniqueKeyOutputWithContext(ctx context.Context) UniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyOutput)
}

// UniqueKeyArrayInput is an input type that accepts UniqueKeyArray and UniqueKeyArrayOutput values.
// You can construct a concrete instance of `UniqueKeyArrayInput` via:
//
//	UniqueKeyArray{ UniqueKeyArgs{...} }
type UniqueKeyArrayInput interface {
	pulumi.Input

	ToUniqueKeyArrayOutput() UniqueKeyArrayOutput
	ToUniqueKeyArrayOutputWithContext(context.Context) UniqueKeyArrayOutput
}

type UniqueKeyArray []UniqueKeyInput

func (UniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutput() UniqueKeyArrayOutput {
	return i.ToUniqueKeyArrayOutputWithContext(context.Background())
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutputWithContext(ctx context.Context) UniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyOutput struct{ *pulumi.OutputState }

func (UniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKey)(nil)).Elem()
}

func (o UniqueKeyOutput) ToUniqueKeyOutput() UniqueKeyOutput {
	return o
}

func (o UniqueKeyOutput) ToUniqueKeyOutputWithContext(ctx context.Context) UniqueKeyOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKey)(nil)).Elem()
}

func (o UniqueKeyArrayOutput) ToUniqueKeyArrayOutput() UniqueKeyArrayOutput {
	return o
}

func (o UniqueKeyArrayOutput) ToUniqueKeyArrayOutputWithContext(ctx context.Context) UniqueKeyArrayOutput {
	return o
}

func (o UniqueKeyArrayOutput) Index(i pulumi.IntInput) UniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKey {
		return vs[0].([]UniqueKey)[vs[1].(int)]
	}).(UniqueKeyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicy struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKey `pulumi:"uniqueKeys"`
}

// UniqueKeyPolicyInput is an input type that accepts UniqueKeyPolicyArgs and UniqueKeyPolicyOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyInput` via:
//
//	UniqueKeyPolicyArgs{...}
type UniqueKeyPolicyInput interface {
	pulumi.Input

	ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput
	ToUniqueKeyPolicyOutputWithContext(context.Context) UniqueKeyPolicyOutput
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyArgs struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys UniqueKeyArrayInput `pulumi:"uniqueKeys"`
}

func (UniqueKeyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicy)(nil)).Elem()
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput {
	return i.ToUniqueKeyPolicyOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutputWithContext(ctx context.Context) UniqueKeyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput)
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput).ToUniqueKeyPolicyPtrOutputWithContext(ctx)
}

// UniqueKeyPolicyPtrInput is an input type that accepts UniqueKeyPolicyArgs, UniqueKeyPolicyPtr and UniqueKeyPolicyPtrOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyPtrInput` via:
//
//	        UniqueKeyPolicyArgs{...}
//
//	or:
//
//	        nil
type UniqueKeyPolicyPtrInput interface {
	pulumi.Input

	ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput
	ToUniqueKeyPolicyPtrOutputWithContext(context.Context) UniqueKeyPolicyPtrOutput
}

type uniqueKeyPolicyPtrType UniqueKeyPolicyArgs

func UniqueKeyPolicyPtr(v *UniqueKeyPolicyArgs) UniqueKeyPolicyPtrInput {
	return (*uniqueKeyPolicyPtrType)(v)
}

func (*uniqueKeyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicy)(nil)).Elem()
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicy)(nil)).Elem()
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput {
	return o
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyOutputWithContext(ctx context.Context) UniqueKeyPolicyOutput {
	return o
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return o.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UniqueKeyPolicy) *UniqueKeyPolicy {
		return &v
	}).(UniqueKeyPolicyPtrOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyOutput) UniqueKeys() UniqueKeyArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicy) []UniqueKey { return v.UniqueKeys }).(UniqueKeyArrayOutput)
}

type UniqueKeyPolicyPtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicy)(nil)).Elem()
}

func (o UniqueKeyPolicyPtrOutput) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return o
}

func (o UniqueKeyPolicyPtrOutput) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return o
}

func (o UniqueKeyPolicyPtrOutput) Elem() UniqueKeyPolicyOutput {
	return o.ApplyT(func(v *UniqueKeyPolicy) UniqueKeyPolicy {
		if v != nil {
			return *v
		}
		var ret UniqueKeyPolicy
		return ret
	}).(UniqueKeyPolicyOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyPtrOutput) UniqueKeys() UniqueKeyArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicy) []UniqueKey {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyArrayOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponse struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKeyResponse `pulumi:"uniqueKeys"`
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutput() UniqueKeyPolicyResponseOutput {
	return o
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyResponseOutput {
	return o
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponseOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicyResponse) []UniqueKeyResponse { return v.UniqueKeys }).(UniqueKeyResponseArrayOutput)
}

type UniqueKeyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) Elem() UniqueKeyPolicyResponseOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) UniqueKeyPolicyResponse {
		if v != nil {
			return *v
		}
		var ret UniqueKeyPolicyResponse
		return ret
	}).(UniqueKeyPolicyResponseOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponsePtrOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) []UniqueKeyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyResponseArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponse struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutput() UniqueKeyResponseOutput {
	return o
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutputWithContext(ctx context.Context) UniqueKeyResponseOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutput() UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutputWithContext(ctx context.Context) UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) Index(i pulumi.IntInput) UniqueKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKeyResponse {
		return vs[0].([]UniqueKeyResponse)[vs[1].(int)]
	}).(UniqueKeyResponseOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRule struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//	VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleArgs struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//	VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponse struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleResponseOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

type CompositePathArrayArray []CompositePathArrayInput

func (CompositePathArrayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]CompositePath)(nil)).Elem()
}

func (i CompositePathArrayArray) ToCompositePathArrayArrayOutput() CompositePathArrayArrayOutput {
	return i.ToCompositePathArrayArrayOutputWithContext(context.Background())
}

func (i CompositePathArrayArray) ToCompositePathArrayArrayOutputWithContext(ctx context.Context) CompositePathArrayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathArrayArrayOutput)
}

// CompositePathArrayArrayInput is an input type that accepts CompositePathArrayArray and CompositePathArrayArrayOutput values.
// You can construct a concrete instance of `CompositePathArrayArrayInput` via:
//
//	CompositePathArrayArray{ CompositePathArray{ CompositePathArgs{...} } }
type CompositePathArrayArrayInput interface {
	pulumi.Input

	ToCompositePathArrayArrayOutput() CompositePathArrayArrayOutput
	ToCompositePathArrayArrayOutputWithContext(context.Context) CompositePathArrayArrayOutput
}

type CompositePathArrayArrayOutput struct{ *pulumi.OutputState }

func (CompositePathArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]CompositePath)(nil)).Elem()
}

func (o CompositePathArrayArrayOutput) ToCompositePathArrayArrayOutput() CompositePathArrayArrayOutput {
	return o
}

func (o CompositePathArrayArrayOutput) ToCompositePathArrayArrayOutputWithContext(ctx context.Context) CompositePathArrayArrayOutput {
	return o
}

func (o CompositePathArrayArrayOutput) Index(i pulumi.IntInput) CompositePathArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []CompositePath {
		return vs[0].([][]CompositePath)[vs[1].(int)]
	}).(CompositePathArrayOutput)
}

type CompositePathResponseArrayArrayOutput struct{ *pulumi.OutputState }

func (CompositePathResponseArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseArrayArrayOutput) ToCompositePathResponseArrayArrayOutput() CompositePathResponseArrayArrayOutput {
	return o
}

func (o CompositePathResponseArrayArrayOutput) ToCompositePathResponseArrayArrayOutputWithContext(ctx context.Context) CompositePathResponseArrayArrayOutput {
	return o
}

func (o CompositePathResponseArrayArrayOutput) Index(i pulumi.IntInput) CompositePathResponseArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []CompositePathResponse {
		return vs[0].([][]CompositePathResponse)[vs[1].(int)]
	}).(CompositePathResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticalStorageConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticalStorageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyticalStorageConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AnalyticalStorageConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiPropertiesOutput{})
	pulumi.RegisterOutputType(ApiPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ApiPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodLdapPropertiesOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodLdapPropertiesPtrOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodLdapPropertiesResponseOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodLdapPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsResponseOutput{})
	pulumi.RegisterOutputType(AutoscaleSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CapacityOutput{})
	pulumi.RegisterOutputType(CapacityPtrOutput{})
	pulumi.RegisterOutputType(CapacityResponseOutput{})
	pulumi.RegisterOutputType(CapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceResourceOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraSchemaOutput{})
	pulumi.RegisterOutputType(CassandraSchemaPtrOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponseOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponsePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableResourceOutput{})
	pulumi.RegisterOutputType(CassandraViewGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(CassandraViewGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(CassandraViewGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraViewGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraViewResourceOutput{})
	pulumi.RegisterOutputType(CertificateOutput{})
	pulumi.RegisterOutputType(CertificateArrayOutput{})
	pulumi.RegisterOutputType(CertificateResponseOutput{})
	pulumi.RegisterOutputType(CertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterKeyOutput{})
	pulumi.RegisterOutputType(ClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterResourcePropertiesOutput{})
	pulumi.RegisterOutputType(ClusterResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ColumnOutput{})
	pulumi.RegisterOutputType(ColumnArrayOutput{})
	pulumi.RegisterOutputType(ColumnResponseOutput{})
	pulumi.RegisterOutputType(ColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(CompositePathOutput{})
	pulumi.RegisterOutputType(CompositePathArrayOutput{})
	pulumi.RegisterOutputType(CompositePathResponseOutput{})
	pulumi.RegisterOutputType(CompositePathResponseArrayOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyPtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(CorsPolicyOutput{})
	pulumi.RegisterOutputType(CorsPolicyArrayOutput{})
	pulumi.RegisterOutputType(CorsPolicyResponseOutput{})
	pulumi.RegisterOutputType(CorsPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(DataCenterResourcePropertiesOutput{})
	pulumi.RegisterOutputType(DataCenterResourcePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DataCenterResourceResponsePropertiesOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringResponseOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringResponseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseRestoreResourceOutput{})
	pulumi.RegisterOutputType(DatabaseRestoreResourceArrayOutput{})
	pulumi.RegisterOutputType(DatabaseRestoreResourceResponseOutput{})
	pulumi.RegisterOutputType(DatabaseRestoreResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticLogSettingsOutput{})
	pulumi.RegisterOutputType(DiagnosticLogSettingsPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticLogSettingsResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticLogSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExcludedPathOutput{})
	pulumi.RegisterOutputType(ExcludedPathArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(GraphResourceOutput{})
	pulumi.RegisterOutputType(GraphResourceGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(GraphResourceGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(GraphResourceGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GraphResourceGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseRestoreResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseRestoreResourceArrayOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseRestoreResourceResponseOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseRestoreResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphResourceOutput{})
	pulumi.RegisterOutputType(IncludedPathOutput{})
	pulumi.RegisterOutputType(IncludedPathArrayOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexesOutput{})
	pulumi.RegisterOutputType(IndexesArrayOutput{})
	pulumi.RegisterOutputType(IndexesResponseOutput{})
	pulumi.RegisterOutputType(IndexesResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexingPolicyOutput{})
	pulumi.RegisterOutputType(IndexingPolicyPtrOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponseOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeArrayOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeResponseOutput{})
	pulumi.RegisterOutputType(IpAddressOrRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(LocationOutput{})
	pulumi.RegisterOutputType(LocationArrayOutput{})
	pulumi.RegisterOutputType(LocationResponseOutput{})
	pulumi.RegisterOutputType(LocationResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedCassandraManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedCassandraManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedCassandraManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedCassandraManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseResourceOutput{})
	pulumi.RegisterOutputType(MongoIndexOutput{})
	pulumi.RegisterOutputType(MongoIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseArrayOutput{})
	pulumi.RegisterOutputType(PermissionOutput{})
	pulumi.RegisterOutputType(PermissionArrayOutput{})
	pulumi.RegisterOutputType(PermissionResponseOutput{})
	pulumi.RegisterOutputType(PermissionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyPtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointPropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePropertyResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivilegeOutput{})
	pulumi.RegisterOutputType(PrivilegeArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeResourceOutput{})
	pulumi.RegisterOutputType(PrivilegeResourcePtrOutput{})
	pulumi.RegisterOutputType(PrivilegeResponseOutput{})
	pulumi.RegisterOutputType(PrivilegeResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivilegeResponseResourceOutput{})
	pulumi.RegisterOutputType(PrivilegeResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(RestoreParametersOutput{})
	pulumi.RegisterOutputType(RestoreParametersPtrOutput{})
	pulumi.RegisterOutputType(RestoreParametersResponseOutput{})
	pulumi.RegisterOutputType(RestoreParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RoleOutput{})
	pulumi.RegisterOutputType(RoleArrayOutput{})
	pulumi.RegisterOutputType(RoleResponseOutput{})
	pulumi.RegisterOutputType(RoleResponseArrayOutput{})
	pulumi.RegisterOutputType(SeedNodeOutput{})
	pulumi.RegisterOutputType(SeedNodePtrOutput{})
	pulumi.RegisterOutputType(SeedNodeArrayOutput{})
	pulumi.RegisterOutputType(SeedNodeResponseOutput{})
	pulumi.RegisterOutputType(SeedNodeResponsePtrOutput{})
	pulumi.RegisterOutputType(SeedNodeResponseArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecOutput{})
	pulumi.RegisterOutputType(SpatialSpecArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlContainerResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlTriggerResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionResourceOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseOptionsOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseOptionsPtrOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(TableResourceOutput{})
	pulumi.RegisterOutputType(UniqueKeyOutput{})
	pulumi.RegisterOutputType(UniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyPtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(CompositePathArrayArrayOutput{})
	pulumi.RegisterOutputType(CompositePathResponseArrayArrayOutput{})
}
