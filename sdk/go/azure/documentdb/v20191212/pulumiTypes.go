// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20191212

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Cosmos DB capability object
type Capability struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//          CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Cosmos DB capability object
type CapabilityArgs struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//          CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Cosmos DB capability object
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Cosmos DB capability object
type CapabilityInvokeResponse struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// CapabilityInvokeResponseInput is an input type that accepts CapabilityInvokeResponseArgs and CapabilityInvokeResponseOutput values.
// You can construct a concrete instance of `CapabilityInvokeResponseInput` via:
//
//          CapabilityInvokeResponseArgs{...}
type CapabilityInvokeResponseInput interface {
	pulumi.Input

	ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput
	ToCapabilityInvokeResponseOutputWithContext(context.Context) CapabilityInvokeResponseOutput
}

// Cosmos DB capability object
type CapabilityInvokeResponseArgs struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CapabilityInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityInvokeResponse)(nil)).Elem()
}

func (i CapabilityInvokeResponseArgs) ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput {
	return i.ToCapabilityInvokeResponseOutputWithContext(context.Background())
}

func (i CapabilityInvokeResponseArgs) ToCapabilityInvokeResponseOutputWithContext(ctx context.Context) CapabilityInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityInvokeResponseOutput)
}

// CapabilityInvokeResponseArrayInput is an input type that accepts CapabilityInvokeResponseArray and CapabilityInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityInvokeResponseArrayInput` via:
//
//          CapabilityInvokeResponseArray{ CapabilityInvokeResponseArgs{...} }
type CapabilityInvokeResponseArrayInput interface {
	pulumi.Input

	ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput
	ToCapabilityInvokeResponseArrayOutputWithContext(context.Context) CapabilityInvokeResponseArrayOutput
}

type CapabilityInvokeResponseArray []CapabilityInvokeResponseInput

func (CapabilityInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityInvokeResponse)(nil)).Elem()
}

func (i CapabilityInvokeResponseArray) ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput {
	return i.ToCapabilityInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityInvokeResponseArray) ToCapabilityInvokeResponseArrayOutputWithContext(ctx context.Context) CapabilityInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityInvokeResponseArrayOutput)
}

// Cosmos DB capability object
type CapabilityInvokeResponseOutput struct{ *pulumi.OutputState }

func (CapabilityInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityInvokeResponse)(nil)).Elem()
}

func (o CapabilityInvokeResponseOutput) ToCapabilityInvokeResponseOutput() CapabilityInvokeResponseOutput {
	return o
}

func (o CapabilityInvokeResponseOutput) ToCapabilityInvokeResponseOutputWithContext(ctx context.Context) CapabilityInvokeResponseOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityInvokeResponse)(nil)).Elem()
}

func (o CapabilityInvokeResponseArrayOutput) ToCapabilityInvokeResponseArrayOutput() CapabilityInvokeResponseArrayOutput {
	return o
}

func (o CapabilityInvokeResponseArrayOutput) ToCapabilityInvokeResponseArrayOutputWithContext(ctx context.Context) CapabilityInvokeResponseArrayOutput {
	return o
}

func (o CapabilityInvokeResponseArrayOutput) Index(i pulumi.IntInput) CapabilityInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityInvokeResponse {
		return vs[0].([]CapabilityInvokeResponse)[vs[1].(int)]
	}).(CapabilityInvokeResponseOutput)
}

// Cosmos DB capability object
type CapabilityResponse struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name *string `pulumi:"name"`
}

// CapabilityResponseInput is an input type that accepts CapabilityResponseArgs and CapabilityResponseOutput values.
// You can construct a concrete instance of `CapabilityResponseInput` via:
//
//          CapabilityResponseArgs{...}
type CapabilityResponseInput interface {
	pulumi.Input

	ToCapabilityResponseOutput() CapabilityResponseOutput
	ToCapabilityResponseOutputWithContext(context.Context) CapabilityResponseOutput
}

// Cosmos DB capability object
type CapabilityResponseArgs struct {
	// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CapabilityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return i.ToCapabilityResponseOutputWithContext(context.Background())
}

func (i CapabilityResponseArgs) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseOutput)
}

// CapabilityResponseArrayInput is an input type that accepts CapabilityResponseArray and CapabilityResponseArrayOutput values.
// You can construct a concrete instance of `CapabilityResponseArrayInput` via:
//
//          CapabilityResponseArray{ CapabilityResponseArgs{...} }
type CapabilityResponseArrayInput interface {
	pulumi.Input

	ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput
	ToCapabilityResponseArrayOutputWithContext(context.Context) CapabilityResponseArrayOutput
}

type CapabilityResponseArray []CapabilityResponseInput

func (CapabilityResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return i.ToCapabilityResponseArrayOutputWithContext(context.Background())
}

func (i CapabilityResponseArray) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityResponseArrayOutput)
}

// Cosmos DB capability object
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

type CassandraKeyspaceGetPropertiesInvokeResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// CassandraKeyspaceGetPropertiesInvokeResponseResourceInput is an input type that accepts CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs and CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `CassandraKeyspaceGetPropertiesInvokeResponseResourceInput` via:
//
//          CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs{...}
type CassandraKeyspaceGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutput() CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput
	ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput
}

type CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs) ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutput() CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput {
	return i.ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i CassandraKeyspaceGetPropertiesInvokeResponseResourceArgs) ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput)
}

type CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutput() CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) ToCassandraKeyspaceGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type CassandraKeyspaceGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// CassandraKeyspaceGetPropertiesResponseResourceInput is an input type that accepts CassandraKeyspaceGetPropertiesResponseResourceArgs and CassandraKeyspaceGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `CassandraKeyspaceGetPropertiesResponseResourceInput` via:
//
//          CassandraKeyspaceGetPropertiesResponseResourceArgs{...}
type CassandraKeyspaceGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToCassandraKeyspaceGetPropertiesResponseResourceOutput() CassandraKeyspaceGetPropertiesResponseResourceOutput
	ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(context.Context) CassandraKeyspaceGetPropertiesResponseResourceOutput
}

type CassandraKeyspaceGetPropertiesResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra keyspace
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (CassandraKeyspaceGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (i CassandraKeyspaceGetPropertiesResponseResourceArgs) ToCassandraKeyspaceGetPropertiesResponseResourceOutput() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return i.ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i CassandraKeyspaceGetPropertiesResponseResourceArgs) ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceGetPropertiesResponseResourceOutput)
}

func (i CassandraKeyspaceGetPropertiesResponseResourceArgs) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return i.ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i CassandraKeyspaceGetPropertiesResponseResourceArgs) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceGetPropertiesResponseResourceOutput).ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// CassandraKeyspaceGetPropertiesResponseResourcePtrInput is an input type that accepts CassandraKeyspaceGetPropertiesResponseResourceArgs, CassandraKeyspaceGetPropertiesResponseResourcePtr and CassandraKeyspaceGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `CassandraKeyspaceGetPropertiesResponseResourcePtrInput` via:
//
//          CassandraKeyspaceGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type CassandraKeyspaceGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput
	ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput
}

type cassandraKeyspaceGetPropertiesResponseResourcePtrType CassandraKeyspaceGetPropertiesResponseResourceArgs

func CassandraKeyspaceGetPropertiesResponseResourcePtr(v *CassandraKeyspaceGetPropertiesResponseResourceArgs) CassandraKeyspaceGetPropertiesResponseResourcePtrInput {
	return (*cassandraKeyspaceGetPropertiesResponseResourcePtrType)(v)
}

func (*cassandraKeyspaceGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (i *cassandraKeyspaceGetPropertiesResponseResourcePtrType) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return i.ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraKeyspaceGetPropertiesResponseResourcePtrType) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput)
}

type CassandraKeyspaceGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutput() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o.ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) *CassandraKeyspaceGetPropertiesResponseResource {
		return &v
	}).(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraKeyspaceGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type CassandraKeyspaceGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutput() CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) ToCassandraKeyspaceGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Elem() CassandraKeyspaceGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) CassandraKeyspaceGetPropertiesResponseResource {
		return *v
	}).(CassandraKeyspaceGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraKeyspaceGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *CassandraKeyspaceGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResource struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id string `pulumi:"id"`
}

// CassandraKeyspaceResourceInput is an input type that accepts CassandraKeyspaceResourceArgs and CassandraKeyspaceResourceOutput values.
// You can construct a concrete instance of `CassandraKeyspaceResourceInput` via:
//
//          CassandraKeyspaceResourceArgs{...}
type CassandraKeyspaceResourceInput interface {
	pulumi.Input

	ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput
	ToCassandraKeyspaceResourceOutputWithContext(context.Context) CassandraKeyspaceResourceOutput
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResourceArgs struct {
	// Name of the Cosmos DB Cassandra keyspace
	Id pulumi.StringInput `pulumi:"id"`
}

func (CassandraKeyspaceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceResource)(nil)).Elem()
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput {
	return i.ToCassandraKeyspaceResourceOutputWithContext(context.Background())
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourceOutputWithContext(ctx context.Context) CassandraKeyspaceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourceOutput)
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return i.ToCassandraKeyspaceResourcePtrOutputWithContext(context.Background())
}

func (i CassandraKeyspaceResourceArgs) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourceOutput).ToCassandraKeyspaceResourcePtrOutputWithContext(ctx)
}

// CassandraKeyspaceResourcePtrInput is an input type that accepts CassandraKeyspaceResourceArgs, CassandraKeyspaceResourcePtr and CassandraKeyspaceResourcePtrOutput values.
// You can construct a concrete instance of `CassandraKeyspaceResourcePtrInput` via:
//
//          CassandraKeyspaceResourceArgs{...}
//
//  or:
//
//          nil
type CassandraKeyspaceResourcePtrInput interface {
	pulumi.Input

	ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput
	ToCassandraKeyspaceResourcePtrOutputWithContext(context.Context) CassandraKeyspaceResourcePtrOutput
}

type cassandraKeyspaceResourcePtrType CassandraKeyspaceResourceArgs

func CassandraKeyspaceResourcePtr(v *CassandraKeyspaceResourceArgs) CassandraKeyspaceResourcePtrInput {
	return (*cassandraKeyspaceResourcePtrType)(v)
}

func (*cassandraKeyspaceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceResource)(nil)).Elem()
}

func (i *cassandraKeyspaceResourcePtrType) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return i.ToCassandraKeyspaceResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraKeyspaceResourcePtrType) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceResourcePtrOutput)
}

// Cosmos DB Cassandra keyspace resource object
type CassandraKeyspaceResourceOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceResource)(nil)).Elem()
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourceOutput() CassandraKeyspaceResourceOutput {
	return o
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourceOutputWithContext(ctx context.Context) CassandraKeyspaceResourceOutput {
	return o
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return o.ToCassandraKeyspaceResourcePtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceResourceOutput) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceResource) *CassandraKeyspaceResource {
		return &v
	}).(CassandraKeyspaceResourcePtrOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraKeyspaceResource) string { return v.Id }).(pulumi.StringOutput)
}

type CassandraKeyspaceResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceResource)(nil)).Elem()
}

func (o CassandraKeyspaceResourcePtrOutput) ToCassandraKeyspaceResourcePtrOutput() CassandraKeyspaceResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceResourcePtrOutput) ToCassandraKeyspaceResourcePtrOutputWithContext(ctx context.Context) CassandraKeyspaceResourcePtrOutput {
	return o
}

func (o CassandraKeyspaceResourcePtrOutput) Elem() CassandraKeyspaceResourceOutput {
	return o.ApplyT(func(v *CassandraKeyspaceResource) CassandraKeyspaceResource { return *v }).(CassandraKeyspaceResourceOutput)
}

// Name of the Cosmos DB Cassandra keyspace
func (o CassandraKeyspaceResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKey struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// CassandraPartitionKeyInput is an input type that accepts CassandraPartitionKeyArgs and CassandraPartitionKeyOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyInput` via:
//
//          CassandraPartitionKeyArgs{...}
type CassandraPartitionKeyInput interface {
	pulumi.Input

	ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput
	ToCassandraPartitionKeyOutputWithContext(context.Context) CassandraPartitionKeyOutput
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyArgs struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CassandraPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput {
	return i.ToCassandraPartitionKeyOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArgs) ToCassandraPartitionKeyOutputWithContext(ctx context.Context) CassandraPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyOutput)
}

// CassandraPartitionKeyArrayInput is an input type that accepts CassandraPartitionKeyArray and CassandraPartitionKeyArrayOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyArrayInput` via:
//
//          CassandraPartitionKeyArray{ CassandraPartitionKeyArgs{...} }
type CassandraPartitionKeyArrayInput interface {
	pulumi.Input

	ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput
	ToCassandraPartitionKeyArrayOutputWithContext(context.Context) CassandraPartitionKeyArrayOutput
}

type CassandraPartitionKeyArray []CassandraPartitionKeyInput

func (CassandraPartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKey)(nil)).Elem()
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput {
	return i.ToCassandraPartitionKeyArrayOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyArray) ToCassandraPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyArrayOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKey)(nil)).Elem()
}

func (o CassandraPartitionKeyOutput) ToCassandraPartitionKeyOutput() CassandraPartitionKeyOutput {
	return o
}

func (o CassandraPartitionKeyOutput) ToCassandraPartitionKeyOutputWithContext(ctx context.Context) CassandraPartitionKeyOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKey)(nil)).Elem()
}

func (o CassandraPartitionKeyArrayOutput) ToCassandraPartitionKeyArrayOutput() CassandraPartitionKeyArrayOutput {
	return o
}

func (o CassandraPartitionKeyArrayOutput) ToCassandraPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyArrayOutput {
	return o
}

func (o CassandraPartitionKeyArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKey {
		return vs[0].([]CassandraPartitionKey)[vs[1].(int)]
	}).(CassandraPartitionKeyOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyInvokeResponse struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// CassandraPartitionKeyInvokeResponseInput is an input type that accepts CassandraPartitionKeyInvokeResponseArgs and CassandraPartitionKeyInvokeResponseOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyInvokeResponseInput` via:
//
//          CassandraPartitionKeyInvokeResponseArgs{...}
type CassandraPartitionKeyInvokeResponseInput interface {
	pulumi.Input

	ToCassandraPartitionKeyInvokeResponseOutput() CassandraPartitionKeyInvokeResponseOutput
	ToCassandraPartitionKeyInvokeResponseOutputWithContext(context.Context) CassandraPartitionKeyInvokeResponseOutput
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyInvokeResponseArgs struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CassandraPartitionKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyInvokeResponse)(nil)).Elem()
}

func (i CassandraPartitionKeyInvokeResponseArgs) ToCassandraPartitionKeyInvokeResponseOutput() CassandraPartitionKeyInvokeResponseOutput {
	return i.ToCassandraPartitionKeyInvokeResponseOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyInvokeResponseArgs) ToCassandraPartitionKeyInvokeResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyInvokeResponseOutput)
}

// CassandraPartitionKeyInvokeResponseArrayInput is an input type that accepts CassandraPartitionKeyInvokeResponseArray and CassandraPartitionKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyInvokeResponseArrayInput` via:
//
//          CassandraPartitionKeyInvokeResponseArray{ CassandraPartitionKeyInvokeResponseArgs{...} }
type CassandraPartitionKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToCassandraPartitionKeyInvokeResponseArrayOutput() CassandraPartitionKeyInvokeResponseArrayOutput
	ToCassandraPartitionKeyInvokeResponseArrayOutputWithContext(context.Context) CassandraPartitionKeyInvokeResponseArrayOutput
}

type CassandraPartitionKeyInvokeResponseArray []CassandraPartitionKeyInvokeResponseInput

func (CassandraPartitionKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyInvokeResponse)(nil)).Elem()
}

func (i CassandraPartitionKeyInvokeResponseArray) ToCassandraPartitionKeyInvokeResponseArrayOutput() CassandraPartitionKeyInvokeResponseArrayOutput {
	return i.ToCassandraPartitionKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyInvokeResponseArray) ToCassandraPartitionKeyInvokeResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyInvokeResponseArrayOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyInvokeResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyInvokeResponseOutput) ToCassandraPartitionKeyInvokeResponseOutput() CassandraPartitionKeyInvokeResponseOutput {
	return o
}

func (o CassandraPartitionKeyInvokeResponseOutput) ToCassandraPartitionKeyInvokeResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyInvokeResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKeyInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyInvokeResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyInvokeResponseArrayOutput) ToCassandraPartitionKeyInvokeResponseArrayOutput() CassandraPartitionKeyInvokeResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyInvokeResponseArrayOutput) ToCassandraPartitionKeyInvokeResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyInvokeResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKeyInvokeResponse {
		return vs[0].([]CassandraPartitionKeyInvokeResponse)[vs[1].(int)]
	}).(CassandraPartitionKeyInvokeResponseOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponse struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name *string `pulumi:"name"`
}

// CassandraPartitionKeyResponseInput is an input type that accepts CassandraPartitionKeyResponseArgs and CassandraPartitionKeyResponseOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyResponseInput` via:
//
//          CassandraPartitionKeyResponseArgs{...}
type CassandraPartitionKeyResponseInput interface {
	pulumi.Input

	ToCassandraPartitionKeyResponseOutput() CassandraPartitionKeyResponseOutput
	ToCassandraPartitionKeyResponseOutputWithContext(context.Context) CassandraPartitionKeyResponseOutput
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponseArgs struct {
	// Name of the Cosmos DB Cassandra table partition key
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (CassandraPartitionKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyResponse)(nil)).Elem()
}

func (i CassandraPartitionKeyResponseArgs) ToCassandraPartitionKeyResponseOutput() CassandraPartitionKeyResponseOutput {
	return i.ToCassandraPartitionKeyResponseOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyResponseArgs) ToCassandraPartitionKeyResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyResponseOutput)
}

// CassandraPartitionKeyResponseArrayInput is an input type that accepts CassandraPartitionKeyResponseArray and CassandraPartitionKeyResponseArrayOutput values.
// You can construct a concrete instance of `CassandraPartitionKeyResponseArrayInput` via:
//
//          CassandraPartitionKeyResponseArray{ CassandraPartitionKeyResponseArgs{...} }
type CassandraPartitionKeyResponseArrayInput interface {
	pulumi.Input

	ToCassandraPartitionKeyResponseArrayOutput() CassandraPartitionKeyResponseArrayOutput
	ToCassandraPartitionKeyResponseArrayOutputWithContext(context.Context) CassandraPartitionKeyResponseArrayOutput
}

type CassandraPartitionKeyResponseArray []CassandraPartitionKeyResponseInput

func (CassandraPartitionKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyResponse)(nil)).Elem()
}

func (i CassandraPartitionKeyResponseArray) ToCassandraPartitionKeyResponseArrayOutput() CassandraPartitionKeyResponseArrayOutput {
	return i.ToCassandraPartitionKeyResponseArrayOutputWithContext(context.Background())
}

func (i CassandraPartitionKeyResponseArray) ToCassandraPartitionKeyResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraPartitionKeyResponseArrayOutput)
}

// Cosmos DB Cassandra table partition key
type CassandraPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutput() CassandraPartitionKeyResponseOutput {
	return o
}

func (o CassandraPartitionKeyResponseOutput) ToCassandraPartitionKeyResponseOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table partition key
func (o CassandraPartitionKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraPartitionKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type CassandraPartitionKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (CassandraPartitionKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraPartitionKeyResponse)(nil)).Elem()
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutput() CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) ToCassandraPartitionKeyResponseArrayOutputWithContext(ctx context.Context) CassandraPartitionKeyResponseArrayOutput {
	return o
}

func (o CassandraPartitionKeyResponseArrayOutput) Index(i pulumi.IntInput) CassandraPartitionKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraPartitionKeyResponse {
		return vs[0].([]CassandraPartitionKeyResponse)[vs[1].(int)]
	}).(CassandraPartitionKeyResponseOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchema struct {
	// List of cluster key.
	ClusterKeys []ClusterKey `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []Column `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKey `pulumi:"partitionKeys"`
}

// CassandraSchemaInput is an input type that accepts CassandraSchemaArgs and CassandraSchemaOutput values.
// You can construct a concrete instance of `CassandraSchemaInput` via:
//
//          CassandraSchemaArgs{...}
type CassandraSchemaInput interface {
	pulumi.Input

	ToCassandraSchemaOutput() CassandraSchemaOutput
	ToCassandraSchemaOutputWithContext(context.Context) CassandraSchemaOutput
}

// Cosmos DB Cassandra table schema
type CassandraSchemaArgs struct {
	// List of cluster key.
	ClusterKeys ClusterKeyArrayInput `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns ColumnArrayInput `pulumi:"columns"`
	// List of partition key.
	PartitionKeys CassandraPartitionKeyArrayInput `pulumi:"partitionKeys"`
}

func (CassandraSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchema)(nil)).Elem()
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutput() CassandraSchemaOutput {
	return i.ToCassandraSchemaOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaOutputWithContext(ctx context.Context) CassandraSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput)
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i CassandraSchemaArgs) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaOutput).ToCassandraSchemaPtrOutputWithContext(ctx)
}

// CassandraSchemaPtrInput is an input type that accepts CassandraSchemaArgs, CassandraSchemaPtr and CassandraSchemaPtrOutput values.
// You can construct a concrete instance of `CassandraSchemaPtrInput` via:
//
//          CassandraSchemaArgs{...}
//
//  or:
//
//          nil
type CassandraSchemaPtrInput interface {
	pulumi.Input

	ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput
	ToCassandraSchemaPtrOutputWithContext(context.Context) CassandraSchemaPtrOutput
}

type cassandraSchemaPtrType CassandraSchemaArgs

func CassandraSchemaPtr(v *CassandraSchemaArgs) CassandraSchemaPtrInput {
	return (*cassandraSchemaPtrType)(v)
}

func (*cassandraSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchema)(nil)).Elem()
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return i.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (i *cassandraSchemaPtrType) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaPtrOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaOutput struct{ *pulumi.OutputState }

func (CassandraSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchema)(nil)).Elem()
}

func (o CassandraSchemaOutput) ToCassandraSchemaOutput() CassandraSchemaOutput {
	return o
}

func (o CassandraSchemaOutput) ToCassandraSchemaOutputWithContext(ctx context.Context) CassandraSchemaOutput {
	return o
}

func (o CassandraSchemaOutput) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return o.ToCassandraSchemaPtrOutputWithContext(context.Background())
}

func (o CassandraSchemaOutput) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return o.ApplyT(func(v CassandraSchema) *CassandraSchema {
		return &v
	}).(CassandraSchemaPtrOutput)
}

// List of cluster key.
func (o CassandraSchemaOutput) ClusterKeys() ClusterKeyArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []ClusterKey { return v.ClusterKeys }).(ClusterKeyArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaOutput) Columns() ColumnArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []Column { return v.Columns }).(ColumnArrayOutput)
}

// List of partition key.
func (o CassandraSchemaOutput) PartitionKeys() CassandraPartitionKeyArrayOutput {
	return o.ApplyT(func(v CassandraSchema) []CassandraPartitionKey { return v.PartitionKeys }).(CassandraPartitionKeyArrayOutput)
}

type CassandraSchemaPtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchema)(nil)).Elem()
}

func (o CassandraSchemaPtrOutput) ToCassandraSchemaPtrOutput() CassandraSchemaPtrOutput {
	return o
}

func (o CassandraSchemaPtrOutput) ToCassandraSchemaPtrOutputWithContext(ctx context.Context) CassandraSchemaPtrOutput {
	return o
}

func (o CassandraSchemaPtrOutput) Elem() CassandraSchemaOutput {
	return o.ApplyT(func(v *CassandraSchema) CassandraSchema { return *v }).(CassandraSchemaOutput)
}

// List of cluster key.
func (o CassandraSchemaPtrOutput) ClusterKeys() ClusterKeyArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []ClusterKey {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaPtrOutput) Columns() ColumnArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []Column {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnArrayOutput)
}

// List of partition key.
func (o CassandraSchemaPtrOutput) PartitionKeys() CassandraPartitionKeyArrayOutput {
	return o.ApplyT(func(v *CassandraSchema) []CassandraPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyArrayOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaInvokeResponse struct {
	// List of cluster key.
	ClusterKeys []ClusterKeyInvokeResponse `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []ColumnInvokeResponse `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKeyInvokeResponse `pulumi:"partitionKeys"`
}

// CassandraSchemaInvokeResponseInput is an input type that accepts CassandraSchemaInvokeResponseArgs and CassandraSchemaInvokeResponseOutput values.
// You can construct a concrete instance of `CassandraSchemaInvokeResponseInput` via:
//
//          CassandraSchemaInvokeResponseArgs{...}
type CassandraSchemaInvokeResponseInput interface {
	pulumi.Input

	ToCassandraSchemaInvokeResponseOutput() CassandraSchemaInvokeResponseOutput
	ToCassandraSchemaInvokeResponseOutputWithContext(context.Context) CassandraSchemaInvokeResponseOutput
}

// Cosmos DB Cassandra table schema
type CassandraSchemaInvokeResponseArgs struct {
	// List of cluster key.
	ClusterKeys ClusterKeyInvokeResponseArrayInput `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns ColumnInvokeResponseArrayInput `pulumi:"columns"`
	// List of partition key.
	PartitionKeys CassandraPartitionKeyInvokeResponseArrayInput `pulumi:"partitionKeys"`
}

func (CassandraSchemaInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaInvokeResponse)(nil)).Elem()
}

func (i CassandraSchemaInvokeResponseArgs) ToCassandraSchemaInvokeResponseOutput() CassandraSchemaInvokeResponseOutput {
	return i.ToCassandraSchemaInvokeResponseOutputWithContext(context.Background())
}

func (i CassandraSchemaInvokeResponseArgs) ToCassandraSchemaInvokeResponseOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaInvokeResponseOutput)
}

func (i CassandraSchemaInvokeResponseArgs) ToCassandraSchemaInvokeResponsePtrOutput() CassandraSchemaInvokeResponsePtrOutput {
	return i.ToCassandraSchemaInvokeResponsePtrOutputWithContext(context.Background())
}

func (i CassandraSchemaInvokeResponseArgs) ToCassandraSchemaInvokeResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaInvokeResponseOutput).ToCassandraSchemaInvokeResponsePtrOutputWithContext(ctx)
}

// CassandraSchemaInvokeResponsePtrInput is an input type that accepts CassandraSchemaInvokeResponseArgs, CassandraSchemaInvokeResponsePtr and CassandraSchemaInvokeResponsePtrOutput values.
// You can construct a concrete instance of `CassandraSchemaInvokeResponsePtrInput` via:
//
//          CassandraSchemaInvokeResponseArgs{...}
//
//  or:
//
//          nil
type CassandraSchemaInvokeResponsePtrInput interface {
	pulumi.Input

	ToCassandraSchemaInvokeResponsePtrOutput() CassandraSchemaInvokeResponsePtrOutput
	ToCassandraSchemaInvokeResponsePtrOutputWithContext(context.Context) CassandraSchemaInvokeResponsePtrOutput
}

type cassandraSchemaInvokeResponsePtrType CassandraSchemaInvokeResponseArgs

func CassandraSchemaInvokeResponsePtr(v *CassandraSchemaInvokeResponseArgs) CassandraSchemaInvokeResponsePtrInput {
	return (*cassandraSchemaInvokeResponsePtrType)(v)
}

func (*cassandraSchemaInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaInvokeResponse)(nil)).Elem()
}

func (i *cassandraSchemaInvokeResponsePtrType) ToCassandraSchemaInvokeResponsePtrOutput() CassandraSchemaInvokeResponsePtrOutput {
	return i.ToCassandraSchemaInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *cassandraSchemaInvokeResponsePtrType) ToCassandraSchemaInvokeResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaInvokeResponsePtrOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaInvokeResponseOutput struct{ *pulumi.OutputState }

func (CassandraSchemaInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaInvokeResponse)(nil)).Elem()
}

func (o CassandraSchemaInvokeResponseOutput) ToCassandraSchemaInvokeResponseOutput() CassandraSchemaInvokeResponseOutput {
	return o
}

func (o CassandraSchemaInvokeResponseOutput) ToCassandraSchemaInvokeResponseOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponseOutput {
	return o
}

func (o CassandraSchemaInvokeResponseOutput) ToCassandraSchemaInvokeResponsePtrOutput() CassandraSchemaInvokeResponsePtrOutput {
	return o.ToCassandraSchemaInvokeResponsePtrOutputWithContext(context.Background())
}

func (o CassandraSchemaInvokeResponseOutput) ToCassandraSchemaInvokeResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponsePtrOutput {
	return o.ApplyT(func(v CassandraSchemaInvokeResponse) *CassandraSchemaInvokeResponse {
		return &v
	}).(CassandraSchemaInvokeResponsePtrOutput)
}

// List of cluster key.
func (o CassandraSchemaInvokeResponseOutput) ClusterKeys() ClusterKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaInvokeResponse) []ClusterKeyInvokeResponse { return v.ClusterKeys }).(ClusterKeyInvokeResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaInvokeResponseOutput) Columns() ColumnInvokeResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaInvokeResponse) []ColumnInvokeResponse { return v.Columns }).(ColumnInvokeResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaInvokeResponseOutput) PartitionKeys() CassandraPartitionKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaInvokeResponse) []CassandraPartitionKeyInvokeResponse { return v.PartitionKeys }).(CassandraPartitionKeyInvokeResponseArrayOutput)
}

type CassandraSchemaInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaInvokeResponse)(nil)).Elem()
}

func (o CassandraSchemaInvokeResponsePtrOutput) ToCassandraSchemaInvokeResponsePtrOutput() CassandraSchemaInvokeResponsePtrOutput {
	return o
}

func (o CassandraSchemaInvokeResponsePtrOutput) ToCassandraSchemaInvokeResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaInvokeResponsePtrOutput {
	return o
}

func (o CassandraSchemaInvokeResponsePtrOutput) Elem() CassandraSchemaInvokeResponseOutput {
	return o.ApplyT(func(v *CassandraSchemaInvokeResponse) CassandraSchemaInvokeResponse { return *v }).(CassandraSchemaInvokeResponseOutput)
}

// List of cluster key.
func (o CassandraSchemaInvokeResponsePtrOutput) ClusterKeys() ClusterKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaInvokeResponse) []ClusterKeyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyInvokeResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaInvokeResponsePtrOutput) Columns() ColumnInvokeResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaInvokeResponse) []ColumnInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnInvokeResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaInvokeResponsePtrOutput) PartitionKeys() CassandraPartitionKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaInvokeResponse) []CassandraPartitionKeyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyInvokeResponseArrayOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponse struct {
	// List of cluster key.
	ClusterKeys []ClusterKeyResponse `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns []ColumnResponse `pulumi:"columns"`
	// List of partition key.
	PartitionKeys []CassandraPartitionKeyResponse `pulumi:"partitionKeys"`
}

// CassandraSchemaResponseInput is an input type that accepts CassandraSchemaResponseArgs and CassandraSchemaResponseOutput values.
// You can construct a concrete instance of `CassandraSchemaResponseInput` via:
//
//          CassandraSchemaResponseArgs{...}
type CassandraSchemaResponseInput interface {
	pulumi.Input

	ToCassandraSchemaResponseOutput() CassandraSchemaResponseOutput
	ToCassandraSchemaResponseOutputWithContext(context.Context) CassandraSchemaResponseOutput
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponseArgs struct {
	// List of cluster key.
	ClusterKeys ClusterKeyResponseArrayInput `pulumi:"clusterKeys"`
	// List of Cassandra table columns.
	Columns ColumnResponseArrayInput `pulumi:"columns"`
	// List of partition key.
	PartitionKeys CassandraPartitionKeyResponseArrayInput `pulumi:"partitionKeys"`
}

func (CassandraSchemaResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaResponse)(nil)).Elem()
}

func (i CassandraSchemaResponseArgs) ToCassandraSchemaResponseOutput() CassandraSchemaResponseOutput {
	return i.ToCassandraSchemaResponseOutputWithContext(context.Background())
}

func (i CassandraSchemaResponseArgs) ToCassandraSchemaResponseOutputWithContext(ctx context.Context) CassandraSchemaResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaResponseOutput)
}

func (i CassandraSchemaResponseArgs) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return i.ToCassandraSchemaResponsePtrOutputWithContext(context.Background())
}

func (i CassandraSchemaResponseArgs) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaResponseOutput).ToCassandraSchemaResponsePtrOutputWithContext(ctx)
}

// CassandraSchemaResponsePtrInput is an input type that accepts CassandraSchemaResponseArgs, CassandraSchemaResponsePtr and CassandraSchemaResponsePtrOutput values.
// You can construct a concrete instance of `CassandraSchemaResponsePtrInput` via:
//
//          CassandraSchemaResponseArgs{...}
//
//  or:
//
//          nil
type CassandraSchemaResponsePtrInput interface {
	pulumi.Input

	ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput
	ToCassandraSchemaResponsePtrOutputWithContext(context.Context) CassandraSchemaResponsePtrOutput
}

type cassandraSchemaResponsePtrType CassandraSchemaResponseArgs

func CassandraSchemaResponsePtr(v *CassandraSchemaResponseArgs) CassandraSchemaResponsePtrInput {
	return (*cassandraSchemaResponsePtrType)(v)
}

func (*cassandraSchemaResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaResponse)(nil)).Elem()
}

func (i *cassandraSchemaResponsePtrType) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return i.ToCassandraSchemaResponsePtrOutputWithContext(context.Background())
}

func (i *cassandraSchemaResponsePtrType) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraSchemaResponsePtrOutput)
}

// Cosmos DB Cassandra table schema
type CassandraSchemaResponseOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutput() CassandraSchemaResponseOutput {
	return o
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponseOutputWithContext(ctx context.Context) CassandraSchemaResponseOutput {
	return o
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return o.ToCassandraSchemaResponsePtrOutputWithContext(context.Background())
}

func (o CassandraSchemaResponseOutput) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) *CassandraSchemaResponse {
		return &v
	}).(CassandraSchemaResponsePtrOutput)
}

// List of cluster key.
func (o CassandraSchemaResponseOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ClusterKeyResponse { return v.ClusterKeys }).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponseOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []ColumnResponse { return v.Columns }).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponseOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v CassandraSchemaResponse) []CassandraPartitionKeyResponse { return v.PartitionKeys }).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraSchemaResponsePtrOutput struct{ *pulumi.OutputState }

func (CassandraSchemaResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraSchemaResponse)(nil)).Elem()
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutput() CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) ToCassandraSchemaResponsePtrOutputWithContext(ctx context.Context) CassandraSchemaResponsePtrOutput {
	return o
}

func (o CassandraSchemaResponsePtrOutput) Elem() CassandraSchemaResponseOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) CassandraSchemaResponse { return *v }).(CassandraSchemaResponseOutput)
}

// List of cluster key.
func (o CassandraSchemaResponsePtrOutput) ClusterKeys() ClusterKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ClusterKeyResponse {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(ClusterKeyResponseArrayOutput)
}

// List of Cassandra table columns.
func (o CassandraSchemaResponsePtrOutput) Columns() ColumnResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []ColumnResponse {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(ColumnResponseArrayOutput)
}

// List of partition key.
func (o CassandraSchemaResponsePtrOutput) PartitionKeys() CassandraPartitionKeyResponseArrayOutput {
	return o.ApplyT(func(v *CassandraSchemaResponse) []CassandraPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraPartitionKeyResponseArrayOutput)
}

type CassandraTableGetPropertiesInvokeResponseResource struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchemaInvokeResponse `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// CassandraTableGetPropertiesInvokeResponseResourceInput is an input type that accepts CassandraTableGetPropertiesInvokeResponseResourceArgs and CassandraTableGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `CassandraTableGetPropertiesInvokeResponseResourceInput` via:
//
//          CassandraTableGetPropertiesInvokeResponseResourceArgs{...}
type CassandraTableGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToCassandraTableGetPropertiesInvokeResponseResourceOutput() CassandraTableGetPropertiesInvokeResponseResourceOutput
	ToCassandraTableGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) CassandraTableGetPropertiesInvokeResponseResourceOutput
}

type CassandraTableGetPropertiesInvokeResponseResourceArgs struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema CassandraSchemaInvokeResponsePtrInput `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (CassandraTableGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i CassandraTableGetPropertiesInvokeResponseResourceArgs) ToCassandraTableGetPropertiesInvokeResponseResourceOutput() CassandraTableGetPropertiesInvokeResponseResourceOutput {
	return i.ToCassandraTableGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i CassandraTableGetPropertiesInvokeResponseResourceArgs) ToCassandraTableGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableGetPropertiesInvokeResponseResourceOutput)
}

type CassandraTableGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) ToCassandraTableGetPropertiesInvokeResponseResourceOutput() CassandraTableGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) ToCassandraTableGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesInvokeResponseResourceOutput {
	return o
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) Schema() CassandraSchemaInvokeResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) *CassandraSchemaInvokeResponse {
		return v.Schema
	}).(CassandraSchemaInvokeResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type CassandraTableGetPropertiesResponseResource struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchemaResponse `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// CassandraTableGetPropertiesResponseResourceInput is an input type that accepts CassandraTableGetPropertiesResponseResourceArgs and CassandraTableGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `CassandraTableGetPropertiesResponseResourceInput` via:
//
//          CassandraTableGetPropertiesResponseResourceArgs{...}
type CassandraTableGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToCassandraTableGetPropertiesResponseResourceOutput() CassandraTableGetPropertiesResponseResourceOutput
	ToCassandraTableGetPropertiesResponseResourceOutputWithContext(context.Context) CassandraTableGetPropertiesResponseResourceOutput
}

type CassandraTableGetPropertiesResponseResourceArgs struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Cassandra table
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// Schema of the Cosmos DB Cassandra table
	Schema CassandraSchemaResponsePtrInput `pulumi:"schema"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (CassandraTableGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (i CassandraTableGetPropertiesResponseResourceArgs) ToCassandraTableGetPropertiesResponseResourceOutput() CassandraTableGetPropertiesResponseResourceOutput {
	return i.ToCassandraTableGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i CassandraTableGetPropertiesResponseResourceArgs) ToCassandraTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableGetPropertiesResponseResourceOutput)
}

func (i CassandraTableGetPropertiesResponseResourceArgs) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return i.ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i CassandraTableGetPropertiesResponseResourceArgs) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableGetPropertiesResponseResourceOutput).ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// CassandraTableGetPropertiesResponseResourcePtrInput is an input type that accepts CassandraTableGetPropertiesResponseResourceArgs, CassandraTableGetPropertiesResponseResourcePtr and CassandraTableGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `CassandraTableGetPropertiesResponseResourcePtrInput` via:
//
//          CassandraTableGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type CassandraTableGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput
	ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput
}

type cassandraTableGetPropertiesResponseResourcePtrType CassandraTableGetPropertiesResponseResourceArgs

func CassandraTableGetPropertiesResponseResourcePtr(v *CassandraTableGetPropertiesResponseResourceArgs) CassandraTableGetPropertiesResponseResourcePtrInput {
	return (*cassandraTableGetPropertiesResponseResourcePtrType)(v)
}

func (*cassandraTableGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (i *cassandraTableGetPropertiesResponseResourcePtrType) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return i.ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraTableGetPropertiesResponseResourcePtrType) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableGetPropertiesResponseResourcePtrOutput)
}

type CassandraTableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutput() CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourceOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o.ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o CassandraTableGetPropertiesResponseResourceOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *CassandraTableGetPropertiesResponseResource {
		return &v
	}).(CassandraTableGetPropertiesResponseResourcePtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourceOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse { return v.Schema }).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v CassandraTableGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type CassandraTableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraTableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableGetPropertiesResponseResource)(nil)).Elem()
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutput() CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) ToCassandraTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) CassandraTableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Elem() CassandraTableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) CassandraTableGetPropertiesResponseResource {
		return *v
	}).(CassandraTableGetPropertiesResponseResourceOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Schema() CassandraSchemaResponsePtrOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) *CassandraSchemaResponse {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(CassandraSchemaResponsePtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o CassandraTableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *CassandraTableGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB Cassandra table resource object
type CassandraTableResource struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id string `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema *CassandraSchema `pulumi:"schema"`
}

// CassandraTableResourceInput is an input type that accepts CassandraTableResourceArgs and CassandraTableResourceOutput values.
// You can construct a concrete instance of `CassandraTableResourceInput` via:
//
//          CassandraTableResourceArgs{...}
type CassandraTableResourceInput interface {
	pulumi.Input

	ToCassandraTableResourceOutput() CassandraTableResourceOutput
	ToCassandraTableResourceOutputWithContext(context.Context) CassandraTableResourceOutput
}

// Cosmos DB Cassandra table resource object
type CassandraTableResourceArgs struct {
	// Time to live of the Cosmos DB Cassandra table
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Cassandra table
	Id pulumi.StringInput `pulumi:"id"`
	// Schema of the Cosmos DB Cassandra table
	Schema CassandraSchemaPtrInput `pulumi:"schema"`
}

func (CassandraTableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableResource)(nil)).Elem()
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutput() CassandraTableResourceOutput {
	return i.ToCassandraTableResourceOutputWithContext(context.Background())
}

func (i CassandraTableResourceArgs) ToCassandraTableResourceOutputWithContext(ctx context.Context) CassandraTableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourceOutput)
}

func (i CassandraTableResourceArgs) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return i.ToCassandraTableResourcePtrOutputWithContext(context.Background())
}

func (i CassandraTableResourceArgs) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourceOutput).ToCassandraTableResourcePtrOutputWithContext(ctx)
}

// CassandraTableResourcePtrInput is an input type that accepts CassandraTableResourceArgs, CassandraTableResourcePtr and CassandraTableResourcePtrOutput values.
// You can construct a concrete instance of `CassandraTableResourcePtrInput` via:
//
//          CassandraTableResourceArgs{...}
//
//  or:
//
//          nil
type CassandraTableResourcePtrInput interface {
	pulumi.Input

	ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput
	ToCassandraTableResourcePtrOutputWithContext(context.Context) CassandraTableResourcePtrOutput
}

type cassandraTableResourcePtrType CassandraTableResourceArgs

func CassandraTableResourcePtr(v *CassandraTableResourceArgs) CassandraTableResourcePtrInput {
	return (*cassandraTableResourcePtrType)(v)
}

func (*cassandraTableResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableResource)(nil)).Elem()
}

func (i *cassandraTableResourcePtrType) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return i.ToCassandraTableResourcePtrOutputWithContext(context.Background())
}

func (i *cassandraTableResourcePtrType) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableResourcePtrOutput)
}

// Cosmos DB Cassandra table resource object
type CassandraTableResourceOutput struct{ *pulumi.OutputState }

func (CassandraTableResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableResource)(nil)).Elem()
}

func (o CassandraTableResourceOutput) ToCassandraTableResourceOutput() CassandraTableResourceOutput {
	return o
}

func (o CassandraTableResourceOutput) ToCassandraTableResourceOutputWithContext(ctx context.Context) CassandraTableResourceOutput {
	return o
}

func (o CassandraTableResourceOutput) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return o.ToCassandraTableResourcePtrOutputWithContext(context.Background())
}

func (o CassandraTableResourceOutput) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *CassandraTableResource {
		return &v
	}).(CassandraTableResourcePtrOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableResource) string { return v.Id }).(pulumi.StringOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableResourceOutput) Schema() CassandraSchemaPtrOutput {
	return o.ApplyT(func(v CassandraTableResource) *CassandraSchema { return v.Schema }).(CassandraSchemaPtrOutput)
}

type CassandraTableResourcePtrOutput struct{ *pulumi.OutputState }

func (CassandraTableResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableResource)(nil)).Elem()
}

func (o CassandraTableResourcePtrOutput) ToCassandraTableResourcePtrOutput() CassandraTableResourcePtrOutput {
	return o
}

func (o CassandraTableResourcePtrOutput) ToCassandraTableResourcePtrOutputWithContext(ctx context.Context) CassandraTableResourcePtrOutput {
	return o
}

func (o CassandraTableResourcePtrOutput) Elem() CassandraTableResourceOutput {
	return o.ApplyT(func(v *CassandraTableResource) CassandraTableResource { return *v }).(CassandraTableResourceOutput)
}

// Time to live of the Cosmos DB Cassandra table
func (o CassandraTableResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Cassandra table
func (o CassandraTableResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraTableResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Schema of the Cosmos DB Cassandra table
func (o CassandraTableResourcePtrOutput) Schema() CassandraSchemaPtrOutput {
	return o.ApplyT(func(v *CassandraTableResource) *CassandraSchema {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(CassandraSchemaPtrOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKey struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// ClusterKeyInput is an input type that accepts ClusterKeyArgs and ClusterKeyOutput values.
// You can construct a concrete instance of `ClusterKeyInput` via:
//
//          ClusterKeyArgs{...}
type ClusterKeyInput interface {
	pulumi.Input

	ToClusterKeyOutput() ClusterKeyOutput
	ToClusterKeyOutputWithContext(context.Context) ClusterKeyOutput
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyArgs struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (ClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArgs) ToClusterKeyOutput() ClusterKeyOutput {
	return i.ToClusterKeyOutputWithContext(context.Background())
}

func (i ClusterKeyArgs) ToClusterKeyOutputWithContext(ctx context.Context) ClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyOutput)
}

// ClusterKeyArrayInput is an input type that accepts ClusterKeyArray and ClusterKeyArrayOutput values.
// You can construct a concrete instance of `ClusterKeyArrayInput` via:
//
//          ClusterKeyArray{ ClusterKeyArgs{...} }
type ClusterKeyArrayInput interface {
	pulumi.Input

	ToClusterKeyArrayOutput() ClusterKeyArrayOutput
	ToClusterKeyArrayOutputWithContext(context.Context) ClusterKeyArrayOutput
}

type ClusterKeyArray []ClusterKeyInput

func (ClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKey)(nil)).Elem()
}

func (i ClusterKeyArray) ToClusterKeyArrayOutput() ClusterKeyArrayOutput {
	return i.ToClusterKeyArrayOutputWithContext(context.Background())
}

func (i ClusterKeyArray) ToClusterKeyArrayOutputWithContext(ctx context.Context) ClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyArrayOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyOutput struct{ *pulumi.OutputState }

func (ClusterKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKey)(nil)).Elem()
}

func (o ClusterKeyOutput) ToClusterKeyOutput() ClusterKeyOutput {
	return o
}

func (o ClusterKeyOutput) ToClusterKeyOutputWithContext(ctx context.Context) ClusterKeyOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKey) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKey)(nil)).Elem()
}

func (o ClusterKeyArrayOutput) ToClusterKeyArrayOutput() ClusterKeyArrayOutput {
	return o
}

func (o ClusterKeyArrayOutput) ToClusterKeyArrayOutputWithContext(ctx context.Context) ClusterKeyArrayOutput {
	return o
}

func (o ClusterKeyArrayOutput) Index(i pulumi.IntInput) ClusterKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKey {
		return vs[0].([]ClusterKey)[vs[1].(int)]
	}).(ClusterKeyOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyInvokeResponse struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// ClusterKeyInvokeResponseInput is an input type that accepts ClusterKeyInvokeResponseArgs and ClusterKeyInvokeResponseOutput values.
// You can construct a concrete instance of `ClusterKeyInvokeResponseInput` via:
//
//          ClusterKeyInvokeResponseArgs{...}
type ClusterKeyInvokeResponseInput interface {
	pulumi.Input

	ToClusterKeyInvokeResponseOutput() ClusterKeyInvokeResponseOutput
	ToClusterKeyInvokeResponseOutputWithContext(context.Context) ClusterKeyInvokeResponseOutput
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyInvokeResponseArgs struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (ClusterKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyInvokeResponse)(nil)).Elem()
}

func (i ClusterKeyInvokeResponseArgs) ToClusterKeyInvokeResponseOutput() ClusterKeyInvokeResponseOutput {
	return i.ToClusterKeyInvokeResponseOutputWithContext(context.Background())
}

func (i ClusterKeyInvokeResponseArgs) ToClusterKeyInvokeResponseOutputWithContext(ctx context.Context) ClusterKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyInvokeResponseOutput)
}

// ClusterKeyInvokeResponseArrayInput is an input type that accepts ClusterKeyInvokeResponseArray and ClusterKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ClusterKeyInvokeResponseArrayInput` via:
//
//          ClusterKeyInvokeResponseArray{ ClusterKeyInvokeResponseArgs{...} }
type ClusterKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToClusterKeyInvokeResponseArrayOutput() ClusterKeyInvokeResponseArrayOutput
	ToClusterKeyInvokeResponseArrayOutputWithContext(context.Context) ClusterKeyInvokeResponseArrayOutput
}

type ClusterKeyInvokeResponseArray []ClusterKeyInvokeResponseInput

func (ClusterKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyInvokeResponse)(nil)).Elem()
}

func (i ClusterKeyInvokeResponseArray) ToClusterKeyInvokeResponseArrayOutput() ClusterKeyInvokeResponseArrayOutput {
	return i.ToClusterKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ClusterKeyInvokeResponseArray) ToClusterKeyInvokeResponseArrayOutputWithContext(ctx context.Context) ClusterKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyInvokeResponseArrayOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ClusterKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyInvokeResponse)(nil)).Elem()
}

func (o ClusterKeyInvokeResponseOutput) ToClusterKeyInvokeResponseOutput() ClusterKeyInvokeResponseOutput {
	return o
}

func (o ClusterKeyInvokeResponseOutput) ToClusterKeyInvokeResponseOutputWithContext(ctx context.Context) ClusterKeyInvokeResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyInvokeResponseOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyInvokeResponse) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyInvokeResponse)(nil)).Elem()
}

func (o ClusterKeyInvokeResponseArrayOutput) ToClusterKeyInvokeResponseArrayOutput() ClusterKeyInvokeResponseArrayOutput {
	return o
}

func (o ClusterKeyInvokeResponseArrayOutput) ToClusterKeyInvokeResponseArrayOutputWithContext(ctx context.Context) ClusterKeyInvokeResponseArrayOutput {
	return o
}

func (o ClusterKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) ClusterKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKeyInvokeResponse {
		return vs[0].([]ClusterKeyInvokeResponse)[vs[1].(int)]
	}).(ClusterKeyInvokeResponseOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponse struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name *string `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy *string `pulumi:"orderBy"`
}

// ClusterKeyResponseInput is an input type that accepts ClusterKeyResponseArgs and ClusterKeyResponseOutput values.
// You can construct a concrete instance of `ClusterKeyResponseInput` via:
//
//          ClusterKeyResponseArgs{...}
type ClusterKeyResponseInput interface {
	pulumi.Input

	ToClusterKeyResponseOutput() ClusterKeyResponseOutput
	ToClusterKeyResponseOutputWithContext(context.Context) ClusterKeyResponseOutput
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponseArgs struct {
	// Name of the Cosmos DB Cassandra table cluster key
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (ClusterKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyResponse)(nil)).Elem()
}

func (i ClusterKeyResponseArgs) ToClusterKeyResponseOutput() ClusterKeyResponseOutput {
	return i.ToClusterKeyResponseOutputWithContext(context.Background())
}

func (i ClusterKeyResponseArgs) ToClusterKeyResponseOutputWithContext(ctx context.Context) ClusterKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyResponseOutput)
}

// ClusterKeyResponseArrayInput is an input type that accepts ClusterKeyResponseArray and ClusterKeyResponseArrayOutput values.
// You can construct a concrete instance of `ClusterKeyResponseArrayInput` via:
//
//          ClusterKeyResponseArray{ ClusterKeyResponseArgs{...} }
type ClusterKeyResponseArrayInput interface {
	pulumi.Input

	ToClusterKeyResponseArrayOutput() ClusterKeyResponseArrayOutput
	ToClusterKeyResponseArrayOutputWithContext(context.Context) ClusterKeyResponseArrayOutput
}

type ClusterKeyResponseArray []ClusterKeyResponseInput

func (ClusterKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyResponse)(nil)).Elem()
}

func (i ClusterKeyResponseArray) ToClusterKeyResponseArrayOutput() ClusterKeyResponseArrayOutput {
	return i.ToClusterKeyResponseArrayOutputWithContext(context.Background())
}

func (i ClusterKeyResponseArray) ToClusterKeyResponseArrayOutputWithContext(ctx context.Context) ClusterKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterKeyResponseArrayOutput)
}

// Cosmos DB Cassandra table cluster key
type ClusterKeyResponseOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutput() ClusterKeyResponseOutput {
	return o
}

func (o ClusterKeyResponseOutput) ToClusterKeyResponseOutputWithContext(ctx context.Context) ClusterKeyResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table cluster key
func (o ClusterKeyResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
func (o ClusterKeyResponseOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterKeyResponse) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type ClusterKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (ClusterKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterKeyResponse)(nil)).Elem()
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutput() ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) ToClusterKeyResponseArrayOutputWithContext(ctx context.Context) ClusterKeyResponseArrayOutput {
	return o
}

func (o ClusterKeyResponseArrayOutput) Index(i pulumi.IntInput) ClusterKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterKeyResponse {
		return vs[0].([]ClusterKeyResponse)[vs[1].(int)]
	}).(ClusterKeyResponseOutput)
}

// Cosmos DB Cassandra table column
type Column struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// ColumnInput is an input type that accepts ColumnArgs and ColumnOutput values.
// You can construct a concrete instance of `ColumnInput` via:
//
//          ColumnArgs{...}
type ColumnInput interface {
	pulumi.Input

	ToColumnOutput() ColumnOutput
	ToColumnOutputWithContext(context.Context) ColumnOutput
}

// Cosmos DB Cassandra table column
type ColumnArgs struct {
	// Name of the Cosmos DB Cassandra table column
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Column)(nil)).Elem()
}

func (i ColumnArgs) ToColumnOutput() ColumnOutput {
	return i.ToColumnOutputWithContext(context.Background())
}

func (i ColumnArgs) ToColumnOutputWithContext(ctx context.Context) ColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnOutput)
}

// ColumnArrayInput is an input type that accepts ColumnArray and ColumnArrayOutput values.
// You can construct a concrete instance of `ColumnArrayInput` via:
//
//          ColumnArray{ ColumnArgs{...} }
type ColumnArrayInput interface {
	pulumi.Input

	ToColumnArrayOutput() ColumnArrayOutput
	ToColumnArrayOutputWithContext(context.Context) ColumnArrayOutput
}

type ColumnArray []ColumnInput

func (ColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Column)(nil)).Elem()
}

func (i ColumnArray) ToColumnArrayOutput() ColumnArrayOutput {
	return i.ToColumnArrayOutputWithContext(context.Background())
}

func (i ColumnArray) ToColumnArrayOutputWithContext(ctx context.Context) ColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnArrayOutput)
}

// Cosmos DB Cassandra table column
type ColumnOutput struct{ *pulumi.OutputState }

func (ColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Column)(nil)).Elem()
}

func (o ColumnOutput) ToColumnOutput() ColumnOutput {
	return o
}

func (o ColumnOutput) ToColumnOutputWithContext(ctx context.Context) ColumnOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Column) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Column) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnArrayOutput struct{ *pulumi.OutputState }

func (ColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Column)(nil)).Elem()
}

func (o ColumnArrayOutput) ToColumnArrayOutput() ColumnArrayOutput {
	return o
}

func (o ColumnArrayOutput) ToColumnArrayOutputWithContext(ctx context.Context) ColumnArrayOutput {
	return o
}

func (o ColumnArrayOutput) Index(i pulumi.IntInput) ColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Column {
		return vs[0].([]Column)[vs[1].(int)]
	}).(ColumnOutput)
}

// Cosmos DB Cassandra table column
type ColumnInvokeResponse struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// ColumnInvokeResponseInput is an input type that accepts ColumnInvokeResponseArgs and ColumnInvokeResponseOutput values.
// You can construct a concrete instance of `ColumnInvokeResponseInput` via:
//
//          ColumnInvokeResponseArgs{...}
type ColumnInvokeResponseInput interface {
	pulumi.Input

	ToColumnInvokeResponseOutput() ColumnInvokeResponseOutput
	ToColumnInvokeResponseOutputWithContext(context.Context) ColumnInvokeResponseOutput
}

// Cosmos DB Cassandra table column
type ColumnInvokeResponseArgs struct {
	// Name of the Cosmos DB Cassandra table column
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ColumnInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnInvokeResponse)(nil)).Elem()
}

func (i ColumnInvokeResponseArgs) ToColumnInvokeResponseOutput() ColumnInvokeResponseOutput {
	return i.ToColumnInvokeResponseOutputWithContext(context.Background())
}

func (i ColumnInvokeResponseArgs) ToColumnInvokeResponseOutputWithContext(ctx context.Context) ColumnInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnInvokeResponseOutput)
}

// ColumnInvokeResponseArrayInput is an input type that accepts ColumnInvokeResponseArray and ColumnInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ColumnInvokeResponseArrayInput` via:
//
//          ColumnInvokeResponseArray{ ColumnInvokeResponseArgs{...} }
type ColumnInvokeResponseArrayInput interface {
	pulumi.Input

	ToColumnInvokeResponseArrayOutput() ColumnInvokeResponseArrayOutput
	ToColumnInvokeResponseArrayOutputWithContext(context.Context) ColumnInvokeResponseArrayOutput
}

type ColumnInvokeResponseArray []ColumnInvokeResponseInput

func (ColumnInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnInvokeResponse)(nil)).Elem()
}

func (i ColumnInvokeResponseArray) ToColumnInvokeResponseArrayOutput() ColumnInvokeResponseArrayOutput {
	return i.ToColumnInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ColumnInvokeResponseArray) ToColumnInvokeResponseArrayOutputWithContext(ctx context.Context) ColumnInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnInvokeResponseArrayOutput)
}

// Cosmos DB Cassandra table column
type ColumnInvokeResponseOutput struct{ *pulumi.OutputState }

func (ColumnInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnInvokeResponse)(nil)).Elem()
}

func (o ColumnInvokeResponseOutput) ToColumnInvokeResponseOutput() ColumnInvokeResponseOutput {
	return o
}

func (o ColumnInvokeResponseOutput) ToColumnInvokeResponseOutputWithContext(ctx context.Context) ColumnInvokeResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnInvokeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnInvokeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ColumnInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnInvokeResponse)(nil)).Elem()
}

func (o ColumnInvokeResponseArrayOutput) ToColumnInvokeResponseArrayOutput() ColumnInvokeResponseArrayOutput {
	return o
}

func (o ColumnInvokeResponseArrayOutput) ToColumnInvokeResponseArrayOutputWithContext(ctx context.Context) ColumnInvokeResponseArrayOutput {
	return o
}

func (o ColumnInvokeResponseArrayOutput) Index(i pulumi.IntInput) ColumnInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ColumnInvokeResponse {
		return vs[0].([]ColumnInvokeResponse)[vs[1].(int)]
	}).(ColumnInvokeResponseOutput)
}

// Cosmos DB Cassandra table column
type ColumnResponse struct {
	// Name of the Cosmos DB Cassandra table column
	Name *string `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type *string `pulumi:"type"`
}

// ColumnResponseInput is an input type that accepts ColumnResponseArgs and ColumnResponseOutput values.
// You can construct a concrete instance of `ColumnResponseInput` via:
//
//          ColumnResponseArgs{...}
type ColumnResponseInput interface {
	pulumi.Input

	ToColumnResponseOutput() ColumnResponseOutput
	ToColumnResponseOutputWithContext(context.Context) ColumnResponseOutput
}

// Cosmos DB Cassandra table column
type ColumnResponseArgs struct {
	// Name of the Cosmos DB Cassandra table column
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of the Cosmos DB Cassandra table column
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ColumnResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnResponse)(nil)).Elem()
}

func (i ColumnResponseArgs) ToColumnResponseOutput() ColumnResponseOutput {
	return i.ToColumnResponseOutputWithContext(context.Background())
}

func (i ColumnResponseArgs) ToColumnResponseOutputWithContext(ctx context.Context) ColumnResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnResponseOutput)
}

// ColumnResponseArrayInput is an input type that accepts ColumnResponseArray and ColumnResponseArrayOutput values.
// You can construct a concrete instance of `ColumnResponseArrayInput` via:
//
//          ColumnResponseArray{ ColumnResponseArgs{...} }
type ColumnResponseArrayInput interface {
	pulumi.Input

	ToColumnResponseArrayOutput() ColumnResponseArrayOutput
	ToColumnResponseArrayOutputWithContext(context.Context) ColumnResponseArrayOutput
}

type ColumnResponseArray []ColumnResponseInput

func (ColumnResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnResponse)(nil)).Elem()
}

func (i ColumnResponseArray) ToColumnResponseArrayOutput() ColumnResponseArrayOutput {
	return i.ToColumnResponseArrayOutputWithContext(context.Background())
}

func (i ColumnResponseArray) ToColumnResponseArrayOutputWithContext(ctx context.Context) ColumnResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColumnResponseArrayOutput)
}

// Cosmos DB Cassandra table column
type ColumnResponseOutput struct{ *pulumi.OutputState }

func (ColumnResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseOutput) ToColumnResponseOutput() ColumnResponseOutput {
	return o
}

func (o ColumnResponseOutput) ToColumnResponseOutputWithContext(ctx context.Context) ColumnResponseOutput {
	return o
}

// Name of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of the Cosmos DB Cassandra table column
func (o ColumnResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ColumnResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ColumnResponseArrayOutput struct{ *pulumi.OutputState }

func (ColumnResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ColumnResponse)(nil)).Elem()
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutput() ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) ToColumnResponseArrayOutputWithContext(ctx context.Context) ColumnResponseArrayOutput {
	return o
}

func (o ColumnResponseArrayOutput) Index(i pulumi.IntInput) ColumnResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ColumnResponse {
		return vs[0].([]ColumnResponse)[vs[1].(int)]
	}).(ColumnResponseOutput)
}

type CompositePath struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// CompositePathInput is an input type that accepts CompositePathArgs and CompositePathOutput values.
// You can construct a concrete instance of `CompositePathInput` via:
//
//          CompositePathArgs{...}
type CompositePathInput interface {
	pulumi.Input

	ToCompositePathOutput() CompositePathOutput
	ToCompositePathOutputWithContext(context.Context) CompositePathOutput
}

type CompositePathArgs struct {
	// Sort order for composite paths.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (CompositePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePath)(nil)).Elem()
}

func (i CompositePathArgs) ToCompositePathOutput() CompositePathOutput {
	return i.ToCompositePathOutputWithContext(context.Background())
}

func (i CompositePathArgs) ToCompositePathOutputWithContext(ctx context.Context) CompositePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathOutput)
}

// CompositePathArrayInput is an input type that accepts CompositePathArray and CompositePathArrayOutput values.
// You can construct a concrete instance of `CompositePathArrayInput` via:
//
//          CompositePathArray{ CompositePathArgs{...} }
type CompositePathArrayInput interface {
	pulumi.Input

	ToCompositePathArrayOutput() CompositePathArrayOutput
	ToCompositePathArrayOutputWithContext(context.Context) CompositePathArrayOutput
}

type CompositePathArray []CompositePathInput

func (CompositePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePath)(nil)).Elem()
}

func (i CompositePathArray) ToCompositePathArrayOutput() CompositePathArrayOutput {
	return i.ToCompositePathArrayOutputWithContext(context.Background())
}

func (i CompositePathArray) ToCompositePathArrayOutputWithContext(ctx context.Context) CompositePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathArrayOutput)
}

type CompositePathOutput struct{ *pulumi.OutputState }

func (CompositePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePath)(nil)).Elem()
}

func (o CompositePathOutput) ToCompositePathOutput() CompositePathOutput {
	return o
}

func (o CompositePathOutput) ToCompositePathOutputWithContext(ctx context.Context) CompositePathOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePath) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathArrayOutput struct{ *pulumi.OutputState }

func (CompositePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePath)(nil)).Elem()
}

func (o CompositePathArrayOutput) ToCompositePathArrayOutput() CompositePathArrayOutput {
	return o
}

func (o CompositePathArrayOutput) ToCompositePathArrayOutputWithContext(ctx context.Context) CompositePathArrayOutput {
	return o
}

func (o CompositePathArrayOutput) Index(i pulumi.IntInput) CompositePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePath {
		return vs[0].([]CompositePath)[vs[1].(int)]
	}).(CompositePathOutput)
}

type CompositePathInvokeResponse struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// CompositePathInvokeResponseInput is an input type that accepts CompositePathInvokeResponseArgs and CompositePathInvokeResponseOutput values.
// You can construct a concrete instance of `CompositePathInvokeResponseInput` via:
//
//          CompositePathInvokeResponseArgs{...}
type CompositePathInvokeResponseInput interface {
	pulumi.Input

	ToCompositePathInvokeResponseOutput() CompositePathInvokeResponseOutput
	ToCompositePathInvokeResponseOutputWithContext(context.Context) CompositePathInvokeResponseOutput
}

type CompositePathInvokeResponseArgs struct {
	// Sort order for composite paths.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (CompositePathInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathInvokeResponse)(nil)).Elem()
}

func (i CompositePathInvokeResponseArgs) ToCompositePathInvokeResponseOutput() CompositePathInvokeResponseOutput {
	return i.ToCompositePathInvokeResponseOutputWithContext(context.Background())
}

func (i CompositePathInvokeResponseArgs) ToCompositePathInvokeResponseOutputWithContext(ctx context.Context) CompositePathInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathInvokeResponseOutput)
}

// CompositePathInvokeResponseArrayInput is an input type that accepts CompositePathInvokeResponseArray and CompositePathInvokeResponseArrayOutput values.
// You can construct a concrete instance of `CompositePathInvokeResponseArrayInput` via:
//
//          CompositePathInvokeResponseArray{ CompositePathInvokeResponseArgs{...} }
type CompositePathInvokeResponseArrayInput interface {
	pulumi.Input

	ToCompositePathInvokeResponseArrayOutput() CompositePathInvokeResponseArrayOutput
	ToCompositePathInvokeResponseArrayOutputWithContext(context.Context) CompositePathInvokeResponseArrayOutput
}

type CompositePathInvokeResponseArray []CompositePathInvokeResponseInput

func (CompositePathInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathInvokeResponse)(nil)).Elem()
}

func (i CompositePathInvokeResponseArray) ToCompositePathInvokeResponseArrayOutput() CompositePathInvokeResponseArrayOutput {
	return i.ToCompositePathInvokeResponseArrayOutputWithContext(context.Background())
}

func (i CompositePathInvokeResponseArray) ToCompositePathInvokeResponseArrayOutputWithContext(ctx context.Context) CompositePathInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathInvokeResponseArrayOutput)
}

type CompositePathInvokeResponseOutput struct{ *pulumi.OutputState }

func (CompositePathInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathInvokeResponse)(nil)).Elem()
}

func (o CompositePathInvokeResponseOutput) ToCompositePathInvokeResponseOutput() CompositePathInvokeResponseOutput {
	return o
}

func (o CompositePathInvokeResponseOutput) ToCompositePathInvokeResponseOutputWithContext(ctx context.Context) CompositePathInvokeResponseOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathInvokeResponseOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathInvokeResponse) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (CompositePathInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathInvokeResponse)(nil)).Elem()
}

func (o CompositePathInvokeResponseArrayOutput) ToCompositePathInvokeResponseArrayOutput() CompositePathInvokeResponseArrayOutput {
	return o
}

func (o CompositePathInvokeResponseArrayOutput) ToCompositePathInvokeResponseArrayOutputWithContext(ctx context.Context) CompositePathInvokeResponseArrayOutput {
	return o
}

func (o CompositePathInvokeResponseArrayOutput) Index(i pulumi.IntInput) CompositePathInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePathInvokeResponse {
		return vs[0].([]CompositePathInvokeResponse)[vs[1].(int)]
	}).(CompositePathInvokeResponseOutput)
}

type CompositePathResponse struct {
	// Sort order for composite paths.
	Order *string `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// CompositePathResponseInput is an input type that accepts CompositePathResponseArgs and CompositePathResponseOutput values.
// You can construct a concrete instance of `CompositePathResponseInput` via:
//
//          CompositePathResponseArgs{...}
type CompositePathResponseInput interface {
	pulumi.Input

	ToCompositePathResponseOutput() CompositePathResponseOutput
	ToCompositePathResponseOutputWithContext(context.Context) CompositePathResponseOutput
}

type CompositePathResponseArgs struct {
	// Sort order for composite paths.
	Order pulumi.StringPtrInput `pulumi:"order"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (CompositePathResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathResponse)(nil)).Elem()
}

func (i CompositePathResponseArgs) ToCompositePathResponseOutput() CompositePathResponseOutput {
	return i.ToCompositePathResponseOutputWithContext(context.Background())
}

func (i CompositePathResponseArgs) ToCompositePathResponseOutputWithContext(ctx context.Context) CompositePathResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathResponseOutput)
}

// CompositePathResponseArrayInput is an input type that accepts CompositePathResponseArray and CompositePathResponseArrayOutput values.
// You can construct a concrete instance of `CompositePathResponseArrayInput` via:
//
//          CompositePathResponseArray{ CompositePathResponseArgs{...} }
type CompositePathResponseArrayInput interface {
	pulumi.Input

	ToCompositePathResponseArrayOutput() CompositePathResponseArrayOutput
	ToCompositePathResponseArrayOutputWithContext(context.Context) CompositePathResponseArrayOutput
}

type CompositePathResponseArray []CompositePathResponseInput

func (CompositePathResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathResponse)(nil)).Elem()
}

func (i CompositePathResponseArray) ToCompositePathResponseArrayOutput() CompositePathResponseArrayOutput {
	return i.ToCompositePathResponseArrayOutputWithContext(context.Background())
}

func (i CompositePathResponseArray) ToCompositePathResponseArrayOutputWithContext(ctx context.Context) CompositePathResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositePathResponseArrayOutput)
}

type CompositePathResponseOutput struct{ *pulumi.OutputState }

func (CompositePathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutput() CompositePathResponseOutput {
	return o
}

func (o CompositePathResponseOutput) ToCompositePathResponseOutputWithContext(ctx context.Context) CompositePathResponseOutput {
	return o
}

// Sort order for composite paths.
func (o CompositePathResponseOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Order }).(pulumi.StringPtrOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o CompositePathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CompositePathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type CompositePathResponseArrayOutput struct{ *pulumi.OutputState }

func (CompositePathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CompositePathResponse)(nil)).Elem()
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutput() CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) ToCompositePathResponseArrayOutputWithContext(ctx context.Context) CompositePathResponseArrayOutput {
	return o
}

func (o CompositePathResponseArrayOutput) Index(i pulumi.IntInput) CompositePathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CompositePathResponse {
		return vs[0].([]CompositePathResponse)[vs[1].(int)]
	}).(CompositePathResponseOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// ConflictResolutionPolicyInput is an input type that accepts ConflictResolutionPolicyArgs and ConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyInput` via:
//
//          ConflictResolutionPolicyArgs{...}
type ConflictResolutionPolicyInput interface {
	pulumi.Input

	ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput
	ToConflictResolutionPolicyOutputWithContext(context.Context) ConflictResolutionPolicyOutput
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicy)(nil)).Elem()
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput {
	return i.ToConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyOutputWithContext(ctx context.Context) ConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput)
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyArgs) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyOutput).ToConflictResolutionPolicyPtrOutputWithContext(ctx)
}

// ConflictResolutionPolicyPtrInput is an input type that accepts ConflictResolutionPolicyArgs, ConflictResolutionPolicyPtr and ConflictResolutionPolicyPtrOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyPtrInput` via:
//
//          ConflictResolutionPolicyArgs{...}
//
//  or:
//
//          nil
type ConflictResolutionPolicyPtrInput interface {
	pulumi.Input

	ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput
	ToConflictResolutionPolicyPtrOutputWithContext(context.Context) ConflictResolutionPolicyPtrOutput
}

type conflictResolutionPolicyPtrType ConflictResolutionPolicyArgs

func ConflictResolutionPolicyPtr(v *ConflictResolutionPolicyArgs) ConflictResolutionPolicyPtrInput {
	return (*conflictResolutionPolicyPtrType)(v)
}

func (*conflictResolutionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicy)(nil)).Elem()
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return i.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i *conflictResolutionPolicyPtrType) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicy)(nil)).Elem()
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyOutput() ConflictResolutionPolicyOutput {
	return o
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyOutputWithContext(ctx context.Context) ConflictResolutionPolicyOutput {
	return o
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return o.ToConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (o ConflictResolutionPolicyOutput) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *ConflictResolutionPolicy {
		return &v
	}).(ConflictResolutionPolicyPtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicy)(nil)).Elem()
}

func (o ConflictResolutionPolicyPtrOutput) ToConflictResolutionPolicyPtrOutput() ConflictResolutionPolicyPtrOutput {
	return o
}

func (o ConflictResolutionPolicyPtrOutput) ToConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyPtrOutput {
	return o
}

func (o ConflictResolutionPolicyPtrOutput) Elem() ConflictResolutionPolicyOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) ConflictResolutionPolicy { return *v }).(ConflictResolutionPolicyOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyPtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyPtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyInvokeResponse struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// ConflictResolutionPolicyInvokeResponseInput is an input type that accepts ConflictResolutionPolicyInvokeResponseArgs and ConflictResolutionPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyInvokeResponseInput` via:
//
//          ConflictResolutionPolicyInvokeResponseArgs{...}
type ConflictResolutionPolicyInvokeResponseInput interface {
	pulumi.Input

	ToConflictResolutionPolicyInvokeResponseOutput() ConflictResolutionPolicyInvokeResponseOutput
	ToConflictResolutionPolicyInvokeResponseOutputWithContext(context.Context) ConflictResolutionPolicyInvokeResponseOutput
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyInvokeResponseArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConflictResolutionPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyInvokeResponse)(nil)).Elem()
}

func (i ConflictResolutionPolicyInvokeResponseArgs) ToConflictResolutionPolicyInvokeResponseOutput() ConflictResolutionPolicyInvokeResponseOutput {
	return i.ToConflictResolutionPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyInvokeResponseArgs) ToConflictResolutionPolicyInvokeResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyInvokeResponseOutput)
}

func (i ConflictResolutionPolicyInvokeResponseArgs) ToConflictResolutionPolicyInvokeResponsePtrOutput() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return i.ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyInvokeResponseArgs) ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyInvokeResponseOutput).ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(ctx)
}

// ConflictResolutionPolicyInvokeResponsePtrInput is an input type that accepts ConflictResolutionPolicyInvokeResponseArgs, ConflictResolutionPolicyInvokeResponsePtr and ConflictResolutionPolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyInvokeResponsePtrInput` via:
//
//          ConflictResolutionPolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ConflictResolutionPolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToConflictResolutionPolicyInvokeResponsePtrOutput() ConflictResolutionPolicyInvokeResponsePtrOutput
	ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(context.Context) ConflictResolutionPolicyInvokeResponsePtrOutput
}

type conflictResolutionPolicyInvokeResponsePtrType ConflictResolutionPolicyInvokeResponseArgs

func ConflictResolutionPolicyInvokeResponsePtr(v *ConflictResolutionPolicyInvokeResponseArgs) ConflictResolutionPolicyInvokeResponsePtrInput {
	return (*conflictResolutionPolicyInvokeResponsePtrType)(v)
}

func (*conflictResolutionPolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyInvokeResponse)(nil)).Elem()
}

func (i *conflictResolutionPolicyInvokeResponsePtrType) ToConflictResolutionPolicyInvokeResponsePtrOutput() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return i.ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *conflictResolutionPolicyInvokeResponsePtrType) ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyInvokeResponsePtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyInvokeResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyInvokeResponseOutput) ToConflictResolutionPolicyInvokeResponseOutput() ConflictResolutionPolicyInvokeResponseOutput {
	return o
}

func (o ConflictResolutionPolicyInvokeResponseOutput) ToConflictResolutionPolicyInvokeResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponseOutput {
	return o
}

func (o ConflictResolutionPolicyInvokeResponseOutput) ToConflictResolutionPolicyInvokeResponsePtrOutput() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o.ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ConflictResolutionPolicyInvokeResponseOutput) ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyInvokeResponse) *ConflictResolutionPolicyInvokeResponse {
		return &v
	}).(ConflictResolutionPolicyInvokeResponsePtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyInvokeResponseOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyInvokeResponse) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyInvokeResponseOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyInvokeResponse) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyInvokeResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyInvokeResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyInvokeResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyInvokeResponsePtrOutput) ToConflictResolutionPolicyInvokeResponsePtrOutput() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyInvokeResponsePtrOutput) ToConflictResolutionPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyInvokeResponsePtrOutput) Elem() ConflictResolutionPolicyInvokeResponseOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyInvokeResponse) ConflictResolutionPolicyInvokeResponse { return *v }).(ConflictResolutionPolicyInvokeResponseOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyInvokeResponsePtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyInvokeResponsePtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyInvokeResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponse struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode *string `pulumi:"mode"`
}

// ConflictResolutionPolicyResponseInput is an input type that accepts ConflictResolutionPolicyResponseArgs and ConflictResolutionPolicyResponseOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyResponseInput` via:
//
//          ConflictResolutionPolicyResponseArgs{...}
type ConflictResolutionPolicyResponseInput interface {
	pulumi.Input

	ToConflictResolutionPolicyResponseOutput() ConflictResolutionPolicyResponseOutput
	ToConflictResolutionPolicyResponseOutputWithContext(context.Context) ConflictResolutionPolicyResponseOutput
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponseArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConflictResolutionPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (i ConflictResolutionPolicyResponseArgs) ToConflictResolutionPolicyResponseOutput() ConflictResolutionPolicyResponseOutput {
	return i.ToConflictResolutionPolicyResponseOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyResponseArgs) ToConflictResolutionPolicyResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyResponseOutput)
}

func (i ConflictResolutionPolicyResponseArgs) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return i.ToConflictResolutionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ConflictResolutionPolicyResponseArgs) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyResponseOutput).ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx)
}

// ConflictResolutionPolicyResponsePtrInput is an input type that accepts ConflictResolutionPolicyResponseArgs, ConflictResolutionPolicyResponsePtr and ConflictResolutionPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ConflictResolutionPolicyResponsePtrInput` via:
//
//          ConflictResolutionPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ConflictResolutionPolicyResponsePtrInput interface {
	pulumi.Input

	ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput
	ToConflictResolutionPolicyResponsePtrOutputWithContext(context.Context) ConflictResolutionPolicyResponsePtrOutput
}

type conflictResolutionPolicyResponsePtrType ConflictResolutionPolicyResponseArgs

func ConflictResolutionPolicyResponsePtr(v *ConflictResolutionPolicyResponseArgs) ConflictResolutionPolicyResponsePtrInput {
	return (*conflictResolutionPolicyResponsePtrType)(v)
}

func (*conflictResolutionPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (i *conflictResolutionPolicyResponsePtrType) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return i.ToConflictResolutionPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *conflictResolutionPolicyResponsePtrType) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConflictResolutionPolicyResponsePtrOutput)
}

// The conflict resolution policy for the container.
type ConflictResolutionPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutput() ConflictResolutionPolicyResponseOutput {
	return o
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponseOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponseOutput {
	return o
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return o.ToConflictResolutionPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ConflictResolutionPolicyResponseOutput) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *ConflictResolutionPolicyResponse {
		return &v
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponseOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConflictResolutionPolicyResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConflictResolutionPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConflictResolutionPolicyResponse)(nil)).Elem()
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutput() ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) ToConflictResolutionPolicyResponsePtrOutputWithContext(ctx context.Context) ConflictResolutionPolicyResponsePtrOutput {
	return o
}

func (o ConflictResolutionPolicyResponsePtrOutput) Elem() ConflictResolutionPolicyResponseOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) ConflictResolutionPolicyResponse { return *v }).(ConflictResolutionPolicyResponseOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o ConflictResolutionPolicyResponsePtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode.
func (o ConflictResolutionPolicyResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConflictResolutionPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicy struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *float64 `pulumi:"maxStalenessPrefix"`
}

// ConsistencyPolicyInput is an input type that accepts ConsistencyPolicyArgs and ConsistencyPolicyOutput values.
// You can construct a concrete instance of `ConsistencyPolicyInput` via:
//
//          ConsistencyPolicyArgs{...}
type ConsistencyPolicyInput interface {
	pulumi.Input

	ToConsistencyPolicyOutput() ConsistencyPolicyOutput
	ToConsistencyPolicyOutputWithContext(context.Context) ConsistencyPolicyOutput
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyArgs struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel DefaultConsistencyLevel `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix pulumi.Float64PtrInput `pulumi:"maxStalenessPrefix"`
}

func (ConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicy)(nil)).Elem()
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutput() ConsistencyPolicyOutput {
	return i.ToConsistencyPolicyOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyOutputWithContext(ctx context.Context) ConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput)
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i ConsistencyPolicyArgs) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyOutput).ToConsistencyPolicyPtrOutputWithContext(ctx)
}

// ConsistencyPolicyPtrInput is an input type that accepts ConsistencyPolicyArgs, ConsistencyPolicyPtr and ConsistencyPolicyPtrOutput values.
// You can construct a concrete instance of `ConsistencyPolicyPtrInput` via:
//
//          ConsistencyPolicyArgs{...}
//
//  or:
//
//          nil
type ConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput
	ToConsistencyPolicyPtrOutputWithContext(context.Context) ConsistencyPolicyPtrOutput
}

type consistencyPolicyPtrType ConsistencyPolicyArgs

func ConsistencyPolicyPtr(v *ConsistencyPolicyArgs) ConsistencyPolicyPtrInput {
	return (*consistencyPolicyPtrType)(v)
}

func (*consistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicy)(nil)).Elem()
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return i.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *consistencyPolicyPtrType) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyPtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicy)(nil)).Elem()
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyOutput() ConsistencyPolicyOutput {
	return o
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyOutputWithContext(ctx context.Context) ConsistencyPolicyOutput {
	return o
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return o.ToConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (o ConsistencyPolicyOutput) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicy) *ConsistencyPolicy {
		return &v
	}).(ConsistencyPolicyPtrOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyOutput) DefaultConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConsistencyPolicy) string { return v.DefaultConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConsistencyPolicy) *float64 { return v.MaxStalenessPrefix }).(pulumi.Float64PtrOutput)
}

type ConsistencyPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicy)(nil)).Elem()
}

func (o ConsistencyPolicyPtrOutput) ToConsistencyPolicyPtrOutput() ConsistencyPolicyPtrOutput {
	return o
}

func (o ConsistencyPolicyPtrOutput) ToConsistencyPolicyPtrOutputWithContext(ctx context.Context) ConsistencyPolicyPtrOutput {
	return o
}

func (o ConsistencyPolicyPtrOutput) Elem() ConsistencyPolicyOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) ConsistencyPolicy { return *v }).(ConsistencyPolicyOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyPtrOutput) DefaultConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyPtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyPtrOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicy) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.Float64PtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyInvokeResponse struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *float64 `pulumi:"maxStalenessPrefix"`
}

// ConsistencyPolicyInvokeResponseInput is an input type that accepts ConsistencyPolicyInvokeResponseArgs and ConsistencyPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `ConsistencyPolicyInvokeResponseInput` via:
//
//          ConsistencyPolicyInvokeResponseArgs{...}
type ConsistencyPolicyInvokeResponseInput interface {
	pulumi.Input

	ToConsistencyPolicyInvokeResponseOutput() ConsistencyPolicyInvokeResponseOutput
	ToConsistencyPolicyInvokeResponseOutputWithContext(context.Context) ConsistencyPolicyInvokeResponseOutput
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyInvokeResponseArgs struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel pulumi.StringInput `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix pulumi.Float64PtrInput `pulumi:"maxStalenessPrefix"`
}

func (ConsistencyPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyInvokeResponse)(nil)).Elem()
}

func (i ConsistencyPolicyInvokeResponseArgs) ToConsistencyPolicyInvokeResponseOutput() ConsistencyPolicyInvokeResponseOutput {
	return i.ToConsistencyPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i ConsistencyPolicyInvokeResponseArgs) ToConsistencyPolicyInvokeResponseOutputWithContext(ctx context.Context) ConsistencyPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyInvokeResponseOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyInvokeResponse)(nil)).Elem()
}

func (o ConsistencyPolicyInvokeResponseOutput) ToConsistencyPolicyInvokeResponseOutput() ConsistencyPolicyInvokeResponseOutput {
	return o
}

func (o ConsistencyPolicyInvokeResponseOutput) ToConsistencyPolicyInvokeResponseOutputWithContext(ctx context.Context) ConsistencyPolicyInvokeResponseOutput {
	return o
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyInvokeResponseOutput) DefaultConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConsistencyPolicyInvokeResponse) string { return v.DefaultConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyInvokeResponseOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyInvokeResponse) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyInvokeResponseOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyInvokeResponse) *float64 { return v.MaxStalenessPrefix }).(pulumi.Float64PtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponse struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel string `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix *float64 `pulumi:"maxStalenessPrefix"`
}

// ConsistencyPolicyResponseInput is an input type that accepts ConsistencyPolicyResponseArgs and ConsistencyPolicyResponseOutput values.
// You can construct a concrete instance of `ConsistencyPolicyResponseInput` via:
//
//          ConsistencyPolicyResponseArgs{...}
type ConsistencyPolicyResponseInput interface {
	pulumi.Input

	ToConsistencyPolicyResponseOutput() ConsistencyPolicyResponseOutput
	ToConsistencyPolicyResponseOutputWithContext(context.Context) ConsistencyPolicyResponseOutput
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponseArgs struct {
	// The default consistency level and configuration settings of the Cosmos DB account.
	DefaultConsistencyLevel pulumi.StringInput `pulumi:"defaultConsistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
	MaxStalenessPrefix pulumi.Float64PtrInput `pulumi:"maxStalenessPrefix"`
}

func (ConsistencyPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyResponse)(nil)).Elem()
}

func (i ConsistencyPolicyResponseArgs) ToConsistencyPolicyResponseOutput() ConsistencyPolicyResponseOutput {
	return i.ToConsistencyPolicyResponseOutputWithContext(context.Background())
}

func (i ConsistencyPolicyResponseArgs) ToConsistencyPolicyResponseOutputWithContext(ctx context.Context) ConsistencyPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyResponseOutput)
}

func (i ConsistencyPolicyResponseArgs) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return i.ToConsistencyPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ConsistencyPolicyResponseArgs) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyResponseOutput).ToConsistencyPolicyResponsePtrOutputWithContext(ctx)
}

// ConsistencyPolicyResponsePtrInput is an input type that accepts ConsistencyPolicyResponseArgs, ConsistencyPolicyResponsePtr and ConsistencyPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ConsistencyPolicyResponsePtrInput` via:
//
//          ConsistencyPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ConsistencyPolicyResponsePtrInput interface {
	pulumi.Input

	ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput
	ToConsistencyPolicyResponsePtrOutputWithContext(context.Context) ConsistencyPolicyResponsePtrOutput
}

type consistencyPolicyResponsePtrType ConsistencyPolicyResponseArgs

func ConsistencyPolicyResponsePtr(v *ConsistencyPolicyResponseArgs) ConsistencyPolicyResponsePtrInput {
	return (*consistencyPolicyResponsePtrType)(v)
}

func (*consistencyPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicyResponse)(nil)).Elem()
}

func (i *consistencyPolicyResponsePtrType) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return i.ToConsistencyPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *consistencyPolicyResponsePtrType) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsistencyPolicyResponsePtrOutput)
}

// The consistency policy for the Cosmos DB database account.
type ConsistencyPolicyResponseOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutput() ConsistencyPolicyResponseOutput {
	return o
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponseOutputWithContext(ctx context.Context) ConsistencyPolicyResponseOutput {
	return o
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return o.ToConsistencyPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ConsistencyPolicyResponseOutput) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *ConsistencyPolicyResponse {
		return &v
	}).(ConsistencyPolicyResponsePtrOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponseOutput) DefaultConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) string { return v.DefaultConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponseOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConsistencyPolicyResponse) *float64 { return v.MaxStalenessPrefix }).(pulumi.Float64PtrOutput)
}

type ConsistencyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ConsistencyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsistencyPolicyResponse)(nil)).Elem()
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutput() ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) ToConsistencyPolicyResponsePtrOutputWithContext(ctx context.Context) ConsistencyPolicyResponsePtrOutput {
	return o
}

func (o ConsistencyPolicyResponsePtrOutput) Elem() ConsistencyPolicyResponseOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) ConsistencyPolicyResponse { return *v }).(ConsistencyPolicyResponseOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
func (o ConsistencyPolicyResponsePtrOutput) DefaultConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
func (o ConsistencyPolicyResponsePtrOutput) MaxStalenessPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConsistencyPolicyResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.Float64PtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKey struct {
	// Indicates the kind of algorithm used for partitioning
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// ContainerPartitionKeyInput is an input type that accepts ContainerPartitionKeyArgs and ContainerPartitionKeyOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyInput` via:
//
//          ContainerPartitionKeyArgs{...}
type ContainerPartitionKeyInput interface {
	pulumi.Input

	ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput
	ToContainerPartitionKeyOutputWithContext(context.Context) ContainerPartitionKeyOutput
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyArgs struct {
	// Indicates the kind of algorithm used for partitioning
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (ContainerPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKey)(nil)).Elem()
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput {
	return i.ToContainerPartitionKeyOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyOutputWithContext(ctx context.Context) ContainerPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput)
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyArgs) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyOutput).ToContainerPartitionKeyPtrOutputWithContext(ctx)
}

// ContainerPartitionKeyPtrInput is an input type that accepts ContainerPartitionKeyArgs, ContainerPartitionKeyPtr and ContainerPartitionKeyPtrOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyPtrInput` via:
//
//          ContainerPartitionKeyArgs{...}
//
//  or:
//
//          nil
type ContainerPartitionKeyPtrInput interface {
	pulumi.Input

	ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput
	ToContainerPartitionKeyPtrOutputWithContext(context.Context) ContainerPartitionKeyPtrOutput
}

type containerPartitionKeyPtrType ContainerPartitionKeyArgs

func ContainerPartitionKeyPtr(v *ContainerPartitionKeyArgs) ContainerPartitionKeyPtrInput {
	return (*containerPartitionKeyPtrType)(v)
}

func (*containerPartitionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKey)(nil)).Elem()
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return i.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (i *containerPartitionKeyPtrType) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKey)(nil)).Elem()
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyOutput() ContainerPartitionKeyOutput {
	return o
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyOutputWithContext(ctx context.Context) ContainerPartitionKeyOutput {
	return o
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return o.ToContainerPartitionKeyPtrOutputWithContext(context.Background())
}

func (o ContainerPartitionKeyOutput) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKey) *ContainerPartitionKey {
		return &v
	}).(ContainerPartitionKeyPtrOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKey) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKey) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyPtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKey)(nil)).Elem()
}

func (o ContainerPartitionKeyPtrOutput) ToContainerPartitionKeyPtrOutput() ContainerPartitionKeyPtrOutput {
	return o
}

func (o ContainerPartitionKeyPtrOutput) ToContainerPartitionKeyPtrOutputWithContext(ctx context.Context) ContainerPartitionKeyPtrOutput {
	return o
}

func (o ContainerPartitionKeyPtrOutput) Elem() ContainerPartitionKeyOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) ContainerPartitionKey { return *v }).(ContainerPartitionKeyOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyPtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKey) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyInvokeResponse struct {
	// Indicates the kind of algorithm used for partitioning
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// ContainerPartitionKeyInvokeResponseInput is an input type that accepts ContainerPartitionKeyInvokeResponseArgs and ContainerPartitionKeyInvokeResponseOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyInvokeResponseInput` via:
//
//          ContainerPartitionKeyInvokeResponseArgs{...}
type ContainerPartitionKeyInvokeResponseInput interface {
	pulumi.Input

	ToContainerPartitionKeyInvokeResponseOutput() ContainerPartitionKeyInvokeResponseOutput
	ToContainerPartitionKeyInvokeResponseOutputWithContext(context.Context) ContainerPartitionKeyInvokeResponseOutput
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyInvokeResponseArgs struct {
	// Indicates the kind of algorithm used for partitioning
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (ContainerPartitionKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyInvokeResponse)(nil)).Elem()
}

func (i ContainerPartitionKeyInvokeResponseArgs) ToContainerPartitionKeyInvokeResponseOutput() ContainerPartitionKeyInvokeResponseOutput {
	return i.ToContainerPartitionKeyInvokeResponseOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyInvokeResponseArgs) ToContainerPartitionKeyInvokeResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyInvokeResponseOutput)
}

func (i ContainerPartitionKeyInvokeResponseArgs) ToContainerPartitionKeyInvokeResponsePtrOutput() ContainerPartitionKeyInvokeResponsePtrOutput {
	return i.ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyInvokeResponseArgs) ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyInvokeResponseOutput).ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(ctx)
}

// ContainerPartitionKeyInvokeResponsePtrInput is an input type that accepts ContainerPartitionKeyInvokeResponseArgs, ContainerPartitionKeyInvokeResponsePtr and ContainerPartitionKeyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyInvokeResponsePtrInput` via:
//
//          ContainerPartitionKeyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ContainerPartitionKeyInvokeResponsePtrInput interface {
	pulumi.Input

	ToContainerPartitionKeyInvokeResponsePtrOutput() ContainerPartitionKeyInvokeResponsePtrOutput
	ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(context.Context) ContainerPartitionKeyInvokeResponsePtrOutput
}

type containerPartitionKeyInvokeResponsePtrType ContainerPartitionKeyInvokeResponseArgs

func ContainerPartitionKeyInvokeResponsePtr(v *ContainerPartitionKeyInvokeResponseArgs) ContainerPartitionKeyInvokeResponsePtrInput {
	return (*containerPartitionKeyInvokeResponsePtrType)(v)
}

func (*containerPartitionKeyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyInvokeResponse)(nil)).Elem()
}

func (i *containerPartitionKeyInvokeResponsePtrType) ToContainerPartitionKeyInvokeResponsePtrOutput() ContainerPartitionKeyInvokeResponsePtrOutput {
	return i.ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *containerPartitionKeyInvokeResponsePtrType) ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyInvokeResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyInvokeResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyInvokeResponseOutput) ToContainerPartitionKeyInvokeResponseOutput() ContainerPartitionKeyInvokeResponseOutput {
	return o
}

func (o ContainerPartitionKeyInvokeResponseOutput) ToContainerPartitionKeyInvokeResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponseOutput {
	return o
}

func (o ContainerPartitionKeyInvokeResponseOutput) ToContainerPartitionKeyInvokeResponsePtrOutput() ContainerPartitionKeyInvokeResponsePtrOutput {
	return o.ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ContainerPartitionKeyInvokeResponseOutput) ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponsePtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyInvokeResponse) *ContainerPartitionKeyInvokeResponse {
		return &v
	}).(ContainerPartitionKeyInvokeResponsePtrOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyInvokeResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKeyInvokeResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyInvokeResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyInvokeResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyInvokeResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyInvokeResponsePtrOutput) ToContainerPartitionKeyInvokeResponsePtrOutput() ContainerPartitionKeyInvokeResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyInvokeResponsePtrOutput) ToContainerPartitionKeyInvokeResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyInvokeResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyInvokeResponsePtrOutput) Elem() ContainerPartitionKeyInvokeResponseOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyInvokeResponse) ContainerPartitionKeyInvokeResponse { return *v }).(ContainerPartitionKeyInvokeResponseOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyInvokeResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyInvokeResponsePtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyInvokeResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponse struct {
	// Indicates the kind of algorithm used for partitioning
	Kind *string `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths []string `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version *int `pulumi:"version"`
}

// ContainerPartitionKeyResponseInput is an input type that accepts ContainerPartitionKeyResponseArgs and ContainerPartitionKeyResponseOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyResponseInput` via:
//
//          ContainerPartitionKeyResponseArgs{...}
type ContainerPartitionKeyResponseInput interface {
	pulumi.Input

	ToContainerPartitionKeyResponseOutput() ContainerPartitionKeyResponseOutput
	ToContainerPartitionKeyResponseOutputWithContext(context.Context) ContainerPartitionKeyResponseOutput
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponseArgs struct {
	// Indicates the kind of algorithm used for partitioning
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// List of paths using which data within the container can be partitioned
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Indicates the version of the partition key definition
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (ContainerPartitionKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyResponse)(nil)).Elem()
}

func (i ContainerPartitionKeyResponseArgs) ToContainerPartitionKeyResponseOutput() ContainerPartitionKeyResponseOutput {
	return i.ToContainerPartitionKeyResponseOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyResponseArgs) ToContainerPartitionKeyResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyResponseOutput)
}

func (i ContainerPartitionKeyResponseArgs) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return i.ToContainerPartitionKeyResponsePtrOutputWithContext(context.Background())
}

func (i ContainerPartitionKeyResponseArgs) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyResponseOutput).ToContainerPartitionKeyResponsePtrOutputWithContext(ctx)
}

// ContainerPartitionKeyResponsePtrInput is an input type that accepts ContainerPartitionKeyResponseArgs, ContainerPartitionKeyResponsePtr and ContainerPartitionKeyResponsePtrOutput values.
// You can construct a concrete instance of `ContainerPartitionKeyResponsePtrInput` via:
//
//          ContainerPartitionKeyResponseArgs{...}
//
//  or:
//
//          nil
type ContainerPartitionKeyResponsePtrInput interface {
	pulumi.Input

	ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput
	ToContainerPartitionKeyResponsePtrOutputWithContext(context.Context) ContainerPartitionKeyResponsePtrOutput
}

type containerPartitionKeyResponsePtrType ContainerPartitionKeyResponseArgs

func ContainerPartitionKeyResponsePtr(v *ContainerPartitionKeyResponseArgs) ContainerPartitionKeyResponsePtrInput {
	return (*containerPartitionKeyResponsePtrType)(v)
}

func (*containerPartitionKeyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyResponse)(nil)).Elem()
}

func (i *containerPartitionKeyResponsePtrType) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return i.ToContainerPartitionKeyResponsePtrOutputWithContext(context.Background())
}

func (i *containerPartitionKeyResponsePtrType) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPartitionKeyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
type ContainerPartitionKeyResponseOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutput() ContainerPartitionKeyResponseOutput {
	return o
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponseOutputWithContext(ctx context.Context) ContainerPartitionKeyResponseOutput {
	return o
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return o.ToContainerPartitionKeyResponsePtrOutputWithContext(context.Background())
}

func (o ContainerPartitionKeyResponseOutput) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *ContainerPartitionKeyResponse {
		return &v
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPartitionKeyResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type ContainerPartitionKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerPartitionKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPartitionKeyResponse)(nil)).Elem()
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutput() ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) ToContainerPartitionKeyResponsePtrOutputWithContext(ctx context.Context) ContainerPartitionKeyResponsePtrOutput {
	return o
}

func (o ContainerPartitionKeyResponsePtrOutput) Elem() ContainerPartitionKeyResponseOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) ContainerPartitionKeyResponse { return *v }).(ContainerPartitionKeyResponseOutput)
}

// Indicates the kind of algorithm used for partitioning
func (o ContainerPartitionKeyResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// List of paths using which data within the container can be partitioned
func (o ContainerPartitionKeyResponsePtrOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) []string {
		if v == nil {
			return nil
		}
		return v.Paths
	}).(pulumi.StringArrayOutput)
}

// Indicates the version of the partition key definition
func (o ContainerPartitionKeyResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPartitionKeyResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptions struct {
	// Request Units per second. For example, "throughput": "10000".
	Throughput *string `pulumi:"throughput"`
}

// CreateUpdateOptionsInput is an input type that accepts CreateUpdateOptionsArgs and CreateUpdateOptionsOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsInput` via:
//
//          CreateUpdateOptionsArgs{...}
type CreateUpdateOptionsInput interface {
	pulumi.Input

	ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput
	ToCreateUpdateOptionsOutputWithContext(context.Context) CreateUpdateOptionsOutput
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptionsArgs struct {
	// Request Units per second. For example, "throughput": "10000".
	Throughput pulumi.StringPtrInput `pulumi:"throughput"`
}

func (CreateUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateUpdateOptions)(nil)).Elem()
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput {
	return i.ToCreateUpdateOptionsOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsOutputWithContext(ctx context.Context) CreateUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput)
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i CreateUpdateOptionsArgs) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsOutput).ToCreateUpdateOptionsPtrOutputWithContext(ctx)
}

// CreateUpdateOptionsPtrInput is an input type that accepts CreateUpdateOptionsArgs, CreateUpdateOptionsPtr and CreateUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `CreateUpdateOptionsPtrInput` via:
//
//          CreateUpdateOptionsArgs{...}
//
//  or:
//
//          nil
type CreateUpdateOptionsPtrInput interface {
	pulumi.Input

	ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput
	ToCreateUpdateOptionsPtrOutputWithContext(context.Context) CreateUpdateOptionsPtrOutput
}

type createUpdateOptionsPtrType CreateUpdateOptionsArgs

func CreateUpdateOptionsPtr(v *CreateUpdateOptionsArgs) CreateUpdateOptionsPtrInput {
	return (*createUpdateOptionsPtrType)(v)
}

func (*createUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateUpdateOptions)(nil)).Elem()
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return i.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *createUpdateOptionsPtrType) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreateUpdateOptionsPtrOutput)
}

// CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
type CreateUpdateOptionsOutput struct{ *pulumi.OutputState }

func (CreateUpdateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreateUpdateOptions)(nil)).Elem()
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsOutput() CreateUpdateOptionsOutput {
	return o
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsOutputWithContext(ctx context.Context) CreateUpdateOptionsOutput {
	return o
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return o.ToCreateUpdateOptionsPtrOutputWithContext(context.Background())
}

func (o CreateUpdateOptionsOutput) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return o.ApplyT(func(v CreateUpdateOptions) *CreateUpdateOptions {
		return &v
	}).(CreateUpdateOptionsPtrOutput)
}

// Request Units per second. For example, "throughput": "10000".
func (o CreateUpdateOptionsOutput) Throughput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CreateUpdateOptions) *string { return v.Throughput }).(pulumi.StringPtrOutput)
}

type CreateUpdateOptionsPtrOutput struct{ *pulumi.OutputState }

func (CreateUpdateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreateUpdateOptions)(nil)).Elem()
}

func (o CreateUpdateOptionsPtrOutput) ToCreateUpdateOptionsPtrOutput() CreateUpdateOptionsPtrOutput {
	return o
}

func (o CreateUpdateOptionsPtrOutput) ToCreateUpdateOptionsPtrOutputWithContext(ctx context.Context) CreateUpdateOptionsPtrOutput {
	return o
}

func (o CreateUpdateOptionsPtrOutput) Elem() CreateUpdateOptionsOutput {
	return o.ApplyT(func(v *CreateUpdateOptions) CreateUpdateOptions { return *v }).(CreateUpdateOptionsOutput)
}

// Request Units per second. For example, "throughput": "10000".
func (o CreateUpdateOptionsPtrOutput) Throughput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CreateUpdateOptions) *string {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.StringPtrOutput)
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringInvokeResponse struct {
	// Value of the connection string
	ConnectionString string `pulumi:"connectionString"`
	// Description of the connection string
	Description string `pulumi:"description"`
}

// DatabaseAccountConnectionStringInvokeResponseInput is an input type that accepts DatabaseAccountConnectionStringInvokeResponseArgs and DatabaseAccountConnectionStringInvokeResponseOutput values.
// You can construct a concrete instance of `DatabaseAccountConnectionStringInvokeResponseInput` via:
//
//          DatabaseAccountConnectionStringInvokeResponseArgs{...}
type DatabaseAccountConnectionStringInvokeResponseInput interface {
	pulumi.Input

	ToDatabaseAccountConnectionStringInvokeResponseOutput() DatabaseAccountConnectionStringInvokeResponseOutput
	ToDatabaseAccountConnectionStringInvokeResponseOutputWithContext(context.Context) DatabaseAccountConnectionStringInvokeResponseOutput
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringInvokeResponseArgs struct {
	// Value of the connection string
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// Description of the connection string
	Description pulumi.StringInput `pulumi:"description"`
}

func (DatabaseAccountConnectionStringInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountConnectionStringInvokeResponse)(nil)).Elem()
}

func (i DatabaseAccountConnectionStringInvokeResponseArgs) ToDatabaseAccountConnectionStringInvokeResponseOutput() DatabaseAccountConnectionStringInvokeResponseOutput {
	return i.ToDatabaseAccountConnectionStringInvokeResponseOutputWithContext(context.Background())
}

func (i DatabaseAccountConnectionStringInvokeResponseArgs) ToDatabaseAccountConnectionStringInvokeResponseOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAccountConnectionStringInvokeResponseOutput)
}

// DatabaseAccountConnectionStringInvokeResponseArrayInput is an input type that accepts DatabaseAccountConnectionStringInvokeResponseArray and DatabaseAccountConnectionStringInvokeResponseArrayOutput values.
// You can construct a concrete instance of `DatabaseAccountConnectionStringInvokeResponseArrayInput` via:
//
//          DatabaseAccountConnectionStringInvokeResponseArray{ DatabaseAccountConnectionStringInvokeResponseArgs{...} }
type DatabaseAccountConnectionStringInvokeResponseArrayInput interface {
	pulumi.Input

	ToDatabaseAccountConnectionStringInvokeResponseArrayOutput() DatabaseAccountConnectionStringInvokeResponseArrayOutput
	ToDatabaseAccountConnectionStringInvokeResponseArrayOutputWithContext(context.Context) DatabaseAccountConnectionStringInvokeResponseArrayOutput
}

type DatabaseAccountConnectionStringInvokeResponseArray []DatabaseAccountConnectionStringInvokeResponseInput

func (DatabaseAccountConnectionStringInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAccountConnectionStringInvokeResponse)(nil)).Elem()
}

func (i DatabaseAccountConnectionStringInvokeResponseArray) ToDatabaseAccountConnectionStringInvokeResponseArrayOutput() DatabaseAccountConnectionStringInvokeResponseArrayOutput {
	return i.ToDatabaseAccountConnectionStringInvokeResponseArrayOutputWithContext(context.Background())
}

func (i DatabaseAccountConnectionStringInvokeResponseArray) ToDatabaseAccountConnectionStringInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAccountConnectionStringInvokeResponseArrayOutput)
}

// Connection string for the Cosmos DB account
type DatabaseAccountConnectionStringInvokeResponseOutput struct{ *pulumi.OutputState }

func (DatabaseAccountConnectionStringInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountConnectionStringInvokeResponse)(nil)).Elem()
}

func (o DatabaseAccountConnectionStringInvokeResponseOutput) ToDatabaseAccountConnectionStringInvokeResponseOutput() DatabaseAccountConnectionStringInvokeResponseOutput {
	return o
}

func (o DatabaseAccountConnectionStringInvokeResponseOutput) ToDatabaseAccountConnectionStringInvokeResponseOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringInvokeResponseOutput {
	return o
}

// Value of the connection string
func (o DatabaseAccountConnectionStringInvokeResponseOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAccountConnectionStringInvokeResponse) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Description of the connection string
func (o DatabaseAccountConnectionStringInvokeResponseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAccountConnectionStringInvokeResponse) string { return v.Description }).(pulumi.StringOutput)
}

type DatabaseAccountConnectionStringInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAccountConnectionStringInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAccountConnectionStringInvokeResponse)(nil)).Elem()
}

func (o DatabaseAccountConnectionStringInvokeResponseArrayOutput) ToDatabaseAccountConnectionStringInvokeResponseArrayOutput() DatabaseAccountConnectionStringInvokeResponseArrayOutput {
	return o
}

func (o DatabaseAccountConnectionStringInvokeResponseArrayOutput) ToDatabaseAccountConnectionStringInvokeResponseArrayOutputWithContext(ctx context.Context) DatabaseAccountConnectionStringInvokeResponseArrayOutput {
	return o
}

func (o DatabaseAccountConnectionStringInvokeResponseArrayOutput) Index(i pulumi.IntInput) DatabaseAccountConnectionStringInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAccountConnectionStringInvokeResponse {
		return vs[0].([]DatabaseAccountConnectionStringInvokeResponse)[vs[1].(int)]
	}).(DatabaseAccountConnectionStringInvokeResponseOutput)
}

type ExcludedPath struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// ExcludedPathInput is an input type that accepts ExcludedPathArgs and ExcludedPathOutput values.
// You can construct a concrete instance of `ExcludedPathInput` via:
//
//          ExcludedPathArgs{...}
type ExcludedPathInput interface {
	pulumi.Input

	ToExcludedPathOutput() ExcludedPathOutput
	ToExcludedPathOutputWithContext(context.Context) ExcludedPathOutput
}

type ExcludedPathArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ExcludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArgs) ToExcludedPathOutput() ExcludedPathOutput {
	return i.ToExcludedPathOutputWithContext(context.Background())
}

func (i ExcludedPathArgs) ToExcludedPathOutputWithContext(ctx context.Context) ExcludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathOutput)
}

// ExcludedPathArrayInput is an input type that accepts ExcludedPathArray and ExcludedPathArrayOutput values.
// You can construct a concrete instance of `ExcludedPathArrayInput` via:
//
//          ExcludedPathArray{ ExcludedPathArgs{...} }
type ExcludedPathArrayInput interface {
	pulumi.Input

	ToExcludedPathArrayOutput() ExcludedPathArrayOutput
	ToExcludedPathArrayOutputWithContext(context.Context) ExcludedPathArrayOutput
}

type ExcludedPathArray []ExcludedPathInput

func (ExcludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPath)(nil)).Elem()
}

func (i ExcludedPathArray) ToExcludedPathArrayOutput() ExcludedPathArrayOutput {
	return i.ToExcludedPathArrayOutputWithContext(context.Background())
}

func (i ExcludedPathArray) ToExcludedPathArrayOutputWithContext(ctx context.Context) ExcludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathArrayOutput)
}

type ExcludedPathOutput struct{ *pulumi.OutputState }

func (ExcludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPath)(nil)).Elem()
}

func (o ExcludedPathOutput) ToExcludedPathOutput() ExcludedPathOutput {
	return o
}

func (o ExcludedPathOutput) ToExcludedPathOutputWithContext(ctx context.Context) ExcludedPathOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPath)(nil)).Elem()
}

func (o ExcludedPathArrayOutput) ToExcludedPathArrayOutput() ExcludedPathArrayOutput {
	return o
}

func (o ExcludedPathArrayOutput) ToExcludedPathArrayOutputWithContext(ctx context.Context) ExcludedPathArrayOutput {
	return o
}

func (o ExcludedPathArrayOutput) Index(i pulumi.IntInput) ExcludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPath {
		return vs[0].([]ExcludedPath)[vs[1].(int)]
	}).(ExcludedPathOutput)
}

type ExcludedPathInvokeResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// ExcludedPathInvokeResponseInput is an input type that accepts ExcludedPathInvokeResponseArgs and ExcludedPathInvokeResponseOutput values.
// You can construct a concrete instance of `ExcludedPathInvokeResponseInput` via:
//
//          ExcludedPathInvokeResponseArgs{...}
type ExcludedPathInvokeResponseInput interface {
	pulumi.Input

	ToExcludedPathInvokeResponseOutput() ExcludedPathInvokeResponseOutput
	ToExcludedPathInvokeResponseOutputWithContext(context.Context) ExcludedPathInvokeResponseOutput
}

type ExcludedPathInvokeResponseArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ExcludedPathInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathInvokeResponse)(nil)).Elem()
}

func (i ExcludedPathInvokeResponseArgs) ToExcludedPathInvokeResponseOutput() ExcludedPathInvokeResponseOutput {
	return i.ToExcludedPathInvokeResponseOutputWithContext(context.Background())
}

func (i ExcludedPathInvokeResponseArgs) ToExcludedPathInvokeResponseOutputWithContext(ctx context.Context) ExcludedPathInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathInvokeResponseOutput)
}

// ExcludedPathInvokeResponseArrayInput is an input type that accepts ExcludedPathInvokeResponseArray and ExcludedPathInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ExcludedPathInvokeResponseArrayInput` via:
//
//          ExcludedPathInvokeResponseArray{ ExcludedPathInvokeResponseArgs{...} }
type ExcludedPathInvokeResponseArrayInput interface {
	pulumi.Input

	ToExcludedPathInvokeResponseArrayOutput() ExcludedPathInvokeResponseArrayOutput
	ToExcludedPathInvokeResponseArrayOutputWithContext(context.Context) ExcludedPathInvokeResponseArrayOutput
}

type ExcludedPathInvokeResponseArray []ExcludedPathInvokeResponseInput

func (ExcludedPathInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathInvokeResponse)(nil)).Elem()
}

func (i ExcludedPathInvokeResponseArray) ToExcludedPathInvokeResponseArrayOutput() ExcludedPathInvokeResponseArrayOutput {
	return i.ToExcludedPathInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ExcludedPathInvokeResponseArray) ToExcludedPathInvokeResponseArrayOutputWithContext(ctx context.Context) ExcludedPathInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathInvokeResponseArrayOutput)
}

type ExcludedPathInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExcludedPathInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathInvokeResponse)(nil)).Elem()
}

func (o ExcludedPathInvokeResponseOutput) ToExcludedPathInvokeResponseOutput() ExcludedPathInvokeResponseOutput {
	return o
}

func (o ExcludedPathInvokeResponseOutput) ToExcludedPathInvokeResponseOutputWithContext(ctx context.Context) ExcludedPathInvokeResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPathInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathInvokeResponse)(nil)).Elem()
}

func (o ExcludedPathInvokeResponseArrayOutput) ToExcludedPathInvokeResponseArrayOutput() ExcludedPathInvokeResponseArrayOutput {
	return o
}

func (o ExcludedPathInvokeResponseArrayOutput) ToExcludedPathInvokeResponseArrayOutputWithContext(ctx context.Context) ExcludedPathInvokeResponseArrayOutput {
	return o
}

func (o ExcludedPathInvokeResponseArrayOutput) Index(i pulumi.IntInput) ExcludedPathInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPathInvokeResponse {
		return vs[0].([]ExcludedPathInvokeResponse)[vs[1].(int)]
	}).(ExcludedPathInvokeResponseOutput)
}

type ExcludedPathResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// ExcludedPathResponseInput is an input type that accepts ExcludedPathResponseArgs and ExcludedPathResponseOutput values.
// You can construct a concrete instance of `ExcludedPathResponseInput` via:
//
//          ExcludedPathResponseArgs{...}
type ExcludedPathResponseInput interface {
	pulumi.Input

	ToExcludedPathResponseOutput() ExcludedPathResponseOutput
	ToExcludedPathResponseOutputWithContext(context.Context) ExcludedPathResponseOutput
}

type ExcludedPathResponseArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ExcludedPathResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathResponse)(nil)).Elem()
}

func (i ExcludedPathResponseArgs) ToExcludedPathResponseOutput() ExcludedPathResponseOutput {
	return i.ToExcludedPathResponseOutputWithContext(context.Background())
}

func (i ExcludedPathResponseArgs) ToExcludedPathResponseOutputWithContext(ctx context.Context) ExcludedPathResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathResponseOutput)
}

// ExcludedPathResponseArrayInput is an input type that accepts ExcludedPathResponseArray and ExcludedPathResponseArrayOutput values.
// You can construct a concrete instance of `ExcludedPathResponseArrayInput` via:
//
//          ExcludedPathResponseArray{ ExcludedPathResponseArgs{...} }
type ExcludedPathResponseArrayInput interface {
	pulumi.Input

	ToExcludedPathResponseArrayOutput() ExcludedPathResponseArrayOutput
	ToExcludedPathResponseArrayOutputWithContext(context.Context) ExcludedPathResponseArrayOutput
}

type ExcludedPathResponseArray []ExcludedPathResponseInput

func (ExcludedPathResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathResponse)(nil)).Elem()
}

func (i ExcludedPathResponseArray) ToExcludedPathResponseArrayOutput() ExcludedPathResponseArrayOutput {
	return i.ToExcludedPathResponseArrayOutputWithContext(context.Background())
}

func (i ExcludedPathResponseArray) ToExcludedPathResponseArrayOutputWithContext(ctx context.Context) ExcludedPathResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExcludedPathResponseArrayOutput)
}

type ExcludedPathResponseOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutput() ExcludedPathResponseOutput {
	return o
}

func (o ExcludedPathResponseOutput) ToExcludedPathResponseOutputWithContext(ctx context.Context) ExcludedPathResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o ExcludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExcludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ExcludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (ExcludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExcludedPathResponse)(nil)).Elem()
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutput() ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) ToExcludedPathResponseArrayOutputWithContext(ctx context.Context) ExcludedPathResponseArrayOutput {
	return o
}

func (o ExcludedPathResponseArrayOutput) Index(i pulumi.IntInput) ExcludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExcludedPathResponse {
		return vs[0].([]ExcludedPathResponse)[vs[1].(int)]
	}).(ExcludedPathResponseOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyInvokeResponse struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName *string `pulumi:"locationName"`
}

// FailoverPolicyInvokeResponseInput is an input type that accepts FailoverPolicyInvokeResponseArgs and FailoverPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `FailoverPolicyInvokeResponseInput` via:
//
//          FailoverPolicyInvokeResponseArgs{...}
type FailoverPolicyInvokeResponseInput interface {
	pulumi.Input

	ToFailoverPolicyInvokeResponseOutput() FailoverPolicyInvokeResponseOutput
	ToFailoverPolicyInvokeResponseOutputWithContext(context.Context) FailoverPolicyInvokeResponseOutput
}

// The failover policy for a given region of a database account.
type FailoverPolicyInvokeResponseArgs struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
}

func (FailoverPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyInvokeResponse)(nil)).Elem()
}

func (i FailoverPolicyInvokeResponseArgs) ToFailoverPolicyInvokeResponseOutput() FailoverPolicyInvokeResponseOutput {
	return i.ToFailoverPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i FailoverPolicyInvokeResponseArgs) ToFailoverPolicyInvokeResponseOutputWithContext(ctx context.Context) FailoverPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverPolicyInvokeResponseOutput)
}

// FailoverPolicyInvokeResponseArrayInput is an input type that accepts FailoverPolicyInvokeResponseArray and FailoverPolicyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `FailoverPolicyInvokeResponseArrayInput` via:
//
//          FailoverPolicyInvokeResponseArray{ FailoverPolicyInvokeResponseArgs{...} }
type FailoverPolicyInvokeResponseArrayInput interface {
	pulumi.Input

	ToFailoverPolicyInvokeResponseArrayOutput() FailoverPolicyInvokeResponseArrayOutput
	ToFailoverPolicyInvokeResponseArrayOutputWithContext(context.Context) FailoverPolicyInvokeResponseArrayOutput
}

type FailoverPolicyInvokeResponseArray []FailoverPolicyInvokeResponseInput

func (FailoverPolicyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyInvokeResponse)(nil)).Elem()
}

func (i FailoverPolicyInvokeResponseArray) ToFailoverPolicyInvokeResponseArrayOutput() FailoverPolicyInvokeResponseArrayOutput {
	return i.ToFailoverPolicyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i FailoverPolicyInvokeResponseArray) ToFailoverPolicyInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverPolicyInvokeResponseArrayOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (FailoverPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyInvokeResponse)(nil)).Elem()
}

func (o FailoverPolicyInvokeResponseOutput) ToFailoverPolicyInvokeResponseOutput() FailoverPolicyInvokeResponseOutput {
	return o
}

func (o FailoverPolicyInvokeResponseOutput) ToFailoverPolicyInvokeResponseOutputWithContext(ctx context.Context) FailoverPolicyInvokeResponseOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o FailoverPolicyInvokeResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverPolicyInvokeResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o FailoverPolicyInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverPolicyInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the region in which the database account exists.
func (o FailoverPolicyInvokeResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverPolicyInvokeResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type FailoverPolicyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverPolicyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyInvokeResponse)(nil)).Elem()
}

func (o FailoverPolicyInvokeResponseArrayOutput) ToFailoverPolicyInvokeResponseArrayOutput() FailoverPolicyInvokeResponseArrayOutput {
	return o
}

func (o FailoverPolicyInvokeResponseArrayOutput) ToFailoverPolicyInvokeResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyInvokeResponseArrayOutput {
	return o
}

func (o FailoverPolicyInvokeResponseArrayOutput) Index(i pulumi.IntInput) FailoverPolicyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverPolicyInvokeResponse {
		return vs[0].([]FailoverPolicyInvokeResponse)[vs[1].(int)]
	}).(FailoverPolicyInvokeResponseOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponse struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName *string `pulumi:"locationName"`
}

// FailoverPolicyResponseInput is an input type that accepts FailoverPolicyResponseArgs and FailoverPolicyResponseOutput values.
// You can construct a concrete instance of `FailoverPolicyResponseInput` via:
//
//          FailoverPolicyResponseArgs{...}
type FailoverPolicyResponseInput interface {
	pulumi.Input

	ToFailoverPolicyResponseOutput() FailoverPolicyResponseOutput
	ToFailoverPolicyResponseOutputWithContext(context.Context) FailoverPolicyResponseOutput
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponseArgs struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the region in which the database account exists.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
}

func (FailoverPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyResponse)(nil)).Elem()
}

func (i FailoverPolicyResponseArgs) ToFailoverPolicyResponseOutput() FailoverPolicyResponseOutput {
	return i.ToFailoverPolicyResponseOutputWithContext(context.Background())
}

func (i FailoverPolicyResponseArgs) ToFailoverPolicyResponseOutputWithContext(ctx context.Context) FailoverPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverPolicyResponseOutput)
}

// FailoverPolicyResponseArrayInput is an input type that accepts FailoverPolicyResponseArray and FailoverPolicyResponseArrayOutput values.
// You can construct a concrete instance of `FailoverPolicyResponseArrayInput` via:
//
//          FailoverPolicyResponseArray{ FailoverPolicyResponseArgs{...} }
type FailoverPolicyResponseArrayInput interface {
	pulumi.Input

	ToFailoverPolicyResponseArrayOutput() FailoverPolicyResponseArrayOutput
	ToFailoverPolicyResponseArrayOutputWithContext(context.Context) FailoverPolicyResponseArrayOutput
}

type FailoverPolicyResponseArray []FailoverPolicyResponseInput

func (FailoverPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyResponse)(nil)).Elem()
}

func (i FailoverPolicyResponseArray) ToFailoverPolicyResponseArrayOutput() FailoverPolicyResponseArrayOutput {
	return i.ToFailoverPolicyResponseArrayOutputWithContext(context.Background())
}

func (i FailoverPolicyResponseArray) ToFailoverPolicyResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FailoverPolicyResponseArrayOutput)
}

// The failover policy for a given region of a database account.
type FailoverPolicyResponseOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutput() FailoverPolicyResponseOutput {
	return o
}

func (o FailoverPolicyResponseOutput) ToFailoverPolicyResponseOutputWithContext(ctx context.Context) FailoverPolicyResponseOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o FailoverPolicyResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o FailoverPolicyResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the region in which the database account exists.
func (o FailoverPolicyResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FailoverPolicyResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type FailoverPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (FailoverPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FailoverPolicyResponse)(nil)).Elem()
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutput() FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) ToFailoverPolicyResponseArrayOutputWithContext(ctx context.Context) FailoverPolicyResponseArrayOutput {
	return o
}

func (o FailoverPolicyResponseArrayOutput) Index(i pulumi.IntInput) FailoverPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FailoverPolicyResponse {
		return vs[0].([]FailoverPolicyResponse)[vs[1].(int)]
	}).(FailoverPolicyResponseOutput)
}

type GremlinDatabaseGetPropertiesInvokeResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// GremlinDatabaseGetPropertiesInvokeResponseResourceInput is an input type that accepts GremlinDatabaseGetPropertiesInvokeResponseResourceArgs and GremlinDatabaseGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseGetPropertiesInvokeResponseResourceInput` via:
//
//          GremlinDatabaseGetPropertiesInvokeResponseResourceArgs{...}
type GremlinDatabaseGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutput() GremlinDatabaseGetPropertiesInvokeResponseResourceOutput
	ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) GremlinDatabaseGetPropertiesInvokeResponseResourceOutput
}

type GremlinDatabaseGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (GremlinDatabaseGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i GremlinDatabaseGetPropertiesInvokeResponseResourceArgs) ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutput() GremlinDatabaseGetPropertiesInvokeResponseResourceOutput {
	return i.ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseGetPropertiesInvokeResponseResourceArgs) ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseGetPropertiesInvokeResponseResourceOutput)
}

type GremlinDatabaseGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutput() GremlinDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) ToGremlinDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type GremlinDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// GremlinDatabaseGetPropertiesResponseResourceInput is an input type that accepts GremlinDatabaseGetPropertiesResponseResourceArgs and GremlinDatabaseGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseGetPropertiesResponseResourceInput` via:
//
//          GremlinDatabaseGetPropertiesResponseResourceArgs{...}
type GremlinDatabaseGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseGetPropertiesResponseResourceOutput() GremlinDatabaseGetPropertiesResponseResourceOutput
	ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(context.Context) GremlinDatabaseGetPropertiesResponseResourceOutput
}

type GremlinDatabaseGetPropertiesResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (GremlinDatabaseGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i GremlinDatabaseGetPropertiesResponseResourceArgs) ToGremlinDatabaseGetPropertiesResponseResourceOutput() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return i.ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseGetPropertiesResponseResourceArgs) ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseGetPropertiesResponseResourceOutput)
}

func (i GremlinDatabaseGetPropertiesResponseResourceArgs) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i GremlinDatabaseGetPropertiesResponseResourceArgs) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseGetPropertiesResponseResourceOutput).ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// GremlinDatabaseGetPropertiesResponseResourcePtrInput is an input type that accepts GremlinDatabaseGetPropertiesResponseResourceArgs, GremlinDatabaseGetPropertiesResponseResourcePtr and GremlinDatabaseGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `GremlinDatabaseGetPropertiesResponseResourcePtrInput` via:
//
//          GremlinDatabaseGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type GremlinDatabaseGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput
	ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput
}

type gremlinDatabaseGetPropertiesResponseResourcePtrType GremlinDatabaseGetPropertiesResponseResourceArgs

func GremlinDatabaseGetPropertiesResponseResourcePtr(v *GremlinDatabaseGetPropertiesResponseResourceArgs) GremlinDatabaseGetPropertiesResponseResourcePtrInput {
	return (*gremlinDatabaseGetPropertiesResponseResourcePtrType)(v)
}

func (*gremlinDatabaseGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i *gremlinDatabaseGetPropertiesResponseResourcePtrType) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinDatabaseGetPropertiesResponseResourcePtrType) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseGetPropertiesResponseResourcePtrOutput)
}

type GremlinDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutput() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseGetPropertiesResponseResourceOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) *GremlinDatabaseGetPropertiesResponseResource {
		return &v
	}).(GremlinDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v GremlinDatabaseGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type GremlinDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutput() GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) ToGremlinDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Elem() GremlinDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) GremlinDatabaseGetPropertiesResponseResource {
		return *v
	}).(GremlinDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *GremlinDatabaseGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResource struct {
	// Name of the Cosmos DB Gremlin database
	Id string `pulumi:"id"`
}

// GremlinDatabaseResourceInput is an input type that accepts GremlinDatabaseResourceArgs and GremlinDatabaseResourceOutput values.
// You can construct a concrete instance of `GremlinDatabaseResourceInput` via:
//
//          GremlinDatabaseResourceArgs{...}
type GremlinDatabaseResourceInput interface {
	pulumi.Input

	ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput
	ToGremlinDatabaseResourceOutputWithContext(context.Context) GremlinDatabaseResourceOutput
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResourceArgs struct {
	// Name of the Cosmos DB Gremlin database
	Id pulumi.StringInput `pulumi:"id"`
}

func (GremlinDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseResource)(nil)).Elem()
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput {
	return i.ToGremlinDatabaseResourceOutputWithContext(context.Background())
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourceOutputWithContext(ctx context.Context) GremlinDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourceOutput)
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return i.ToGremlinDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i GremlinDatabaseResourceArgs) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourceOutput).ToGremlinDatabaseResourcePtrOutputWithContext(ctx)
}

// GremlinDatabaseResourcePtrInput is an input type that accepts GremlinDatabaseResourceArgs, GremlinDatabaseResourcePtr and GremlinDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `GremlinDatabaseResourcePtrInput` via:
//
//          GremlinDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type GremlinDatabaseResourcePtrInput interface {
	pulumi.Input

	ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput
	ToGremlinDatabaseResourcePtrOutputWithContext(context.Context) GremlinDatabaseResourcePtrOutput
}

type gremlinDatabaseResourcePtrType GremlinDatabaseResourceArgs

func GremlinDatabaseResourcePtr(v *GremlinDatabaseResourceArgs) GremlinDatabaseResourcePtrInput {
	return (*gremlinDatabaseResourcePtrType)(v)
}

func (*gremlinDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseResource)(nil)).Elem()
}

func (i *gremlinDatabaseResourcePtrType) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return i.ToGremlinDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinDatabaseResourcePtrType) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseResourcePtrOutput)
}

// Cosmos DB Gremlin database resource object
type GremlinDatabaseResourceOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseResource)(nil)).Elem()
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourceOutput() GremlinDatabaseResourceOutput {
	return o
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourceOutputWithContext(ctx context.Context) GremlinDatabaseResourceOutput {
	return o
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return o.ToGremlinDatabaseResourcePtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseResourceOutput) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return o.ApplyT(func(v GremlinDatabaseResource) *GremlinDatabaseResource {
		return &v
	}).(GremlinDatabaseResourcePtrOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

type GremlinDatabaseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseResource)(nil)).Elem()
}

func (o GremlinDatabaseResourcePtrOutput) ToGremlinDatabaseResourcePtrOutput() GremlinDatabaseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseResourcePtrOutput) ToGremlinDatabaseResourcePtrOutputWithContext(ctx context.Context) GremlinDatabaseResourcePtrOutput {
	return o
}

func (o GremlinDatabaseResourcePtrOutput) Elem() GremlinDatabaseResourceOutput {
	return o.ApplyT(func(v *GremlinDatabaseResource) GremlinDatabaseResource { return *v }).(GremlinDatabaseResourceOutput)
}

// Name of the Cosmos DB Gremlin database
func (o GremlinDatabaseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GremlinGraphGetPropertiesInvokeResponseResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicyInvokeResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicyInvokeResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyInvokeResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyInvokeResponse `pulumi:"uniqueKeyPolicy"`
}

// GremlinGraphGetPropertiesInvokeResponseResourceInput is an input type that accepts GremlinGraphGetPropertiesInvokeResponseResourceArgs and GremlinGraphGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `GremlinGraphGetPropertiesInvokeResponseResourceInput` via:
//
//          GremlinGraphGetPropertiesInvokeResponseResourceArgs{...}
type GremlinGraphGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToGremlinGraphGetPropertiesInvokeResponseResourceOutput() GremlinGraphGetPropertiesInvokeResponseResourceOutput
	ToGremlinGraphGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) GremlinGraphGetPropertiesInvokeResponseResourceOutput
}

type GremlinGraphGetPropertiesInvokeResponseResourceArgs struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy ConflictResolutionPolicyInvokeResponsePtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy IndexingPolicyInvokeResponsePtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyInvokeResponsePtrInput `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyInvokeResponsePtrInput `pulumi:"uniqueKeyPolicy"`
}

func (GremlinGraphGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i GremlinGraphGetPropertiesInvokeResponseResourceArgs) ToGremlinGraphGetPropertiesInvokeResponseResourceOutput() GremlinGraphGetPropertiesInvokeResponseResourceOutput {
	return i.ToGremlinGraphGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i GremlinGraphGetPropertiesInvokeResponseResourceArgs) ToGremlinGraphGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphGetPropertiesInvokeResponseResourceOutput)
}

type GremlinGraphGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) ToGremlinGraphGetPropertiesInvokeResponseResourceOutput() GremlinGraphGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) ToGremlinGraphGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesInvokeResponseResourceOutput {
	return o
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) *ConflictResolutionPolicyInvokeResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyInvokeResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) IndexingPolicy() IndexingPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) *IndexingPolicyInvokeResponse {
		return v.IndexingPolicy
	}).(IndexingPolicyInvokeResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) PartitionKey() ContainerPartitionKeyInvokeResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) *ContainerPartitionKeyInvokeResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyInvokeResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesInvokeResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesInvokeResponseResource) *UniqueKeyPolicyInvokeResponse {
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyInvokeResponsePtrOutput)
}

type GremlinGraphGetPropertiesResponseResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

// GremlinGraphGetPropertiesResponseResourceInput is an input type that accepts GremlinGraphGetPropertiesResponseResourceArgs and GremlinGraphGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `GremlinGraphGetPropertiesResponseResourceInput` via:
//
//          GremlinGraphGetPropertiesResponseResourceArgs{...}
type GremlinGraphGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToGremlinGraphGetPropertiesResponseResourceOutput() GremlinGraphGetPropertiesResponseResourceOutput
	ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(context.Context) GremlinGraphGetPropertiesResponseResourceOutput
}

type GremlinGraphGetPropertiesResponseResourceArgs struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy ConflictResolutionPolicyResponsePtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB Gremlin graph
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy IndexingPolicyResponsePtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyResponsePtrInput `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyResponsePtrInput `pulumi:"uniqueKeyPolicy"`
}

func (GremlinGraphGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (i GremlinGraphGetPropertiesResponseResourceArgs) ToGremlinGraphGetPropertiesResponseResourceOutput() GremlinGraphGetPropertiesResponseResourceOutput {
	return i.ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i GremlinGraphGetPropertiesResponseResourceArgs) ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphGetPropertiesResponseResourceOutput)
}

func (i GremlinGraphGetPropertiesResponseResourceArgs) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return i.ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i GremlinGraphGetPropertiesResponseResourceArgs) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphGetPropertiesResponseResourceOutput).ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// GremlinGraphGetPropertiesResponseResourcePtrInput is an input type that accepts GremlinGraphGetPropertiesResponseResourceArgs, GremlinGraphGetPropertiesResponseResourcePtr and GremlinGraphGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `GremlinGraphGetPropertiesResponseResourcePtrInput` via:
//
//          GremlinGraphGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type GremlinGraphGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput
	ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput
}

type gremlinGraphGetPropertiesResponseResourcePtrType GremlinGraphGetPropertiesResponseResourceArgs

func GremlinGraphGetPropertiesResponseResourcePtr(v *GremlinGraphGetPropertiesResponseResourceArgs) GremlinGraphGetPropertiesResponseResourcePtrInput {
	return (*gremlinGraphGetPropertiesResponseResourcePtrType)(v)
}

func (*gremlinGraphGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (i *gremlinGraphGetPropertiesResponseResourcePtrType) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return i.ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinGraphGetPropertiesResponseResourcePtrType) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphGetPropertiesResponseResourcePtrOutput)
}

type GremlinGraphGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutput() GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourceOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourceOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o.ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o GremlinGraphGetPropertiesResponseResourceOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *GremlinGraphGetPropertiesResponseResource {
		return &v
	}).(GremlinGraphGetPropertiesResponseResourcePtrOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type GremlinGraphGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphGetPropertiesResponseResource)(nil)).Elem()
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutput() GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ToGremlinGraphGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) GremlinGraphGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Elem() GremlinGraphGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) GremlinGraphGetPropertiesResponseResource {
		return *v
	}).(GremlinGraphGetPropertiesResponseResourceOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *GremlinGraphGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResource struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// GremlinGraphResourceInput is an input type that accepts GremlinGraphResourceArgs and GremlinGraphResourceOutput values.
// You can construct a concrete instance of `GremlinGraphResourceInput` via:
//
//          GremlinGraphResourceArgs{...}
type GremlinGraphResourceInput interface {
	pulumi.Input

	ToGremlinGraphResourceOutput() GremlinGraphResourceOutput
	ToGremlinGraphResourceOutputWithContext(context.Context) GremlinGraphResourceOutput
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResourceArgs struct {
	// The conflict resolution policy for the graph.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB Gremlin graph
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

func (GremlinGraphResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphResource)(nil)).Elem()
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutput() GremlinGraphResourceOutput {
	return i.ToGremlinGraphResourceOutputWithContext(context.Background())
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourceOutputWithContext(ctx context.Context) GremlinGraphResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourceOutput)
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return i.ToGremlinGraphResourcePtrOutputWithContext(context.Background())
}

func (i GremlinGraphResourceArgs) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourceOutput).ToGremlinGraphResourcePtrOutputWithContext(ctx)
}

// GremlinGraphResourcePtrInput is an input type that accepts GremlinGraphResourceArgs, GremlinGraphResourcePtr and GremlinGraphResourcePtrOutput values.
// You can construct a concrete instance of `GremlinGraphResourcePtrInput` via:
//
//          GremlinGraphResourceArgs{...}
//
//  or:
//
//          nil
type GremlinGraphResourcePtrInput interface {
	pulumi.Input

	ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput
	ToGremlinGraphResourcePtrOutputWithContext(context.Context) GremlinGraphResourcePtrOutput
}

type gremlinGraphResourcePtrType GremlinGraphResourceArgs

func GremlinGraphResourcePtr(v *GremlinGraphResourceArgs) GremlinGraphResourcePtrInput {
	return (*gremlinGraphResourcePtrType)(v)
}

func (*gremlinGraphResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphResource)(nil)).Elem()
}

func (i *gremlinGraphResourcePtrType) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return i.ToGremlinGraphResourcePtrOutputWithContext(context.Background())
}

func (i *gremlinGraphResourcePtrType) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphResourcePtrOutput)
}

// Cosmos DB Gremlin graph resource object
type GremlinGraphResourceOutput struct{ *pulumi.OutputState }

func (GremlinGraphResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphResource)(nil)).Elem()
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourceOutput() GremlinGraphResourceOutput {
	return o
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourceOutputWithContext(ctx context.Context) GremlinGraphResourceOutput {
	return o
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return o.ToGremlinGraphResourcePtrOutputWithContext(context.Background())
}

func (o GremlinGraphResourceOutput) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *GremlinGraphResource {
		return &v
	}).(GremlinGraphResourcePtrOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *ConflictResolutionPolicy { return v.ConflictResolutionPolicy }).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o GremlinGraphResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphResourceOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *IndexingPolicy { return v.IndexingPolicy }).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphResourceOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *ContainerPartitionKey { return v.PartitionKey }).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v GremlinGraphResource) *UniqueKeyPolicy { return v.UniqueKeyPolicy }).(UniqueKeyPolicyPtrOutput)
}

type GremlinGraphResourcePtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphResource)(nil)).Elem()
}

func (o GremlinGraphResourcePtrOutput) ToGremlinGraphResourcePtrOutput() GremlinGraphResourcePtrOutput {
	return o
}

func (o GremlinGraphResourcePtrOutput) ToGremlinGraphResourcePtrOutputWithContext(ctx context.Context) GremlinGraphResourcePtrOutput {
	return o
}

func (o GremlinGraphResourcePtrOutput) Elem() GremlinGraphResourceOutput {
	return o.ApplyT(func(v *GremlinGraphResource) GremlinGraphResource { return *v }).(GremlinGraphResourceOutput)
}

// The conflict resolution policy for the graph.
func (o GremlinGraphResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *ConflictResolutionPolicy {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o GremlinGraphResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB Gremlin graph
func (o GremlinGraphResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
func (o GremlinGraphResourcePtrOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *IndexingPolicy {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o GremlinGraphResourcePtrOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *ContainerPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o GremlinGraphResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v *GremlinGraphResource) *UniqueKeyPolicy {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyPtrOutput)
}

// The paths that are included in indexing
type IncludedPath struct {
	// List of indexes for this path
	Indexes []Indexes `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// IncludedPathInput is an input type that accepts IncludedPathArgs and IncludedPathOutput values.
// You can construct a concrete instance of `IncludedPathInput` via:
//
//          IncludedPathArgs{...}
type IncludedPathInput interface {
	pulumi.Input

	ToIncludedPathOutput() IncludedPathOutput
	ToIncludedPathOutputWithContext(context.Context) IncludedPathOutput
}

// The paths that are included in indexing
type IncludedPathArgs struct {
	// List of indexes for this path
	Indexes IndexesArrayInput `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (IncludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPath)(nil)).Elem()
}

func (i IncludedPathArgs) ToIncludedPathOutput() IncludedPathOutput {
	return i.ToIncludedPathOutputWithContext(context.Background())
}

func (i IncludedPathArgs) ToIncludedPathOutputWithContext(ctx context.Context) IncludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathOutput)
}

// IncludedPathArrayInput is an input type that accepts IncludedPathArray and IncludedPathArrayOutput values.
// You can construct a concrete instance of `IncludedPathArrayInput` via:
//
//          IncludedPathArray{ IncludedPathArgs{...} }
type IncludedPathArrayInput interface {
	pulumi.Input

	ToIncludedPathArrayOutput() IncludedPathArrayOutput
	ToIncludedPathArrayOutputWithContext(context.Context) IncludedPathArrayOutput
}

type IncludedPathArray []IncludedPathInput

func (IncludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPath)(nil)).Elem()
}

func (i IncludedPathArray) ToIncludedPathArrayOutput() IncludedPathArrayOutput {
	return i.ToIncludedPathArrayOutputWithContext(context.Background())
}

func (i IncludedPathArray) ToIncludedPathArrayOutputWithContext(ctx context.Context) IncludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathArrayOutput)
}

// The paths that are included in indexing
type IncludedPathOutput struct{ *pulumi.OutputState }

func (IncludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPath)(nil)).Elem()
}

func (o IncludedPathOutput) ToIncludedPathOutput() IncludedPathOutput {
	return o
}

func (o IncludedPathOutput) ToIncludedPathOutputWithContext(ctx context.Context) IncludedPathOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathOutput) Indexes() IndexesArrayOutput {
	return o.ApplyT(func(v IncludedPath) []Indexes { return v.Indexes }).(IndexesArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPath)(nil)).Elem()
}

func (o IncludedPathArrayOutput) ToIncludedPathArrayOutput() IncludedPathArrayOutput {
	return o
}

func (o IncludedPathArrayOutput) ToIncludedPathArrayOutputWithContext(ctx context.Context) IncludedPathArrayOutput {
	return o
}

func (o IncludedPathArrayOutput) Index(i pulumi.IntInput) IncludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPath {
		return vs[0].([]IncludedPath)[vs[1].(int)]
	}).(IncludedPathOutput)
}

// The paths that are included in indexing
type IncludedPathInvokeResponse struct {
	// List of indexes for this path
	Indexes []IndexesInvokeResponse `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// IncludedPathInvokeResponseInput is an input type that accepts IncludedPathInvokeResponseArgs and IncludedPathInvokeResponseOutput values.
// You can construct a concrete instance of `IncludedPathInvokeResponseInput` via:
//
//          IncludedPathInvokeResponseArgs{...}
type IncludedPathInvokeResponseInput interface {
	pulumi.Input

	ToIncludedPathInvokeResponseOutput() IncludedPathInvokeResponseOutput
	ToIncludedPathInvokeResponseOutputWithContext(context.Context) IncludedPathInvokeResponseOutput
}

// The paths that are included in indexing
type IncludedPathInvokeResponseArgs struct {
	// List of indexes for this path
	Indexes IndexesInvokeResponseArrayInput `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (IncludedPathInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathInvokeResponse)(nil)).Elem()
}

func (i IncludedPathInvokeResponseArgs) ToIncludedPathInvokeResponseOutput() IncludedPathInvokeResponseOutput {
	return i.ToIncludedPathInvokeResponseOutputWithContext(context.Background())
}

func (i IncludedPathInvokeResponseArgs) ToIncludedPathInvokeResponseOutputWithContext(ctx context.Context) IncludedPathInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathInvokeResponseOutput)
}

// IncludedPathInvokeResponseArrayInput is an input type that accepts IncludedPathInvokeResponseArray and IncludedPathInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IncludedPathInvokeResponseArrayInput` via:
//
//          IncludedPathInvokeResponseArray{ IncludedPathInvokeResponseArgs{...} }
type IncludedPathInvokeResponseArrayInput interface {
	pulumi.Input

	ToIncludedPathInvokeResponseArrayOutput() IncludedPathInvokeResponseArrayOutput
	ToIncludedPathInvokeResponseArrayOutputWithContext(context.Context) IncludedPathInvokeResponseArrayOutput
}

type IncludedPathInvokeResponseArray []IncludedPathInvokeResponseInput

func (IncludedPathInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathInvokeResponse)(nil)).Elem()
}

func (i IncludedPathInvokeResponseArray) ToIncludedPathInvokeResponseArrayOutput() IncludedPathInvokeResponseArrayOutput {
	return i.ToIncludedPathInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IncludedPathInvokeResponseArray) ToIncludedPathInvokeResponseArrayOutputWithContext(ctx context.Context) IncludedPathInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathInvokeResponseArrayOutput)
}

// The paths that are included in indexing
type IncludedPathInvokeResponseOutput struct{ *pulumi.OutputState }

func (IncludedPathInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathInvokeResponse)(nil)).Elem()
}

func (o IncludedPathInvokeResponseOutput) ToIncludedPathInvokeResponseOutput() IncludedPathInvokeResponseOutput {
	return o
}

func (o IncludedPathInvokeResponseOutput) ToIncludedPathInvokeResponseOutputWithContext(ctx context.Context) IncludedPathInvokeResponseOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathInvokeResponseOutput) Indexes() IndexesInvokeResponseArrayOutput {
	return o.ApplyT(func(v IncludedPathInvokeResponse) []IndexesInvokeResponse { return v.Indexes }).(IndexesInvokeResponseArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPathInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathInvokeResponse)(nil)).Elem()
}

func (o IncludedPathInvokeResponseArrayOutput) ToIncludedPathInvokeResponseArrayOutput() IncludedPathInvokeResponseArrayOutput {
	return o
}

func (o IncludedPathInvokeResponseArrayOutput) ToIncludedPathInvokeResponseArrayOutputWithContext(ctx context.Context) IncludedPathInvokeResponseArrayOutput {
	return o
}

func (o IncludedPathInvokeResponseArrayOutput) Index(i pulumi.IntInput) IncludedPathInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPathInvokeResponse {
		return vs[0].([]IncludedPathInvokeResponse)[vs[1].(int)]
	}).(IncludedPathInvokeResponseOutput)
}

// The paths that are included in indexing
type IncludedPathResponse struct {
	// List of indexes for this path
	Indexes []IndexesResponse `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
}

// IncludedPathResponseInput is an input type that accepts IncludedPathResponseArgs and IncludedPathResponseOutput values.
// You can construct a concrete instance of `IncludedPathResponseInput` via:
//
//          IncludedPathResponseArgs{...}
type IncludedPathResponseInput interface {
	pulumi.Input

	ToIncludedPathResponseOutput() IncludedPathResponseOutput
	ToIncludedPathResponseOutputWithContext(context.Context) IncludedPathResponseOutput
}

// The paths that are included in indexing
type IncludedPathResponseArgs struct {
	// List of indexes for this path
	Indexes IndexesResponseArrayInput `pulumi:"indexes"`
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (IncludedPathResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathResponse)(nil)).Elem()
}

func (i IncludedPathResponseArgs) ToIncludedPathResponseOutput() IncludedPathResponseOutput {
	return i.ToIncludedPathResponseOutputWithContext(context.Background())
}

func (i IncludedPathResponseArgs) ToIncludedPathResponseOutputWithContext(ctx context.Context) IncludedPathResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathResponseOutput)
}

// IncludedPathResponseArrayInput is an input type that accepts IncludedPathResponseArray and IncludedPathResponseArrayOutput values.
// You can construct a concrete instance of `IncludedPathResponseArrayInput` via:
//
//          IncludedPathResponseArray{ IncludedPathResponseArgs{...} }
type IncludedPathResponseArrayInput interface {
	pulumi.Input

	ToIncludedPathResponseArrayOutput() IncludedPathResponseArrayOutput
	ToIncludedPathResponseArrayOutputWithContext(context.Context) IncludedPathResponseArrayOutput
}

type IncludedPathResponseArray []IncludedPathResponseInput

func (IncludedPathResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathResponse)(nil)).Elem()
}

func (i IncludedPathResponseArray) ToIncludedPathResponseArrayOutput() IncludedPathResponseArrayOutput {
	return i.ToIncludedPathResponseArrayOutputWithContext(context.Background())
}

func (i IncludedPathResponseArray) ToIncludedPathResponseArrayOutputWithContext(ctx context.Context) IncludedPathResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IncludedPathResponseArrayOutput)
}

// The paths that are included in indexing
type IncludedPathResponseOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutput() IncludedPathResponseOutput {
	return o
}

func (o IncludedPathResponseOutput) ToIncludedPathResponseOutputWithContext(ctx context.Context) IncludedPathResponseOutput {
	return o
}

// List of indexes for this path
func (o IncludedPathResponseOutput) Indexes() IndexesResponseArrayOutput {
	return o.ApplyT(func(v IncludedPathResponse) []IndexesResponse { return v.Indexes }).(IndexesResponseArrayOutput)
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o IncludedPathResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IncludedPathResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type IncludedPathResponseArrayOutput struct{ *pulumi.OutputState }

func (IncludedPathResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IncludedPathResponse)(nil)).Elem()
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutput() IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) ToIncludedPathResponseArrayOutputWithContext(ctx context.Context) IncludedPathResponseArrayOutput {
	return o
}

func (o IncludedPathResponseArrayOutput) Index(i pulumi.IntInput) IncludedPathResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IncludedPathResponse {
		return vs[0].([]IncludedPathResponse)[vs[1].(int)]
	}).(IncludedPathResponseOutput)
}

// The indexes for the path.
type Indexes struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// IndexesInput is an input type that accepts IndexesArgs and IndexesOutput values.
// You can construct a concrete instance of `IndexesInput` via:
//
//          IndexesArgs{...}
type IndexesInput interface {
	pulumi.Input

	ToIndexesOutput() IndexesOutput
	ToIndexesOutputWithContext(context.Context) IndexesOutput
}

// The indexes for the path.
type IndexesArgs struct {
	// The datatype for which the indexing behavior is applied to.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Indicates the type of index.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
}

func (IndexesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Indexes)(nil)).Elem()
}

func (i IndexesArgs) ToIndexesOutput() IndexesOutput {
	return i.ToIndexesOutputWithContext(context.Background())
}

func (i IndexesArgs) ToIndexesOutputWithContext(ctx context.Context) IndexesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesOutput)
}

// IndexesArrayInput is an input type that accepts IndexesArray and IndexesArrayOutput values.
// You can construct a concrete instance of `IndexesArrayInput` via:
//
//          IndexesArray{ IndexesArgs{...} }
type IndexesArrayInput interface {
	pulumi.Input

	ToIndexesArrayOutput() IndexesArrayOutput
	ToIndexesArrayOutputWithContext(context.Context) IndexesArrayOutput
}

type IndexesArray []IndexesInput

func (IndexesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Indexes)(nil)).Elem()
}

func (i IndexesArray) ToIndexesArrayOutput() IndexesArrayOutput {
	return i.ToIndexesArrayOutputWithContext(context.Background())
}

func (i IndexesArray) ToIndexesArrayOutputWithContext(ctx context.Context) IndexesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesArrayOutput)
}

// The indexes for the path.
type IndexesOutput struct{ *pulumi.OutputState }

func (IndexesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Indexes)(nil)).Elem()
}

func (o IndexesOutput) ToIndexesOutput() IndexesOutput {
	return o
}

func (o IndexesOutput) ToIndexesOutputWithContext(ctx context.Context) IndexesOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Indexes) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Indexes) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Indexes) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesArrayOutput struct{ *pulumi.OutputState }

func (IndexesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Indexes)(nil)).Elem()
}

func (o IndexesArrayOutput) ToIndexesArrayOutput() IndexesArrayOutput {
	return o
}

func (o IndexesArrayOutput) ToIndexesArrayOutputWithContext(ctx context.Context) IndexesArrayOutput {
	return o
}

func (o IndexesArrayOutput) Index(i pulumi.IntInput) IndexesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Indexes {
		return vs[0].([]Indexes)[vs[1].(int)]
	}).(IndexesOutput)
}

// The indexes for the path.
type IndexesInvokeResponse struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// IndexesInvokeResponseInput is an input type that accepts IndexesInvokeResponseArgs and IndexesInvokeResponseOutput values.
// You can construct a concrete instance of `IndexesInvokeResponseInput` via:
//
//          IndexesInvokeResponseArgs{...}
type IndexesInvokeResponseInput interface {
	pulumi.Input

	ToIndexesInvokeResponseOutput() IndexesInvokeResponseOutput
	ToIndexesInvokeResponseOutputWithContext(context.Context) IndexesInvokeResponseOutput
}

// The indexes for the path.
type IndexesInvokeResponseArgs struct {
	// The datatype for which the indexing behavior is applied to.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Indicates the type of index.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
}

func (IndexesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesInvokeResponse)(nil)).Elem()
}

func (i IndexesInvokeResponseArgs) ToIndexesInvokeResponseOutput() IndexesInvokeResponseOutput {
	return i.ToIndexesInvokeResponseOutputWithContext(context.Background())
}

func (i IndexesInvokeResponseArgs) ToIndexesInvokeResponseOutputWithContext(ctx context.Context) IndexesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesInvokeResponseOutput)
}

// IndexesInvokeResponseArrayInput is an input type that accepts IndexesInvokeResponseArray and IndexesInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IndexesInvokeResponseArrayInput` via:
//
//          IndexesInvokeResponseArray{ IndexesInvokeResponseArgs{...} }
type IndexesInvokeResponseArrayInput interface {
	pulumi.Input

	ToIndexesInvokeResponseArrayOutput() IndexesInvokeResponseArrayOutput
	ToIndexesInvokeResponseArrayOutputWithContext(context.Context) IndexesInvokeResponseArrayOutput
}

type IndexesInvokeResponseArray []IndexesInvokeResponseInput

func (IndexesInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesInvokeResponse)(nil)).Elem()
}

func (i IndexesInvokeResponseArray) ToIndexesInvokeResponseArrayOutput() IndexesInvokeResponseArrayOutput {
	return i.ToIndexesInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IndexesInvokeResponseArray) ToIndexesInvokeResponseArrayOutputWithContext(ctx context.Context) IndexesInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesInvokeResponseArrayOutput)
}

// The indexes for the path.
type IndexesInvokeResponseOutput struct{ *pulumi.OutputState }

func (IndexesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesInvokeResponse)(nil)).Elem()
}

func (o IndexesInvokeResponseOutput) ToIndexesInvokeResponseOutput() IndexesInvokeResponseOutput {
	return o
}

func (o IndexesInvokeResponseOutput) ToIndexesInvokeResponseOutputWithContext(ctx context.Context) IndexesInvokeResponseOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesInvokeResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesInvokeResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesInvokeResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesInvokeResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesInvokeResponseOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IndexesInvokeResponse) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IndexesInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesInvokeResponse)(nil)).Elem()
}

func (o IndexesInvokeResponseArrayOutput) ToIndexesInvokeResponseArrayOutput() IndexesInvokeResponseArrayOutput {
	return o
}

func (o IndexesInvokeResponseArrayOutput) ToIndexesInvokeResponseArrayOutputWithContext(ctx context.Context) IndexesInvokeResponseArrayOutput {
	return o
}

func (o IndexesInvokeResponseArrayOutput) Index(i pulumi.IntInput) IndexesInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexesInvokeResponse {
		return vs[0].([]IndexesInvokeResponse)[vs[1].(int)]
	}).(IndexesInvokeResponseOutput)
}

// The indexes for the path.
type IndexesResponse struct {
	// The datatype for which the indexing behavior is applied to.
	DataType *string `pulumi:"dataType"`
	// Indicates the type of index.
	Kind *string `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision *int `pulumi:"precision"`
}

// IndexesResponseInput is an input type that accepts IndexesResponseArgs and IndexesResponseOutput values.
// You can construct a concrete instance of `IndexesResponseInput` via:
//
//          IndexesResponseArgs{...}
type IndexesResponseInput interface {
	pulumi.Input

	ToIndexesResponseOutput() IndexesResponseOutput
	ToIndexesResponseOutputWithContext(context.Context) IndexesResponseOutput
}

// The indexes for the path.
type IndexesResponseArgs struct {
	// The datatype for which the indexing behavior is applied to.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Indicates the type of index.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The precision of the index. -1 is maximum precision.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
}

func (IndexesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesResponse)(nil)).Elem()
}

func (i IndexesResponseArgs) ToIndexesResponseOutput() IndexesResponseOutput {
	return i.ToIndexesResponseOutputWithContext(context.Background())
}

func (i IndexesResponseArgs) ToIndexesResponseOutputWithContext(ctx context.Context) IndexesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesResponseOutput)
}

// IndexesResponseArrayInput is an input type that accepts IndexesResponseArray and IndexesResponseArrayOutput values.
// You can construct a concrete instance of `IndexesResponseArrayInput` via:
//
//          IndexesResponseArray{ IndexesResponseArgs{...} }
type IndexesResponseArrayInput interface {
	pulumi.Input

	ToIndexesResponseArrayOutput() IndexesResponseArrayOutput
	ToIndexesResponseArrayOutputWithContext(context.Context) IndexesResponseArrayOutput
}

type IndexesResponseArray []IndexesResponseInput

func (IndexesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesResponse)(nil)).Elem()
}

func (i IndexesResponseArray) ToIndexesResponseArrayOutput() IndexesResponseArrayOutput {
	return i.ToIndexesResponseArrayOutputWithContext(context.Background())
}

func (i IndexesResponseArray) ToIndexesResponseArrayOutputWithContext(ctx context.Context) IndexesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexesResponseArrayOutput)
}

// The indexes for the path.
type IndexesResponseOutput struct{ *pulumi.OutputState }

func (IndexesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseOutput) ToIndexesResponseOutput() IndexesResponseOutput {
	return o
}

func (o IndexesResponseOutput) ToIndexesResponseOutputWithContext(ctx context.Context) IndexesResponseOutput {
	return o
}

// The datatype for which the indexing behavior is applied to.
func (o IndexesResponseOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Indicates the type of index.
func (o IndexesResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The precision of the index. -1 is maximum precision.
func (o IndexesResponseOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IndexesResponse) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

type IndexesResponseArrayOutput struct{ *pulumi.OutputState }

func (IndexesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexesResponse)(nil)).Elem()
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutput() IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) ToIndexesResponseArrayOutputWithContext(ctx context.Context) IndexesResponseArrayOutput {
	return o
}

func (o IndexesResponseArrayOutput) Index(i pulumi.IntInput) IndexesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexesResponse {
		return vs[0].([]IndexesResponse)[vs[1].(int)]
	}).(IndexesResponseOutput)
}

// Cosmos DB indexing policy
type IndexingPolicy struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePath `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPath `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPath `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpec `pulumi:"spatialIndexes"`
}

// IndexingPolicyInput is an input type that accepts IndexingPolicyArgs and IndexingPolicyOutput values.
// You can construct a concrete instance of `IndexingPolicyInput` via:
//
//          IndexingPolicyArgs{...}
type IndexingPolicyInput interface {
	pulumi.Input

	ToIndexingPolicyOutput() IndexingPolicyOutput
	ToIndexingPolicyOutputWithContext(context.Context) IndexingPolicyOutput
}

// Cosmos DB indexing policy
type IndexingPolicyArgs struct {
	// Indicates if the indexing policy is automatic
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes CompositePathArrayArrayInput `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths ExcludedPathArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths IncludedPathArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes SpatialSpecArrayInput `pulumi:"spatialIndexes"`
}

func (IndexingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicy)(nil)).Elem()
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutput() IndexingPolicyOutput {
	return i.ToIndexingPolicyOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyOutputWithContext(ctx context.Context) IndexingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput)
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i IndexingPolicyArgs) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyOutput).ToIndexingPolicyPtrOutputWithContext(ctx)
}

// IndexingPolicyPtrInput is an input type that accepts IndexingPolicyArgs, IndexingPolicyPtr and IndexingPolicyPtrOutput values.
// You can construct a concrete instance of `IndexingPolicyPtrInput` via:
//
//          IndexingPolicyArgs{...}
//
//  or:
//
//          nil
type IndexingPolicyPtrInput interface {
	pulumi.Input

	ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput
	ToIndexingPolicyPtrOutputWithContext(context.Context) IndexingPolicyPtrOutput
}

type indexingPolicyPtrType IndexingPolicyArgs

func IndexingPolicyPtr(v *IndexingPolicyArgs) IndexingPolicyPtrInput {
	return (*indexingPolicyPtrType)(v)
}

func (*indexingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicy)(nil)).Elem()
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return i.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i *indexingPolicyPtrType) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyPtrOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyOutput struct{ *pulumi.OutputState }

func (IndexingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicy)(nil)).Elem()
}

func (o IndexingPolicyOutput) ToIndexingPolicyOutput() IndexingPolicyOutput {
	return o
}

func (o IndexingPolicyOutput) ToIndexingPolicyOutputWithContext(ctx context.Context) IndexingPolicyOutput {
	return o
}

func (o IndexingPolicyOutput) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return o.ToIndexingPolicyPtrOutputWithContext(context.Background())
}

func (o IndexingPolicyOutput) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return o.ApplyT(func(v IndexingPolicy) *IndexingPolicy {
		return &v
	}).(IndexingPolicyPtrOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyOutput) CompositeIndexes() CompositePathArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) [][]CompositePath { return v.CompositeIndexes }).(CompositePathArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyOutput) ExcludedPaths() ExcludedPathArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []ExcludedPath { return v.ExcludedPaths }).(ExcludedPathArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyOutput) IncludedPaths() IncludedPathArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []IncludedPath { return v.IncludedPaths }).(IncludedPathArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicy) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyOutput) SpatialIndexes() SpatialSpecArrayOutput {
	return o.ApplyT(func(v IndexingPolicy) []SpatialSpec { return v.SpatialIndexes }).(SpatialSpecArrayOutput)
}

type IndexingPolicyPtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicy)(nil)).Elem()
}

func (o IndexingPolicyPtrOutput) ToIndexingPolicyPtrOutput() IndexingPolicyPtrOutput {
	return o
}

func (o IndexingPolicyPtrOutput) ToIndexingPolicyPtrOutputWithContext(ctx context.Context) IndexingPolicyPtrOutput {
	return o
}

func (o IndexingPolicyPtrOutput) Elem() IndexingPolicyOutput {
	return o.ApplyT(func(v *IndexingPolicy) IndexingPolicy { return *v }).(IndexingPolicyOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyPtrOutput) CompositeIndexes() CompositePathArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) [][]CompositePath {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyPtrOutput) ExcludedPaths() ExcludedPathArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []ExcludedPath {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyPtrOutput) IncludedPaths() IncludedPathArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []IncludedPath {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyPtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicy) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyPtrOutput) SpatialIndexes() SpatialSpecArrayOutput {
	return o.ApplyT(func(v *IndexingPolicy) []SpatialSpec {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecArrayOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyInvokeResponse struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePathInvokeResponse `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPathInvokeResponse `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPathInvokeResponse `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpecInvokeResponse `pulumi:"spatialIndexes"`
}

// IndexingPolicyInvokeResponseInput is an input type that accepts IndexingPolicyInvokeResponseArgs and IndexingPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `IndexingPolicyInvokeResponseInput` via:
//
//          IndexingPolicyInvokeResponseArgs{...}
type IndexingPolicyInvokeResponseInput interface {
	pulumi.Input

	ToIndexingPolicyInvokeResponseOutput() IndexingPolicyInvokeResponseOutput
	ToIndexingPolicyInvokeResponseOutputWithContext(context.Context) IndexingPolicyInvokeResponseOutput
}

// Cosmos DB indexing policy
type IndexingPolicyInvokeResponseArgs struct {
	// Indicates if the indexing policy is automatic
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes CompositePathInvokeResponseArrayArrayInput `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths ExcludedPathInvokeResponseArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths IncludedPathInvokeResponseArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes SpatialSpecInvokeResponseArrayInput `pulumi:"spatialIndexes"`
}

func (IndexingPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyInvokeResponse)(nil)).Elem()
}

func (i IndexingPolicyInvokeResponseArgs) ToIndexingPolicyInvokeResponseOutput() IndexingPolicyInvokeResponseOutput {
	return i.ToIndexingPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i IndexingPolicyInvokeResponseArgs) ToIndexingPolicyInvokeResponseOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyInvokeResponseOutput)
}

func (i IndexingPolicyInvokeResponseArgs) ToIndexingPolicyInvokeResponsePtrOutput() IndexingPolicyInvokeResponsePtrOutput {
	return i.ToIndexingPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i IndexingPolicyInvokeResponseArgs) ToIndexingPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyInvokeResponseOutput).ToIndexingPolicyInvokeResponsePtrOutputWithContext(ctx)
}

// IndexingPolicyInvokeResponsePtrInput is an input type that accepts IndexingPolicyInvokeResponseArgs, IndexingPolicyInvokeResponsePtr and IndexingPolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `IndexingPolicyInvokeResponsePtrInput` via:
//
//          IndexingPolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type IndexingPolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToIndexingPolicyInvokeResponsePtrOutput() IndexingPolicyInvokeResponsePtrOutput
	ToIndexingPolicyInvokeResponsePtrOutputWithContext(context.Context) IndexingPolicyInvokeResponsePtrOutput
}

type indexingPolicyInvokeResponsePtrType IndexingPolicyInvokeResponseArgs

func IndexingPolicyInvokeResponsePtr(v *IndexingPolicyInvokeResponseArgs) IndexingPolicyInvokeResponsePtrInput {
	return (*indexingPolicyInvokeResponsePtrType)(v)
}

func (*indexingPolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyInvokeResponse)(nil)).Elem()
}

func (i *indexingPolicyInvokeResponsePtrType) ToIndexingPolicyInvokeResponsePtrOutput() IndexingPolicyInvokeResponsePtrOutput {
	return i.ToIndexingPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *indexingPolicyInvokeResponsePtrType) ToIndexingPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyInvokeResponsePtrOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (IndexingPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyInvokeResponse)(nil)).Elem()
}

func (o IndexingPolicyInvokeResponseOutput) ToIndexingPolicyInvokeResponseOutput() IndexingPolicyInvokeResponseOutput {
	return o
}

func (o IndexingPolicyInvokeResponseOutput) ToIndexingPolicyInvokeResponseOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponseOutput {
	return o
}

func (o IndexingPolicyInvokeResponseOutput) ToIndexingPolicyInvokeResponsePtrOutput() IndexingPolicyInvokeResponsePtrOutput {
	return o.ToIndexingPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o IndexingPolicyInvokeResponseOutput) ToIndexingPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) *IndexingPolicyInvokeResponse {
		return &v
	}).(IndexingPolicyInvokeResponsePtrOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyInvokeResponseOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyInvokeResponseOutput) CompositeIndexes() CompositePathInvokeResponseArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) [][]CompositePathInvokeResponse { return v.CompositeIndexes }).(CompositePathInvokeResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyInvokeResponseOutput) ExcludedPaths() ExcludedPathInvokeResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) []ExcludedPathInvokeResponse { return v.ExcludedPaths }).(ExcludedPathInvokeResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyInvokeResponseOutput) IncludedPaths() IncludedPathInvokeResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) []IncludedPathInvokeResponse { return v.IncludedPaths }).(IncludedPathInvokeResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyInvokeResponseOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyInvokeResponseOutput) SpatialIndexes() SpatialSpecInvokeResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyInvokeResponse) []SpatialSpecInvokeResponse { return v.SpatialIndexes }).(SpatialSpecInvokeResponseArrayOutput)
}

type IndexingPolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyInvokeResponse)(nil)).Elem()
}

func (o IndexingPolicyInvokeResponsePtrOutput) ToIndexingPolicyInvokeResponsePtrOutput() IndexingPolicyInvokeResponsePtrOutput {
	return o
}

func (o IndexingPolicyInvokeResponsePtrOutput) ToIndexingPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyInvokeResponsePtrOutput {
	return o
}

func (o IndexingPolicyInvokeResponsePtrOutput) Elem() IndexingPolicyInvokeResponseOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) IndexingPolicyInvokeResponse { return *v }).(IndexingPolicyInvokeResponseOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyInvokeResponsePtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyInvokeResponsePtrOutput) CompositeIndexes() CompositePathInvokeResponseArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) [][]CompositePathInvokeResponse {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathInvokeResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyInvokeResponsePtrOutput) ExcludedPaths() ExcludedPathInvokeResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) []ExcludedPathInvokeResponse {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathInvokeResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyInvokeResponsePtrOutput) IncludedPaths() IncludedPathInvokeResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) []IncludedPathInvokeResponse {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathInvokeResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyInvokeResponsePtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyInvokeResponsePtrOutput) SpatialIndexes() SpatialSpecInvokeResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyInvokeResponse) []SpatialSpecInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecInvokeResponseArrayOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyResponse struct {
	// Indicates if the indexing policy is automatic
	Automatic *bool `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes [][]CompositePathResponse `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths []ExcludedPathResponse `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths []IncludedPathResponse `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode *string `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes []SpatialSpecResponse `pulumi:"spatialIndexes"`
}

// IndexingPolicyResponseInput is an input type that accepts IndexingPolicyResponseArgs and IndexingPolicyResponseOutput values.
// You can construct a concrete instance of `IndexingPolicyResponseInput` via:
//
//          IndexingPolicyResponseArgs{...}
type IndexingPolicyResponseInput interface {
	pulumi.Input

	ToIndexingPolicyResponseOutput() IndexingPolicyResponseOutput
	ToIndexingPolicyResponseOutputWithContext(context.Context) IndexingPolicyResponseOutput
}

// Cosmos DB indexing policy
type IndexingPolicyResponseArgs struct {
	// Indicates if the indexing policy is automatic
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of composite path list
	CompositeIndexes CompositePathResponseArrayArrayInput `pulumi:"compositeIndexes"`
	// List of paths to exclude from indexing
	ExcludedPaths ExcludedPathResponseArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing
	IncludedPaths IncludedPathResponseArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// List of spatial specifics
	SpatialIndexes SpatialSpecResponseArrayInput `pulumi:"spatialIndexes"`
}

func (IndexingPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyResponse)(nil)).Elem()
}

func (i IndexingPolicyResponseArgs) ToIndexingPolicyResponseOutput() IndexingPolicyResponseOutput {
	return i.ToIndexingPolicyResponseOutputWithContext(context.Background())
}

func (i IndexingPolicyResponseArgs) ToIndexingPolicyResponseOutputWithContext(ctx context.Context) IndexingPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyResponseOutput)
}

func (i IndexingPolicyResponseArgs) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return i.ToIndexingPolicyResponsePtrOutputWithContext(context.Background())
}

func (i IndexingPolicyResponseArgs) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyResponseOutput).ToIndexingPolicyResponsePtrOutputWithContext(ctx)
}

// IndexingPolicyResponsePtrInput is an input type that accepts IndexingPolicyResponseArgs, IndexingPolicyResponsePtr and IndexingPolicyResponsePtrOutput values.
// You can construct a concrete instance of `IndexingPolicyResponsePtrInput` via:
//
//          IndexingPolicyResponseArgs{...}
//
//  or:
//
//          nil
type IndexingPolicyResponsePtrInput interface {
	pulumi.Input

	ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput
	ToIndexingPolicyResponsePtrOutputWithContext(context.Context) IndexingPolicyResponsePtrOutput
}

type indexingPolicyResponsePtrType IndexingPolicyResponseArgs

func IndexingPolicyResponsePtr(v *IndexingPolicyResponseArgs) IndexingPolicyResponsePtrInput {
	return (*indexingPolicyResponsePtrType)(v)
}

func (*indexingPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyResponse)(nil)).Elem()
}

func (i *indexingPolicyResponsePtrType) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return i.ToIndexingPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *indexingPolicyResponsePtrType) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingPolicyResponsePtrOutput)
}

// Cosmos DB indexing policy
type IndexingPolicyResponseOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutput() IndexingPolicyResponseOutput {
	return o
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponseOutputWithContext(ctx context.Context) IndexingPolicyResponseOutput {
	return o
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return o.ToIndexingPolicyResponsePtrOutputWithContext(context.Background())
}

func (o IndexingPolicyResponseOutput) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *IndexingPolicyResponse {
		return &v
	}).(IndexingPolicyResponsePtrOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponseOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponseOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) [][]CompositePathResponse { return v.CompositeIndexes }).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponseOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []ExcludedPathResponse { return v.ExcludedPaths }).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponseOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []IncludedPathResponse { return v.IncludedPaths }).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponseOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponseOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v IndexingPolicyResponse) []SpatialSpecResponse { return v.SpatialIndexes }).(SpatialSpecResponseArrayOutput)
}

type IndexingPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (IndexingPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingPolicyResponse)(nil)).Elem()
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutput() IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) ToIndexingPolicyResponsePtrOutputWithContext(ctx context.Context) IndexingPolicyResponsePtrOutput {
	return o
}

func (o IndexingPolicyResponsePtrOutput) Elem() IndexingPolicyResponseOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) IndexingPolicyResponse { return *v }).(IndexingPolicyResponseOutput)
}

// Indicates if the indexing policy is automatic
func (o IndexingPolicyResponsePtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// List of composite path list
func (o IndexingPolicyResponsePtrOutput) CompositeIndexes() CompositePathResponseArrayArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) [][]CompositePathResponse {
		if v == nil {
			return nil
		}
		return v.CompositeIndexes
	}).(CompositePathResponseArrayArrayOutput)
}

// List of paths to exclude from indexing
func (o IndexingPolicyResponsePtrOutput) ExcludedPaths() ExcludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []ExcludedPathResponse {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(ExcludedPathResponseArrayOutput)
}

// List of paths to include in the indexing
func (o IndexingPolicyResponsePtrOutput) IncludedPaths() IncludedPathResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []IncludedPathResponse {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(IncludedPathResponseArrayOutput)
}

// Indicates the indexing mode.
func (o IndexingPolicyResponsePtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// List of spatial specifics
func (o IndexingPolicyResponsePtrOutput) SpatialIndexes() SpatialSpecResponseArrayOutput {
	return o.ApplyT(func(v *IndexingPolicyResponse) []SpatialSpecResponse {
		if v == nil {
			return nil
		}
		return v.SpatialIndexes
	}).(SpatialSpecResponseArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type Location struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
}

// LocationInput is an input type that accepts LocationArgs and LocationOutput values.
// You can construct a concrete instance of `LocationInput` via:
//
//          LocationArgs{...}
type LocationInput interface {
	pulumi.Input

	ToLocationOutput() LocationOutput
	ToLocationOutputWithContext(context.Context) LocationOutput
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationArgs struct {
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant pulumi.BoolPtrInput `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
}

func (LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Location)(nil)).Elem()
}

func (i LocationArgs) ToLocationOutput() LocationOutput {
	return i.ToLocationOutputWithContext(context.Background())
}

func (i LocationArgs) ToLocationOutputWithContext(ctx context.Context) LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationOutput)
}

// LocationArrayInput is an input type that accepts LocationArray and LocationArrayOutput values.
// You can construct a concrete instance of `LocationArrayInput` via:
//
//          LocationArray{ LocationArgs{...} }
type LocationArrayInput interface {
	pulumi.Input

	ToLocationArrayOutput() LocationArrayOutput
	ToLocationArrayOutputWithContext(context.Context) LocationArrayOutput
}

type LocationArray []LocationInput

func (LocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Location)(nil)).Elem()
}

func (i LocationArray) ToLocationArrayOutput() LocationArrayOutput {
	return i.ToLocationArrayOutputWithContext(context.Background())
}

func (i LocationArray) ToLocationArrayOutputWithContext(ctx context.Context) LocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationOutput struct{ *pulumi.OutputState }

func (LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Location)(nil)).Elem()
}

func (o LocationOutput) ToLocationOutput() LocationOutput {
	return o
}

func (o LocationOutput) ToLocationOutputWithContext(ctx context.Context) LocationOutput {
	return o
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Location) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Location) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Location) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

type LocationArrayOutput struct{ *pulumi.OutputState }

func (LocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Location)(nil)).Elem()
}

func (o LocationArrayOutput) ToLocationArrayOutput() LocationArrayOutput {
	return o
}

func (o LocationArrayOutput) ToLocationArrayOutputWithContext(ctx context.Context) LocationArrayOutput {
	return o
}

func (o LocationArrayOutput) Index(i pulumi.IntInput) LocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Location {
		return vs[0].([]Location)[vs[1].(int)]
	}).(LocationOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationInvokeResponse struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint string `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// LocationInvokeResponseInput is an input type that accepts LocationInvokeResponseArgs and LocationInvokeResponseOutput values.
// You can construct a concrete instance of `LocationInvokeResponseInput` via:
//
//          LocationInvokeResponseArgs{...}
type LocationInvokeResponseInput interface {
	pulumi.Input

	ToLocationInvokeResponseOutput() LocationInvokeResponseOutput
	ToLocationInvokeResponseOutputWithContext(context.Context) LocationInvokeResponseOutput
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationInvokeResponseArgs struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint pulumi.StringInput `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id pulumi.StringInput `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant pulumi.BoolPtrInput `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (LocationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationInvokeResponse)(nil)).Elem()
}

func (i LocationInvokeResponseArgs) ToLocationInvokeResponseOutput() LocationInvokeResponseOutput {
	return i.ToLocationInvokeResponseOutputWithContext(context.Background())
}

func (i LocationInvokeResponseArgs) ToLocationInvokeResponseOutputWithContext(ctx context.Context) LocationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationInvokeResponseOutput)
}

// LocationInvokeResponseArrayInput is an input type that accepts LocationInvokeResponseArray and LocationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LocationInvokeResponseArrayInput` via:
//
//          LocationInvokeResponseArray{ LocationInvokeResponseArgs{...} }
type LocationInvokeResponseArrayInput interface {
	pulumi.Input

	ToLocationInvokeResponseArrayOutput() LocationInvokeResponseArrayOutput
	ToLocationInvokeResponseArrayOutputWithContext(context.Context) LocationInvokeResponseArrayOutput
}

type LocationInvokeResponseArray []LocationInvokeResponseInput

func (LocationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationInvokeResponse)(nil)).Elem()
}

func (i LocationInvokeResponseArray) ToLocationInvokeResponseArrayOutput() LocationInvokeResponseArrayOutput {
	return i.ToLocationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LocationInvokeResponseArray) ToLocationInvokeResponseArrayOutputWithContext(ctx context.Context) LocationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationInvokeResponseArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationInvokeResponseOutput struct{ *pulumi.OutputState }

func (LocationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationInvokeResponse)(nil)).Elem()
}

func (o LocationInvokeResponseOutput) ToLocationInvokeResponseOutput() LocationInvokeResponseOutput {
	return o
}

func (o LocationInvokeResponseOutput) ToLocationInvokeResponseOutputWithContext(ctx context.Context) LocationInvokeResponseOutput {
	return o
}

// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
func (o LocationInvokeResponseOutput) DocumentEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LocationInvokeResponse) string { return v.DocumentEndpoint }).(pulumi.StringOutput)
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationInvokeResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocationInvokeResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o LocationInvokeResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LocationInvokeResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationInvokeResponseOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LocationInvokeResponse) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationInvokeResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationInvokeResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
func (o LocationInvokeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocationInvokeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type LocationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LocationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationInvokeResponse)(nil)).Elem()
}

func (o LocationInvokeResponseArrayOutput) ToLocationInvokeResponseArrayOutput() LocationInvokeResponseArrayOutput {
	return o
}

func (o LocationInvokeResponseArrayOutput) ToLocationInvokeResponseArrayOutputWithContext(ctx context.Context) LocationInvokeResponseArrayOutput {
	return o
}

func (o LocationInvokeResponseArrayOutput) Index(i pulumi.IntInput) LocationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationInvokeResponse {
		return vs[0].([]LocationInvokeResponse)[vs[1].(int)]
	}).(LocationInvokeResponseOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponse struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint string `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority *int `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id string `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant *bool `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName *string `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState string `pulumi:"provisioningState"`
}

// LocationResponseInput is an input type that accepts LocationResponseArgs and LocationResponseOutput values.
// You can construct a concrete instance of `LocationResponseInput` via:
//
//          LocationResponseArgs{...}
type LocationResponseInput interface {
	pulumi.Input

	ToLocationResponseOutput() LocationResponseOutput
	ToLocationResponseOutputWithContext(context.Context) LocationResponseOutput
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponseArgs struct {
	// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
	DocumentEndpoint pulumi.StringInput `pulumi:"documentEndpoint"`
	// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
	FailoverPriority pulumi.IntPtrInput `pulumi:"failoverPriority"`
	// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
	Id pulumi.StringInput `pulumi:"id"`
	// Flag to indicate whether or not this region is an AvailabilityZone region
	IsZoneRedundant pulumi.BoolPtrInput `pulumi:"isZoneRedundant"`
	// The name of the region.
	LocationName pulumi.StringPtrInput `pulumi:"locationName"`
	// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (LocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationResponse)(nil)).Elem()
}

func (i LocationResponseArgs) ToLocationResponseOutput() LocationResponseOutput {
	return i.ToLocationResponseOutputWithContext(context.Background())
}

func (i LocationResponseArgs) ToLocationResponseOutputWithContext(ctx context.Context) LocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationResponseOutput)
}

// LocationResponseArrayInput is an input type that accepts LocationResponseArray and LocationResponseArrayOutput values.
// You can construct a concrete instance of `LocationResponseArrayInput` via:
//
//          LocationResponseArray{ LocationResponseArgs{...} }
type LocationResponseArrayInput interface {
	pulumi.Input

	ToLocationResponseArrayOutput() LocationResponseArrayOutput
	ToLocationResponseArrayOutputWithContext(context.Context) LocationResponseArrayOutput
}

type LocationResponseArray []LocationResponseInput

func (LocationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationResponse)(nil)).Elem()
}

func (i LocationResponseArray) ToLocationResponseArrayOutput() LocationResponseArrayOutput {
	return i.ToLocationResponseArrayOutputWithContext(context.Background())
}

func (i LocationResponseArray) ToLocationResponseArrayOutputWithContext(ctx context.Context) LocationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationResponseArrayOutput)
}

// A region in which the Azure Cosmos DB database account is deployed.
type LocationResponseOutput struct{ *pulumi.OutputState }

func (LocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocationResponse)(nil)).Elem()
}

func (o LocationResponseOutput) ToLocationResponseOutput() LocationResponseOutput {
	return o
}

func (o LocationResponseOutput) ToLocationResponseOutputWithContext(ctx context.Context) LocationResponseOutput {
	return o
}

// The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
func (o LocationResponseOutput) DocumentEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.DocumentEndpoint }).(pulumi.StringOutput)
}

// The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
func (o LocationResponseOutput) FailoverPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LocationResponse) *int { return v.FailoverPriority }).(pulumi.IntPtrOutput)
}

// The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
func (o LocationResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Flag to indicate whether or not this region is an AvailabilityZone region
func (o LocationResponseOutput) IsZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LocationResponse) *bool { return v.IsZoneRedundant }).(pulumi.BoolPtrOutput)
}

// The name of the region.
func (o LocationResponseOutput) LocationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocationResponse) *string { return v.LocationName }).(pulumi.StringPtrOutput)
}

// The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'Offline' - the Cosmos DB account is not active. 'DeletionFailed' – the Cosmos DB account deletion failed.
func (o LocationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type LocationResponseArrayOutput struct{ *pulumi.OutputState }

func (LocationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocationResponse)(nil)).Elem()
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutput() LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) ToLocationResponseArrayOutputWithContext(ctx context.Context) LocationResponseArrayOutput {
	return o
}

func (o LocationResponseArrayOutput) Index(i pulumi.IntInput) LocationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocationResponse {
		return vs[0].([]LocationResponse)[vs[1].(int)]
	}).(LocationResponseOutput)
}

type MongoDBCollectionGetPropertiesInvokeResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndexInvokeResponse `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// MongoDBCollectionGetPropertiesInvokeResponseResourceInput is an input type that accepts MongoDBCollectionGetPropertiesInvokeResponseResourceArgs and MongoDBCollectionGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `MongoDBCollectionGetPropertiesInvokeResponseResourceInput` via:
//
//          MongoDBCollectionGetPropertiesInvokeResponseResourceArgs{...}
type MongoDBCollectionGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutput() MongoDBCollectionGetPropertiesInvokeResponseResourceOutput
	ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) MongoDBCollectionGetPropertiesInvokeResponseResourceOutput
}

type MongoDBCollectionGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id pulumi.StringInput `pulumi:"id"`
	// List of index keys
	Indexes MongoIndexInvokeResponseArrayInput `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey pulumi.StringMapInput `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (MongoDBCollectionGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i MongoDBCollectionGetPropertiesInvokeResponseResourceArgs) ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutput() MongoDBCollectionGetPropertiesInvokeResponseResourceOutput {
	return i.ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i MongoDBCollectionGetPropertiesInvokeResponseResourceArgs) ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionGetPropertiesInvokeResponseResourceOutput)
}

type MongoDBCollectionGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutput() MongoDBCollectionGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) ToMongoDBCollectionGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) Indexes() MongoIndexInvokeResponseArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) []MongoIndexInvokeResponse {
		return v.Indexes
	}).(MongoIndexInvokeResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type MongoDBCollectionGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndexResponse `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// MongoDBCollectionGetPropertiesResponseResourceInput is an input type that accepts MongoDBCollectionGetPropertiesResponseResourceArgs and MongoDBCollectionGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `MongoDBCollectionGetPropertiesResponseResourceInput` via:
//
//          MongoDBCollectionGetPropertiesResponseResourceArgs{...}
type MongoDBCollectionGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToMongoDBCollectionGetPropertiesResponseResourceOutput() MongoDBCollectionGetPropertiesResponseResourceOutput
	ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(context.Context) MongoDBCollectionGetPropertiesResponseResourceOutput
}

type MongoDBCollectionGetPropertiesResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB collection
	Id pulumi.StringInput `pulumi:"id"`
	// List of index keys
	Indexes MongoIndexResponseArrayInput `pulumi:"indexes"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey pulumi.StringMapInput `pulumi:"shardKey"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (MongoDBCollectionGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (i MongoDBCollectionGetPropertiesResponseResourceArgs) ToMongoDBCollectionGetPropertiesResponseResourceOutput() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return i.ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i MongoDBCollectionGetPropertiesResponseResourceArgs) ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionGetPropertiesResponseResourceOutput)
}

func (i MongoDBCollectionGetPropertiesResponseResourceArgs) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return i.ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBCollectionGetPropertiesResponseResourceArgs) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionGetPropertiesResponseResourceOutput).ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// MongoDBCollectionGetPropertiesResponseResourcePtrInput is an input type that accepts MongoDBCollectionGetPropertiesResponseResourceArgs, MongoDBCollectionGetPropertiesResponseResourcePtr and MongoDBCollectionGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBCollectionGetPropertiesResponseResourcePtrInput` via:
//
//          MongoDBCollectionGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBCollectionGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput
	ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput
}

type mongoDBCollectionGetPropertiesResponseResourcePtrType MongoDBCollectionGetPropertiesResponseResourceArgs

func MongoDBCollectionGetPropertiesResponseResourcePtr(v *MongoDBCollectionGetPropertiesResponseResourceArgs) MongoDBCollectionGetPropertiesResponseResourcePtrInput {
	return (*mongoDBCollectionGetPropertiesResponseResourcePtrType)(v)
}

func (*mongoDBCollectionGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (i *mongoDBCollectionGetPropertiesResponseResourcePtrType) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return i.ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBCollectionGetPropertiesResponseResourcePtrType) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionGetPropertiesResponseResourcePtrOutput)
}

type MongoDBCollectionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutput() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o.ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) *MongoDBCollectionGetPropertiesResponseResource {
		return &v
	}).(MongoDBCollectionGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse { return v.Indexes }).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDBCollectionGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type MongoDBCollectionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutput() MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ToMongoDBCollectionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Elem() MongoDBCollectionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) MongoDBCollectionGetPropertiesResponseResource {
		return *v
	}).(MongoDBCollectionGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// List of index keys
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Indexes() MongoIndexResponseArrayOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) []MongoIndexResponse {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(MongoIndexResponseArrayOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) map[string]string {
		if v == nil {
			return nil
		}
		return v.ShardKey
	}).(pulumi.StringMapOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBCollectionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *MongoDBCollectionGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResource struct {
	// Name of the Cosmos DB MongoDB collection
	Id string `pulumi:"id"`
	// List of index keys
	Indexes []MongoIndex `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey map[string]string `pulumi:"shardKey"`
}

// MongoDBCollectionResourceInput is an input type that accepts MongoDBCollectionResourceArgs and MongoDBCollectionResourceOutput values.
// You can construct a concrete instance of `MongoDBCollectionResourceInput` via:
//
//          MongoDBCollectionResourceArgs{...}
type MongoDBCollectionResourceInput interface {
	pulumi.Input

	ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput
	ToMongoDBCollectionResourceOutputWithContext(context.Context) MongoDBCollectionResourceOutput
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResourceArgs struct {
	// Name of the Cosmos DB MongoDB collection
	Id pulumi.StringInput `pulumi:"id"`
	// List of index keys
	Indexes MongoIndexArrayInput `pulumi:"indexes"`
	// A key-value pair of shard keys to be applied for the request.
	ShardKey pulumi.StringMapInput `pulumi:"shardKey"`
}

func (MongoDBCollectionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionResource)(nil)).Elem()
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput {
	return i.ToMongoDBCollectionResourceOutputWithContext(context.Background())
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourceOutputWithContext(ctx context.Context) MongoDBCollectionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourceOutput)
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return i.ToMongoDBCollectionResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBCollectionResourceArgs) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourceOutput).ToMongoDBCollectionResourcePtrOutputWithContext(ctx)
}

// MongoDBCollectionResourcePtrInput is an input type that accepts MongoDBCollectionResourceArgs, MongoDBCollectionResourcePtr and MongoDBCollectionResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBCollectionResourcePtrInput` via:
//
//          MongoDBCollectionResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBCollectionResourcePtrInput interface {
	pulumi.Input

	ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput
	ToMongoDBCollectionResourcePtrOutputWithContext(context.Context) MongoDBCollectionResourcePtrOutput
}

type mongoDBCollectionResourcePtrType MongoDBCollectionResourceArgs

func MongoDBCollectionResourcePtr(v *MongoDBCollectionResourceArgs) MongoDBCollectionResourcePtrInput {
	return (*mongoDBCollectionResourcePtrType)(v)
}

func (*mongoDBCollectionResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionResource)(nil)).Elem()
}

func (i *mongoDBCollectionResourcePtrType) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return i.ToMongoDBCollectionResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBCollectionResourcePtrType) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBCollectionResourcePtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoDBCollectionResourceOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBCollectionResource)(nil)).Elem()
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourceOutput() MongoDBCollectionResourceOutput {
	return o
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourceOutputWithContext(ctx context.Context) MongoDBCollectionResourceOutput {
	return o
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return o.ToMongoDBCollectionResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBCollectionResourceOutput) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) *MongoDBCollectionResource {
		return &v
	}).(MongoDBCollectionResourcePtrOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) string { return v.Id }).(pulumi.StringOutput)
}

// List of index keys
func (o MongoDBCollectionResourceOutput) Indexes() MongoIndexArrayOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) []MongoIndex { return v.Indexes }).(MongoIndexArrayOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionResourceOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v MongoDBCollectionResource) map[string]string { return v.ShardKey }).(pulumi.StringMapOutput)
}

type MongoDBCollectionResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBCollectionResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBCollectionResource)(nil)).Elem()
}

func (o MongoDBCollectionResourcePtrOutput) ToMongoDBCollectionResourcePtrOutput() MongoDBCollectionResourcePtrOutput {
	return o
}

func (o MongoDBCollectionResourcePtrOutput) ToMongoDBCollectionResourcePtrOutputWithContext(ctx context.Context) MongoDBCollectionResourcePtrOutput {
	return o
}

func (o MongoDBCollectionResourcePtrOutput) Elem() MongoDBCollectionResourceOutput {
	return o.ApplyT(func(v *MongoDBCollectionResource) MongoDBCollectionResource { return *v }).(MongoDBCollectionResourceOutput)
}

// Name of the Cosmos DB MongoDB collection
func (o MongoDBCollectionResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBCollectionResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// List of index keys
func (o MongoDBCollectionResourcePtrOutput) Indexes() MongoIndexArrayOutput {
	return o.ApplyT(func(v *MongoDBCollectionResource) []MongoIndex {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(MongoIndexArrayOutput)
}

// A key-value pair of shard keys to be applied for the request.
func (o MongoDBCollectionResourcePtrOutput) ShardKey() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MongoDBCollectionResource) map[string]string {
		if v == nil {
			return nil
		}
		return v.ShardKey
	}).(pulumi.StringMapOutput)
}

type MongoDBDatabaseGetPropertiesInvokeResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// MongoDBDatabaseGetPropertiesInvokeResponseResourceInput is an input type that accepts MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs and MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `MongoDBDatabaseGetPropertiesInvokeResponseResourceInput` via:
//
//          MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs{...}
type MongoDBDatabaseGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutput() MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput
	ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput
}

type MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs) ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutput() MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput {
	return i.ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i MongoDBDatabaseGetPropertiesInvokeResponseResourceArgs) ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput)
}

type MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutput() MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) ToMongoDBDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type MongoDBDatabaseGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// MongoDBDatabaseGetPropertiesResponseResourceInput is an input type that accepts MongoDBDatabaseGetPropertiesResponseResourceArgs and MongoDBDatabaseGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `MongoDBDatabaseGetPropertiesResponseResourceInput` via:
//
//          MongoDBDatabaseGetPropertiesResponseResourceArgs{...}
type MongoDBDatabaseGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToMongoDBDatabaseGetPropertiesResponseResourceOutput() MongoDBDatabaseGetPropertiesResponseResourceOutput
	ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(context.Context) MongoDBDatabaseGetPropertiesResponseResourceOutput
}

type MongoDBDatabaseGetPropertiesResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB MongoDB database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (MongoDBDatabaseGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i MongoDBDatabaseGetPropertiesResponseResourceArgs) ToMongoDBDatabaseGetPropertiesResponseResourceOutput() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return i.ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i MongoDBDatabaseGetPropertiesResponseResourceArgs) ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseGetPropertiesResponseResourceOutput)
}

func (i MongoDBDatabaseGetPropertiesResponseResourceArgs) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBDatabaseGetPropertiesResponseResourceArgs) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseGetPropertiesResponseResourceOutput).ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// MongoDBDatabaseGetPropertiesResponseResourcePtrInput is an input type that accepts MongoDBDatabaseGetPropertiesResponseResourceArgs, MongoDBDatabaseGetPropertiesResponseResourcePtr and MongoDBDatabaseGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBDatabaseGetPropertiesResponseResourcePtrInput` via:
//
//          MongoDBDatabaseGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBDatabaseGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput
	ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput
}

type mongoDBDatabaseGetPropertiesResponseResourcePtrType MongoDBDatabaseGetPropertiesResponseResourceArgs

func MongoDBDatabaseGetPropertiesResponseResourcePtr(v *MongoDBDatabaseGetPropertiesResponseResourceArgs) MongoDBDatabaseGetPropertiesResponseResourcePtrInput {
	return (*mongoDBDatabaseGetPropertiesResponseResourcePtrType)(v)
}

func (*mongoDBDatabaseGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i *mongoDBDatabaseGetPropertiesResponseResourcePtrType) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBDatabaseGetPropertiesResponseResourcePtrType) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput)
}

type MongoDBDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutput() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) *MongoDBDatabaseGetPropertiesResponseResource {
		return &v
	}).(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v MongoDBDatabaseGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type MongoDBDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutput() MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) ToMongoDBDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Elem() MongoDBDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) MongoDBDatabaseGetPropertiesResponseResource {
		return *v
	}).(MongoDBDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o MongoDBDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *MongoDBDatabaseGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResource struct {
	// Name of the Cosmos DB MongoDB database
	Id string `pulumi:"id"`
}

// MongoDBDatabaseResourceInput is an input type that accepts MongoDBDatabaseResourceArgs and MongoDBDatabaseResourceOutput values.
// You can construct a concrete instance of `MongoDBDatabaseResourceInput` via:
//
//          MongoDBDatabaseResourceArgs{...}
type MongoDBDatabaseResourceInput interface {
	pulumi.Input

	ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput
	ToMongoDBDatabaseResourceOutputWithContext(context.Context) MongoDBDatabaseResourceOutput
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResourceArgs struct {
	// Name of the Cosmos DB MongoDB database
	Id pulumi.StringInput `pulumi:"id"`
}

func (MongoDBDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseResource)(nil)).Elem()
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput {
	return i.ToMongoDBDatabaseResourceOutputWithContext(context.Background())
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourceOutput)
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return i.ToMongoDBDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i MongoDBDatabaseResourceArgs) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourceOutput).ToMongoDBDatabaseResourcePtrOutputWithContext(ctx)
}

// MongoDBDatabaseResourcePtrInput is an input type that accepts MongoDBDatabaseResourceArgs, MongoDBDatabaseResourcePtr and MongoDBDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `MongoDBDatabaseResourcePtrInput` via:
//
//          MongoDBDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type MongoDBDatabaseResourcePtrInput interface {
	pulumi.Input

	ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput
	ToMongoDBDatabaseResourcePtrOutputWithContext(context.Context) MongoDBDatabaseResourcePtrOutput
}

type mongoDBDatabaseResourcePtrType MongoDBDatabaseResourceArgs

func MongoDBDatabaseResourcePtr(v *MongoDBDatabaseResourceArgs) MongoDBDatabaseResourcePtrInput {
	return (*mongoDBDatabaseResourcePtrType)(v)
}

func (*mongoDBDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseResource)(nil)).Elem()
}

func (i *mongoDBDatabaseResourcePtrType) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return i.ToMongoDBDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *mongoDBDatabaseResourcePtrType) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDBDatabaseResourcePtrOutput)
}

// Cosmos DB MongoDB database resource object
type MongoDBDatabaseResourceOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDBDatabaseResource)(nil)).Elem()
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourceOutput() MongoDBDatabaseResourceOutput {
	return o
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourceOutputWithContext(ctx context.Context) MongoDBDatabaseResourceOutput {
	return o
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return o.ToMongoDBDatabaseResourcePtrOutputWithContext(context.Background())
}

func (o MongoDBDatabaseResourceOutput) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return o.ApplyT(func(v MongoDBDatabaseResource) *MongoDBDatabaseResource {
		return &v
	}).(MongoDBDatabaseResourcePtrOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MongoDBDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

type MongoDBDatabaseResourcePtrOutput struct{ *pulumi.OutputState }

func (MongoDBDatabaseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDBDatabaseResource)(nil)).Elem()
}

func (o MongoDBDatabaseResourcePtrOutput) ToMongoDBDatabaseResourcePtrOutput() MongoDBDatabaseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseResourcePtrOutput) ToMongoDBDatabaseResourcePtrOutputWithContext(ctx context.Context) MongoDBDatabaseResourcePtrOutput {
	return o
}

func (o MongoDBDatabaseResourcePtrOutput) Elem() MongoDBDatabaseResourceOutput {
	return o.ApplyT(func(v *MongoDBDatabaseResource) MongoDBDatabaseResource { return *v }).(MongoDBDatabaseResourceOutput)
}

// Name of the Cosmos DB MongoDB database
func (o MongoDBDatabaseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MongoDBDatabaseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndex struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeys `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptions `pulumi:"options"`
}

// MongoIndexInput is an input type that accepts MongoIndexArgs and MongoIndexOutput values.
// You can construct a concrete instance of `MongoIndexInput` via:
//
//          MongoIndexArgs{...}
type MongoIndexInput interface {
	pulumi.Input

	ToMongoIndexOutput() MongoIndexOutput
	ToMongoIndexOutputWithContext(context.Context) MongoIndexOutput
}

// Cosmos DB MongoDB collection index key
type MongoIndexArgs struct {
	// Cosmos DB MongoDB collection index keys
	Key MongoIndexKeysPtrInput `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options MongoIndexOptionsPtrInput `pulumi:"options"`
}

func (MongoIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndex)(nil)).Elem()
}

func (i MongoIndexArgs) ToMongoIndexOutput() MongoIndexOutput {
	return i.ToMongoIndexOutputWithContext(context.Background())
}

func (i MongoIndexArgs) ToMongoIndexOutputWithContext(ctx context.Context) MongoIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOutput)
}

// MongoIndexArrayInput is an input type that accepts MongoIndexArray and MongoIndexArrayOutput values.
// You can construct a concrete instance of `MongoIndexArrayInput` via:
//
//          MongoIndexArray{ MongoIndexArgs{...} }
type MongoIndexArrayInput interface {
	pulumi.Input

	ToMongoIndexArrayOutput() MongoIndexArrayOutput
	ToMongoIndexArrayOutputWithContext(context.Context) MongoIndexArrayOutput
}

type MongoIndexArray []MongoIndexInput

func (MongoIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndex)(nil)).Elem()
}

func (i MongoIndexArray) ToMongoIndexArrayOutput() MongoIndexArrayOutput {
	return i.ToMongoIndexArrayOutputWithContext(context.Background())
}

func (i MongoIndexArray) ToMongoIndexArrayOutputWithContext(ctx context.Context) MongoIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexArrayOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexOutput struct{ *pulumi.OutputState }

func (MongoIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndex)(nil)).Elem()
}

func (o MongoIndexOutput) ToMongoIndexOutput() MongoIndexOutput {
	return o
}

func (o MongoIndexOutput) ToMongoIndexOutputWithContext(ctx context.Context) MongoIndexOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexOutput) Key() MongoIndexKeysPtrOutput {
	return o.ApplyT(func(v MongoIndex) *MongoIndexKeys { return v.Key }).(MongoIndexKeysPtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexOutput) Options() MongoIndexOptionsPtrOutput {
	return o.ApplyT(func(v MongoIndex) *MongoIndexOptions { return v.Options }).(MongoIndexOptionsPtrOutput)
}

type MongoIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndex)(nil)).Elem()
}

func (o MongoIndexArrayOutput) ToMongoIndexArrayOutput() MongoIndexArrayOutput {
	return o
}

func (o MongoIndexArrayOutput) ToMongoIndexArrayOutputWithContext(ctx context.Context) MongoIndexArrayOutput {
	return o
}

func (o MongoIndexArrayOutput) Index(i pulumi.IntInput) MongoIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndex {
		return vs[0].([]MongoIndex)[vs[1].(int)]
	}).(MongoIndexOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexInvokeResponse struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeysInvokeResponse `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptionsInvokeResponse `pulumi:"options"`
}

// MongoIndexInvokeResponseInput is an input type that accepts MongoIndexInvokeResponseArgs and MongoIndexInvokeResponseOutput values.
// You can construct a concrete instance of `MongoIndexInvokeResponseInput` via:
//
//          MongoIndexInvokeResponseArgs{...}
type MongoIndexInvokeResponseInput interface {
	pulumi.Input

	ToMongoIndexInvokeResponseOutput() MongoIndexInvokeResponseOutput
	ToMongoIndexInvokeResponseOutputWithContext(context.Context) MongoIndexInvokeResponseOutput
}

// Cosmos DB MongoDB collection index key
type MongoIndexInvokeResponseArgs struct {
	// Cosmos DB MongoDB collection index keys
	Key MongoIndexKeysInvokeResponsePtrInput `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options MongoIndexOptionsInvokeResponsePtrInput `pulumi:"options"`
}

func (MongoIndexInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexInvokeResponse)(nil)).Elem()
}

func (i MongoIndexInvokeResponseArgs) ToMongoIndexInvokeResponseOutput() MongoIndexInvokeResponseOutput {
	return i.ToMongoIndexInvokeResponseOutputWithContext(context.Background())
}

func (i MongoIndexInvokeResponseArgs) ToMongoIndexInvokeResponseOutputWithContext(ctx context.Context) MongoIndexInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexInvokeResponseOutput)
}

// MongoIndexInvokeResponseArrayInput is an input type that accepts MongoIndexInvokeResponseArray and MongoIndexInvokeResponseArrayOutput values.
// You can construct a concrete instance of `MongoIndexInvokeResponseArrayInput` via:
//
//          MongoIndexInvokeResponseArray{ MongoIndexInvokeResponseArgs{...} }
type MongoIndexInvokeResponseArrayInput interface {
	pulumi.Input

	ToMongoIndexInvokeResponseArrayOutput() MongoIndexInvokeResponseArrayOutput
	ToMongoIndexInvokeResponseArrayOutputWithContext(context.Context) MongoIndexInvokeResponseArrayOutput
}

type MongoIndexInvokeResponseArray []MongoIndexInvokeResponseInput

func (MongoIndexInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexInvokeResponse)(nil)).Elem()
}

func (i MongoIndexInvokeResponseArray) ToMongoIndexInvokeResponseArrayOutput() MongoIndexInvokeResponseArrayOutput {
	return i.ToMongoIndexInvokeResponseArrayOutputWithContext(context.Background())
}

func (i MongoIndexInvokeResponseArray) ToMongoIndexInvokeResponseArrayOutputWithContext(ctx context.Context) MongoIndexInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexInvokeResponseArrayOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexInvokeResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexInvokeResponse)(nil)).Elem()
}

func (o MongoIndexInvokeResponseOutput) ToMongoIndexInvokeResponseOutput() MongoIndexInvokeResponseOutput {
	return o
}

func (o MongoIndexInvokeResponseOutput) ToMongoIndexInvokeResponseOutputWithContext(ctx context.Context) MongoIndexInvokeResponseOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexInvokeResponseOutput) Key() MongoIndexKeysInvokeResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexInvokeResponse) *MongoIndexKeysInvokeResponse { return v.Key }).(MongoIndexKeysInvokeResponsePtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexInvokeResponseOutput) Options() MongoIndexOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexInvokeResponse) *MongoIndexOptionsInvokeResponse { return v.Options }).(MongoIndexOptionsInvokeResponsePtrOutput)
}

type MongoIndexInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexInvokeResponse)(nil)).Elem()
}

func (o MongoIndexInvokeResponseArrayOutput) ToMongoIndexInvokeResponseArrayOutput() MongoIndexInvokeResponseArrayOutput {
	return o
}

func (o MongoIndexInvokeResponseArrayOutput) ToMongoIndexInvokeResponseArrayOutputWithContext(ctx context.Context) MongoIndexInvokeResponseArrayOutput {
	return o
}

func (o MongoIndexInvokeResponseArrayOutput) Index(i pulumi.IntInput) MongoIndexInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndexInvokeResponse {
		return vs[0].([]MongoIndexInvokeResponse)[vs[1].(int)]
	}).(MongoIndexInvokeResponseOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeys struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// MongoIndexKeysInput is an input type that accepts MongoIndexKeysArgs and MongoIndexKeysOutput values.
// You can construct a concrete instance of `MongoIndexKeysInput` via:
//
//          MongoIndexKeysArgs{...}
type MongoIndexKeysInput interface {
	pulumi.Input

	ToMongoIndexKeysOutput() MongoIndexKeysOutput
	ToMongoIndexKeysOutputWithContext(context.Context) MongoIndexKeysOutput
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysArgs struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (MongoIndexKeysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeys)(nil)).Elem()
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutput() MongoIndexKeysOutput {
	return i.ToMongoIndexKeysOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysOutputWithContext(ctx context.Context) MongoIndexKeysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput)
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i MongoIndexKeysArgs) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysOutput).ToMongoIndexKeysPtrOutputWithContext(ctx)
}

// MongoIndexKeysPtrInput is an input type that accepts MongoIndexKeysArgs, MongoIndexKeysPtr and MongoIndexKeysPtrOutput values.
// You can construct a concrete instance of `MongoIndexKeysPtrInput` via:
//
//          MongoIndexKeysArgs{...}
//
//  or:
//
//          nil
type MongoIndexKeysPtrInput interface {
	pulumi.Input

	ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput
	ToMongoIndexKeysPtrOutputWithContext(context.Context) MongoIndexKeysPtrOutput
}

type mongoIndexKeysPtrType MongoIndexKeysArgs

func MongoIndexKeysPtr(v *MongoIndexKeysArgs) MongoIndexKeysPtrInput {
	return (*mongoIndexKeysPtrType)(v)
}

func (*mongoIndexKeysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeys)(nil)).Elem()
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return i.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (i *mongoIndexKeysPtrType) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysPtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeys)(nil)).Elem()
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysOutput() MongoIndexKeysOutput {
	return o
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysOutputWithContext(ctx context.Context) MongoIndexKeysOutput {
	return o
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return o.ToMongoIndexKeysPtrOutputWithContext(context.Background())
}

func (o MongoIndexKeysOutput) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return o.ApplyT(func(v MongoIndexKeys) *MongoIndexKeys {
		return &v
	}).(MongoIndexKeysPtrOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeys) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysPtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeys)(nil)).Elem()
}

func (o MongoIndexKeysPtrOutput) ToMongoIndexKeysPtrOutput() MongoIndexKeysPtrOutput {
	return o
}

func (o MongoIndexKeysPtrOutput) ToMongoIndexKeysPtrOutputWithContext(ctx context.Context) MongoIndexKeysPtrOutput {
	return o
}

func (o MongoIndexKeysPtrOutput) Elem() MongoIndexKeysOutput {
	return o.ApplyT(func(v *MongoIndexKeys) MongoIndexKeys { return *v }).(MongoIndexKeysOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeys) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysInvokeResponse struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// MongoIndexKeysInvokeResponseInput is an input type that accepts MongoIndexKeysInvokeResponseArgs and MongoIndexKeysInvokeResponseOutput values.
// You can construct a concrete instance of `MongoIndexKeysInvokeResponseInput` via:
//
//          MongoIndexKeysInvokeResponseArgs{...}
type MongoIndexKeysInvokeResponseInput interface {
	pulumi.Input

	ToMongoIndexKeysInvokeResponseOutput() MongoIndexKeysInvokeResponseOutput
	ToMongoIndexKeysInvokeResponseOutputWithContext(context.Context) MongoIndexKeysInvokeResponseOutput
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysInvokeResponseArgs struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (MongoIndexKeysInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysInvokeResponse)(nil)).Elem()
}

func (i MongoIndexKeysInvokeResponseArgs) ToMongoIndexKeysInvokeResponseOutput() MongoIndexKeysInvokeResponseOutput {
	return i.ToMongoIndexKeysInvokeResponseOutputWithContext(context.Background())
}

func (i MongoIndexKeysInvokeResponseArgs) ToMongoIndexKeysInvokeResponseOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysInvokeResponseOutput)
}

func (i MongoIndexKeysInvokeResponseArgs) ToMongoIndexKeysInvokeResponsePtrOutput() MongoIndexKeysInvokeResponsePtrOutput {
	return i.ToMongoIndexKeysInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MongoIndexKeysInvokeResponseArgs) ToMongoIndexKeysInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysInvokeResponseOutput).ToMongoIndexKeysInvokeResponsePtrOutputWithContext(ctx)
}

// MongoIndexKeysInvokeResponsePtrInput is an input type that accepts MongoIndexKeysInvokeResponseArgs, MongoIndexKeysInvokeResponsePtr and MongoIndexKeysInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MongoIndexKeysInvokeResponsePtrInput` via:
//
//          MongoIndexKeysInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MongoIndexKeysInvokeResponsePtrInput interface {
	pulumi.Input

	ToMongoIndexKeysInvokeResponsePtrOutput() MongoIndexKeysInvokeResponsePtrOutput
	ToMongoIndexKeysInvokeResponsePtrOutputWithContext(context.Context) MongoIndexKeysInvokeResponsePtrOutput
}

type mongoIndexKeysInvokeResponsePtrType MongoIndexKeysInvokeResponseArgs

func MongoIndexKeysInvokeResponsePtr(v *MongoIndexKeysInvokeResponseArgs) MongoIndexKeysInvokeResponsePtrInput {
	return (*mongoIndexKeysInvokeResponsePtrType)(v)
}

func (*mongoIndexKeysInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysInvokeResponse)(nil)).Elem()
}

func (i *mongoIndexKeysInvokeResponsePtrType) ToMongoIndexKeysInvokeResponsePtrOutput() MongoIndexKeysInvokeResponsePtrOutput {
	return i.ToMongoIndexKeysInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *mongoIndexKeysInvokeResponsePtrType) ToMongoIndexKeysInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysInvokeResponsePtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysInvokeResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysInvokeResponse)(nil)).Elem()
}

func (o MongoIndexKeysInvokeResponseOutput) ToMongoIndexKeysInvokeResponseOutput() MongoIndexKeysInvokeResponseOutput {
	return o
}

func (o MongoIndexKeysInvokeResponseOutput) ToMongoIndexKeysInvokeResponseOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponseOutput {
	return o
}

func (o MongoIndexKeysInvokeResponseOutput) ToMongoIndexKeysInvokeResponsePtrOutput() MongoIndexKeysInvokeResponsePtrOutput {
	return o.ToMongoIndexKeysInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexKeysInvokeResponseOutput) ToMongoIndexKeysInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexKeysInvokeResponse) *MongoIndexKeysInvokeResponse {
		return &v
	}).(MongoIndexKeysInvokeResponsePtrOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysInvokeResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeysInvokeResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysInvokeResponse)(nil)).Elem()
}

func (o MongoIndexKeysInvokeResponsePtrOutput) ToMongoIndexKeysInvokeResponsePtrOutput() MongoIndexKeysInvokeResponsePtrOutput {
	return o
}

func (o MongoIndexKeysInvokeResponsePtrOutput) ToMongoIndexKeysInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysInvokeResponsePtrOutput {
	return o
}

func (o MongoIndexKeysInvokeResponsePtrOutput) Elem() MongoIndexKeysInvokeResponseOutput {
	return o.ApplyT(func(v *MongoIndexKeysInvokeResponse) MongoIndexKeysInvokeResponse { return *v }).(MongoIndexKeysInvokeResponseOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysInvokeResponsePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeysInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponse struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys []string `pulumi:"keys"`
}

// MongoIndexKeysResponseInput is an input type that accepts MongoIndexKeysResponseArgs and MongoIndexKeysResponseOutput values.
// You can construct a concrete instance of `MongoIndexKeysResponseInput` via:
//
//          MongoIndexKeysResponseArgs{...}
type MongoIndexKeysResponseInput interface {
	pulumi.Input

	ToMongoIndexKeysResponseOutput() MongoIndexKeysResponseOutput
	ToMongoIndexKeysResponseOutputWithContext(context.Context) MongoIndexKeysResponseOutput
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponseArgs struct {
	// List of keys for each MongoDB collection in the Azure Cosmos DB service
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (MongoIndexKeysResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysResponse)(nil)).Elem()
}

func (i MongoIndexKeysResponseArgs) ToMongoIndexKeysResponseOutput() MongoIndexKeysResponseOutput {
	return i.ToMongoIndexKeysResponseOutputWithContext(context.Background())
}

func (i MongoIndexKeysResponseArgs) ToMongoIndexKeysResponseOutputWithContext(ctx context.Context) MongoIndexKeysResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysResponseOutput)
}

func (i MongoIndexKeysResponseArgs) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return i.ToMongoIndexKeysResponsePtrOutputWithContext(context.Background())
}

func (i MongoIndexKeysResponseArgs) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysResponseOutput).ToMongoIndexKeysResponsePtrOutputWithContext(ctx)
}

// MongoIndexKeysResponsePtrInput is an input type that accepts MongoIndexKeysResponseArgs, MongoIndexKeysResponsePtr and MongoIndexKeysResponsePtrOutput values.
// You can construct a concrete instance of `MongoIndexKeysResponsePtrInput` via:
//
//          MongoIndexKeysResponseArgs{...}
//
//  or:
//
//          nil
type MongoIndexKeysResponsePtrInput interface {
	pulumi.Input

	ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput
	ToMongoIndexKeysResponsePtrOutputWithContext(context.Context) MongoIndexKeysResponsePtrOutput
}

type mongoIndexKeysResponsePtrType MongoIndexKeysResponseArgs

func MongoIndexKeysResponsePtr(v *MongoIndexKeysResponseArgs) MongoIndexKeysResponsePtrInput {
	return (*mongoIndexKeysResponsePtrType)(v)
}

func (*mongoIndexKeysResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysResponse)(nil)).Elem()
}

func (i *mongoIndexKeysResponsePtrType) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return i.ToMongoIndexKeysResponsePtrOutputWithContext(context.Background())
}

func (i *mongoIndexKeysResponsePtrType) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexKeysResponsePtrOutput)
}

// Cosmos DB MongoDB collection resource object
type MongoIndexKeysResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutput() MongoIndexKeysResponseOutput {
	return o
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponseOutputWithContext(ctx context.Context) MongoIndexKeysResponseOutput {
	return o
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return o.ToMongoIndexKeysResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexKeysResponseOutput) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexKeysResponse) *MongoIndexKeysResponse {
		return &v
	}).(MongoIndexKeysResponsePtrOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponseOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoIndexKeysResponse) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type MongoIndexKeysResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexKeysResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexKeysResponse)(nil)).Elem()
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutput() MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) ToMongoIndexKeysResponsePtrOutputWithContext(ctx context.Context) MongoIndexKeysResponsePtrOutput {
	return o
}

func (o MongoIndexKeysResponsePtrOutput) Elem() MongoIndexKeysResponseOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) MongoIndexKeysResponse { return *v }).(MongoIndexKeysResponseOutput)
}

// List of keys for each MongoDB collection in the Azure Cosmos DB service
func (o MongoIndexKeysResponsePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MongoIndexKeysResponse) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptions struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// MongoIndexOptionsInput is an input type that accepts MongoIndexOptionsArgs and MongoIndexOptionsOutput values.
// You can construct a concrete instance of `MongoIndexOptionsInput` via:
//
//          MongoIndexOptionsArgs{...}
type MongoIndexOptionsInput interface {
	pulumi.Input

	ToMongoIndexOptionsOutput() MongoIndexOptionsOutput
	ToMongoIndexOptionsOutputWithContext(context.Context) MongoIndexOptionsOutput
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsArgs struct {
	// Expire after seconds
	ExpireAfterSeconds pulumi.IntPtrInput `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoIndexOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptions)(nil)).Elem()
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutput() MongoIndexOptionsOutput {
	return i.ToMongoIndexOptionsOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsOutputWithContext(ctx context.Context) MongoIndexOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput)
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i MongoIndexOptionsArgs) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsOutput).ToMongoIndexOptionsPtrOutputWithContext(ctx)
}

// MongoIndexOptionsPtrInput is an input type that accepts MongoIndexOptionsArgs, MongoIndexOptionsPtr and MongoIndexOptionsPtrOutput values.
// You can construct a concrete instance of `MongoIndexOptionsPtrInput` via:
//
//          MongoIndexOptionsArgs{...}
//
//  or:
//
//          nil
type MongoIndexOptionsPtrInput interface {
	pulumi.Input

	ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput
	ToMongoIndexOptionsPtrOutputWithContext(context.Context) MongoIndexOptionsPtrOutput
}

type mongoIndexOptionsPtrType MongoIndexOptionsArgs

func MongoIndexOptionsPtr(v *MongoIndexOptionsArgs) MongoIndexOptionsPtrInput {
	return (*mongoIndexOptionsPtrType)(v)
}

func (*mongoIndexOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptions)(nil)).Elem()
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return i.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (i *mongoIndexOptionsPtrType) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptions)(nil)).Elem()
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsOutput() MongoIndexOptionsOutput {
	return o
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsOutputWithContext(ctx context.Context) MongoIndexOptionsOutput {
	return o
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return o.ToMongoIndexOptionsPtrOutputWithContext(context.Background())
}

func (o MongoIndexOptionsOutput) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return o.ApplyT(func(v MongoIndexOptions) *MongoIndexOptions {
		return &v
	}).(MongoIndexOptionsPtrOutput)
}

// Expire after seconds
func (o MongoIndexOptionsOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptions) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptions) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsPtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptions)(nil)).Elem()
}

func (o MongoIndexOptionsPtrOutput) ToMongoIndexOptionsPtrOutput() MongoIndexOptionsPtrOutput {
	return o
}

func (o MongoIndexOptionsPtrOutput) ToMongoIndexOptionsPtrOutputWithContext(ctx context.Context) MongoIndexOptionsPtrOutput {
	return o
}

func (o MongoIndexOptionsPtrOutput) Elem() MongoIndexOptionsOutput {
	return o.ApplyT(func(v *MongoIndexOptions) MongoIndexOptions { return *v }).(MongoIndexOptionsOutput)
}

// Expire after seconds
func (o MongoIndexOptionsPtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptions) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsPtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsInvokeResponse struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// MongoIndexOptionsInvokeResponseInput is an input type that accepts MongoIndexOptionsInvokeResponseArgs and MongoIndexOptionsInvokeResponseOutput values.
// You can construct a concrete instance of `MongoIndexOptionsInvokeResponseInput` via:
//
//          MongoIndexOptionsInvokeResponseArgs{...}
type MongoIndexOptionsInvokeResponseInput interface {
	pulumi.Input

	ToMongoIndexOptionsInvokeResponseOutput() MongoIndexOptionsInvokeResponseOutput
	ToMongoIndexOptionsInvokeResponseOutputWithContext(context.Context) MongoIndexOptionsInvokeResponseOutput
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsInvokeResponseArgs struct {
	// Expire after seconds
	ExpireAfterSeconds pulumi.IntPtrInput `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoIndexOptionsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsInvokeResponse)(nil)).Elem()
}

func (i MongoIndexOptionsInvokeResponseArgs) ToMongoIndexOptionsInvokeResponseOutput() MongoIndexOptionsInvokeResponseOutput {
	return i.ToMongoIndexOptionsInvokeResponseOutputWithContext(context.Background())
}

func (i MongoIndexOptionsInvokeResponseArgs) ToMongoIndexOptionsInvokeResponseOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsInvokeResponseOutput)
}

func (i MongoIndexOptionsInvokeResponseArgs) ToMongoIndexOptionsInvokeResponsePtrOutput() MongoIndexOptionsInvokeResponsePtrOutput {
	return i.ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i MongoIndexOptionsInvokeResponseArgs) ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsInvokeResponseOutput).ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(ctx)
}

// MongoIndexOptionsInvokeResponsePtrInput is an input type that accepts MongoIndexOptionsInvokeResponseArgs, MongoIndexOptionsInvokeResponsePtr and MongoIndexOptionsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `MongoIndexOptionsInvokeResponsePtrInput` via:
//
//          MongoIndexOptionsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type MongoIndexOptionsInvokeResponsePtrInput interface {
	pulumi.Input

	ToMongoIndexOptionsInvokeResponsePtrOutput() MongoIndexOptionsInvokeResponsePtrOutput
	ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(context.Context) MongoIndexOptionsInvokeResponsePtrOutput
}

type mongoIndexOptionsInvokeResponsePtrType MongoIndexOptionsInvokeResponseArgs

func MongoIndexOptionsInvokeResponsePtr(v *MongoIndexOptionsInvokeResponseArgs) MongoIndexOptionsInvokeResponsePtrInput {
	return (*mongoIndexOptionsInvokeResponsePtrType)(v)
}

func (*mongoIndexOptionsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsInvokeResponse)(nil)).Elem()
}

func (i *mongoIndexOptionsInvokeResponsePtrType) ToMongoIndexOptionsInvokeResponsePtrOutput() MongoIndexOptionsInvokeResponsePtrOutput {
	return i.ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *mongoIndexOptionsInvokeResponsePtrType) ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsInvokeResponsePtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsInvokeResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsInvokeResponse)(nil)).Elem()
}

func (o MongoIndexOptionsInvokeResponseOutput) ToMongoIndexOptionsInvokeResponseOutput() MongoIndexOptionsInvokeResponseOutput {
	return o
}

func (o MongoIndexOptionsInvokeResponseOutput) ToMongoIndexOptionsInvokeResponseOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponseOutput {
	return o
}

func (o MongoIndexOptionsInvokeResponseOutput) ToMongoIndexOptionsInvokeResponsePtrOutput() MongoIndexOptionsInvokeResponsePtrOutput {
	return o.ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexOptionsInvokeResponseOutput) ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsInvokeResponse) *MongoIndexOptionsInvokeResponse {
		return &v
	}).(MongoIndexOptionsInvokeResponsePtrOutput)
}

// Expire after seconds
func (o MongoIndexOptionsInvokeResponseOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsInvokeResponse) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsInvokeResponseOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsInvokeResponse) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsInvokeResponse)(nil)).Elem()
}

func (o MongoIndexOptionsInvokeResponsePtrOutput) ToMongoIndexOptionsInvokeResponsePtrOutput() MongoIndexOptionsInvokeResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsInvokeResponsePtrOutput) ToMongoIndexOptionsInvokeResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsInvokeResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsInvokeResponsePtrOutput) Elem() MongoIndexOptionsInvokeResponseOutput {
	return o.ApplyT(func(v *MongoIndexOptionsInvokeResponse) MongoIndexOptionsInvokeResponse { return *v }).(MongoIndexOptionsInvokeResponseOutput)
}

// Expire after seconds
func (o MongoIndexOptionsInvokeResponsePtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsInvokeResponsePtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponse struct {
	// Expire after seconds
	ExpireAfterSeconds *int `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique *bool `pulumi:"unique"`
}

// MongoIndexOptionsResponseInput is an input type that accepts MongoIndexOptionsResponseArgs and MongoIndexOptionsResponseOutput values.
// You can construct a concrete instance of `MongoIndexOptionsResponseInput` via:
//
//          MongoIndexOptionsResponseArgs{...}
type MongoIndexOptionsResponseInput interface {
	pulumi.Input

	ToMongoIndexOptionsResponseOutput() MongoIndexOptionsResponseOutput
	ToMongoIndexOptionsResponseOutputWithContext(context.Context) MongoIndexOptionsResponseOutput
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponseArgs struct {
	// Expire after seconds
	ExpireAfterSeconds pulumi.IntPtrInput `pulumi:"expireAfterSeconds"`
	// Is unique or not
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoIndexOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsResponse)(nil)).Elem()
}

func (i MongoIndexOptionsResponseArgs) ToMongoIndexOptionsResponseOutput() MongoIndexOptionsResponseOutput {
	return i.ToMongoIndexOptionsResponseOutputWithContext(context.Background())
}

func (i MongoIndexOptionsResponseArgs) ToMongoIndexOptionsResponseOutputWithContext(ctx context.Context) MongoIndexOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsResponseOutput)
}

func (i MongoIndexOptionsResponseArgs) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return i.ToMongoIndexOptionsResponsePtrOutputWithContext(context.Background())
}

func (i MongoIndexOptionsResponseArgs) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsResponseOutput).ToMongoIndexOptionsResponsePtrOutputWithContext(ctx)
}

// MongoIndexOptionsResponsePtrInput is an input type that accepts MongoIndexOptionsResponseArgs, MongoIndexOptionsResponsePtr and MongoIndexOptionsResponsePtrOutput values.
// You can construct a concrete instance of `MongoIndexOptionsResponsePtrInput` via:
//
//          MongoIndexOptionsResponseArgs{...}
//
//  or:
//
//          nil
type MongoIndexOptionsResponsePtrInput interface {
	pulumi.Input

	ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput
	ToMongoIndexOptionsResponsePtrOutputWithContext(context.Context) MongoIndexOptionsResponsePtrOutput
}

type mongoIndexOptionsResponsePtrType MongoIndexOptionsResponseArgs

func MongoIndexOptionsResponsePtr(v *MongoIndexOptionsResponseArgs) MongoIndexOptionsResponsePtrInput {
	return (*mongoIndexOptionsResponsePtrType)(v)
}

func (*mongoIndexOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsResponse)(nil)).Elem()
}

func (i *mongoIndexOptionsResponsePtrType) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return i.ToMongoIndexOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *mongoIndexOptionsResponsePtrType) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexOptionsResponsePtrOutput)
}

// Cosmos DB MongoDB collection index options
type MongoIndexOptionsResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutput() MongoIndexOptionsResponseOutput {
	return o
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponseOutputWithContext(ctx context.Context) MongoIndexOptionsResponseOutput {
	return o
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return o.ToMongoIndexOptionsResponsePtrOutputWithContext(context.Background())
}

func (o MongoIndexOptionsResponseOutput) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *MongoIndexOptionsResponse {
		return &v
	}).(MongoIndexOptionsResponsePtrOutput)
}

// Expire after seconds
func (o MongoIndexOptionsResponseOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *int { return v.ExpireAfterSeconds }).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponseOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoIndexOptionsResponse) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoIndexOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (MongoIndexOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoIndexOptionsResponse)(nil)).Elem()
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutput() MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) ToMongoIndexOptionsResponsePtrOutputWithContext(ctx context.Context) MongoIndexOptionsResponsePtrOutput {
	return o
}

func (o MongoIndexOptionsResponsePtrOutput) Elem() MongoIndexOptionsResponseOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) MongoIndexOptionsResponse { return *v }).(MongoIndexOptionsResponseOutput)
}

// Expire after seconds
func (o MongoIndexOptionsResponsePtrOutput) ExpireAfterSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpireAfterSeconds
	}).(pulumi.IntPtrOutput)
}

// Is unique or not
func (o MongoIndexOptionsResponsePtrOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MongoIndexOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Unique
	}).(pulumi.BoolPtrOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponse struct {
	// Cosmos DB MongoDB collection index keys
	Key *MongoIndexKeysResponse `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options *MongoIndexOptionsResponse `pulumi:"options"`
}

// MongoIndexResponseInput is an input type that accepts MongoIndexResponseArgs and MongoIndexResponseOutput values.
// You can construct a concrete instance of `MongoIndexResponseInput` via:
//
//          MongoIndexResponseArgs{...}
type MongoIndexResponseInput interface {
	pulumi.Input

	ToMongoIndexResponseOutput() MongoIndexResponseOutput
	ToMongoIndexResponseOutputWithContext(context.Context) MongoIndexResponseOutput
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponseArgs struct {
	// Cosmos DB MongoDB collection index keys
	Key MongoIndexKeysResponsePtrInput `pulumi:"key"`
	// Cosmos DB MongoDB collection index key options
	Options MongoIndexOptionsResponsePtrInput `pulumi:"options"`
}

func (MongoIndexResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexResponse)(nil)).Elem()
}

func (i MongoIndexResponseArgs) ToMongoIndexResponseOutput() MongoIndexResponseOutput {
	return i.ToMongoIndexResponseOutputWithContext(context.Background())
}

func (i MongoIndexResponseArgs) ToMongoIndexResponseOutputWithContext(ctx context.Context) MongoIndexResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexResponseOutput)
}

// MongoIndexResponseArrayInput is an input type that accepts MongoIndexResponseArray and MongoIndexResponseArrayOutput values.
// You can construct a concrete instance of `MongoIndexResponseArrayInput` via:
//
//          MongoIndexResponseArray{ MongoIndexResponseArgs{...} }
type MongoIndexResponseArrayInput interface {
	pulumi.Input

	ToMongoIndexResponseArrayOutput() MongoIndexResponseArrayOutput
	ToMongoIndexResponseArrayOutputWithContext(context.Context) MongoIndexResponseArrayOutput
}

type MongoIndexResponseArray []MongoIndexResponseInput

func (MongoIndexResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexResponse)(nil)).Elem()
}

func (i MongoIndexResponseArray) ToMongoIndexResponseArrayOutput() MongoIndexResponseArrayOutput {
	return i.ToMongoIndexResponseArrayOutputWithContext(context.Background())
}

func (i MongoIndexResponseArray) ToMongoIndexResponseArrayOutputWithContext(ctx context.Context) MongoIndexResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoIndexResponseArrayOutput)
}

// Cosmos DB MongoDB collection index key
type MongoIndexResponseOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutput() MongoIndexResponseOutput {
	return o
}

func (o MongoIndexResponseOutput) ToMongoIndexResponseOutputWithContext(ctx context.Context) MongoIndexResponseOutput {
	return o
}

// Cosmos DB MongoDB collection index keys
func (o MongoIndexResponseOutput) Key() MongoIndexKeysResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexKeysResponse { return v.Key }).(MongoIndexKeysResponsePtrOutput)
}

// Cosmos DB MongoDB collection index key options
func (o MongoIndexResponseOutput) Options() MongoIndexOptionsResponsePtrOutput {
	return o.ApplyT(func(v MongoIndexResponse) *MongoIndexOptionsResponse { return v.Options }).(MongoIndexOptionsResponsePtrOutput)
}

type MongoIndexResponseArrayOutput struct{ *pulumi.OutputState }

func (MongoIndexResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoIndexResponse)(nil)).Elem()
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutput() MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) ToMongoIndexResponseArrayOutputWithContext(ctx context.Context) MongoIndexResponseArrayOutput {
	return o
}

func (o MongoIndexResponseArrayOutput) Index(i pulumi.IntInput) MongoIndexResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoIndexResponse {
		return vs[0].([]MongoIndexResponse)[vs[1].(int)]
	}).(MongoIndexResponseOutput)
}

type SpatialSpec struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

// SpatialSpecInput is an input type that accepts SpatialSpecArgs and SpatialSpecOutput values.
// You can construct a concrete instance of `SpatialSpecInput` via:
//
//          SpatialSpecArgs{...}
type SpatialSpecInput interface {
	pulumi.Input

	ToSpatialSpecOutput() SpatialSpecOutput
	ToSpatialSpecOutputWithContext(context.Context) SpatialSpecOutput
}

type SpatialSpecArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// List of path's spatial type
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SpatialSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArgs) ToSpatialSpecOutput() SpatialSpecOutput {
	return i.ToSpatialSpecOutputWithContext(context.Background())
}

func (i SpatialSpecArgs) ToSpatialSpecOutputWithContext(ctx context.Context) SpatialSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecOutput)
}

// SpatialSpecArrayInput is an input type that accepts SpatialSpecArray and SpatialSpecArrayOutput values.
// You can construct a concrete instance of `SpatialSpecArrayInput` via:
//
//          SpatialSpecArray{ SpatialSpecArgs{...} }
type SpatialSpecArrayInput interface {
	pulumi.Input

	ToSpatialSpecArrayOutput() SpatialSpecArrayOutput
	ToSpatialSpecArrayOutputWithContext(context.Context) SpatialSpecArrayOutput
}

type SpatialSpecArray []SpatialSpecInput

func (SpatialSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpec)(nil)).Elem()
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutput() SpatialSpecArrayOutput {
	return i.ToSpatialSpecArrayOutputWithContext(context.Background())
}

func (i SpatialSpecArray) ToSpatialSpecArrayOutputWithContext(ctx context.Context) SpatialSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecArrayOutput)
}

type SpatialSpecOutput struct{ *pulumi.OutputState }

func (SpatialSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpec)(nil)).Elem()
}

func (o SpatialSpecOutput) ToSpatialSpecOutput() SpatialSpecOutput {
	return o
}

func (o SpatialSpecOutput) ToSpatialSpecOutputWithContext(ctx context.Context) SpatialSpecOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpec) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpec) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpec)(nil)).Elem()
}

func (o SpatialSpecArrayOutput) ToSpatialSpecArrayOutput() SpatialSpecArrayOutput {
	return o
}

func (o SpatialSpecArrayOutput) ToSpatialSpecArrayOutputWithContext(ctx context.Context) SpatialSpecArrayOutput {
	return o
}

func (o SpatialSpecArrayOutput) Index(i pulumi.IntInput) SpatialSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpec {
		return vs[0].([]SpatialSpec)[vs[1].(int)]
	}).(SpatialSpecOutput)
}

type SpatialSpecInvokeResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

// SpatialSpecInvokeResponseInput is an input type that accepts SpatialSpecInvokeResponseArgs and SpatialSpecInvokeResponseOutput values.
// You can construct a concrete instance of `SpatialSpecInvokeResponseInput` via:
//
//          SpatialSpecInvokeResponseArgs{...}
type SpatialSpecInvokeResponseInput interface {
	pulumi.Input

	ToSpatialSpecInvokeResponseOutput() SpatialSpecInvokeResponseOutput
	ToSpatialSpecInvokeResponseOutputWithContext(context.Context) SpatialSpecInvokeResponseOutput
}

type SpatialSpecInvokeResponseArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// List of path's spatial type
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SpatialSpecInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecInvokeResponse)(nil)).Elem()
}

func (i SpatialSpecInvokeResponseArgs) ToSpatialSpecInvokeResponseOutput() SpatialSpecInvokeResponseOutput {
	return i.ToSpatialSpecInvokeResponseOutputWithContext(context.Background())
}

func (i SpatialSpecInvokeResponseArgs) ToSpatialSpecInvokeResponseOutputWithContext(ctx context.Context) SpatialSpecInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecInvokeResponseOutput)
}

// SpatialSpecInvokeResponseArrayInput is an input type that accepts SpatialSpecInvokeResponseArray and SpatialSpecInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SpatialSpecInvokeResponseArrayInput` via:
//
//          SpatialSpecInvokeResponseArray{ SpatialSpecInvokeResponseArgs{...} }
type SpatialSpecInvokeResponseArrayInput interface {
	pulumi.Input

	ToSpatialSpecInvokeResponseArrayOutput() SpatialSpecInvokeResponseArrayOutput
	ToSpatialSpecInvokeResponseArrayOutputWithContext(context.Context) SpatialSpecInvokeResponseArrayOutput
}

type SpatialSpecInvokeResponseArray []SpatialSpecInvokeResponseInput

func (SpatialSpecInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecInvokeResponse)(nil)).Elem()
}

func (i SpatialSpecInvokeResponseArray) ToSpatialSpecInvokeResponseArrayOutput() SpatialSpecInvokeResponseArrayOutput {
	return i.ToSpatialSpecInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SpatialSpecInvokeResponseArray) ToSpatialSpecInvokeResponseArrayOutputWithContext(ctx context.Context) SpatialSpecInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecInvokeResponseArrayOutput)
}

type SpatialSpecInvokeResponseOutput struct{ *pulumi.OutputState }

func (SpatialSpecInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecInvokeResponse)(nil)).Elem()
}

func (o SpatialSpecInvokeResponseOutput) ToSpatialSpecInvokeResponseOutput() SpatialSpecInvokeResponseOutput {
	return o
}

func (o SpatialSpecInvokeResponseOutput) ToSpatialSpecInvokeResponseOutputWithContext(ctx context.Context) SpatialSpecInvokeResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpecInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecInvokeResponseOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpecInvokeResponse) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecInvokeResponse)(nil)).Elem()
}

func (o SpatialSpecInvokeResponseArrayOutput) ToSpatialSpecInvokeResponseArrayOutput() SpatialSpecInvokeResponseArrayOutput {
	return o
}

func (o SpatialSpecInvokeResponseArrayOutput) ToSpatialSpecInvokeResponseArrayOutputWithContext(ctx context.Context) SpatialSpecInvokeResponseArrayOutput {
	return o
}

func (o SpatialSpecInvokeResponseArrayOutput) Index(i pulumi.IntInput) SpatialSpecInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpecInvokeResponse {
		return vs[0].([]SpatialSpecInvokeResponse)[vs[1].(int)]
	}).(SpatialSpecInvokeResponseOutput)
}

type SpatialSpecResponse struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path *string `pulumi:"path"`
	// List of path's spatial type
	Types []string `pulumi:"types"`
}

// SpatialSpecResponseInput is an input type that accepts SpatialSpecResponseArgs and SpatialSpecResponseOutput values.
// You can construct a concrete instance of `SpatialSpecResponseInput` via:
//
//          SpatialSpecResponseArgs{...}
type SpatialSpecResponseInput interface {
	pulumi.Input

	ToSpatialSpecResponseOutput() SpatialSpecResponseOutput
	ToSpatialSpecResponseOutputWithContext(context.Context) SpatialSpecResponseOutput
}

type SpatialSpecResponseArgs struct {
	// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// List of path's spatial type
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SpatialSpecResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecResponse)(nil)).Elem()
}

func (i SpatialSpecResponseArgs) ToSpatialSpecResponseOutput() SpatialSpecResponseOutput {
	return i.ToSpatialSpecResponseOutputWithContext(context.Background())
}

func (i SpatialSpecResponseArgs) ToSpatialSpecResponseOutputWithContext(ctx context.Context) SpatialSpecResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecResponseOutput)
}

// SpatialSpecResponseArrayInput is an input type that accepts SpatialSpecResponseArray and SpatialSpecResponseArrayOutput values.
// You can construct a concrete instance of `SpatialSpecResponseArrayInput` via:
//
//          SpatialSpecResponseArray{ SpatialSpecResponseArgs{...} }
type SpatialSpecResponseArrayInput interface {
	pulumi.Input

	ToSpatialSpecResponseArrayOutput() SpatialSpecResponseArrayOutput
	ToSpatialSpecResponseArrayOutputWithContext(context.Context) SpatialSpecResponseArrayOutput
}

type SpatialSpecResponseArray []SpatialSpecResponseInput

func (SpatialSpecResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecResponse)(nil)).Elem()
}

func (i SpatialSpecResponseArray) ToSpatialSpecResponseArrayOutput() SpatialSpecResponseArrayOutput {
	return i.ToSpatialSpecResponseArrayOutputWithContext(context.Background())
}

func (i SpatialSpecResponseArray) ToSpatialSpecResponseArrayOutputWithContext(ctx context.Context) SpatialSpecResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpatialSpecResponseArrayOutput)
}

type SpatialSpecResponseOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutput() SpatialSpecResponseOutput {
	return o
}

func (o SpatialSpecResponseOutput) ToSpatialSpecResponseOutputWithContext(ctx context.Context) SpatialSpecResponseOutput {
	return o
}

// The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
func (o SpatialSpecResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpatialSpecResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// List of path's spatial type
func (o SpatialSpecResponseOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpatialSpecResponse) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SpatialSpecResponseArrayOutput struct{ *pulumi.OutputState }

func (SpatialSpecResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpatialSpecResponse)(nil)).Elem()
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutput() SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) ToSpatialSpecResponseArrayOutputWithContext(ctx context.Context) SpatialSpecResponseArrayOutput {
	return o
}

func (o SpatialSpecResponseArrayOutput) Index(i pulumi.IntInput) SpatialSpecResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpatialSpecResponse {
		return vs[0].([]SpatialSpecResponse)[vs[1].(int)]
	}).(SpatialSpecResponseOutput)
}

type SqlContainerGetPropertiesInvokeResponseResource struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicyInvokeResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicyInvokeResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyInvokeResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyInvokeResponse `pulumi:"uniqueKeyPolicy"`
}

// SqlContainerGetPropertiesInvokeResponseResourceInput is an input type that accepts SqlContainerGetPropertiesInvokeResponseResourceArgs and SqlContainerGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `SqlContainerGetPropertiesInvokeResponseResourceInput` via:
//
//          SqlContainerGetPropertiesInvokeResponseResourceArgs{...}
type SqlContainerGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToSqlContainerGetPropertiesInvokeResponseResourceOutput() SqlContainerGetPropertiesInvokeResponseResourceOutput
	ToSqlContainerGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) SqlContainerGetPropertiesInvokeResponseResourceOutput
}

type SqlContainerGetPropertiesInvokeResponseResourceArgs struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy ConflictResolutionPolicyInvokeResponsePtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy IndexingPolicyInvokeResponsePtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyInvokeResponsePtrInput `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyInvokeResponsePtrInput `pulumi:"uniqueKeyPolicy"`
}

func (SqlContainerGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i SqlContainerGetPropertiesInvokeResponseResourceArgs) ToSqlContainerGetPropertiesInvokeResponseResourceOutput() SqlContainerGetPropertiesInvokeResponseResourceOutput {
	return i.ToSqlContainerGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i SqlContainerGetPropertiesInvokeResponseResourceArgs) ToSqlContainerGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerGetPropertiesInvokeResponseResourceOutput)
}

type SqlContainerGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) ToSqlContainerGetPropertiesInvokeResponseResourceOutput() SqlContainerGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) ToSqlContainerGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesInvokeResponseResourceOutput {
	return o
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) *ConflictResolutionPolicyInvokeResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyInvokeResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) IndexingPolicy() IndexingPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) *IndexingPolicyInvokeResponse {
		return v.IndexingPolicy
	}).(IndexingPolicyInvokeResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) PartitionKey() ContainerPartitionKeyInvokeResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) *ContainerPartitionKeyInvokeResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyInvokeResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesInvokeResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesInvokeResponseResource) *UniqueKeyPolicyInvokeResponse {
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyInvokeResponsePtrOutput)
}

type SqlContainerGetPropertiesResponseResource struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicyResponse `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicyResponse `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKeyResponse `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicyResponse `pulumi:"uniqueKeyPolicy"`
}

// SqlContainerGetPropertiesResponseResourceInput is an input type that accepts SqlContainerGetPropertiesResponseResourceArgs and SqlContainerGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `SqlContainerGetPropertiesResponseResourceInput` via:
//
//          SqlContainerGetPropertiesResponseResourceArgs{...}
type SqlContainerGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToSqlContainerGetPropertiesResponseResourceOutput() SqlContainerGetPropertiesResponseResourceOutput
	ToSqlContainerGetPropertiesResponseResourceOutputWithContext(context.Context) SqlContainerGetPropertiesResponseResourceOutput
}

type SqlContainerGetPropertiesResponseResourceArgs struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy ConflictResolutionPolicyResponsePtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL container
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy IndexingPolicyResponsePtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyResponsePtrInput `pulumi:"partitionKey"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyResponsePtrInput `pulumi:"uniqueKeyPolicy"`
}

func (SqlContainerGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (i SqlContainerGetPropertiesResponseResourceArgs) ToSqlContainerGetPropertiesResponseResourceOutput() SqlContainerGetPropertiesResponseResourceOutput {
	return i.ToSqlContainerGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i SqlContainerGetPropertiesResponseResourceArgs) ToSqlContainerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerGetPropertiesResponseResourceOutput)
}

func (i SqlContainerGetPropertiesResponseResourceArgs) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i SqlContainerGetPropertiesResponseResourceArgs) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerGetPropertiesResponseResourceOutput).ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// SqlContainerGetPropertiesResponseResourcePtrInput is an input type that accepts SqlContainerGetPropertiesResponseResourceArgs, SqlContainerGetPropertiesResponseResourcePtr and SqlContainerGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `SqlContainerGetPropertiesResponseResourcePtrInput` via:
//
//          SqlContainerGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type SqlContainerGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput
	ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput
}

type sqlContainerGetPropertiesResponseResourcePtrType SqlContainerGetPropertiesResponseResourceArgs

func SqlContainerGetPropertiesResponseResourcePtr(v *SqlContainerGetPropertiesResponseResourceArgs) SqlContainerGetPropertiesResponseResourcePtrInput {
	return (*sqlContainerGetPropertiesResponseResourcePtrType)(v)
}

func (*sqlContainerGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (i *sqlContainerGetPropertiesResponseResourcePtrType) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlContainerGetPropertiesResponseResourcePtrType) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerGetPropertiesResponseResourcePtrOutput)
}

type SqlContainerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutput() SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlContainerGetPropertiesResponseResourceOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *SqlContainerGetPropertiesResponseResource {
		return &v
	}).(SqlContainerGetPropertiesResponseResourcePtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourceOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse { return v.IndexingPolicy }).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourceOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse { return v.UniqueKeyPolicy }).(UniqueKeyPolicyResponsePtrOutput)
}

type SqlContainerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlContainerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutput() SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ToSqlContainerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlContainerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Elem() SqlContainerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) SqlContainerGetPropertiesResponseResource {
		return *v
	}).(SqlContainerGetPropertiesResponseResourceOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ConflictResolutionPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyResponsePtrOutput)
}

// Default time to live
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) IndexingPolicy() IndexingPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *IndexingPolicyResponse {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyResponsePtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) PartitionKey() ContainerPartitionKeyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *ContainerPartitionKeyResponse {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyResponsePtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerGetPropertiesResponseResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v *SqlContainerGetPropertiesResponseResource) *UniqueKeyPolicyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// Cosmos DB SQL container resource object
type SqlContainerResource struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy *ConflictResolutionPolicy `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl *int `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id string `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy *IndexingPolicy `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey *ContainerPartitionKey `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy *UniqueKeyPolicy `pulumi:"uniqueKeyPolicy"`
}

// SqlContainerResourceInput is an input type that accepts SqlContainerResourceArgs and SqlContainerResourceOutput values.
// You can construct a concrete instance of `SqlContainerResourceInput` via:
//
//          SqlContainerResourceArgs{...}
type SqlContainerResourceInput interface {
	pulumi.Input

	ToSqlContainerResourceOutput() SqlContainerResourceOutput
	ToSqlContainerResourceOutputWithContext(context.Context) SqlContainerResourceOutput
}

// Cosmos DB SQL container resource object
type SqlContainerResourceArgs struct {
	// The conflict resolution policy for the container.
	ConflictResolutionPolicy ConflictResolutionPolicyPtrInput `pulumi:"conflictResolutionPolicy"`
	// Default time to live
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// Name of the Cosmos DB SQL container
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
	IndexingPolicy IndexingPolicyPtrInput `pulumi:"indexingPolicy"`
	// The configuration of the partition key to be used for partitioning data into multiple partitions
	PartitionKey ContainerPartitionKeyPtrInput `pulumi:"partitionKey"`
	// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
	UniqueKeyPolicy UniqueKeyPolicyPtrInput `pulumi:"uniqueKeyPolicy"`
}

func (SqlContainerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerResource)(nil)).Elem()
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutput() SqlContainerResourceOutput {
	return i.ToSqlContainerResourceOutputWithContext(context.Background())
}

func (i SqlContainerResourceArgs) ToSqlContainerResourceOutputWithContext(ctx context.Context) SqlContainerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourceOutput)
}

func (i SqlContainerResourceArgs) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return i.ToSqlContainerResourcePtrOutputWithContext(context.Background())
}

func (i SqlContainerResourceArgs) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourceOutput).ToSqlContainerResourcePtrOutputWithContext(ctx)
}

// SqlContainerResourcePtrInput is an input type that accepts SqlContainerResourceArgs, SqlContainerResourcePtr and SqlContainerResourcePtrOutput values.
// You can construct a concrete instance of `SqlContainerResourcePtrInput` via:
//
//          SqlContainerResourceArgs{...}
//
//  or:
//
//          nil
type SqlContainerResourcePtrInput interface {
	pulumi.Input

	ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput
	ToSqlContainerResourcePtrOutputWithContext(context.Context) SqlContainerResourcePtrOutput
}

type sqlContainerResourcePtrType SqlContainerResourceArgs

func SqlContainerResourcePtr(v *SqlContainerResourceArgs) SqlContainerResourcePtrInput {
	return (*sqlContainerResourcePtrType)(v)
}

func (*sqlContainerResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerResource)(nil)).Elem()
}

func (i *sqlContainerResourcePtrType) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return i.ToSqlContainerResourcePtrOutputWithContext(context.Background())
}

func (i *sqlContainerResourcePtrType) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerResourcePtrOutput)
}

// Cosmos DB SQL container resource object
type SqlContainerResourceOutput struct{ *pulumi.OutputState }

func (SqlContainerResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerResource)(nil)).Elem()
}

func (o SqlContainerResourceOutput) ToSqlContainerResourceOutput() SqlContainerResourceOutput {
	return o
}

func (o SqlContainerResourceOutput) ToSqlContainerResourceOutputWithContext(ctx context.Context) SqlContainerResourceOutput {
	return o
}

func (o SqlContainerResourceOutput) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return o.ToSqlContainerResourcePtrOutputWithContext(context.Background())
}

func (o SqlContainerResourceOutput) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *SqlContainerResource {
		return &v
	}).(SqlContainerResourcePtrOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerResourceOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *ConflictResolutionPolicy { return v.ConflictResolutionPolicy }).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o SqlContainerResourceOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerResource) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerResourceOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *IndexingPolicy { return v.IndexingPolicy }).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerResourceOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *ContainerPartitionKey { return v.PartitionKey }).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerResourceOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerResource) *UniqueKeyPolicy { return v.UniqueKeyPolicy }).(UniqueKeyPolicyPtrOutput)
}

type SqlContainerResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlContainerResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerResource)(nil)).Elem()
}

func (o SqlContainerResourcePtrOutput) ToSqlContainerResourcePtrOutput() SqlContainerResourcePtrOutput {
	return o
}

func (o SqlContainerResourcePtrOutput) ToSqlContainerResourcePtrOutputWithContext(ctx context.Context) SqlContainerResourcePtrOutput {
	return o
}

func (o SqlContainerResourcePtrOutput) Elem() SqlContainerResourceOutput {
	return o.ApplyT(func(v *SqlContainerResource) SqlContainerResource { return *v }).(SqlContainerResourceOutput)
}

// The conflict resolution policy for the container.
func (o SqlContainerResourcePtrOutput) ConflictResolutionPolicy() ConflictResolutionPolicyPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *ConflictResolutionPolicy {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPolicy
	}).(ConflictResolutionPolicyPtrOutput)
}

// Default time to live
func (o SqlContainerResourcePtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// Name of the Cosmos DB SQL container
func (o SqlContainerResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
func (o SqlContainerResourcePtrOutput) IndexingPolicy() IndexingPolicyPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *IndexingPolicy {
		if v == nil {
			return nil
		}
		return v.IndexingPolicy
	}).(IndexingPolicyPtrOutput)
}

// The configuration of the partition key to be used for partitioning data into multiple partitions
func (o SqlContainerResourcePtrOutput) PartitionKey() ContainerPartitionKeyPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *ContainerPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(ContainerPartitionKeyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
func (o SqlContainerResourcePtrOutput) UniqueKeyPolicy() UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v *SqlContainerResource) *UniqueKeyPolicy {
		if v == nil {
			return nil
		}
		return v.UniqueKeyPolicy
	}).(UniqueKeyPolicyPtrOutput)
}

type SqlDatabaseGetPropertiesInvokeResponseResource struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls *string `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users *string `pulumi:"users"`
}

// SqlDatabaseGetPropertiesInvokeResponseResourceInput is an input type that accepts SqlDatabaseGetPropertiesInvokeResponseResourceArgs and SqlDatabaseGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `SqlDatabaseGetPropertiesInvokeResponseResourceInput` via:
//
//          SqlDatabaseGetPropertiesInvokeResponseResourceArgs{...}
type SqlDatabaseGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToSqlDatabaseGetPropertiesInvokeResponseResourceOutput() SqlDatabaseGetPropertiesInvokeResponseResourceOutput
	ToSqlDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) SqlDatabaseGetPropertiesInvokeResponseResourceOutput
}

type SqlDatabaseGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls pulumi.StringPtrInput `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users pulumi.StringPtrInput `pulumi:"users"`
}

func (SqlDatabaseGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i SqlDatabaseGetPropertiesInvokeResponseResourceArgs) ToSqlDatabaseGetPropertiesInvokeResponseResourceOutput() SqlDatabaseGetPropertiesInvokeResponseResourceOutput {
	return i.ToSqlDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i SqlDatabaseGetPropertiesInvokeResponseResourceArgs) ToSqlDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseGetPropertiesInvokeResponseResourceOutput)
}

type SqlDatabaseGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) ToSqlDatabaseGetPropertiesInvokeResponseResourceOutput() SqlDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) ToSqlDatabaseGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) *string { return v.Colls }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesInvokeResponseResourceOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesInvokeResponseResource) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResource struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls *string `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users *string `pulumi:"users"`
}

// SqlDatabaseGetPropertiesResponseResourceInput is an input type that accepts SqlDatabaseGetPropertiesResponseResourceArgs and SqlDatabaseGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `SqlDatabaseGetPropertiesResponseResourceInput` via:
//
//          SqlDatabaseGetPropertiesResponseResourceArgs{...}
type SqlDatabaseGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToSqlDatabaseGetPropertiesResponseResourceOutput() SqlDatabaseGetPropertiesResponseResourceOutput
	ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(context.Context) SqlDatabaseGetPropertiesResponseResourceOutput
}

type SqlDatabaseGetPropertiesResponseResourceArgs struct {
	// A system generated property that specified the addressable path of the collections resource.
	Colls pulumi.StringPtrInput `pulumi:"colls"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL database
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
	// A system generated property that specifies the addressable path of the users resource.
	Users pulumi.StringPtrInput `pulumi:"users"`
}

func (SqlDatabaseGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i SqlDatabaseGetPropertiesResponseResourceArgs) ToSqlDatabaseGetPropertiesResponseResourceOutput() SqlDatabaseGetPropertiesResponseResourceOutput {
	return i.ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i SqlDatabaseGetPropertiesResponseResourceArgs) ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseGetPropertiesResponseResourceOutput)
}

func (i SqlDatabaseGetPropertiesResponseResourceArgs) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i SqlDatabaseGetPropertiesResponseResourceArgs) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseGetPropertiesResponseResourceOutput).ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// SqlDatabaseGetPropertiesResponseResourcePtrInput is an input type that accepts SqlDatabaseGetPropertiesResponseResourceArgs, SqlDatabaseGetPropertiesResponseResourcePtr and SqlDatabaseGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `SqlDatabaseGetPropertiesResponseResourcePtrInput` via:
//
//          SqlDatabaseGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type SqlDatabaseGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput
	ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput
}

type sqlDatabaseGetPropertiesResponseResourcePtrType SqlDatabaseGetPropertiesResponseResourceArgs

func SqlDatabaseGetPropertiesResponseResourcePtr(v *SqlDatabaseGetPropertiesResponseResourceArgs) SqlDatabaseGetPropertiesResponseResourcePtrInput {
	return (*sqlDatabaseGetPropertiesResponseResourcePtrType)(v)
}

func (*sqlDatabaseGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (i *sqlDatabaseGetPropertiesResponseResourcePtrType) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlDatabaseGetPropertiesResponseResourcePtrType) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseGetPropertiesResponseResourcePtrOutput)
}

type SqlDatabaseGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutput() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlDatabaseGetPropertiesResponseResourceOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *SqlDatabaseGetPropertiesResponseResource {
		return &v
	}).(SqlDatabaseGetPropertiesResponseResourcePtrOutput)
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Colls }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourceOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlDatabaseGetPropertiesResponseResource) *string { return v.Users }).(pulumi.StringPtrOutput)
}

type SqlDatabaseGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutput() SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) ToSqlDatabaseGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Elem() SqlDatabaseGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) SqlDatabaseGetPropertiesResponseResource { return *v }).(SqlDatabaseGetPropertiesResponseResourceOutput)
}

// A system generated property that specified the addressable path of the collections resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Colls() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Colls
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// A system generated property that specifies the addressable path of the users resource.
func (o SqlDatabaseGetPropertiesResponseResourcePtrOutput) Users() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Users
	}).(pulumi.StringPtrOutput)
}

// Cosmos DB SQL database resource object
type SqlDatabaseResource struct {
	// Name of the Cosmos DB SQL database
	Id string `pulumi:"id"`
}

// SqlDatabaseResourceInput is an input type that accepts SqlDatabaseResourceArgs and SqlDatabaseResourceOutput values.
// You can construct a concrete instance of `SqlDatabaseResourceInput` via:
//
//          SqlDatabaseResourceArgs{...}
type SqlDatabaseResourceInput interface {
	pulumi.Input

	ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput
	ToSqlDatabaseResourceOutputWithContext(context.Context) SqlDatabaseResourceOutput
}

// Cosmos DB SQL database resource object
type SqlDatabaseResourceArgs struct {
	// Name of the Cosmos DB SQL database
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResource)(nil)).Elem()
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput {
	return i.ToSqlDatabaseResourceOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourceOutputWithContext(ctx context.Context) SqlDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceOutput)
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return i.ToSqlDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i SqlDatabaseResourceArgs) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourceOutput).ToSqlDatabaseResourcePtrOutputWithContext(ctx)
}

// SqlDatabaseResourcePtrInput is an input type that accepts SqlDatabaseResourceArgs, SqlDatabaseResourcePtr and SqlDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `SqlDatabaseResourcePtrInput` via:
//
//          SqlDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type SqlDatabaseResourcePtrInput interface {
	pulumi.Input

	ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput
	ToSqlDatabaseResourcePtrOutputWithContext(context.Context) SqlDatabaseResourcePtrOutput
}

type sqlDatabaseResourcePtrType SqlDatabaseResourceArgs

func SqlDatabaseResourcePtr(v *SqlDatabaseResourceArgs) SqlDatabaseResourcePtrInput {
	return (*sqlDatabaseResourcePtrType)(v)
}

func (*sqlDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseResource)(nil)).Elem()
}

func (i *sqlDatabaseResourcePtrType) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return i.ToSqlDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlDatabaseResourcePtrType) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseResourcePtrOutput)
}

// Cosmos DB SQL database resource object
type SqlDatabaseResourceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseResource)(nil)).Elem()
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourceOutput() SqlDatabaseResourceOutput {
	return o
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourceOutputWithContext(ctx context.Context) SqlDatabaseResourceOutput {
	return o
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return o.ToSqlDatabaseResourcePtrOutputWithContext(context.Background())
}

func (o SqlDatabaseResourceOutput) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return o.ApplyT(func(v SqlDatabaseResource) *SqlDatabaseResource {
		return &v
	}).(SqlDatabaseResourcePtrOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlDatabaseResource) string { return v.Id }).(pulumi.StringOutput)
}

type SqlDatabaseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseResource)(nil)).Elem()
}

func (o SqlDatabaseResourcePtrOutput) ToSqlDatabaseResourcePtrOutput() SqlDatabaseResourcePtrOutput {
	return o
}

func (o SqlDatabaseResourcePtrOutput) ToSqlDatabaseResourcePtrOutputWithContext(ctx context.Context) SqlDatabaseResourcePtrOutput {
	return o
}

func (o SqlDatabaseResourcePtrOutput) Elem() SqlDatabaseResourceOutput {
	return o.ApplyT(func(v *SqlDatabaseResource) SqlDatabaseResource { return *v }).(SqlDatabaseResourceOutput)
}

// Name of the Cosmos DB SQL database
func (o SqlDatabaseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SqlStoredProcedureGetPropertiesInvokeResponseResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlStoredProcedureGetPropertiesInvokeResponseResourceInput is an input type that accepts SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs and SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `SqlStoredProcedureGetPropertiesInvokeResponseResourceInput` via:
//
//          SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs{...}
type SqlStoredProcedureGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutput() SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput
	ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput
}

type SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs struct {
	// Body of the Stored Procedure
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs) ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutput() SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput {
	return i.ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i SqlStoredProcedureGetPropertiesInvokeResponseResourceArgs) ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput)
}

type SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutput() SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) ToSqlStoredProcedureGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput {
	return o
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesInvokeResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlStoredProcedureGetPropertiesResponseResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlStoredProcedureGetPropertiesResponseResourceInput is an input type that accepts SqlStoredProcedureGetPropertiesResponseResourceArgs and SqlStoredProcedureGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `SqlStoredProcedureGetPropertiesResponseResourceInput` via:
//
//          SqlStoredProcedureGetPropertiesResponseResourceArgs{...}
type SqlStoredProcedureGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToSqlStoredProcedureGetPropertiesResponseResourceOutput() SqlStoredProcedureGetPropertiesResponseResourceOutput
	ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(context.Context) SqlStoredProcedureGetPropertiesResponseResourceOutput
}

type SqlStoredProcedureGetPropertiesResponseResourceArgs struct {
	// Body of the Stored Procedure
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL storedProcedure
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlStoredProcedureGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (i SqlStoredProcedureGetPropertiesResponseResourceArgs) ToSqlStoredProcedureGetPropertiesResponseResourceOutput() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return i.ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i SqlStoredProcedureGetPropertiesResponseResourceArgs) ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureGetPropertiesResponseResourceOutput)
}

func (i SqlStoredProcedureGetPropertiesResponseResourceArgs) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i SqlStoredProcedureGetPropertiesResponseResourceArgs) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureGetPropertiesResponseResourceOutput).ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// SqlStoredProcedureGetPropertiesResponseResourcePtrInput is an input type that accepts SqlStoredProcedureGetPropertiesResponseResourceArgs, SqlStoredProcedureGetPropertiesResponseResourcePtr and SqlStoredProcedureGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `SqlStoredProcedureGetPropertiesResponseResourcePtrInput` via:
//
//          SqlStoredProcedureGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type SqlStoredProcedureGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput
	ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput
}

type sqlStoredProcedureGetPropertiesResponseResourcePtrType SqlStoredProcedureGetPropertiesResponseResourceArgs

func SqlStoredProcedureGetPropertiesResponseResourcePtr(v *SqlStoredProcedureGetPropertiesResponseResourceArgs) SqlStoredProcedureGetPropertiesResponseResourcePtrInput {
	return (*sqlStoredProcedureGetPropertiesResponseResourcePtrType)(v)
}

func (*sqlStoredProcedureGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (i *sqlStoredProcedureGetPropertiesResponseResourcePtrType) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlStoredProcedureGetPropertiesResponseResourcePtrType) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput)
}

type SqlStoredProcedureGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutput() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) *SqlStoredProcedureGetPropertiesResponseResource {
		return &v
	}).(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlStoredProcedureGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlStoredProcedureGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutput() SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) ToSqlStoredProcedureGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Elem() SqlStoredProcedureGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) SqlStoredProcedureGetPropertiesResponseResource {
		return *v
	}).(SqlStoredProcedureGetPropertiesResponseResourceOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlStoredProcedureGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *SqlStoredProcedureGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResource struct {
	// Body of the Stored Procedure
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id string `pulumi:"id"`
}

// SqlStoredProcedureResourceInput is an input type that accepts SqlStoredProcedureResourceArgs and SqlStoredProcedureResourceOutput values.
// You can construct a concrete instance of `SqlStoredProcedureResourceInput` via:
//
//          SqlStoredProcedureResourceArgs{...}
type SqlStoredProcedureResourceInput interface {
	pulumi.Input

	ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput
	ToSqlStoredProcedureResourceOutputWithContext(context.Context) SqlStoredProcedureResourceOutput
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResourceArgs struct {
	// Body of the Stored Procedure
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL storedProcedure
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlStoredProcedureResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureResource)(nil)).Elem()
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput {
	return i.ToSqlStoredProcedureResourceOutputWithContext(context.Background())
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourceOutputWithContext(ctx context.Context) SqlStoredProcedureResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourceOutput)
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return i.ToSqlStoredProcedureResourcePtrOutputWithContext(context.Background())
}

func (i SqlStoredProcedureResourceArgs) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourceOutput).ToSqlStoredProcedureResourcePtrOutputWithContext(ctx)
}

// SqlStoredProcedureResourcePtrInput is an input type that accepts SqlStoredProcedureResourceArgs, SqlStoredProcedureResourcePtr and SqlStoredProcedureResourcePtrOutput values.
// You can construct a concrete instance of `SqlStoredProcedureResourcePtrInput` via:
//
//          SqlStoredProcedureResourceArgs{...}
//
//  or:
//
//          nil
type SqlStoredProcedureResourcePtrInput interface {
	pulumi.Input

	ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput
	ToSqlStoredProcedureResourcePtrOutputWithContext(context.Context) SqlStoredProcedureResourcePtrOutput
}

type sqlStoredProcedureResourcePtrType SqlStoredProcedureResourceArgs

func SqlStoredProcedureResourcePtr(v *SqlStoredProcedureResourceArgs) SqlStoredProcedureResourcePtrInput {
	return (*sqlStoredProcedureResourcePtrType)(v)
}

func (*sqlStoredProcedureResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureResource)(nil)).Elem()
}

func (i *sqlStoredProcedureResourcePtrType) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return i.ToSqlStoredProcedureResourcePtrOutputWithContext(context.Background())
}

func (i *sqlStoredProcedureResourcePtrType) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlStoredProcedureResourcePtrOutput)
}

// Cosmos DB SQL storedProcedure resource object
type SqlStoredProcedureResourceOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlStoredProcedureResource)(nil)).Elem()
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourceOutput() SqlStoredProcedureResourceOutput {
	return o
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourceOutputWithContext(ctx context.Context) SqlStoredProcedureResourceOutput {
	return o
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return o.ToSqlStoredProcedureResourcePtrOutputWithContext(context.Background())
}

func (o SqlStoredProcedureResourceOutput) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureResource) *SqlStoredProcedureResource {
		return &v
	}).(SqlStoredProcedureResourcePtrOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlStoredProcedureResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlStoredProcedureResource) string { return v.Id }).(pulumi.StringOutput)
}

type SqlStoredProcedureResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlStoredProcedureResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlStoredProcedureResource)(nil)).Elem()
}

func (o SqlStoredProcedureResourcePtrOutput) ToSqlStoredProcedureResourcePtrOutput() SqlStoredProcedureResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureResourcePtrOutput) ToSqlStoredProcedureResourcePtrOutputWithContext(ctx context.Context) SqlStoredProcedureResourcePtrOutput {
	return o
}

func (o SqlStoredProcedureResourcePtrOutput) Elem() SqlStoredProcedureResourceOutput {
	return o.ApplyT(func(v *SqlStoredProcedureResource) SqlStoredProcedureResource { return *v }).(SqlStoredProcedureResourceOutput)
}

// Body of the Stored Procedure
func (o SqlStoredProcedureResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL storedProcedure
func (o SqlStoredProcedureResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlStoredProcedureResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SqlTriggerGetPropertiesInvokeResponseResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlTriggerGetPropertiesInvokeResponseResourceInput is an input type that accepts SqlTriggerGetPropertiesInvokeResponseResourceArgs and SqlTriggerGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `SqlTriggerGetPropertiesInvokeResponseResourceInput` via:
//
//          SqlTriggerGetPropertiesInvokeResponseResourceArgs{...}
type SqlTriggerGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToSqlTriggerGetPropertiesInvokeResponseResourceOutput() SqlTriggerGetPropertiesInvokeResponseResourceOutput
	ToSqlTriggerGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) SqlTriggerGetPropertiesInvokeResponseResourceOutput
}

type SqlTriggerGetPropertiesInvokeResponseResourceArgs struct {
	// Body of the Trigger
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation pulumi.StringPtrInput `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlTriggerGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i SqlTriggerGetPropertiesInvokeResponseResourceArgs) ToSqlTriggerGetPropertiesInvokeResponseResourceOutput() SqlTriggerGetPropertiesInvokeResponseResourceOutput {
	return i.ToSqlTriggerGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i SqlTriggerGetPropertiesInvokeResponseResourceArgs) ToSqlTriggerGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerGetPropertiesInvokeResponseResourceOutput)
}

type SqlTriggerGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) ToSqlTriggerGetPropertiesInvokeResponseResourceOutput() SqlTriggerGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) ToSqlTriggerGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesInvokeResponseResourceOutput {
	return o
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlTriggerGetPropertiesResponseResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlTriggerGetPropertiesResponseResourceInput is an input type that accepts SqlTriggerGetPropertiesResponseResourceArgs and SqlTriggerGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `SqlTriggerGetPropertiesResponseResourceInput` via:
//
//          SqlTriggerGetPropertiesResponseResourceArgs{...}
type SqlTriggerGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToSqlTriggerGetPropertiesResponseResourceOutput() SqlTriggerGetPropertiesResponseResourceOutput
	ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(context.Context) SqlTriggerGetPropertiesResponseResourceOutput
}

type SqlTriggerGetPropertiesResponseResourceArgs struct {
	// Body of the Trigger
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL trigger
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// The operation the trigger is associated with
	TriggerOperation pulumi.StringPtrInput `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlTriggerGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (i SqlTriggerGetPropertiesResponseResourceArgs) ToSqlTriggerGetPropertiesResponseResourceOutput() SqlTriggerGetPropertiesResponseResourceOutput {
	return i.ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i SqlTriggerGetPropertiesResponseResourceArgs) ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerGetPropertiesResponseResourceOutput)
}

func (i SqlTriggerGetPropertiesResponseResourceArgs) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i SqlTriggerGetPropertiesResponseResourceArgs) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerGetPropertiesResponseResourceOutput).ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// SqlTriggerGetPropertiesResponseResourcePtrInput is an input type that accepts SqlTriggerGetPropertiesResponseResourceArgs, SqlTriggerGetPropertiesResponseResourcePtr and SqlTriggerGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `SqlTriggerGetPropertiesResponseResourcePtrInput` via:
//
//          SqlTriggerGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type SqlTriggerGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput
	ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput
}

type sqlTriggerGetPropertiesResponseResourcePtrType SqlTriggerGetPropertiesResponseResourceArgs

func SqlTriggerGetPropertiesResponseResourcePtr(v *SqlTriggerGetPropertiesResponseResourceArgs) SqlTriggerGetPropertiesResponseResourcePtrInput {
	return (*sqlTriggerGetPropertiesResponseResourcePtrType)(v)
}

func (*sqlTriggerGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (i *sqlTriggerGetPropertiesResponseResourcePtrType) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlTriggerGetPropertiesResponseResourcePtrType) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerGetPropertiesResponseResourcePtrOutput)
}

type SqlTriggerGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutput() SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlTriggerGetPropertiesResponseResourceOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *SqlTriggerGetPropertiesResponseResource {
		return &v
	}).(SqlTriggerGetPropertiesResponseResourcePtrOutput)
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlTriggerGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlTriggerGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlTriggerGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutput() SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) ToSqlTriggerGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlTriggerGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Elem() SqlTriggerGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) SqlTriggerGetPropertiesResponseResource { return *v }).(SqlTriggerGetPropertiesResponseResourceOutput)
}

// Body of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerOperation
	}).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlTriggerGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *SqlTriggerGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResource struct {
	// Body of the Trigger
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id string `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation *string `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType *string `pulumi:"triggerType"`
}

// SqlTriggerResourceInput is an input type that accepts SqlTriggerResourceArgs and SqlTriggerResourceOutput values.
// You can construct a concrete instance of `SqlTriggerResourceInput` via:
//
//          SqlTriggerResourceArgs{...}
type SqlTriggerResourceInput interface {
	pulumi.Input

	ToSqlTriggerResourceOutput() SqlTriggerResourceOutput
	ToSqlTriggerResourceOutputWithContext(context.Context) SqlTriggerResourceOutput
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResourceArgs struct {
	// Body of the Trigger
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL trigger
	Id pulumi.StringInput `pulumi:"id"`
	// The operation the trigger is associated with
	TriggerOperation pulumi.StringPtrInput `pulumi:"triggerOperation"`
	// Type of the Trigger
	TriggerType pulumi.StringPtrInput `pulumi:"triggerType"`
}

func (SqlTriggerResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerResource)(nil)).Elem()
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutput() SqlTriggerResourceOutput {
	return i.ToSqlTriggerResourceOutputWithContext(context.Background())
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourceOutputWithContext(ctx context.Context) SqlTriggerResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourceOutput)
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return i.ToSqlTriggerResourcePtrOutputWithContext(context.Background())
}

func (i SqlTriggerResourceArgs) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourceOutput).ToSqlTriggerResourcePtrOutputWithContext(ctx)
}

// SqlTriggerResourcePtrInput is an input type that accepts SqlTriggerResourceArgs, SqlTriggerResourcePtr and SqlTriggerResourcePtrOutput values.
// You can construct a concrete instance of `SqlTriggerResourcePtrInput` via:
//
//          SqlTriggerResourceArgs{...}
//
//  or:
//
//          nil
type SqlTriggerResourcePtrInput interface {
	pulumi.Input

	ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput
	ToSqlTriggerResourcePtrOutputWithContext(context.Context) SqlTriggerResourcePtrOutput
}

type sqlTriggerResourcePtrType SqlTriggerResourceArgs

func SqlTriggerResourcePtr(v *SqlTriggerResourceArgs) SqlTriggerResourcePtrInput {
	return (*sqlTriggerResourcePtrType)(v)
}

func (*sqlTriggerResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerResource)(nil)).Elem()
}

func (i *sqlTriggerResourcePtrType) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return i.ToSqlTriggerResourcePtrOutputWithContext(context.Background())
}

func (i *sqlTriggerResourcePtrType) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlTriggerResourcePtrOutput)
}

// Cosmos DB SQL trigger resource object
type SqlTriggerResourceOutput struct{ *pulumi.OutputState }

func (SqlTriggerResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlTriggerResource)(nil)).Elem()
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourceOutput() SqlTriggerResourceOutput {
	return o
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourceOutputWithContext(ctx context.Context) SqlTriggerResourceOutput {
	return o
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return o.ToSqlTriggerResourcePtrOutputWithContext(context.Background())
}

func (o SqlTriggerResourceOutput) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *SqlTriggerResource {
		return &v
	}).(SqlTriggerResourcePtrOutput)
}

// Body of the Trigger
func (o SqlTriggerResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlTriggerResource) string { return v.Id }).(pulumi.StringOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerResourceOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.TriggerOperation }).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerResourceOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlTriggerResource) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

type SqlTriggerResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlTriggerResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlTriggerResource)(nil)).Elem()
}

func (o SqlTriggerResourcePtrOutput) ToSqlTriggerResourcePtrOutput() SqlTriggerResourcePtrOutput {
	return o
}

func (o SqlTriggerResourcePtrOutput) ToSqlTriggerResourcePtrOutputWithContext(ctx context.Context) SqlTriggerResourcePtrOutput {
	return o
}

func (o SqlTriggerResourcePtrOutput) Elem() SqlTriggerResourceOutput {
	return o.ApplyT(func(v *SqlTriggerResource) SqlTriggerResource { return *v }).(SqlTriggerResourceOutput)
}

// Body of the Trigger
func (o SqlTriggerResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL trigger
func (o SqlTriggerResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The operation the trigger is associated with
func (o SqlTriggerResourcePtrOutput) TriggerOperation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerOperation
	}).(pulumi.StringPtrOutput)
}

// Type of the Trigger
func (o SqlTriggerResourcePtrOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlTriggerResource) *string {
		if v == nil {
			return nil
		}
		return v.TriggerType
	}).(pulumi.StringPtrOutput)
}

type SqlUserDefinedFunctionGetPropertiesInvokeResponseResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceInput is an input type that accepts SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs and SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceInput` via:
//
//          SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs{...}
type SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput
	ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput
}

type SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs struct {
	// Body of the User Defined Function
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput {
	return i.ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput)
}

type SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput {
	return o
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesInvokeResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// SqlUserDefinedFunctionGetPropertiesResponseResourceInput is an input type that accepts SqlUserDefinedFunctionGetPropertiesResponseResourceArgs and SqlUserDefinedFunctionGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionGetPropertiesResponseResourceInput` via:
//
//          SqlUserDefinedFunctionGetPropertiesResponseResourceArgs{...}
type SqlUserDefinedFunctionGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput
	ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourceOutput
}

type SqlUserDefinedFunctionGetPropertiesResponseResourceArgs struct {
	// Body of the User Defined Function
	Body pulumi.StringPtrInput `pulumi:"body"`
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (i SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return i.ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput)
}

func (i SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput).ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// SqlUserDefinedFunctionGetPropertiesResponseResourcePtrInput is an input type that accepts SqlUserDefinedFunctionGetPropertiesResponseResourceArgs, SqlUserDefinedFunctionGetPropertiesResponseResourcePtr and SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionGetPropertiesResponseResourcePtrInput` via:
//
//          SqlUserDefinedFunctionGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type SqlUserDefinedFunctionGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput
	ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput
}

type sqlUserDefinedFunctionGetPropertiesResponseResourcePtrType SqlUserDefinedFunctionGetPropertiesResponseResourceArgs

func SqlUserDefinedFunctionGetPropertiesResponseResourcePtr(v *SqlUserDefinedFunctionGetPropertiesResponseResourceArgs) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrInput {
	return (*sqlUserDefinedFunctionGetPropertiesResponseResourcePtrType)(v)
}

func (*sqlUserDefinedFunctionGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (i *sqlUserDefinedFunctionGetPropertiesResponseResourcePtrType) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *sqlUserDefinedFunctionGetPropertiesResponseResourcePtrType) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutput() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o.ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) *SqlUserDefinedFunctionGetPropertiesResponseResource {
		return &v
	}).(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionGetPropertiesResponseResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput() SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) ToSqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Elem() SqlUserDefinedFunctionGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) SqlUserDefinedFunctionGetPropertiesResponseResource {
		return *v
	}).(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResource struct {
	// Body of the User Defined Function
	Body *string `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id string `pulumi:"id"`
}

// SqlUserDefinedFunctionResourceInput is an input type that accepts SqlUserDefinedFunctionResourceArgs and SqlUserDefinedFunctionResourceOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionResourceInput` via:
//
//          SqlUserDefinedFunctionResourceArgs{...}
type SqlUserDefinedFunctionResourceInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput
	ToSqlUserDefinedFunctionResourceOutputWithContext(context.Context) SqlUserDefinedFunctionResourceOutput
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResourceArgs struct {
	// Body of the User Defined Function
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Name of the Cosmos DB SQL userDefinedFunction
	Id pulumi.StringInput `pulumi:"id"`
}

func (SqlUserDefinedFunctionResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput {
	return i.ToSqlUserDefinedFunctionResourceOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourceOutput)
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Background())
}

func (i SqlUserDefinedFunctionResourceArgs) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourceOutput).ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx)
}

// SqlUserDefinedFunctionResourcePtrInput is an input type that accepts SqlUserDefinedFunctionResourceArgs, SqlUserDefinedFunctionResourcePtr and SqlUserDefinedFunctionResourcePtrOutput values.
// You can construct a concrete instance of `SqlUserDefinedFunctionResourcePtrInput` via:
//
//          SqlUserDefinedFunctionResourceArgs{...}
//
//  or:
//
//          nil
type SqlUserDefinedFunctionResourcePtrInput interface {
	pulumi.Input

	ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput
	ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Context) SqlUserDefinedFunctionResourcePtrOutput
}

type sqlUserDefinedFunctionResourcePtrType SqlUserDefinedFunctionResourceArgs

func SqlUserDefinedFunctionResourcePtr(v *SqlUserDefinedFunctionResourceArgs) SqlUserDefinedFunctionResourcePtrInput {
	return (*sqlUserDefinedFunctionResourcePtrType)(v)
}

func (*sqlUserDefinedFunctionResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (i *sqlUserDefinedFunctionResourcePtrType) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return i.ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Background())
}

func (i *sqlUserDefinedFunctionResourcePtrType) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlUserDefinedFunctionResourcePtrOutput)
}

// Cosmos DB SQL userDefinedFunction resource object
type SqlUserDefinedFunctionResourceOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourceOutput() SqlUserDefinedFunctionResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourceOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourceOutput {
	return o
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return o.ToSqlUserDefinedFunctionResourcePtrOutputWithContext(context.Background())
}

func (o SqlUserDefinedFunctionResourceOutput) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionResource) *SqlUserDefinedFunctionResource {
		return &v
	}).(SqlUserDefinedFunctionResourcePtrOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionResourceOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionResource) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SqlUserDefinedFunctionResource) string { return v.Id }).(pulumi.StringOutput)
}

type SqlUserDefinedFunctionResourcePtrOutput struct{ *pulumi.OutputState }

func (SqlUserDefinedFunctionResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlUserDefinedFunctionResource)(nil)).Elem()
}

func (o SqlUserDefinedFunctionResourcePtrOutput) ToSqlUserDefinedFunctionResourcePtrOutput() SqlUserDefinedFunctionResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionResourcePtrOutput) ToSqlUserDefinedFunctionResourcePtrOutputWithContext(ctx context.Context) SqlUserDefinedFunctionResourcePtrOutput {
	return o
}

func (o SqlUserDefinedFunctionResourcePtrOutput) Elem() SqlUserDefinedFunctionResourceOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionResource) SqlUserDefinedFunctionResource { return *v }).(SqlUserDefinedFunctionResourceOutput)
}

// Body of the User Defined Function
func (o SqlUserDefinedFunctionResourcePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionResource) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB SQL userDefinedFunction
func (o SqlUserDefinedFunctionResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlUserDefinedFunctionResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TableGetPropertiesInvokeResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// TableGetPropertiesInvokeResponseResourceInput is an input type that accepts TableGetPropertiesInvokeResponseResourceArgs and TableGetPropertiesInvokeResponseResourceOutput values.
// You can construct a concrete instance of `TableGetPropertiesInvokeResponseResourceInput` via:
//
//          TableGetPropertiesInvokeResponseResourceArgs{...}
type TableGetPropertiesInvokeResponseResourceInput interface {
	pulumi.Input

	ToTableGetPropertiesInvokeResponseResourceOutput() TableGetPropertiesInvokeResponseResourceOutput
	ToTableGetPropertiesInvokeResponseResourceOutputWithContext(context.Context) TableGetPropertiesInvokeResponseResourceOutput
}

type TableGetPropertiesInvokeResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (TableGetPropertiesInvokeResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (i TableGetPropertiesInvokeResponseResourceArgs) ToTableGetPropertiesInvokeResponseResourceOutput() TableGetPropertiesInvokeResponseResourceOutput {
	return i.ToTableGetPropertiesInvokeResponseResourceOutputWithContext(context.Background())
}

func (i TableGetPropertiesInvokeResponseResourceArgs) ToTableGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesInvokeResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableGetPropertiesInvokeResponseResourceOutput)
}

type TableGetPropertiesInvokeResponseResourceOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesInvokeResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesInvokeResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesInvokeResponseResourceOutput) ToTableGetPropertiesInvokeResponseResourceOutput() TableGetPropertiesInvokeResponseResourceOutput {
	return o
}

func (o TableGetPropertiesInvokeResponseResourceOutput) ToTableGetPropertiesInvokeResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesInvokeResponseResourceOutput {
	return o
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesInvokeResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesInvokeResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesInvokeResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesInvokeResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesInvokeResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesInvokeResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesInvokeResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v TableGetPropertiesInvokeResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type TableGetPropertiesResponseResource struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag string `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid string `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts interface{} `pulumi:"ts"`
}

// TableGetPropertiesResponseResourceInput is an input type that accepts TableGetPropertiesResponseResourceArgs and TableGetPropertiesResponseResourceOutput values.
// You can construct a concrete instance of `TableGetPropertiesResponseResourceInput` via:
//
//          TableGetPropertiesResponseResourceArgs{...}
type TableGetPropertiesResponseResourceInput interface {
	pulumi.Input

	ToTableGetPropertiesResponseResourceOutput() TableGetPropertiesResponseResourceOutput
	ToTableGetPropertiesResponseResourceOutputWithContext(context.Context) TableGetPropertiesResponseResourceOutput
}

type TableGetPropertiesResponseResourceArgs struct {
	// A system generated property representing the resource etag required for optimistic concurrency control.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Name of the Cosmos DB table
	Id pulumi.StringInput `pulumi:"id"`
	// A system generated property. A unique identifier.
	Rid pulumi.StringInput `pulumi:"rid"`
	// A system generated property that denotes the last updated timestamp of the resource.
	Ts pulumi.Input `pulumi:"ts"`
}

func (TableGetPropertiesResponseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseResource)(nil)).Elem()
}

func (i TableGetPropertiesResponseResourceArgs) ToTableGetPropertiesResponseResourceOutput() TableGetPropertiesResponseResourceOutput {
	return i.ToTableGetPropertiesResponseResourceOutputWithContext(context.Background())
}

func (i TableGetPropertiesResponseResourceArgs) ToTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableGetPropertiesResponseResourceOutput)
}

func (i TableGetPropertiesResponseResourceArgs) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return i.ToTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i TableGetPropertiesResponseResourceArgs) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableGetPropertiesResponseResourceOutput).ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx)
}

// TableGetPropertiesResponseResourcePtrInput is an input type that accepts TableGetPropertiesResponseResourceArgs, TableGetPropertiesResponseResourcePtr and TableGetPropertiesResponseResourcePtrOutput values.
// You can construct a concrete instance of `TableGetPropertiesResponseResourcePtrInput` via:
//
//          TableGetPropertiesResponseResourceArgs{...}
//
//  or:
//
//          nil
type TableGetPropertiesResponseResourcePtrInput interface {
	pulumi.Input

	ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput
	ToTableGetPropertiesResponseResourcePtrOutputWithContext(context.Context) TableGetPropertiesResponseResourcePtrOutput
}

type tableGetPropertiesResponseResourcePtrType TableGetPropertiesResponseResourceArgs

func TableGetPropertiesResponseResourcePtr(v *TableGetPropertiesResponseResourceArgs) TableGetPropertiesResponseResourcePtrInput {
	return (*tableGetPropertiesResponseResourcePtrType)(v)
}

func (*tableGetPropertiesResponseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseResource)(nil)).Elem()
}

func (i *tableGetPropertiesResponseResourcePtrType) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return i.ToTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (i *tableGetPropertiesResponseResourcePtrType) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableGetPropertiesResponseResourcePtrOutput)
}

type TableGetPropertiesResponseResourceOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutput() TableGetPropertiesResponseResourceOutput {
	return o
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourceOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourceOutput {
	return o
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return o.ToTableGetPropertiesResponseResourcePtrOutputWithContext(context.Background())
}

func (o TableGetPropertiesResponseResourceOutput) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) *TableGetPropertiesResponseResource {
		return &v
	}).(TableGetPropertiesResponseResourcePtrOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Etag }).(pulumi.StringOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Id }).(pulumi.StringOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourceOutput) Rid() pulumi.StringOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) string { return v.Rid }).(pulumi.StringOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourceOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v TableGetPropertiesResponseResource) interface{} { return v.Ts }).(pulumi.AnyOutput)
}

type TableGetPropertiesResponseResourcePtrOutput struct{ *pulumi.OutputState }

func (TableGetPropertiesResponseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableGetPropertiesResponseResource)(nil)).Elem()
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutput() TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) ToTableGetPropertiesResponseResourcePtrOutputWithContext(ctx context.Context) TableGetPropertiesResponseResourcePtrOutput {
	return o
}

func (o TableGetPropertiesResponseResourcePtrOutput) Elem() TableGetPropertiesResponseResourceOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) TableGetPropertiesResponseResource { return *v }).(TableGetPropertiesResponseResourceOutput)
}

// A system generated property representing the resource etag required for optimistic concurrency control.
func (o TableGetPropertiesResponseResourcePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Name of the Cosmos DB table
func (o TableGetPropertiesResponseResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// A system generated property. A unique identifier.
func (o TableGetPropertiesResponseResourcePtrOutput) Rid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) *string {
		if v == nil {
			return nil
		}
		return &v.Rid
	}).(pulumi.StringPtrOutput)
}

// A system generated property that denotes the last updated timestamp of the resource.
func (o TableGetPropertiesResponseResourcePtrOutput) Ts() pulumi.AnyOutput {
	return o.ApplyT(func(v *TableGetPropertiesResponseResource) interface{} {
		if v == nil {
			return nil
		}
		return v.Ts
	}).(pulumi.AnyOutput)
}

// Cosmos DB table resource object
type TableResource struct {
	// Name of the Cosmos DB table
	Id string `pulumi:"id"`
}

// TableResourceInput is an input type that accepts TableResourceArgs and TableResourceOutput values.
// You can construct a concrete instance of `TableResourceInput` via:
//
//          TableResourceArgs{...}
type TableResourceInput interface {
	pulumi.Input

	ToTableResourceOutput() TableResourceOutput
	ToTableResourceOutputWithContext(context.Context) TableResourceOutput
}

// Cosmos DB table resource object
type TableResourceArgs struct {
	// Name of the Cosmos DB table
	Id pulumi.StringInput `pulumi:"id"`
}

func (TableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableResource)(nil)).Elem()
}

func (i TableResourceArgs) ToTableResourceOutput() TableResourceOutput {
	return i.ToTableResourceOutputWithContext(context.Background())
}

func (i TableResourceArgs) ToTableResourceOutputWithContext(ctx context.Context) TableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourceOutput)
}

func (i TableResourceArgs) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return i.ToTableResourcePtrOutputWithContext(context.Background())
}

func (i TableResourceArgs) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourceOutput).ToTableResourcePtrOutputWithContext(ctx)
}

// TableResourcePtrInput is an input type that accepts TableResourceArgs, TableResourcePtr and TableResourcePtrOutput values.
// You can construct a concrete instance of `TableResourcePtrInput` via:
//
//          TableResourceArgs{...}
//
//  or:
//
//          nil
type TableResourcePtrInput interface {
	pulumi.Input

	ToTableResourcePtrOutput() TableResourcePtrOutput
	ToTableResourcePtrOutputWithContext(context.Context) TableResourcePtrOutput
}

type tableResourcePtrType TableResourceArgs

func TableResourcePtr(v *TableResourceArgs) TableResourcePtrInput {
	return (*tableResourcePtrType)(v)
}

func (*tableResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableResource)(nil)).Elem()
}

func (i *tableResourcePtrType) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return i.ToTableResourcePtrOutputWithContext(context.Background())
}

func (i *tableResourcePtrType) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableResourcePtrOutput)
}

// Cosmos DB table resource object
type TableResourceOutput struct{ *pulumi.OutputState }

func (TableResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableResource)(nil)).Elem()
}

func (o TableResourceOutput) ToTableResourceOutput() TableResourceOutput {
	return o
}

func (o TableResourceOutput) ToTableResourceOutputWithContext(ctx context.Context) TableResourceOutput {
	return o
}

func (o TableResourceOutput) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return o.ToTableResourcePtrOutputWithContext(context.Background())
}

func (o TableResourceOutput) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return o.ApplyT(func(v TableResource) *TableResource {
		return &v
	}).(TableResourcePtrOutput)
}

// Name of the Cosmos DB table
func (o TableResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TableResource) string { return v.Id }).(pulumi.StringOutput)
}

type TableResourcePtrOutput struct{ *pulumi.OutputState }

func (TableResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableResource)(nil)).Elem()
}

func (o TableResourcePtrOutput) ToTableResourcePtrOutput() TableResourcePtrOutput {
	return o
}

func (o TableResourcePtrOutput) ToTableResourcePtrOutputWithContext(ctx context.Context) TableResourcePtrOutput {
	return o
}

func (o TableResourcePtrOutput) Elem() TableResourceOutput {
	return o.ApplyT(func(v *TableResource) TableResource { return *v }).(TableResourceOutput)
}

// Name of the Cosmos DB table
func (o TableResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKey struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// UniqueKeyInput is an input type that accepts UniqueKeyArgs and UniqueKeyOutput values.
// You can construct a concrete instance of `UniqueKeyInput` via:
//
//          UniqueKeyArgs{...}
type UniqueKeyInput interface {
	pulumi.Input

	ToUniqueKeyOutput() UniqueKeyOutput
	ToUniqueKeyOutputWithContext(context.Context) UniqueKeyOutput
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyArgs struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (UniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArgs) ToUniqueKeyOutput() UniqueKeyOutput {
	return i.ToUniqueKeyOutputWithContext(context.Background())
}

func (i UniqueKeyArgs) ToUniqueKeyOutputWithContext(ctx context.Context) UniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyOutput)
}

// UniqueKeyArrayInput is an input type that accepts UniqueKeyArray and UniqueKeyArrayOutput values.
// You can construct a concrete instance of `UniqueKeyArrayInput` via:
//
//          UniqueKeyArray{ UniqueKeyArgs{...} }
type UniqueKeyArrayInput interface {
	pulumi.Input

	ToUniqueKeyArrayOutput() UniqueKeyArrayOutput
	ToUniqueKeyArrayOutputWithContext(context.Context) UniqueKeyArrayOutput
}

type UniqueKeyArray []UniqueKeyInput

func (UniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKey)(nil)).Elem()
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutput() UniqueKeyArrayOutput {
	return i.ToUniqueKeyArrayOutputWithContext(context.Background())
}

func (i UniqueKeyArray) ToUniqueKeyArrayOutputWithContext(ctx context.Context) UniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyOutput struct{ *pulumi.OutputState }

func (UniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKey)(nil)).Elem()
}

func (o UniqueKeyOutput) ToUniqueKeyOutput() UniqueKeyOutput {
	return o
}

func (o UniqueKeyOutput) ToUniqueKeyOutputWithContext(ctx context.Context) UniqueKeyOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKey)(nil)).Elem()
}

func (o UniqueKeyArrayOutput) ToUniqueKeyArrayOutput() UniqueKeyArrayOutput {
	return o
}

func (o UniqueKeyArrayOutput) ToUniqueKeyArrayOutputWithContext(ctx context.Context) UniqueKeyArrayOutput {
	return o
}

func (o UniqueKeyArrayOutput) Index(i pulumi.IntInput) UniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKey {
		return vs[0].([]UniqueKey)[vs[1].(int)]
	}).(UniqueKeyOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyInvokeResponse struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// UniqueKeyInvokeResponseInput is an input type that accepts UniqueKeyInvokeResponseArgs and UniqueKeyInvokeResponseOutput values.
// You can construct a concrete instance of `UniqueKeyInvokeResponseInput` via:
//
//          UniqueKeyInvokeResponseArgs{...}
type UniqueKeyInvokeResponseInput interface {
	pulumi.Input

	ToUniqueKeyInvokeResponseOutput() UniqueKeyInvokeResponseOutput
	ToUniqueKeyInvokeResponseOutputWithContext(context.Context) UniqueKeyInvokeResponseOutput
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyInvokeResponseArgs struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (UniqueKeyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyInvokeResponse)(nil)).Elem()
}

func (i UniqueKeyInvokeResponseArgs) ToUniqueKeyInvokeResponseOutput() UniqueKeyInvokeResponseOutput {
	return i.ToUniqueKeyInvokeResponseOutputWithContext(context.Background())
}

func (i UniqueKeyInvokeResponseArgs) ToUniqueKeyInvokeResponseOutputWithContext(ctx context.Context) UniqueKeyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyInvokeResponseOutput)
}

// UniqueKeyInvokeResponseArrayInput is an input type that accepts UniqueKeyInvokeResponseArray and UniqueKeyInvokeResponseArrayOutput values.
// You can construct a concrete instance of `UniqueKeyInvokeResponseArrayInput` via:
//
//          UniqueKeyInvokeResponseArray{ UniqueKeyInvokeResponseArgs{...} }
type UniqueKeyInvokeResponseArrayInput interface {
	pulumi.Input

	ToUniqueKeyInvokeResponseArrayOutput() UniqueKeyInvokeResponseArrayOutput
	ToUniqueKeyInvokeResponseArrayOutputWithContext(context.Context) UniqueKeyInvokeResponseArrayOutput
}

type UniqueKeyInvokeResponseArray []UniqueKeyInvokeResponseInput

func (UniqueKeyInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyInvokeResponse)(nil)).Elem()
}

func (i UniqueKeyInvokeResponseArray) ToUniqueKeyInvokeResponseArrayOutput() UniqueKeyInvokeResponseArrayOutput {
	return i.ToUniqueKeyInvokeResponseArrayOutputWithContext(context.Background())
}

func (i UniqueKeyInvokeResponseArray) ToUniqueKeyInvokeResponseArrayOutputWithContext(ctx context.Context) UniqueKeyInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyInvokeResponseArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyInvokeResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyInvokeResponse)(nil)).Elem()
}

func (o UniqueKeyInvokeResponseOutput) ToUniqueKeyInvokeResponseOutput() UniqueKeyInvokeResponseOutput {
	return o
}

func (o UniqueKeyInvokeResponseOutput) ToUniqueKeyInvokeResponseOutputWithContext(ctx context.Context) UniqueKeyInvokeResponseOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyInvokeResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKeyInvokeResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyInvokeResponse)(nil)).Elem()
}

func (o UniqueKeyInvokeResponseArrayOutput) ToUniqueKeyInvokeResponseArrayOutput() UniqueKeyInvokeResponseArrayOutput {
	return o
}

func (o UniqueKeyInvokeResponseArrayOutput) ToUniqueKeyInvokeResponseArrayOutputWithContext(ctx context.Context) UniqueKeyInvokeResponseArrayOutput {
	return o
}

func (o UniqueKeyInvokeResponseArrayOutput) Index(i pulumi.IntInput) UniqueKeyInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKeyInvokeResponse {
		return vs[0].([]UniqueKeyInvokeResponse)[vs[1].(int)]
	}).(UniqueKeyInvokeResponseOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicy struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKey `pulumi:"uniqueKeys"`
}

// UniqueKeyPolicyInput is an input type that accepts UniqueKeyPolicyArgs and UniqueKeyPolicyOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyInput` via:
//
//          UniqueKeyPolicyArgs{...}
type UniqueKeyPolicyInput interface {
	pulumi.Input

	ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput
	ToUniqueKeyPolicyOutputWithContext(context.Context) UniqueKeyPolicyOutput
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyArgs struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys UniqueKeyArrayInput `pulumi:"uniqueKeys"`
}

func (UniqueKeyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicy)(nil)).Elem()
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput {
	return i.ToUniqueKeyPolicyOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyOutputWithContext(ctx context.Context) UniqueKeyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput)
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyArgs) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyOutput).ToUniqueKeyPolicyPtrOutputWithContext(ctx)
}

// UniqueKeyPolicyPtrInput is an input type that accepts UniqueKeyPolicyArgs, UniqueKeyPolicyPtr and UniqueKeyPolicyPtrOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyPtrInput` via:
//
//          UniqueKeyPolicyArgs{...}
//
//  or:
//
//          nil
type UniqueKeyPolicyPtrInput interface {
	pulumi.Input

	ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput
	ToUniqueKeyPolicyPtrOutputWithContext(context.Context) UniqueKeyPolicyPtrOutput
}

type uniqueKeyPolicyPtrType UniqueKeyPolicyArgs

func UniqueKeyPolicyPtr(v *UniqueKeyPolicyArgs) UniqueKeyPolicyPtrInput {
	return (*uniqueKeyPolicyPtrType)(v)
}

func (*uniqueKeyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicy)(nil)).Elem()
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return i.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (i *uniqueKeyPolicyPtrType) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyPtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicy)(nil)).Elem()
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyOutput() UniqueKeyPolicyOutput {
	return o
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyOutputWithContext(ctx context.Context) UniqueKeyPolicyOutput {
	return o
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return o.ToUniqueKeyPolicyPtrOutputWithContext(context.Background())
}

func (o UniqueKeyPolicyOutput) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return o.ApplyT(func(v UniqueKeyPolicy) *UniqueKeyPolicy {
		return &v
	}).(UniqueKeyPolicyPtrOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyOutput) UniqueKeys() UniqueKeyArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicy) []UniqueKey { return v.UniqueKeys }).(UniqueKeyArrayOutput)
}

type UniqueKeyPolicyPtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicy)(nil)).Elem()
}

func (o UniqueKeyPolicyPtrOutput) ToUniqueKeyPolicyPtrOutput() UniqueKeyPolicyPtrOutput {
	return o
}

func (o UniqueKeyPolicyPtrOutput) ToUniqueKeyPolicyPtrOutputWithContext(ctx context.Context) UniqueKeyPolicyPtrOutput {
	return o
}

func (o UniqueKeyPolicyPtrOutput) Elem() UniqueKeyPolicyOutput {
	return o.ApplyT(func(v *UniqueKeyPolicy) UniqueKeyPolicy { return *v }).(UniqueKeyPolicyOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyPtrOutput) UniqueKeys() UniqueKeyArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicy) []UniqueKey {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyArrayOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyInvokeResponse struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKeyInvokeResponse `pulumi:"uniqueKeys"`
}

// UniqueKeyPolicyInvokeResponseInput is an input type that accepts UniqueKeyPolicyInvokeResponseArgs and UniqueKeyPolicyInvokeResponseOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyInvokeResponseInput` via:
//
//          UniqueKeyPolicyInvokeResponseArgs{...}
type UniqueKeyPolicyInvokeResponseInput interface {
	pulumi.Input

	ToUniqueKeyPolicyInvokeResponseOutput() UniqueKeyPolicyInvokeResponseOutput
	ToUniqueKeyPolicyInvokeResponseOutputWithContext(context.Context) UniqueKeyPolicyInvokeResponseOutput
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyInvokeResponseArgs struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys UniqueKeyInvokeResponseArrayInput `pulumi:"uniqueKeys"`
}

func (UniqueKeyPolicyInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyInvokeResponse)(nil)).Elem()
}

func (i UniqueKeyPolicyInvokeResponseArgs) ToUniqueKeyPolicyInvokeResponseOutput() UniqueKeyPolicyInvokeResponseOutput {
	return i.ToUniqueKeyPolicyInvokeResponseOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyInvokeResponseArgs) ToUniqueKeyPolicyInvokeResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyInvokeResponseOutput)
}

func (i UniqueKeyPolicyInvokeResponseArgs) ToUniqueKeyPolicyInvokeResponsePtrOutput() UniqueKeyPolicyInvokeResponsePtrOutput {
	return i.ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyInvokeResponseArgs) ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyInvokeResponseOutput).ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(ctx)
}

// UniqueKeyPolicyInvokeResponsePtrInput is an input type that accepts UniqueKeyPolicyInvokeResponseArgs, UniqueKeyPolicyInvokeResponsePtr and UniqueKeyPolicyInvokeResponsePtrOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyInvokeResponsePtrInput` via:
//
//          UniqueKeyPolicyInvokeResponseArgs{...}
//
//  or:
//
//          nil
type UniqueKeyPolicyInvokeResponsePtrInput interface {
	pulumi.Input

	ToUniqueKeyPolicyInvokeResponsePtrOutput() UniqueKeyPolicyInvokeResponsePtrOutput
	ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(context.Context) UniqueKeyPolicyInvokeResponsePtrOutput
}

type uniqueKeyPolicyInvokeResponsePtrType UniqueKeyPolicyInvokeResponseArgs

func UniqueKeyPolicyInvokeResponsePtr(v *UniqueKeyPolicyInvokeResponseArgs) UniqueKeyPolicyInvokeResponsePtrInput {
	return (*uniqueKeyPolicyInvokeResponsePtrType)(v)
}

func (*uniqueKeyPolicyInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyInvokeResponse)(nil)).Elem()
}

func (i *uniqueKeyPolicyInvokeResponsePtrType) ToUniqueKeyPolicyInvokeResponsePtrOutput() UniqueKeyPolicyInvokeResponsePtrOutput {
	return i.ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *uniqueKeyPolicyInvokeResponsePtrType) ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyInvokeResponsePtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyInvokeResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyInvokeResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyInvokeResponseOutput) ToUniqueKeyPolicyInvokeResponseOutput() UniqueKeyPolicyInvokeResponseOutput {
	return o
}

func (o UniqueKeyPolicyInvokeResponseOutput) ToUniqueKeyPolicyInvokeResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponseOutput {
	return o
}

func (o UniqueKeyPolicyInvokeResponseOutput) ToUniqueKeyPolicyInvokeResponsePtrOutput() UniqueKeyPolicyInvokeResponsePtrOutput {
	return o.ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(context.Background())
}

func (o UniqueKeyPolicyInvokeResponseOutput) ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponsePtrOutput {
	return o.ApplyT(func(v UniqueKeyPolicyInvokeResponse) *UniqueKeyPolicyInvokeResponse {
		return &v
	}).(UniqueKeyPolicyInvokeResponsePtrOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyInvokeResponseOutput) UniqueKeys() UniqueKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicyInvokeResponse) []UniqueKeyInvokeResponse { return v.UniqueKeys }).(UniqueKeyInvokeResponseArrayOutput)
}

type UniqueKeyPolicyInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyInvokeResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyInvokeResponsePtrOutput) ToUniqueKeyPolicyInvokeResponsePtrOutput() UniqueKeyPolicyInvokeResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyInvokeResponsePtrOutput) ToUniqueKeyPolicyInvokeResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyInvokeResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyInvokeResponsePtrOutput) Elem() UniqueKeyPolicyInvokeResponseOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyInvokeResponse) UniqueKeyPolicyInvokeResponse { return *v }).(UniqueKeyPolicyInvokeResponseOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyInvokeResponsePtrOutput) UniqueKeys() UniqueKeyInvokeResponseArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyInvokeResponse) []UniqueKeyInvokeResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyInvokeResponseArrayOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponse struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys []UniqueKeyResponse `pulumi:"uniqueKeys"`
}

// UniqueKeyPolicyResponseInput is an input type that accepts UniqueKeyPolicyResponseArgs and UniqueKeyPolicyResponseOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyResponseInput` via:
//
//          UniqueKeyPolicyResponseArgs{...}
type UniqueKeyPolicyResponseInput interface {
	pulumi.Input

	ToUniqueKeyPolicyResponseOutput() UniqueKeyPolicyResponseOutput
	ToUniqueKeyPolicyResponseOutputWithContext(context.Context) UniqueKeyPolicyResponseOutput
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponseArgs struct {
	// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
	UniqueKeys UniqueKeyResponseArrayInput `pulumi:"uniqueKeys"`
}

func (UniqueKeyPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyResponse)(nil)).Elem()
}

func (i UniqueKeyPolicyResponseArgs) ToUniqueKeyPolicyResponseOutput() UniqueKeyPolicyResponseOutput {
	return i.ToUniqueKeyPolicyResponseOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyResponseArgs) ToUniqueKeyPolicyResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyResponseOutput)
}

func (i UniqueKeyPolicyResponseArgs) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return i.ToUniqueKeyPolicyResponsePtrOutputWithContext(context.Background())
}

func (i UniqueKeyPolicyResponseArgs) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyResponseOutput).ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx)
}

// UniqueKeyPolicyResponsePtrInput is an input type that accepts UniqueKeyPolicyResponseArgs, UniqueKeyPolicyResponsePtr and UniqueKeyPolicyResponsePtrOutput values.
// You can construct a concrete instance of `UniqueKeyPolicyResponsePtrInput` via:
//
//          UniqueKeyPolicyResponseArgs{...}
//
//  or:
//
//          nil
type UniqueKeyPolicyResponsePtrInput interface {
	pulumi.Input

	ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput
	ToUniqueKeyPolicyResponsePtrOutputWithContext(context.Context) UniqueKeyPolicyResponsePtrOutput
}

type uniqueKeyPolicyResponsePtrType UniqueKeyPolicyResponseArgs

func UniqueKeyPolicyResponsePtr(v *UniqueKeyPolicyResponseArgs) UniqueKeyPolicyResponsePtrInput {
	return (*uniqueKeyPolicyResponsePtrType)(v)
}

func (*uniqueKeyPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyResponse)(nil)).Elem()
}

func (i *uniqueKeyPolicyResponsePtrType) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return i.ToUniqueKeyPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *uniqueKeyPolicyResponsePtrType) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyPolicyResponsePtrOutput)
}

// The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyPolicyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutput() UniqueKeyPolicyResponseOutput {
	return o
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponseOutputWithContext(ctx context.Context) UniqueKeyPolicyResponseOutput {
	return o
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return o.ToUniqueKeyPolicyResponsePtrOutputWithContext(context.Background())
}

func (o UniqueKeyPolicyResponseOutput) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return o.ApplyT(func(v UniqueKeyPolicyResponse) *UniqueKeyPolicyResponse {
		return &v
	}).(UniqueKeyPolicyResponsePtrOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponseOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v UniqueKeyPolicyResponse) []UniqueKeyResponse { return v.UniqueKeys }).(UniqueKeyResponseArrayOutput)
}

type UniqueKeyPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (UniqueKeyPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UniqueKeyPolicyResponse)(nil)).Elem()
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutput() UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) ToUniqueKeyPolicyResponsePtrOutputWithContext(ctx context.Context) UniqueKeyPolicyResponsePtrOutput {
	return o
}

func (o UniqueKeyPolicyResponsePtrOutput) Elem() UniqueKeyPolicyResponseOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) UniqueKeyPolicyResponse { return *v }).(UniqueKeyPolicyResponseOutput)
}

// List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
func (o UniqueKeyPolicyResponsePtrOutput) UniqueKeys() UniqueKeyResponseArrayOutput {
	return o.ApplyT(func(v *UniqueKeyPolicyResponse) []UniqueKeyResponse {
		if v == nil {
			return nil
		}
		return v.UniqueKeys
	}).(UniqueKeyResponseArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponse struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths []string `pulumi:"paths"`
}

// UniqueKeyResponseInput is an input type that accepts UniqueKeyResponseArgs and UniqueKeyResponseOutput values.
// You can construct a concrete instance of `UniqueKeyResponseInput` via:
//
//          UniqueKeyResponseArgs{...}
type UniqueKeyResponseInput interface {
	pulumi.Input

	ToUniqueKeyResponseOutput() UniqueKeyResponseOutput
	ToUniqueKeyResponseOutputWithContext(context.Context) UniqueKeyResponseOutput
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponseArgs struct {
	// List of paths must be unique for each document in the Azure Cosmos DB service
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (UniqueKeyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyResponse)(nil)).Elem()
}

func (i UniqueKeyResponseArgs) ToUniqueKeyResponseOutput() UniqueKeyResponseOutput {
	return i.ToUniqueKeyResponseOutputWithContext(context.Background())
}

func (i UniqueKeyResponseArgs) ToUniqueKeyResponseOutputWithContext(ctx context.Context) UniqueKeyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyResponseOutput)
}

// UniqueKeyResponseArrayInput is an input type that accepts UniqueKeyResponseArray and UniqueKeyResponseArrayOutput values.
// You can construct a concrete instance of `UniqueKeyResponseArrayInput` via:
//
//          UniqueKeyResponseArray{ UniqueKeyResponseArgs{...} }
type UniqueKeyResponseArrayInput interface {
	pulumi.Input

	ToUniqueKeyResponseArrayOutput() UniqueKeyResponseArrayOutput
	ToUniqueKeyResponseArrayOutputWithContext(context.Context) UniqueKeyResponseArrayOutput
}

type UniqueKeyResponseArray []UniqueKeyResponseInput

func (UniqueKeyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyResponse)(nil)).Elem()
}

func (i UniqueKeyResponseArray) ToUniqueKeyResponseArrayOutput() UniqueKeyResponseArrayOutput {
	return i.ToUniqueKeyResponseArrayOutputWithContext(context.Background())
}

func (i UniqueKeyResponseArray) ToUniqueKeyResponseArrayOutputWithContext(ctx context.Context) UniqueKeyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UniqueKeyResponseArrayOutput)
}

// The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
type UniqueKeyResponseOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutput() UniqueKeyResponseOutput {
	return o
}

func (o UniqueKeyResponseOutput) ToUniqueKeyResponseOutputWithContext(ctx context.Context) UniqueKeyResponseOutput {
	return o
}

// List of paths must be unique for each document in the Azure Cosmos DB service
func (o UniqueKeyResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UniqueKeyResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type UniqueKeyResponseArrayOutput struct{ *pulumi.OutputState }

func (UniqueKeyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UniqueKeyResponse)(nil)).Elem()
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutput() UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) ToUniqueKeyResponseArrayOutputWithContext(ctx context.Context) UniqueKeyResponseArrayOutput {
	return o
}

func (o UniqueKeyResponseArrayOutput) Index(i pulumi.IntInput) UniqueKeyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UniqueKeyResponse {
		return vs[0].([]UniqueKeyResponse)[vs[1].(int)]
	}).(UniqueKeyResponseOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRule struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// VirtualNetworkRuleInput is an input type that accepts VirtualNetworkRuleArgs and VirtualNetworkRuleOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInput` via:
//
//          VirtualNetworkRuleArgs{...}
type VirtualNetworkRuleInput interface {
	pulumi.Input

	ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput
	ToVirtualNetworkRuleOutputWithContext(context.Context) VirtualNetworkRuleOutput
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleArgs struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

func (VirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return i.ToVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArgs) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleOutput)
}

// VirtualNetworkRuleArrayInput is an input type that accepts VirtualNetworkRuleArray and VirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleArrayInput` via:
//
//          VirtualNetworkRuleArray{ VirtualNetworkRuleArgs{...} }
type VirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput
	ToVirtualNetworkRuleArrayOutputWithContext(context.Context) VirtualNetworkRuleArrayOutput
}

type VirtualNetworkRuleArray []VirtualNetworkRuleInput

func (VirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return i.ToVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleArray) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleArrayOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutput() VirtualNetworkRuleOutput {
	return o
}

func (o VirtualNetworkRuleOutput) ToVirtualNetworkRuleOutputWithContext(ctx context.Context) VirtualNetworkRuleOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRule) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRule)(nil)).Elem()
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutput() VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) ToVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleArrayOutput {
	return o
}

func (o VirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRule {
		return vs[0].([]VirtualNetworkRule)[vs[1].(int)]
	}).(VirtualNetworkRuleOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleInvokeResponse struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// VirtualNetworkRuleInvokeResponseInput is an input type that accepts VirtualNetworkRuleInvokeResponseArgs and VirtualNetworkRuleInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInvokeResponseInput` via:
//
//          VirtualNetworkRuleInvokeResponseArgs{...}
type VirtualNetworkRuleInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput
	ToVirtualNetworkRuleInvokeResponseOutputWithContext(context.Context) VirtualNetworkRuleInvokeResponseOutput
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleInvokeResponseArgs struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

func (VirtualNetworkRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleInvokeResponseArgs) ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput {
	return i.ToVirtualNetworkRuleInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleInvokeResponseArgs) ToVirtualNetworkRuleInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleInvokeResponseOutput)
}

// VirtualNetworkRuleInvokeResponseArrayInput is an input type that accepts VirtualNetworkRuleInvokeResponseArray and VirtualNetworkRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleInvokeResponseArrayInput` via:
//
//          VirtualNetworkRuleInvokeResponseArray{ VirtualNetworkRuleInvokeResponseArgs{...} }
type VirtualNetworkRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput
	ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleInvokeResponseArrayOutput
}

type VirtualNetworkRuleInvokeResponseArray []VirtualNetworkRuleInvokeResponseInput

func (VirtualNetworkRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleInvokeResponseArray) ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput {
	return i.ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleInvokeResponseArray) ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleInvokeResponseArrayOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleInvokeResponseOutput) ToVirtualNetworkRuleInvokeResponseOutput() VirtualNetworkRuleInvokeResponseOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseOutput) ToVirtualNetworkRuleInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleInvokeResponseOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleInvokeResponse) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) ToVirtualNetworkRuleInvokeResponseArrayOutput() VirtualNetworkRuleInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) ToVirtualNetworkRuleInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleInvokeResponse {
		return vs[0].([]VirtualNetworkRuleInvokeResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleInvokeResponseOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponse struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id *string `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint *bool `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

// VirtualNetworkRuleResponseInput is an input type that accepts VirtualNetworkRuleResponseArgs and VirtualNetworkRuleResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseInput` via:
//
//          VirtualNetworkRuleResponseArgs{...}
type VirtualNetworkRuleResponseInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput
	ToVirtualNetworkRuleResponseOutputWithContext(context.Context) VirtualNetworkRuleResponseOutput
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponseArgs struct {
	// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Create firewall rule before the virtual network has vnet service endpoint enabled.
	IgnoreMissingVNetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVNetServiceEndpoint"`
}

func (VirtualNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return i.ToVirtualNetworkRuleResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArgs) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseOutput)
}

// VirtualNetworkRuleResponseArrayInput is an input type that accepts VirtualNetworkRuleResponseArray and VirtualNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkRuleResponseArrayInput` via:
//
//          VirtualNetworkRuleResponseArray{ VirtualNetworkRuleResponseArgs{...} }
type VirtualNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput
	ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Context) VirtualNetworkRuleResponseArrayOutput
}

type VirtualNetworkRuleResponseArray []VirtualNetworkRuleResponseInput

func (VirtualNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return i.ToVirtualNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkRuleResponseArray) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkRuleResponseArrayOutput)
}

// Virtual Network ACL Rule object
type VirtualNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutput() VirtualNetworkRuleResponseOutput {
	return o
}

func (o VirtualNetworkRuleResponseOutput) ToVirtualNetworkRuleResponseOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseOutput {
	return o
}

// Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.
func (o VirtualNetworkRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Create firewall rule before the virtual network has vnet service endpoint enabled.
func (o VirtualNetworkRuleResponseOutput) IgnoreMissingVNetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkRuleResponse) *bool { return v.IgnoreMissingVNetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkRuleResponse)(nil)).Elem()
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutput() VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) ToVirtualNetworkRuleResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkRuleResponseArrayOutput {
	return o
}

func (o VirtualNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkRuleResponse {
		return vs[0].([]VirtualNetworkRuleResponse)[vs[1].(int)]
	}).(VirtualNetworkRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityInvokeResponseOutput{})
	pulumi.RegisterOutputType(CapabilityInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceResourceOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(CassandraPartitionKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(CassandraSchemaOutput{})
	pulumi.RegisterOutputType(CassandraSchemaPtrOutput{})
	pulumi.RegisterOutputType(CassandraSchemaInvokeResponseOutput{})
	pulumi.RegisterOutputType(CassandraSchemaInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponseOutput{})
	pulumi.RegisterOutputType(CassandraSchemaResponsePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(CassandraTableResourceOutput{})
	pulumi.RegisterOutputType(CassandraTableResourcePtrOutput{})
	pulumi.RegisterOutputType(ClusterKeyOutput{})
	pulumi.RegisterOutputType(ClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(ClusterKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ClusterKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseOutput{})
	pulumi.RegisterOutputType(ClusterKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(ColumnOutput{})
	pulumi.RegisterOutputType(ColumnArrayOutput{})
	pulumi.RegisterOutputType(ColumnInvokeResponseOutput{})
	pulumi.RegisterOutputType(ColumnInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ColumnResponseOutput{})
	pulumi.RegisterOutputType(ColumnResponseArrayOutput{})
	pulumi.RegisterOutputType(CompositePathOutput{})
	pulumi.RegisterOutputType(CompositePathArrayOutput{})
	pulumi.RegisterOutputType(CompositePathInvokeResponseOutput{})
	pulumi.RegisterOutputType(CompositePathInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(CompositePathResponseOutput{})
	pulumi.RegisterOutputType(CompositePathResponseArrayOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConflictResolutionPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponseOutput{})
	pulumi.RegisterOutputType(ConsistencyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyPtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponseOutput{})
	pulumi.RegisterOutputType(ContainerPartitionKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsOutput{})
	pulumi.RegisterOutputType(CreateUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringInvokeResponseOutput{})
	pulumi.RegisterOutputType(DatabaseAccountConnectionStringInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathOutput{})
	pulumi.RegisterOutputType(ExcludedPathArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExcludedPathInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseOutput{})
	pulumi.RegisterOutputType(ExcludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(FailoverPolicyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseOutput{})
	pulumi.RegisterOutputType(FailoverPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseResourceOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphResourceOutput{})
	pulumi.RegisterOutputType(GremlinGraphResourcePtrOutput{})
	pulumi.RegisterOutputType(IncludedPathOutput{})
	pulumi.RegisterOutputType(IncludedPathArrayOutput{})
	pulumi.RegisterOutputType(IncludedPathInvokeResponseOutput{})
	pulumi.RegisterOutputType(IncludedPathInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseOutput{})
	pulumi.RegisterOutputType(IncludedPathResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexesOutput{})
	pulumi.RegisterOutputType(IndexesArrayOutput{})
	pulumi.RegisterOutputType(IndexesInvokeResponseOutput{})
	pulumi.RegisterOutputType(IndexesInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexesResponseOutput{})
	pulumi.RegisterOutputType(IndexesResponseArrayOutput{})
	pulumi.RegisterOutputType(IndexingPolicyOutput{})
	pulumi.RegisterOutputType(IndexingPolicyPtrOutput{})
	pulumi.RegisterOutputType(IndexingPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(IndexingPolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponseOutput{})
	pulumi.RegisterOutputType(IndexingPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(LocationOutput{})
	pulumi.RegisterOutputType(LocationArrayOutput{})
	pulumi.RegisterOutputType(LocationInvokeResponseOutput{})
	pulumi.RegisterOutputType(LocationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LocationResponseOutput{})
	pulumi.RegisterOutputType(LocationResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionResourceOutput{})
	pulumi.RegisterOutputType(MongoDBCollectionResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseResourceOutput{})
	pulumi.RegisterOutputType(MongoDBDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOutput{})
	pulumi.RegisterOutputType(MongoIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoIndexInvokeResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysInvokeResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexKeysResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsPtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsInvokeResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseOutput{})
	pulumi.RegisterOutputType(MongoIndexResponseArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecOutput{})
	pulumi.RegisterOutputType(SpatialSpecArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecInvokeResponseOutput{})
	pulumi.RegisterOutputType(SpatialSpecInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseOutput{})
	pulumi.RegisterOutputType(SpatialSpecResponseArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlContainerResourceOutput{})
	pulumi.RegisterOutputType(SqlContainerResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourceOutput{})
	pulumi.RegisterOutputType(SqlDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureResourceOutput{})
	pulumi.RegisterOutputType(SqlStoredProcedureResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlTriggerResourceOutput{})
	pulumi.RegisterOutputType(SqlTriggerResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionResourceOutput{})
	pulumi.RegisterOutputType(SqlUserDefinedFunctionResourcePtrOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesInvokeResponseResourceOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourceOutput{})
	pulumi.RegisterOutputType(TableGetPropertiesResponseResourcePtrOutput{})
	pulumi.RegisterOutputType(TableResourceOutput{})
	pulumi.RegisterOutputType(TableResourcePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyOutput{})
	pulumi.RegisterOutputType(UniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(UniqueKeyInvokeResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyPtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyInvokeResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseOutput{})
	pulumi.RegisterOutputType(UniqueKeyResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkRuleResponseArrayOutput{})
}
