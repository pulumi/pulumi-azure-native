// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package documentdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.
type AuthenticationMethod string

const (
	AuthenticationMethodNone      = AuthenticationMethod("None")
	AuthenticationMethodCassandra = AuthenticationMethod("Cassandra")
)

func (AuthenticationMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (e AuthenticationMethod) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return pulumi.ToOutput(e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AuthenticationMethodOutput)
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return e.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return AuthenticationMethod(e).ToAuthenticationMethodOutputWithContext(ctx).ToAuthenticationMethodPtrOutputWithContext(ctx)
}

func (e AuthenticationMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AuthenticationMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AuthenticationMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AuthenticationMethodOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationMethod)(nil)).Elem()
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutput() AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodOutputWithContext(ctx context.Context) AuthenticationMethodOutput {
	return o
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o.ToAuthenticationMethodPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationMethod) *AuthenticationMethod {
		return &v
	}).(AuthenticationMethodPtrOutput)
}

func (o AuthenticationMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AuthenticationMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AuthenticationMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AuthenticationMethodPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationMethodPtrOutput) ElementType() reflect.Type {
	return authenticationMethodPtrType
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return o
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AuthenticationMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AuthenticationMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o AuthenticationMethodPtrOutput) Elem() AuthenticationMethodOutput {
	return o.ApplyT(func(v *AuthenticationMethod) AuthenticationMethod {
		var ret AuthenticationMethod
		if v != nil {
			ret = *v
		}
		return ret
	}).(AuthenticationMethodOutput)
}

// AuthenticationMethodInput is an input type that accepts AuthenticationMethodArgs and AuthenticationMethodOutput values.
// You can construct a concrete instance of `AuthenticationMethodInput` via:
//
//          AuthenticationMethodArgs{...}
type AuthenticationMethodInput interface {
	pulumi.Input

	ToAuthenticationMethodOutput() AuthenticationMethodOutput
	ToAuthenticationMethodOutputWithContext(context.Context) AuthenticationMethodOutput
}

var authenticationMethodPtrType = reflect.TypeOf((**AuthenticationMethod)(nil)).Elem()

type AuthenticationMethodPtrInput interface {
	pulumi.Input

	ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput
	ToAuthenticationMethodPtrOutputWithContext(context.Context) AuthenticationMethodPtrOutput
}

type authenticationMethodPtr string

func AuthenticationMethodPtr(v string) AuthenticationMethodPtrInput {
	return (*authenticationMethodPtr)(&v)
}

func (*authenticationMethodPtr) ElementType() reflect.Type {
	return authenticationMethodPtrType
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutput() AuthenticationMethodPtrOutput {
	return pulumi.ToOutput(in).(AuthenticationMethodPtrOutput)
}

func (in *authenticationMethodPtr) ToAuthenticationMethodPtrOutputWithContext(ctx context.Context) AuthenticationMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AuthenticationMethodPtrOutput)
}

// Describes the mode of backups.
type BackupPolicyType string

const (
	BackupPolicyTypePeriodic   = BackupPolicyType("Periodic")
	BackupPolicyTypeContinuous = BackupPolicyType("Continuous")
)

func (BackupPolicyType) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyType)(nil)).Elem()
}

func (e BackupPolicyType) ToBackupPolicyTypeOutput() BackupPolicyTypeOutput {
	return pulumi.ToOutput(e).(BackupPolicyTypeOutput)
}

func (e BackupPolicyType) ToBackupPolicyTypeOutputWithContext(ctx context.Context) BackupPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BackupPolicyTypeOutput)
}

func (e BackupPolicyType) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return e.ToBackupPolicyTypePtrOutputWithContext(context.Background())
}

func (e BackupPolicyType) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return BackupPolicyType(e).ToBackupPolicyTypeOutputWithContext(ctx).ToBackupPolicyTypePtrOutputWithContext(ctx)
}

func (e BackupPolicyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupPolicyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BackupPolicyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BackupPolicyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BackupPolicyTypeOutput struct{ *pulumi.OutputState }

func (BackupPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyType)(nil)).Elem()
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypeOutput() BackupPolicyTypeOutput {
	return o
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypeOutputWithContext(ctx context.Context) BackupPolicyTypeOutput {
	return o
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return o.ToBackupPolicyTypePtrOutputWithContext(context.Background())
}

func (o BackupPolicyTypeOutput) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupPolicyType) *BackupPolicyType {
		return &v
	}).(BackupPolicyTypePtrOutput)
}

func (o BackupPolicyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BackupPolicyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupPolicyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BackupPolicyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupPolicyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BackupPolicyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BackupPolicyTypePtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyTypePtrOutput) ElementType() reflect.Type {
	return backupPolicyTypePtrType
}

func (o BackupPolicyTypePtrOutput) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return o
}

func (o BackupPolicyTypePtrOutput) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return o
}

func (o BackupPolicyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BackupPolicyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BackupPolicyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o BackupPolicyTypePtrOutput) Elem() BackupPolicyTypeOutput {
	return o.ApplyT(func(v *BackupPolicyType) BackupPolicyType {
		var ret BackupPolicyType
		if v != nil {
			ret = *v
		}
		return ret
	}).(BackupPolicyTypeOutput)
}

// BackupPolicyTypeInput is an input type that accepts BackupPolicyTypeArgs and BackupPolicyTypeOutput values.
// You can construct a concrete instance of `BackupPolicyTypeInput` via:
//
//          BackupPolicyTypeArgs{...}
type BackupPolicyTypeInput interface {
	pulumi.Input

	ToBackupPolicyTypeOutput() BackupPolicyTypeOutput
	ToBackupPolicyTypeOutputWithContext(context.Context) BackupPolicyTypeOutput
}

var backupPolicyTypePtrType = reflect.TypeOf((**BackupPolicyType)(nil)).Elem()

type BackupPolicyTypePtrInput interface {
	pulumi.Input

	ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput
	ToBackupPolicyTypePtrOutputWithContext(context.Context) BackupPolicyTypePtrOutput
}

type backupPolicyTypePtr string

func BackupPolicyTypePtr(v string) BackupPolicyTypePtrInput {
	return (*backupPolicyTypePtr)(&v)
}

func (*backupPolicyTypePtr) ElementType() reflect.Type {
	return backupPolicyTypePtrType
}

func (in *backupPolicyTypePtr) ToBackupPolicyTypePtrOutput() BackupPolicyTypePtrOutput {
	return pulumi.ToOutput(in).(BackupPolicyTypePtrOutput)
}

func (in *backupPolicyTypePtr) ToBackupPolicyTypePtrOutputWithContext(ctx context.Context) BackupPolicyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BackupPolicyTypePtrOutput)
}

// Sort order for composite paths.
type CompositePathSortOrder string

const (
	CompositePathSortOrderAscending  = CompositePathSortOrder("ascending")
	CompositePathSortOrderDescending = CompositePathSortOrder("descending")
)

func (CompositePathSortOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathSortOrder)(nil)).Elem()
}

func (e CompositePathSortOrder) ToCompositePathSortOrderOutput() CompositePathSortOrderOutput {
	return pulumi.ToOutput(e).(CompositePathSortOrderOutput)
}

func (e CompositePathSortOrder) ToCompositePathSortOrderOutputWithContext(ctx context.Context) CompositePathSortOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CompositePathSortOrderOutput)
}

func (e CompositePathSortOrder) ToCompositePathSortOrderPtrOutput() CompositePathSortOrderPtrOutput {
	return e.ToCompositePathSortOrderPtrOutputWithContext(context.Background())
}

func (e CompositePathSortOrder) ToCompositePathSortOrderPtrOutputWithContext(ctx context.Context) CompositePathSortOrderPtrOutput {
	return CompositePathSortOrder(e).ToCompositePathSortOrderOutputWithContext(ctx).ToCompositePathSortOrderPtrOutputWithContext(ctx)
}

func (e CompositePathSortOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositePathSortOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CompositePathSortOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CompositePathSortOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CompositePathSortOrderOutput struct{ *pulumi.OutputState }

func (CompositePathSortOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositePathSortOrder)(nil)).Elem()
}

func (o CompositePathSortOrderOutput) ToCompositePathSortOrderOutput() CompositePathSortOrderOutput {
	return o
}

func (o CompositePathSortOrderOutput) ToCompositePathSortOrderOutputWithContext(ctx context.Context) CompositePathSortOrderOutput {
	return o
}

func (o CompositePathSortOrderOutput) ToCompositePathSortOrderPtrOutput() CompositePathSortOrderPtrOutput {
	return o.ToCompositePathSortOrderPtrOutputWithContext(context.Background())
}

func (o CompositePathSortOrderOutput) ToCompositePathSortOrderPtrOutputWithContext(ctx context.Context) CompositePathSortOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompositePathSortOrder) *CompositePathSortOrder {
		return &v
	}).(CompositePathSortOrderPtrOutput)
}

func (o CompositePathSortOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CompositePathSortOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CompositePathSortOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CompositePathSortOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompositePathSortOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CompositePathSortOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CompositePathSortOrderPtrOutput struct{ *pulumi.OutputState }

func (CompositePathSortOrderPtrOutput) ElementType() reflect.Type {
	return compositePathSortOrderPtrType
}

func (o CompositePathSortOrderPtrOutput) ToCompositePathSortOrderPtrOutput() CompositePathSortOrderPtrOutput {
	return o
}

func (o CompositePathSortOrderPtrOutput) ToCompositePathSortOrderPtrOutputWithContext(ctx context.Context) CompositePathSortOrderPtrOutput {
	return o
}

func (o CompositePathSortOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CompositePathSortOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CompositePathSortOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o CompositePathSortOrderPtrOutput) Elem() CompositePathSortOrderOutput {
	return o.ApplyT(func(v *CompositePathSortOrder) CompositePathSortOrder {
		var ret CompositePathSortOrder
		if v != nil {
			ret = *v
		}
		return ret
	}).(CompositePathSortOrderOutput)
}

// CompositePathSortOrderInput is an input type that accepts CompositePathSortOrderArgs and CompositePathSortOrderOutput values.
// You can construct a concrete instance of `CompositePathSortOrderInput` via:
//
//          CompositePathSortOrderArgs{...}
type CompositePathSortOrderInput interface {
	pulumi.Input

	ToCompositePathSortOrderOutput() CompositePathSortOrderOutput
	ToCompositePathSortOrderOutputWithContext(context.Context) CompositePathSortOrderOutput
}

var compositePathSortOrderPtrType = reflect.TypeOf((**CompositePathSortOrder)(nil)).Elem()

type CompositePathSortOrderPtrInput interface {
	pulumi.Input

	ToCompositePathSortOrderPtrOutput() CompositePathSortOrderPtrOutput
	ToCompositePathSortOrderPtrOutputWithContext(context.Context) CompositePathSortOrderPtrOutput
}

type compositePathSortOrderPtr string

func CompositePathSortOrderPtr(v string) CompositePathSortOrderPtrInput {
	return (*compositePathSortOrderPtr)(&v)
}

func (*compositePathSortOrderPtr) ElementType() reflect.Type {
	return compositePathSortOrderPtrType
}

func (in *compositePathSortOrderPtr) ToCompositePathSortOrderPtrOutput() CompositePathSortOrderPtrOutput {
	return pulumi.ToOutput(in).(CompositePathSortOrderPtrOutput)
}

func (in *compositePathSortOrderPtr) ToCompositePathSortOrderPtrOutputWithContext(ctx context.Context) CompositePathSortOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CompositePathSortOrderPtrOutput)
}

// Indicates the conflict resolution mode.
type ConflictResolutionMode string

const (
	ConflictResolutionModeLastWriterWins = ConflictResolutionMode("LastWriterWins")
	ConflictResolutionModeCustom         = ConflictResolutionMode("Custom")
)

func (ConflictResolutionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionMode)(nil)).Elem()
}

func (e ConflictResolutionMode) ToConflictResolutionModeOutput() ConflictResolutionModeOutput {
	return pulumi.ToOutput(e).(ConflictResolutionModeOutput)
}

func (e ConflictResolutionMode) ToConflictResolutionModeOutputWithContext(ctx context.Context) ConflictResolutionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConflictResolutionModeOutput)
}

func (e ConflictResolutionMode) ToConflictResolutionModePtrOutput() ConflictResolutionModePtrOutput {
	return e.ToConflictResolutionModePtrOutputWithContext(context.Background())
}

func (e ConflictResolutionMode) ToConflictResolutionModePtrOutputWithContext(ctx context.Context) ConflictResolutionModePtrOutput {
	return ConflictResolutionMode(e).ToConflictResolutionModeOutputWithContext(ctx).ToConflictResolutionModePtrOutputWithContext(ctx)
}

func (e ConflictResolutionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConflictResolutionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConflictResolutionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConflictResolutionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConflictResolutionModeOutput struct{ *pulumi.OutputState }

func (ConflictResolutionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConflictResolutionMode)(nil)).Elem()
}

func (o ConflictResolutionModeOutput) ToConflictResolutionModeOutput() ConflictResolutionModeOutput {
	return o
}

func (o ConflictResolutionModeOutput) ToConflictResolutionModeOutputWithContext(ctx context.Context) ConflictResolutionModeOutput {
	return o
}

func (o ConflictResolutionModeOutput) ToConflictResolutionModePtrOutput() ConflictResolutionModePtrOutput {
	return o.ToConflictResolutionModePtrOutputWithContext(context.Background())
}

func (o ConflictResolutionModeOutput) ToConflictResolutionModePtrOutputWithContext(ctx context.Context) ConflictResolutionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConflictResolutionMode) *ConflictResolutionMode {
		return &v
	}).(ConflictResolutionModePtrOutput)
}

func (o ConflictResolutionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConflictResolutionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConflictResolutionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConflictResolutionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConflictResolutionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConflictResolutionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConflictResolutionModePtrOutput struct{ *pulumi.OutputState }

func (ConflictResolutionModePtrOutput) ElementType() reflect.Type {
	return conflictResolutionModePtrType
}

func (o ConflictResolutionModePtrOutput) ToConflictResolutionModePtrOutput() ConflictResolutionModePtrOutput {
	return o
}

func (o ConflictResolutionModePtrOutput) ToConflictResolutionModePtrOutputWithContext(ctx context.Context) ConflictResolutionModePtrOutput {
	return o
}

func (o ConflictResolutionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConflictResolutionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConflictResolutionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ConflictResolutionModePtrOutput) Elem() ConflictResolutionModeOutput {
	return o.ApplyT(func(v *ConflictResolutionMode) ConflictResolutionMode {
		var ret ConflictResolutionMode
		if v != nil {
			ret = *v
		}
		return ret
	}).(ConflictResolutionModeOutput)
}

// ConflictResolutionModeInput is an input type that accepts ConflictResolutionModeArgs and ConflictResolutionModeOutput values.
// You can construct a concrete instance of `ConflictResolutionModeInput` via:
//
//          ConflictResolutionModeArgs{...}
type ConflictResolutionModeInput interface {
	pulumi.Input

	ToConflictResolutionModeOutput() ConflictResolutionModeOutput
	ToConflictResolutionModeOutputWithContext(context.Context) ConflictResolutionModeOutput
}

var conflictResolutionModePtrType = reflect.TypeOf((**ConflictResolutionMode)(nil)).Elem()

type ConflictResolutionModePtrInput interface {
	pulumi.Input

	ToConflictResolutionModePtrOutput() ConflictResolutionModePtrOutput
	ToConflictResolutionModePtrOutputWithContext(context.Context) ConflictResolutionModePtrOutput
}

type conflictResolutionModePtr string

func ConflictResolutionModePtr(v string) ConflictResolutionModePtrInput {
	return (*conflictResolutionModePtr)(&v)
}

func (*conflictResolutionModePtr) ElementType() reflect.Type {
	return conflictResolutionModePtrType
}

func (in *conflictResolutionModePtr) ToConflictResolutionModePtrOutput() ConflictResolutionModePtrOutput {
	return pulumi.ToOutput(in).(ConflictResolutionModePtrOutput)
}

func (in *conflictResolutionModePtr) ToConflictResolutionModePtrOutputWithContext(ctx context.Context) ConflictResolutionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConflictResolutionModePtrOutput)
}

// The cassandra connector offer type for the Cosmos DB database C* account.
type ConnectorOffer string

const (
	ConnectorOfferSmall = ConnectorOffer("Small")
)

func (ConnectorOffer) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorOffer)(nil)).Elem()
}

func (e ConnectorOffer) ToConnectorOfferOutput() ConnectorOfferOutput {
	return pulumi.ToOutput(e).(ConnectorOfferOutput)
}

func (e ConnectorOffer) ToConnectorOfferOutputWithContext(ctx context.Context) ConnectorOfferOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectorOfferOutput)
}

func (e ConnectorOffer) ToConnectorOfferPtrOutput() ConnectorOfferPtrOutput {
	return e.ToConnectorOfferPtrOutputWithContext(context.Background())
}

func (e ConnectorOffer) ToConnectorOfferPtrOutputWithContext(ctx context.Context) ConnectorOfferPtrOutput {
	return ConnectorOffer(e).ToConnectorOfferOutputWithContext(ctx).ToConnectorOfferPtrOutputWithContext(ctx)
}

func (e ConnectorOffer) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorOffer) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectorOffer) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectorOffer) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectorOfferOutput struct{ *pulumi.OutputState }

func (ConnectorOfferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorOffer)(nil)).Elem()
}

func (o ConnectorOfferOutput) ToConnectorOfferOutput() ConnectorOfferOutput {
	return o
}

func (o ConnectorOfferOutput) ToConnectorOfferOutputWithContext(ctx context.Context) ConnectorOfferOutput {
	return o
}

func (o ConnectorOfferOutput) ToConnectorOfferPtrOutput() ConnectorOfferPtrOutput {
	return o.ToConnectorOfferPtrOutputWithContext(context.Background())
}

func (o ConnectorOfferOutput) ToConnectorOfferPtrOutputWithContext(ctx context.Context) ConnectorOfferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorOffer) *ConnectorOffer {
		return &v
	}).(ConnectorOfferPtrOutput)
}

func (o ConnectorOfferOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectorOfferOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorOffer) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectorOfferOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorOfferOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectorOffer) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectorOfferPtrOutput struct{ *pulumi.OutputState }

func (ConnectorOfferPtrOutput) ElementType() reflect.Type {
	return connectorOfferPtrType
}

func (o ConnectorOfferPtrOutput) ToConnectorOfferPtrOutput() ConnectorOfferPtrOutput {
	return o
}

func (o ConnectorOfferPtrOutput) ToConnectorOfferPtrOutputWithContext(ctx context.Context) ConnectorOfferPtrOutput {
	return o
}

func (o ConnectorOfferPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectorOfferPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectorOffer) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorOfferPtrOutput) Elem() ConnectorOfferOutput {
	return o.ApplyT(func(v *ConnectorOffer) ConnectorOffer {
		var ret ConnectorOffer
		if v != nil {
			ret = *v
		}
		return ret
	}).(ConnectorOfferOutput)
}

// ConnectorOfferInput is an input type that accepts ConnectorOfferArgs and ConnectorOfferOutput values.
// You can construct a concrete instance of `ConnectorOfferInput` via:
//
//          ConnectorOfferArgs{...}
type ConnectorOfferInput interface {
	pulumi.Input

	ToConnectorOfferOutput() ConnectorOfferOutput
	ToConnectorOfferOutputWithContext(context.Context) ConnectorOfferOutput
}

var connectorOfferPtrType = reflect.TypeOf((**ConnectorOffer)(nil)).Elem()

type ConnectorOfferPtrInput interface {
	pulumi.Input

	ToConnectorOfferPtrOutput() ConnectorOfferPtrOutput
	ToConnectorOfferPtrOutputWithContext(context.Context) ConnectorOfferPtrOutput
}

type connectorOfferPtr string

func ConnectorOfferPtr(v string) ConnectorOfferPtrInput {
	return (*connectorOfferPtr)(&v)
}

func (*connectorOfferPtr) ElementType() reflect.Type {
	return connectorOfferPtrType
}

func (in *connectorOfferPtr) ToConnectorOfferPtrOutput() ConnectorOfferPtrOutput {
	return pulumi.ToOutput(in).(ConnectorOfferPtrOutput)
}

func (in *connectorOfferPtr) ToConnectorOfferPtrOutputWithContext(ctx context.Context) ConnectorOfferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectorOfferPtrOutput)
}

// The datatype for which the indexing behavior is applied to.
type DataType string

const (
	DataTypeString       = DataType("String")
	DataTypeNumber       = DataType("Number")
	DataTypePoint        = DataType("Point")
	DataTypePolygon      = DataType("Polygon")
	DataTypeLineString   = DataType("LineString")
	DataTypeMultiPolygon = DataType("MultiPolygon")
)

func (DataType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (e DataType) ToDataTypeOutput() DataTypeOutput {
	return pulumi.ToOutput(e).(DataTypeOutput)
}

func (e DataType) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataTypeOutput)
}

func (e DataType) ToDataTypePtrOutput() DataTypePtrOutput {
	return e.ToDataTypePtrOutputWithContext(context.Background())
}

func (e DataType) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return DataType(e).ToDataTypeOutputWithContext(ctx).ToDataTypePtrOutputWithContext(ctx)
}

func (e DataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataTypeOutput struct{ *pulumi.OutputState }

func (DataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataType)(nil)).Elem()
}

func (o DataTypeOutput) ToDataTypeOutput() DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypeOutputWithContext(ctx context.Context) DataTypeOutput {
	return o
}

func (o DataTypeOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o.ToDataTypePtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataType) *DataType {
		return &v
	}).(DataTypePtrOutput)
}

func (o DataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataTypePtrOutput struct{ *pulumi.OutputState }

func (DataTypePtrOutput) ElementType() reflect.Type {
	return dataTypePtrType
}

func (o DataTypePtrOutput) ToDataTypePtrOutput() DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return o
}

func (o DataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DataTypePtrOutput) Elem() DataTypeOutput {
	return o.ApplyT(func(v *DataType) DataType {
		var ret DataType
		if v != nil {
			ret = *v
		}
		return ret
	}).(DataTypeOutput)
}

// DataTypeInput is an input type that accepts DataTypeArgs and DataTypeOutput values.
// You can construct a concrete instance of `DataTypeInput` via:
//
//          DataTypeArgs{...}
type DataTypeInput interface {
	pulumi.Input

	ToDataTypeOutput() DataTypeOutput
	ToDataTypeOutputWithContext(context.Context) DataTypeOutput
}

var dataTypePtrType = reflect.TypeOf((**DataType)(nil)).Elem()

type DataTypePtrInput interface {
	pulumi.Input

	ToDataTypePtrOutput() DataTypePtrOutput
	ToDataTypePtrOutputWithContext(context.Context) DataTypePtrOutput
}

type dataTypePtr string

func DataTypePtr(v string) DataTypePtrInput {
	return (*dataTypePtr)(&v)
}

func (*dataTypePtr) ElementType() reflect.Type {
	return dataTypePtrType
}

func (in *dataTypePtr) ToDataTypePtrOutput() DataTypePtrOutput {
	return pulumi.ToOutput(in).(DataTypePtrOutput)
}

func (in *dataTypePtr) ToDataTypePtrOutputWithContext(ctx context.Context) DataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataTypePtrOutput)
}

// Indicates the type of database account. This can only be set at database account creation.
type DatabaseAccountKind string

const (
	DatabaseAccountKindGlobalDocumentDB = DatabaseAccountKind("GlobalDocumentDB")
	DatabaseAccountKindMongoDB          = DatabaseAccountKind("MongoDB")
	DatabaseAccountKindParse            = DatabaseAccountKind("Parse")
)

func (DatabaseAccountKind) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountKind)(nil)).Elem()
}

func (e DatabaseAccountKind) ToDatabaseAccountKindOutput() DatabaseAccountKindOutput {
	return pulumi.ToOutput(e).(DatabaseAccountKindOutput)
}

func (e DatabaseAccountKind) ToDatabaseAccountKindOutputWithContext(ctx context.Context) DatabaseAccountKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseAccountKindOutput)
}

func (e DatabaseAccountKind) ToDatabaseAccountKindPtrOutput() DatabaseAccountKindPtrOutput {
	return e.ToDatabaseAccountKindPtrOutputWithContext(context.Background())
}

func (e DatabaseAccountKind) ToDatabaseAccountKindPtrOutputWithContext(ctx context.Context) DatabaseAccountKindPtrOutput {
	return DatabaseAccountKind(e).ToDatabaseAccountKindOutputWithContext(ctx).ToDatabaseAccountKindPtrOutputWithContext(ctx)
}

func (e DatabaseAccountKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseAccountKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseAccountKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseAccountKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseAccountKindOutput struct{ *pulumi.OutputState }

func (DatabaseAccountKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountKind)(nil)).Elem()
}

func (o DatabaseAccountKindOutput) ToDatabaseAccountKindOutput() DatabaseAccountKindOutput {
	return o
}

func (o DatabaseAccountKindOutput) ToDatabaseAccountKindOutputWithContext(ctx context.Context) DatabaseAccountKindOutput {
	return o
}

func (o DatabaseAccountKindOutput) ToDatabaseAccountKindPtrOutput() DatabaseAccountKindPtrOutput {
	return o.ToDatabaseAccountKindPtrOutputWithContext(context.Background())
}

func (o DatabaseAccountKindOutput) ToDatabaseAccountKindPtrOutputWithContext(ctx context.Context) DatabaseAccountKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseAccountKind) *DatabaseAccountKind {
		return &v
	}).(DatabaseAccountKindPtrOutput)
}

func (o DatabaseAccountKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseAccountKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseAccountKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseAccountKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseAccountKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseAccountKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseAccountKindPtrOutput struct{ *pulumi.OutputState }

func (DatabaseAccountKindPtrOutput) ElementType() reflect.Type {
	return databaseAccountKindPtrType
}

func (o DatabaseAccountKindPtrOutput) ToDatabaseAccountKindPtrOutput() DatabaseAccountKindPtrOutput {
	return o
}

func (o DatabaseAccountKindPtrOutput) ToDatabaseAccountKindPtrOutputWithContext(ctx context.Context) DatabaseAccountKindPtrOutput {
	return o
}

func (o DatabaseAccountKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseAccountKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseAccountKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseAccountKindPtrOutput) Elem() DatabaseAccountKindOutput {
	return o.ApplyT(func(v *DatabaseAccountKind) DatabaseAccountKind {
		var ret DatabaseAccountKind
		if v != nil {
			ret = *v
		}
		return ret
	}).(DatabaseAccountKindOutput)
}

// DatabaseAccountKindInput is an input type that accepts DatabaseAccountKindArgs and DatabaseAccountKindOutput values.
// You can construct a concrete instance of `DatabaseAccountKindInput` via:
//
//          DatabaseAccountKindArgs{...}
type DatabaseAccountKindInput interface {
	pulumi.Input

	ToDatabaseAccountKindOutput() DatabaseAccountKindOutput
	ToDatabaseAccountKindOutputWithContext(context.Context) DatabaseAccountKindOutput
}

var databaseAccountKindPtrType = reflect.TypeOf((**DatabaseAccountKind)(nil)).Elem()

type DatabaseAccountKindPtrInput interface {
	pulumi.Input

	ToDatabaseAccountKindPtrOutput() DatabaseAccountKindPtrOutput
	ToDatabaseAccountKindPtrOutputWithContext(context.Context) DatabaseAccountKindPtrOutput
}

type databaseAccountKindPtr string

func DatabaseAccountKindPtr(v string) DatabaseAccountKindPtrInput {
	return (*databaseAccountKindPtr)(&v)
}

func (*databaseAccountKindPtr) ElementType() reflect.Type {
	return databaseAccountKindPtrType
}

func (in *databaseAccountKindPtr) ToDatabaseAccountKindPtrOutput() DatabaseAccountKindPtrOutput {
	return pulumi.ToOutput(in).(DatabaseAccountKindPtrOutput)
}

func (in *databaseAccountKindPtr) ToDatabaseAccountKindPtrOutputWithContext(ctx context.Context) DatabaseAccountKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseAccountKindPtrOutput)
}

// The offer type for the database
type DatabaseAccountOfferType string

const (
	DatabaseAccountOfferTypeStandard = DatabaseAccountOfferType("Standard")
)

func (DatabaseAccountOfferType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountOfferType)(nil)).Elem()
}

func (e DatabaseAccountOfferType) ToDatabaseAccountOfferTypeOutput() DatabaseAccountOfferTypeOutput {
	return pulumi.ToOutput(e).(DatabaseAccountOfferTypeOutput)
}

func (e DatabaseAccountOfferType) ToDatabaseAccountOfferTypeOutputWithContext(ctx context.Context) DatabaseAccountOfferTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatabaseAccountOfferTypeOutput)
}

func (e DatabaseAccountOfferType) ToDatabaseAccountOfferTypePtrOutput() DatabaseAccountOfferTypePtrOutput {
	return e.ToDatabaseAccountOfferTypePtrOutputWithContext(context.Background())
}

func (e DatabaseAccountOfferType) ToDatabaseAccountOfferTypePtrOutputWithContext(ctx context.Context) DatabaseAccountOfferTypePtrOutput {
	return DatabaseAccountOfferType(e).ToDatabaseAccountOfferTypeOutputWithContext(ctx).ToDatabaseAccountOfferTypePtrOutputWithContext(ctx)
}

func (e DatabaseAccountOfferType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseAccountOfferType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatabaseAccountOfferType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatabaseAccountOfferType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatabaseAccountOfferTypeOutput struct{ *pulumi.OutputState }

func (DatabaseAccountOfferTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAccountOfferType)(nil)).Elem()
}

func (o DatabaseAccountOfferTypeOutput) ToDatabaseAccountOfferTypeOutput() DatabaseAccountOfferTypeOutput {
	return o
}

func (o DatabaseAccountOfferTypeOutput) ToDatabaseAccountOfferTypeOutputWithContext(ctx context.Context) DatabaseAccountOfferTypeOutput {
	return o
}

func (o DatabaseAccountOfferTypeOutput) ToDatabaseAccountOfferTypePtrOutput() DatabaseAccountOfferTypePtrOutput {
	return o.ToDatabaseAccountOfferTypePtrOutputWithContext(context.Background())
}

func (o DatabaseAccountOfferTypeOutput) ToDatabaseAccountOfferTypePtrOutputWithContext(ctx context.Context) DatabaseAccountOfferTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseAccountOfferType) *DatabaseAccountOfferType {
		return &v
	}).(DatabaseAccountOfferTypePtrOutput)
}

func (o DatabaseAccountOfferTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatabaseAccountOfferTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseAccountOfferType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatabaseAccountOfferTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseAccountOfferTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatabaseAccountOfferType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatabaseAccountOfferTypePtrOutput struct{ *pulumi.OutputState }

func (DatabaseAccountOfferTypePtrOutput) ElementType() reflect.Type {
	return databaseAccountOfferTypePtrType
}

func (o DatabaseAccountOfferTypePtrOutput) ToDatabaseAccountOfferTypePtrOutput() DatabaseAccountOfferTypePtrOutput {
	return o
}

func (o DatabaseAccountOfferTypePtrOutput) ToDatabaseAccountOfferTypePtrOutputWithContext(ctx context.Context) DatabaseAccountOfferTypePtrOutput {
	return o
}

func (o DatabaseAccountOfferTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatabaseAccountOfferTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatabaseAccountOfferType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseAccountOfferTypePtrOutput) Elem() DatabaseAccountOfferTypeOutput {
	return o.ApplyT(func(v *DatabaseAccountOfferType) DatabaseAccountOfferType {
		var ret DatabaseAccountOfferType
		if v != nil {
			ret = *v
		}
		return ret
	}).(DatabaseAccountOfferTypeOutput)
}

// DatabaseAccountOfferTypeInput is an input type that accepts DatabaseAccountOfferTypeArgs and DatabaseAccountOfferTypeOutput values.
// You can construct a concrete instance of `DatabaseAccountOfferTypeInput` via:
//
//          DatabaseAccountOfferTypeArgs{...}
type DatabaseAccountOfferTypeInput interface {
	pulumi.Input

	ToDatabaseAccountOfferTypeOutput() DatabaseAccountOfferTypeOutput
	ToDatabaseAccountOfferTypeOutputWithContext(context.Context) DatabaseAccountOfferTypeOutput
}

var databaseAccountOfferTypePtrType = reflect.TypeOf((**DatabaseAccountOfferType)(nil)).Elem()

type DatabaseAccountOfferTypePtrInput interface {
	pulumi.Input

	ToDatabaseAccountOfferTypePtrOutput() DatabaseAccountOfferTypePtrOutput
	ToDatabaseAccountOfferTypePtrOutputWithContext(context.Context) DatabaseAccountOfferTypePtrOutput
}

type databaseAccountOfferTypePtr string

func DatabaseAccountOfferTypePtr(v string) DatabaseAccountOfferTypePtrInput {
	return (*databaseAccountOfferTypePtr)(&v)
}

func (*databaseAccountOfferTypePtr) ElementType() reflect.Type {
	return databaseAccountOfferTypePtrType
}

func (in *databaseAccountOfferTypePtr) ToDatabaseAccountOfferTypePtrOutput() DatabaseAccountOfferTypePtrOutput {
	return pulumi.ToOutput(in).(DatabaseAccountOfferTypePtrOutput)
}

func (in *databaseAccountOfferTypePtr) ToDatabaseAccountOfferTypePtrOutputWithContext(ctx context.Context) DatabaseAccountOfferTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatabaseAccountOfferTypePtrOutput)
}

// The default consistency level and configuration settings of the Cosmos DB account.
type DefaultConsistencyLevel string

const (
	DefaultConsistencyLevelEventual         = DefaultConsistencyLevel("Eventual")
	DefaultConsistencyLevelSession          = DefaultConsistencyLevel("Session")
	DefaultConsistencyLevelBoundedStaleness = DefaultConsistencyLevel("BoundedStaleness")
	DefaultConsistencyLevelStrong           = DefaultConsistencyLevel("Strong")
	DefaultConsistencyLevelConsistentPrefix = DefaultConsistencyLevel("ConsistentPrefix")
)

func (DefaultConsistencyLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultConsistencyLevel)(nil)).Elem()
}

func (e DefaultConsistencyLevel) ToDefaultConsistencyLevelOutput() DefaultConsistencyLevelOutput {
	return pulumi.ToOutput(e).(DefaultConsistencyLevelOutput)
}

func (e DefaultConsistencyLevel) ToDefaultConsistencyLevelOutputWithContext(ctx context.Context) DefaultConsistencyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DefaultConsistencyLevelOutput)
}

func (e DefaultConsistencyLevel) ToDefaultConsistencyLevelPtrOutput() DefaultConsistencyLevelPtrOutput {
	return e.ToDefaultConsistencyLevelPtrOutputWithContext(context.Background())
}

func (e DefaultConsistencyLevel) ToDefaultConsistencyLevelPtrOutputWithContext(ctx context.Context) DefaultConsistencyLevelPtrOutput {
	return DefaultConsistencyLevel(e).ToDefaultConsistencyLevelOutputWithContext(ctx).ToDefaultConsistencyLevelPtrOutputWithContext(ctx)
}

func (e DefaultConsistencyLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultConsistencyLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DefaultConsistencyLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DefaultConsistencyLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DefaultConsistencyLevelOutput struct{ *pulumi.OutputState }

func (DefaultConsistencyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultConsistencyLevel)(nil)).Elem()
}

func (o DefaultConsistencyLevelOutput) ToDefaultConsistencyLevelOutput() DefaultConsistencyLevelOutput {
	return o
}

func (o DefaultConsistencyLevelOutput) ToDefaultConsistencyLevelOutputWithContext(ctx context.Context) DefaultConsistencyLevelOutput {
	return o
}

func (o DefaultConsistencyLevelOutput) ToDefaultConsistencyLevelPtrOutput() DefaultConsistencyLevelPtrOutput {
	return o.ToDefaultConsistencyLevelPtrOutputWithContext(context.Background())
}

func (o DefaultConsistencyLevelOutput) ToDefaultConsistencyLevelPtrOutputWithContext(ctx context.Context) DefaultConsistencyLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DefaultConsistencyLevel) *DefaultConsistencyLevel {
		return &v
	}).(DefaultConsistencyLevelPtrOutput)
}

func (o DefaultConsistencyLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DefaultConsistencyLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultConsistencyLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DefaultConsistencyLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultConsistencyLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DefaultConsistencyLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DefaultConsistencyLevelPtrOutput struct{ *pulumi.OutputState }

func (DefaultConsistencyLevelPtrOutput) ElementType() reflect.Type {
	return defaultConsistencyLevelPtrType
}

func (o DefaultConsistencyLevelPtrOutput) ToDefaultConsistencyLevelPtrOutput() DefaultConsistencyLevelPtrOutput {
	return o
}

func (o DefaultConsistencyLevelPtrOutput) ToDefaultConsistencyLevelPtrOutputWithContext(ctx context.Context) DefaultConsistencyLevelPtrOutput {
	return o
}

func (o DefaultConsistencyLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DefaultConsistencyLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DefaultConsistencyLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o DefaultConsistencyLevelPtrOutput) Elem() DefaultConsistencyLevelOutput {
	return o.ApplyT(func(v *DefaultConsistencyLevel) DefaultConsistencyLevel {
		var ret DefaultConsistencyLevel
		if v != nil {
			ret = *v
		}
		return ret
	}).(DefaultConsistencyLevelOutput)
}

// DefaultConsistencyLevelInput is an input type that accepts DefaultConsistencyLevelArgs and DefaultConsistencyLevelOutput values.
// You can construct a concrete instance of `DefaultConsistencyLevelInput` via:
//
//          DefaultConsistencyLevelArgs{...}
type DefaultConsistencyLevelInput interface {
	pulumi.Input

	ToDefaultConsistencyLevelOutput() DefaultConsistencyLevelOutput
	ToDefaultConsistencyLevelOutputWithContext(context.Context) DefaultConsistencyLevelOutput
}

var defaultConsistencyLevelPtrType = reflect.TypeOf((**DefaultConsistencyLevel)(nil)).Elem()

type DefaultConsistencyLevelPtrInput interface {
	pulumi.Input

	ToDefaultConsistencyLevelPtrOutput() DefaultConsistencyLevelPtrOutput
	ToDefaultConsistencyLevelPtrOutputWithContext(context.Context) DefaultConsistencyLevelPtrOutput
}

type defaultConsistencyLevelPtr string

func DefaultConsistencyLevelPtr(v string) DefaultConsistencyLevelPtrInput {
	return (*defaultConsistencyLevelPtr)(&v)
}

func (*defaultConsistencyLevelPtr) ElementType() reflect.Type {
	return defaultConsistencyLevelPtrType
}

func (in *defaultConsistencyLevelPtr) ToDefaultConsistencyLevelPtrOutput() DefaultConsistencyLevelPtrOutput {
	return pulumi.ToOutput(in).(DefaultConsistencyLevelPtrOutput)
}

func (in *defaultConsistencyLevelPtr) ToDefaultConsistencyLevelPtrOutputWithContext(ctx context.Context) DefaultConsistencyLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DefaultConsistencyLevelPtrOutput)
}

// Indicates the type of index.
type IndexKind string

const (
	IndexKindHash    = IndexKind("Hash")
	IndexKindRange   = IndexKind("Range")
	IndexKindSpatial = IndexKind("Spatial")
)

func (IndexKind) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexKind)(nil)).Elem()
}

func (e IndexKind) ToIndexKindOutput() IndexKindOutput {
	return pulumi.ToOutput(e).(IndexKindOutput)
}

func (e IndexKind) ToIndexKindOutputWithContext(ctx context.Context) IndexKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexKindOutput)
}

func (e IndexKind) ToIndexKindPtrOutput() IndexKindPtrOutput {
	return e.ToIndexKindPtrOutputWithContext(context.Background())
}

func (e IndexKind) ToIndexKindPtrOutputWithContext(ctx context.Context) IndexKindPtrOutput {
	return IndexKind(e).ToIndexKindOutputWithContext(ctx).ToIndexKindPtrOutputWithContext(ctx)
}

func (e IndexKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexKindOutput struct{ *pulumi.OutputState }

func (IndexKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexKind)(nil)).Elem()
}

func (o IndexKindOutput) ToIndexKindOutput() IndexKindOutput {
	return o
}

func (o IndexKindOutput) ToIndexKindOutputWithContext(ctx context.Context) IndexKindOutput {
	return o
}

func (o IndexKindOutput) ToIndexKindPtrOutput() IndexKindPtrOutput {
	return o.ToIndexKindPtrOutputWithContext(context.Background())
}

func (o IndexKindOutput) ToIndexKindPtrOutputWithContext(ctx context.Context) IndexKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexKind) *IndexKind {
		return &v
	}).(IndexKindPtrOutput)
}

func (o IndexKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexKindPtrOutput struct{ *pulumi.OutputState }

func (IndexKindPtrOutput) ElementType() reflect.Type {
	return indexKindPtrType
}

func (o IndexKindPtrOutput) ToIndexKindPtrOutput() IndexKindPtrOutput {
	return o
}

func (o IndexKindPtrOutput) ToIndexKindPtrOutputWithContext(ctx context.Context) IndexKindPtrOutput {
	return o
}

func (o IndexKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o IndexKindPtrOutput) Elem() IndexKindOutput {
	return o.ApplyT(func(v *IndexKind) IndexKind {
		var ret IndexKind
		if v != nil {
			ret = *v
		}
		return ret
	}).(IndexKindOutput)
}

// IndexKindInput is an input type that accepts IndexKindArgs and IndexKindOutput values.
// You can construct a concrete instance of `IndexKindInput` via:
//
//          IndexKindArgs{...}
type IndexKindInput interface {
	pulumi.Input

	ToIndexKindOutput() IndexKindOutput
	ToIndexKindOutputWithContext(context.Context) IndexKindOutput
}

var indexKindPtrType = reflect.TypeOf((**IndexKind)(nil)).Elem()

type IndexKindPtrInput interface {
	pulumi.Input

	ToIndexKindPtrOutput() IndexKindPtrOutput
	ToIndexKindPtrOutputWithContext(context.Context) IndexKindPtrOutput
}

type indexKindPtr string

func IndexKindPtr(v string) IndexKindPtrInput {
	return (*indexKindPtr)(&v)
}

func (*indexKindPtr) ElementType() reflect.Type {
	return indexKindPtrType
}

func (in *indexKindPtr) ToIndexKindPtrOutput() IndexKindPtrOutput {
	return pulumi.ToOutput(in).(IndexKindPtrOutput)
}

func (in *indexKindPtr) ToIndexKindPtrOutputWithContext(ctx context.Context) IndexKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexKindPtrOutput)
}

// Indicates the indexing mode.
type IndexingMode string

const (
	IndexingModeConsistent = IndexingMode("consistent")
	IndexingModeLazy       = IndexingMode("lazy")
	IndexingModeNone       = IndexingMode("none")
)

func (IndexingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingMode)(nil)).Elem()
}

func (e IndexingMode) ToIndexingModeOutput() IndexingModeOutput {
	return pulumi.ToOutput(e).(IndexingModeOutput)
}

func (e IndexingMode) ToIndexingModeOutputWithContext(ctx context.Context) IndexingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexingModeOutput)
}

func (e IndexingMode) ToIndexingModePtrOutput() IndexingModePtrOutput {
	return e.ToIndexingModePtrOutputWithContext(context.Background())
}

func (e IndexingMode) ToIndexingModePtrOutputWithContext(ctx context.Context) IndexingModePtrOutput {
	return IndexingMode(e).ToIndexingModeOutputWithContext(ctx).ToIndexingModePtrOutputWithContext(ctx)
}

func (e IndexingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexingModeOutput struct{ *pulumi.OutputState }

func (IndexingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexingMode)(nil)).Elem()
}

func (o IndexingModeOutput) ToIndexingModeOutput() IndexingModeOutput {
	return o
}

func (o IndexingModeOutput) ToIndexingModeOutputWithContext(ctx context.Context) IndexingModeOutput {
	return o
}

func (o IndexingModeOutput) ToIndexingModePtrOutput() IndexingModePtrOutput {
	return o.ToIndexingModePtrOutputWithContext(context.Background())
}

func (o IndexingModeOutput) ToIndexingModePtrOutputWithContext(ctx context.Context) IndexingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexingMode) *IndexingMode {
		return &v
	}).(IndexingModePtrOutput)
}

func (o IndexingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexingModePtrOutput struct{ *pulumi.OutputState }

func (IndexingModePtrOutput) ElementType() reflect.Type {
	return indexingModePtrType
}

func (o IndexingModePtrOutput) ToIndexingModePtrOutput() IndexingModePtrOutput {
	return o
}

func (o IndexingModePtrOutput) ToIndexingModePtrOutputWithContext(ctx context.Context) IndexingModePtrOutput {
	return o
}

func (o IndexingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o IndexingModePtrOutput) Elem() IndexingModeOutput {
	return o.ApplyT(func(v *IndexingMode) IndexingMode {
		var ret IndexingMode
		if v != nil {
			ret = *v
		}
		return ret
	}).(IndexingModeOutput)
}

// IndexingModeInput is an input type that accepts IndexingModeArgs and IndexingModeOutput values.
// You can construct a concrete instance of `IndexingModeInput` via:
//
//          IndexingModeArgs{...}
type IndexingModeInput interface {
	pulumi.Input

	ToIndexingModeOutput() IndexingModeOutput
	ToIndexingModeOutputWithContext(context.Context) IndexingModeOutput
}

var indexingModePtrType = reflect.TypeOf((**IndexingMode)(nil)).Elem()

type IndexingModePtrInput interface {
	pulumi.Input

	ToIndexingModePtrOutput() IndexingModePtrOutput
	ToIndexingModePtrOutputWithContext(context.Context) IndexingModePtrOutput
}

type indexingModePtr string

func IndexingModePtr(v string) IndexingModePtrInput {
	return (*indexingModePtr)(&v)
}

func (*indexingModePtr) ElementType() reflect.Type {
	return indexingModePtrType
}

func (in *indexingModePtr) ToIndexingModePtrOutput() IndexingModePtrOutput {
	return pulumi.ToOutput(in).(IndexingModePtrOutput)
}

func (in *indexingModePtr) ToIndexingModePtrOutputWithContext(ctx context.Context) IndexingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexingModePtrOutput)
}

// The status of the resource at the time the operation was called.
type ManagedCassandraProvisioningState string

const (
	ManagedCassandraProvisioningStateCreating  = ManagedCassandraProvisioningState("Creating")
	ManagedCassandraProvisioningStateUpdating  = ManagedCassandraProvisioningState("Updating")
	ManagedCassandraProvisioningStateDeleting  = ManagedCassandraProvisioningState("Deleting")
	ManagedCassandraProvisioningStateSucceeded = ManagedCassandraProvisioningState("Succeeded")
	ManagedCassandraProvisioningStateFailed    = ManagedCassandraProvisioningState("Failed")
	ManagedCassandraProvisioningStateCanceled  = ManagedCassandraProvisioningState("Canceled")
)

func (ManagedCassandraProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCassandraProvisioningState)(nil)).Elem()
}

func (e ManagedCassandraProvisioningState) ToManagedCassandraProvisioningStateOutput() ManagedCassandraProvisioningStateOutput {
	return pulumi.ToOutput(e).(ManagedCassandraProvisioningStateOutput)
}

func (e ManagedCassandraProvisioningState) ToManagedCassandraProvisioningStateOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ManagedCassandraProvisioningStateOutput)
}

func (e ManagedCassandraProvisioningState) ToManagedCassandraProvisioningStatePtrOutput() ManagedCassandraProvisioningStatePtrOutput {
	return e.ToManagedCassandraProvisioningStatePtrOutputWithContext(context.Background())
}

func (e ManagedCassandraProvisioningState) ToManagedCassandraProvisioningStatePtrOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStatePtrOutput {
	return ManagedCassandraProvisioningState(e).ToManagedCassandraProvisioningStateOutputWithContext(ctx).ToManagedCassandraProvisioningStatePtrOutputWithContext(ctx)
}

func (e ManagedCassandraProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedCassandraProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ManagedCassandraProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ManagedCassandraProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ManagedCassandraProvisioningStateOutput struct{ *pulumi.OutputState }

func (ManagedCassandraProvisioningStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedCassandraProvisioningState)(nil)).Elem()
}

func (o ManagedCassandraProvisioningStateOutput) ToManagedCassandraProvisioningStateOutput() ManagedCassandraProvisioningStateOutput {
	return o
}

func (o ManagedCassandraProvisioningStateOutput) ToManagedCassandraProvisioningStateOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStateOutput {
	return o
}

func (o ManagedCassandraProvisioningStateOutput) ToManagedCassandraProvisioningStatePtrOutput() ManagedCassandraProvisioningStatePtrOutput {
	return o.ToManagedCassandraProvisioningStatePtrOutputWithContext(context.Background())
}

func (o ManagedCassandraProvisioningStateOutput) ToManagedCassandraProvisioningStatePtrOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedCassandraProvisioningState) *ManagedCassandraProvisioningState {
		return &v
	}).(ManagedCassandraProvisioningStatePtrOutput)
}

func (o ManagedCassandraProvisioningStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ManagedCassandraProvisioningStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedCassandraProvisioningState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ManagedCassandraProvisioningStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedCassandraProvisioningStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ManagedCassandraProvisioningState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ManagedCassandraProvisioningStatePtrOutput struct{ *pulumi.OutputState }

func (ManagedCassandraProvisioningStatePtrOutput) ElementType() reflect.Type {
	return managedCassandraProvisioningStatePtrType
}

func (o ManagedCassandraProvisioningStatePtrOutput) ToManagedCassandraProvisioningStatePtrOutput() ManagedCassandraProvisioningStatePtrOutput {
	return o
}

func (o ManagedCassandraProvisioningStatePtrOutput) ToManagedCassandraProvisioningStatePtrOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStatePtrOutput {
	return o
}

func (o ManagedCassandraProvisioningStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ManagedCassandraProvisioningStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ManagedCassandraProvisioningState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ManagedCassandraProvisioningStatePtrOutput) Elem() ManagedCassandraProvisioningStateOutput {
	return o.ApplyT(func(v *ManagedCassandraProvisioningState) ManagedCassandraProvisioningState {
		var ret ManagedCassandraProvisioningState
		if v != nil {
			ret = *v
		}
		return ret
	}).(ManagedCassandraProvisioningStateOutput)
}

// ManagedCassandraProvisioningStateInput is an input type that accepts ManagedCassandraProvisioningStateArgs and ManagedCassandraProvisioningStateOutput values.
// You can construct a concrete instance of `ManagedCassandraProvisioningStateInput` via:
//
//          ManagedCassandraProvisioningStateArgs{...}
type ManagedCassandraProvisioningStateInput interface {
	pulumi.Input

	ToManagedCassandraProvisioningStateOutput() ManagedCassandraProvisioningStateOutput
	ToManagedCassandraProvisioningStateOutputWithContext(context.Context) ManagedCassandraProvisioningStateOutput
}

var managedCassandraProvisioningStatePtrType = reflect.TypeOf((**ManagedCassandraProvisioningState)(nil)).Elem()

type ManagedCassandraProvisioningStatePtrInput interface {
	pulumi.Input

	ToManagedCassandraProvisioningStatePtrOutput() ManagedCassandraProvisioningStatePtrOutput
	ToManagedCassandraProvisioningStatePtrOutputWithContext(context.Context) ManagedCassandraProvisioningStatePtrOutput
}

type managedCassandraProvisioningStatePtr string

func ManagedCassandraProvisioningStatePtr(v string) ManagedCassandraProvisioningStatePtrInput {
	return (*managedCassandraProvisioningStatePtr)(&v)
}

func (*managedCassandraProvisioningStatePtr) ElementType() reflect.Type {
	return managedCassandraProvisioningStatePtrType
}

func (in *managedCassandraProvisioningStatePtr) ToManagedCassandraProvisioningStatePtrOutput() ManagedCassandraProvisioningStatePtrOutput {
	return pulumi.ToOutput(in).(ManagedCassandraProvisioningStatePtrOutput)
}

func (in *managedCassandraProvisioningStatePtr) ToManagedCassandraProvisioningStatePtrOutputWithContext(ctx context.Context) ManagedCassandraProvisioningStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ManagedCassandraProvisioningStatePtrOutput)
}

// Indicates what services are allowed to bypass firewall checks.
type NetworkAclBypass string

const (
	NetworkAclBypassNone          = NetworkAclBypass("None")
	NetworkAclBypassAzureServices = NetworkAclBypass("AzureServices")
)

func (NetworkAclBypass) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclBypass)(nil)).Elem()
}

func (e NetworkAclBypass) ToNetworkAclBypassOutput() NetworkAclBypassOutput {
	return pulumi.ToOutput(e).(NetworkAclBypassOutput)
}

func (e NetworkAclBypass) ToNetworkAclBypassOutputWithContext(ctx context.Context) NetworkAclBypassOutput {
	return pulumi.ToOutputWithContext(ctx, e).(NetworkAclBypassOutput)
}

func (e NetworkAclBypass) ToNetworkAclBypassPtrOutput() NetworkAclBypassPtrOutput {
	return e.ToNetworkAclBypassPtrOutputWithContext(context.Background())
}

func (e NetworkAclBypass) ToNetworkAclBypassPtrOutputWithContext(ctx context.Context) NetworkAclBypassPtrOutput {
	return NetworkAclBypass(e).ToNetworkAclBypassOutputWithContext(ctx).ToNetworkAclBypassPtrOutputWithContext(ctx)
}

func (e NetworkAclBypass) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkAclBypass) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkAclBypass) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkAclBypass) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type NetworkAclBypassOutput struct{ *pulumi.OutputState }

func (NetworkAclBypassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclBypass)(nil)).Elem()
}

func (o NetworkAclBypassOutput) ToNetworkAclBypassOutput() NetworkAclBypassOutput {
	return o
}

func (o NetworkAclBypassOutput) ToNetworkAclBypassOutputWithContext(ctx context.Context) NetworkAclBypassOutput {
	return o
}

func (o NetworkAclBypassOutput) ToNetworkAclBypassPtrOutput() NetworkAclBypassPtrOutput {
	return o.ToNetworkAclBypassPtrOutputWithContext(context.Background())
}

func (o NetworkAclBypassOutput) ToNetworkAclBypassPtrOutputWithContext(ctx context.Context) NetworkAclBypassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkAclBypass) *NetworkAclBypass {
		return &v
	}).(NetworkAclBypassPtrOutput)
}

func (o NetworkAclBypassOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkAclBypassOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkAclBypass) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkAclBypassOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkAclBypassOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkAclBypass) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkAclBypassPtrOutput struct{ *pulumi.OutputState }

func (NetworkAclBypassPtrOutput) ElementType() reflect.Type {
	return networkAclBypassPtrType
}

func (o NetworkAclBypassPtrOutput) ToNetworkAclBypassPtrOutput() NetworkAclBypassPtrOutput {
	return o
}

func (o NetworkAclBypassPtrOutput) ToNetworkAclBypassPtrOutputWithContext(ctx context.Context) NetworkAclBypassPtrOutput {
	return o
}

func (o NetworkAclBypassPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkAclBypassPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkAclBypass) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o NetworkAclBypassPtrOutput) Elem() NetworkAclBypassOutput {
	return o.ApplyT(func(v *NetworkAclBypass) NetworkAclBypass {
		var ret NetworkAclBypass
		if v != nil {
			ret = *v
		}
		return ret
	}).(NetworkAclBypassOutput)
}

// NetworkAclBypassInput is an input type that accepts NetworkAclBypassArgs and NetworkAclBypassOutput values.
// You can construct a concrete instance of `NetworkAclBypassInput` via:
//
//          NetworkAclBypassArgs{...}
type NetworkAclBypassInput interface {
	pulumi.Input

	ToNetworkAclBypassOutput() NetworkAclBypassOutput
	ToNetworkAclBypassOutputWithContext(context.Context) NetworkAclBypassOutput
}

var networkAclBypassPtrType = reflect.TypeOf((**NetworkAclBypass)(nil)).Elem()

type NetworkAclBypassPtrInput interface {
	pulumi.Input

	ToNetworkAclBypassPtrOutput() NetworkAclBypassPtrOutput
	ToNetworkAclBypassPtrOutputWithContext(context.Context) NetworkAclBypassPtrOutput
}

type networkAclBypassPtr string

func NetworkAclBypassPtr(v string) NetworkAclBypassPtrInput {
	return (*networkAclBypassPtr)(&v)
}

func (*networkAclBypassPtr) ElementType() reflect.Type {
	return networkAclBypassPtrType
}

func (in *networkAclBypassPtr) ToNetworkAclBypassPtrOutput() NetworkAclBypassPtrOutput {
	return pulumi.ToOutput(in).(NetworkAclBypassPtrOutput)
}

func (in *networkAclBypassPtr) ToNetworkAclBypassPtrOutputWithContext(ctx context.Context) NetworkAclBypassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(NetworkAclBypassPtrOutput)
}

// Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
type PartitionKind string

const (
	PartitionKindHash      = PartitionKind("Hash")
	PartitionKindRange     = PartitionKind("Range")
	PartitionKindMultiHash = PartitionKind("MultiHash")
)

func (PartitionKind) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKind)(nil)).Elem()
}

func (e PartitionKind) ToPartitionKindOutput() PartitionKindOutput {
	return pulumi.ToOutput(e).(PartitionKindOutput)
}

func (e PartitionKind) ToPartitionKindOutputWithContext(ctx context.Context) PartitionKindOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PartitionKindOutput)
}

func (e PartitionKind) ToPartitionKindPtrOutput() PartitionKindPtrOutput {
	return e.ToPartitionKindPtrOutputWithContext(context.Background())
}

func (e PartitionKind) ToPartitionKindPtrOutputWithContext(ctx context.Context) PartitionKindPtrOutput {
	return PartitionKind(e).ToPartitionKindOutputWithContext(ctx).ToPartitionKindPtrOutputWithContext(ctx)
}

func (e PartitionKind) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartitionKind) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PartitionKind) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PartitionKind) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PartitionKindOutput struct{ *pulumi.OutputState }

func (PartitionKindOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PartitionKind)(nil)).Elem()
}

func (o PartitionKindOutput) ToPartitionKindOutput() PartitionKindOutput {
	return o
}

func (o PartitionKindOutput) ToPartitionKindOutputWithContext(ctx context.Context) PartitionKindOutput {
	return o
}

func (o PartitionKindOutput) ToPartitionKindPtrOutput() PartitionKindPtrOutput {
	return o.ToPartitionKindPtrOutputWithContext(context.Background())
}

func (o PartitionKindOutput) ToPartitionKindPtrOutputWithContext(ctx context.Context) PartitionKindPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PartitionKind) *PartitionKind {
		return &v
	}).(PartitionKindPtrOutput)
}

func (o PartitionKindOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PartitionKindOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartitionKind) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PartitionKindOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartitionKindOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PartitionKind) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PartitionKindPtrOutput struct{ *pulumi.OutputState }

func (PartitionKindPtrOutput) ElementType() reflect.Type {
	return partitionKindPtrType
}

func (o PartitionKindPtrOutput) ToPartitionKindPtrOutput() PartitionKindPtrOutput {
	return o
}

func (o PartitionKindPtrOutput) ToPartitionKindPtrOutputWithContext(ctx context.Context) PartitionKindPtrOutput {
	return o
}

func (o PartitionKindPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PartitionKindPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PartitionKind) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o PartitionKindPtrOutput) Elem() PartitionKindOutput {
	return o.ApplyT(func(v *PartitionKind) PartitionKind {
		var ret PartitionKind
		if v != nil {
			ret = *v
		}
		return ret
	}).(PartitionKindOutput)
}

// PartitionKindInput is an input type that accepts PartitionKindArgs and PartitionKindOutput values.
// You can construct a concrete instance of `PartitionKindInput` via:
//
//          PartitionKindArgs{...}
type PartitionKindInput interface {
	pulumi.Input

	ToPartitionKindOutput() PartitionKindOutput
	ToPartitionKindOutputWithContext(context.Context) PartitionKindOutput
}

var partitionKindPtrType = reflect.TypeOf((**PartitionKind)(nil)).Elem()

type PartitionKindPtrInput interface {
	pulumi.Input

	ToPartitionKindPtrOutput() PartitionKindPtrOutput
	ToPartitionKindPtrOutputWithContext(context.Context) PartitionKindPtrOutput
}

type partitionKindPtr string

func PartitionKindPtr(v string) PartitionKindPtrInput {
	return (*partitionKindPtr)(&v)
}

func (*partitionKindPtr) ElementType() reflect.Type {
	return partitionKindPtrType
}

func (in *partitionKindPtr) ToPartitionKindPtrOutput() PartitionKindPtrOutput {
	return pulumi.ToOutput(in).(PartitionKindPtrOutput)
}

func (in *partitionKindPtr) ToPartitionKindPtrOutputWithContext(ctx context.Context) PartitionKindPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PartitionKindPtrOutput)
}

// Whether requests from Public Network are allowed
type PublicNetworkAccess string

const (
	PublicNetworkAccessEnabled  = PublicNetworkAccess("Enabled")
	PublicNetworkAccessDisabled = PublicNetworkAccess("Disabled")
)

func (PublicNetworkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return pulumi.ToOutput(e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PublicNetworkAccessOutput)
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return e.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return PublicNetworkAccess(e).ToPublicNetworkAccessOutputWithContext(ctx).ToPublicNetworkAccessPtrOutputWithContext(ctx)
}

func (e PublicNetworkAccess) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PublicNetworkAccess) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PublicNetworkAccess) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PublicNetworkAccessOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkAccess)(nil)).Elem()
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutput() PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessOutputWithContext(ctx context.Context) PublicNetworkAccessOutput {
	return o
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o.ToPublicNetworkAccessPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkAccess) *PublicNetworkAccess {
		return &v
	}).(PublicNetworkAccessPtrOutput)
}

func (o PublicNetworkAccessOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PublicNetworkAccessOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PublicNetworkAccess) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkAccessPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkAccessPtrOutput) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return o
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PublicNetworkAccessPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PublicNetworkAccess) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o PublicNetworkAccessPtrOutput) Elem() PublicNetworkAccessOutput {
	return o.ApplyT(func(v *PublicNetworkAccess) PublicNetworkAccess {
		var ret PublicNetworkAccess
		if v != nil {
			ret = *v
		}
		return ret
	}).(PublicNetworkAccessOutput)
}

// PublicNetworkAccessInput is an input type that accepts PublicNetworkAccessArgs and PublicNetworkAccessOutput values.
// You can construct a concrete instance of `PublicNetworkAccessInput` via:
//
//          PublicNetworkAccessArgs{...}
type PublicNetworkAccessInput interface {
	pulumi.Input

	ToPublicNetworkAccessOutput() PublicNetworkAccessOutput
	ToPublicNetworkAccessOutputWithContext(context.Context) PublicNetworkAccessOutput
}

var publicNetworkAccessPtrType = reflect.TypeOf((**PublicNetworkAccess)(nil)).Elem()

type PublicNetworkAccessPtrInput interface {
	pulumi.Input

	ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput
	ToPublicNetworkAccessPtrOutputWithContext(context.Context) PublicNetworkAccessPtrOutput
}

type publicNetworkAccessPtr string

func PublicNetworkAccessPtr(v string) PublicNetworkAccessPtrInput {
	return (*publicNetworkAccessPtr)(&v)
}

func (*publicNetworkAccessPtr) ElementType() reflect.Type {
	return publicNetworkAccessPtrType
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutput() PublicNetworkAccessPtrOutput {
	return pulumi.ToOutput(in).(PublicNetworkAccessPtrOutput)
}

func (in *publicNetworkAccessPtr) ToPublicNetworkAccessPtrOutputWithContext(ctx context.Context) PublicNetworkAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PublicNetworkAccessPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
type ResourceIdentityType string

const (
	ResourceIdentityTypeSystemAssigned               = ResourceIdentityType("SystemAssigned")
	ResourceIdentityTypeUserAssigned                 = ResourceIdentityType("UserAssigned")
	ResourceIdentityType_SystemAssigned_UserAssigned = ResourceIdentityType("SystemAssigned,UserAssigned")
	ResourceIdentityTypeNone                         = ResourceIdentityType("None")
)

func (ResourceIdentityType) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return pulumi.ToOutput(e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ResourceIdentityTypeOutput)
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return e.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return ResourceIdentityType(e).ToResourceIdentityTypeOutputWithContext(ctx).ToResourceIdentityTypePtrOutputWithContext(ctx)
}

func (e ResourceIdentityType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ResourceIdentityType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ResourceIdentityType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ResourceIdentityTypeOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceIdentityType)(nil)).Elem()
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypeOutputWithContext(ctx context.Context) ResourceIdentityTypeOutput {
	return o
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o.ToResourceIdentityTypePtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceIdentityType) *ResourceIdentityType {
		return &v
	}).(ResourceIdentityTypePtrOutput)
}

func (o ResourceIdentityTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ResourceIdentityType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ResourceIdentityTypePtrOutput struct{ *pulumi.OutputState }

func (ResourceIdentityTypePtrOutput) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return o
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ResourceIdentityTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ResourceIdentityType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ResourceIdentityTypePtrOutput) Elem() ResourceIdentityTypeOutput {
	return o.ApplyT(func(v *ResourceIdentityType) ResourceIdentityType {
		var ret ResourceIdentityType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ResourceIdentityTypeOutput)
}

// ResourceIdentityTypeInput is an input type that accepts ResourceIdentityTypeArgs and ResourceIdentityTypeOutput values.
// You can construct a concrete instance of `ResourceIdentityTypeInput` via:
//
//          ResourceIdentityTypeArgs{...}
type ResourceIdentityTypeInput interface {
	pulumi.Input

	ToResourceIdentityTypeOutput() ResourceIdentityTypeOutput
	ToResourceIdentityTypeOutputWithContext(context.Context) ResourceIdentityTypeOutput
}

var resourceIdentityTypePtrType = reflect.TypeOf((**ResourceIdentityType)(nil)).Elem()

type ResourceIdentityTypePtrInput interface {
	pulumi.Input

	ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput
	ToResourceIdentityTypePtrOutputWithContext(context.Context) ResourceIdentityTypePtrOutput
}

type resourceIdentityTypePtr string

func ResourceIdentityTypePtr(v string) ResourceIdentityTypePtrInput {
	return (*resourceIdentityTypePtr)(&v)
}

func (*resourceIdentityTypePtr) ElementType() reflect.Type {
	return resourceIdentityTypePtrType
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutput() ResourceIdentityTypePtrOutput {
	return pulumi.ToOutput(in).(ResourceIdentityTypePtrOutput)
}

func (in *resourceIdentityTypePtr) ToResourceIdentityTypePtrOutputWithContext(ctx context.Context) ResourceIdentityTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ResourceIdentityTypePtrOutput)
}

// Indicates whether the Role Definition was built-in or user created.
type RoleDefinitionType string

const (
	RoleDefinitionTypeBuiltInRole = RoleDefinitionType("BuiltInRole")
	RoleDefinitionTypeCustomRole  = RoleDefinitionType("CustomRole")
)

func (RoleDefinitionType) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleDefinitionType)(nil)).Elem()
}

func (e RoleDefinitionType) ToRoleDefinitionTypeOutput() RoleDefinitionTypeOutput {
	return pulumi.ToOutput(e).(RoleDefinitionTypeOutput)
}

func (e RoleDefinitionType) ToRoleDefinitionTypeOutputWithContext(ctx context.Context) RoleDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RoleDefinitionTypeOutput)
}

func (e RoleDefinitionType) ToRoleDefinitionTypePtrOutput() RoleDefinitionTypePtrOutput {
	return e.ToRoleDefinitionTypePtrOutputWithContext(context.Background())
}

func (e RoleDefinitionType) ToRoleDefinitionTypePtrOutputWithContext(ctx context.Context) RoleDefinitionTypePtrOutput {
	return RoleDefinitionType(e).ToRoleDefinitionTypeOutputWithContext(ctx).ToRoleDefinitionTypePtrOutputWithContext(ctx)
}

func (e RoleDefinitionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoleDefinitionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RoleDefinitionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RoleDefinitionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RoleDefinitionTypeOutput struct{ *pulumi.OutputState }

func (RoleDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleDefinitionType)(nil)).Elem()
}

func (o RoleDefinitionTypeOutput) ToRoleDefinitionTypeOutput() RoleDefinitionTypeOutput {
	return o
}

func (o RoleDefinitionTypeOutput) ToRoleDefinitionTypeOutputWithContext(ctx context.Context) RoleDefinitionTypeOutput {
	return o
}

func (o RoleDefinitionTypeOutput) ToRoleDefinitionTypePtrOutput() RoleDefinitionTypePtrOutput {
	return o.ToRoleDefinitionTypePtrOutputWithContext(context.Background())
}

func (o RoleDefinitionTypeOutput) ToRoleDefinitionTypePtrOutputWithContext(ctx context.Context) RoleDefinitionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleDefinitionType) *RoleDefinitionType {
		return &v
	}).(RoleDefinitionTypePtrOutput)
}

func (o RoleDefinitionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RoleDefinitionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoleDefinitionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RoleDefinitionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleDefinitionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RoleDefinitionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RoleDefinitionTypePtrOutput struct{ *pulumi.OutputState }

func (RoleDefinitionTypePtrOutput) ElementType() reflect.Type {
	return roleDefinitionTypePtrType
}

func (o RoleDefinitionTypePtrOutput) ToRoleDefinitionTypePtrOutput() RoleDefinitionTypePtrOutput {
	return o
}

func (o RoleDefinitionTypePtrOutput) ToRoleDefinitionTypePtrOutputWithContext(ctx context.Context) RoleDefinitionTypePtrOutput {
	return o
}

func (o RoleDefinitionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RoleDefinitionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RoleDefinitionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o RoleDefinitionTypePtrOutput) Elem() RoleDefinitionTypeOutput {
	return o.ApplyT(func(v *RoleDefinitionType) RoleDefinitionType {
		var ret RoleDefinitionType
		if v != nil {
			ret = *v
		}
		return ret
	}).(RoleDefinitionTypeOutput)
}

// RoleDefinitionTypeInput is an input type that accepts RoleDefinitionTypeArgs and RoleDefinitionTypeOutput values.
// You can construct a concrete instance of `RoleDefinitionTypeInput` via:
//
//          RoleDefinitionTypeArgs{...}
type RoleDefinitionTypeInput interface {
	pulumi.Input

	ToRoleDefinitionTypeOutput() RoleDefinitionTypeOutput
	ToRoleDefinitionTypeOutputWithContext(context.Context) RoleDefinitionTypeOutput
}

var roleDefinitionTypePtrType = reflect.TypeOf((**RoleDefinitionType)(nil)).Elem()

type RoleDefinitionTypePtrInput interface {
	pulumi.Input

	ToRoleDefinitionTypePtrOutput() RoleDefinitionTypePtrOutput
	ToRoleDefinitionTypePtrOutputWithContext(context.Context) RoleDefinitionTypePtrOutput
}

type roleDefinitionTypePtr string

func RoleDefinitionTypePtr(v string) RoleDefinitionTypePtrInput {
	return (*roleDefinitionTypePtr)(&v)
}

func (*roleDefinitionTypePtr) ElementType() reflect.Type {
	return roleDefinitionTypePtrType
}

func (in *roleDefinitionTypePtr) ToRoleDefinitionTypePtrOutput() RoleDefinitionTypePtrOutput {
	return pulumi.ToOutput(in).(RoleDefinitionTypePtrOutput)
}

func (in *roleDefinitionTypePtr) ToRoleDefinitionTypePtrOutputWithContext(ctx context.Context) RoleDefinitionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RoleDefinitionTypePtrOutput)
}

// Describes the ServerVersion of an a MongoDB account.
type ServerVersion string

const (
	ServerVersion_3_2 = ServerVersion("3.2")
	ServerVersion_3_6 = ServerVersion("3.6")
	ServerVersion_4_0 = ServerVersion("4.0")
)

func (ServerVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVersion)(nil)).Elem()
}

func (e ServerVersion) ToServerVersionOutput() ServerVersionOutput {
	return pulumi.ToOutput(e).(ServerVersionOutput)
}

func (e ServerVersion) ToServerVersionOutputWithContext(ctx context.Context) ServerVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServerVersionOutput)
}

func (e ServerVersion) ToServerVersionPtrOutput() ServerVersionPtrOutput {
	return e.ToServerVersionPtrOutputWithContext(context.Background())
}

func (e ServerVersion) ToServerVersionPtrOutputWithContext(ctx context.Context) ServerVersionPtrOutput {
	return ServerVersion(e).ToServerVersionOutputWithContext(ctx).ToServerVersionPtrOutputWithContext(ctx)
}

func (e ServerVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServerVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServerVersionOutput struct{ *pulumi.OutputState }

func (ServerVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerVersion)(nil)).Elem()
}

func (o ServerVersionOutput) ToServerVersionOutput() ServerVersionOutput {
	return o
}

func (o ServerVersionOutput) ToServerVersionOutputWithContext(ctx context.Context) ServerVersionOutput {
	return o
}

func (o ServerVersionOutput) ToServerVersionPtrOutput() ServerVersionPtrOutput {
	return o.ToServerVersionPtrOutputWithContext(context.Background())
}

func (o ServerVersionOutput) ToServerVersionPtrOutputWithContext(ctx context.Context) ServerVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerVersion) *ServerVersion {
		return &v
	}).(ServerVersionPtrOutput)
}

func (o ServerVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServerVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServerVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServerVersionPtrOutput struct{ *pulumi.OutputState }

func (ServerVersionPtrOutput) ElementType() reflect.Type {
	return serverVersionPtrType
}

func (o ServerVersionPtrOutput) ToServerVersionPtrOutput() ServerVersionPtrOutput {
	return o
}

func (o ServerVersionPtrOutput) ToServerVersionPtrOutputWithContext(ctx context.Context) ServerVersionPtrOutput {
	return o
}

func (o ServerVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServerVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ServerVersionPtrOutput) Elem() ServerVersionOutput {
	return o.ApplyT(func(v *ServerVersion) ServerVersion {
		var ret ServerVersion
		if v != nil {
			ret = *v
		}
		return ret
	}).(ServerVersionOutput)
}

// ServerVersionInput is an input type that accepts ServerVersionArgs and ServerVersionOutput values.
// You can construct a concrete instance of `ServerVersionInput` via:
//
//          ServerVersionArgs{...}
type ServerVersionInput interface {
	pulumi.Input

	ToServerVersionOutput() ServerVersionOutput
	ToServerVersionOutputWithContext(context.Context) ServerVersionOutput
}

var serverVersionPtrType = reflect.TypeOf((**ServerVersion)(nil)).Elem()

type ServerVersionPtrInput interface {
	pulumi.Input

	ToServerVersionPtrOutput() ServerVersionPtrOutput
	ToServerVersionPtrOutputWithContext(context.Context) ServerVersionPtrOutput
}

type serverVersionPtr string

func ServerVersionPtr(v string) ServerVersionPtrInput {
	return (*serverVersionPtr)(&v)
}

func (*serverVersionPtr) ElementType() reflect.Type {
	return serverVersionPtrType
}

func (in *serverVersionPtr) ToServerVersionPtrOutput() ServerVersionPtrOutput {
	return pulumi.ToOutput(in).(ServerVersionPtrOutput)
}

func (in *serverVersionPtr) ToServerVersionPtrOutputWithContext(ctx context.Context) ServerVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServerVersionPtrOutput)
}

// Instance type for the service.
type ServiceSize string

const (
	ServiceSize_Cosmos_D4s  = ServiceSize("Cosmos.D4s")
	ServiceSize_Cosmos_D8s  = ServiceSize("Cosmos.D8s")
	ServiceSize_Cosmos_D16s = ServiceSize("Cosmos.D16s")
)

func (ServiceSize) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSize)(nil)).Elem()
}

func (e ServiceSize) ToServiceSizeOutput() ServiceSizeOutput {
	return pulumi.ToOutput(e).(ServiceSizeOutput)
}

func (e ServiceSize) ToServiceSizeOutputWithContext(ctx context.Context) ServiceSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceSizeOutput)
}

func (e ServiceSize) ToServiceSizePtrOutput() ServiceSizePtrOutput {
	return e.ToServiceSizePtrOutputWithContext(context.Background())
}

func (e ServiceSize) ToServiceSizePtrOutputWithContext(ctx context.Context) ServiceSizePtrOutput {
	return ServiceSize(e).ToServiceSizeOutputWithContext(ctx).ToServiceSizePtrOutputWithContext(ctx)
}

func (e ServiceSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceSizeOutput struct{ *pulumi.OutputState }

func (ServiceSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSize)(nil)).Elem()
}

func (o ServiceSizeOutput) ToServiceSizeOutput() ServiceSizeOutput {
	return o
}

func (o ServiceSizeOutput) ToServiceSizeOutputWithContext(ctx context.Context) ServiceSizeOutput {
	return o
}

func (o ServiceSizeOutput) ToServiceSizePtrOutput() ServiceSizePtrOutput {
	return o.ToServiceSizePtrOutputWithContext(context.Background())
}

func (o ServiceSizeOutput) ToServiceSizePtrOutputWithContext(ctx context.Context) ServiceSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSize) *ServiceSize {
		return &v
	}).(ServiceSizePtrOutput)
}

func (o ServiceSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceSizePtrOutput struct{ *pulumi.OutputState }

func (ServiceSizePtrOutput) ElementType() reflect.Type {
	return serviceSizePtrType
}

func (o ServiceSizePtrOutput) ToServiceSizePtrOutput() ServiceSizePtrOutput {
	return o
}

func (o ServiceSizePtrOutput) ToServiceSizePtrOutputWithContext(ctx context.Context) ServiceSizePtrOutput {
	return o
}

func (o ServiceSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ServiceSizePtrOutput) Elem() ServiceSizeOutput {
	return o.ApplyT(func(v *ServiceSize) ServiceSize {
		var ret ServiceSize
		if v != nil {
			ret = *v
		}
		return ret
	}).(ServiceSizeOutput)
}

// ServiceSizeInput is an input type that accepts ServiceSizeArgs and ServiceSizeOutput values.
// You can construct a concrete instance of `ServiceSizeInput` via:
//
//          ServiceSizeArgs{...}
type ServiceSizeInput interface {
	pulumi.Input

	ToServiceSizeOutput() ServiceSizeOutput
	ToServiceSizeOutputWithContext(context.Context) ServiceSizeOutput
}

var serviceSizePtrType = reflect.TypeOf((**ServiceSize)(nil)).Elem()

type ServiceSizePtrInput interface {
	pulumi.Input

	ToServiceSizePtrOutput() ServiceSizePtrOutput
	ToServiceSizePtrOutputWithContext(context.Context) ServiceSizePtrOutput
}

type serviceSizePtr string

func ServiceSizePtr(v string) ServiceSizePtrInput {
	return (*serviceSizePtr)(&v)
}

func (*serviceSizePtr) ElementType() reflect.Type {
	return serviceSizePtrType
}

func (in *serviceSizePtr) ToServiceSizePtrOutput() ServiceSizePtrOutput {
	return pulumi.ToOutput(in).(ServiceSizePtrOutput)
}

func (in *serviceSizePtr) ToServiceSizePtrOutputWithContext(ctx context.Context) ServiceSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceSizePtrOutput)
}

// ServiceType for the service.
type ServiceType string

const (
	ServiceTypeSqlDedicatedGateway = ServiceType("SqlDedicatedGateway")
	ServiceTypeDataTransfer        = ServiceType("DataTransfer")
)

func (ServiceType) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceType)(nil)).Elem()
}

func (e ServiceType) ToServiceTypeOutput() ServiceTypeOutput {
	return pulumi.ToOutput(e).(ServiceTypeOutput)
}

func (e ServiceType) ToServiceTypeOutputWithContext(ctx context.Context) ServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServiceTypeOutput)
}

func (e ServiceType) ToServiceTypePtrOutput() ServiceTypePtrOutput {
	return e.ToServiceTypePtrOutputWithContext(context.Background())
}

func (e ServiceType) ToServiceTypePtrOutputWithContext(ctx context.Context) ServiceTypePtrOutput {
	return ServiceType(e).ToServiceTypeOutputWithContext(ctx).ToServiceTypePtrOutputWithContext(ctx)
}

func (e ServiceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServiceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServiceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServiceTypeOutput struct{ *pulumi.OutputState }

func (ServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceType)(nil)).Elem()
}

func (o ServiceTypeOutput) ToServiceTypeOutput() ServiceTypeOutput {
	return o
}

func (o ServiceTypeOutput) ToServiceTypeOutputWithContext(ctx context.Context) ServiceTypeOutput {
	return o
}

func (o ServiceTypeOutput) ToServiceTypePtrOutput() ServiceTypePtrOutput {
	return o.ToServiceTypePtrOutputWithContext(context.Background())
}

func (o ServiceTypeOutput) ToServiceTypePtrOutputWithContext(ctx context.Context) ServiceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceType) *ServiceType {
		return &v
	}).(ServiceTypePtrOutput)
}

func (o ServiceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServiceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServiceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServiceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServiceTypePtrOutput struct{ *pulumi.OutputState }

func (ServiceTypePtrOutput) ElementType() reflect.Type {
	return serviceTypePtrType
}

func (o ServiceTypePtrOutput) ToServiceTypePtrOutput() ServiceTypePtrOutput {
	return o
}

func (o ServiceTypePtrOutput) ToServiceTypePtrOutputWithContext(ctx context.Context) ServiceTypePtrOutput {
	return o
}

func (o ServiceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServiceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServiceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o ServiceTypePtrOutput) Elem() ServiceTypeOutput {
	return o.ApplyT(func(v *ServiceType) ServiceType {
		var ret ServiceType
		if v != nil {
			ret = *v
		}
		return ret
	}).(ServiceTypeOutput)
}

// ServiceTypeInput is an input type that accepts ServiceTypeArgs and ServiceTypeOutput values.
// You can construct a concrete instance of `ServiceTypeInput` via:
//
//          ServiceTypeArgs{...}
type ServiceTypeInput interface {
	pulumi.Input

	ToServiceTypeOutput() ServiceTypeOutput
	ToServiceTypeOutputWithContext(context.Context) ServiceTypeOutput
}

var serviceTypePtrType = reflect.TypeOf((**ServiceType)(nil)).Elem()

type ServiceTypePtrInput interface {
	pulumi.Input

	ToServiceTypePtrOutput() ServiceTypePtrOutput
	ToServiceTypePtrOutputWithContext(context.Context) ServiceTypePtrOutput
}

type serviceTypePtr string

func ServiceTypePtr(v string) ServiceTypePtrInput {
	return (*serviceTypePtr)(&v)
}

func (*serviceTypePtr) ElementType() reflect.Type {
	return serviceTypePtrType
}

func (in *serviceTypePtr) ToServiceTypePtrOutput() ServiceTypePtrOutput {
	return pulumi.ToOutput(in).(ServiceTypePtrOutput)
}

func (in *serviceTypePtr) ToServiceTypePtrOutputWithContext(ctx context.Context) ServiceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServiceTypePtrOutput)
}

// Indicates the spatial type of index.
type SpatialType string

const (
	SpatialTypePoint        = SpatialType("Point")
	SpatialTypeLineString   = SpatialType("LineString")
	SpatialTypePolygon      = SpatialType("Polygon")
	SpatialTypeMultiPolygon = SpatialType("MultiPolygon")
)

func (SpatialType) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialType)(nil)).Elem()
}

func (e SpatialType) ToSpatialTypeOutput() SpatialTypeOutput {
	return pulumi.ToOutput(e).(SpatialTypeOutput)
}

func (e SpatialType) ToSpatialTypeOutputWithContext(ctx context.Context) SpatialTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SpatialTypeOutput)
}

func (e SpatialType) ToSpatialTypePtrOutput() SpatialTypePtrOutput {
	return e.ToSpatialTypePtrOutputWithContext(context.Background())
}

func (e SpatialType) ToSpatialTypePtrOutputWithContext(ctx context.Context) SpatialTypePtrOutput {
	return SpatialType(e).ToSpatialTypeOutputWithContext(ctx).ToSpatialTypePtrOutputWithContext(ctx)
}

func (e SpatialType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SpatialType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SpatialType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SpatialType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SpatialTypeOutput struct{ *pulumi.OutputState }

func (SpatialTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpatialType)(nil)).Elem()
}

func (o SpatialTypeOutput) ToSpatialTypeOutput() SpatialTypeOutput {
	return o
}

func (o SpatialTypeOutput) ToSpatialTypeOutputWithContext(ctx context.Context) SpatialTypeOutput {
	return o
}

func (o SpatialTypeOutput) ToSpatialTypePtrOutput() SpatialTypePtrOutput {
	return o.ToSpatialTypePtrOutputWithContext(context.Background())
}

func (o SpatialTypeOutput) ToSpatialTypePtrOutputWithContext(ctx context.Context) SpatialTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpatialType) *SpatialType {
		return &v
	}).(SpatialTypePtrOutput)
}

func (o SpatialTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SpatialTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SpatialType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SpatialTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SpatialTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SpatialType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SpatialTypePtrOutput struct{ *pulumi.OutputState }

func (SpatialTypePtrOutput) ElementType() reflect.Type {
	return spatialTypePtrType
}

func (o SpatialTypePtrOutput) ToSpatialTypePtrOutput() SpatialTypePtrOutput {
	return o
}

func (o SpatialTypePtrOutput) ToSpatialTypePtrOutputWithContext(ctx context.Context) SpatialTypePtrOutput {
	return o
}

func (o SpatialTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SpatialTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SpatialType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o SpatialTypePtrOutput) Elem() SpatialTypeOutput {
	return o.ApplyT(func(v *SpatialType) SpatialType {
		var ret SpatialType
		if v != nil {
			ret = *v
		}
		return ret
	}).(SpatialTypeOutput)
}

// SpatialTypeInput is an input type that accepts SpatialTypeArgs and SpatialTypeOutput values.
// You can construct a concrete instance of `SpatialTypeInput` via:
//
//          SpatialTypeArgs{...}
type SpatialTypeInput interface {
	pulumi.Input

	ToSpatialTypeOutput() SpatialTypeOutput
	ToSpatialTypeOutputWithContext(context.Context) SpatialTypeOutput
}

var spatialTypePtrType = reflect.TypeOf((**SpatialType)(nil)).Elem()

type SpatialTypePtrInput interface {
	pulumi.Input

	ToSpatialTypePtrOutput() SpatialTypePtrOutput
	ToSpatialTypePtrOutputWithContext(context.Context) SpatialTypePtrOutput
}

type spatialTypePtr string

func SpatialTypePtr(v string) SpatialTypePtrInput {
	return (*spatialTypePtr)(&v)
}

func (*spatialTypePtr) ElementType() reflect.Type {
	return spatialTypePtrType
}

func (in *spatialTypePtr) ToSpatialTypePtrOutput() SpatialTypePtrOutput {
	return pulumi.ToOutput(in).(SpatialTypePtrOutput)
}

func (in *spatialTypePtr) ToSpatialTypePtrOutputWithContext(ctx context.Context) SpatialTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SpatialTypePtrOutput)
}

// The operation the trigger is associated with
type TriggerOperation string

const (
	TriggerOperationAll     = TriggerOperation("All")
	TriggerOperationCreate  = TriggerOperation("Create")
	TriggerOperationUpdate  = TriggerOperation("Update")
	TriggerOperationDelete  = TriggerOperation("Delete")
	TriggerOperationReplace = TriggerOperation("Replace")
)

func (TriggerOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerOperation)(nil)).Elem()
}

func (e TriggerOperation) ToTriggerOperationOutput() TriggerOperationOutput {
	return pulumi.ToOutput(e).(TriggerOperationOutput)
}

func (e TriggerOperation) ToTriggerOperationOutputWithContext(ctx context.Context) TriggerOperationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerOperationOutput)
}

func (e TriggerOperation) ToTriggerOperationPtrOutput() TriggerOperationPtrOutput {
	return e.ToTriggerOperationPtrOutputWithContext(context.Background())
}

func (e TriggerOperation) ToTriggerOperationPtrOutputWithContext(ctx context.Context) TriggerOperationPtrOutput {
	return TriggerOperation(e).ToTriggerOperationOutputWithContext(ctx).ToTriggerOperationPtrOutputWithContext(ctx)
}

func (e TriggerOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerOperationOutput struct{ *pulumi.OutputState }

func (TriggerOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerOperation)(nil)).Elem()
}

func (o TriggerOperationOutput) ToTriggerOperationOutput() TriggerOperationOutput {
	return o
}

func (o TriggerOperationOutput) ToTriggerOperationOutputWithContext(ctx context.Context) TriggerOperationOutput {
	return o
}

func (o TriggerOperationOutput) ToTriggerOperationPtrOutput() TriggerOperationPtrOutput {
	return o.ToTriggerOperationPtrOutputWithContext(context.Background())
}

func (o TriggerOperationOutput) ToTriggerOperationPtrOutputWithContext(ctx context.Context) TriggerOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerOperation) *TriggerOperation {
		return &v
	}).(TriggerOperationPtrOutput)
}

func (o TriggerOperationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerOperationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerOperation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerOperationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerOperationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerOperation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerOperationPtrOutput struct{ *pulumi.OutputState }

func (TriggerOperationPtrOutput) ElementType() reflect.Type {
	return triggerOperationPtrType
}

func (o TriggerOperationPtrOutput) ToTriggerOperationPtrOutput() TriggerOperationPtrOutput {
	return o
}

func (o TriggerOperationPtrOutput) ToTriggerOperationPtrOutputWithContext(ctx context.Context) TriggerOperationPtrOutput {
	return o
}

func (o TriggerOperationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerOperationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerOperation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o TriggerOperationPtrOutput) Elem() TriggerOperationOutput {
	return o.ApplyT(func(v *TriggerOperation) TriggerOperation {
		var ret TriggerOperation
		if v != nil {
			ret = *v
		}
		return ret
	}).(TriggerOperationOutput)
}

// TriggerOperationInput is an input type that accepts TriggerOperationArgs and TriggerOperationOutput values.
// You can construct a concrete instance of `TriggerOperationInput` via:
//
//          TriggerOperationArgs{...}
type TriggerOperationInput interface {
	pulumi.Input

	ToTriggerOperationOutput() TriggerOperationOutput
	ToTriggerOperationOutputWithContext(context.Context) TriggerOperationOutput
}

var triggerOperationPtrType = reflect.TypeOf((**TriggerOperation)(nil)).Elem()

type TriggerOperationPtrInput interface {
	pulumi.Input

	ToTriggerOperationPtrOutput() TriggerOperationPtrOutput
	ToTriggerOperationPtrOutputWithContext(context.Context) TriggerOperationPtrOutput
}

type triggerOperationPtr string

func TriggerOperationPtr(v string) TriggerOperationPtrInput {
	return (*triggerOperationPtr)(&v)
}

func (*triggerOperationPtr) ElementType() reflect.Type {
	return triggerOperationPtrType
}

func (in *triggerOperationPtr) ToTriggerOperationPtrOutput() TriggerOperationPtrOutput {
	return pulumi.ToOutput(in).(TriggerOperationPtrOutput)
}

func (in *triggerOperationPtr) ToTriggerOperationPtrOutputWithContext(ctx context.Context) TriggerOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerOperationPtrOutput)
}

// Type of the Trigger
type TriggerType string

const (
	TriggerTypePre  = TriggerType("Pre")
	TriggerTypePost = TriggerType("Post")
)

func (TriggerType) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (e TriggerType) ToTriggerTypeOutput() TriggerTypeOutput {
	return pulumi.ToOutput(e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TriggerTypeOutput)
}

func (e TriggerType) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return e.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (e TriggerType) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return TriggerType(e).ToTriggerTypeOutputWithContext(ctx).ToTriggerTypePtrOutputWithContext(ctx)
}

func (e TriggerType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TriggerType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TriggerType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TriggerTypeOutput struct{ *pulumi.OutputState }

func (TriggerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerType)(nil)).Elem()
}

func (o TriggerTypeOutput) ToTriggerTypeOutput() TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypeOutputWithContext(ctx context.Context) TriggerTypeOutput {
	return o
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o.ToTriggerTypePtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerType) *TriggerType {
		return &v
	}).(TriggerTypePtrOutput)
}

func (o TriggerTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TriggerTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TriggerType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TriggerTypePtrOutput struct{ *pulumi.OutputState }

func (TriggerTypePtrOutput) ElementType() reflect.Type {
	return triggerTypePtrType
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return o
}

func (o TriggerTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TriggerTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TriggerType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func (o TriggerTypePtrOutput) Elem() TriggerTypeOutput {
	return o.ApplyT(func(v *TriggerType) TriggerType {
		var ret TriggerType
		if v != nil {
			ret = *v
		}
		return ret
	}).(TriggerTypeOutput)
}

// TriggerTypeInput is an input type that accepts TriggerTypeArgs and TriggerTypeOutput values.
// You can construct a concrete instance of `TriggerTypeInput` via:
//
//          TriggerTypeArgs{...}
type TriggerTypeInput interface {
	pulumi.Input

	ToTriggerTypeOutput() TriggerTypeOutput
	ToTriggerTypeOutputWithContext(context.Context) TriggerTypeOutput
}

var triggerTypePtrType = reflect.TypeOf((**TriggerType)(nil)).Elem()

type TriggerTypePtrInput interface {
	pulumi.Input

	ToTriggerTypePtrOutput() TriggerTypePtrOutput
	ToTriggerTypePtrOutputWithContext(context.Context) TriggerTypePtrOutput
}

type triggerTypePtr string

func TriggerTypePtr(v string) TriggerTypePtrInput {
	return (*triggerTypePtr)(&v)
}

func (*triggerTypePtr) ElementType() reflect.Type {
	return triggerTypePtrType
}

func (in *triggerTypePtr) ToTriggerTypePtrOutput() TriggerTypePtrOutput {
	return pulumi.ToOutput(in).(TriggerTypePtrOutput)
}

func (in *triggerTypePtr) ToTriggerTypePtrOutputWithContext(ctx context.Context) TriggerTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TriggerTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthenticationMethodOutput{})
	pulumi.RegisterOutputType(AuthenticationMethodPtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyTypeOutput{})
	pulumi.RegisterOutputType(BackupPolicyTypePtrOutput{})
	pulumi.RegisterOutputType(CompositePathSortOrderOutput{})
	pulumi.RegisterOutputType(CompositePathSortOrderPtrOutput{})
	pulumi.RegisterOutputType(ConflictResolutionModeOutput{})
	pulumi.RegisterOutputType(ConflictResolutionModePtrOutput{})
	pulumi.RegisterOutputType(ConnectorOfferOutput{})
	pulumi.RegisterOutputType(ConnectorOfferPtrOutput{})
	pulumi.RegisterOutputType(DataTypeOutput{})
	pulumi.RegisterOutputType(DataTypePtrOutput{})
	pulumi.RegisterOutputType(DatabaseAccountKindOutput{})
	pulumi.RegisterOutputType(DatabaseAccountKindPtrOutput{})
	pulumi.RegisterOutputType(DatabaseAccountOfferTypeOutput{})
	pulumi.RegisterOutputType(DatabaseAccountOfferTypePtrOutput{})
	pulumi.RegisterOutputType(DefaultConsistencyLevelOutput{})
	pulumi.RegisterOutputType(DefaultConsistencyLevelPtrOutput{})
	pulumi.RegisterOutputType(IndexKindOutput{})
	pulumi.RegisterOutputType(IndexKindPtrOutput{})
	pulumi.RegisterOutputType(IndexingModeOutput{})
	pulumi.RegisterOutputType(IndexingModePtrOutput{})
	pulumi.RegisterOutputType(ManagedCassandraProvisioningStateOutput{})
	pulumi.RegisterOutputType(ManagedCassandraProvisioningStatePtrOutput{})
	pulumi.RegisterOutputType(NetworkAclBypassOutput{})
	pulumi.RegisterOutputType(NetworkAclBypassPtrOutput{})
	pulumi.RegisterOutputType(PartitionKindOutput{})
	pulumi.RegisterOutputType(PartitionKindPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessOutput{})
	pulumi.RegisterOutputType(PublicNetworkAccessPtrOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypeOutput{})
	pulumi.RegisterOutputType(ResourceIdentityTypePtrOutput{})
	pulumi.RegisterOutputType(RoleDefinitionTypeOutput{})
	pulumi.RegisterOutputType(RoleDefinitionTypePtrOutput{})
	pulumi.RegisterOutputType(ServerVersionOutput{})
	pulumi.RegisterOutputType(ServerVersionPtrOutput{})
	pulumi.RegisterOutputType(ServiceSizeOutput{})
	pulumi.RegisterOutputType(ServiceSizePtrOutput{})
	pulumi.RegisterOutputType(ServiceTypeOutput{})
	pulumi.RegisterOutputType(ServiceTypePtrOutput{})
	pulumi.RegisterOutputType(SpatialTypeOutput{})
	pulumi.RegisterOutputType(SpatialTypePtrOutput{})
	pulumi.RegisterOutputType(TriggerOperationOutput{})
	pulumi.RegisterOutputType(TriggerOperationPtrOutput{})
	pulumi.RegisterOutputType(TriggerTypeOutput{})
	pulumi.RegisterOutputType(TriggerTypePtrOutput{})
}
