// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20190901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CertificatePermissions pulumi.String

const (
	CertificatePermissionsAll            = CertificatePermissions("all")
	CertificatePermissionsGet            = CertificatePermissions("get")
	CertificatePermissionsList           = CertificatePermissions("list")
	CertificatePermissionsDelete         = CertificatePermissions("delete")
	CertificatePermissionsCreate         = CertificatePermissions("create")
	CertificatePermissionsImport         = CertificatePermissions("import")
	CertificatePermissionsUpdate         = CertificatePermissions("update")
	CertificatePermissionsManagecontacts = CertificatePermissions("managecontacts")
	CertificatePermissionsGetissuers     = CertificatePermissions("getissuers")
	CertificatePermissionsListissuers    = CertificatePermissions("listissuers")
	CertificatePermissionsSetissuers     = CertificatePermissions("setissuers")
	CertificatePermissionsDeleteissuers  = CertificatePermissions("deleteissuers")
	CertificatePermissionsManageissuers  = CertificatePermissions("manageissuers")
	CertificatePermissionsRecover        = CertificatePermissions("recover")
	CertificatePermissionsPurge          = CertificatePermissions("purge")
	CertificatePermissionsBackup         = CertificatePermissions("backup")
	CertificatePermissionsRestore        = CertificatePermissions("restore")
)

func (CertificatePermissions) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CertificatePermissions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificatePermissions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificatePermissions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CertificatePermissions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The vault's create mode to indicate whether the vault need to be recovered or not.
type CreateMode pulumi.String

const (
	CreateModeRecover = CreateMode("recover")
	CreateModeDefault = CreateMode("default")
)

func (CreateMode) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e CreateMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreateMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CreateMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CreateMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The elliptic curve name. For valid values, see JsonWebKeyCurveName.
type JsonWebKeyCurveName pulumi.String

const (
	JsonWebKeyCurveName_P_256  = JsonWebKeyCurveName("P-256")
	JsonWebKeyCurveName_P_384  = JsonWebKeyCurveName("P-384")
	JsonWebKeyCurveName_P_521  = JsonWebKeyCurveName("P-521")
	JsonWebKeyCurveName_P_256K = JsonWebKeyCurveName("P-256K")
)

func (JsonWebKeyCurveName) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e JsonWebKeyCurveName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyCurveName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyCurveName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JsonWebKeyCurveName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The permitted JSON web key operations of the key. For more information, see JsonWebKeyOperation.
type JsonWebKeyOperation pulumi.String

const (
	JsonWebKeyOperationEncrypt   = JsonWebKeyOperation("encrypt")
	JsonWebKeyOperationDecrypt   = JsonWebKeyOperation("decrypt")
	JsonWebKeyOperationSign      = JsonWebKeyOperation("sign")
	JsonWebKeyOperationVerify    = JsonWebKeyOperation("verify")
	JsonWebKeyOperationWrapKey   = JsonWebKeyOperation("wrapKey")
	JsonWebKeyOperationUnwrapKey = JsonWebKeyOperation("unwrapKey")
	JsonWebKeyOperationImport    = JsonWebKeyOperation("import")
)

func (JsonWebKeyOperation) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e JsonWebKeyOperation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyOperation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyOperation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JsonWebKeyOperation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The type of the key. For valid values, see JsonWebKeyType.
type JsonWebKeyType pulumi.String

const (
	JsonWebKeyTypeEC       = JsonWebKeyType("EC")
	JsonWebKeyType_EC_HSM  = JsonWebKeyType("EC-HSM")
	JsonWebKeyTypeRSA      = JsonWebKeyType("RSA")
	JsonWebKeyType_RSA_HSM = JsonWebKeyType("RSA-HSM")
)

func (JsonWebKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e JsonWebKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JsonWebKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JsonWebKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type KeyPermissions pulumi.String

const (
	KeyPermissionsAll       = KeyPermissions("all")
	KeyPermissionsEncrypt   = KeyPermissions("encrypt")
	KeyPermissionsDecrypt   = KeyPermissions("decrypt")
	KeyPermissionsWrapKey   = KeyPermissions("wrapKey")
	KeyPermissionsUnwrapKey = KeyPermissions("unwrapKey")
	KeyPermissionsSign      = KeyPermissions("sign")
	KeyPermissionsVerify    = KeyPermissions("verify")
	KeyPermissionsGet       = KeyPermissions("get")
	KeyPermissionsList      = KeyPermissions("list")
	KeyPermissionsCreate    = KeyPermissions("create")
	KeyPermissionsUpdate    = KeyPermissions("update")
	KeyPermissionsImport    = KeyPermissions("import")
	KeyPermissionsDelete    = KeyPermissions("delete")
	KeyPermissionsBackup    = KeyPermissions("backup")
	KeyPermissionsRestore   = KeyPermissions("restore")
	KeyPermissionsRecover   = KeyPermissions("recover")
	KeyPermissionsPurge     = KeyPermissions("purge")
)

func (KeyPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e KeyPermissions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyPermissions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e KeyPermissions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e KeyPermissions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.
type NetworkRuleAction pulumi.String

const (
	NetworkRuleActionAllow = NetworkRuleAction("Allow")
	NetworkRuleActionDeny  = NetworkRuleAction("Deny")
)

func (NetworkRuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e NetworkRuleAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRuleAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRuleAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkRuleAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.
type NetworkRuleBypassOptions pulumi.String

const (
	NetworkRuleBypassOptionsAzureServices = NetworkRuleBypassOptions("AzureServices")
	NetworkRuleBypassOptionsNone          = NetworkRuleBypassOptions("None")
)

func (NetworkRuleBypassOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e NetworkRuleBypassOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRuleBypassOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e NetworkRuleBypassOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e NetworkRuleBypassOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Indicates whether the connection has been approved, rejected or removed by the key vault owner.
type PrivateEndpointServiceConnectionStatus pulumi.String

const (
	PrivateEndpointServiceConnectionStatusPending      = PrivateEndpointServiceConnectionStatus("Pending")
	PrivateEndpointServiceConnectionStatusApproved     = PrivateEndpointServiceConnectionStatus("Approved")
	PrivateEndpointServiceConnectionStatusRejected     = PrivateEndpointServiceConnectionStatus("Rejected")
	PrivateEndpointServiceConnectionStatusDisconnected = PrivateEndpointServiceConnectionStatus("Disconnected")
)

func (PrivateEndpointServiceConnectionStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PrivateEndpointServiceConnectionStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SecretPermissions pulumi.String

const (
	SecretPermissionsAll     = SecretPermissions("all")
	SecretPermissionsGet     = SecretPermissions("get")
	SecretPermissionsList    = SecretPermissions("list")
	SecretPermissionsSet     = SecretPermissions("set")
	SecretPermissionsDelete  = SecretPermissions("delete")
	SecretPermissionsBackup  = SecretPermissions("backup")
	SecretPermissionsRestore = SecretPermissions("restore")
	SecretPermissionsRecover = SecretPermissions("recover")
	SecretPermissionsPurge   = SecretPermissions("purge")
)

func (SecretPermissions) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SecretPermissions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretPermissions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SecretPermissions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SecretPermissions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// SKU family name
type SkuFamily pulumi.String

const (
	SkuFamilyA = SkuFamily("A")
)

func (SkuFamily) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SkuFamily) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuFamily) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuFamily) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuFamily) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// SKU name to specify whether the key vault is a standard vault or a premium vault.
type SkuName pulumi.String

const (
	SkuNameStandard = SkuName("standard")
	SkuNamePremium  = SkuName("premium")
)

func (SkuName) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e SkuName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SkuName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SkuName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StoragePermissions pulumi.String

const (
	StoragePermissionsAll           = StoragePermissions("all")
	StoragePermissionsGet           = StoragePermissions("get")
	StoragePermissionsList          = StoragePermissions("list")
	StoragePermissionsDelete        = StoragePermissions("delete")
	StoragePermissionsSet           = StoragePermissions("set")
	StoragePermissionsUpdate        = StoragePermissions("update")
	StoragePermissionsRegeneratekey = StoragePermissions("regeneratekey")
	StoragePermissionsRecover       = StoragePermissions("recover")
	StoragePermissionsPurge         = StoragePermissions("purge")
	StoragePermissionsBackup        = StoragePermissions("backup")
	StoragePermissionsRestore       = StoragePermissions("restore")
	StoragePermissionsSetsas        = StoragePermissions("setsas")
	StoragePermissionsListsas       = StoragePermissions("listsas")
	StoragePermissionsGetsas        = StoragePermissions("getsas")
	StoragePermissionsDeletesas     = StoragePermissions("deletesas")
)

func (StoragePermissions) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e StoragePermissions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StoragePermissions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StoragePermissions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StoragePermissions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// Provisioning state of the vault.
type VaultProvisioningState pulumi.String

const (
	VaultProvisioningStateSucceeded      = VaultProvisioningState("Succeeded")
	VaultProvisioningStateRegisteringDns = VaultProvisioningState("RegisteringDns")
)

func (VaultProvisioningState) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e VaultProvisioningState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VaultProvisioningState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VaultProvisioningState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VaultProvisioningState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
