// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Certificate purchase order
type CertificateOrder struct {
	pulumi.CustomResourceState

	// Auto renew
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates CertificateOrderCertificateResponseMapOutput `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr pulumi.StringPtrOutput `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName pulumi.StringPtrOutput `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken pulumi.StringPtrOutput `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime pulumi.StringPtrOutput `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate CertificateDetailsResponsePtrOutput `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize pulumi.IntPtrOutput `pulumi:"keySize"`
	// Kind of resource
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Certificate last issuance time
	LastCertificateIssuanceTime pulumi.StringPtrOutput `pulumi:"lastCertificateIssuanceTime"`
	// Resource Location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Certificate product type
	ProductType pulumi.StringPtrOutput `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Root certificate
	Root CertificateDetailsResponsePtrOutput `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber pulumi.StringPtrOutput `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate CertificateDetailsResponsePtrOutput `pulumi:"signedCertificate"`
	// Current order status
	Status pulumi.StringPtrOutput `pulumi:"status"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears pulumi.IntPtrOutput `pulumi:"validityInYears"`
}

// NewCertificateOrder registers a new resource with the given unique name, arguments, and options.
func NewCertificateOrder(ctx *pulumi.Context,
	name string, args *CertificateOrderArgs, opts ...pulumi.ResourceOption) (*CertificateOrder, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &CertificateOrderArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:certificateregistration/latest:CertificateOrder"),
		},
		{
			Type: pulumi.String("azure-nextgen:certificateregistration/v20180201:CertificateOrder"),
		},
		{
			Type: pulumi.String("azure-nextgen:certificateregistration/v20190801:CertificateOrder"),
		},
		{
			Type: pulumi.String("azure-nextgen:certificateregistration/v20200601:CertificateOrder"),
		},
	})
	opts = append(opts, aliases)
	var resource CertificateOrder
	err := ctx.RegisterResource("azure-nextgen:certificateregistration/v20150801:CertificateOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateOrder gets an existing CertificateOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateOrderState, opts ...pulumi.ResourceOption) (*CertificateOrder, error) {
	var resource CertificateOrder
	err := ctx.ReadResource("azure-nextgen:certificateregistration/v20150801:CertificateOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateOrder resources.
type certificateOrderState struct {
	// Auto renew
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates map[string]CertificateOrderCertificateResponse `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken *string `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime *string `pulumi:"expirationTime"`
	// Intermediate certificate
	Intermediate *CertificateDetailsResponse `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize *int `pulumi:"keySize"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Certificate last issuance time
	LastCertificateIssuanceTime *string `pulumi:"lastCertificateIssuanceTime"`
	// Resource Location
	Location *string `pulumi:"location"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Certificate product type
	ProductType *string `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState *string `pulumi:"provisioningState"`
	// Root certificate
	Root *CertificateDetailsResponse `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber *string `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate *CertificateDetailsResponse `pulumi:"signedCertificate"`
	// Current order status
	Status *string `pulumi:"status"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears *int `pulumi:"validityInYears"`
}

type CertificateOrderState struct {
	// Auto renew
	AutoRenew pulumi.BoolPtrInput
	// State of the Key Vault secret
	Certificates CertificateOrderCertificateResponseMapInput
	// Last CSR that was created for this order
	Csr pulumi.StringPtrInput
	// Certificate distinguished name
	DistinguishedName pulumi.StringPtrInput
	// Domain Verification Token
	DomainVerificationToken pulumi.StringPtrInput
	// Certificate expiration time
	ExpirationTime pulumi.StringPtrInput
	// Intermediate certificate
	Intermediate CertificateDetailsResponsePtrInput
	// Certificate Key Size
	KeySize pulumi.IntPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Certificate last issuance time
	LastCertificateIssuanceTime pulumi.StringPtrInput
	// Resource Location
	Location pulumi.StringPtrInput
	// Resource Name
	Name pulumi.StringPtrInput
	// Certificate product type
	ProductType pulumi.StringPtrInput
	// Status of certificate order
	ProvisioningState pulumi.StringPtrInput
	// Root certificate
	Root CertificateDetailsResponsePtrInput
	// Current serial number of the certificate
	SerialNumber pulumi.StringPtrInput
	// Signed certificate
	SignedCertificate CertificateDetailsResponsePtrInput
	// Current order status
	Status pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
	// Duration in years (must be between 1 and 3)
	ValidityInYears pulumi.IntPtrInput
}

func (CertificateOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateOrderState)(nil)).Elem()
}

type certificateOrderArgs struct {
	// Auto renew
	AutoRenew *bool `pulumi:"autoRenew"`
	// State of the Key Vault secret
	Certificates map[string]CertificateOrderCertificateType `pulumi:"certificates"`
	// Last CSR that was created for this order
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Domain Verification Token
	DomainVerificationToken *string `pulumi:"domainVerificationToken"`
	// Certificate expiration time
	ExpirationTime *string `pulumi:"expirationTime"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Intermediate certificate
	Intermediate *CertificateDetails `pulumi:"intermediate"`
	// Certificate Key Size
	KeySize *int `pulumi:"keySize"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Certificate last issuance time
	LastCertificateIssuanceTime *string `pulumi:"lastCertificateIssuanceTime"`
	// Resource Location
	Location string `pulumi:"location"`
	// Resource Name
	Name string `pulumi:"name"`
	// Certificate product type
	ProductType *string `pulumi:"productType"`
	// Status of certificate order
	ProvisioningState *string `pulumi:"provisioningState"`
	// Azure resource group name
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Root certificate
	Root *CertificateDetails `pulumi:"root"`
	// Current serial number of the certificate
	SerialNumber *string `pulumi:"serialNumber"`
	// Signed certificate
	SignedCertificate *CertificateDetails `pulumi:"signedCertificate"`
	// Current order status
	Status *string `pulumi:"status"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
	// Duration in years (must be between 1 and 3)
	ValidityInYears *int `pulumi:"validityInYears"`
}

// The set of arguments for constructing a CertificateOrder resource.
type CertificateOrderArgs struct {
	// Auto renew
	AutoRenew pulumi.BoolPtrInput
	// State of the Key Vault secret
	Certificates CertificateOrderCertificateTypeMapInput
	// Last CSR that was created for this order
	Csr pulumi.StringPtrInput
	// Certificate distinguished name
	DistinguishedName pulumi.StringPtrInput
	// Domain Verification Token
	DomainVerificationToken pulumi.StringPtrInput
	// Certificate expiration time
	ExpirationTime pulumi.StringPtrInput
	// Resource Id
	Id pulumi.StringPtrInput
	// Intermediate certificate
	Intermediate CertificateDetailsPtrInput
	// Certificate Key Size
	KeySize pulumi.IntPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Certificate last issuance time
	LastCertificateIssuanceTime pulumi.StringPtrInput
	// Resource Location
	Location pulumi.StringInput
	// Resource Name
	Name pulumi.StringInput
	// Certificate product type
	ProductType pulumi.StringPtrInput
	// Status of certificate order
	ProvisioningState pulumi.StringPtrInput
	// Azure resource group name
	ResourceGroupName pulumi.StringInput
	// Root certificate
	Root CertificateDetailsPtrInput
	// Current serial number of the certificate
	SerialNumber pulumi.StringPtrInput
	// Signed certificate
	SignedCertificate CertificateDetailsPtrInput
	// Current order status
	Status pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
	// Duration in years (must be between 1 and 3)
	ValidityInYears pulumi.IntPtrInput
}

func (CertificateOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateOrderArgs)(nil)).Elem()
}
