// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20201201

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SSL certificate purchase order.
type AppServiceCertificateOrder struct {
	pulumi.CustomResourceState

	// Reasons why App Service Certificate is not renewable at the current moment.
	AppServiceCertificateNotRenewableReasons pulumi.StringArrayOutput `pulumi:"appServiceCertificateNotRenewableReasons"`
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew pulumi.BoolPtrOutput `pulumi:"autoRenew"`
	// State of the Key Vault secret.
	Certificates AppServiceCertificateResponseMapOutput `pulumi:"certificates"`
	// Contact info
	Contact CertificateOrderContactResponseOutput `pulumi:"contact"`
	// Last CSR that was created for this order.
	Csr pulumi.StringPtrOutput `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName pulumi.StringPtrOutput `pulumi:"distinguishedName"`
	// Domain verification token.
	DomainVerificationToken pulumi.StringOutput `pulumi:"domainVerificationToken"`
	// Certificate expiration time.
	ExpirationTime pulumi.StringOutput `pulumi:"expirationTime"`
	// Intermediate certificate.
	Intermediate CertificateDetailsResponseOutput `pulumi:"intermediate"`
	// <code>true</code> if private key is external; otherwise, <code>false</code>.
	IsPrivateKeyExternal pulumi.BoolOutput `pulumi:"isPrivateKeyExternal"`
	// Certificate key size.
	KeySize pulumi.IntPtrOutput `pulumi:"keySize"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Certificate last issuance time.
	LastCertificateIssuanceTime pulumi.StringOutput `pulumi:"lastCertificateIssuanceTime"`
	// Resource Location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Time stamp when the certificate would be auto renewed next
	NextAutoRenewalTimeStamp pulumi.StringOutput `pulumi:"nextAutoRenewalTimeStamp"`
	// Certificate product type.
	ProductType pulumi.StringOutput `pulumi:"productType"`
	// Status of certificate order.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Root certificate.
	Root CertificateDetailsResponseOutput `pulumi:"root"`
	// Current serial number of the certificate.
	SerialNumber pulumi.StringOutput `pulumi:"serialNumber"`
	// Signed certificate.
	SignedCertificate CertificateDetailsResponseOutput `pulumi:"signedCertificate"`
	// Current order status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Duration in years (must be 1).
	ValidityInYears pulumi.IntPtrOutput `pulumi:"validityInYears"`
}

// NewAppServiceCertificateOrder registers a new resource with the given unique name, arguments, and options.
func NewAppServiceCertificateOrder(ctx *pulumi.Context,
	name string, args *AppServiceCertificateOrderArgs, opts ...pulumi.ResourceOption) (*AppServiceCertificateOrder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProductType == nil {
		return nil, errors.New("invalid value for required argument 'ProductType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if isZero(args.AutoRenew) {
		args.AutoRenew = pulumi.BoolPtr(true)
	}
	if isZero(args.KeySize) {
		args.KeySize = pulumi.IntPtr(2048)
	}
	if isZero(args.ValidityInYears) {
		args.ValidityInYears = pulumi.IntPtr(1)
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:certificateregistration:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20150801:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20180201:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20190801:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20200601:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20200901:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20201001:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20210101:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20210115:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20210201:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20210301:AppServiceCertificateOrder"),
		},
		{
			Type: pulumi.String("azure-native:certificateregistration/v20220301:AppServiceCertificateOrder"),
		},
	})
	opts = append(opts, aliases)
	var resource AppServiceCertificateOrder
	err := ctx.RegisterResource("azure-native:certificateregistration/v20201201:AppServiceCertificateOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppServiceCertificateOrder gets an existing AppServiceCertificateOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppServiceCertificateOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceCertificateOrderState, opts ...pulumi.ResourceOption) (*AppServiceCertificateOrder, error) {
	var resource AppServiceCertificateOrder
	err := ctx.ReadResource("azure-native:certificateregistration/v20201201:AppServiceCertificateOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppServiceCertificateOrder resources.
type appServiceCertificateOrderState struct {
}

type AppServiceCertificateOrderState struct {
}

func (AppServiceCertificateOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceCertificateOrderState)(nil)).Elem()
}

type appServiceCertificateOrderArgs struct {
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew *bool `pulumi:"autoRenew"`
	// Name of the certificate order.
	CertificateOrderName *string `pulumi:"certificateOrderName"`
	// State of the Key Vault secret.
	Certificates map[string]AppServiceCertificate `pulumi:"certificates"`
	// Last CSR that was created for this order.
	Csr *string `pulumi:"csr"`
	// Certificate distinguished name.
	DistinguishedName *string `pulumi:"distinguishedName"`
	// Certificate key size.
	KeySize *int `pulumi:"keySize"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location *string `pulumi:"location"`
	// Certificate product type.
	ProductType CertificateProductType `pulumi:"productType"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Duration in years (must be 1).
	ValidityInYears *int `pulumi:"validityInYears"`
}

// The set of arguments for constructing a AppServiceCertificateOrder resource.
type AppServiceCertificateOrderArgs struct {
	// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
	AutoRenew pulumi.BoolPtrInput
	// Name of the certificate order.
	CertificateOrderName pulumi.StringPtrInput
	// State of the Key Vault secret.
	Certificates AppServiceCertificateMapInput
	// Last CSR that was created for this order.
	Csr pulumi.StringPtrInput
	// Certificate distinguished name.
	DistinguishedName pulumi.StringPtrInput
	// Certificate key size.
	KeySize pulumi.IntPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Resource Location.
	Location pulumi.StringPtrInput
	// Certificate product type.
	ProductType CertificateProductTypeInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Duration in years (must be 1).
	ValidityInYears pulumi.IntPtrInput
}

func (AppServiceCertificateOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceCertificateOrderArgs)(nil)).Elem()
}

type AppServiceCertificateOrderInput interface {
	pulumi.Input

	ToAppServiceCertificateOrderOutput() AppServiceCertificateOrderOutput
	ToAppServiceCertificateOrderOutputWithContext(ctx context.Context) AppServiceCertificateOrderOutput
}

func (*AppServiceCertificateOrder) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrder)(nil)).Elem()
}

func (i *AppServiceCertificateOrder) ToAppServiceCertificateOrderOutput() AppServiceCertificateOrderOutput {
	return i.ToAppServiceCertificateOrderOutputWithContext(context.Background())
}

func (i *AppServiceCertificateOrder) ToAppServiceCertificateOrderOutputWithContext(ctx context.Context) AppServiceCertificateOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceCertificateOrderOutput)
}

type AppServiceCertificateOrderOutput struct{ *pulumi.OutputState }

func (AppServiceCertificateOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceCertificateOrder)(nil)).Elem()
}

func (o AppServiceCertificateOrderOutput) ToAppServiceCertificateOrderOutput() AppServiceCertificateOrderOutput {
	return o
}

func (o AppServiceCertificateOrderOutput) ToAppServiceCertificateOrderOutputWithContext(ctx context.Context) AppServiceCertificateOrderOutput {
	return o
}

// Reasons why App Service Certificate is not renewable at the current moment.
func (o AppServiceCertificateOrderOutput) AppServiceCertificateNotRenewableReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringArrayOutput {
		return v.AppServiceCertificateNotRenewableReasons
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if the certificate should be automatically renewed when it expires; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

// State of the Key Vault secret.
func (o AppServiceCertificateOrderOutput) Certificates() AppServiceCertificateResponseMapOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) AppServiceCertificateResponseMapOutput { return v.Certificates }).(AppServiceCertificateResponseMapOutput)
}

// Contact info
func (o AppServiceCertificateOrderOutput) Contact() CertificateOrderContactResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) CertificateOrderContactResponseOutput { return v.Contact }).(CertificateOrderContactResponseOutput)
}

// Last CSR that was created for this order.
func (o AppServiceCertificateOrderOutput) Csr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringPtrOutput { return v.Csr }).(pulumi.StringPtrOutput)
}

// Certificate distinguished name.
func (o AppServiceCertificateOrderOutput) DistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringPtrOutput { return v.DistinguishedName }).(pulumi.StringPtrOutput)
}

// Domain verification token.
func (o AppServiceCertificateOrderOutput) DomainVerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.DomainVerificationToken }).(pulumi.StringOutput)
}

// Certificate expiration time.
func (o AppServiceCertificateOrderOutput) ExpirationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.ExpirationTime }).(pulumi.StringOutput)
}

// Intermediate certificate.
func (o AppServiceCertificateOrderOutput) Intermediate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) CertificateDetailsResponseOutput { return v.Intermediate }).(CertificateDetailsResponseOutput)
}

// <code>true</code> if private key is external; otherwise, <code>false</code>.
func (o AppServiceCertificateOrderOutput) IsPrivateKeyExternal() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.BoolOutput { return v.IsPrivateKeyExternal }).(pulumi.BoolOutput)
}

// Certificate key size.
func (o AppServiceCertificateOrderOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.IntPtrOutput { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Kind of resource.
func (o AppServiceCertificateOrderOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Certificate last issuance time.
func (o AppServiceCertificateOrderOutput) LastCertificateIssuanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.LastCertificateIssuanceTime }).(pulumi.StringOutput)
}

// Resource Location.
func (o AppServiceCertificateOrderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o AppServiceCertificateOrderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Time stamp when the certificate would be auto renewed next
func (o AppServiceCertificateOrderOutput) NextAutoRenewalTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.NextAutoRenewalTimeStamp }).(pulumi.StringOutput)
}

// Certificate product type.
func (o AppServiceCertificateOrderOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.ProductType }).(pulumi.StringOutput)
}

// Status of certificate order.
func (o AppServiceCertificateOrderOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Root certificate.
func (o AppServiceCertificateOrderOutput) Root() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) CertificateDetailsResponseOutput { return v.Root }).(CertificateDetailsResponseOutput)
}

// Current serial number of the certificate.
func (o AppServiceCertificateOrderOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.SerialNumber }).(pulumi.StringOutput)
}

// Signed certificate.
func (o AppServiceCertificateOrderOutput) SignedCertificate() CertificateDetailsResponseOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) CertificateDetailsResponseOutput { return v.SignedCertificate }).(CertificateDetailsResponseOutput)
}

// Current order status.
func (o AppServiceCertificateOrderOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Resource tags.
func (o AppServiceCertificateOrderOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o AppServiceCertificateOrderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Duration in years (must be 1).
func (o AppServiceCertificateOrderOutput) ValidityInYears() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceCertificateOrder) pulumi.IntPtrOutput { return v.ValidityInYears }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceCertificateOrderOutput{})
}
