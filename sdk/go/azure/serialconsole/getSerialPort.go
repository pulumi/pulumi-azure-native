// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package serialconsole

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupSerialPort(ctx *pulumi.Context, args *LookupSerialPortArgs, opts ...pulumi.InvokeOption) (*LookupSerialPortResult, error) {
	var rv LookupSerialPortResult
	err := ctx.Invoke("azure-nextgen:serialconsole:getSerialPort", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSerialPortArgs struct {
	// The resource name, or subordinate path, for the parent of the serial port. For example: the name of the virtual machine.
	ParentResource string `pulumi:"parentResource"`
	// The resource type of the parent resource.  For example: 'virtualMachines' or 'virtualMachineScaleSets'
	ParentResourceType string `pulumi:"parentResourceType"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The namespace of the resource provider.
	ResourceProviderNamespace string `pulumi:"resourceProviderNamespace"`
	// The name of the serial port to connect to.
	SerialPort string `pulumi:"serialPort"`
}

// Represents the serial port of the parent resource.
type LookupSerialPortResult struct {
	// Resource Id
	Id string `pulumi:"id"`
	// Resource name
	Name string `pulumi:"name"`
	// Specifies whether the port is enabled for a serial console connection.
	State *string `pulumi:"state"`
	// Resource type
	Type string `pulumi:"type"`
}
