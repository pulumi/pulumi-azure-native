// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160901

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Action object.
type AccessControlEntryAction string

const (
	AccessControlEntryActionPermit = AccessControlEntryAction("Permit")
	AccessControlEntryActionDeny   = AccessControlEntryAction("Deny")
)

func (AccessControlEntryAction) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlEntryAction)(nil)).Elem()
}

func (e AccessControlEntryAction) ToAccessControlEntryActionOutput() AccessControlEntryActionOutput {
	return pulumi.ToOutput(e).(AccessControlEntryActionOutput)
}

func (e AccessControlEntryAction) ToAccessControlEntryActionOutputWithContext(ctx context.Context) AccessControlEntryActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AccessControlEntryActionOutput)
}

func (e AccessControlEntryAction) ToAccessControlEntryActionPtrOutput() AccessControlEntryActionPtrOutput {
	return e.ToAccessControlEntryActionPtrOutputWithContext(context.Background())
}

func (e AccessControlEntryAction) ToAccessControlEntryActionPtrOutputWithContext(ctx context.Context) AccessControlEntryActionPtrOutput {
	return AccessControlEntryAction(e).ToAccessControlEntryActionOutputWithContext(ctx).ToAccessControlEntryActionPtrOutputWithContext(ctx)
}

func (e AccessControlEntryAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessControlEntryAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AccessControlEntryAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AccessControlEntryAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AccessControlEntryActionOutput struct{ *pulumi.OutputState }

func (AccessControlEntryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessControlEntryAction)(nil)).Elem()
}

func (o AccessControlEntryActionOutput) ToAccessControlEntryActionOutput() AccessControlEntryActionOutput {
	return o
}

func (o AccessControlEntryActionOutput) ToAccessControlEntryActionOutputWithContext(ctx context.Context) AccessControlEntryActionOutput {
	return o
}

func (o AccessControlEntryActionOutput) ToAccessControlEntryActionPtrOutput() AccessControlEntryActionPtrOutput {
	return o.ToAccessControlEntryActionPtrOutputWithContext(context.Background())
}

func (o AccessControlEntryActionOutput) ToAccessControlEntryActionPtrOutputWithContext(ctx context.Context) AccessControlEntryActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessControlEntryAction) *AccessControlEntryAction {
		return &v
	}).(AccessControlEntryActionPtrOutput)
}

func (o AccessControlEntryActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AccessControlEntryActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessControlEntryAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AccessControlEntryActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessControlEntryActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AccessControlEntryAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AccessControlEntryActionPtrOutput struct{ *pulumi.OutputState }

func (AccessControlEntryActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessControlEntryAction)(nil)).Elem()
}

func (o AccessControlEntryActionPtrOutput) ToAccessControlEntryActionPtrOutput() AccessControlEntryActionPtrOutput {
	return o
}

func (o AccessControlEntryActionPtrOutput) ToAccessControlEntryActionPtrOutputWithContext(ctx context.Context) AccessControlEntryActionPtrOutput {
	return o
}

func (o AccessControlEntryActionPtrOutput) Elem() AccessControlEntryActionOutput {
	return o.ApplyT(func(v *AccessControlEntryAction) AccessControlEntryAction {
		if v != nil {
			return *v
		}
		var ret AccessControlEntryAction
		return ret
	}).(AccessControlEntryActionOutput)
}

func (o AccessControlEntryActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AccessControlEntryActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AccessControlEntryAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AccessControlEntryActionInput is an input type that accepts AccessControlEntryActionArgs and AccessControlEntryActionOutput values.
// You can construct a concrete instance of `AccessControlEntryActionInput` via:
//
//	AccessControlEntryActionArgs{...}
type AccessControlEntryActionInput interface {
	pulumi.Input

	ToAccessControlEntryActionOutput() AccessControlEntryActionOutput
	ToAccessControlEntryActionOutputWithContext(context.Context) AccessControlEntryActionOutput
}

var accessControlEntryActionPtrType = reflect.TypeOf((**AccessControlEntryAction)(nil)).Elem()

type AccessControlEntryActionPtrInput interface {
	pulumi.Input

	ToAccessControlEntryActionPtrOutput() AccessControlEntryActionPtrOutput
	ToAccessControlEntryActionPtrOutputWithContext(context.Context) AccessControlEntryActionPtrOutput
}

type accessControlEntryActionPtr string

func AccessControlEntryActionPtr(v string) AccessControlEntryActionPtrInput {
	return (*accessControlEntryActionPtr)(&v)
}

func (*accessControlEntryActionPtr) ElementType() reflect.Type {
	return accessControlEntryActionPtrType
}

func (in *accessControlEntryActionPtr) ToAccessControlEntryActionPtrOutput() AccessControlEntryActionPtrOutput {
	return pulumi.ToOutput(in).(AccessControlEntryActionPtrOutput)
}

func (in *accessControlEntryActionPtr) ToAccessControlEntryActionPtrOutputWithContext(ctx context.Context) AccessControlEntryActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AccessControlEntryActionPtrOutput)
}

// Shared or dedicated app hosting.
type ComputeModeOptions string

const (
	ComputeModeOptionsShared    = ComputeModeOptions("Shared")
	ComputeModeOptionsDedicated = ComputeModeOptions("Dedicated")
	ComputeModeOptionsDynamic   = ComputeModeOptions("Dynamic")
)

func (ComputeModeOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeModeOptions)(nil)).Elem()
}

func (e ComputeModeOptions) ToComputeModeOptionsOutput() ComputeModeOptionsOutput {
	return pulumi.ToOutput(e).(ComputeModeOptionsOutput)
}

func (e ComputeModeOptions) ToComputeModeOptionsOutputWithContext(ctx context.Context) ComputeModeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ComputeModeOptionsOutput)
}

func (e ComputeModeOptions) ToComputeModeOptionsPtrOutput() ComputeModeOptionsPtrOutput {
	return e.ToComputeModeOptionsPtrOutputWithContext(context.Background())
}

func (e ComputeModeOptions) ToComputeModeOptionsPtrOutputWithContext(ctx context.Context) ComputeModeOptionsPtrOutput {
	return ComputeModeOptions(e).ToComputeModeOptionsOutputWithContext(ctx).ToComputeModeOptionsPtrOutputWithContext(ctx)
}

func (e ComputeModeOptions) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeModeOptions) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ComputeModeOptions) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ComputeModeOptions) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ComputeModeOptionsOutput struct{ *pulumi.OutputState }

func (ComputeModeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeModeOptions)(nil)).Elem()
}

func (o ComputeModeOptionsOutput) ToComputeModeOptionsOutput() ComputeModeOptionsOutput {
	return o
}

func (o ComputeModeOptionsOutput) ToComputeModeOptionsOutputWithContext(ctx context.Context) ComputeModeOptionsOutput {
	return o
}

func (o ComputeModeOptionsOutput) ToComputeModeOptionsPtrOutput() ComputeModeOptionsPtrOutput {
	return o.ToComputeModeOptionsPtrOutputWithContext(context.Background())
}

func (o ComputeModeOptionsOutput) ToComputeModeOptionsPtrOutputWithContext(ctx context.Context) ComputeModeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComputeModeOptions) *ComputeModeOptions {
		return &v
	}).(ComputeModeOptionsPtrOutput)
}

func (o ComputeModeOptionsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ComputeModeOptionsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeModeOptions) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ComputeModeOptionsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeModeOptionsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ComputeModeOptions) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ComputeModeOptionsPtrOutput struct{ *pulumi.OutputState }

func (ComputeModeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeModeOptions)(nil)).Elem()
}

func (o ComputeModeOptionsPtrOutput) ToComputeModeOptionsPtrOutput() ComputeModeOptionsPtrOutput {
	return o
}

func (o ComputeModeOptionsPtrOutput) ToComputeModeOptionsPtrOutputWithContext(ctx context.Context) ComputeModeOptionsPtrOutput {
	return o
}

func (o ComputeModeOptionsPtrOutput) Elem() ComputeModeOptionsOutput {
	return o.ApplyT(func(v *ComputeModeOptions) ComputeModeOptions {
		if v != nil {
			return *v
		}
		var ret ComputeModeOptions
		return ret
	}).(ComputeModeOptionsOutput)
}

func (o ComputeModeOptionsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ComputeModeOptionsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ComputeModeOptions) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ComputeModeOptionsInput is an input type that accepts ComputeModeOptionsArgs and ComputeModeOptionsOutput values.
// You can construct a concrete instance of `ComputeModeOptionsInput` via:
//
//	ComputeModeOptionsArgs{...}
type ComputeModeOptionsInput interface {
	pulumi.Input

	ToComputeModeOptionsOutput() ComputeModeOptionsOutput
	ToComputeModeOptionsOutputWithContext(context.Context) ComputeModeOptionsOutput
}

var computeModeOptionsPtrType = reflect.TypeOf((**ComputeModeOptions)(nil)).Elem()

type ComputeModeOptionsPtrInput interface {
	pulumi.Input

	ToComputeModeOptionsPtrOutput() ComputeModeOptionsPtrOutput
	ToComputeModeOptionsPtrOutputWithContext(context.Context) ComputeModeOptionsPtrOutput
}

type computeModeOptionsPtr string

func ComputeModeOptionsPtr(v string) ComputeModeOptionsPtrInput {
	return (*computeModeOptionsPtr)(&v)
}

func (*computeModeOptionsPtr) ElementType() reflect.Type {
	return computeModeOptionsPtrType
}

func (in *computeModeOptionsPtr) ToComputeModeOptionsPtrOutput() ComputeModeOptionsPtrOutput {
	return pulumi.ToOutput(in).(ComputeModeOptionsPtrOutput)
}

func (in *computeModeOptionsPtr) ToComputeModeOptionsPtrOutputWithContext(ctx context.Context) ComputeModeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ComputeModeOptionsPtrOutput)
}

// Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment.
type InternalLoadBalancingMode string

const (
	InternalLoadBalancingModeNone       = InternalLoadBalancingMode("None")
	InternalLoadBalancingModeWeb        = InternalLoadBalancingMode("Web")
	InternalLoadBalancingModePublishing = InternalLoadBalancingMode("Publishing")
)

func (InternalLoadBalancingMode) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalLoadBalancingMode)(nil)).Elem()
}

func (e InternalLoadBalancingMode) ToInternalLoadBalancingModeOutput() InternalLoadBalancingModeOutput {
	return pulumi.ToOutput(e).(InternalLoadBalancingModeOutput)
}

func (e InternalLoadBalancingMode) ToInternalLoadBalancingModeOutputWithContext(ctx context.Context) InternalLoadBalancingModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(InternalLoadBalancingModeOutput)
}

func (e InternalLoadBalancingMode) ToInternalLoadBalancingModePtrOutput() InternalLoadBalancingModePtrOutput {
	return e.ToInternalLoadBalancingModePtrOutputWithContext(context.Background())
}

func (e InternalLoadBalancingMode) ToInternalLoadBalancingModePtrOutputWithContext(ctx context.Context) InternalLoadBalancingModePtrOutput {
	return InternalLoadBalancingMode(e).ToInternalLoadBalancingModeOutputWithContext(ctx).ToInternalLoadBalancingModePtrOutputWithContext(ctx)
}

func (e InternalLoadBalancingMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternalLoadBalancingMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InternalLoadBalancingMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InternalLoadBalancingMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InternalLoadBalancingModeOutput struct{ *pulumi.OutputState }

func (InternalLoadBalancingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternalLoadBalancingMode)(nil)).Elem()
}

func (o InternalLoadBalancingModeOutput) ToInternalLoadBalancingModeOutput() InternalLoadBalancingModeOutput {
	return o
}

func (o InternalLoadBalancingModeOutput) ToInternalLoadBalancingModeOutputWithContext(ctx context.Context) InternalLoadBalancingModeOutput {
	return o
}

func (o InternalLoadBalancingModeOutput) ToInternalLoadBalancingModePtrOutput() InternalLoadBalancingModePtrOutput {
	return o.ToInternalLoadBalancingModePtrOutputWithContext(context.Background())
}

func (o InternalLoadBalancingModeOutput) ToInternalLoadBalancingModePtrOutputWithContext(ctx context.Context) InternalLoadBalancingModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternalLoadBalancingMode) *InternalLoadBalancingMode {
		return &v
	}).(InternalLoadBalancingModePtrOutput)
}

func (o InternalLoadBalancingModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o InternalLoadBalancingModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternalLoadBalancingMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o InternalLoadBalancingModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternalLoadBalancingModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e InternalLoadBalancingMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type InternalLoadBalancingModePtrOutput struct{ *pulumi.OutputState }

func (InternalLoadBalancingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternalLoadBalancingMode)(nil)).Elem()
}

func (o InternalLoadBalancingModePtrOutput) ToInternalLoadBalancingModePtrOutput() InternalLoadBalancingModePtrOutput {
	return o
}

func (o InternalLoadBalancingModePtrOutput) ToInternalLoadBalancingModePtrOutputWithContext(ctx context.Context) InternalLoadBalancingModePtrOutput {
	return o
}

func (o InternalLoadBalancingModePtrOutput) Elem() InternalLoadBalancingModeOutput {
	return o.ApplyT(func(v *InternalLoadBalancingMode) InternalLoadBalancingMode {
		if v != nil {
			return *v
		}
		var ret InternalLoadBalancingMode
		return ret
	}).(InternalLoadBalancingModeOutput)
}

func (o InternalLoadBalancingModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o InternalLoadBalancingModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *InternalLoadBalancingMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// InternalLoadBalancingModeInput is an input type that accepts InternalLoadBalancingModeArgs and InternalLoadBalancingModeOutput values.
// You can construct a concrete instance of `InternalLoadBalancingModeInput` via:
//
//	InternalLoadBalancingModeArgs{...}
type InternalLoadBalancingModeInput interface {
	pulumi.Input

	ToInternalLoadBalancingModeOutput() InternalLoadBalancingModeOutput
	ToInternalLoadBalancingModeOutputWithContext(context.Context) InternalLoadBalancingModeOutput
}

var internalLoadBalancingModePtrType = reflect.TypeOf((**InternalLoadBalancingMode)(nil)).Elem()

type InternalLoadBalancingModePtrInput interface {
	pulumi.Input

	ToInternalLoadBalancingModePtrOutput() InternalLoadBalancingModePtrOutput
	ToInternalLoadBalancingModePtrOutputWithContext(context.Context) InternalLoadBalancingModePtrOutput
}

type internalLoadBalancingModePtr string

func InternalLoadBalancingModePtr(v string) InternalLoadBalancingModePtrInput {
	return (*internalLoadBalancingModePtr)(&v)
}

func (*internalLoadBalancingModePtr) ElementType() reflect.Type {
	return internalLoadBalancingModePtrType
}

func (in *internalLoadBalancingModePtr) ToInternalLoadBalancingModePtrOutput() InternalLoadBalancingModePtrOutput {
	return pulumi.ToOutput(in).(InternalLoadBalancingModePtrOutput)
}

func (in *internalLoadBalancingModePtr) ToInternalLoadBalancingModePtrOutputWithContext(ctx context.Context) InternalLoadBalancingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(InternalLoadBalancingModePtrOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
type RouteType string

const (
	RouteTypeDEFAULT   = RouteType("DEFAULT")
	RouteTypeINHERITED = RouteType("INHERITED")
	RouteTypeSTATIC    = RouteType("STATIC")
)

func init() {
	pulumi.RegisterOutputType(AccessControlEntryActionOutput{})
	pulumi.RegisterOutputType(AccessControlEntryActionPtrOutput{})
	pulumi.RegisterOutputType(ComputeModeOptionsOutput{})
	pulumi.RegisterOutputType(ComputeModeOptionsPtrOutput{})
	pulumi.RegisterOutputType(InternalLoadBalancingModeOutput{})
	pulumi.RegisterOutputType(InternalLoadBalancingModePtrOutput{})
}
