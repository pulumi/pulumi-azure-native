// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidation struct {
	// The configuration settings of the allowed list of audiences from which to validate the JWT token.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
}

// AllowedAudiencesValidationInput is an input type that accepts AllowedAudiencesValidationArgs and AllowedAudiencesValidationOutput values.
// You can construct a concrete instance of `AllowedAudiencesValidationInput` via:
//
//	AllowedAudiencesValidationArgs{...}
type AllowedAudiencesValidationInput interface {
	pulumi.Input

	ToAllowedAudiencesValidationOutput() AllowedAudiencesValidationOutput
	ToAllowedAudiencesValidationOutputWithContext(context.Context) AllowedAudiencesValidationOutput
}

// The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidationArgs struct {
	// The configuration settings of the allowed list of audiences from which to validate the JWT token.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
}

func (AllowedAudiencesValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowedAudiencesValidation)(nil)).Elem()
}

func (i AllowedAudiencesValidationArgs) ToAllowedAudiencesValidationOutput() AllowedAudiencesValidationOutput {
	return i.ToAllowedAudiencesValidationOutputWithContext(context.Background())
}

func (i AllowedAudiencesValidationArgs) ToAllowedAudiencesValidationOutputWithContext(ctx context.Context) AllowedAudiencesValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowedAudiencesValidationOutput)
}

func (i AllowedAudiencesValidationArgs) ToAllowedAudiencesValidationPtrOutput() AllowedAudiencesValidationPtrOutput {
	return i.ToAllowedAudiencesValidationPtrOutputWithContext(context.Background())
}

func (i AllowedAudiencesValidationArgs) ToAllowedAudiencesValidationPtrOutputWithContext(ctx context.Context) AllowedAudiencesValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowedAudiencesValidationOutput).ToAllowedAudiencesValidationPtrOutputWithContext(ctx)
}

// AllowedAudiencesValidationPtrInput is an input type that accepts AllowedAudiencesValidationArgs, AllowedAudiencesValidationPtr and AllowedAudiencesValidationPtrOutput values.
// You can construct a concrete instance of `AllowedAudiencesValidationPtrInput` via:
//
//	        AllowedAudiencesValidationArgs{...}
//
//	or:
//
//	        nil
type AllowedAudiencesValidationPtrInput interface {
	pulumi.Input

	ToAllowedAudiencesValidationPtrOutput() AllowedAudiencesValidationPtrOutput
	ToAllowedAudiencesValidationPtrOutputWithContext(context.Context) AllowedAudiencesValidationPtrOutput
}

type allowedAudiencesValidationPtrType AllowedAudiencesValidationArgs

func AllowedAudiencesValidationPtr(v *AllowedAudiencesValidationArgs) AllowedAudiencesValidationPtrInput {
	return (*allowedAudiencesValidationPtrType)(v)
}

func (*allowedAudiencesValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowedAudiencesValidation)(nil)).Elem()
}

func (i *allowedAudiencesValidationPtrType) ToAllowedAudiencesValidationPtrOutput() AllowedAudiencesValidationPtrOutput {
	return i.ToAllowedAudiencesValidationPtrOutputWithContext(context.Background())
}

func (i *allowedAudiencesValidationPtrType) ToAllowedAudiencesValidationPtrOutputWithContext(ctx context.Context) AllowedAudiencesValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AllowedAudiencesValidationPtrOutput)
}

// The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidationOutput struct{ *pulumi.OutputState }

func (AllowedAudiencesValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowedAudiencesValidation)(nil)).Elem()
}

func (o AllowedAudiencesValidationOutput) ToAllowedAudiencesValidationOutput() AllowedAudiencesValidationOutput {
	return o
}

func (o AllowedAudiencesValidationOutput) ToAllowedAudiencesValidationOutputWithContext(ctx context.Context) AllowedAudiencesValidationOutput {
	return o
}

func (o AllowedAudiencesValidationOutput) ToAllowedAudiencesValidationPtrOutput() AllowedAudiencesValidationPtrOutput {
	return o.ToAllowedAudiencesValidationPtrOutputWithContext(context.Background())
}

func (o AllowedAudiencesValidationOutput) ToAllowedAudiencesValidationPtrOutputWithContext(ctx context.Context) AllowedAudiencesValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AllowedAudiencesValidation) *AllowedAudiencesValidation {
		return &v
	}).(AllowedAudiencesValidationPtrOutput)
}

// The configuration settings of the allowed list of audiences from which to validate the JWT token.
func (o AllowedAudiencesValidationOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowedAudiencesValidation) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

type AllowedAudiencesValidationPtrOutput struct{ *pulumi.OutputState }

func (AllowedAudiencesValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowedAudiencesValidation)(nil)).Elem()
}

func (o AllowedAudiencesValidationPtrOutput) ToAllowedAudiencesValidationPtrOutput() AllowedAudiencesValidationPtrOutput {
	return o
}

func (o AllowedAudiencesValidationPtrOutput) ToAllowedAudiencesValidationPtrOutputWithContext(ctx context.Context) AllowedAudiencesValidationPtrOutput {
	return o
}

func (o AllowedAudiencesValidationPtrOutput) Elem() AllowedAudiencesValidationOutput {
	return o.ApplyT(func(v *AllowedAudiencesValidation) AllowedAudiencesValidation {
		if v != nil {
			return *v
		}
		var ret AllowedAudiencesValidation
		return ret
	}).(AllowedAudiencesValidationOutput)
}

// The configuration settings of the allowed list of audiences from which to validate the JWT token.
func (o AllowedAudiencesValidationPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AllowedAudiencesValidation) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidationResponse struct {
	// The configuration settings of the allowed list of audiences from which to validate the JWT token.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
}

// The configuration settings of the Allowed Audiences validation flow.
type AllowedAudiencesValidationResponseOutput struct{ *pulumi.OutputState }

func (AllowedAudiencesValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AllowedAudiencesValidationResponse)(nil)).Elem()
}

func (o AllowedAudiencesValidationResponseOutput) ToAllowedAudiencesValidationResponseOutput() AllowedAudiencesValidationResponseOutput {
	return o
}

func (o AllowedAudiencesValidationResponseOutput) ToAllowedAudiencesValidationResponseOutputWithContext(ctx context.Context) AllowedAudiencesValidationResponseOutput {
	return o
}

// The configuration settings of the allowed list of audiences from which to validate the JWT token.
func (o AllowedAudiencesValidationResponseOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AllowedAudiencesValidationResponse) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

type AllowedAudiencesValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (AllowedAudiencesValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AllowedAudiencesValidationResponse)(nil)).Elem()
}

func (o AllowedAudiencesValidationResponsePtrOutput) ToAllowedAudiencesValidationResponsePtrOutput() AllowedAudiencesValidationResponsePtrOutput {
	return o
}

func (o AllowedAudiencesValidationResponsePtrOutput) ToAllowedAudiencesValidationResponsePtrOutputWithContext(ctx context.Context) AllowedAudiencesValidationResponsePtrOutput {
	return o
}

func (o AllowedAudiencesValidationResponsePtrOutput) Elem() AllowedAudiencesValidationResponseOutput {
	return o.ApplyT(func(v *AllowedAudiencesValidationResponse) AllowedAudiencesValidationResponse {
		if v != nil {
			return *v
		}
		var ret AllowedAudiencesValidationResponse
		return ret
	}).(AllowedAudiencesValidationResponseOutput)
}

// The configuration settings of the allowed list of audiences from which to validate the JWT token.
func (o AllowedAudiencesValidationResponsePtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AllowedAudiencesValidationResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

type ApiConnectionDefinitionProperties struct {
	Api *ApiReference `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime *string `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime *string `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues map[string]string `pulumi:"customParameterValues"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues map[string]string `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues map[string]string `pulumi:"parameterValues"`
	// Status of the connection
	Statuses []ConnectionStatusDefinition `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks []ApiConnectionTestLink `pulumi:"testLinks"`
}

// ApiConnectionDefinitionPropertiesInput is an input type that accepts ApiConnectionDefinitionPropertiesArgs and ApiConnectionDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionPropertiesInput` via:
//
//	ApiConnectionDefinitionPropertiesArgs{...}
type ApiConnectionDefinitionPropertiesInput interface {
	pulumi.Input

	ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput
	ToApiConnectionDefinitionPropertiesOutputWithContext(context.Context) ApiConnectionDefinitionPropertiesOutput
}

type ApiConnectionDefinitionPropertiesArgs struct {
	Api ApiReferencePtrInput `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime pulumi.StringPtrInput `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime pulumi.StringPtrInput `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues pulumi.StringMapInput `pulumi:"customParameterValues"`
	// Display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues pulumi.StringMapInput `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues pulumi.StringMapInput `pulumi:"parameterValues"`
	// Status of the connection
	Statuses ConnectionStatusDefinitionArrayInput `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks ApiConnectionTestLinkArrayInput `pulumi:"testLinks"`
}

func (ApiConnectionDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput {
	return i.ToApiConnectionDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesOutput)
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return i.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ApiConnectionDefinitionPropertiesArgs) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesOutput).ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ApiConnectionDefinitionPropertiesPtrInput is an input type that accepts ApiConnectionDefinitionPropertiesArgs, ApiConnectionDefinitionPropertiesPtr and ApiConnectionDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ApiConnectionDefinitionPropertiesPtrInput` via:
//
//	        ApiConnectionDefinitionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ApiConnectionDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput
	ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Context) ApiConnectionDefinitionPropertiesPtrOutput
}

type apiConnectionDefinitionPropertiesPtrType ApiConnectionDefinitionPropertiesArgs

func ApiConnectionDefinitionPropertiesPtr(v *ApiConnectionDefinitionPropertiesArgs) ApiConnectionDefinitionPropertiesPtrInput {
	return (*apiConnectionDefinitionPropertiesPtrType)(v)
}

func (*apiConnectionDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (i *apiConnectionDefinitionPropertiesPtrType) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return i.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *apiConnectionDefinitionPropertiesPtrType) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionDefinitionPropertiesPtrOutput)
}

type ApiConnectionDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesOutput() ApiConnectionDefinitionPropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return o.ToApiConnectionDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ApiConnectionDefinitionPropertiesOutput) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiConnectionDefinitionProperties) *ApiConnectionDefinitionProperties {
		return &v
	}).(ApiConnectionDefinitionPropertiesPtrOutput)
}

func (o ApiConnectionDefinitionPropertiesOutput) Api() ApiReferencePtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *ApiReference { return v.Api }).(ApiReferencePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionPropertiesOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionPropertiesOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionPropertiesOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.CustomParameterValues }).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionPropertiesOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.NonSecretParameterValues }).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionPropertiesOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) map[string]string { return v.ParameterValues }).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionPropertiesOutput) Statuses() ConnectionStatusDefinitionArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) []ConnectionStatusDefinition { return v.Statuses }).(ConnectionStatusDefinitionArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionPropertiesOutput) TestLinks() ApiConnectionTestLinkArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionProperties) []ApiConnectionTestLink { return v.TestLinks }).(ApiConnectionTestLinkArrayOutput)
}

type ApiConnectionDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiConnectionDefinitionProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) ToApiConnectionDefinitionPropertiesPtrOutput() ApiConnectionDefinitionPropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) ToApiConnectionDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ApiConnectionDefinitionPropertiesPtrOutput {
	return o
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) Elem() ApiConnectionDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) ApiConnectionDefinitionProperties {
		if v != nil {
			return *v
		}
		var ret ApiConnectionDefinitionProperties
		return ret
	}).(ApiConnectionDefinitionPropertiesOutput)
}

func (o ApiConnectionDefinitionPropertiesPtrOutput) Api() ApiReferencePtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *ApiReference {
		if v == nil {
			return nil
		}
		return v.Api
	}).(ApiReferencePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionPropertiesPtrOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChangedTime
	}).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionPropertiesPtrOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.CreatedTime
	}).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomParameterValues
	}).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.NonSecretParameterValues
	}).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionPropertiesPtrOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.ParameterValues
	}).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionPropertiesPtrOutput) Statuses() ConnectionStatusDefinitionArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) []ConnectionStatusDefinition {
		if v == nil {
			return nil
		}
		return v.Statuses
	}).(ConnectionStatusDefinitionArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionPropertiesPtrOutput) TestLinks() ApiConnectionTestLinkArrayOutput {
	return o.ApplyT(func(v *ApiConnectionDefinitionProperties) []ApiConnectionTestLink {
		if v == nil {
			return nil
		}
		return v.TestLinks
	}).(ApiConnectionTestLinkArrayOutput)
}

type ApiConnectionDefinitionResponseProperties struct {
	Api *ApiReferenceResponse `pulumi:"api"`
	// Timestamp of last connection change
	ChangedTime *string `pulumi:"changedTime"`
	// Timestamp of the connection creation
	CreatedTime *string `pulumi:"createdTime"`
	// Dictionary of custom parameter values
	CustomParameterValues map[string]string `pulumi:"customParameterValues"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Dictionary of nonsecret parameter values
	NonSecretParameterValues map[string]string `pulumi:"nonSecretParameterValues"`
	// Dictionary of parameter values
	ParameterValues map[string]string `pulumi:"parameterValues"`
	// Status of the connection
	Statuses []ConnectionStatusDefinitionResponse `pulumi:"statuses"`
	// Links to test the API connection
	TestLinks []ApiConnectionTestLinkResponse `pulumi:"testLinks"`
}

type ApiConnectionDefinitionResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ApiConnectionDefinitionResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionDefinitionResponseProperties)(nil)).Elem()
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesOutput() ApiConnectionDefinitionResponsePropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) ToApiConnectionDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ApiConnectionDefinitionResponsePropertiesOutput {
	return o
}

func (o ApiConnectionDefinitionResponsePropertiesOutput) Api() ApiReferenceResponsePtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *ApiReferenceResponse { return v.Api }).(ApiReferenceResponsePtrOutput)
}

// Timestamp of last connection change
func (o ApiConnectionDefinitionResponsePropertiesOutput) ChangedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.ChangedTime }).(pulumi.StringPtrOutput)
}

// Timestamp of the connection creation
func (o ApiConnectionDefinitionResponsePropertiesOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// Dictionary of custom parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) CustomParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.CustomParameterValues }).(pulumi.StringMapOutput)
}

// Display name
func (o ApiConnectionDefinitionResponsePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Dictionary of nonsecret parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) NonSecretParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.NonSecretParameterValues }).(pulumi.StringMapOutput)
}

// Dictionary of parameter values
func (o ApiConnectionDefinitionResponsePropertiesOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) map[string]string { return v.ParameterValues }).(pulumi.StringMapOutput)
}

// Status of the connection
func (o ApiConnectionDefinitionResponsePropertiesOutput) Statuses() ConnectionStatusDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) []ConnectionStatusDefinitionResponse {
		return v.Statuses
	}).(ConnectionStatusDefinitionResponseArrayOutput)
}

// Links to test the API connection
func (o ApiConnectionDefinitionResponsePropertiesOutput) TestLinks() ApiConnectionTestLinkResponseArrayOutput {
	return o.ApplyT(func(v ApiConnectionDefinitionResponseProperties) []ApiConnectionTestLinkResponse { return v.TestLinks }).(ApiConnectionTestLinkResponseArrayOutput)
}

// API connection properties
type ApiConnectionTestLink struct {
	// HTTP Method
	Method *string `pulumi:"method"`
	// Test link request URI
	RequestUri *string `pulumi:"requestUri"`
}

// ApiConnectionTestLinkInput is an input type that accepts ApiConnectionTestLinkArgs and ApiConnectionTestLinkOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkInput` via:
//
//	ApiConnectionTestLinkArgs{...}
type ApiConnectionTestLinkInput interface {
	pulumi.Input

	ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput
	ToApiConnectionTestLinkOutputWithContext(context.Context) ApiConnectionTestLinkOutput
}

// API connection properties
type ApiConnectionTestLinkArgs struct {
	// HTTP Method
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Test link request URI
	RequestUri pulumi.StringPtrInput `pulumi:"requestUri"`
}

func (ApiConnectionTestLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLink)(nil)).Elem()
}

func (i ApiConnectionTestLinkArgs) ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput {
	return i.ToApiConnectionTestLinkOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkArgs) ToApiConnectionTestLinkOutputWithContext(ctx context.Context) ApiConnectionTestLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkOutput)
}

// ApiConnectionTestLinkArrayInput is an input type that accepts ApiConnectionTestLinkArray and ApiConnectionTestLinkArrayOutput values.
// You can construct a concrete instance of `ApiConnectionTestLinkArrayInput` via:
//
//	ApiConnectionTestLinkArray{ ApiConnectionTestLinkArgs{...} }
type ApiConnectionTestLinkArrayInput interface {
	pulumi.Input

	ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput
	ToApiConnectionTestLinkArrayOutputWithContext(context.Context) ApiConnectionTestLinkArrayOutput
}

type ApiConnectionTestLinkArray []ApiConnectionTestLinkInput

func (ApiConnectionTestLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLink)(nil)).Elem()
}

func (i ApiConnectionTestLinkArray) ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput {
	return i.ToApiConnectionTestLinkArrayOutputWithContext(context.Background())
}

func (i ApiConnectionTestLinkArray) ToApiConnectionTestLinkArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiConnectionTestLinkArrayOutput)
}

// API connection properties
type ApiConnectionTestLinkOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLink)(nil)).Elem()
}

func (o ApiConnectionTestLinkOutput) ToApiConnectionTestLinkOutput() ApiConnectionTestLinkOutput {
	return o
}

func (o ApiConnectionTestLinkOutput) ToApiConnectionTestLinkOutputWithContext(ctx context.Context) ApiConnectionTestLinkOutput {
	return o
}

// HTTP Method
func (o ApiConnectionTestLinkOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLink) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Test link request URI
func (o ApiConnectionTestLinkOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLink) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

type ApiConnectionTestLinkArrayOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLink)(nil)).Elem()
}

func (o ApiConnectionTestLinkArrayOutput) ToApiConnectionTestLinkArrayOutput() ApiConnectionTestLinkArrayOutput {
	return o
}

func (o ApiConnectionTestLinkArrayOutput) ToApiConnectionTestLinkArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkArrayOutput {
	return o
}

func (o ApiConnectionTestLinkArrayOutput) Index(i pulumi.IntInput) ApiConnectionTestLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiConnectionTestLink {
		return vs[0].([]ApiConnectionTestLink)[vs[1].(int)]
	}).(ApiConnectionTestLinkOutput)
}

// API connection properties
type ApiConnectionTestLinkResponse struct {
	// HTTP Method
	Method *string `pulumi:"method"`
	// Test link request URI
	RequestUri *string `pulumi:"requestUri"`
}

// API connection properties
type ApiConnectionTestLinkResponseOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (o ApiConnectionTestLinkResponseOutput) ToApiConnectionTestLinkResponseOutput() ApiConnectionTestLinkResponseOutput {
	return o
}

func (o ApiConnectionTestLinkResponseOutput) ToApiConnectionTestLinkResponseOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseOutput {
	return o
}

// HTTP Method
func (o ApiConnectionTestLinkResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLinkResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Test link request URI
func (o ApiConnectionTestLinkResponseOutput) RequestUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiConnectionTestLinkResponse) *string { return v.RequestUri }).(pulumi.StringPtrOutput)
}

type ApiConnectionTestLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiConnectionTestLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiConnectionTestLinkResponse)(nil)).Elem()
}

func (o ApiConnectionTestLinkResponseArrayOutput) ToApiConnectionTestLinkResponseArrayOutput() ApiConnectionTestLinkResponseArrayOutput {
	return o
}

func (o ApiConnectionTestLinkResponseArrayOutput) ToApiConnectionTestLinkResponseArrayOutputWithContext(ctx context.Context) ApiConnectionTestLinkResponseArrayOutput {
	return o
}

func (o ApiConnectionTestLinkResponseArrayOutput) Index(i pulumi.IntInput) ApiConnectionTestLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiConnectionTestLinkResponse {
		return vs[0].([]ApiConnectionTestLinkResponse)[vs[1].(int)]
	}).(ApiConnectionTestLinkResponseOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfo struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// ApiDefinitionInfoInput is an input type that accepts ApiDefinitionInfoArgs and ApiDefinitionInfoOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoInput` via:
//
//	ApiDefinitionInfoArgs{...}
type ApiDefinitionInfoInput interface {
	pulumi.Input

	ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput
	ToApiDefinitionInfoOutputWithContext(context.Context) ApiDefinitionInfoOutput
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoArgs struct {
	// The URL of the API definition.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiDefinitionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return i.ToApiDefinitionInfoOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput)
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i ApiDefinitionInfoArgs) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoOutput).ToApiDefinitionInfoPtrOutputWithContext(ctx)
}

// ApiDefinitionInfoPtrInput is an input type that accepts ApiDefinitionInfoArgs, ApiDefinitionInfoPtr and ApiDefinitionInfoPtrOutput values.
// You can construct a concrete instance of `ApiDefinitionInfoPtrInput` via:
//
//	        ApiDefinitionInfoArgs{...}
//
//	or:
//
//	        nil
type ApiDefinitionInfoPtrInput interface {
	pulumi.Input

	ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput
	ToApiDefinitionInfoPtrOutputWithContext(context.Context) ApiDefinitionInfoPtrOutput
}

type apiDefinitionInfoPtrType ApiDefinitionInfoArgs

func ApiDefinitionInfoPtr(v *ApiDefinitionInfoArgs) ApiDefinitionInfoPtrInput {
	return (*apiDefinitionInfoPtrType)(v)
}

func (*apiDefinitionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return i.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (i *apiDefinitionInfoPtrType) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDefinitionInfoPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutput() ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoOutputWithContext(ctx context.Context) ApiDefinitionInfoOutput {
	return o
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o.ToApiDefinitionInfoPtrOutputWithContext(context.Background())
}

func (o ApiDefinitionInfoOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDefinitionInfo) *ApiDefinitionInfo {
		return &v
	}).(ApiDefinitionInfoPtrOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfo) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoPtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfo)(nil)).Elem()
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutput() ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) ToApiDefinitionInfoPtrOutputWithContext(ctx context.Context) ApiDefinitionInfoPtrOutput {
	return o
}

func (o ApiDefinitionInfoPtrOutput) Elem() ApiDefinitionInfoOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) ApiDefinitionInfo {
		if v != nil {
			return *v
		}
		var ret ApiDefinitionInfo
		return ret
	}).(ApiDefinitionInfoOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfo) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponse struct {
	// The URL of the API definition.
	Url *string `pulumi:"url"`
}

// Information about the formal API definition for the app.
type ApiDefinitionInfoResponseOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutput() ApiDefinitionInfoResponseOutput {
	return o
}

func (o ApiDefinitionInfoResponseOutput) ToApiDefinitionInfoResponseOutputWithContext(ctx context.Context) ApiDefinitionInfoResponseOutput {
	return o
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiDefinitionInfoResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiDefinitionInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDefinitionInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDefinitionInfoResponse)(nil)).Elem()
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutput() ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) ToApiDefinitionInfoResponsePtrOutputWithContext(ctx context.Context) ApiDefinitionInfoResponsePtrOutput {
	return o
}

func (o ApiDefinitionInfoResponsePtrOutput) Elem() ApiDefinitionInfoResponseOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) ApiDefinitionInfoResponse {
		if v != nil {
			return *v
		}
		var ret ApiDefinitionInfoResponse
		return ret
	}).(ApiDefinitionInfoResponseOutput)
}

// The URL of the API definition.
func (o ApiDefinitionInfoResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiDefinitionInfoResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfig struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// ApiManagementConfigInput is an input type that accepts ApiManagementConfigArgs and ApiManagementConfigOutput values.
// You can construct a concrete instance of `ApiManagementConfigInput` via:
//
//	ApiManagementConfigArgs{...}
type ApiManagementConfigInput interface {
	pulumi.Input

	ToApiManagementConfigOutput() ApiManagementConfigOutput
	ToApiManagementConfigOutputWithContext(context.Context) ApiManagementConfigOutput
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigArgs struct {
	// APIM-Api Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ApiManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return i.ToApiManagementConfigOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput)
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i ApiManagementConfigArgs) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigOutput).ToApiManagementConfigPtrOutputWithContext(ctx)
}

// ApiManagementConfigPtrInput is an input type that accepts ApiManagementConfigArgs, ApiManagementConfigPtr and ApiManagementConfigPtrOutput values.
// You can construct a concrete instance of `ApiManagementConfigPtrInput` via:
//
//	        ApiManagementConfigArgs{...}
//
//	or:
//
//	        nil
type ApiManagementConfigPtrInput interface {
	pulumi.Input

	ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput
	ToApiManagementConfigPtrOutputWithContext(context.Context) ApiManagementConfigPtrOutput
}

type apiManagementConfigPtrType ApiManagementConfigArgs

func ApiManagementConfigPtr(v *ApiManagementConfigArgs) ApiManagementConfigPtrInput {
	return (*apiManagementConfigPtrType)(v)
}

func (*apiManagementConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return i.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (i *apiManagementConfigPtrType) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiManagementConfigPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutput() ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigOutputWithContext(ctx context.Context) ApiManagementConfigOutput {
	return o
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o.ToApiManagementConfigPtrOutputWithContext(context.Background())
}

func (o ApiManagementConfigOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiManagementConfig) *ApiManagementConfig {
		return &v
	}).(ApiManagementConfigPtrOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfig)(nil)).Elem()
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutput() ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) ToApiManagementConfigPtrOutputWithContext(ctx context.Context) ApiManagementConfigPtrOutput {
	return o
}

func (o ApiManagementConfigPtrOutput) Elem() ApiManagementConfigOutput {
	return o.ApplyT(func(v *ApiManagementConfig) ApiManagementConfig {
		if v != nil {
			return *v
		}
		var ret ApiManagementConfig
		return ret
	}).(ApiManagementConfigOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfig) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponse struct {
	// APIM-Api Identifier.
	Id *string `pulumi:"id"`
}

// Azure API management (APIM) configuration linked to the app.
type ApiManagementConfigResponseOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutput() ApiManagementConfigResponseOutput {
	return o
}

func (o ApiManagementConfigResponseOutput) ToApiManagementConfigResponseOutputWithContext(ctx context.Context) ApiManagementConfigResponseOutput {
	return o
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiManagementConfigResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ApiManagementConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiManagementConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiManagementConfigResponse)(nil)).Elem()
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutput() ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) ToApiManagementConfigResponsePtrOutputWithContext(ctx context.Context) ApiManagementConfigResponsePtrOutput {
	return o
}

func (o ApiManagementConfigResponsePtrOutput) Elem() ApiManagementConfigResponseOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) ApiManagementConfigResponse {
		if v != nil {
			return *v
		}
		var ret ApiManagementConfigResponse
		return ret
	}).(ApiManagementConfigResponseOutput)
}

// APIM-Api Identifier.
func (o ApiManagementConfigResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiManagementConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettings struct {
	// Resource provider client id
	ClientId *string `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret *string `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters map[string]ApiOAuthSettingsParameter `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider *string `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties interface{} `pulumi:"properties"`
	// Url
	RedirectUrl *string `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes []string `pulumi:"scopes"`
}

// ApiOAuthSettingsInput is an input type that accepts ApiOAuthSettingsArgs and ApiOAuthSettingsOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsInput` via:
//
//	ApiOAuthSettingsArgs{...}
type ApiOAuthSettingsInput interface {
	pulumi.Input

	ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput
	ToApiOAuthSettingsOutputWithContext(context.Context) ApiOAuthSettingsOutput
}

// OAuth settings for the connection provider
type ApiOAuthSettingsArgs struct {
	// Resource provider client id
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters ApiOAuthSettingsParameterMapInput `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider pulumi.StringPtrInput `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties pulumi.Input `pulumi:"properties"`
	// Url
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (ApiOAuthSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettings)(nil)).Elem()
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput {
	return i.ToApiOAuthSettingsOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsOutputWithContext(ctx context.Context) ApiOAuthSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsOutput)
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return i.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsArgs) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsOutput).ToApiOAuthSettingsPtrOutputWithContext(ctx)
}

// ApiOAuthSettingsPtrInput is an input type that accepts ApiOAuthSettingsArgs, ApiOAuthSettingsPtr and ApiOAuthSettingsPtrOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsPtrInput` via:
//
//	        ApiOAuthSettingsArgs{...}
//
//	or:
//
//	        nil
type ApiOAuthSettingsPtrInput interface {
	pulumi.Input

	ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput
	ToApiOAuthSettingsPtrOutputWithContext(context.Context) ApiOAuthSettingsPtrOutput
}

type apiOAuthSettingsPtrType ApiOAuthSettingsArgs

func ApiOAuthSettingsPtr(v *ApiOAuthSettingsArgs) ApiOAuthSettingsPtrInput {
	return (*apiOAuthSettingsPtrType)(v)
}

func (*apiOAuthSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettings)(nil)).Elem()
}

func (i *apiOAuthSettingsPtrType) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return i.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (i *apiOAuthSettingsPtrType) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsPtrOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettingsOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettings)(nil)).Elem()
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsOutput() ApiOAuthSettingsOutput {
	return o
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsOutputWithContext(ctx context.Context) ApiOAuthSettingsOutput {
	return o
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return o.ToApiOAuthSettingsPtrOutputWithContext(context.Background())
}

func (o ApiOAuthSettingsOutput) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiOAuthSettings) *ApiOAuthSettings {
		return &v
	}).(ApiOAuthSettingsPtrOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsOutput) CustomParameters() ApiOAuthSettingsParameterMapOutput {
	return o.ApplyT(func(v ApiOAuthSettings) map[string]ApiOAuthSettingsParameter { return v.CustomParameters }).(ApiOAuthSettingsParameterMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettings) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettings) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOAuthSettings) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ApiOAuthSettingsPtrOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettings)(nil)).Elem()
}

func (o ApiOAuthSettingsPtrOutput) ToApiOAuthSettingsPtrOutput() ApiOAuthSettingsPtrOutput {
	return o
}

func (o ApiOAuthSettingsPtrOutput) ToApiOAuthSettingsPtrOutputWithContext(ctx context.Context) ApiOAuthSettingsPtrOutput {
	return o
}

func (o ApiOAuthSettingsPtrOutput) Elem() ApiOAuthSettingsOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) ApiOAuthSettings {
		if v != nil {
			return *v
		}
		var ret ApiOAuthSettings
		return ret
	}).(ApiOAuthSettingsOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsPtrOutput) CustomParameters() ApiOAuthSettingsParameterMapOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) map[string]ApiOAuthSettingsParameter {
		if v == nil {
			return nil
		}
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsPtrOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.IdentityProvider
	}).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsPtrOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) interface{} {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsPtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiOAuthSettings) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameter struct {
	// Options available to this parameter
	Options interface{} `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition interface{} `pulumi:"uiDefinition"`
	// Value of the setting
	Value *string `pulumi:"value"`
}

// ApiOAuthSettingsParameterInput is an input type that accepts ApiOAuthSettingsParameterArgs and ApiOAuthSettingsParameterOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterInput` via:
//
//	ApiOAuthSettingsParameterArgs{...}
type ApiOAuthSettingsParameterInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput
	ToApiOAuthSettingsParameterOutputWithContext(context.Context) ApiOAuthSettingsParameterOutput
}

// OAuth settings for the API
type ApiOAuthSettingsParameterArgs struct {
	// Options available to this parameter
	Options pulumi.Input `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition pulumi.Input `pulumi:"uiDefinition"`
	// Value of the setting
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOAuthSettingsParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameter)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterArgs) ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput {
	return i.ToApiOAuthSettingsParameterOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterArgs) ToApiOAuthSettingsParameterOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterOutput)
}

// ApiOAuthSettingsParameterMapInput is an input type that accepts ApiOAuthSettingsParameterMap and ApiOAuthSettingsParameterMapOutput values.
// You can construct a concrete instance of `ApiOAuthSettingsParameterMapInput` via:
//
//	ApiOAuthSettingsParameterMap{ "key": ApiOAuthSettingsParameterArgs{...} }
type ApiOAuthSettingsParameterMapInput interface {
	pulumi.Input

	ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput
	ToApiOAuthSettingsParameterMapOutputWithContext(context.Context) ApiOAuthSettingsParameterMapOutput
}

type ApiOAuthSettingsParameterMap map[string]ApiOAuthSettingsParameterInput

func (ApiOAuthSettingsParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameter)(nil)).Elem()
}

func (i ApiOAuthSettingsParameterMap) ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput {
	return i.ToApiOAuthSettingsParameterMapOutputWithContext(context.Background())
}

func (i ApiOAuthSettingsParameterMap) ToApiOAuthSettingsParameterMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOAuthSettingsParameterMapOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameterOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameter)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterOutput) ToApiOAuthSettingsParameterOutput() ApiOAuthSettingsParameterOutput {
	return o
}

func (o ApiOAuthSettingsParameterOutput) ToApiOAuthSettingsParameterOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterOutput {
	return o
}

// Options available to this parameter
func (o ApiOAuthSettingsParameterOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) interface{} { return v.Options }).(pulumi.AnyOutput)
}

// UI definitions per culture as caller can specify the culture
func (o ApiOAuthSettingsParameterOutput) UiDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) interface{} { return v.UiDefinition }).(pulumi.AnyOutput)
}

// Value of the setting
func (o ApiOAuthSettingsParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOAuthSettingsParameterMapOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameter)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterMapOutput) ToApiOAuthSettingsParameterMapOutput() ApiOAuthSettingsParameterMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterMapOutput) ToApiOAuthSettingsParameterMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterMapOutput) MapIndex(k pulumi.StringInput) ApiOAuthSettingsParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ApiOAuthSettingsParameter {
		return vs[0].(map[string]ApiOAuthSettingsParameter)[vs[1].(string)]
	}).(ApiOAuthSettingsParameterOutput)
}

// OAuth settings for the API
type ApiOAuthSettingsParameterResponse struct {
	// Options available to this parameter
	Options interface{} `pulumi:"options"`
	// UI definitions per culture as caller can specify the culture
	UiDefinition interface{} `pulumi:"uiDefinition"`
	// Value of the setting
	Value *string `pulumi:"value"`
}

// OAuth settings for the API
type ApiOAuthSettingsParameterResponseOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterResponseOutput) ToApiOAuthSettingsParameterResponseOutput() ApiOAuthSettingsParameterResponseOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseOutput) ToApiOAuthSettingsParameterResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseOutput {
	return o
}

// Options available to this parameter
func (o ApiOAuthSettingsParameterResponseOutput) Options() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) interface{} { return v.Options }).(pulumi.AnyOutput)
}

// UI definitions per culture as caller can specify the culture
func (o ApiOAuthSettingsParameterResponseOutput) UiDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) interface{} { return v.UiDefinition }).(pulumi.AnyOutput)
}

// Value of the setting
func (o ApiOAuthSettingsParameterResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsParameterResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOAuthSettingsParameterResponseMapOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ApiOAuthSettingsParameterResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsParameterResponseMapOutput) ToApiOAuthSettingsParameterResponseMapOutput() ApiOAuthSettingsParameterResponseMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseMapOutput) ToApiOAuthSettingsParameterResponseMapOutputWithContext(ctx context.Context) ApiOAuthSettingsParameterResponseMapOutput {
	return o
}

func (o ApiOAuthSettingsParameterResponseMapOutput) MapIndex(k pulumi.StringInput) ApiOAuthSettingsParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ApiOAuthSettingsParameterResponse {
		return vs[0].(map[string]ApiOAuthSettingsParameterResponse)[vs[1].(string)]
	}).(ApiOAuthSettingsParameterResponseOutput)
}

// OAuth settings for the connection provider
type ApiOAuthSettingsResponse struct {
	// Resource provider client id
	ClientId *string `pulumi:"clientId"`
	// Client Secret needed for OAuth
	ClientSecret *string `pulumi:"clientSecret"`
	// OAuth parameters key is the name of parameter
	CustomParameters map[string]ApiOAuthSettingsParameterResponse `pulumi:"customParameters"`
	// Identity provider
	IdentityProvider *string `pulumi:"identityProvider"`
	// Read only properties for this oauth setting.
	Properties interface{} `pulumi:"properties"`
	// Url
	RedirectUrl *string `pulumi:"redirectUrl"`
	// OAuth scopes
	Scopes []string `pulumi:"scopes"`
}

// OAuth settings for the connection provider
type ApiOAuthSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOAuthSettingsResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponseOutput() ApiOAuthSettingsResponseOutput {
	return o
}

func (o ApiOAuthSettingsResponseOutput) ToApiOAuthSettingsResponseOutputWithContext(ctx context.Context) ApiOAuthSettingsResponseOutput {
	return o
}

// Resource provider client id
func (o ApiOAuthSettingsResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsResponseOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsResponseOutput) CustomParameters() ApiOAuthSettingsParameterResponseMapOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) map[string]ApiOAuthSettingsParameterResponse {
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterResponseMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsResponseOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.IdentityProvider }).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsResponseOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) interface{} { return v.Properties }).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsResponseOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOAuthSettingsResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type ApiOAuthSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiOAuthSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOAuthSettingsResponse)(nil)).Elem()
}

func (o ApiOAuthSettingsResponsePtrOutput) ToApiOAuthSettingsResponsePtrOutput() ApiOAuthSettingsResponsePtrOutput {
	return o
}

func (o ApiOAuthSettingsResponsePtrOutput) ToApiOAuthSettingsResponsePtrOutputWithContext(ctx context.Context) ApiOAuthSettingsResponsePtrOutput {
	return o
}

func (o ApiOAuthSettingsResponsePtrOutput) Elem() ApiOAuthSettingsResponseOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) ApiOAuthSettingsResponse {
		if v != nil {
			return *v
		}
		var ret ApiOAuthSettingsResponse
		return ret
	}).(ApiOAuthSettingsResponseOutput)
}

// Resource provider client id
func (o ApiOAuthSettingsResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client Secret needed for OAuth
func (o ApiOAuthSettingsResponsePtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// OAuth parameters key is the name of parameter
func (o ApiOAuthSettingsResponsePtrOutput) CustomParameters() ApiOAuthSettingsParameterResponseMapOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) map[string]ApiOAuthSettingsParameterResponse {
		if v == nil {
			return nil
		}
		return v.CustomParameters
	}).(ApiOAuthSettingsParameterResponseMapOutput)
}

// Identity provider
func (o ApiOAuthSettingsResponsePtrOutput) IdentityProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.IdentityProvider
	}).(pulumi.StringPtrOutput)
}

// Read only properties for this oauth setting.
func (o ApiOAuthSettingsResponsePtrOutput) Properties() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.AnyOutput)
}

// Url
func (o ApiOAuthSettingsResponsePtrOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectUrl
	}).(pulumi.StringPtrOutput)
}

// OAuth scopes
func (o ApiOAuthSettingsResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiOAuthSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

type ApiReference struct {
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Resource reference id
	Id *string `pulumi:"id"`
	// The name of the API
	Name *string `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ApiReferenceInput is an input type that accepts ApiReferenceArgs and ApiReferenceOutput values.
// You can construct a concrete instance of `ApiReferenceInput` via:
//
//	ApiReferenceArgs{...}
type ApiReferenceInput interface {
	pulumi.Input

	ToApiReferenceOutput() ApiReferenceOutput
	ToApiReferenceOutputWithContext(context.Context) ApiReferenceOutput
}

type ApiReferenceArgs struct {
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the API
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApiReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReference)(nil)).Elem()
}

func (i ApiReferenceArgs) ToApiReferenceOutput() ApiReferenceOutput {
	return i.ToApiReferenceOutputWithContext(context.Background())
}

func (i ApiReferenceArgs) ToApiReferenceOutputWithContext(ctx context.Context) ApiReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceOutput)
}

func (i ApiReferenceArgs) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return i.ToApiReferencePtrOutputWithContext(context.Background())
}

func (i ApiReferenceArgs) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferenceOutput).ToApiReferencePtrOutputWithContext(ctx)
}

// ApiReferencePtrInput is an input type that accepts ApiReferenceArgs, ApiReferencePtr and ApiReferencePtrOutput values.
// You can construct a concrete instance of `ApiReferencePtrInput` via:
//
//	        ApiReferenceArgs{...}
//
//	or:
//
//	        nil
type ApiReferencePtrInput interface {
	pulumi.Input

	ToApiReferencePtrOutput() ApiReferencePtrOutput
	ToApiReferencePtrOutputWithContext(context.Context) ApiReferencePtrOutput
}

type apiReferencePtrType ApiReferenceArgs

func ApiReferencePtr(v *ApiReferenceArgs) ApiReferencePtrInput {
	return (*apiReferencePtrType)(v)
}

func (*apiReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReference)(nil)).Elem()
}

func (i *apiReferencePtrType) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return i.ToApiReferencePtrOutputWithContext(context.Background())
}

func (i *apiReferencePtrType) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiReferencePtrOutput)
}

type ApiReferenceOutput struct{ *pulumi.OutputState }

func (ApiReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReference)(nil)).Elem()
}

func (o ApiReferenceOutput) ToApiReferenceOutput() ApiReferenceOutput {
	return o
}

func (o ApiReferenceOutput) ToApiReferenceOutputWithContext(ctx context.Context) ApiReferenceOutput {
	return o
}

func (o ApiReferenceOutput) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return o.ToApiReferencePtrOutputWithContext(context.Background())
}

func (o ApiReferenceOutput) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiReference) *ApiReference {
		return &v
	}).(ApiReferencePtrOutput)
}

// Brand color
func (o ApiReferenceOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiReference) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiReferencePtrOutput struct{ *pulumi.OutputState }

func (ApiReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReference)(nil)).Elem()
}

func (o ApiReferencePtrOutput) ToApiReferencePtrOutput() ApiReferencePtrOutput {
	return o
}

func (o ApiReferencePtrOutput) ToApiReferencePtrOutputWithContext(ctx context.Context) ApiReferencePtrOutput {
	return o
}

func (o ApiReferencePtrOutput) Elem() ApiReferenceOutput {
	return o.ApplyT(func(v *ApiReference) ApiReference {
		if v != nil {
			return *v
		}
		var ret ApiReference
		return ret
	}).(ApiReferenceOutput)
}

// Brand color
func (o ApiReferencePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferencePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferencePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferencePtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferencePtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiReference) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ApiReferenceResponse struct {
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Resource reference id
	Id *string `pulumi:"id"`
	// The name of the API
	Name *string `pulumi:"name"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

type ApiReferenceResponseOutput struct{ *pulumi.OutputState }

func (ApiReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiReferenceResponse)(nil)).Elem()
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponseOutput() ApiReferenceResponseOutput {
	return o
}

func (o ApiReferenceResponseOutput) ToApiReferenceResponseOutputWithContext(ctx context.Context) ApiReferenceResponseOutput {
	return o
}

// Brand color
func (o ApiReferenceResponseOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceResponseOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceResponseOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v ApiReferenceResponse) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApiReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiReferenceResponse)(nil)).Elem()
}

func (o ApiReferenceResponsePtrOutput) ToApiReferenceResponsePtrOutput() ApiReferenceResponsePtrOutput {
	return o
}

func (o ApiReferenceResponsePtrOutput) ToApiReferenceResponsePtrOutputWithContext(ctx context.Context) ApiReferenceResponsePtrOutput {
	return o
}

func (o ApiReferenceResponsePtrOutput) Elem() ApiReferenceResponseOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) ApiReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ApiReferenceResponse
		return ret
	}).(ApiReferenceResponseOutput)
}

// Brand color
func (o ApiReferenceResponsePtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API description
func (o ApiReferenceResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o ApiReferenceResponsePtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o ApiReferenceResponsePtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Resource reference id
func (o ApiReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the API
func (o ApiReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The JSON representation of the swagger
func (o ApiReferenceResponsePtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// Resource reference type
func (o ApiReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The API backend service
type ApiResourceBackendService struct {
	// The service URL
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// ApiResourceBackendServiceInput is an input type that accepts ApiResourceBackendServiceArgs and ApiResourceBackendServiceOutput values.
// You can construct a concrete instance of `ApiResourceBackendServiceInput` via:
//
//	ApiResourceBackendServiceArgs{...}
type ApiResourceBackendServiceInput interface {
	pulumi.Input

	ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput
	ToApiResourceBackendServiceOutputWithContext(context.Context) ApiResourceBackendServiceOutput
}

// The API backend service
type ApiResourceBackendServiceArgs struct {
	// The service URL
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (ApiResourceBackendServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendService)(nil)).Elem()
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput {
	return i.ToApiResourceBackendServiceOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServiceOutputWithContext(ctx context.Context) ApiResourceBackendServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceOutput)
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return i.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (i ApiResourceBackendServiceArgs) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServiceOutput).ToApiResourceBackendServicePtrOutputWithContext(ctx)
}

// ApiResourceBackendServicePtrInput is an input type that accepts ApiResourceBackendServiceArgs, ApiResourceBackendServicePtr and ApiResourceBackendServicePtrOutput values.
// You can construct a concrete instance of `ApiResourceBackendServicePtrInput` via:
//
//	        ApiResourceBackendServiceArgs{...}
//
//	or:
//
//	        nil
type ApiResourceBackendServicePtrInput interface {
	pulumi.Input

	ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput
	ToApiResourceBackendServicePtrOutputWithContext(context.Context) ApiResourceBackendServicePtrOutput
}

type apiResourceBackendServicePtrType ApiResourceBackendServiceArgs

func ApiResourceBackendServicePtr(v *ApiResourceBackendServiceArgs) ApiResourceBackendServicePtrInput {
	return (*apiResourceBackendServicePtrType)(v)
}

func (*apiResourceBackendServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendService)(nil)).Elem()
}

func (i *apiResourceBackendServicePtrType) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return i.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (i *apiResourceBackendServicePtrType) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceBackendServicePtrOutput)
}

// The API backend service
type ApiResourceBackendServiceOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendService)(nil)).Elem()
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServiceOutput() ApiResourceBackendServiceOutput {
	return o
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServiceOutputWithContext(ctx context.Context) ApiResourceBackendServiceOutput {
	return o
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return o.ToApiResourceBackendServicePtrOutputWithContext(context.Background())
}

func (o ApiResourceBackendServiceOutput) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiResourceBackendService) *ApiResourceBackendService {
		return &v
	}).(ApiResourceBackendServicePtrOutput)
}

// The service URL
func (o ApiResourceBackendServiceOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceBackendService) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceBackendServicePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendService)(nil)).Elem()
}

func (o ApiResourceBackendServicePtrOutput) ToApiResourceBackendServicePtrOutput() ApiResourceBackendServicePtrOutput {
	return o
}

func (o ApiResourceBackendServicePtrOutput) ToApiResourceBackendServicePtrOutputWithContext(ctx context.Context) ApiResourceBackendServicePtrOutput {
	return o
}

func (o ApiResourceBackendServicePtrOutput) Elem() ApiResourceBackendServiceOutput {
	return o.ApplyT(func(v *ApiResourceBackendService) ApiResourceBackendService {
		if v != nil {
			return *v
		}
		var ret ApiResourceBackendService
		return ret
	}).(ApiResourceBackendServiceOutput)
}

// The service URL
func (o ApiResourceBackendServicePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceBackendService) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// The API backend service
type ApiResourceBackendServiceResponse struct {
	// The service URL
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// The API backend service
type ApiResourceBackendServiceResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutput() ApiResourceBackendServiceResponseOutput {
	return o
}

func (o ApiResourceBackendServiceResponseOutput) ToApiResourceBackendServiceResponseOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponseOutput {
	return o
}

// The service URL
func (o ApiResourceBackendServiceResponseOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceBackendServiceResponse) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceBackendServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceBackendServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceBackendServiceResponse)(nil)).Elem()
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutput() ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) ToApiResourceBackendServiceResponsePtrOutputWithContext(ctx context.Context) ApiResourceBackendServiceResponsePtrOutput {
	return o
}

func (o ApiResourceBackendServiceResponsePtrOutput) Elem() ApiResourceBackendServiceResponseOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) ApiResourceBackendServiceResponse {
		if v != nil {
			return *v
		}
		var ret ApiResourceBackendServiceResponse
		return ret
	}).(ApiResourceBackendServiceResponseOutput)
}

// The service URL
func (o ApiResourceBackendServiceResponsePtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceBackendServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// API Definitions
type ApiResourceDefinitions struct {
	// The modified swagger URL
	ModifiedSwaggerUrl *string `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl *string `pulumi:"originalSwaggerUrl"`
}

// ApiResourceDefinitionsInput is an input type that accepts ApiResourceDefinitionsArgs and ApiResourceDefinitionsOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsInput` via:
//
//	ApiResourceDefinitionsArgs{...}
type ApiResourceDefinitionsInput interface {
	pulumi.Input

	ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput
	ToApiResourceDefinitionsOutputWithContext(context.Context) ApiResourceDefinitionsOutput
}

// API Definitions
type ApiResourceDefinitionsArgs struct {
	// The modified swagger URL
	ModifiedSwaggerUrl pulumi.StringPtrInput `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl pulumi.StringPtrInput `pulumi:"originalSwaggerUrl"`
}

func (ApiResourceDefinitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitions)(nil)).Elem()
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput {
	return i.ToApiResourceDefinitionsOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsOutputWithContext(ctx context.Context) ApiResourceDefinitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsOutput)
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return i.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (i ApiResourceDefinitionsArgs) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsOutput).ToApiResourceDefinitionsPtrOutputWithContext(ctx)
}

// ApiResourceDefinitionsPtrInput is an input type that accepts ApiResourceDefinitionsArgs, ApiResourceDefinitionsPtr and ApiResourceDefinitionsPtrOutput values.
// You can construct a concrete instance of `ApiResourceDefinitionsPtrInput` via:
//
//	        ApiResourceDefinitionsArgs{...}
//
//	or:
//
//	        nil
type ApiResourceDefinitionsPtrInput interface {
	pulumi.Input

	ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput
	ToApiResourceDefinitionsPtrOutputWithContext(context.Context) ApiResourceDefinitionsPtrOutput
}

type apiResourceDefinitionsPtrType ApiResourceDefinitionsArgs

func ApiResourceDefinitionsPtr(v *ApiResourceDefinitionsArgs) ApiResourceDefinitionsPtrInput {
	return (*apiResourceDefinitionsPtrType)(v)
}

func (*apiResourceDefinitionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitions)(nil)).Elem()
}

func (i *apiResourceDefinitionsPtrType) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return i.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (i *apiResourceDefinitionsPtrType) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiResourceDefinitionsPtrOutput)
}

// API Definitions
type ApiResourceDefinitionsOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitions)(nil)).Elem()
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsOutput() ApiResourceDefinitionsOutput {
	return o
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsOutputWithContext(ctx context.Context) ApiResourceDefinitionsOutput {
	return o
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return o.ToApiResourceDefinitionsPtrOutputWithContext(context.Background())
}

func (o ApiResourceDefinitionsOutput) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiResourceDefinitions) *ApiResourceDefinitions {
		return &v
	}).(ApiResourceDefinitionsPtrOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitions) *string { return v.ModifiedSwaggerUrl }).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitions) *string { return v.OriginalSwaggerUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceDefinitionsPtrOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitions)(nil)).Elem()
}

func (o ApiResourceDefinitionsPtrOutput) ToApiResourceDefinitionsPtrOutput() ApiResourceDefinitionsPtrOutput {
	return o
}

func (o ApiResourceDefinitionsPtrOutput) ToApiResourceDefinitionsPtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsPtrOutput {
	return o
}

func (o ApiResourceDefinitionsPtrOutput) Elem() ApiResourceDefinitionsOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) ApiResourceDefinitions {
		if v != nil {
			return *v
		}
		var ret ApiResourceDefinitions
		return ret
	}).(ApiResourceDefinitionsOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsPtrOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsPtrOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitions) *string {
		if v == nil {
			return nil
		}
		return v.OriginalSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// API Definitions
type ApiResourceDefinitionsResponse struct {
	// The modified swagger URL
	ModifiedSwaggerUrl *string `pulumi:"modifiedSwaggerUrl"`
	// The original swagger URL
	OriginalSwaggerUrl *string `pulumi:"originalSwaggerUrl"`
}

// API Definitions
type ApiResourceDefinitionsResponseOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutput() ApiResourceDefinitionsResponseOutput {
	return o
}

func (o ApiResourceDefinitionsResponseOutput) ToApiResourceDefinitionsResponseOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponseOutput {
	return o
}

// The modified swagger URL
func (o ApiResourceDefinitionsResponseOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.ModifiedSwaggerUrl }).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsResponseOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiResourceDefinitionsResponse) *string { return v.OriginalSwaggerUrl }).(pulumi.StringPtrOutput)
}

type ApiResourceDefinitionsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiResourceDefinitionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiResourceDefinitionsResponse)(nil)).Elem()
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutput() ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) ToApiResourceDefinitionsResponsePtrOutputWithContext(ctx context.Context) ApiResourceDefinitionsResponsePtrOutput {
	return o
}

func (o ApiResourceDefinitionsResponsePtrOutput) Elem() ApiResourceDefinitionsResponseOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) ApiResourceDefinitionsResponse {
		if v != nil {
			return *v
		}
		var ret ApiResourceDefinitionsResponse
		return ret
	}).(ApiResourceDefinitionsResponseOutput)
}

// The modified swagger URL
func (o ApiResourceDefinitionsResponsePtrOutput) ModifiedSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

// The original swagger URL
func (o ApiResourceDefinitionsResponsePtrOutput) OriginalSwaggerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiResourceDefinitionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.OriginalSwaggerUrl
	}).(pulumi.StringPtrOutput)
}

type AppLogsConfiguration struct {
	Destination               *string                    `pulumi:"destination"`
	LogAnalyticsConfiguration *LogAnalyticsConfiguration `pulumi:"logAnalyticsConfiguration"`
}

// AppLogsConfigurationInput is an input type that accepts AppLogsConfigurationArgs and AppLogsConfigurationOutput values.
// You can construct a concrete instance of `AppLogsConfigurationInput` via:
//
//	AppLogsConfigurationArgs{...}
type AppLogsConfigurationInput interface {
	pulumi.Input

	ToAppLogsConfigurationOutput() AppLogsConfigurationOutput
	ToAppLogsConfigurationOutputWithContext(context.Context) AppLogsConfigurationOutput
}

type AppLogsConfigurationArgs struct {
	Destination               pulumi.StringPtrInput             `pulumi:"destination"`
	LogAnalyticsConfiguration LogAnalyticsConfigurationPtrInput `pulumi:"logAnalyticsConfiguration"`
}

func (AppLogsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogsConfiguration)(nil)).Elem()
}

func (i AppLogsConfigurationArgs) ToAppLogsConfigurationOutput() AppLogsConfigurationOutput {
	return i.ToAppLogsConfigurationOutputWithContext(context.Background())
}

func (i AppLogsConfigurationArgs) ToAppLogsConfigurationOutputWithContext(ctx context.Context) AppLogsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogsConfigurationOutput)
}

func (i AppLogsConfigurationArgs) ToAppLogsConfigurationPtrOutput() AppLogsConfigurationPtrOutput {
	return i.ToAppLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i AppLogsConfigurationArgs) ToAppLogsConfigurationPtrOutputWithContext(ctx context.Context) AppLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogsConfigurationOutput).ToAppLogsConfigurationPtrOutputWithContext(ctx)
}

// AppLogsConfigurationPtrInput is an input type that accepts AppLogsConfigurationArgs, AppLogsConfigurationPtr and AppLogsConfigurationPtrOutput values.
// You can construct a concrete instance of `AppLogsConfigurationPtrInput` via:
//
//	        AppLogsConfigurationArgs{...}
//
//	or:
//
//	        nil
type AppLogsConfigurationPtrInput interface {
	pulumi.Input

	ToAppLogsConfigurationPtrOutput() AppLogsConfigurationPtrOutput
	ToAppLogsConfigurationPtrOutputWithContext(context.Context) AppLogsConfigurationPtrOutput
}

type appLogsConfigurationPtrType AppLogsConfigurationArgs

func AppLogsConfigurationPtr(v *AppLogsConfigurationArgs) AppLogsConfigurationPtrInput {
	return (*appLogsConfigurationPtrType)(v)
}

func (*appLogsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogsConfiguration)(nil)).Elem()
}

func (i *appLogsConfigurationPtrType) ToAppLogsConfigurationPtrOutput() AppLogsConfigurationPtrOutput {
	return i.ToAppLogsConfigurationPtrOutputWithContext(context.Background())
}

func (i *appLogsConfigurationPtrType) ToAppLogsConfigurationPtrOutputWithContext(ctx context.Context) AppLogsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogsConfigurationPtrOutput)
}

type AppLogsConfigurationOutput struct{ *pulumi.OutputState }

func (AppLogsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogsConfiguration)(nil)).Elem()
}

func (o AppLogsConfigurationOutput) ToAppLogsConfigurationOutput() AppLogsConfigurationOutput {
	return o
}

func (o AppLogsConfigurationOutput) ToAppLogsConfigurationOutputWithContext(ctx context.Context) AppLogsConfigurationOutput {
	return o
}

func (o AppLogsConfigurationOutput) ToAppLogsConfigurationPtrOutput() AppLogsConfigurationPtrOutput {
	return o.ToAppLogsConfigurationPtrOutputWithContext(context.Background())
}

func (o AppLogsConfigurationOutput) ToAppLogsConfigurationPtrOutputWithContext(ctx context.Context) AppLogsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppLogsConfiguration) *AppLogsConfiguration {
		return &v
	}).(AppLogsConfigurationPtrOutput)
}

func (o AppLogsConfigurationOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppLogsConfiguration) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o AppLogsConfigurationOutput) LogAnalyticsConfiguration() LogAnalyticsConfigurationPtrOutput {
	return o.ApplyT(func(v AppLogsConfiguration) *LogAnalyticsConfiguration { return v.LogAnalyticsConfiguration }).(LogAnalyticsConfigurationPtrOutput)
}

type AppLogsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AppLogsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogsConfiguration)(nil)).Elem()
}

func (o AppLogsConfigurationPtrOutput) ToAppLogsConfigurationPtrOutput() AppLogsConfigurationPtrOutput {
	return o
}

func (o AppLogsConfigurationPtrOutput) ToAppLogsConfigurationPtrOutputWithContext(ctx context.Context) AppLogsConfigurationPtrOutput {
	return o
}

func (o AppLogsConfigurationPtrOutput) Elem() AppLogsConfigurationOutput {
	return o.ApplyT(func(v *AppLogsConfiguration) AppLogsConfiguration {
		if v != nil {
			return *v
		}
		var ret AppLogsConfiguration
		return ret
	}).(AppLogsConfigurationOutput)
}

func (o AppLogsConfigurationPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o AppLogsConfigurationPtrOutput) LogAnalyticsConfiguration() LogAnalyticsConfigurationPtrOutput {
	return o.ApplyT(func(v *AppLogsConfiguration) *LogAnalyticsConfiguration {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsConfiguration
	}).(LogAnalyticsConfigurationPtrOutput)
}

type AppLogsConfigurationResponse struct {
	Destination               *string                            `pulumi:"destination"`
	LogAnalyticsConfiguration *LogAnalyticsConfigurationResponse `pulumi:"logAnalyticsConfiguration"`
}

type AppLogsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AppLogsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogsConfigurationResponse)(nil)).Elem()
}

func (o AppLogsConfigurationResponseOutput) ToAppLogsConfigurationResponseOutput() AppLogsConfigurationResponseOutput {
	return o
}

func (o AppLogsConfigurationResponseOutput) ToAppLogsConfigurationResponseOutputWithContext(ctx context.Context) AppLogsConfigurationResponseOutput {
	return o
}

func (o AppLogsConfigurationResponseOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppLogsConfigurationResponse) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o AppLogsConfigurationResponseOutput) LogAnalyticsConfiguration() LogAnalyticsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AppLogsConfigurationResponse) *LogAnalyticsConfigurationResponse {
		return v.LogAnalyticsConfiguration
	}).(LogAnalyticsConfigurationResponsePtrOutput)
}

type AppLogsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AppLogsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogsConfigurationResponse)(nil)).Elem()
}

func (o AppLogsConfigurationResponsePtrOutput) ToAppLogsConfigurationResponsePtrOutput() AppLogsConfigurationResponsePtrOutput {
	return o
}

func (o AppLogsConfigurationResponsePtrOutput) ToAppLogsConfigurationResponsePtrOutputWithContext(ctx context.Context) AppLogsConfigurationResponsePtrOutput {
	return o
}

func (o AppLogsConfigurationResponsePtrOutput) Elem() AppLogsConfigurationResponseOutput {
	return o.ApplyT(func(v *AppLogsConfigurationResponse) AppLogsConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret AppLogsConfigurationResponse
		return ret
	}).(AppLogsConfigurationResponseOutput)
}

func (o AppLogsConfigurationResponsePtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o AppLogsConfigurationResponsePtrOutput) LogAnalyticsConfiguration() LogAnalyticsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *AppLogsConfigurationResponse) *LogAnalyticsConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.LogAnalyticsConfiguration
	}).(LogAnalyticsConfigurationResponsePtrOutput)
}

// The configuration settings of the app registration for providers that have app ids and app secrets
type AppRegistration struct {
	// The App ID of the app used for login.
	AppId *string `pulumi:"appId"`
	// The app setting name that contains the app secret.
	AppSecretSettingName *string `pulumi:"appSecretSettingName"`
}

// AppRegistrationInput is an input type that accepts AppRegistrationArgs and AppRegistrationOutput values.
// You can construct a concrete instance of `AppRegistrationInput` via:
//
//	AppRegistrationArgs{...}
type AppRegistrationInput interface {
	pulumi.Input

	ToAppRegistrationOutput() AppRegistrationOutput
	ToAppRegistrationOutputWithContext(context.Context) AppRegistrationOutput
}

// The configuration settings of the app registration for providers that have app ids and app secrets
type AppRegistrationArgs struct {
	// The App ID of the app used for login.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// The app setting name that contains the app secret.
	AppSecretSettingName pulumi.StringPtrInput `pulumi:"appSecretSettingName"`
}

func (AppRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRegistration)(nil)).Elem()
}

func (i AppRegistrationArgs) ToAppRegistrationOutput() AppRegistrationOutput {
	return i.ToAppRegistrationOutputWithContext(context.Background())
}

func (i AppRegistrationArgs) ToAppRegistrationOutputWithContext(ctx context.Context) AppRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRegistrationOutput)
}

func (i AppRegistrationArgs) ToAppRegistrationPtrOutput() AppRegistrationPtrOutput {
	return i.ToAppRegistrationPtrOutputWithContext(context.Background())
}

func (i AppRegistrationArgs) ToAppRegistrationPtrOutputWithContext(ctx context.Context) AppRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRegistrationOutput).ToAppRegistrationPtrOutputWithContext(ctx)
}

// AppRegistrationPtrInput is an input type that accepts AppRegistrationArgs, AppRegistrationPtr and AppRegistrationPtrOutput values.
// You can construct a concrete instance of `AppRegistrationPtrInput` via:
//
//	        AppRegistrationArgs{...}
//
//	or:
//
//	        nil
type AppRegistrationPtrInput interface {
	pulumi.Input

	ToAppRegistrationPtrOutput() AppRegistrationPtrOutput
	ToAppRegistrationPtrOutputWithContext(context.Context) AppRegistrationPtrOutput
}

type appRegistrationPtrType AppRegistrationArgs

func AppRegistrationPtr(v *AppRegistrationArgs) AppRegistrationPtrInput {
	return (*appRegistrationPtrType)(v)
}

func (*appRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppRegistration)(nil)).Elem()
}

func (i *appRegistrationPtrType) ToAppRegistrationPtrOutput() AppRegistrationPtrOutput {
	return i.ToAppRegistrationPtrOutputWithContext(context.Background())
}

func (i *appRegistrationPtrType) ToAppRegistrationPtrOutputWithContext(ctx context.Context) AppRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRegistrationPtrOutput)
}

// The configuration settings of the app registration for providers that have app ids and app secrets
type AppRegistrationOutput struct{ *pulumi.OutputState }

func (AppRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRegistration)(nil)).Elem()
}

func (o AppRegistrationOutput) ToAppRegistrationOutput() AppRegistrationOutput {
	return o
}

func (o AppRegistrationOutput) ToAppRegistrationOutputWithContext(ctx context.Context) AppRegistrationOutput {
	return o
}

func (o AppRegistrationOutput) ToAppRegistrationPtrOutput() AppRegistrationPtrOutput {
	return o.ToAppRegistrationPtrOutputWithContext(context.Background())
}

func (o AppRegistrationOutput) ToAppRegistrationPtrOutputWithContext(ctx context.Context) AppRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppRegistration) *AppRegistration {
		return &v
	}).(AppRegistrationPtrOutput)
}

// The App ID of the app used for login.
func (o AppRegistrationOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistration) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the app secret.
func (o AppRegistrationOutput) AppSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistration) *string { return v.AppSecretSettingName }).(pulumi.StringPtrOutput)
}

type AppRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AppRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppRegistration)(nil)).Elem()
}

func (o AppRegistrationPtrOutput) ToAppRegistrationPtrOutput() AppRegistrationPtrOutput {
	return o
}

func (o AppRegistrationPtrOutput) ToAppRegistrationPtrOutputWithContext(ctx context.Context) AppRegistrationPtrOutput {
	return o
}

func (o AppRegistrationPtrOutput) Elem() AppRegistrationOutput {
	return o.ApplyT(func(v *AppRegistration) AppRegistration {
		if v != nil {
			return *v
		}
		var ret AppRegistration
		return ret
	}).(AppRegistrationOutput)
}

// The App ID of the app used for login.
func (o AppRegistrationPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppRegistration) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the app secret.
func (o AppRegistrationPtrOutput) AppSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppRegistration) *string {
		if v == nil {
			return nil
		}
		return v.AppSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the app registration for providers that have app ids and app secrets
type AppRegistrationResponse struct {
	// The App ID of the app used for login.
	AppId *string `pulumi:"appId"`
	// The app setting name that contains the app secret.
	AppSecretSettingName *string `pulumi:"appSecretSettingName"`
}

// The configuration settings of the app registration for providers that have app ids and app secrets
type AppRegistrationResponseOutput struct{ *pulumi.OutputState }

func (AppRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRegistrationResponse)(nil)).Elem()
}

func (o AppRegistrationResponseOutput) ToAppRegistrationResponseOutput() AppRegistrationResponseOutput {
	return o
}

func (o AppRegistrationResponseOutput) ToAppRegistrationResponseOutputWithContext(ctx context.Context) AppRegistrationResponseOutput {
	return o
}

// The App ID of the app used for login.
func (o AppRegistrationResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistrationResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the app secret.
func (o AppRegistrationResponseOutput) AppSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRegistrationResponse) *string { return v.AppSecretSettingName }).(pulumi.StringPtrOutput)
}

type AppRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (AppRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppRegistrationResponse)(nil)).Elem()
}

func (o AppRegistrationResponsePtrOutput) ToAppRegistrationResponsePtrOutput() AppRegistrationResponsePtrOutput {
	return o
}

func (o AppRegistrationResponsePtrOutput) ToAppRegistrationResponsePtrOutputWithContext(ctx context.Context) AppRegistrationResponsePtrOutput {
	return o
}

func (o AppRegistrationResponsePtrOutput) Elem() AppRegistrationResponseOutput {
	return o.ApplyT(func(v *AppRegistrationResponse) AppRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret AppRegistrationResponse
		return ret
	}).(AppRegistrationResponseOutput)
}

// The App ID of the app used for login.
func (o AppRegistrationResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the app secret.
func (o AppRegistrationResponsePtrOutput) AppSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Apple provider.
type Apple struct {
	// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopes `pulumi:"login"`
	// The configuration settings of the Apple registration.
	Registration *AppleRegistration `pulumi:"registration"`
}

// AppleInput is an input type that accepts AppleArgs and AppleOutput values.
// You can construct a concrete instance of `AppleInput` via:
//
//	AppleArgs{...}
type AppleInput interface {
	pulumi.Input

	ToAppleOutput() AppleOutput
	ToAppleOutputWithContext(context.Context) AppleOutput
}

// The configuration settings of the Apple provider.
type AppleArgs struct {
	// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login LoginScopesPtrInput `pulumi:"login"`
	// The configuration settings of the Apple registration.
	Registration AppleRegistrationPtrInput `pulumi:"registration"`
}

func (AppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Apple)(nil)).Elem()
}

func (i AppleArgs) ToAppleOutput() AppleOutput {
	return i.ToAppleOutputWithContext(context.Background())
}

func (i AppleArgs) ToAppleOutputWithContext(ctx context.Context) AppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppleOutput)
}

func (i AppleArgs) ToApplePtrOutput() ApplePtrOutput {
	return i.ToApplePtrOutputWithContext(context.Background())
}

func (i AppleArgs) ToApplePtrOutputWithContext(ctx context.Context) ApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppleOutput).ToApplePtrOutputWithContext(ctx)
}

// ApplePtrInput is an input type that accepts AppleArgs, ApplePtr and ApplePtrOutput values.
// You can construct a concrete instance of `ApplePtrInput` via:
//
//	        AppleArgs{...}
//
//	or:
//
//	        nil
type ApplePtrInput interface {
	pulumi.Input

	ToApplePtrOutput() ApplePtrOutput
	ToApplePtrOutputWithContext(context.Context) ApplePtrOutput
}

type applePtrType AppleArgs

func ApplePtr(v *AppleArgs) ApplePtrInput {
	return (*applePtrType)(v)
}

func (*applePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Apple)(nil)).Elem()
}

func (i *applePtrType) ToApplePtrOutput() ApplePtrOutput {
	return i.ToApplePtrOutputWithContext(context.Background())
}

func (i *applePtrType) ToApplePtrOutputWithContext(ctx context.Context) ApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplePtrOutput)
}

// The configuration settings of the Apple provider.
type AppleOutput struct{ *pulumi.OutputState }

func (AppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Apple)(nil)).Elem()
}

func (o AppleOutput) ToAppleOutput() AppleOutput {
	return o
}

func (o AppleOutput) ToAppleOutputWithContext(ctx context.Context) AppleOutput {
	return o
}

func (o AppleOutput) ToApplePtrOutput() ApplePtrOutput {
	return o.ToApplePtrOutputWithContext(context.Background())
}

func (o AppleOutput) ToApplePtrOutputWithContext(ctx context.Context) ApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Apple) *Apple {
		return &v
	}).(ApplePtrOutput)
}

// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Apple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o AppleOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v Apple) *LoginScopes { return v.Login }).(LoginScopesPtrOutput)
}

// The configuration settings of the Apple registration.
func (o AppleOutput) Registration() AppleRegistrationPtrOutput {
	return o.ApplyT(func(v Apple) *AppleRegistration { return v.Registration }).(AppleRegistrationPtrOutput)
}

type ApplePtrOutput struct{ *pulumi.OutputState }

func (ApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Apple)(nil)).Elem()
}

func (o ApplePtrOutput) ToApplePtrOutput() ApplePtrOutput {
	return o
}

func (o ApplePtrOutput) ToApplePtrOutputWithContext(ctx context.Context) ApplePtrOutput {
	return o
}

func (o ApplePtrOutput) Elem() AppleOutput {
	return o.ApplyT(func(v *Apple) Apple {
		if v != nil {
			return *v
		}
		var ret Apple
		return ret
	}).(AppleOutput)
}

// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o ApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Apple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o ApplePtrOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v *Apple) *LoginScopes {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesPtrOutput)
}

// The configuration settings of the Apple registration.
func (o ApplePtrOutput) Registration() AppleRegistrationPtrOutput {
	return o.ApplyT(func(v *Apple) *AppleRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AppleRegistrationPtrOutput)
}

// The configuration settings of the registration for the Apple provider
type AppleRegistration struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
}

// AppleRegistrationInput is an input type that accepts AppleRegistrationArgs and AppleRegistrationOutput values.
// You can construct a concrete instance of `AppleRegistrationInput` via:
//
//	AppleRegistrationArgs{...}
type AppleRegistrationInput interface {
	pulumi.Input

	ToAppleRegistrationOutput() AppleRegistrationOutput
	ToAppleRegistrationOutputWithContext(context.Context) AppleRegistrationOutput
}

// The configuration settings of the registration for the Apple provider
type AppleRegistrationArgs struct {
	// The Client ID of the app used for login.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName pulumi.StringPtrInput `pulumi:"clientSecretSettingName"`
}

func (AppleRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppleRegistration)(nil)).Elem()
}

func (i AppleRegistrationArgs) ToAppleRegistrationOutput() AppleRegistrationOutput {
	return i.ToAppleRegistrationOutputWithContext(context.Background())
}

func (i AppleRegistrationArgs) ToAppleRegistrationOutputWithContext(ctx context.Context) AppleRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppleRegistrationOutput)
}

func (i AppleRegistrationArgs) ToAppleRegistrationPtrOutput() AppleRegistrationPtrOutput {
	return i.ToAppleRegistrationPtrOutputWithContext(context.Background())
}

func (i AppleRegistrationArgs) ToAppleRegistrationPtrOutputWithContext(ctx context.Context) AppleRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppleRegistrationOutput).ToAppleRegistrationPtrOutputWithContext(ctx)
}

// AppleRegistrationPtrInput is an input type that accepts AppleRegistrationArgs, AppleRegistrationPtr and AppleRegistrationPtrOutput values.
// You can construct a concrete instance of `AppleRegistrationPtrInput` via:
//
//	        AppleRegistrationArgs{...}
//
//	or:
//
//	        nil
type AppleRegistrationPtrInput interface {
	pulumi.Input

	ToAppleRegistrationPtrOutput() AppleRegistrationPtrOutput
	ToAppleRegistrationPtrOutputWithContext(context.Context) AppleRegistrationPtrOutput
}

type appleRegistrationPtrType AppleRegistrationArgs

func AppleRegistrationPtr(v *AppleRegistrationArgs) AppleRegistrationPtrInput {
	return (*appleRegistrationPtrType)(v)
}

func (*appleRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppleRegistration)(nil)).Elem()
}

func (i *appleRegistrationPtrType) ToAppleRegistrationPtrOutput() AppleRegistrationPtrOutput {
	return i.ToAppleRegistrationPtrOutputWithContext(context.Background())
}

func (i *appleRegistrationPtrType) ToAppleRegistrationPtrOutputWithContext(ctx context.Context) AppleRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppleRegistrationPtrOutput)
}

// The configuration settings of the registration for the Apple provider
type AppleRegistrationOutput struct{ *pulumi.OutputState }

func (AppleRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppleRegistration)(nil)).Elem()
}

func (o AppleRegistrationOutput) ToAppleRegistrationOutput() AppleRegistrationOutput {
	return o
}

func (o AppleRegistrationOutput) ToAppleRegistrationOutputWithContext(ctx context.Context) AppleRegistrationOutput {
	return o
}

func (o AppleRegistrationOutput) ToAppleRegistrationPtrOutput() AppleRegistrationPtrOutput {
	return o.ToAppleRegistrationPtrOutputWithContext(context.Background())
}

func (o AppleRegistrationOutput) ToAppleRegistrationPtrOutputWithContext(ctx context.Context) AppleRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppleRegistration) *AppleRegistration {
		return &v
	}).(AppleRegistrationPtrOutput)
}

// The Client ID of the app used for login.
func (o AppleRegistrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppleRegistration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o AppleRegistrationOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppleRegistration) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

type AppleRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AppleRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppleRegistration)(nil)).Elem()
}

func (o AppleRegistrationPtrOutput) ToAppleRegistrationPtrOutput() AppleRegistrationPtrOutput {
	return o
}

func (o AppleRegistrationPtrOutput) ToAppleRegistrationPtrOutputWithContext(ctx context.Context) AppleRegistrationPtrOutput {
	return o
}

func (o AppleRegistrationPtrOutput) Elem() AppleRegistrationOutput {
	return o.ApplyT(func(v *AppleRegistration) AppleRegistration {
		if v != nil {
			return *v
		}
		var ret AppleRegistration
		return ret
	}).(AppleRegistrationOutput)
}

// The Client ID of the app used for login.
func (o AppleRegistrationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppleRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o AppleRegistrationPtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppleRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the registration for the Apple provider
type AppleRegistrationResponse struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
}

// The configuration settings of the registration for the Apple provider
type AppleRegistrationResponseOutput struct{ *pulumi.OutputState }

func (AppleRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppleRegistrationResponse)(nil)).Elem()
}

func (o AppleRegistrationResponseOutput) ToAppleRegistrationResponseOutput() AppleRegistrationResponseOutput {
	return o
}

func (o AppleRegistrationResponseOutput) ToAppleRegistrationResponseOutputWithContext(ctx context.Context) AppleRegistrationResponseOutput {
	return o
}

// The Client ID of the app used for login.
func (o AppleRegistrationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppleRegistrationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o AppleRegistrationResponseOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppleRegistrationResponse) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

type AppleRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (AppleRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppleRegistrationResponse)(nil)).Elem()
}

func (o AppleRegistrationResponsePtrOutput) ToAppleRegistrationResponsePtrOutput() AppleRegistrationResponsePtrOutput {
	return o
}

func (o AppleRegistrationResponsePtrOutput) ToAppleRegistrationResponsePtrOutputWithContext(ctx context.Context) AppleRegistrationResponsePtrOutput {
	return o
}

func (o AppleRegistrationResponsePtrOutput) Elem() AppleRegistrationResponseOutput {
	return o.ApplyT(func(v *AppleRegistrationResponse) AppleRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret AppleRegistrationResponse
		return ret
	}).(AppleRegistrationResponseOutput)
}

// The Client ID of the app used for login.
func (o AppleRegistrationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppleRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o AppleRegistrationResponsePtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppleRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Apple provider.
type AppleResponse struct {
	// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopesResponse `pulumi:"login"`
	// The configuration settings of the Apple registration.
	Registration *AppleRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the Apple provider.
type AppleResponseOutput struct{ *pulumi.OutputState }

func (AppleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppleResponse)(nil)).Elem()
}

func (o AppleResponseOutput) ToAppleResponseOutput() AppleResponseOutput {
	return o
}

func (o AppleResponseOutput) ToAppleResponseOutputWithContext(ctx context.Context) AppleResponseOutput {
	return o
}

// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AppleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o AppleResponseOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v AppleResponse) *LoginScopesResponse { return v.Login }).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the Apple registration.
func (o AppleResponseOutput) Registration() AppleRegistrationResponsePtrOutput {
	return o.ApplyT(func(v AppleResponse) *AppleRegistrationResponse { return v.Registration }).(AppleRegistrationResponsePtrOutput)
}

type AppleResponsePtrOutput struct{ *pulumi.OutputState }

func (AppleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppleResponse)(nil)).Elem()
}

func (o AppleResponsePtrOutput) ToAppleResponsePtrOutput() AppleResponsePtrOutput {
	return o
}

func (o AppleResponsePtrOutput) ToAppleResponsePtrOutputWithContext(ctx context.Context) AppleResponsePtrOutput {
	return o
}

func (o AppleResponsePtrOutput) Elem() AppleResponseOutput {
	return o.ApplyT(func(v *AppleResponse) AppleResponse {
		if v != nil {
			return *v
		}
		var ret AppleResponse
		return ret
	}).(AppleResponseOutput)
}

// <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AppleResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o AppleResponsePtrOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v *AppleResponse) *LoginScopesResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the Apple registration.
func (o AppleResponsePtrOutput) Registration() AppleRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *AppleResponse) *AppleRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AppleRegistrationResponsePtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfig struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage *AzureBlobStorageApplicationLogsConfig `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage *AzureTableStorageApplicationLogsConfig `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem *FileSystemApplicationLogsConfig `pulumi:"fileSystem"`
}

// Defaults sets the appropriate defaults for ApplicationLogsConfig
func (val *ApplicationLogsConfig) Defaults() *ApplicationLogsConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FileSystem = tmp.FileSystem.Defaults()

	return &tmp
}

// ApplicationLogsConfigInput is an input type that accepts ApplicationLogsConfigArgs and ApplicationLogsConfigOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigInput` via:
//
//	ApplicationLogsConfigArgs{...}
type ApplicationLogsConfigInput interface {
	pulumi.Input

	ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput
	ToApplicationLogsConfigOutputWithContext(context.Context) ApplicationLogsConfigOutput
}

// Application logs configuration.
type ApplicationLogsConfigArgs struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage AzureBlobStorageApplicationLogsConfigPtrInput `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage AzureTableStorageApplicationLogsConfigPtrInput `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem FileSystemApplicationLogsConfigPtrInput `pulumi:"fileSystem"`
}

// Defaults sets the appropriate defaults for ApplicationLogsConfigArgs
func (val *ApplicationLogsConfigArgs) Defaults() *ApplicationLogsConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfig)(nil)).Elem()
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput {
	return i.ToApplicationLogsConfigOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigOutputWithContext(ctx context.Context) ApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigOutput)
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return i.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationLogsConfigArgs) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigOutput).ToApplicationLogsConfigPtrOutputWithContext(ctx)
}

// ApplicationLogsConfigPtrInput is an input type that accepts ApplicationLogsConfigArgs, ApplicationLogsConfigPtr and ApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationLogsConfigPtrInput` via:
//
//	        ApplicationLogsConfigArgs{...}
//
//	or:
//
//	        nil
type ApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput
	ToApplicationLogsConfigPtrOutputWithContext(context.Context) ApplicationLogsConfigPtrOutput
}

type applicationLogsConfigPtrType ApplicationLogsConfigArgs

func ApplicationLogsConfigPtr(v *ApplicationLogsConfigArgs) ApplicationLogsConfigPtrInput {
	return (*applicationLogsConfigPtrType)(v)
}

func (*applicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfig)(nil)).Elem()
}

func (i *applicationLogsConfigPtrType) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return i.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *applicationLogsConfigPtrType) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationLogsConfigPtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfig)(nil)).Elem()
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigOutput() ApplicationLogsConfigOutput {
	return o
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigOutputWithContext(ctx context.Context) ApplicationLogsConfigOutput {
	return o
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return o.ToApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationLogsConfigOutput) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationLogsConfig) *ApplicationLogsConfig {
		return &v
	}).(ApplicationLogsConfigPtrOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig { return v.AzureBlobStorage }).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig { return v.AzureTableStorage }).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigOutput) FileSystem() FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfig) *FileSystemApplicationLogsConfig { return v.FileSystem }).(FileSystemApplicationLogsConfigPtrOutput)
}

type ApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfig)(nil)).Elem()
}

func (o ApplicationLogsConfigPtrOutput) ToApplicationLogsConfigPtrOutput() ApplicationLogsConfigPtrOutput {
	return o
}

func (o ApplicationLogsConfigPtrOutput) ToApplicationLogsConfigPtrOutputWithContext(ctx context.Context) ApplicationLogsConfigPtrOutput {
	return o
}

func (o ApplicationLogsConfigPtrOutput) Elem() ApplicationLogsConfigOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) ApplicationLogsConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationLogsConfig
		return ret
	}).(ApplicationLogsConfigOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigPtrOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigPtrOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigPtrOutput) FileSystem() FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfig) *FileSystemApplicationLogsConfig {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemApplicationLogsConfigPtrOutput)
}

// Application logs configuration.
type ApplicationLogsConfigResponse struct {
	// Application logs to blob storage configuration.
	AzureBlobStorage *AzureBlobStorageApplicationLogsConfigResponse `pulumi:"azureBlobStorage"`
	// Application logs to azure table storage configuration.
	AzureTableStorage *AzureTableStorageApplicationLogsConfigResponse `pulumi:"azureTableStorage"`
	// Application logs to file system configuration.
	FileSystem *FileSystemApplicationLogsConfigResponse `pulumi:"fileSystem"`
}

// Defaults sets the appropriate defaults for ApplicationLogsConfigResponse
func (val *ApplicationLogsConfigResponse) Defaults() *ApplicationLogsConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.FileSystem = tmp.FileSystem.Defaults()

	return &tmp
}

// Application logs configuration.
type ApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationLogsConfigResponse)(nil)).Elem()
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponseOutput() ApplicationLogsConfigResponseOutput {
	return o
}

func (o ApplicationLogsConfigResponseOutput) ToApplicationLogsConfigResponseOutputWithContext(ctx context.Context) ApplicationLogsConfigResponseOutput {
	return o
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigResponseOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *AzureBlobStorageApplicationLogsConfigResponse {
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigResponseOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *AzureTableStorageApplicationLogsConfigResponse {
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigResponseOutput) FileSystem() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v ApplicationLogsConfigResponse) *FileSystemApplicationLogsConfigResponse { return v.FileSystem }).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

type ApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationLogsConfigResponse)(nil)).Elem()
}

func (o ApplicationLogsConfigResponsePtrOutput) ToApplicationLogsConfigResponsePtrOutput() ApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o ApplicationLogsConfigResponsePtrOutput) ToApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) ApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o ApplicationLogsConfigResponsePtrOutput) Elem() ApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) ApplicationLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret ApplicationLogsConfigResponse
		return ret
	}).(ApplicationLogsConfigResponseOutput)
}

// Application logs to blob storage configuration.
func (o ApplicationLogsConfigResponsePtrOutput) AzureBlobStorage() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *AzureBlobStorageApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to azure table storage configuration.
func (o ApplicationLogsConfigResponsePtrOutput) AzureTableStorage() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *AzureTableStorageApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureTableStorage
	}).(AzureTableStorageApplicationLogsConfigResponsePtrOutput)
}

// Application logs to file system configuration.
func (o ApplicationLogsConfigResponsePtrOutput) FileSystem() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationLogsConfigResponse) *FileSystemApplicationLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemApplicationLogsConfigResponsePtrOutput)
}

type ArcConfiguration struct {
	ArtifactStorageAccessMode    *string                `pulumi:"artifactStorageAccessMode"`
	ArtifactStorageClassName     *string                `pulumi:"artifactStorageClassName"`
	ArtifactStorageMountPath     *string                `pulumi:"artifactStorageMountPath"`
	ArtifactStorageNodeName      *string                `pulumi:"artifactStorageNodeName"`
	ArtifactsStorageType         *StorageType           `pulumi:"artifactsStorageType"`
	FrontEndServiceConfiguration *FrontEndConfiguration `pulumi:"frontEndServiceConfiguration"`
	KubeConfig                   *string                `pulumi:"kubeConfig"`
}

// ArcConfigurationInput is an input type that accepts ArcConfigurationArgs and ArcConfigurationOutput values.
// You can construct a concrete instance of `ArcConfigurationInput` via:
//
//	ArcConfigurationArgs{...}
type ArcConfigurationInput interface {
	pulumi.Input

	ToArcConfigurationOutput() ArcConfigurationOutput
	ToArcConfigurationOutputWithContext(context.Context) ArcConfigurationOutput
}

type ArcConfigurationArgs struct {
	ArtifactStorageAccessMode    pulumi.StringPtrInput         `pulumi:"artifactStorageAccessMode"`
	ArtifactStorageClassName     pulumi.StringPtrInput         `pulumi:"artifactStorageClassName"`
	ArtifactStorageMountPath     pulumi.StringPtrInput         `pulumi:"artifactStorageMountPath"`
	ArtifactStorageNodeName      pulumi.StringPtrInput         `pulumi:"artifactStorageNodeName"`
	ArtifactsStorageType         StorageTypePtrInput           `pulumi:"artifactsStorageType"`
	FrontEndServiceConfiguration FrontEndConfigurationPtrInput `pulumi:"frontEndServiceConfiguration"`
	KubeConfig                   pulumi.StringPtrInput         `pulumi:"kubeConfig"`
}

func (ArcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConfiguration)(nil)).Elem()
}

func (i ArcConfigurationArgs) ToArcConfigurationOutput() ArcConfigurationOutput {
	return i.ToArcConfigurationOutputWithContext(context.Background())
}

func (i ArcConfigurationArgs) ToArcConfigurationOutputWithContext(ctx context.Context) ArcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcConfigurationOutput)
}

func (i ArcConfigurationArgs) ToArcConfigurationPtrOutput() ArcConfigurationPtrOutput {
	return i.ToArcConfigurationPtrOutputWithContext(context.Background())
}

func (i ArcConfigurationArgs) ToArcConfigurationPtrOutputWithContext(ctx context.Context) ArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcConfigurationOutput).ToArcConfigurationPtrOutputWithContext(ctx)
}

// ArcConfigurationPtrInput is an input type that accepts ArcConfigurationArgs, ArcConfigurationPtr and ArcConfigurationPtrOutput values.
// You can construct a concrete instance of `ArcConfigurationPtrInput` via:
//
//	        ArcConfigurationArgs{...}
//
//	or:
//
//	        nil
type ArcConfigurationPtrInput interface {
	pulumi.Input

	ToArcConfigurationPtrOutput() ArcConfigurationPtrOutput
	ToArcConfigurationPtrOutputWithContext(context.Context) ArcConfigurationPtrOutput
}

type arcConfigurationPtrType ArcConfigurationArgs

func ArcConfigurationPtr(v *ArcConfigurationArgs) ArcConfigurationPtrInput {
	return (*arcConfigurationPtrType)(v)
}

func (*arcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcConfiguration)(nil)).Elem()
}

func (i *arcConfigurationPtrType) ToArcConfigurationPtrOutput() ArcConfigurationPtrOutput {
	return i.ToArcConfigurationPtrOutputWithContext(context.Background())
}

func (i *arcConfigurationPtrType) ToArcConfigurationPtrOutputWithContext(ctx context.Context) ArcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArcConfigurationPtrOutput)
}

type ArcConfigurationOutput struct{ *pulumi.OutputState }

func (ArcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConfiguration)(nil)).Elem()
}

func (o ArcConfigurationOutput) ToArcConfigurationOutput() ArcConfigurationOutput {
	return o
}

func (o ArcConfigurationOutput) ToArcConfigurationOutputWithContext(ctx context.Context) ArcConfigurationOutput {
	return o
}

func (o ArcConfigurationOutput) ToArcConfigurationPtrOutput() ArcConfigurationPtrOutput {
	return o.ToArcConfigurationPtrOutputWithContext(context.Background())
}

func (o ArcConfigurationOutput) ToArcConfigurationPtrOutputWithContext(ctx context.Context) ArcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArcConfiguration) *ArcConfiguration {
		return &v
	}).(ArcConfigurationPtrOutput)
}

func (o ArcConfigurationOutput) ArtifactStorageAccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *string { return v.ArtifactStorageAccessMode }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationOutput) ArtifactStorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *string { return v.ArtifactStorageClassName }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationOutput) ArtifactStorageMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *string { return v.ArtifactStorageMountPath }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationOutput) ArtifactStorageNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *string { return v.ArtifactStorageNodeName }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationOutput) ArtifactsStorageType() StorageTypePtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *StorageType { return v.ArtifactsStorageType }).(StorageTypePtrOutput)
}

func (o ArcConfigurationOutput) FrontEndServiceConfiguration() FrontEndConfigurationPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *FrontEndConfiguration { return v.FrontEndServiceConfiguration }).(FrontEndConfigurationPtrOutput)
}

func (o ArcConfigurationOutput) KubeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfiguration) *string { return v.KubeConfig }).(pulumi.StringPtrOutput)
}

type ArcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ArcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcConfiguration)(nil)).Elem()
}

func (o ArcConfigurationPtrOutput) ToArcConfigurationPtrOutput() ArcConfigurationPtrOutput {
	return o
}

func (o ArcConfigurationPtrOutput) ToArcConfigurationPtrOutputWithContext(ctx context.Context) ArcConfigurationPtrOutput {
	return o
}

func (o ArcConfigurationPtrOutput) Elem() ArcConfigurationOutput {
	return o.ApplyT(func(v *ArcConfiguration) ArcConfiguration {
		if v != nil {
			return *v
		}
		var ret ArcConfiguration
		return ret
	}).(ArcConfigurationOutput)
}

func (o ArcConfigurationPtrOutput) ArtifactStorageAccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageAccessMode
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationPtrOutput) ArtifactStorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageClassName
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationPtrOutput) ArtifactStorageMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageMountPath
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationPtrOutput) ArtifactStorageNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageNodeName
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationPtrOutput) ArtifactsStorageType() StorageTypePtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *StorageType {
		if v == nil {
			return nil
		}
		return v.ArtifactsStorageType
	}).(StorageTypePtrOutput)
}

func (o ArcConfigurationPtrOutput) FrontEndServiceConfiguration() FrontEndConfigurationPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *FrontEndConfiguration {
		if v == nil {
			return nil
		}
		return v.FrontEndServiceConfiguration
	}).(FrontEndConfigurationPtrOutput)
}

func (o ArcConfigurationPtrOutput) KubeConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KubeConfig
	}).(pulumi.StringPtrOutput)
}

type ArcConfigurationResponse struct {
	ArtifactStorageAccessMode    *string                        `pulumi:"artifactStorageAccessMode"`
	ArtifactStorageClassName     *string                        `pulumi:"artifactStorageClassName"`
	ArtifactStorageMountPath     *string                        `pulumi:"artifactStorageMountPath"`
	ArtifactStorageNodeName      *string                        `pulumi:"artifactStorageNodeName"`
	ArtifactsStorageType         *string                        `pulumi:"artifactsStorageType"`
	FrontEndServiceConfiguration *FrontEndConfigurationResponse `pulumi:"frontEndServiceConfiguration"`
}

type ArcConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ArcConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArcConfigurationResponse)(nil)).Elem()
}

func (o ArcConfigurationResponseOutput) ToArcConfigurationResponseOutput() ArcConfigurationResponseOutput {
	return o
}

func (o ArcConfigurationResponseOutput) ToArcConfigurationResponseOutputWithContext(ctx context.Context) ArcConfigurationResponseOutput {
	return o
}

func (o ArcConfigurationResponseOutput) ArtifactStorageAccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *string { return v.ArtifactStorageAccessMode }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponseOutput) ArtifactStorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *string { return v.ArtifactStorageClassName }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponseOutput) ArtifactStorageMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *string { return v.ArtifactStorageMountPath }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponseOutput) ArtifactStorageNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *string { return v.ArtifactStorageNodeName }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponseOutput) ArtifactsStorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *string { return v.ArtifactsStorageType }).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponseOutput) FrontEndServiceConfiguration() FrontEndConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ArcConfigurationResponse) *FrontEndConfigurationResponse { return v.FrontEndServiceConfiguration }).(FrontEndConfigurationResponsePtrOutput)
}

type ArcConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ArcConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArcConfigurationResponse)(nil)).Elem()
}

func (o ArcConfigurationResponsePtrOutput) ToArcConfigurationResponsePtrOutput() ArcConfigurationResponsePtrOutput {
	return o
}

func (o ArcConfigurationResponsePtrOutput) ToArcConfigurationResponsePtrOutputWithContext(ctx context.Context) ArcConfigurationResponsePtrOutput {
	return o
}

func (o ArcConfigurationResponsePtrOutput) Elem() ArcConfigurationResponseOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) ArcConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ArcConfigurationResponse
		return ret
	}).(ArcConfigurationResponseOutput)
}

func (o ArcConfigurationResponsePtrOutput) ArtifactStorageAccessMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageAccessMode
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponsePtrOutput) ArtifactStorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageClassName
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponsePtrOutput) ArtifactStorageMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageMountPath
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponsePtrOutput) ArtifactStorageNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactStorageNodeName
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponsePtrOutput) ArtifactsStorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactsStorageType
	}).(pulumi.StringPtrOutput)
}

func (o ArcConfigurationResponsePtrOutput) FrontEndServiceConfiguration() FrontEndConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ArcConfigurationResponse) *FrontEndConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.FrontEndServiceConfiguration
	}).(FrontEndConfigurationResponsePtrOutput)
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponse struct {
	Id string `pulumi:"id"`
}

// A wrapper for an ARM resource id
type ArmIdWrapperResponseOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutput() ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) ToArmIdWrapperResponseOutputWithContext(ctx context.Context) ArmIdWrapperResponseOutput {
	return o
}

func (o ArmIdWrapperResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ArmIdWrapperResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ArmIdWrapperResponsePtrOutput struct{ *pulumi.OutputState }

func (ArmIdWrapperResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmIdWrapperResponse)(nil)).Elem()
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutput() ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) ToArmIdWrapperResponsePtrOutputWithContext(ctx context.Context) ArmIdWrapperResponsePtrOutput {
	return o
}

func (o ArmIdWrapperResponsePtrOutput) Elem() ArmIdWrapperResponseOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) ArmIdWrapperResponse {
		if v != nil {
			return *v
		}
		var ret ArmIdWrapperResponse
		return ret
	}).(ArmIdWrapperResponseOutput)
}

func (o ArmIdWrapperResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmIdWrapperResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The plan object in Azure Resource Manager, represents a marketplace plan.
type ArmPlanResponse struct {
	// The name.
	Name *string `pulumi:"name"`
	// The product.
	Product *string `pulumi:"product"`
	// The promotion code.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher.
	Publisher *string `pulumi:"publisher"`
	// Version of product.
	Version *string `pulumi:"version"`
}

// The plan object in Azure Resource Manager, represents a marketplace plan.
type ArmPlanResponseOutput struct{ *pulumi.OutputState }

func (ArmPlanResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArmPlanResponse)(nil)).Elem()
}

func (o ArmPlanResponseOutput) ToArmPlanResponseOutput() ArmPlanResponseOutput {
	return o
}

func (o ArmPlanResponseOutput) ToArmPlanResponseOutputWithContext(ctx context.Context) ArmPlanResponseOutput {
	return o
}

// The name.
func (o ArmPlanResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlanResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product.
func (o ArmPlanResponseOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlanResponse) *string { return v.Product }).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o ArmPlanResponseOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlanResponse) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher.
func (o ArmPlanResponseOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlanResponse) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Version of product.
func (o ArmPlanResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArmPlanResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ArmPlanResponsePtrOutput struct{ *pulumi.OutputState }

func (ArmPlanResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArmPlanResponse)(nil)).Elem()
}

func (o ArmPlanResponsePtrOutput) ToArmPlanResponsePtrOutput() ArmPlanResponsePtrOutput {
	return o
}

func (o ArmPlanResponsePtrOutput) ToArmPlanResponsePtrOutputWithContext(ctx context.Context) ArmPlanResponsePtrOutput {
	return o
}

func (o ArmPlanResponsePtrOutput) Elem() ArmPlanResponseOutput {
	return o.ApplyT(func(v *ArmPlanResponse) ArmPlanResponse {
		if v != nil {
			return *v
		}
		var ret ArmPlanResponse
		return ret
	}).(ArmPlanResponseOutput)
}

// The name.
func (o ArmPlanResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The product.
func (o ArmPlanResponsePtrOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Product
	}).(pulumi.StringPtrOutput)
}

// The promotion code.
func (o ArmPlanResponsePtrOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.PromotionCode
	}).(pulumi.StringPtrOutput)
}

// The publisher.
func (o ArmPlanResponsePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Version of product.
func (o ArmPlanResponsePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArmPlanResponse) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the platform of App Service Authentication/Authorization.
type AuthPlatform struct {
	// The path of the config file containing auth settings if they come from a file.
	// If the path is relative, base will the site's root directory.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
	Enabled *bool `pulumi:"enabled"`
	// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
	// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// AuthPlatformInput is an input type that accepts AuthPlatformArgs and AuthPlatformOutput values.
// You can construct a concrete instance of `AuthPlatformInput` via:
//
//	AuthPlatformArgs{...}
type AuthPlatformInput interface {
	pulumi.Input

	ToAuthPlatformOutput() AuthPlatformOutput
	ToAuthPlatformOutputWithContext(context.Context) AuthPlatformOutput
}

// The configuration settings of the platform of App Service Authentication/Authorization.
type AuthPlatformArgs struct {
	// The path of the config file containing auth settings if they come from a file.
	// If the path is relative, base will the site's root directory.
	ConfigFilePath pulumi.StringPtrInput `pulumi:"configFilePath"`
	// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
	// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
}

func (AuthPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPlatform)(nil)).Elem()
}

func (i AuthPlatformArgs) ToAuthPlatformOutput() AuthPlatformOutput {
	return i.ToAuthPlatformOutputWithContext(context.Background())
}

func (i AuthPlatformArgs) ToAuthPlatformOutputWithContext(ctx context.Context) AuthPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPlatformOutput)
}

func (i AuthPlatformArgs) ToAuthPlatformPtrOutput() AuthPlatformPtrOutput {
	return i.ToAuthPlatformPtrOutputWithContext(context.Background())
}

func (i AuthPlatformArgs) ToAuthPlatformPtrOutputWithContext(ctx context.Context) AuthPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPlatformOutput).ToAuthPlatformPtrOutputWithContext(ctx)
}

// AuthPlatformPtrInput is an input type that accepts AuthPlatformArgs, AuthPlatformPtr and AuthPlatformPtrOutput values.
// You can construct a concrete instance of `AuthPlatformPtrInput` via:
//
//	        AuthPlatformArgs{...}
//
//	or:
//
//	        nil
type AuthPlatformPtrInput interface {
	pulumi.Input

	ToAuthPlatformPtrOutput() AuthPlatformPtrOutput
	ToAuthPlatformPtrOutputWithContext(context.Context) AuthPlatformPtrOutput
}

type authPlatformPtrType AuthPlatformArgs

func AuthPlatformPtr(v *AuthPlatformArgs) AuthPlatformPtrInput {
	return (*authPlatformPtrType)(v)
}

func (*authPlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPlatform)(nil)).Elem()
}

func (i *authPlatformPtrType) ToAuthPlatformPtrOutput() AuthPlatformPtrOutput {
	return i.ToAuthPlatformPtrOutputWithContext(context.Background())
}

func (i *authPlatformPtrType) ToAuthPlatformPtrOutputWithContext(ctx context.Context) AuthPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPlatformPtrOutput)
}

// The configuration settings of the platform of App Service Authentication/Authorization.
type AuthPlatformOutput struct{ *pulumi.OutputState }

func (AuthPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPlatform)(nil)).Elem()
}

func (o AuthPlatformOutput) ToAuthPlatformOutput() AuthPlatformOutput {
	return o
}

func (o AuthPlatformOutput) ToAuthPlatformOutputWithContext(ctx context.Context) AuthPlatformOutput {
	return o
}

func (o AuthPlatformOutput) ToAuthPlatformPtrOutput() AuthPlatformPtrOutput {
	return o.ToAuthPlatformPtrOutputWithContext(context.Background())
}

func (o AuthPlatformOutput) ToAuthPlatformPtrOutputWithContext(ctx context.Context) AuthPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthPlatform) *AuthPlatform {
		return &v
	}).(AuthPlatformPtrOutput)
}

// The path of the config file containing auth settings if they come from a file.
// If the path is relative, base will the site's root directory.
func (o AuthPlatformOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPlatform) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
func (o AuthPlatformOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthPlatform) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
func (o AuthPlatformOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPlatform) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

type AuthPlatformPtrOutput struct{ *pulumi.OutputState }

func (AuthPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPlatform)(nil)).Elem()
}

func (o AuthPlatformPtrOutput) ToAuthPlatformPtrOutput() AuthPlatformPtrOutput {
	return o
}

func (o AuthPlatformPtrOutput) ToAuthPlatformPtrOutputWithContext(ctx context.Context) AuthPlatformPtrOutput {
	return o
}

func (o AuthPlatformPtrOutput) Elem() AuthPlatformOutput {
	return o.ApplyT(func(v *AuthPlatform) AuthPlatform {
		if v != nil {
			return *v
		}
		var ret AuthPlatform
		return ret
	}).(AuthPlatformOutput)
}

// The path of the config file containing auth settings if they come from a file.
// If the path is relative, base will the site's root directory.
func (o AuthPlatformPtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthPlatform) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
func (o AuthPlatformPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthPlatform) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
func (o AuthPlatformPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthPlatform) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the platform of App Service Authentication/Authorization.
type AuthPlatformResponse struct {
	// The path of the config file containing auth settings if they come from a file.
	// If the path is relative, base will the site's root directory.
	ConfigFilePath *string `pulumi:"configFilePath"`
	// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
	Enabled *bool `pulumi:"enabled"`
	// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
	// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// The configuration settings of the platform of App Service Authentication/Authorization.
type AuthPlatformResponseOutput struct{ *pulumi.OutputState }

func (AuthPlatformResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthPlatformResponse)(nil)).Elem()
}

func (o AuthPlatformResponseOutput) ToAuthPlatformResponseOutput() AuthPlatformResponseOutput {
	return o
}

func (o AuthPlatformResponseOutput) ToAuthPlatformResponseOutputWithContext(ctx context.Context) AuthPlatformResponseOutput {
	return o
}

// The path of the config file containing auth settings if they come from a file.
// If the path is relative, base will the site's root directory.
func (o AuthPlatformResponseOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPlatformResponse) *string { return v.ConfigFilePath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
func (o AuthPlatformResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthPlatformResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
func (o AuthPlatformResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthPlatformResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

type AuthPlatformResponsePtrOutput struct{ *pulumi.OutputState }

func (AuthPlatformResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPlatformResponse)(nil)).Elem()
}

func (o AuthPlatformResponsePtrOutput) ToAuthPlatformResponsePtrOutput() AuthPlatformResponsePtrOutput {
	return o
}

func (o AuthPlatformResponsePtrOutput) ToAuthPlatformResponsePtrOutputWithContext(ctx context.Context) AuthPlatformResponsePtrOutput {
	return o
}

func (o AuthPlatformResponsePtrOutput) Elem() AuthPlatformResponseOutput {
	return o.ApplyT(func(v *AuthPlatformResponse) AuthPlatformResponse {
		if v != nil {
			return *v
		}
		var ret AuthPlatformResponse
		return ret
	}).(AuthPlatformResponseOutput)
}

// The path of the config file containing auth settings if they come from a file.
// If the path is relative, base will the site's root directory.
func (o AuthPlatformResponsePtrOutput) ConfigFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthPlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFilePath
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
func (o AuthPlatformResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthPlatformResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
// The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
func (o AuthPlatformResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthPlatformResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActions struct {
	// Predefined action to be taken.
	ActionType *AutoHealActionType `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomAction `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// AutoHealActionsInput is an input type that accepts AutoHealActionsArgs and AutoHealActionsOutput values.
// You can construct a concrete instance of `AutoHealActionsInput` via:
//
//	AutoHealActionsArgs{...}
type AutoHealActionsInput interface {
	pulumi.Input

	ToAutoHealActionsOutput() AutoHealActionsOutput
	ToAutoHealActionsOutputWithContext(context.Context) AutoHealActionsOutput
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsArgs struct {
	// Predefined action to be taken.
	ActionType AutoHealActionTypePtrInput `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction AutoHealCustomActionPtrInput `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime pulumi.StringPtrInput `pulumi:"minProcessExecutionTime"`
}

func (AutoHealActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return i.ToAutoHealActionsOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput)
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i AutoHealActionsArgs) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsOutput).ToAutoHealActionsPtrOutputWithContext(ctx)
}

// AutoHealActionsPtrInput is an input type that accepts AutoHealActionsArgs, AutoHealActionsPtr and AutoHealActionsPtrOutput values.
// You can construct a concrete instance of `AutoHealActionsPtrInput` via:
//
//	        AutoHealActionsArgs{...}
//
//	or:
//
//	        nil
type AutoHealActionsPtrInput interface {
	pulumi.Input

	ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput
	ToAutoHealActionsPtrOutputWithContext(context.Context) AutoHealActionsPtrOutput
}

type autoHealActionsPtrType AutoHealActionsArgs

func AutoHealActionsPtr(v *AutoHealActionsArgs) AutoHealActionsPtrInput {
	return (*autoHealActionsPtrType)(v)
}

func (*autoHealActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return i.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (i *autoHealActionsPtrType) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealActionsPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsOutput struct{ *pulumi.OutputState }

func (AutoHealActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutput() AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsOutputWithContext(ctx context.Context) AutoHealActionsOutput {
	return o
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o.ToAutoHealActionsPtrOutputWithContext(context.Background())
}

func (o AutoHealActionsOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoHealActions) *AutoHealActions {
		return &v
	}).(AutoHealActionsPtrOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsOutput) ActionType() AutoHealActionTypePtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealActionType { return v.ActionType }).(AutoHealActionTypePtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *AutoHealCustomAction { return v.CustomAction }).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActions) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsPtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActions)(nil)).Elem()
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutput() AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) ToAutoHealActionsPtrOutputWithContext(ctx context.Context) AutoHealActionsPtrOutput {
	return o
}

func (o AutoHealActionsPtrOutput) Elem() AutoHealActionsOutput {
	return o.ApplyT(func(v *AutoHealActions) AutoHealActions {
		if v != nil {
			return *v
		}
		var ret AutoHealActions
		return ret
	}).(AutoHealActionsOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsPtrOutput) ActionType() AutoHealActionTypePtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealActionType {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(AutoHealActionTypePtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsPtrOutput) CustomAction() AutoHealCustomActionPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *AutoHealCustomAction {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionPtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsPtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActions) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponse struct {
	// Predefined action to be taken.
	ActionType *string `pulumi:"actionType"`
	// Custom action to be taken.
	CustomAction *AutoHealCustomActionResponse `pulumi:"customAction"`
	// Minimum time the process must execute
	// before taking the action
	MinProcessExecutionTime *string `pulumi:"minProcessExecutionTime"`
}

// Actions which to take by the auto-heal module when a rule is triggered.
type AutoHealActionsResponseOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutput() AutoHealActionsResponseOutput {
	return o
}

func (o AutoHealActionsResponseOutput) ToAutoHealActionsResponseOutputWithContext(ctx context.Context) AutoHealActionsResponseOutput {
	return o
}

// Predefined action to be taken.
func (o AutoHealActionsResponseOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponseOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *AutoHealCustomActionResponse { return v.CustomAction }).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponseOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealActionsResponse) *string { return v.MinProcessExecutionTime }).(pulumi.StringPtrOutput)
}

type AutoHealActionsResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealActionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealActionsResponse)(nil)).Elem()
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutput() AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) ToAutoHealActionsResponsePtrOutputWithContext(ctx context.Context) AutoHealActionsResponsePtrOutput {
	return o
}

func (o AutoHealActionsResponsePtrOutput) Elem() AutoHealActionsResponseOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) AutoHealActionsResponse {
		if v != nil {
			return *v
		}
		var ret AutoHealActionsResponse
		return ret
	}).(AutoHealActionsResponseOutput)
}

// Predefined action to be taken.
func (o AutoHealActionsResponsePtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// Custom action to be taken.
func (o AutoHealActionsResponsePtrOutput) CustomAction() AutoHealCustomActionResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *AutoHealCustomActionResponse {
		if v == nil {
			return nil
		}
		return v.CustomAction
	}).(AutoHealCustomActionResponsePtrOutput)
}

// Minimum time the process must execute
// before taking the action
func (o AutoHealActionsResponsePtrOutput) MinProcessExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealActionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProcessExecutionTime
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomAction struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// AutoHealCustomActionInput is an input type that accepts AutoHealCustomActionArgs and AutoHealCustomActionOutput values.
// You can construct a concrete instance of `AutoHealCustomActionInput` via:
//
//	AutoHealCustomActionArgs{...}
type AutoHealCustomActionInput interface {
	pulumi.Input

	ToAutoHealCustomActionOutput() AutoHealCustomActionOutput
	ToAutoHealCustomActionOutputWithContext(context.Context) AutoHealCustomActionOutput
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionArgs struct {
	// Executable to be run.
	Exe pulumi.StringPtrInput `pulumi:"exe"`
	// Parameters for the executable.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (AutoHealCustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return i.ToAutoHealCustomActionOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput)
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i AutoHealCustomActionArgs) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionOutput).ToAutoHealCustomActionPtrOutputWithContext(ctx)
}

// AutoHealCustomActionPtrInput is an input type that accepts AutoHealCustomActionArgs, AutoHealCustomActionPtr and AutoHealCustomActionPtrOutput values.
// You can construct a concrete instance of `AutoHealCustomActionPtrInput` via:
//
//	        AutoHealCustomActionArgs{...}
//
//	or:
//
//	        nil
type AutoHealCustomActionPtrInput interface {
	pulumi.Input

	ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput
	ToAutoHealCustomActionPtrOutputWithContext(context.Context) AutoHealCustomActionPtrOutput
}

type autoHealCustomActionPtrType AutoHealCustomActionArgs

func AutoHealCustomActionPtr(v *AutoHealCustomActionArgs) AutoHealCustomActionPtrInput {
	return (*autoHealCustomActionPtrType)(v)
}

func (*autoHealCustomActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return i.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (i *autoHealCustomActionPtrType) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealCustomActionPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutput() AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionOutputWithContext(ctx context.Context) AutoHealCustomActionOutput {
	return o
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o.ToAutoHealCustomActionPtrOutputWithContext(context.Background())
}

func (o AutoHealCustomActionOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoHealCustomAction) *AutoHealCustomAction {
		return &v
	}).(AutoHealCustomActionPtrOutput)
}

// Executable to be run.
func (o AutoHealCustomActionOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomAction) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionPtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomAction)(nil)).Elem()
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutput() AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) ToAutoHealCustomActionPtrOutputWithContext(ctx context.Context) AutoHealCustomActionPtrOutput {
	return o
}

func (o AutoHealCustomActionPtrOutput) Elem() AutoHealCustomActionOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) AutoHealCustomAction {
		if v != nil {
			return *v
		}
		var ret AutoHealCustomAction
		return ret
	}).(AutoHealCustomActionOutput)
}

// Executable to be run.
func (o AutoHealCustomActionPtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionPtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomAction) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponse struct {
	// Executable to be run.
	Exe *string `pulumi:"exe"`
	// Parameters for the executable.
	Parameters *string `pulumi:"parameters"`
}

// Custom action to be executed
// when an auto heal rule is triggered.
type AutoHealCustomActionResponseOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutput() AutoHealCustomActionResponseOutput {
	return o
}

func (o AutoHealCustomActionResponseOutput) ToAutoHealCustomActionResponseOutputWithContext(ctx context.Context) AutoHealCustomActionResponseOutput {
	return o
}

// Executable to be run.
func (o AutoHealCustomActionResponseOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Exe }).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponseOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoHealCustomActionResponse) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type AutoHealCustomActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealCustomActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealCustomActionResponse)(nil)).Elem()
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutput() AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) ToAutoHealCustomActionResponsePtrOutputWithContext(ctx context.Context) AutoHealCustomActionResponsePtrOutput {
	return o
}

func (o AutoHealCustomActionResponsePtrOutput) Elem() AutoHealCustomActionResponseOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) AutoHealCustomActionResponse {
		if v != nil {
			return *v
		}
		var ret AutoHealCustomActionResponse
		return ret
	}).(AutoHealCustomActionResponseOutput)
}

// Executable to be run.
func (o AutoHealCustomActionResponsePtrOutput) Exe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Exe
	}).(pulumi.StringPtrOutput)
}

// Parameters for the executable.
func (o AutoHealCustomActionResponsePtrOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoHealCustomActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRules struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActions `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggers `pulumi:"triggers"`
}

// AutoHealRulesInput is an input type that accepts AutoHealRulesArgs and AutoHealRulesOutput values.
// You can construct a concrete instance of `AutoHealRulesInput` via:
//
//	AutoHealRulesArgs{...}
type AutoHealRulesInput interface {
	pulumi.Input

	ToAutoHealRulesOutput() AutoHealRulesOutput
	ToAutoHealRulesOutputWithContext(context.Context) AutoHealRulesOutput
}

// Rules that can be defined for auto-heal.
type AutoHealRulesArgs struct {
	// Actions to be executed when a rule is triggered.
	Actions AutoHealActionsPtrInput `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers AutoHealTriggersPtrInput `pulumi:"triggers"`
}

func (AutoHealRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return i.ToAutoHealRulesOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput)
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i AutoHealRulesArgs) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesOutput).ToAutoHealRulesPtrOutputWithContext(ctx)
}

// AutoHealRulesPtrInput is an input type that accepts AutoHealRulesArgs, AutoHealRulesPtr and AutoHealRulesPtrOutput values.
// You can construct a concrete instance of `AutoHealRulesPtrInput` via:
//
//	        AutoHealRulesArgs{...}
//
//	or:
//
//	        nil
type AutoHealRulesPtrInput interface {
	pulumi.Input

	ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput
	ToAutoHealRulesPtrOutputWithContext(context.Context) AutoHealRulesPtrOutput
}

type autoHealRulesPtrType AutoHealRulesArgs

func AutoHealRulesPtr(v *AutoHealRulesArgs) AutoHealRulesPtrInput {
	return (*autoHealRulesPtrType)(v)
}

func (*autoHealRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return i.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (i *autoHealRulesPtrType) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealRulesPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesOutput struct{ *pulumi.OutputState }

func (AutoHealRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutput() AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesOutputWithContext(ctx context.Context) AutoHealRulesOutput {
	return o
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o.ToAutoHealRulesPtrOutputWithContext(context.Background())
}

func (o AutoHealRulesOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoHealRules) *AutoHealRules {
		return &v
	}).(AutoHealRulesPtrOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealActions { return v.Actions }).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v AutoHealRules) *AutoHealTriggers { return v.Triggers }).(AutoHealTriggersPtrOutput)
}

type AutoHealRulesPtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRules)(nil)).Elem()
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutput() AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) ToAutoHealRulesPtrOutputWithContext(ctx context.Context) AutoHealRulesPtrOutput {
	return o
}

func (o AutoHealRulesPtrOutput) Elem() AutoHealRulesOutput {
	return o.ApplyT(func(v *AutoHealRules) AutoHealRules {
		if v != nil {
			return *v
		}
		var ret AutoHealRules
		return ret
	}).(AutoHealRulesOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesPtrOutput) Actions() AutoHealActionsPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealActions {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsPtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesPtrOutput) Triggers() AutoHealTriggersPtrOutput {
	return o.ApplyT(func(v *AutoHealRules) *AutoHealTriggers {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersPtrOutput)
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponse struct {
	// Actions to be executed when a rule is triggered.
	Actions *AutoHealActionsResponse `pulumi:"actions"`
	// Conditions that describe when to execute the auto-heal actions.
	Triggers *AutoHealTriggersResponse `pulumi:"triggers"`
}

// Rules that can be defined for auto-heal.
type AutoHealRulesResponseOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutput() AutoHealRulesResponseOutput {
	return o
}

func (o AutoHealRulesResponseOutput) ToAutoHealRulesResponseOutputWithContext(ctx context.Context) AutoHealRulesResponseOutput {
	return o
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponseOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealActionsResponse { return v.Actions }).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponseOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v AutoHealRulesResponse) *AutoHealTriggersResponse { return v.Triggers }).(AutoHealTriggersResponsePtrOutput)
}

type AutoHealRulesResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealRulesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealRulesResponse)(nil)).Elem()
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutput() AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) ToAutoHealRulesResponsePtrOutputWithContext(ctx context.Context) AutoHealRulesResponsePtrOutput {
	return o
}

func (o AutoHealRulesResponsePtrOutput) Elem() AutoHealRulesResponseOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) AutoHealRulesResponse {
		if v != nil {
			return *v
		}
		var ret AutoHealRulesResponse
		return ret
	}).(AutoHealRulesResponseOutput)
}

// Actions to be executed when a rule is triggered.
func (o AutoHealRulesResponsePtrOutput) Actions() AutoHealActionsResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealActionsResponse {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(AutoHealActionsResponsePtrOutput)
}

// Conditions that describe when to execute the auto-heal actions.
func (o AutoHealRulesResponsePtrOutput) Triggers() AutoHealTriggersResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealRulesResponse) *AutoHealTriggersResponse {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(AutoHealTriggersResponsePtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggers struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTrigger `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTrigger `pulumi:"slowRequests"`
	// A rule based on multiple Slow Requests Rule with path
	SlowRequestsWithPath []SlowRequestsBasedTrigger `pulumi:"slowRequestsWithPath"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTrigger `pulumi:"statusCodes"`
	// A rule based on status codes ranges.
	StatusCodesRange []StatusCodesRangeBasedTrigger `pulumi:"statusCodesRange"`
}

// AutoHealTriggersInput is an input type that accepts AutoHealTriggersArgs and AutoHealTriggersOutput values.
// You can construct a concrete instance of `AutoHealTriggersInput` via:
//
//	AutoHealTriggersArgs{...}
type AutoHealTriggersInput interface {
	pulumi.Input

	ToAutoHealTriggersOutput() AutoHealTriggersOutput
	ToAutoHealTriggersOutputWithContext(context.Context) AutoHealTriggersOutput
}

// Triggers for auto-heal.
type AutoHealTriggersArgs struct {
	// A rule based on private bytes.
	PrivateBytesInKB pulumi.IntPtrInput `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests RequestsBasedTriggerPtrInput `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests SlowRequestsBasedTriggerPtrInput `pulumi:"slowRequests"`
	// A rule based on multiple Slow Requests Rule with path
	SlowRequestsWithPath SlowRequestsBasedTriggerArrayInput `pulumi:"slowRequestsWithPath"`
	// A rule based on status codes.
	StatusCodes StatusCodesBasedTriggerArrayInput `pulumi:"statusCodes"`
	// A rule based on status codes ranges.
	StatusCodesRange StatusCodesRangeBasedTriggerArrayInput `pulumi:"statusCodesRange"`
}

func (AutoHealTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return i.ToAutoHealTriggersOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput)
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i AutoHealTriggersArgs) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersOutput).ToAutoHealTriggersPtrOutputWithContext(ctx)
}

// AutoHealTriggersPtrInput is an input type that accepts AutoHealTriggersArgs, AutoHealTriggersPtr and AutoHealTriggersPtrOutput values.
// You can construct a concrete instance of `AutoHealTriggersPtrInput` via:
//
//	        AutoHealTriggersArgs{...}
//
//	or:
//
//	        nil
type AutoHealTriggersPtrInput interface {
	pulumi.Input

	ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput
	ToAutoHealTriggersPtrOutputWithContext(context.Context) AutoHealTriggersPtrOutput
}

type autoHealTriggersPtrType AutoHealTriggersArgs

func AutoHealTriggersPtr(v *AutoHealTriggersArgs) AutoHealTriggersPtrInput {
	return (*autoHealTriggersPtrType)(v)
}

func (*autoHealTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return i.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (i *autoHealTriggersPtrType) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoHealTriggersPtrOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutput() AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersOutputWithContext(ctx context.Context) AutoHealTriggersOutput {
	return o
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o.ToAutoHealTriggersPtrOutputWithContext(context.Background())
}

func (o AutoHealTriggersOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoHealTriggers) *AutoHealTriggers {
		return &v
	}).(AutoHealTriggersPtrOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *RequestsBasedTrigger { return v.Requests }).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v AutoHealTriggers) *SlowRequestsBasedTrigger { return v.SlowRequests }).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on multiple Slow Requests Rule with path
func (o AutoHealTriggersOutput) SlowRequestsWithPath() SlowRequestsBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []SlowRequestsBasedTrigger { return v.SlowRequestsWithPath }).(SlowRequestsBasedTriggerArrayOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesBasedTrigger { return v.StatusCodes }).(StatusCodesBasedTriggerArrayOutput)
}

// A rule based on status codes ranges.
func (o AutoHealTriggersOutput) StatusCodesRange() StatusCodesRangeBasedTriggerArrayOutput {
	return o.ApplyT(func(v AutoHealTriggers) []StatusCodesRangeBasedTrigger { return v.StatusCodesRange }).(StatusCodesRangeBasedTriggerArrayOutput)
}

type AutoHealTriggersPtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggers)(nil)).Elem()
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutput() AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) ToAutoHealTriggersPtrOutputWithContext(ctx context.Context) AutoHealTriggersPtrOutput {
	return o
}

func (o AutoHealTriggersPtrOutput) Elem() AutoHealTriggersOutput {
	return o.ApplyT(func(v *AutoHealTriggers) AutoHealTriggers {
		if v != nil {
			return *v
		}
		var ret AutoHealTriggers
		return ret
	}).(AutoHealTriggersOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersPtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersPtrOutput) Requests() RequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *RequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerPtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersPtrOutput) SlowRequests() SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggers) *SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// A rule based on multiple Slow Requests Rule with path
func (o AutoHealTriggersPtrOutput) SlowRequestsWithPath() SlowRequestsBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []SlowRequestsBasedTrigger {
		if v == nil {
			return nil
		}
		return v.SlowRequestsWithPath
	}).(SlowRequestsBasedTriggerArrayOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersPtrOutput) StatusCodes() StatusCodesBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerArrayOutput)
}

// A rule based on status codes ranges.
func (o AutoHealTriggersPtrOutput) StatusCodesRange() StatusCodesRangeBasedTriggerArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggers) []StatusCodesRangeBasedTrigger {
		if v == nil {
			return nil
		}
		return v.StatusCodesRange
	}).(StatusCodesRangeBasedTriggerArrayOutput)
}

// Triggers for auto-heal.
type AutoHealTriggersResponse struct {
	// A rule based on private bytes.
	PrivateBytesInKB *int `pulumi:"privateBytesInKB"`
	// A rule based on total requests.
	Requests *RequestsBasedTriggerResponse `pulumi:"requests"`
	// A rule based on request execution time.
	SlowRequests *SlowRequestsBasedTriggerResponse `pulumi:"slowRequests"`
	// A rule based on multiple Slow Requests Rule with path
	SlowRequestsWithPath []SlowRequestsBasedTriggerResponse `pulumi:"slowRequestsWithPath"`
	// A rule based on status codes.
	StatusCodes []StatusCodesBasedTriggerResponse `pulumi:"statusCodes"`
	// A rule based on status codes ranges.
	StatusCodesRange []StatusCodesRangeBasedTriggerResponse `pulumi:"statusCodesRange"`
}

// Triggers for auto-heal.
type AutoHealTriggersResponseOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutput() AutoHealTriggersResponseOutput {
	return o
}

func (o AutoHealTriggersResponseOutput) ToAutoHealTriggersResponseOutputWithContext(ctx context.Context) AutoHealTriggersResponseOutput {
	return o
}

// A rule based on private bytes.
func (o AutoHealTriggersResponseOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *int { return v.PrivateBytesInKB }).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponseOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *RequestsBasedTriggerResponse { return v.Requests }).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponseOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse { return v.SlowRequests }).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on multiple Slow Requests Rule with path
func (o AutoHealTriggersResponseOutput) SlowRequestsWithPath() SlowRequestsBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []SlowRequestsBasedTriggerResponse { return v.SlowRequestsWithPath }).(SlowRequestsBasedTriggerResponseArrayOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponseOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse { return v.StatusCodes }).(StatusCodesBasedTriggerResponseArrayOutput)
}

// A rule based on status codes ranges.
func (o AutoHealTriggersResponseOutput) StatusCodesRange() StatusCodesRangeBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v AutoHealTriggersResponse) []StatusCodesRangeBasedTriggerResponse { return v.StatusCodesRange }).(StatusCodesRangeBasedTriggerResponseArrayOutput)
}

type AutoHealTriggersResponsePtrOutput struct{ *pulumi.OutputState }

func (AutoHealTriggersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoHealTriggersResponse)(nil)).Elem()
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutput() AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) ToAutoHealTriggersResponsePtrOutputWithContext(ctx context.Context) AutoHealTriggersResponsePtrOutput {
	return o
}

func (o AutoHealTriggersResponsePtrOutput) Elem() AutoHealTriggersResponseOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) AutoHealTriggersResponse {
		if v != nil {
			return *v
		}
		var ret AutoHealTriggersResponse
		return ret
	}).(AutoHealTriggersResponseOutput)
}

// A rule based on private bytes.
func (o AutoHealTriggersResponsePtrOutput) PrivateBytesInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrivateBytesInKB
	}).(pulumi.IntPtrOutput)
}

// A rule based on total requests.
func (o AutoHealTriggersResponsePtrOutput) Requests() RequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *RequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(RequestsBasedTriggerResponsePtrOutput)
}

// A rule based on request execution time.
func (o AutoHealTriggersResponsePtrOutput) SlowRequests() SlowRequestsBasedTriggerResponsePtrOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) *SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequests
	}).(SlowRequestsBasedTriggerResponsePtrOutput)
}

// A rule based on multiple Slow Requests Rule with path
func (o AutoHealTriggersResponsePtrOutput) SlowRequestsWithPath() SlowRequestsBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []SlowRequestsBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.SlowRequestsWithPath
	}).(SlowRequestsBasedTriggerResponseArrayOutput)
}

// A rule based on status codes.
func (o AutoHealTriggersResponsePtrOutput) StatusCodes() StatusCodesBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(StatusCodesBasedTriggerResponseArrayOutput)
}

// A rule based on status codes ranges.
func (o AutoHealTriggersResponsePtrOutput) StatusCodesRange() StatusCodesRangeBasedTriggerResponseArrayOutput {
	return o.ApplyT(func(v *AutoHealTriggersResponse) []StatusCodesRangeBasedTriggerResponse {
		if v == nil {
			return nil
		}
		return v.StatusCodesRange
	}).(StatusCodesRangeBasedTriggerResponseArrayOutput)
}

// The configuration settings of the Azure Active directory provider.
type AzureActiveDirectory struct {
	// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
	// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
	// read or write to this property.
	IsAutoProvisioned *bool `pulumi:"isAutoProvisioned"`
	// The configuration settings of the Azure Active Directory login flow.
	Login *AzureActiveDirectoryLogin `pulumi:"login"`
	// The configuration settings of the Azure Active Directory app registration.
	Registration *AzureActiveDirectoryRegistration `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AzureActiveDirectoryValidation `pulumi:"validation"`
}

// AzureActiveDirectoryInput is an input type that accepts AzureActiveDirectoryArgs and AzureActiveDirectoryOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryInput` via:
//
//	AzureActiveDirectoryArgs{...}
type AzureActiveDirectoryInput interface {
	pulumi.Input

	ToAzureActiveDirectoryOutput() AzureActiveDirectoryOutput
	ToAzureActiveDirectoryOutputWithContext(context.Context) AzureActiveDirectoryOutput
}

// The configuration settings of the Azure Active directory provider.
type AzureActiveDirectoryArgs struct {
	// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
	// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
	// read or write to this property.
	IsAutoProvisioned pulumi.BoolPtrInput `pulumi:"isAutoProvisioned"`
	// The configuration settings of the Azure Active Directory login flow.
	Login AzureActiveDirectoryLoginPtrInput `pulumi:"login"`
	// The configuration settings of the Azure Active Directory app registration.
	Registration AzureActiveDirectoryRegistrationPtrInput `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation AzureActiveDirectoryValidationPtrInput `pulumi:"validation"`
}

func (AzureActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectory)(nil)).Elem()
}

func (i AzureActiveDirectoryArgs) ToAzureActiveDirectoryOutput() AzureActiveDirectoryOutput {
	return i.ToAzureActiveDirectoryOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryArgs) ToAzureActiveDirectoryOutputWithContext(ctx context.Context) AzureActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryOutput)
}

func (i AzureActiveDirectoryArgs) ToAzureActiveDirectoryPtrOutput() AzureActiveDirectoryPtrOutput {
	return i.ToAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryArgs) ToAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryOutput).ToAzureActiveDirectoryPtrOutputWithContext(ctx)
}

// AzureActiveDirectoryPtrInput is an input type that accepts AzureActiveDirectoryArgs, AzureActiveDirectoryPtr and AzureActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryPtrInput` via:
//
//	        AzureActiveDirectoryArgs{...}
//
//	or:
//
//	        nil
type AzureActiveDirectoryPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryPtrOutput() AzureActiveDirectoryPtrOutput
	ToAzureActiveDirectoryPtrOutputWithContext(context.Context) AzureActiveDirectoryPtrOutput
}

type azureActiveDirectoryPtrType AzureActiveDirectoryArgs

func AzureActiveDirectoryPtr(v *AzureActiveDirectoryArgs) AzureActiveDirectoryPtrInput {
	return (*azureActiveDirectoryPtrType)(v)
}

func (*azureActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectory)(nil)).Elem()
}

func (i *azureActiveDirectoryPtrType) ToAzureActiveDirectoryPtrOutput() AzureActiveDirectoryPtrOutput {
	return i.ToAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryPtrType) ToAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryPtrOutput)
}

// The configuration settings of the Azure Active directory provider.
type AzureActiveDirectoryOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectory)(nil)).Elem()
}

func (o AzureActiveDirectoryOutput) ToAzureActiveDirectoryOutput() AzureActiveDirectoryOutput {
	return o
}

func (o AzureActiveDirectoryOutput) ToAzureActiveDirectoryOutputWithContext(ctx context.Context) AzureActiveDirectoryOutput {
	return o
}

func (o AzureActiveDirectoryOutput) ToAzureActiveDirectoryPtrOutput() AzureActiveDirectoryPtrOutput {
	return o.ToAzureActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryOutput) ToAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectory) *AzureActiveDirectory {
		return &v
	}).(AzureActiveDirectoryPtrOutput)
}

// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureActiveDirectoryOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectory) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
// read or write to this property.
func (o AzureActiveDirectoryOutput) IsAutoProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectory) *bool { return v.IsAutoProvisioned }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
func (o AzureActiveDirectoryOutput) Login() AzureActiveDirectoryLoginPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectory) *AzureActiveDirectoryLogin { return v.Login }).(AzureActiveDirectoryLoginPtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
func (o AzureActiveDirectoryOutput) Registration() AzureActiveDirectoryRegistrationPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectory) *AzureActiveDirectoryRegistration { return v.Registration }).(AzureActiveDirectoryRegistrationPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o AzureActiveDirectoryOutput) Validation() AzureActiveDirectoryValidationPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectory) *AzureActiveDirectoryValidation { return v.Validation }).(AzureActiveDirectoryValidationPtrOutput)
}

type AzureActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectory)(nil)).Elem()
}

func (o AzureActiveDirectoryPtrOutput) ToAzureActiveDirectoryPtrOutput() AzureActiveDirectoryPtrOutput {
	return o
}

func (o AzureActiveDirectoryPtrOutput) ToAzureActiveDirectoryPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryPtrOutput {
	return o
}

func (o AzureActiveDirectoryPtrOutput) Elem() AzureActiveDirectoryOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) AzureActiveDirectory {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectory
		return ret
	}).(AzureActiveDirectoryOutput)
}

// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureActiveDirectoryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
// read or write to this property.
func (o AzureActiveDirectoryPtrOutput) IsAutoProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoProvisioned
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
func (o AzureActiveDirectoryPtrOutput) Login() AzureActiveDirectoryLoginPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) *AzureActiveDirectoryLogin {
		if v == nil {
			return nil
		}
		return v.Login
	}).(AzureActiveDirectoryLoginPtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
func (o AzureActiveDirectoryPtrOutput) Registration() AzureActiveDirectoryRegistrationPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) *AzureActiveDirectoryRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AzureActiveDirectoryRegistrationPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o AzureActiveDirectoryPtrOutput) Validation() AzureActiveDirectoryValidationPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectory) *AzureActiveDirectoryValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AzureActiveDirectoryValidationPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLogin struct {
	// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
	DisableWWWAuthenticate *bool `pulumi:"disableWWWAuthenticate"`
	// Login parameters to send to the OpenID Connect authorization endpoint when
	// a user logs in. Each parameter must be in the form "key=value".
	LoginParameters []string `pulumi:"loginParameters"`
}

// AzureActiveDirectoryLoginInput is an input type that accepts AzureActiveDirectoryLoginArgs and AzureActiveDirectoryLoginOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryLoginInput` via:
//
//	AzureActiveDirectoryLoginArgs{...}
type AzureActiveDirectoryLoginInput interface {
	pulumi.Input

	ToAzureActiveDirectoryLoginOutput() AzureActiveDirectoryLoginOutput
	ToAzureActiveDirectoryLoginOutputWithContext(context.Context) AzureActiveDirectoryLoginOutput
}

// The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLoginArgs struct {
	// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
	DisableWWWAuthenticate pulumi.BoolPtrInput `pulumi:"disableWWWAuthenticate"`
	// Login parameters to send to the OpenID Connect authorization endpoint when
	// a user logs in. Each parameter must be in the form "key=value".
	LoginParameters pulumi.StringArrayInput `pulumi:"loginParameters"`
}

func (AzureActiveDirectoryLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryLogin)(nil)).Elem()
}

func (i AzureActiveDirectoryLoginArgs) ToAzureActiveDirectoryLoginOutput() AzureActiveDirectoryLoginOutput {
	return i.ToAzureActiveDirectoryLoginOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryLoginArgs) ToAzureActiveDirectoryLoginOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryLoginOutput)
}

func (i AzureActiveDirectoryLoginArgs) ToAzureActiveDirectoryLoginPtrOutput() AzureActiveDirectoryLoginPtrOutput {
	return i.ToAzureActiveDirectoryLoginPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryLoginArgs) ToAzureActiveDirectoryLoginPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryLoginOutput).ToAzureActiveDirectoryLoginPtrOutputWithContext(ctx)
}

// AzureActiveDirectoryLoginPtrInput is an input type that accepts AzureActiveDirectoryLoginArgs, AzureActiveDirectoryLoginPtr and AzureActiveDirectoryLoginPtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryLoginPtrInput` via:
//
//	        AzureActiveDirectoryLoginArgs{...}
//
//	or:
//
//	        nil
type AzureActiveDirectoryLoginPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryLoginPtrOutput() AzureActiveDirectoryLoginPtrOutput
	ToAzureActiveDirectoryLoginPtrOutputWithContext(context.Context) AzureActiveDirectoryLoginPtrOutput
}

type azureActiveDirectoryLoginPtrType AzureActiveDirectoryLoginArgs

func AzureActiveDirectoryLoginPtr(v *AzureActiveDirectoryLoginArgs) AzureActiveDirectoryLoginPtrInput {
	return (*azureActiveDirectoryLoginPtrType)(v)
}

func (*azureActiveDirectoryLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryLogin)(nil)).Elem()
}

func (i *azureActiveDirectoryLoginPtrType) ToAzureActiveDirectoryLoginPtrOutput() AzureActiveDirectoryLoginPtrOutput {
	return i.ToAzureActiveDirectoryLoginPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryLoginPtrType) ToAzureActiveDirectoryLoginPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryLoginPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLoginOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryLogin)(nil)).Elem()
}

func (o AzureActiveDirectoryLoginOutput) ToAzureActiveDirectoryLoginOutput() AzureActiveDirectoryLoginOutput {
	return o
}

func (o AzureActiveDirectoryLoginOutput) ToAzureActiveDirectoryLoginOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginOutput {
	return o
}

func (o AzureActiveDirectoryLoginOutput) ToAzureActiveDirectoryLoginPtrOutput() AzureActiveDirectoryLoginPtrOutput {
	return o.ToAzureActiveDirectoryLoginPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryLoginOutput) ToAzureActiveDirectoryLoginPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectoryLogin) *AzureActiveDirectoryLogin {
		return &v
	}).(AzureActiveDirectoryLoginPtrOutput)
}

// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
func (o AzureActiveDirectoryLoginOutput) DisableWWWAuthenticate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryLogin) *bool { return v.DisableWWWAuthenticate }).(pulumi.BoolPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when
// a user logs in. Each parameter must be in the form "key=value".
func (o AzureActiveDirectoryLoginOutput) LoginParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureActiveDirectoryLogin) []string { return v.LoginParameters }).(pulumi.StringArrayOutput)
}

type AzureActiveDirectoryLoginPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryLogin)(nil)).Elem()
}

func (o AzureActiveDirectoryLoginPtrOutput) ToAzureActiveDirectoryLoginPtrOutput() AzureActiveDirectoryLoginPtrOutput {
	return o
}

func (o AzureActiveDirectoryLoginPtrOutput) ToAzureActiveDirectoryLoginPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginPtrOutput {
	return o
}

func (o AzureActiveDirectoryLoginPtrOutput) Elem() AzureActiveDirectoryLoginOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLogin) AzureActiveDirectoryLogin {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryLogin
		return ret
	}).(AzureActiveDirectoryLoginOutput)
}

// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
func (o AzureActiveDirectoryLoginPtrOutput) DisableWWWAuthenticate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLogin) *bool {
		if v == nil {
			return nil
		}
		return v.DisableWWWAuthenticate
	}).(pulumi.BoolPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when
// a user logs in. Each parameter must be in the form "key=value".
func (o AzureActiveDirectoryLoginPtrOutput) LoginParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLogin) []string {
		if v == nil {
			return nil
		}
		return v.LoginParameters
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLoginResponse struct {
	// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
	DisableWWWAuthenticate *bool `pulumi:"disableWWWAuthenticate"`
	// Login parameters to send to the OpenID Connect authorization endpoint when
	// a user logs in. Each parameter must be in the form "key=value".
	LoginParameters []string `pulumi:"loginParameters"`
}

// The configuration settings of the Azure Active Directory login flow.
type AzureActiveDirectoryLoginResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryLoginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryLoginResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryLoginResponseOutput) ToAzureActiveDirectoryLoginResponseOutput() AzureActiveDirectoryLoginResponseOutput {
	return o
}

func (o AzureActiveDirectoryLoginResponseOutput) ToAzureActiveDirectoryLoginResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginResponseOutput {
	return o
}

// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
func (o AzureActiveDirectoryLoginResponseOutput) DisableWWWAuthenticate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryLoginResponse) *bool { return v.DisableWWWAuthenticate }).(pulumi.BoolPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when
// a user logs in. Each parameter must be in the form "key=value".
func (o AzureActiveDirectoryLoginResponseOutput) LoginParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureActiveDirectoryLoginResponse) []string { return v.LoginParameters }).(pulumi.StringArrayOutput)
}

type AzureActiveDirectoryLoginResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryLoginResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryLoginResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryLoginResponsePtrOutput) ToAzureActiveDirectoryLoginResponsePtrOutput() AzureActiveDirectoryLoginResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryLoginResponsePtrOutput) ToAzureActiveDirectoryLoginResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryLoginResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryLoginResponsePtrOutput) Elem() AzureActiveDirectoryLoginResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLoginResponse) AzureActiveDirectoryLoginResponse {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryLoginResponse
		return ret
	}).(AzureActiveDirectoryLoginResponseOutput)
}

// <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
func (o AzureActiveDirectoryLoginResponsePtrOutput) DisableWWWAuthenticate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLoginResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableWWWAuthenticate
	}).(pulumi.BoolPtrOutput)
}

// Login parameters to send to the OpenID Connect authorization endpoint when
// a user logs in. Each parameter must be in the form "key=value".
func (o AzureActiveDirectoryLoginResponsePtrOutput) LoginParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryLoginResponse) []string {
		if v == nil {
			return nil
		}
		return v.LoginParameters
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistration struct {
	// The Client ID of this relying party application, known as the client_id.
	// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	// other 3rd party OpenID Connect providers.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId *string `pulumi:"clientId"`
	// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateIssuer *string `pulumi:"clientSecretCertificateIssuer"`
	// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateSubjectAlternativeName *string `pulumi:"clientSecretCertificateSubjectAlternativeName"`
	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint *string `pulumi:"clientSecretCertificateThumbprint"`
	// The app setting name that contains the client secret of the relying party application.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
	// This URI is a case-sensitive identifier for the token issuer.
	// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	OpenIdIssuer *string `pulumi:"openIdIssuer"`
}

// AzureActiveDirectoryRegistrationInput is an input type that accepts AzureActiveDirectoryRegistrationArgs and AzureActiveDirectoryRegistrationOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryRegistrationInput` via:
//
//	AzureActiveDirectoryRegistrationArgs{...}
type AzureActiveDirectoryRegistrationInput interface {
	pulumi.Input

	ToAzureActiveDirectoryRegistrationOutput() AzureActiveDirectoryRegistrationOutput
	ToAzureActiveDirectoryRegistrationOutputWithContext(context.Context) AzureActiveDirectoryRegistrationOutput
}

// The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistrationArgs struct {
	// The Client ID of this relying party application, known as the client_id.
	// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	// other 3rd party OpenID Connect providers.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateIssuer pulumi.StringPtrInput `pulumi:"clientSecretCertificateIssuer"`
	// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateSubjectAlternativeName pulumi.StringPtrInput `pulumi:"clientSecretCertificateSubjectAlternativeName"`
	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint pulumi.StringPtrInput `pulumi:"clientSecretCertificateThumbprint"`
	// The app setting name that contains the client secret of the relying party application.
	ClientSecretSettingName pulumi.StringPtrInput `pulumi:"clientSecretSettingName"`
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
	// This URI is a case-sensitive identifier for the token issuer.
	// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	OpenIdIssuer pulumi.StringPtrInput `pulumi:"openIdIssuer"`
}

func (AzureActiveDirectoryRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryRegistration)(nil)).Elem()
}

func (i AzureActiveDirectoryRegistrationArgs) ToAzureActiveDirectoryRegistrationOutput() AzureActiveDirectoryRegistrationOutput {
	return i.ToAzureActiveDirectoryRegistrationOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryRegistrationArgs) ToAzureActiveDirectoryRegistrationOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryRegistrationOutput)
}

func (i AzureActiveDirectoryRegistrationArgs) ToAzureActiveDirectoryRegistrationPtrOutput() AzureActiveDirectoryRegistrationPtrOutput {
	return i.ToAzureActiveDirectoryRegistrationPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryRegistrationArgs) ToAzureActiveDirectoryRegistrationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryRegistrationOutput).ToAzureActiveDirectoryRegistrationPtrOutputWithContext(ctx)
}

// AzureActiveDirectoryRegistrationPtrInput is an input type that accepts AzureActiveDirectoryRegistrationArgs, AzureActiveDirectoryRegistrationPtr and AzureActiveDirectoryRegistrationPtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryRegistrationPtrInput` via:
//
//	        AzureActiveDirectoryRegistrationArgs{...}
//
//	or:
//
//	        nil
type AzureActiveDirectoryRegistrationPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryRegistrationPtrOutput() AzureActiveDirectoryRegistrationPtrOutput
	ToAzureActiveDirectoryRegistrationPtrOutputWithContext(context.Context) AzureActiveDirectoryRegistrationPtrOutput
}

type azureActiveDirectoryRegistrationPtrType AzureActiveDirectoryRegistrationArgs

func AzureActiveDirectoryRegistrationPtr(v *AzureActiveDirectoryRegistrationArgs) AzureActiveDirectoryRegistrationPtrInput {
	return (*azureActiveDirectoryRegistrationPtrType)(v)
}

func (*azureActiveDirectoryRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryRegistration)(nil)).Elem()
}

func (i *azureActiveDirectoryRegistrationPtrType) ToAzureActiveDirectoryRegistrationPtrOutput() AzureActiveDirectoryRegistrationPtrOutput {
	return i.ToAzureActiveDirectoryRegistrationPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryRegistrationPtrType) ToAzureActiveDirectoryRegistrationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryRegistrationPtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistrationOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryRegistration)(nil)).Elem()
}

func (o AzureActiveDirectoryRegistrationOutput) ToAzureActiveDirectoryRegistrationOutput() AzureActiveDirectoryRegistrationOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationOutput) ToAzureActiveDirectoryRegistrationOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationOutput) ToAzureActiveDirectoryRegistrationPtrOutput() AzureActiveDirectoryRegistrationPtrOutput {
	return o.ToAzureActiveDirectoryRegistrationPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryRegistrationOutput) ToAzureActiveDirectoryRegistrationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectoryRegistration) *AzureActiveDirectoryRegistration {
		return &v
	}).(AzureActiveDirectoryRegistrationPtrOutput)
}

// The Client ID of this relying party application, known as the client_id.
// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
// other 3rd party OpenID Connect providers.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o AzureActiveDirectoryRegistrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationOutput) ClientSecretCertificateIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string { return v.ClientSecretCertificateIssuer }).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationOutput) ClientSecretCertificateSubjectAlternativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string {
		return v.ClientSecretCertificateSubjectAlternativeName
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret. It is also optional.
func (o AzureActiveDirectoryRegistrationOutput) ClientSecretCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string { return v.ClientSecretCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret of the relying party application.
func (o AzureActiveDirectoryRegistrationOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
// This URI is a case-sensitive identifier for the token issuer.
// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
func (o AzureActiveDirectoryRegistrationOutput) OpenIdIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistration) *string { return v.OpenIdIssuer }).(pulumi.StringPtrOutput)
}

type AzureActiveDirectoryRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryRegistration)(nil)).Elem()
}

func (o AzureActiveDirectoryRegistrationPtrOutput) ToAzureActiveDirectoryRegistrationPtrOutput() AzureActiveDirectoryRegistrationPtrOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationPtrOutput) ToAzureActiveDirectoryRegistrationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationPtrOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationPtrOutput) Elem() AzureActiveDirectoryRegistrationOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) AzureActiveDirectoryRegistration {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryRegistration
		return ret
	}).(AzureActiveDirectoryRegistrationOutput)
}

// The Client ID of this relying party application, known as the client_id.
// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
// other 3rd party OpenID Connect providers.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o AzureActiveDirectoryRegistrationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationPtrOutput) ClientSecretCertificateIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateIssuer
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationPtrOutput) ClientSecretCertificateSubjectAlternativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateSubjectAlternativeName
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret. It is also optional.
func (o AzureActiveDirectoryRegistrationPtrOutput) ClientSecretCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret of the relying party application.
func (o AzureActiveDirectoryRegistrationPtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
// This URI is a case-sensitive identifier for the token issuer.
// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
func (o AzureActiveDirectoryRegistrationPtrOutput) OpenIdIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistration) *string {
		if v == nil {
			return nil
		}
		return v.OpenIdIssuer
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistrationResponse struct {
	// The Client ID of this relying party application, known as the client_id.
	// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
	// other 3rd party OpenID Connect providers.
	// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
	ClientId *string `pulumi:"clientId"`
	// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateIssuer *string `pulumi:"clientSecretCertificateIssuer"`
	// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
	ClientSecretCertificateSubjectAlternativeName *string `pulumi:"clientSecretCertificateSubjectAlternativeName"`
	// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
	// a replacement for the Client Secret. It is also optional.
	ClientSecretCertificateThumbprint *string `pulumi:"clientSecretCertificateThumbprint"`
	// The app setting name that contains the client secret of the relying party application.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
	// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
	// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
	// This URI is a case-sensitive identifier for the token issuer.
	// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
	OpenIdIssuer *string `pulumi:"openIdIssuer"`
}

// The configuration settings of the Azure Active Directory app registration.
type AzureActiveDirectoryRegistrationResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryRegistrationResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryRegistrationResponseOutput) ToAzureActiveDirectoryRegistrationResponseOutput() AzureActiveDirectoryRegistrationResponseOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationResponseOutput) ToAzureActiveDirectoryRegistrationResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationResponseOutput {
	return o
}

// The Client ID of this relying party application, known as the client_id.
// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
// other 3rd party OpenID Connect providers.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o AzureActiveDirectoryRegistrationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationResponseOutput) ClientSecretCertificateIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string { return v.ClientSecretCertificateIssuer }).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationResponseOutput) ClientSecretCertificateSubjectAlternativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string {
		return v.ClientSecretCertificateSubjectAlternativeName
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret. It is also optional.
func (o AzureActiveDirectoryRegistrationResponseOutput) ClientSecretCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string { return v.ClientSecretCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret of the relying party application.
func (o AzureActiveDirectoryRegistrationResponseOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
// This URI is a case-sensitive identifier for the token issuer.
// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
func (o AzureActiveDirectoryRegistrationResponseOutput) OpenIdIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryRegistrationResponse) *string { return v.OpenIdIssuer }).(pulumi.StringPtrOutput)
}

type AzureActiveDirectoryRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryRegistrationResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ToAzureActiveDirectoryRegistrationResponsePtrOutput() AzureActiveDirectoryRegistrationResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ToAzureActiveDirectoryRegistrationResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryRegistrationResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryRegistrationResponsePtrOutput) Elem() AzureActiveDirectoryRegistrationResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) AzureActiveDirectoryRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryRegistrationResponse
		return ret
	}).(AzureActiveDirectoryRegistrationResponseOutput)
}

// The Client ID of this relying party application, known as the client_id.
// This setting is required for enabling OpenID Connection authentication with Azure Active Directory or
// other 3rd party OpenID Connect providers.
// More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ClientSecretCertificateIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateIssuer
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret Certificate Thumbprint. It is also optional.
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ClientSecretCertificateSubjectAlternativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateSubjectAlternativeName
	}).(pulumi.StringPtrOutput)
}

// An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
// a replacement for the Client Secret. It is also optional.
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ClientSecretCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret of the relying party application.
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
// When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
// This URI is a case-sensitive identifier for the token issuer.
// More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
func (o AzureActiveDirectoryRegistrationResponsePtrOutput) OpenIdIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.OpenIdIssuer
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Azure Active directory provider.
type AzureActiveDirectoryResponse struct {
	// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
	// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
	// read or write to this property.
	IsAutoProvisioned *bool `pulumi:"isAutoProvisioned"`
	// The configuration settings of the Azure Active Directory login flow.
	Login *AzureActiveDirectoryLoginResponse `pulumi:"login"`
	// The configuration settings of the Azure Active Directory app registration.
	Registration *AzureActiveDirectoryRegistrationResponse `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AzureActiveDirectoryValidationResponse `pulumi:"validation"`
}

// The configuration settings of the Azure Active directory provider.
type AzureActiveDirectoryResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryResponseOutput) ToAzureActiveDirectoryResponseOutput() AzureActiveDirectoryResponseOutput {
	return o
}

func (o AzureActiveDirectoryResponseOutput) ToAzureActiveDirectoryResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryResponseOutput {
	return o
}

// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureActiveDirectoryResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
// read or write to this property.
func (o AzureActiveDirectoryResponseOutput) IsAutoProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryResponse) *bool { return v.IsAutoProvisioned }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
func (o AzureActiveDirectoryResponseOutput) Login() AzureActiveDirectoryLoginResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryResponse) *AzureActiveDirectoryLoginResponse { return v.Login }).(AzureActiveDirectoryLoginResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
func (o AzureActiveDirectoryResponseOutput) Registration() AzureActiveDirectoryRegistrationResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryResponse) *AzureActiveDirectoryRegistrationResponse { return v.Registration }).(AzureActiveDirectoryRegistrationResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o AzureActiveDirectoryResponseOutput) Validation() AzureActiveDirectoryValidationResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryResponse) *AzureActiveDirectoryValidationResponse { return v.Validation }).(AzureActiveDirectoryValidationResponsePtrOutput)
}

type AzureActiveDirectoryResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryResponsePtrOutput) ToAzureActiveDirectoryResponsePtrOutput() AzureActiveDirectoryResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryResponsePtrOutput) ToAzureActiveDirectoryResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryResponsePtrOutput) Elem() AzureActiveDirectoryResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) AzureActiveDirectoryResponse {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryResponse
		return ret
	}).(AzureActiveDirectoryResponseOutput)
}

// <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureActiveDirectoryResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
// This is an internal flag primarily intended to support the Azure Management Portal. Users should not
// read or write to this property.
func (o AzureActiveDirectoryResponsePtrOutput) IsAutoProvisioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsAutoProvisioned
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Active Directory login flow.
func (o AzureActiveDirectoryResponsePtrOutput) Login() AzureActiveDirectoryLoginResponsePtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) *AzureActiveDirectoryLoginResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(AzureActiveDirectoryLoginResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory app registration.
func (o AzureActiveDirectoryResponsePtrOutput) Registration() AzureActiveDirectoryRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) *AzureActiveDirectoryRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AzureActiveDirectoryRegistrationResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o AzureActiveDirectoryResponsePtrOutput) Validation() AzureActiveDirectoryValidationResponsePtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryResponse) *AzureActiveDirectoryValidationResponse {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AzureActiveDirectoryValidationResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidation struct {
	// The list of audiences that can make successful authentication/authorization requests.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The configuration settings of the checks that should be made while validating the JWT Claims.
	JwtClaimChecks *JwtClaimChecks `pulumi:"jwtClaimChecks"`
}

// AzureActiveDirectoryValidationInput is an input type that accepts AzureActiveDirectoryValidationArgs and AzureActiveDirectoryValidationOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryValidationInput` via:
//
//	AzureActiveDirectoryValidationArgs{...}
type AzureActiveDirectoryValidationInput interface {
	pulumi.Input

	ToAzureActiveDirectoryValidationOutput() AzureActiveDirectoryValidationOutput
	ToAzureActiveDirectoryValidationOutputWithContext(context.Context) AzureActiveDirectoryValidationOutput
}

// The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidationArgs struct {
	// The list of audiences that can make successful authentication/authorization requests.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// The configuration settings of the checks that should be made while validating the JWT Claims.
	JwtClaimChecks JwtClaimChecksPtrInput `pulumi:"jwtClaimChecks"`
}

func (AzureActiveDirectoryValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryValidation)(nil)).Elem()
}

func (i AzureActiveDirectoryValidationArgs) ToAzureActiveDirectoryValidationOutput() AzureActiveDirectoryValidationOutput {
	return i.ToAzureActiveDirectoryValidationOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryValidationArgs) ToAzureActiveDirectoryValidationOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryValidationOutput)
}

func (i AzureActiveDirectoryValidationArgs) ToAzureActiveDirectoryValidationPtrOutput() AzureActiveDirectoryValidationPtrOutput {
	return i.ToAzureActiveDirectoryValidationPtrOutputWithContext(context.Background())
}

func (i AzureActiveDirectoryValidationArgs) ToAzureActiveDirectoryValidationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryValidationOutput).ToAzureActiveDirectoryValidationPtrOutputWithContext(ctx)
}

// AzureActiveDirectoryValidationPtrInput is an input type that accepts AzureActiveDirectoryValidationArgs, AzureActiveDirectoryValidationPtr and AzureActiveDirectoryValidationPtrOutput values.
// You can construct a concrete instance of `AzureActiveDirectoryValidationPtrInput` via:
//
//	        AzureActiveDirectoryValidationArgs{...}
//
//	or:
//
//	        nil
type AzureActiveDirectoryValidationPtrInput interface {
	pulumi.Input

	ToAzureActiveDirectoryValidationPtrOutput() AzureActiveDirectoryValidationPtrOutput
	ToAzureActiveDirectoryValidationPtrOutputWithContext(context.Context) AzureActiveDirectoryValidationPtrOutput
}

type azureActiveDirectoryValidationPtrType AzureActiveDirectoryValidationArgs

func AzureActiveDirectoryValidationPtr(v *AzureActiveDirectoryValidationArgs) AzureActiveDirectoryValidationPtrInput {
	return (*azureActiveDirectoryValidationPtrType)(v)
}

func (*azureActiveDirectoryValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryValidation)(nil)).Elem()
}

func (i *azureActiveDirectoryValidationPtrType) ToAzureActiveDirectoryValidationPtrOutput() AzureActiveDirectoryValidationPtrOutput {
	return i.ToAzureActiveDirectoryValidationPtrOutputWithContext(context.Background())
}

func (i *azureActiveDirectoryValidationPtrType) ToAzureActiveDirectoryValidationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureActiveDirectoryValidationPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidationOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryValidation)(nil)).Elem()
}

func (o AzureActiveDirectoryValidationOutput) ToAzureActiveDirectoryValidationOutput() AzureActiveDirectoryValidationOutput {
	return o
}

func (o AzureActiveDirectoryValidationOutput) ToAzureActiveDirectoryValidationOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationOutput {
	return o
}

func (o AzureActiveDirectoryValidationOutput) ToAzureActiveDirectoryValidationPtrOutput() AzureActiveDirectoryValidationPtrOutput {
	return o.ToAzureActiveDirectoryValidationPtrOutputWithContext(context.Background())
}

func (o AzureActiveDirectoryValidationOutput) ToAzureActiveDirectoryValidationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureActiveDirectoryValidation) *AzureActiveDirectoryValidation {
		return &v
	}).(AzureActiveDirectoryValidationPtrOutput)
}

// The list of audiences that can make successful authentication/authorization requests.
func (o AzureActiveDirectoryValidationOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureActiveDirectoryValidation) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
func (o AzureActiveDirectoryValidationOutput) JwtClaimChecks() JwtClaimChecksPtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryValidation) *JwtClaimChecks { return v.JwtClaimChecks }).(JwtClaimChecksPtrOutput)
}

type AzureActiveDirectoryValidationPtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryValidation)(nil)).Elem()
}

func (o AzureActiveDirectoryValidationPtrOutput) ToAzureActiveDirectoryValidationPtrOutput() AzureActiveDirectoryValidationPtrOutput {
	return o
}

func (o AzureActiveDirectoryValidationPtrOutput) ToAzureActiveDirectoryValidationPtrOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationPtrOutput {
	return o
}

func (o AzureActiveDirectoryValidationPtrOutput) Elem() AzureActiveDirectoryValidationOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidation) AzureActiveDirectoryValidation {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryValidation
		return ret
	}).(AzureActiveDirectoryValidationOutput)
}

// The list of audiences that can make successful authentication/authorization requests.
func (o AzureActiveDirectoryValidationPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidation) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
func (o AzureActiveDirectoryValidationPtrOutput) JwtClaimChecks() JwtClaimChecksPtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidation) *JwtClaimChecks {
		if v == nil {
			return nil
		}
		return v.JwtClaimChecks
	}).(JwtClaimChecksPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidationResponse struct {
	// The list of audiences that can make successful authentication/authorization requests.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// The configuration settings of the checks that should be made while validating the JWT Claims.
	JwtClaimChecks *JwtClaimChecksResponse `pulumi:"jwtClaimChecks"`
}

// The configuration settings of the Azure Active Directory token validation flow.
type AzureActiveDirectoryValidationResponseOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureActiveDirectoryValidationResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryValidationResponseOutput) ToAzureActiveDirectoryValidationResponseOutput() AzureActiveDirectoryValidationResponseOutput {
	return o
}

func (o AzureActiveDirectoryValidationResponseOutput) ToAzureActiveDirectoryValidationResponseOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationResponseOutput {
	return o
}

// The list of audiences that can make successful authentication/authorization requests.
func (o AzureActiveDirectoryValidationResponseOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureActiveDirectoryValidationResponse) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
func (o AzureActiveDirectoryValidationResponseOutput) JwtClaimChecks() JwtClaimChecksResponsePtrOutput {
	return o.ApplyT(func(v AzureActiveDirectoryValidationResponse) *JwtClaimChecksResponse { return v.JwtClaimChecks }).(JwtClaimChecksResponsePtrOutput)
}

type AzureActiveDirectoryValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureActiveDirectoryValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureActiveDirectoryValidationResponse)(nil)).Elem()
}

func (o AzureActiveDirectoryValidationResponsePtrOutput) ToAzureActiveDirectoryValidationResponsePtrOutput() AzureActiveDirectoryValidationResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryValidationResponsePtrOutput) ToAzureActiveDirectoryValidationResponsePtrOutputWithContext(ctx context.Context) AzureActiveDirectoryValidationResponsePtrOutput {
	return o
}

func (o AzureActiveDirectoryValidationResponsePtrOutput) Elem() AzureActiveDirectoryValidationResponseOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidationResponse) AzureActiveDirectoryValidationResponse {
		if v != nil {
			return *v
		}
		var ret AzureActiveDirectoryValidationResponse
		return ret
	}).(AzureActiveDirectoryValidationResponseOutput)
}

// The list of audiences that can make successful authentication/authorization requests.
func (o AzureActiveDirectoryValidationResponsePtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidationResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
func (o AzureActiveDirectoryValidationResponsePtrOutput) JwtClaimChecks() JwtClaimChecksResponsePtrOutput {
	return o.ApplyT(func(v *AzureActiveDirectoryValidationResponse) *JwtClaimChecksResponse {
		if v == nil {
			return nil
		}
		return v.JwtClaimChecks
	}).(JwtClaimChecksResponsePtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfig struct {
	// Log level.
	Level *LogLevel `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageApplicationLogsConfigInput is an input type that accepts AzureBlobStorageApplicationLogsConfigArgs and AzureBlobStorageApplicationLogsConfigOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigInput` via:
//
//	AzureBlobStorageApplicationLogsConfigArgs{...}
type AzureBlobStorageApplicationLogsConfigInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput
	ToAzureBlobStorageApplicationLogsConfigOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigOutput
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevelPtrInput `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigOutput)
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageApplicationLogsConfigArgs) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigOutput).ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx)
}

// AzureBlobStorageApplicationLogsConfigPtrInput is an input type that accepts AzureBlobStorageApplicationLogsConfigArgs, AzureBlobStorageApplicationLogsConfigPtr and AzureBlobStorageApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageApplicationLogsConfigPtrInput` via:
//
//	        AzureBlobStorageApplicationLogsConfigArgs{...}
//
//	or:
//
//	        nil
type AzureBlobStorageApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput
	ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput
}

type azureBlobStorageApplicationLogsConfigPtrType AzureBlobStorageApplicationLogsConfigArgs

func AzureBlobStorageApplicationLogsConfigPtr(v *AzureBlobStorageApplicationLogsConfigArgs) AzureBlobStorageApplicationLogsConfigPtrInput {
	return (*azureBlobStorageApplicationLogsConfigPtrType)(v)
}

func (*azureBlobStorageApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (i *azureBlobStorageApplicationLogsConfigPtrType) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageApplicationLogsConfigPtrType) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigOutput() AzureBlobStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageApplicationLogsConfigOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBlobStorageApplicationLogsConfig) *AzureBlobStorageApplicationLogsConfig {
		return &v
	}).(AzureBlobStorageApplicationLogsConfigPtrOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *LogLevel { return v.Level }).(LogLevelPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfig) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutput() AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) ToAzureBlobStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigPtrOutput) Elem() AzureBlobStorageApplicationLogsConfigOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) AzureBlobStorageApplicationLogsConfig {
		if v != nil {
			return *v
		}
		var ret AzureBlobStorageApplicationLogsConfig
		return ret
	}).(AzureBlobStorageApplicationLogsConfigOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *LogLevel {
		if v == nil {
			return nil
		}
		return v.Level
	}).(LogLevelPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// Application logs azure blob storage configuration.
type AzureBlobStorageApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponseOutput() AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponseOutput) ToAzureBlobStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageApplicationLogsConfigResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutput() AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) ToAzureBlobStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) Elem() AzureBlobStorageApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) AzureBlobStorageApplicationLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret AzureBlobStorageApplicationLogsConfigResponse
		return ret
	}).(AzureBlobStorageApplicationLogsConfigResponseOutput)
}

// Log level.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageApplicationLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// AzureBlobStorageHttpLogsConfigInput is an input type that accepts AzureBlobStorageHttpLogsConfigArgs and AzureBlobStorageHttpLogsConfigOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigInput` via:
//
//	AzureBlobStorageHttpLogsConfigArgs{...}
type AzureBlobStorageHttpLogsConfigInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput
	ToAzureBlobStorageHttpLogsConfigOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigOutput
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl pulumi.StringPtrInput `pulumi:"sasUrl"`
}

func (AzureBlobStorageHttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput {
	return i.ToAzureBlobStorageHttpLogsConfigOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigOutput)
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureBlobStorageHttpLogsConfigArgs) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigOutput).ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx)
}

// AzureBlobStorageHttpLogsConfigPtrInput is an input type that accepts AzureBlobStorageHttpLogsConfigArgs, AzureBlobStorageHttpLogsConfigPtr and AzureBlobStorageHttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureBlobStorageHttpLogsConfigPtrInput` via:
//
//	        AzureBlobStorageHttpLogsConfigArgs{...}
//
//	or:
//
//	        nil
type AzureBlobStorageHttpLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput
	ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Context) AzureBlobStorageHttpLogsConfigPtrOutput
}

type azureBlobStorageHttpLogsConfigPtrType AzureBlobStorageHttpLogsConfigArgs

func AzureBlobStorageHttpLogsConfigPtr(v *AzureBlobStorageHttpLogsConfigArgs) AzureBlobStorageHttpLogsConfigPtrInput {
	return (*azureBlobStorageHttpLogsConfigPtrType)(v)
}

func (*azureBlobStorageHttpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (i *azureBlobStorageHttpLogsConfigPtrType) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return i.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureBlobStorageHttpLogsConfigPtrType) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigOutput() AzureBlobStorageHttpLogsConfigOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureBlobStorageHttpLogsConfigOutput) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureBlobStorageHttpLogsConfig) *AzureBlobStorageHttpLogsConfig {
		return &v
	}).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfig) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageHttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfig)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) ToAzureBlobStorageHttpLogsConfigPtrOutput() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) ToAzureBlobStorageHttpLogsConfigPtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigPtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigPtrOutput) Elem() AzureBlobStorageHttpLogsConfigOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) AzureBlobStorageHttpLogsConfig {
		if v != nil {
			return *v
		}
		var ret AzureBlobStorageHttpLogsConfig
		return ret
	}).(AzureBlobStorageHttpLogsConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfig) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove blobs older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// SAS url to a azure blob container with read/write/list/delete permissions.
	SasUrl *string `pulumi:"sasUrl"`
}

// Http logs to azure blob storage configuration.
type AzureBlobStorageHttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponseOutput() AzureBlobStorageHttpLogsConfigResponseOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponseOutput) ToAzureBlobStorageHttpLogsConfigResponseOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponseOutput {
	return o
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigResponseOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureBlobStorageHttpLogsConfigResponse) *string { return v.SasUrl }).(pulumi.StringPtrOutput)
}

type AzureBlobStorageHttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureBlobStorageHttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureBlobStorageHttpLogsConfigResponse)(nil)).Elem()
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutput() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) ToAzureBlobStorageHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o
}

func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) Elem() AzureBlobStorageHttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) AzureBlobStorageHttpLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret AzureBlobStorageHttpLogsConfigResponse
		return ret
	}).(AzureBlobStorageHttpLogsConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove blobs older than X days.
// 0 or lower means no retention.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// SAS url to a azure blob container with read/write/list/delete permissions.
func (o AzureBlobStorageHttpLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureBlobStorageHttpLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// The azure resource error info.
type AzureResourceErrorInfoResponse struct {
	// The error code.
	Code string `pulumi:"code"`
	// The error details.
	Details []AzureResourceErrorInfoResponse `pulumi:"details"`
	// The error message.
	Message string `pulumi:"message"`
}

// The azure resource error info.
type AzureResourceErrorInfoResponseOutput struct{ *pulumi.OutputState }

func (AzureResourceErrorInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureResourceErrorInfoResponse)(nil)).Elem()
}

func (o AzureResourceErrorInfoResponseOutput) ToAzureResourceErrorInfoResponseOutput() AzureResourceErrorInfoResponseOutput {
	return o
}

func (o AzureResourceErrorInfoResponseOutput) ToAzureResourceErrorInfoResponseOutputWithContext(ctx context.Context) AzureResourceErrorInfoResponseOutput {
	return o
}

// The error code.
func (o AzureResourceErrorInfoResponseOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceErrorInfoResponse) string { return v.Code }).(pulumi.StringOutput)
}

// The error details.
func (o AzureResourceErrorInfoResponseOutput) Details() AzureResourceErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v AzureResourceErrorInfoResponse) []AzureResourceErrorInfoResponse { return v.Details }).(AzureResourceErrorInfoResponseArrayOutput)
}

// The error message.
func (o AzureResourceErrorInfoResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v AzureResourceErrorInfoResponse) string { return v.Message }).(pulumi.StringOutput)
}

type AzureResourceErrorInfoResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureResourceErrorInfoResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureResourceErrorInfoResponse)(nil)).Elem()
}

func (o AzureResourceErrorInfoResponsePtrOutput) ToAzureResourceErrorInfoResponsePtrOutput() AzureResourceErrorInfoResponsePtrOutput {
	return o
}

func (o AzureResourceErrorInfoResponsePtrOutput) ToAzureResourceErrorInfoResponsePtrOutputWithContext(ctx context.Context) AzureResourceErrorInfoResponsePtrOutput {
	return o
}

func (o AzureResourceErrorInfoResponsePtrOutput) Elem() AzureResourceErrorInfoResponseOutput {
	return o.ApplyT(func(v *AzureResourceErrorInfoResponse) AzureResourceErrorInfoResponse {
		if v != nil {
			return *v
		}
		var ret AzureResourceErrorInfoResponse
		return ret
	}).(AzureResourceErrorInfoResponseOutput)
}

// The error code.
func (o AzureResourceErrorInfoResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceErrorInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.StringPtrOutput)
}

// The error details.
func (o AzureResourceErrorInfoResponsePtrOutput) Details() AzureResourceErrorInfoResponseArrayOutput {
	return o.ApplyT(func(v *AzureResourceErrorInfoResponse) []AzureResourceErrorInfoResponse {
		if v == nil {
			return nil
		}
		return v.Details
	}).(AzureResourceErrorInfoResponseArrayOutput)
}

// The error message.
func (o AzureResourceErrorInfoResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureResourceErrorInfoResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Message
	}).(pulumi.StringPtrOutput)
}

type AzureResourceErrorInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureResourceErrorInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureResourceErrorInfoResponse)(nil)).Elem()
}

func (o AzureResourceErrorInfoResponseArrayOutput) ToAzureResourceErrorInfoResponseArrayOutput() AzureResourceErrorInfoResponseArrayOutput {
	return o
}

func (o AzureResourceErrorInfoResponseArrayOutput) ToAzureResourceErrorInfoResponseArrayOutputWithContext(ctx context.Context) AzureResourceErrorInfoResponseArrayOutput {
	return o
}

func (o AzureResourceErrorInfoResponseArrayOutput) Index(i pulumi.IntInput) AzureResourceErrorInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureResourceErrorInfoResponse {
		return vs[0].([]AzureResourceErrorInfoResponse)[vs[1].(int)]
	}).(AzureResourceErrorInfoResponseOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebApps struct {
	// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the Azure Static Web Apps registration.
	Registration *AzureStaticWebAppsRegistration `pulumi:"registration"`
}

// AzureStaticWebAppsInput is an input type that accepts AzureStaticWebAppsArgs and AzureStaticWebAppsOutput values.
// You can construct a concrete instance of `AzureStaticWebAppsInput` via:
//
//	AzureStaticWebAppsArgs{...}
type AzureStaticWebAppsInput interface {
	pulumi.Input

	ToAzureStaticWebAppsOutput() AzureStaticWebAppsOutput
	ToAzureStaticWebAppsOutputWithContext(context.Context) AzureStaticWebAppsOutput
}

// The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebAppsArgs struct {
	// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the Azure Static Web Apps registration.
	Registration AzureStaticWebAppsRegistrationPtrInput `pulumi:"registration"`
}

func (AzureStaticWebAppsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebApps)(nil)).Elem()
}

func (i AzureStaticWebAppsArgs) ToAzureStaticWebAppsOutput() AzureStaticWebAppsOutput {
	return i.ToAzureStaticWebAppsOutputWithContext(context.Background())
}

func (i AzureStaticWebAppsArgs) ToAzureStaticWebAppsOutputWithContext(ctx context.Context) AzureStaticWebAppsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsOutput)
}

func (i AzureStaticWebAppsArgs) ToAzureStaticWebAppsPtrOutput() AzureStaticWebAppsPtrOutput {
	return i.ToAzureStaticWebAppsPtrOutputWithContext(context.Background())
}

func (i AzureStaticWebAppsArgs) ToAzureStaticWebAppsPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsOutput).ToAzureStaticWebAppsPtrOutputWithContext(ctx)
}

// AzureStaticWebAppsPtrInput is an input type that accepts AzureStaticWebAppsArgs, AzureStaticWebAppsPtr and AzureStaticWebAppsPtrOutput values.
// You can construct a concrete instance of `AzureStaticWebAppsPtrInput` via:
//
//	        AzureStaticWebAppsArgs{...}
//
//	or:
//
//	        nil
type AzureStaticWebAppsPtrInput interface {
	pulumi.Input

	ToAzureStaticWebAppsPtrOutput() AzureStaticWebAppsPtrOutput
	ToAzureStaticWebAppsPtrOutputWithContext(context.Context) AzureStaticWebAppsPtrOutput
}

type azureStaticWebAppsPtrType AzureStaticWebAppsArgs

func AzureStaticWebAppsPtr(v *AzureStaticWebAppsArgs) AzureStaticWebAppsPtrInput {
	return (*azureStaticWebAppsPtrType)(v)
}

func (*azureStaticWebAppsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebApps)(nil)).Elem()
}

func (i *azureStaticWebAppsPtrType) ToAzureStaticWebAppsPtrOutput() AzureStaticWebAppsPtrOutput {
	return i.ToAzureStaticWebAppsPtrOutputWithContext(context.Background())
}

func (i *azureStaticWebAppsPtrType) ToAzureStaticWebAppsPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsPtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebAppsOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebApps)(nil)).Elem()
}

func (o AzureStaticWebAppsOutput) ToAzureStaticWebAppsOutput() AzureStaticWebAppsOutput {
	return o
}

func (o AzureStaticWebAppsOutput) ToAzureStaticWebAppsOutputWithContext(ctx context.Context) AzureStaticWebAppsOutput {
	return o
}

func (o AzureStaticWebAppsOutput) ToAzureStaticWebAppsPtrOutput() AzureStaticWebAppsPtrOutput {
	return o.ToAzureStaticWebAppsPtrOutputWithContext(context.Background())
}

func (o AzureStaticWebAppsOutput) ToAzureStaticWebAppsPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStaticWebApps) *AzureStaticWebApps {
		return &v
	}).(AzureStaticWebAppsPtrOutput)
}

// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureStaticWebAppsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureStaticWebApps) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Static Web Apps registration.
func (o AzureStaticWebAppsOutput) Registration() AzureStaticWebAppsRegistrationPtrOutput {
	return o.ApplyT(func(v AzureStaticWebApps) *AzureStaticWebAppsRegistration { return v.Registration }).(AzureStaticWebAppsRegistrationPtrOutput)
}

type AzureStaticWebAppsPtrOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebApps)(nil)).Elem()
}

func (o AzureStaticWebAppsPtrOutput) ToAzureStaticWebAppsPtrOutput() AzureStaticWebAppsPtrOutput {
	return o
}

func (o AzureStaticWebAppsPtrOutput) ToAzureStaticWebAppsPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsPtrOutput {
	return o
}

func (o AzureStaticWebAppsPtrOutput) Elem() AzureStaticWebAppsOutput {
	return o.ApplyT(func(v *AzureStaticWebApps) AzureStaticWebApps {
		if v != nil {
			return *v
		}
		var ret AzureStaticWebApps
		return ret
	}).(AzureStaticWebAppsOutput)
}

// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureStaticWebAppsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureStaticWebApps) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Static Web Apps registration.
func (o AzureStaticWebAppsPtrOutput) Registration() AzureStaticWebAppsRegistrationPtrOutput {
	return o.ApplyT(func(v *AzureStaticWebApps) *AzureStaticWebAppsRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AzureStaticWebAppsRegistrationPtrOutput)
}

// The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppsRegistration struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
}

// AzureStaticWebAppsRegistrationInput is an input type that accepts AzureStaticWebAppsRegistrationArgs and AzureStaticWebAppsRegistrationOutput values.
// You can construct a concrete instance of `AzureStaticWebAppsRegistrationInput` via:
//
//	AzureStaticWebAppsRegistrationArgs{...}
type AzureStaticWebAppsRegistrationInput interface {
	pulumi.Input

	ToAzureStaticWebAppsRegistrationOutput() AzureStaticWebAppsRegistrationOutput
	ToAzureStaticWebAppsRegistrationOutputWithContext(context.Context) AzureStaticWebAppsRegistrationOutput
}

// The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppsRegistrationArgs struct {
	// The Client ID of the app used for login.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
}

func (AzureStaticWebAppsRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebAppsRegistration)(nil)).Elem()
}

func (i AzureStaticWebAppsRegistrationArgs) ToAzureStaticWebAppsRegistrationOutput() AzureStaticWebAppsRegistrationOutput {
	return i.ToAzureStaticWebAppsRegistrationOutputWithContext(context.Background())
}

func (i AzureStaticWebAppsRegistrationArgs) ToAzureStaticWebAppsRegistrationOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsRegistrationOutput)
}

func (i AzureStaticWebAppsRegistrationArgs) ToAzureStaticWebAppsRegistrationPtrOutput() AzureStaticWebAppsRegistrationPtrOutput {
	return i.ToAzureStaticWebAppsRegistrationPtrOutputWithContext(context.Background())
}

func (i AzureStaticWebAppsRegistrationArgs) ToAzureStaticWebAppsRegistrationPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsRegistrationOutput).ToAzureStaticWebAppsRegistrationPtrOutputWithContext(ctx)
}

// AzureStaticWebAppsRegistrationPtrInput is an input type that accepts AzureStaticWebAppsRegistrationArgs, AzureStaticWebAppsRegistrationPtr and AzureStaticWebAppsRegistrationPtrOutput values.
// You can construct a concrete instance of `AzureStaticWebAppsRegistrationPtrInput` via:
//
//	        AzureStaticWebAppsRegistrationArgs{...}
//
//	or:
//
//	        nil
type AzureStaticWebAppsRegistrationPtrInput interface {
	pulumi.Input

	ToAzureStaticWebAppsRegistrationPtrOutput() AzureStaticWebAppsRegistrationPtrOutput
	ToAzureStaticWebAppsRegistrationPtrOutputWithContext(context.Context) AzureStaticWebAppsRegistrationPtrOutput
}

type azureStaticWebAppsRegistrationPtrType AzureStaticWebAppsRegistrationArgs

func AzureStaticWebAppsRegistrationPtr(v *AzureStaticWebAppsRegistrationArgs) AzureStaticWebAppsRegistrationPtrInput {
	return (*azureStaticWebAppsRegistrationPtrType)(v)
}

func (*azureStaticWebAppsRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebAppsRegistration)(nil)).Elem()
}

func (i *azureStaticWebAppsRegistrationPtrType) ToAzureStaticWebAppsRegistrationPtrOutput() AzureStaticWebAppsRegistrationPtrOutput {
	return i.ToAzureStaticWebAppsRegistrationPtrOutputWithContext(context.Background())
}

func (i *azureStaticWebAppsRegistrationPtrType) ToAzureStaticWebAppsRegistrationPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStaticWebAppsRegistrationPtrOutput)
}

// The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppsRegistrationOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebAppsRegistration)(nil)).Elem()
}

func (o AzureStaticWebAppsRegistrationOutput) ToAzureStaticWebAppsRegistrationOutput() AzureStaticWebAppsRegistrationOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationOutput) ToAzureStaticWebAppsRegistrationOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationOutput) ToAzureStaticWebAppsRegistrationPtrOutput() AzureStaticWebAppsRegistrationPtrOutput {
	return o.ToAzureStaticWebAppsRegistrationPtrOutputWithContext(context.Background())
}

func (o AzureStaticWebAppsRegistrationOutput) ToAzureStaticWebAppsRegistrationPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureStaticWebAppsRegistration) *AzureStaticWebAppsRegistration {
		return &v
	}).(AzureStaticWebAppsRegistrationPtrOutput)
}

// The Client ID of the app used for login.
func (o AzureStaticWebAppsRegistrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStaticWebAppsRegistration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

type AzureStaticWebAppsRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebAppsRegistration)(nil)).Elem()
}

func (o AzureStaticWebAppsRegistrationPtrOutput) ToAzureStaticWebAppsRegistrationPtrOutput() AzureStaticWebAppsRegistrationPtrOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationPtrOutput) ToAzureStaticWebAppsRegistrationPtrOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationPtrOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationPtrOutput) Elem() AzureStaticWebAppsRegistrationOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsRegistration) AzureStaticWebAppsRegistration {
		if v != nil {
			return *v
		}
		var ret AzureStaticWebAppsRegistration
		return ret
	}).(AzureStaticWebAppsRegistrationOutput)
}

// The Client ID of the app used for login.
func (o AzureStaticWebAppsRegistrationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppsRegistrationResponse struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
}

// The configuration settings of the registration for the Azure Static Web Apps provider
type AzureStaticWebAppsRegistrationResponseOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebAppsRegistrationResponse)(nil)).Elem()
}

func (o AzureStaticWebAppsRegistrationResponseOutput) ToAzureStaticWebAppsRegistrationResponseOutput() AzureStaticWebAppsRegistrationResponseOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationResponseOutput) ToAzureStaticWebAppsRegistrationResponseOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationResponseOutput {
	return o
}

// The Client ID of the app used for login.
func (o AzureStaticWebAppsRegistrationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStaticWebAppsRegistrationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

type AzureStaticWebAppsRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebAppsRegistrationResponse)(nil)).Elem()
}

func (o AzureStaticWebAppsRegistrationResponsePtrOutput) ToAzureStaticWebAppsRegistrationResponsePtrOutput() AzureStaticWebAppsRegistrationResponsePtrOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationResponsePtrOutput) ToAzureStaticWebAppsRegistrationResponsePtrOutputWithContext(ctx context.Context) AzureStaticWebAppsRegistrationResponsePtrOutput {
	return o
}

func (o AzureStaticWebAppsRegistrationResponsePtrOutput) Elem() AzureStaticWebAppsRegistrationResponseOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsRegistrationResponse) AzureStaticWebAppsRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret AzureStaticWebAppsRegistrationResponse
		return ret
	}).(AzureStaticWebAppsRegistrationResponseOutput)
}

// The Client ID of the app used for login.
func (o AzureStaticWebAppsRegistrationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebAppsResponse struct {
	// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the Azure Static Web Apps registration.
	Registration *AzureStaticWebAppsRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the Azure Static Web Apps provider.
type AzureStaticWebAppsResponseOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStaticWebAppsResponse)(nil)).Elem()
}

func (o AzureStaticWebAppsResponseOutput) ToAzureStaticWebAppsResponseOutput() AzureStaticWebAppsResponseOutput {
	return o
}

func (o AzureStaticWebAppsResponseOutput) ToAzureStaticWebAppsResponseOutputWithContext(ctx context.Context) AzureStaticWebAppsResponseOutput {
	return o
}

// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureStaticWebAppsResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AzureStaticWebAppsResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Static Web Apps registration.
func (o AzureStaticWebAppsResponseOutput) Registration() AzureStaticWebAppsRegistrationResponsePtrOutput {
	return o.ApplyT(func(v AzureStaticWebAppsResponse) *AzureStaticWebAppsRegistrationResponse { return v.Registration }).(AzureStaticWebAppsRegistrationResponsePtrOutput)
}

type AzureStaticWebAppsResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureStaticWebAppsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureStaticWebAppsResponse)(nil)).Elem()
}

func (o AzureStaticWebAppsResponsePtrOutput) ToAzureStaticWebAppsResponsePtrOutput() AzureStaticWebAppsResponsePtrOutput {
	return o
}

func (o AzureStaticWebAppsResponsePtrOutput) ToAzureStaticWebAppsResponsePtrOutputWithContext(ctx context.Context) AzureStaticWebAppsResponsePtrOutput {
	return o
}

func (o AzureStaticWebAppsResponsePtrOutput) Elem() AzureStaticWebAppsResponseOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsResponse) AzureStaticWebAppsResponse {
		if v != nil {
			return *v
		}
		var ret AzureStaticWebAppsResponse
		return ret
	}).(AzureStaticWebAppsResponseOutput)
}

// <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o AzureStaticWebAppsResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the Azure Static Web Apps registration.
func (o AzureStaticWebAppsResponsePtrOutput) Registration() AzureStaticWebAppsRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *AzureStaticWebAppsResponse) *AzureStaticWebAppsRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AzureStaticWebAppsRegistrationResponsePtrOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValue struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// Type of storage.
	Type *AzureStorageType `pulumi:"type"`
}

// AzureStorageInfoValueInput is an input type that accepts AzureStorageInfoValueArgs and AzureStorageInfoValueOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueInput` via:
//
//	AzureStorageInfoValueArgs{...}
type AzureStorageInfoValueInput interface {
	pulumi.Input

	ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput
	ToAzureStorageInfoValueOutputWithContext(context.Context) AzureStorageInfoValueOutput
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueArgs struct {
	// Access key for the storage account.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName pulumi.StringPtrInput `pulumi:"shareName"`
	// Type of storage.
	Type AzureStorageTypePtrInput `pulumi:"type"`
}

func (AzureStorageInfoValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValue)(nil)).Elem()
}

func (i AzureStorageInfoValueArgs) ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput {
	return i.ToAzureStorageInfoValueOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueArgs) ToAzureStorageInfoValueOutputWithContext(ctx context.Context) AzureStorageInfoValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueOutput)
}

// AzureStorageInfoValueMapInput is an input type that accepts AzureStorageInfoValueMap and AzureStorageInfoValueMapOutput values.
// You can construct a concrete instance of `AzureStorageInfoValueMapInput` via:
//
//	AzureStorageInfoValueMap{ "key": AzureStorageInfoValueArgs{...} }
type AzureStorageInfoValueMapInput interface {
	pulumi.Input

	ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput
	ToAzureStorageInfoValueMapOutputWithContext(context.Context) AzureStorageInfoValueMapOutput
}

type AzureStorageInfoValueMap map[string]AzureStorageInfoValueInput

func (AzureStorageInfoValueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValue)(nil)).Elem()
}

func (i AzureStorageInfoValueMap) ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput {
	return i.ToAzureStorageInfoValueMapOutputWithContext(context.Background())
}

func (i AzureStorageInfoValueMap) ToAzureStorageInfoValueMapOutputWithContext(ctx context.Context) AzureStorageInfoValueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureStorageInfoValueMapOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValue)(nil)).Elem()
}

func (o AzureStorageInfoValueOutput) ToAzureStorageInfoValueOutput() AzureStorageInfoValueOutput {
	return o
}

func (o AzureStorageInfoValueOutput) ToAzureStorageInfoValueOutputWithContext(ctx context.Context) AzureStorageInfoValueOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// Type of storage.
func (o AzureStorageInfoValueOutput) Type() AzureStorageTypePtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValue) *AzureStorageType { return v.Type }).(AzureStorageTypePtrOutput)
}

type AzureStorageInfoValueMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValue)(nil)).Elem()
}

func (o AzureStorageInfoValueMapOutput) ToAzureStorageInfoValueMapOutput() AzureStorageInfoValueMapOutput {
	return o
}

func (o AzureStorageInfoValueMapOutput) ToAzureStorageInfoValueMapOutputWithContext(ctx context.Context) AzureStorageInfoValueMapOutput {
	return o
}

func (o AzureStorageInfoValueMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValue {
		return vs[0].(map[string]AzureStorageInfoValue)[vs[1].(string)]
	}).(AzureStorageInfoValueOutput)
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponse struct {
	// Access key for the storage account.
	AccessKey *string `pulumi:"accessKey"`
	// Name of the storage account.
	AccountName *string `pulumi:"accountName"`
	// Path to mount the storage within the site's runtime environment.
	MountPath *string `pulumi:"mountPath"`
	// Name of the file share (container name, for Blob storage).
	ShareName *string `pulumi:"shareName"`
	// State of the storage account.
	State string `pulumi:"state"`
	// Type of storage.
	Type *string `pulumi:"type"`
}

// Azure Files or Blob Storage access information value for dictionary storage.
type AzureStorageInfoValueResponseOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutput() AzureStorageInfoValueResponseOutput {
	return o
}

func (o AzureStorageInfoValueResponseOutput) ToAzureStorageInfoValueResponseOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseOutput {
	return o
}

// Access key for the storage account.
func (o AzureStorageInfoValueResponseOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o AzureStorageInfoValueResponseOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Path to mount the storage within the site's runtime environment.
func (o AzureStorageInfoValueResponseOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// Name of the file share (container name, for Blob storage).
func (o AzureStorageInfoValueResponseOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.ShareName }).(pulumi.StringPtrOutput)
}

// State of the storage account.
func (o AzureStorageInfoValueResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) string { return v.State }).(pulumi.StringOutput)
}

// Type of storage.
func (o AzureStorageInfoValueResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureStorageInfoValueResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureStorageInfoValueResponseMapOutput struct{ *pulumi.OutputState }

func (AzureStorageInfoValueResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AzureStorageInfoValueResponse)(nil)).Elem()
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutput() AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) ToAzureStorageInfoValueResponseMapOutputWithContext(ctx context.Context) AzureStorageInfoValueResponseMapOutput {
	return o
}

func (o AzureStorageInfoValueResponseMapOutput) MapIndex(k pulumi.StringInput) AzureStorageInfoValueResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AzureStorageInfoValueResponse {
		return vs[0].(map[string]AzureStorageInfoValueResponse)[vs[1].(string)]
	}).(AzureStorageInfoValueResponseOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfig struct {
	// Log level.
	Level *LogLevel `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl string `pulumi:"sasUrl"`
}

// AzureTableStorageApplicationLogsConfigInput is an input type that accepts AzureTableStorageApplicationLogsConfigArgs and AzureTableStorageApplicationLogsConfigOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigInput` via:
//
//	AzureTableStorageApplicationLogsConfigArgs{...}
type AzureTableStorageApplicationLogsConfigInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput
	ToAzureTableStorageApplicationLogsConfigOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigOutput
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevelPtrInput `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl pulumi.StringInput `pulumi:"sasUrl"`
}

func (AzureTableStorageApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput {
	return i.ToAzureTableStorageApplicationLogsConfigOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigOutput)
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i AzureTableStorageApplicationLogsConfigArgs) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigOutput).ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx)
}

// AzureTableStorageApplicationLogsConfigPtrInput is an input type that accepts AzureTableStorageApplicationLogsConfigArgs, AzureTableStorageApplicationLogsConfigPtr and AzureTableStorageApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `AzureTableStorageApplicationLogsConfigPtrInput` via:
//
//	        AzureTableStorageApplicationLogsConfigArgs{...}
//
//	or:
//
//	        nil
type AzureTableStorageApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput
	ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Context) AzureTableStorageApplicationLogsConfigPtrOutput
}

type azureTableStorageApplicationLogsConfigPtrType AzureTableStorageApplicationLogsConfigArgs

func AzureTableStorageApplicationLogsConfigPtr(v *AzureTableStorageApplicationLogsConfigArgs) AzureTableStorageApplicationLogsConfigPtrInput {
	return (*azureTableStorageApplicationLogsConfigPtrType)(v)
}

func (*azureTableStorageApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (i *azureTableStorageApplicationLogsConfigPtrType) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return i.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *azureTableStorageApplicationLogsConfigPtrType) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigOutput() AzureTableStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o AzureTableStorageApplicationLogsConfigOutput) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AzureTableStorageApplicationLogsConfig) *AzureTableStorageApplicationLogsConfig {
		return &v
	}).(AzureTableStorageApplicationLogsConfigPtrOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfig) *LogLevel { return v.Level }).(LogLevelPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfig) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AzureTableStorageApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfig)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) ToAzureTableStorageApplicationLogsConfigPtrOutput() AzureTableStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) ToAzureTableStorageApplicationLogsConfigPtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigPtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigPtrOutput) Elem() AzureTableStorageApplicationLogsConfigOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) AzureTableStorageApplicationLogsConfig {
		if v != nil {
			return *v
		}
		var ret AzureTableStorageApplicationLogsConfig
		return ret
	}).(AzureTableStorageApplicationLogsConfigOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigPtrOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) *LogLevel {
		if v == nil {
			return nil
		}
		return v.Level
	}).(LogLevelPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigPtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
	// SAS URL to an Azure table with add/query/delete permissions.
	SasUrl string `pulumi:"sasUrl"`
}

// Application logs to Azure table storage configuration.
type AzureTableStorageApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponseOutput() AzureTableStorageApplicationLogsConfigResponseOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponseOutput) ToAzureTableStorageApplicationLogsConfigResponseOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponseOutput {
	return o
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigResponseOutput) SasUrl() pulumi.StringOutput {
	return o.ApplyT(func(v AzureTableStorageApplicationLogsConfigResponse) string { return v.SasUrl }).(pulumi.StringOutput)
}

type AzureTableStorageApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureTableStorageApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureTableStorageApplicationLogsConfigResponse)(nil)).Elem()
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutput() AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) ToAzureTableStorageApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) AzureTableStorageApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) Elem() AzureTableStorageApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) AzureTableStorageApplicationLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret AzureTableStorageApplicationLogsConfigResponse
		return ret
	}).(AzureTableStorageApplicationLogsConfigResponseOutput)
}

// Log level.
func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// SAS URL to an Azure table with add/query/delete permissions.
func (o AzureTableStorageApplicationLogsConfigResponsePtrOutput) SasUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureTableStorageApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.SasUrl
	}).(pulumi.StringPtrOutput)
}

// Backup description.
type BackupItemResponse struct {
	// Id of the backup.
	BackupId int `pulumi:"backupId"`
	// Name of the blob which contains data for this backup.
	BlobName string `pulumi:"blobName"`
	// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
	CorrelationId string `pulumi:"correlationId"`
	// Timestamp of the backup creation.
	Created string `pulumi:"created"`
	// List of databases included in the backup.
	Databases []DatabaseBackupSettingResponse `pulumi:"databases"`
	// Timestamp when this backup finished.
	FinishedTimeStamp string `pulumi:"finishedTimeStamp"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Timestamp of a last restore operation which used this backup.
	LastRestoreTimeStamp string `pulumi:"lastRestoreTimeStamp"`
	// Details regarding this backup. Might contain an error message.
	Log string `pulumi:"log"`
	// Resource Name.
	Name string `pulumi:"name"`
	// True if this backup has been created due to a schedule being triggered.
	Scheduled bool `pulumi:"scheduled"`
	// Size of the backup in bytes.
	SizeInBytes float64 `pulumi:"sizeInBytes"`
	// Backup status.
	Status string `pulumi:"status"`
	// SAS URL for the storage account container which contains this backup.
	StorageAccountUrl string `pulumi:"storageAccountUrl"`
	// Resource type.
	Type string `pulumi:"type"`
	// Size of the original web app which has been backed up.
	WebsiteSizeInBytes float64 `pulumi:"websiteSizeInBytes"`
}

// Backup description.
type BackupItemResponseOutput struct{ *pulumi.OutputState }

func (BackupItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupItemResponse)(nil)).Elem()
}

func (o BackupItemResponseOutput) ToBackupItemResponseOutput() BackupItemResponseOutput {
	return o
}

func (o BackupItemResponseOutput) ToBackupItemResponseOutputWithContext(ctx context.Context) BackupItemResponseOutput {
	return o
}

// Id of the backup.
func (o BackupItemResponseOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v BackupItemResponse) int { return v.BackupId }).(pulumi.IntOutput)
}

// Name of the blob which contains data for this backup.
func (o BackupItemResponseOutput) BlobName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.BlobName }).(pulumi.StringOutput)
}

// Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.
func (o BackupItemResponseOutput) CorrelationId() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.CorrelationId }).(pulumi.StringOutput)
}

// Timestamp of the backup creation.
func (o BackupItemResponseOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Created }).(pulumi.StringOutput)
}

// List of databases included in the backup.
func (o BackupItemResponseOutput) Databases() DatabaseBackupSettingResponseArrayOutput {
	return o.ApplyT(func(v BackupItemResponse) []DatabaseBackupSettingResponse { return v.Databases }).(DatabaseBackupSettingResponseArrayOutput)
}

// Timestamp when this backup finished.
func (o BackupItemResponseOutput) FinishedTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.FinishedTimeStamp }).(pulumi.StringOutput)
}

// Resource Id.
func (o BackupItemResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o BackupItemResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupItemResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Timestamp of a last restore operation which used this backup.
func (o BackupItemResponseOutput) LastRestoreTimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.LastRestoreTimeStamp }).(pulumi.StringOutput)
}

// Details regarding this backup. Might contain an error message.
func (o BackupItemResponseOutput) Log() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Log }).(pulumi.StringOutput)
}

// Resource Name.
func (o BackupItemResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Name }).(pulumi.StringOutput)
}

// True if this backup has been created due to a schedule being triggered.
func (o BackupItemResponseOutput) Scheduled() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupItemResponse) bool { return v.Scheduled }).(pulumi.BoolOutput)
}

// Size of the backup in bytes.
func (o BackupItemResponseOutput) SizeInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v BackupItemResponse) float64 { return v.SizeInBytes }).(pulumi.Float64Output)
}

// Backup status.
func (o BackupItemResponseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Status }).(pulumi.StringOutput)
}

// SAS URL for the storage account container which contains this backup.
func (o BackupItemResponseOutput) StorageAccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.StorageAccountUrl }).(pulumi.StringOutput)
}

// Resource type.
func (o BackupItemResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackupItemResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Size of the original web app which has been backed up.
func (o BackupItemResponseOutput) WebsiteSizeInBytes() pulumi.Float64Output {
	return o.ApplyT(func(v BackupItemResponse) float64 { return v.WebsiteSizeInBytes }).(pulumi.Float64Output)
}

type BackupItemResponseArrayOutput struct{ *pulumi.OutputState }

func (BackupItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupItemResponse)(nil)).Elem()
}

func (o BackupItemResponseArrayOutput) ToBackupItemResponseArrayOutput() BackupItemResponseArrayOutput {
	return o
}

func (o BackupItemResponseArrayOutput) ToBackupItemResponseArrayOutputWithContext(ctx context.Context) BackupItemResponseArrayOutput {
	return o
}

func (o BackupItemResponseArrayOutput) Index(i pulumi.IntInput) BackupItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupItemResponse {
		return vs[0].([]BackupItemResponse)[vs[1].(int)]
	}).(BackupItemResponseOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupSchedule struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit FrequencyUnit `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for BackupSchedule
func (val *BackupSchedule) Defaults() *BackupSchedule {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.FrequencyInterval) {
		tmp.FrequencyInterval = 7
	}
	if isZero(tmp.FrequencyUnit) {
		tmp.FrequencyUnit = FrequencyUnit("Day")
	}
	if isZero(tmp.KeepAtLeastOneBackup) {
		tmp.KeepAtLeastOneBackup = true
	}
	if isZero(tmp.RetentionPeriodInDays) {
		tmp.RetentionPeriodInDays = 30
	}
	return &tmp
}

// BackupScheduleInput is an input type that accepts BackupScheduleArgs and BackupScheduleOutput values.
// You can construct a concrete instance of `BackupScheduleInput` via:
//
//	BackupScheduleArgs{...}
type BackupScheduleInput interface {
	pulumi.Input

	ToBackupScheduleOutput() BackupScheduleOutput
	ToBackupScheduleOutputWithContext(context.Context) BackupScheduleOutput
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleArgs struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval pulumi.IntInput `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit FrequencyUnitInput `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup pulumi.BoolInput `pulumi:"keepAtLeastOneBackup"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays pulumi.IntInput `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for BackupScheduleArgs
func (val *BackupScheduleArgs) Defaults() *BackupScheduleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.FrequencyInterval) {
		tmp.FrequencyInterval = pulumi.Int(7)
	}
	if isZero(tmp.FrequencyUnit) {
		tmp.FrequencyUnit = FrequencyUnit("Day")
	}
	if isZero(tmp.KeepAtLeastOneBackup) {
		tmp.KeepAtLeastOneBackup = pulumi.Bool(true)
	}
	if isZero(tmp.RetentionPeriodInDays) {
		tmp.RetentionPeriodInDays = pulumi.Int(30)
	}
	return &tmp
}
func (BackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (i BackupScheduleArgs) ToBackupScheduleOutput() BackupScheduleOutput {
	return i.ToBackupScheduleOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput)
}

func (i BackupScheduleArgs) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return i.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (i BackupScheduleArgs) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupScheduleOutput).ToBackupSchedulePtrOutputWithContext(ctx)
}

// BackupSchedulePtrInput is an input type that accepts BackupScheduleArgs, BackupSchedulePtr and BackupSchedulePtrOutput values.
// You can construct a concrete instance of `BackupSchedulePtrInput` via:
//
//	        BackupScheduleArgs{...}
//
//	or:
//
//	        nil
type BackupSchedulePtrInput interface {
	pulumi.Input

	ToBackupSchedulePtrOutput() BackupSchedulePtrOutput
	ToBackupSchedulePtrOutputWithContext(context.Context) BackupSchedulePtrOutput
}

type backupSchedulePtrType BackupScheduleArgs

func BackupSchedulePtr(v *BackupScheduleArgs) BackupSchedulePtrInput {
	return (*backupSchedulePtrType)(v)
}

func (*backupSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedule)(nil)).Elem()
}

func (i *backupSchedulePtrType) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return i.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (i *backupSchedulePtrType) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSchedulePtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleOutput struct{ *pulumi.OutputState }

func (BackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSchedule)(nil)).Elem()
}

func (o BackupScheduleOutput) ToBackupScheduleOutput() BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupScheduleOutputWithContext(ctx context.Context) BackupScheduleOutput {
	return o
}

func (o BackupScheduleOutput) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return o.ToBackupSchedulePtrOutputWithContext(context.Background())
}

func (o BackupScheduleOutput) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupSchedule) *BackupSchedule {
		return &v
	}).(BackupSchedulePtrOutput)
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleOutput) FrequencyUnit() FrequencyUnitOutput {
	return o.ApplyT(func(v BackupSchedule) FrequencyUnit { return v.FrequencyUnit }).(FrequencyUnitOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupSchedule) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupSchedule) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BackupSchedulePtrOutput struct{ *pulumi.OutputState }

func (BackupSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSchedule)(nil)).Elem()
}

func (o BackupSchedulePtrOutput) ToBackupSchedulePtrOutput() BackupSchedulePtrOutput {
	return o
}

func (o BackupSchedulePtrOutput) ToBackupSchedulePtrOutputWithContext(ctx context.Context) BackupSchedulePtrOutput {
	return o
}

func (o BackupSchedulePtrOutput) Elem() BackupScheduleOutput {
	return o.ApplyT(func(v *BackupSchedule) BackupSchedule {
		if v != nil {
			return *v
		}
		var ret BackupSchedule
		return ret
	}).(BackupScheduleOutput)
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupSchedulePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupSchedulePtrOutput) FrequencyUnit() FrequencyUnitPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *FrequencyUnit {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(FrequencyUnitPtrOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupSchedulePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// After how many days backups should be deleted.
func (o BackupSchedulePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// When the schedule should start working.
func (o BackupSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponse struct {
	// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
	FrequencyInterval int `pulumi:"frequencyInterval"`
	// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
	FrequencyUnit string `pulumi:"frequencyUnit"`
	// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
	KeepAtLeastOneBackup bool `pulumi:"keepAtLeastOneBackup"`
	// Last time when this schedule was triggered.
	LastExecutionTime string `pulumi:"lastExecutionTime"`
	// After how many days backups should be deleted.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
	// When the schedule should start working.
	StartTime *string `pulumi:"startTime"`
}

// Defaults sets the appropriate defaults for BackupScheduleResponse
func (val *BackupScheduleResponse) Defaults() *BackupScheduleResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.FrequencyInterval) {
		tmp.FrequencyInterval = 7
	}
	if isZero(tmp.FrequencyUnit) {
		tmp.FrequencyUnit = "Day"
	}
	if isZero(tmp.KeepAtLeastOneBackup) {
		tmp.KeepAtLeastOneBackup = true
	}
	if isZero(tmp.RetentionPeriodInDays) {
		tmp.RetentionPeriodInDays = 30
	}
	return &tmp
}

// Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.
type BackupScheduleResponseOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutput() BackupScheduleResponseOutput {
	return o
}

func (o BackupScheduleResponseOutput) ToBackupScheduleResponseOutputWithContext(ctx context.Context) BackupScheduleResponseOutput {
	return o
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponseOutput) FrequencyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.FrequencyInterval }).(pulumi.IntOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponseOutput) FrequencyUnit() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.FrequencyUnit }).(pulumi.StringOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponseOutput) KeepAtLeastOneBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v BackupScheduleResponse) bool { return v.KeepAtLeastOneBackup }).(pulumi.BoolOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleResponseOutput) LastExecutionTime() pulumi.StringOutput {
	return o.ApplyT(func(v BackupScheduleResponse) string { return v.LastExecutionTime }).(pulumi.StringOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleResponseOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v BackupScheduleResponse) int { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

// When the schedule should start working.
func (o BackupScheduleResponseOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupScheduleResponse) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type BackupScheduleResponsePtrOutput struct{ *pulumi.OutputState }

func (BackupScheduleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupScheduleResponse)(nil)).Elem()
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutput() BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) ToBackupScheduleResponsePtrOutputWithContext(ctx context.Context) BackupScheduleResponsePtrOutput {
	return o
}

func (o BackupScheduleResponsePtrOutput) Elem() BackupScheduleResponseOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) BackupScheduleResponse {
		if v != nil {
			return *v
		}
		var ret BackupScheduleResponse
		return ret
	}).(BackupScheduleResponseOutput)
}

// How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)
func (o BackupScheduleResponsePtrOutput) FrequencyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.FrequencyInterval
	}).(pulumi.IntPtrOutput)
}

// The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)
func (o BackupScheduleResponsePtrOutput) FrequencyUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FrequencyUnit
	}).(pulumi.StringPtrOutput)
}

// True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.
func (o BackupScheduleResponsePtrOutput) KeepAtLeastOneBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.KeepAtLeastOneBackup
	}).(pulumi.BoolPtrOutput)
}

// Last time when this schedule was triggered.
func (o BackupScheduleResponsePtrOutput) LastExecutionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return &v.LastExecutionTime
	}).(pulumi.StringPtrOutput)
}

// After how many days backups should be deleted.
func (o BackupScheduleResponsePtrOutput) RetentionPeriodInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *int {
		if v == nil {
			return nil
		}
		return &v.RetentionPeriodInDays
	}).(pulumi.IntPtrOutput)
}

// When the schedule should start working.
func (o BackupScheduleResponsePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupScheduleResponse) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
type BlobStorageTokenStore struct {
	// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
	SasUrlSettingName *string `pulumi:"sasUrlSettingName"`
}

// BlobStorageTokenStoreInput is an input type that accepts BlobStorageTokenStoreArgs and BlobStorageTokenStoreOutput values.
// You can construct a concrete instance of `BlobStorageTokenStoreInput` via:
//
//	BlobStorageTokenStoreArgs{...}
type BlobStorageTokenStoreInput interface {
	pulumi.Input

	ToBlobStorageTokenStoreOutput() BlobStorageTokenStoreOutput
	ToBlobStorageTokenStoreOutputWithContext(context.Context) BlobStorageTokenStoreOutput
}

// The configuration settings of the storage of the tokens if blob storage is used.
type BlobStorageTokenStoreArgs struct {
	// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
	SasUrlSettingName pulumi.StringPtrInput `pulumi:"sasUrlSettingName"`
}

func (BlobStorageTokenStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageTokenStore)(nil)).Elem()
}

func (i BlobStorageTokenStoreArgs) ToBlobStorageTokenStoreOutput() BlobStorageTokenStoreOutput {
	return i.ToBlobStorageTokenStoreOutputWithContext(context.Background())
}

func (i BlobStorageTokenStoreArgs) ToBlobStorageTokenStoreOutputWithContext(ctx context.Context) BlobStorageTokenStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStorageTokenStoreOutput)
}

func (i BlobStorageTokenStoreArgs) ToBlobStorageTokenStorePtrOutput() BlobStorageTokenStorePtrOutput {
	return i.ToBlobStorageTokenStorePtrOutputWithContext(context.Background())
}

func (i BlobStorageTokenStoreArgs) ToBlobStorageTokenStorePtrOutputWithContext(ctx context.Context) BlobStorageTokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStorageTokenStoreOutput).ToBlobStorageTokenStorePtrOutputWithContext(ctx)
}

// BlobStorageTokenStorePtrInput is an input type that accepts BlobStorageTokenStoreArgs, BlobStorageTokenStorePtr and BlobStorageTokenStorePtrOutput values.
// You can construct a concrete instance of `BlobStorageTokenStorePtrInput` via:
//
//	        BlobStorageTokenStoreArgs{...}
//
//	or:
//
//	        nil
type BlobStorageTokenStorePtrInput interface {
	pulumi.Input

	ToBlobStorageTokenStorePtrOutput() BlobStorageTokenStorePtrOutput
	ToBlobStorageTokenStorePtrOutputWithContext(context.Context) BlobStorageTokenStorePtrOutput
}

type blobStorageTokenStorePtrType BlobStorageTokenStoreArgs

func BlobStorageTokenStorePtr(v *BlobStorageTokenStoreArgs) BlobStorageTokenStorePtrInput {
	return (*blobStorageTokenStorePtrType)(v)
}

func (*blobStorageTokenStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobStorageTokenStore)(nil)).Elem()
}

func (i *blobStorageTokenStorePtrType) ToBlobStorageTokenStorePtrOutput() BlobStorageTokenStorePtrOutput {
	return i.ToBlobStorageTokenStorePtrOutputWithContext(context.Background())
}

func (i *blobStorageTokenStorePtrType) ToBlobStorageTokenStorePtrOutputWithContext(ctx context.Context) BlobStorageTokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlobStorageTokenStorePtrOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
type BlobStorageTokenStoreOutput struct{ *pulumi.OutputState }

func (BlobStorageTokenStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageTokenStore)(nil)).Elem()
}

func (o BlobStorageTokenStoreOutput) ToBlobStorageTokenStoreOutput() BlobStorageTokenStoreOutput {
	return o
}

func (o BlobStorageTokenStoreOutput) ToBlobStorageTokenStoreOutputWithContext(ctx context.Context) BlobStorageTokenStoreOutput {
	return o
}

func (o BlobStorageTokenStoreOutput) ToBlobStorageTokenStorePtrOutput() BlobStorageTokenStorePtrOutput {
	return o.ToBlobStorageTokenStorePtrOutputWithContext(context.Background())
}

func (o BlobStorageTokenStoreOutput) ToBlobStorageTokenStorePtrOutputWithContext(ctx context.Context) BlobStorageTokenStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlobStorageTokenStore) *BlobStorageTokenStore {
		return &v
	}).(BlobStorageTokenStorePtrOutput)
}

// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
func (o BlobStorageTokenStoreOutput) SasUrlSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStorageTokenStore) *string { return v.SasUrlSettingName }).(pulumi.StringPtrOutput)
}

type BlobStorageTokenStorePtrOutput struct{ *pulumi.OutputState }

func (BlobStorageTokenStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobStorageTokenStore)(nil)).Elem()
}

func (o BlobStorageTokenStorePtrOutput) ToBlobStorageTokenStorePtrOutput() BlobStorageTokenStorePtrOutput {
	return o
}

func (o BlobStorageTokenStorePtrOutput) ToBlobStorageTokenStorePtrOutputWithContext(ctx context.Context) BlobStorageTokenStorePtrOutput {
	return o
}

func (o BlobStorageTokenStorePtrOutput) Elem() BlobStorageTokenStoreOutput {
	return o.ApplyT(func(v *BlobStorageTokenStore) BlobStorageTokenStore {
		if v != nil {
			return *v
		}
		var ret BlobStorageTokenStore
		return ret
	}).(BlobStorageTokenStoreOutput)
}

// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
func (o BlobStorageTokenStorePtrOutput) SasUrlSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobStorageTokenStore) *string {
		if v == nil {
			return nil
		}
		return v.SasUrlSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
type BlobStorageTokenStoreResponse struct {
	// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
	SasUrlSettingName *string `pulumi:"sasUrlSettingName"`
}

// The configuration settings of the storage of the tokens if blob storage is used.
type BlobStorageTokenStoreResponseOutput struct{ *pulumi.OutputState }

func (BlobStorageTokenStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlobStorageTokenStoreResponse)(nil)).Elem()
}

func (o BlobStorageTokenStoreResponseOutput) ToBlobStorageTokenStoreResponseOutput() BlobStorageTokenStoreResponseOutput {
	return o
}

func (o BlobStorageTokenStoreResponseOutput) ToBlobStorageTokenStoreResponseOutputWithContext(ctx context.Context) BlobStorageTokenStoreResponseOutput {
	return o
}

// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
func (o BlobStorageTokenStoreResponseOutput) SasUrlSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlobStorageTokenStoreResponse) *string { return v.SasUrlSettingName }).(pulumi.StringPtrOutput)
}

type BlobStorageTokenStoreResponsePtrOutput struct{ *pulumi.OutputState }

func (BlobStorageTokenStoreResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlobStorageTokenStoreResponse)(nil)).Elem()
}

func (o BlobStorageTokenStoreResponsePtrOutput) ToBlobStorageTokenStoreResponsePtrOutput() BlobStorageTokenStoreResponsePtrOutput {
	return o
}

func (o BlobStorageTokenStoreResponsePtrOutput) ToBlobStorageTokenStoreResponsePtrOutputWithContext(ctx context.Context) BlobStorageTokenStoreResponsePtrOutput {
	return o
}

func (o BlobStorageTokenStoreResponsePtrOutput) Elem() BlobStorageTokenStoreResponseOutput {
	return o.ApplyT(func(v *BlobStorageTokenStoreResponse) BlobStorageTokenStoreResponse {
		if v != nil {
			return *v
		}
		var ret BlobStorageTokenStoreResponse
		return ret
	}).(BlobStorageTokenStoreResponseOutput)
}

// The name of the app setting containing the SAS URL of the blob storage containing the tokens.
func (o BlobStorageTokenStoreResponsePtrOutput) SasUrlSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlobStorageTokenStoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.SasUrlSettingName
	}).(pulumi.StringPtrOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type Capability struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// CapabilityInput is an input type that accepts CapabilityArgs and CapabilityOutput values.
// You can construct a concrete instance of `CapabilityInput` via:
//
//	CapabilityArgs{...}
type CapabilityInput interface {
	pulumi.Input

	ToCapabilityOutput() CapabilityOutput
	ToCapabilityOutputWithContext(context.Context) CapabilityOutput
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityArgs struct {
	// Name of the SKU capability.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reason of the SKU capability.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Value of the SKU capability.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (i CapabilityArgs) ToCapabilityOutput() CapabilityOutput {
	return i.ToCapabilityOutputWithContext(context.Background())
}

func (i CapabilityArgs) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityOutput)
}

// CapabilityArrayInput is an input type that accepts CapabilityArray and CapabilityArrayOutput values.
// You can construct a concrete instance of `CapabilityArrayInput` via:
//
//	CapabilityArray{ CapabilityArgs{...} }
type CapabilityArrayInput interface {
	pulumi.Input

	ToCapabilityArrayOutput() CapabilityArrayOutput
	ToCapabilityArrayOutputWithContext(context.Context) CapabilityArrayOutput
}

type CapabilityArray []CapabilityInput

func (CapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (i CapabilityArray) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return i.ToCapabilityArrayOutputWithContext(context.Background())
}

func (i CapabilityArray) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilityArrayOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityOutput struct{ *pulumi.OutputState }

func (CapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capability)(nil)).Elem()
}

func (o CapabilityOutput) ToCapabilityOutput() CapabilityOutput {
	return o
}

func (o CapabilityOutput) ToCapabilityOutputWithContext(ctx context.Context) CapabilityOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Capability) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityArrayOutput struct{ *pulumi.OutputState }

func (CapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Capability)(nil)).Elem()
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutput() CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) ToCapabilityArrayOutputWithContext(ctx context.Context) CapabilityArrayOutput {
	return o
}

func (o CapabilityArrayOutput) Index(i pulumi.IntInput) CapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Capability {
		return vs[0].([]Capability)[vs[1].(int)]
	}).(CapabilityOutput)
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponse struct {
	// Name of the SKU capability.
	Name *string `pulumi:"name"`
	// Reason of the SKU capability.
	Reason *string `pulumi:"reason"`
	// Value of the SKU capability.
	Value *string `pulumi:"value"`
}

// Describes the capabilities/features allowed for a specific SKU.
type CapabilityResponseOutput struct{ *pulumi.OutputState }

func (CapabilityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutput() CapabilityResponseOutput {
	return o
}

func (o CapabilityResponseOutput) ToCapabilityResponseOutputWithContext(ctx context.Context) CapabilityResponseOutput {
	return o
}

// Name of the SKU capability.
func (o CapabilityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reason of the SKU capability.
func (o CapabilityResponseOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Value of the SKU capability.
func (o CapabilityResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapabilityResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CapabilityResponseArrayOutput struct{ *pulumi.OutputState }

func (CapabilityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CapabilityResponse)(nil)).Elem()
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutput() CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) ToCapabilityResponseArrayOutputWithContext(ctx context.Context) CapabilityResponseArrayOutput {
	return o
}

func (o CapabilityResponseArrayOutput) Index(i pulumi.IntInput) CapabilityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CapabilityResponse {
		return vs[0].([]CapabilityResponse)[vs[1].(int)]
	}).(CapabilityResponseOutput)
}

// The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistration struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
}

// ClientRegistrationInput is an input type that accepts ClientRegistrationArgs and ClientRegistrationOutput values.
// You can construct a concrete instance of `ClientRegistrationInput` via:
//
//	ClientRegistrationArgs{...}
type ClientRegistrationInput interface {
	pulumi.Input

	ToClientRegistrationOutput() ClientRegistrationOutput
	ToClientRegistrationOutputWithContext(context.Context) ClientRegistrationOutput
}

// The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistrationArgs struct {
	// The Client ID of the app used for login.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName pulumi.StringPtrInput `pulumi:"clientSecretSettingName"`
}

func (ClientRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRegistration)(nil)).Elem()
}

func (i ClientRegistrationArgs) ToClientRegistrationOutput() ClientRegistrationOutput {
	return i.ToClientRegistrationOutputWithContext(context.Background())
}

func (i ClientRegistrationArgs) ToClientRegistrationOutputWithContext(ctx context.Context) ClientRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRegistrationOutput)
}

func (i ClientRegistrationArgs) ToClientRegistrationPtrOutput() ClientRegistrationPtrOutput {
	return i.ToClientRegistrationPtrOutputWithContext(context.Background())
}

func (i ClientRegistrationArgs) ToClientRegistrationPtrOutputWithContext(ctx context.Context) ClientRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRegistrationOutput).ToClientRegistrationPtrOutputWithContext(ctx)
}

// ClientRegistrationPtrInput is an input type that accepts ClientRegistrationArgs, ClientRegistrationPtr and ClientRegistrationPtrOutput values.
// You can construct a concrete instance of `ClientRegistrationPtrInput` via:
//
//	        ClientRegistrationArgs{...}
//
//	or:
//
//	        nil
type ClientRegistrationPtrInput interface {
	pulumi.Input

	ToClientRegistrationPtrOutput() ClientRegistrationPtrOutput
	ToClientRegistrationPtrOutputWithContext(context.Context) ClientRegistrationPtrOutput
}

type clientRegistrationPtrType ClientRegistrationArgs

func ClientRegistrationPtr(v *ClientRegistrationArgs) ClientRegistrationPtrInput {
	return (*clientRegistrationPtrType)(v)
}

func (*clientRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRegistration)(nil)).Elem()
}

func (i *clientRegistrationPtrType) ToClientRegistrationPtrOutput() ClientRegistrationPtrOutput {
	return i.ToClientRegistrationPtrOutputWithContext(context.Background())
}

func (i *clientRegistrationPtrType) ToClientRegistrationPtrOutputWithContext(ctx context.Context) ClientRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRegistrationPtrOutput)
}

// The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistrationOutput struct{ *pulumi.OutputState }

func (ClientRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRegistration)(nil)).Elem()
}

func (o ClientRegistrationOutput) ToClientRegistrationOutput() ClientRegistrationOutput {
	return o
}

func (o ClientRegistrationOutput) ToClientRegistrationOutputWithContext(ctx context.Context) ClientRegistrationOutput {
	return o
}

func (o ClientRegistrationOutput) ToClientRegistrationPtrOutput() ClientRegistrationPtrOutput {
	return o.ToClientRegistrationPtrOutputWithContext(context.Background())
}

func (o ClientRegistrationOutput) ToClientRegistrationPtrOutputWithContext(ctx context.Context) ClientRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientRegistration) *ClientRegistration {
		return &v
	}).(ClientRegistrationPtrOutput)
}

// The Client ID of the app used for login.
func (o ClientRegistrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientRegistration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o ClientRegistrationOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientRegistration) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

type ClientRegistrationPtrOutput struct{ *pulumi.OutputState }

func (ClientRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRegistration)(nil)).Elem()
}

func (o ClientRegistrationPtrOutput) ToClientRegistrationPtrOutput() ClientRegistrationPtrOutput {
	return o
}

func (o ClientRegistrationPtrOutput) ToClientRegistrationPtrOutputWithContext(ctx context.Context) ClientRegistrationPtrOutput {
	return o
}

func (o ClientRegistrationPtrOutput) Elem() ClientRegistrationOutput {
	return o.ApplyT(func(v *ClientRegistration) ClientRegistration {
		if v != nil {
			return *v
		}
		var ret ClientRegistration
		return ret
	}).(ClientRegistrationOutput)
}

// The Client ID of the app used for login.
func (o ClientRegistrationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o ClientRegistrationPtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistrationResponse struct {
	// The Client ID of the app used for login.
	ClientId *string `pulumi:"clientId"`
	// The app setting name that contains the client secret.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
}

// The configuration settings of the app registration for providers that have client ids and client secrets
type ClientRegistrationResponseOutput struct{ *pulumi.OutputState }

func (ClientRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRegistrationResponse)(nil)).Elem()
}

func (o ClientRegistrationResponseOutput) ToClientRegistrationResponseOutput() ClientRegistrationResponseOutput {
	return o
}

func (o ClientRegistrationResponseOutput) ToClientRegistrationResponseOutputWithContext(ctx context.Context) ClientRegistrationResponseOutput {
	return o
}

// The Client ID of the app used for login.
func (o ClientRegistrationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientRegistrationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o ClientRegistrationResponseOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientRegistrationResponse) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

type ClientRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (ClientRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRegistrationResponse)(nil)).Elem()
}

func (o ClientRegistrationResponsePtrOutput) ToClientRegistrationResponsePtrOutput() ClientRegistrationResponsePtrOutput {
	return o
}

func (o ClientRegistrationResponsePtrOutput) ToClientRegistrationResponsePtrOutputWithContext(ctx context.Context) ClientRegistrationResponsePtrOutput {
	return o
}

func (o ClientRegistrationResponsePtrOutput) Elem() ClientRegistrationResponseOutput {
	return o.ApplyT(func(v *ClientRegistrationResponse) ClientRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret ClientRegistrationResponse
		return ret
	}).(ClientRegistrationResponseOutput)
}

// The Client ID of the app used for login.
func (o ClientRegistrationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the client secret.
func (o ClientRegistrationResponsePtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// Information needed for cloning operation.
type CloningInfo struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides map[string]string `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames *bool `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl *bool `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing *bool `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId *string `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment *string `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite *bool `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId string `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation *string `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId *string `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName *string `pulumi:"trafficManagerProfileName"`
}

// CloningInfoInput is an input type that accepts CloningInfoArgs and CloningInfoOutput values.
// You can construct a concrete instance of `CloningInfoInput` via:
//
//	CloningInfoArgs{...}
type CloningInfoInput interface {
	pulumi.Input

	ToCloningInfoOutput() CloningInfoOutput
	ToCloningInfoOutputWithContext(context.Context) CloningInfoOutput
}

// Information needed for cloning operation.
type CloningInfoArgs struct {
	// Application setting overrides for cloned app. If specified, these settings override the settings cloned
	// from source app. Otherwise, application settings from source app are retained.
	AppSettingsOverrides pulumi.StringMapInput `pulumi:"appSettingsOverrides"`
	// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
	CloneCustomHostNames pulumi.BoolPtrInput `pulumi:"cloneCustomHostNames"`
	// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
	CloneSourceControl pulumi.BoolPtrInput `pulumi:"cloneSourceControl"`
	// <code>true</code> to configure load balancing for source and destination app.
	ConfigureLoadBalancing pulumi.BoolPtrInput `pulumi:"configureLoadBalancing"`
	// Correlation ID of cloning operation. This ID ties multiple cloning operations
	// together to use the same snapshot.
	CorrelationId pulumi.StringPtrInput `pulumi:"correlationId"`
	// App Service Environment.
	HostingEnvironment pulumi.StringPtrInput `pulumi:"hostingEnvironment"`
	// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
	Overwrite pulumi.BoolPtrInput `pulumi:"overwrite"`
	// ARM resource ID of the source app. App resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
	SourceWebAppId pulumi.StringInput `pulumi:"sourceWebAppId"`
	// Location of source app ex: West US or North Europe
	SourceWebAppLocation pulumi.StringPtrInput `pulumi:"sourceWebAppLocation"`
	// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
	// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
	TrafficManagerProfileId pulumi.StringPtrInput `pulumi:"trafficManagerProfileId"`
	// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
	TrafficManagerProfileName pulumi.StringPtrInput `pulumi:"trafficManagerProfileName"`
}

func (CloningInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (i CloningInfoArgs) ToCloningInfoOutput() CloningInfoOutput {
	return i.ToCloningInfoOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput)
}

func (i CloningInfoArgs) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i CloningInfoArgs) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoOutput).ToCloningInfoPtrOutputWithContext(ctx)
}

// CloningInfoPtrInput is an input type that accepts CloningInfoArgs, CloningInfoPtr and CloningInfoPtrOutput values.
// You can construct a concrete instance of `CloningInfoPtrInput` via:
//
//	        CloningInfoArgs{...}
//
//	or:
//
//	        nil
type CloningInfoPtrInput interface {
	pulumi.Input

	ToCloningInfoPtrOutput() CloningInfoPtrOutput
	ToCloningInfoPtrOutputWithContext(context.Context) CloningInfoPtrOutput
}

type cloningInfoPtrType CloningInfoArgs

func CloningInfoPtr(v *CloningInfoArgs) CloningInfoPtrInput {
	return (*cloningInfoPtrType)(v)
}

func (*cloningInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return i.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (i *cloningInfoPtrType) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloningInfoPtrOutput)
}

// Information needed for cloning operation.
type CloningInfoOutput struct{ *pulumi.OutputState }

func (CloningInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloningInfo)(nil)).Elem()
}

func (o CloningInfoOutput) ToCloningInfoOutput() CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoOutputWithContext(ctx context.Context) CloningInfoOutput {
	return o
}

func (o CloningInfoOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o.ToCloningInfoPtrOutputWithContext(context.Background())
}

func (o CloningInfoOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloningInfo) *CloningInfo {
		return &v
	}).(CloningInfoPtrOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v CloningInfo) map[string]string { return v.AppSettingsOverrides }).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneCustomHostNames }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.CloneSourceControl }).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.ConfigureLoadBalancing }).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.CorrelationId }).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.HostingEnvironment }).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloningInfo) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoOutput) SourceWebAppId() pulumi.StringOutput {
	return o.ApplyT(func(v CloningInfo) string { return v.SourceWebAppId }).(pulumi.StringOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.SourceWebAppLocation }).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileId }).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloningInfo) *string { return v.TrafficManagerProfileName }).(pulumi.StringPtrOutput)
}

type CloningInfoPtrOutput struct{ *pulumi.OutputState }

func (CloningInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloningInfo)(nil)).Elem()
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutput() CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) ToCloningInfoPtrOutputWithContext(ctx context.Context) CloningInfoPtrOutput {
	return o
}

func (o CloningInfoPtrOutput) Elem() CloningInfoOutput {
	return o.ApplyT(func(v *CloningInfo) CloningInfo {
		if v != nil {
			return *v
		}
		var ret CloningInfo
		return ret
	}).(CloningInfoOutput)
}

// Application setting overrides for cloned app. If specified, these settings override the settings cloned
// from source app. Otherwise, application settings from source app are retained.
func (o CloningInfoPtrOutput) AppSettingsOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloningInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.AppSettingsOverrides
	}).(pulumi.StringMapOutput)
}

// <code>true</code> to clone custom hostnames from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneCustomHostNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneCustomHostNames
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to clone source control from source app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) CloneSourceControl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.CloneSourceControl
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> to configure load balancing for source and destination app.
func (o CloningInfoPtrOutput) ConfigureLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.ConfigureLoadBalancing
	}).(pulumi.BoolPtrOutput)
}

// Correlation ID of cloning operation. This ID ties multiple cloning operations
// together to use the same snapshot.
func (o CloningInfoPtrOutput) CorrelationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationId
	}).(pulumi.StringPtrOutput)
}

// App Service Environment.
func (o CloningInfoPtrOutput) HostingEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.HostingEnvironment
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to overwrite destination app; otherwise, <code>false</code>.
func (o CloningInfoPtrOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Overwrite
	}).(pulumi.BoolPtrOutput)
}

// ARM resource ID of the source app. App resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName} for production slots and
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName} for other slots.
func (o CloningInfoPtrOutput) SourceWebAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return &v.SourceWebAppId
	}).(pulumi.StringPtrOutput)
}

// Location of source app ex: West US or North Europe
func (o CloningInfoPtrOutput) SourceWebAppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.SourceWebAppLocation
	}).(pulumi.StringPtrOutput)
}

// ARM resource ID of the Traffic Manager profile to use, if it exists. Traffic Manager resource ID is of the form
// /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}.
func (o CloningInfoPtrOutput) TrafficManagerProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileId
	}).(pulumi.StringPtrOutput)
}

// Name of Traffic Manager profile to create. This is only needed if Traffic Manager profile does not already exist.
func (o CloningInfoPtrOutput) TrafficManagerProfileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloningInfo) *string {
		if v == nil {
			return nil
		}
		return v.TrafficManagerProfileName
	}).(pulumi.StringPtrOutput)
}

// Non versioned Container App configuration properties that define the mutable settings of a Container app
type Configuration struct {
	// ActiveRevisionsMode controls how active revisions are handled for the Container app:
	// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
	ActiveRevisionsMode *string `pulumi:"activeRevisionsMode"`
	// Ingress configurations.
	Ingress *Ingress `pulumi:"ingress"`
	// Collection of private container registry credentials for containers used by the Container app
	Registries []RegistryCredentials `pulumi:"registries"`
	// Collection of secrets used by a Container app
	Secrets []Secret `pulumi:"secrets"`
}

// Defaults sets the appropriate defaults for Configuration
func (val *Configuration) Defaults() *Configuration {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Ingress = tmp.Ingress.Defaults()

	return &tmp
}

// ConfigurationInput is an input type that accepts ConfigurationArgs and ConfigurationOutput values.
// You can construct a concrete instance of `ConfigurationInput` via:
//
//	ConfigurationArgs{...}
type ConfigurationInput interface {
	pulumi.Input

	ToConfigurationOutput() ConfigurationOutput
	ToConfigurationOutputWithContext(context.Context) ConfigurationOutput
}

// Non versioned Container App configuration properties that define the mutable settings of a Container app
type ConfigurationArgs struct {
	// ActiveRevisionsMode controls how active revisions are handled for the Container app:
	// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
	ActiveRevisionsMode pulumi.StringPtrInput `pulumi:"activeRevisionsMode"`
	// Ingress configurations.
	Ingress IngressPtrInput `pulumi:"ingress"`
	// Collection of private container registry credentials for containers used by the Container app
	Registries RegistryCredentialsArrayInput `pulumi:"registries"`
	// Collection of secrets used by a Container app
	Secrets SecretArrayInput `pulumi:"secrets"`
}

// Defaults sets the appropriate defaults for ConfigurationArgs
func (val *ConfigurationArgs) Defaults() *ConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Configuration)(nil)).Elem()
}

func (i ConfigurationArgs) ToConfigurationOutput() ConfigurationOutput {
	return i.ToConfigurationOutputWithContext(context.Background())
}

func (i ConfigurationArgs) ToConfigurationOutputWithContext(ctx context.Context) ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationOutput)
}

func (i ConfigurationArgs) ToConfigurationPtrOutput() ConfigurationPtrOutput {
	return i.ToConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigurationArgs) ToConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationOutput).ToConfigurationPtrOutputWithContext(ctx)
}

// ConfigurationPtrInput is an input type that accepts ConfigurationArgs, ConfigurationPtr and ConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigurationPtrInput` via:
//
//	        ConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationPtrInput interface {
	pulumi.Input

	ToConfigurationPtrOutput() ConfigurationPtrOutput
	ToConfigurationPtrOutputWithContext(context.Context) ConfigurationPtrOutput
}

type configurationPtrType ConfigurationArgs

func ConfigurationPtr(v *ConfigurationArgs) ConfigurationPtrInput {
	return (*configurationPtrType)(v)
}

func (*configurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Configuration)(nil)).Elem()
}

func (i *configurationPtrType) ToConfigurationPtrOutput() ConfigurationPtrOutput {
	return i.ToConfigurationPtrOutputWithContext(context.Background())
}

func (i *configurationPtrType) ToConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationPtrOutput)
}

// Non versioned Container App configuration properties that define the mutable settings of a Container app
type ConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Configuration)(nil)).Elem()
}

func (o ConfigurationOutput) ToConfigurationOutput() ConfigurationOutput {
	return o
}

func (o ConfigurationOutput) ToConfigurationOutputWithContext(ctx context.Context) ConfigurationOutput {
	return o
}

func (o ConfigurationOutput) ToConfigurationPtrOutput() ConfigurationPtrOutput {
	return o.ToConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigurationOutput) ToConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Configuration) *Configuration {
		return &v
	}).(ConfigurationPtrOutput)
}

// ActiveRevisionsMode controls how active revisions are handled for the Container app:
// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
func (o ConfigurationOutput) ActiveRevisionsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Configuration) *string { return v.ActiveRevisionsMode }).(pulumi.StringPtrOutput)
}

// Ingress configurations.
func (o ConfigurationOutput) Ingress() IngressPtrOutput {
	return o.ApplyT(func(v Configuration) *Ingress { return v.Ingress }).(IngressPtrOutput)
}

// Collection of private container registry credentials for containers used by the Container app
func (o ConfigurationOutput) Registries() RegistryCredentialsArrayOutput {
	return o.ApplyT(func(v Configuration) []RegistryCredentials { return v.Registries }).(RegistryCredentialsArrayOutput)
}

// Collection of secrets used by a Container app
func (o ConfigurationOutput) Secrets() SecretArrayOutput {
	return o.ApplyT(func(v Configuration) []Secret { return v.Secrets }).(SecretArrayOutput)
}

type ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Configuration)(nil)).Elem()
}

func (o ConfigurationPtrOutput) ToConfigurationPtrOutput() ConfigurationPtrOutput {
	return o
}

func (o ConfigurationPtrOutput) ToConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationPtrOutput {
	return o
}

func (o ConfigurationPtrOutput) Elem() ConfigurationOutput {
	return o.ApplyT(func(v *Configuration) Configuration {
		if v != nil {
			return *v
		}
		var ret Configuration
		return ret
	}).(ConfigurationOutput)
}

// ActiveRevisionsMode controls how active revisions are handled for the Container app:
// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
func (o ConfigurationPtrOutput) ActiveRevisionsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ActiveRevisionsMode
	}).(pulumi.StringPtrOutput)
}

// Ingress configurations.
func (o ConfigurationPtrOutput) Ingress() IngressPtrOutput {
	return o.ApplyT(func(v *Configuration) *Ingress {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IngressPtrOutput)
}

// Collection of private container registry credentials for containers used by the Container app
func (o ConfigurationPtrOutput) Registries() RegistryCredentialsArrayOutput {
	return o.ApplyT(func(v *Configuration) []RegistryCredentials {
		if v == nil {
			return nil
		}
		return v.Registries
	}).(RegistryCredentialsArrayOutput)
}

// Collection of secrets used by a Container app
func (o ConfigurationPtrOutput) Secrets() SecretArrayOutput {
	return o.ApplyT(func(v *Configuration) []Secret {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretArrayOutput)
}

// Non versioned Container App configuration properties that define the mutable settings of a Container app
type ConfigurationResponse struct {
	// ActiveRevisionsMode controls how active revisions are handled for the Container app:
	// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
	ActiveRevisionsMode *string `pulumi:"activeRevisionsMode"`
	// Ingress configurations.
	Ingress *IngressResponse `pulumi:"ingress"`
	// Collection of private container registry credentials for containers used by the Container app
	Registries []RegistryCredentialsResponse `pulumi:"registries"`
	// Collection of secrets used by a Container app
	Secrets []SecretResponse `pulumi:"secrets"`
}

// Defaults sets the appropriate defaults for ConfigurationResponse
func (val *ConfigurationResponse) Defaults() *ConfigurationResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Ingress = tmp.Ingress.Defaults()

	return &tmp
}

// Non versioned Container App configuration properties that define the mutable settings of a Container app
type ConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutput() ConfigurationResponseOutput {
	return o
}

func (o ConfigurationResponseOutput) ToConfigurationResponseOutputWithContext(ctx context.Context) ConfigurationResponseOutput {
	return o
}

// ActiveRevisionsMode controls how active revisions are handled for the Container app:
// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
func (o ConfigurationResponseOutput) ActiveRevisionsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationResponse) *string { return v.ActiveRevisionsMode }).(pulumi.StringPtrOutput)
}

// Ingress configurations.
func (o ConfigurationResponseOutput) Ingress() IngressResponsePtrOutput {
	return o.ApplyT(func(v ConfigurationResponse) *IngressResponse { return v.Ingress }).(IngressResponsePtrOutput)
}

// Collection of private container registry credentials for containers used by the Container app
func (o ConfigurationResponseOutput) Registries() RegistryCredentialsResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []RegistryCredentialsResponse { return v.Registries }).(RegistryCredentialsResponseArrayOutput)
}

// Collection of secrets used by a Container app
func (o ConfigurationResponseOutput) Secrets() SecretResponseArrayOutput {
	return o.ApplyT(func(v ConfigurationResponse) []SecretResponse { return v.Secrets }).(SecretResponseArrayOutput)
}

type ConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationResponse)(nil)).Elem()
}

func (o ConfigurationResponsePtrOutput) ToConfigurationResponsePtrOutput() ConfigurationResponsePtrOutput {
	return o
}

func (o ConfigurationResponsePtrOutput) ToConfigurationResponsePtrOutputWithContext(ctx context.Context) ConfigurationResponsePtrOutput {
	return o
}

func (o ConfigurationResponsePtrOutput) Elem() ConfigurationResponseOutput {
	return o.ApplyT(func(v *ConfigurationResponse) ConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret ConfigurationResponse
		return ret
	}).(ConfigurationResponseOutput)
}

// ActiveRevisionsMode controls how active revisions are handled for the Container app:
// <list><item>Multiple: multiple revisions can be active. If no value if provided, this is the default</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode</item></list>
func (o ConfigurationResponsePtrOutput) ActiveRevisionsMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActiveRevisionsMode
	}).(pulumi.StringPtrOutput)
}

// Ingress configurations.
func (o ConfigurationResponsePtrOutput) Ingress() IngressResponsePtrOutput {
	return o.ApplyT(func(v *ConfigurationResponse) *IngressResponse {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(IngressResponsePtrOutput)
}

// Collection of private container registry credentials for containers used by the Container app
func (o ConfigurationResponsePtrOutput) Registries() RegistryCredentialsResponseArrayOutput {
	return o.ApplyT(func(v *ConfigurationResponse) []RegistryCredentialsResponse {
		if v == nil {
			return nil
		}
		return v.Registries
	}).(RegistryCredentialsResponseArrayOutput)
}

// Collection of secrets used by a Container app
func (o ConfigurationResponsePtrOutput) Secrets() SecretResponseArrayOutput {
	return o.ApplyT(func(v *ConfigurationResponse) []SecretResponse {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretResponseArrayOutput)
}

// Database connection string information.
type ConnStringInfo struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *ConnectionStringType `pulumi:"type"`
}

// ConnStringInfoInput is an input type that accepts ConnStringInfoArgs and ConnStringInfoOutput values.
// You can construct a concrete instance of `ConnStringInfoInput` via:
//
//	ConnStringInfoArgs{...}
type ConnStringInfoInput interface {
	pulumi.Input

	ToConnStringInfoOutput() ConnStringInfoOutput
	ToConnStringInfoOutputWithContext(context.Context) ConnStringInfoOutput
}

// Database connection string information.
type ConnStringInfoArgs struct {
	// Connection string value.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Name of connection string.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of database.
	Type ConnectionStringTypePtrInput `pulumi:"type"`
}

func (ConnStringInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArgs) ToConnStringInfoOutput() ConnStringInfoOutput {
	return i.ToConnStringInfoOutputWithContext(context.Background())
}

func (i ConnStringInfoArgs) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoOutput)
}

// ConnStringInfoArrayInput is an input type that accepts ConnStringInfoArray and ConnStringInfoArrayOutput values.
// You can construct a concrete instance of `ConnStringInfoArrayInput` via:
//
//	ConnStringInfoArray{ ConnStringInfoArgs{...} }
type ConnStringInfoArrayInput interface {
	pulumi.Input

	ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput
	ToConnStringInfoArrayOutputWithContext(context.Context) ConnStringInfoArrayOutput
}

type ConnStringInfoArray []ConnStringInfoInput

func (ConnStringInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return i.ToConnStringInfoArrayOutputWithContext(context.Background())
}

func (i ConnStringInfoArray) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringInfoArrayOutput)
}

// Database connection string information.
type ConnStringInfoOutput struct{ *pulumi.OutputState }

func (ConnStringInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoOutput) ToConnStringInfoOutput() ConnStringInfoOutput {
	return o
}

func (o ConnStringInfoOutput) ToConnStringInfoOutputWithContext(ctx context.Context) ConnStringInfoOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoOutput) Type() ConnectionStringTypePtrOutput {
	return o.ApplyT(func(v ConnStringInfo) *ConnectionStringType { return v.Type }).(ConnectionStringTypePtrOutput)
}

type ConnStringInfoArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfo)(nil)).Elem()
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutput() ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) ToConnStringInfoArrayOutputWithContext(ctx context.Context) ConnStringInfoArrayOutput {
	return o
}

func (o ConnStringInfoArrayOutput) Index(i pulumi.IntInput) ConnStringInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfo {
		return vs[0].([]ConnStringInfo)[vs[1].(int)]
	}).(ConnStringInfoOutput)
}

// Database connection string information.
type ConnStringInfoResponse struct {
	// Connection string value.
	ConnectionString *string `pulumi:"connectionString"`
	// Name of connection string.
	Name *string `pulumi:"name"`
	// Type of database.
	Type *string `pulumi:"type"`
}

// Database connection string information.
type ConnStringInfoResponseOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutput() ConnStringInfoResponseOutput {
	return o
}

func (o ConnStringInfoResponseOutput) ToConnStringInfoResponseOutputWithContext(ctx context.Context) ConnStringInfoResponseOutput {
	return o
}

// Connection string value.
func (o ConnStringInfoResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Name of connection string.
func (o ConnStringInfoResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of database.
func (o ConnStringInfoResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnStringInfoResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnStringInfoResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnStringInfoResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnStringInfoResponse)(nil)).Elem()
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutput() ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) ToConnStringInfoResponseArrayOutputWithContext(ctx context.Context) ConnStringInfoResponseArrayOutput {
	return o
}

func (o ConnStringInfoResponseArrayOutput) Index(i pulumi.IntInput) ConnStringInfoResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnStringInfoResponse {
		return vs[0].([]ConnStringInfoResponse)[vs[1].(int)]
	}).(ConnStringInfoResponseOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePair struct {
	// Type of database.
	Type ConnectionStringType `pulumi:"type"`
	// Value of pair.
	Value string `pulumi:"value"`
}

// ConnStringValueTypePairInput is an input type that accepts ConnStringValueTypePairArgs and ConnStringValueTypePairOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairInput` via:
//
//	ConnStringValueTypePairArgs{...}
type ConnStringValueTypePairInput interface {
	pulumi.Input

	ToConnStringValueTypePairOutput() ConnStringValueTypePairOutput
	ToConnStringValueTypePairOutputWithContext(context.Context) ConnStringValueTypePairOutput
}

// Database connection string value to type pair.
type ConnStringValueTypePairArgs struct {
	// Type of database.
	Type ConnectionStringTypeInput `pulumi:"type"`
	// Value of pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnStringValueTypePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePair)(nil)).Elem()
}

func (i ConnStringValueTypePairArgs) ToConnStringValueTypePairOutput() ConnStringValueTypePairOutput {
	return i.ToConnStringValueTypePairOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairArgs) ToConnStringValueTypePairOutputWithContext(ctx context.Context) ConnStringValueTypePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairOutput)
}

// ConnStringValueTypePairMapInput is an input type that accepts ConnStringValueTypePairMap and ConnStringValueTypePairMapOutput values.
// You can construct a concrete instance of `ConnStringValueTypePairMapInput` via:
//
//	ConnStringValueTypePairMap{ "key": ConnStringValueTypePairArgs{...} }
type ConnStringValueTypePairMapInput interface {
	pulumi.Input

	ToConnStringValueTypePairMapOutput() ConnStringValueTypePairMapOutput
	ToConnStringValueTypePairMapOutputWithContext(context.Context) ConnStringValueTypePairMapOutput
}

type ConnStringValueTypePairMap map[string]ConnStringValueTypePairInput

func (ConnStringValueTypePairMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePair)(nil)).Elem()
}

func (i ConnStringValueTypePairMap) ToConnStringValueTypePairMapOutput() ConnStringValueTypePairMapOutput {
	return i.ToConnStringValueTypePairMapOutputWithContext(context.Background())
}

func (i ConnStringValueTypePairMap) ToConnStringValueTypePairMapOutputWithContext(ctx context.Context) ConnStringValueTypePairMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnStringValueTypePairMapOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePair)(nil)).Elem()
}

func (o ConnStringValueTypePairOutput) ToConnStringValueTypePairOutput() ConnStringValueTypePairOutput {
	return o
}

func (o ConnStringValueTypePairOutput) ToConnStringValueTypePairOutputWithContext(ctx context.Context) ConnStringValueTypePairOutput {
	return o
}

// Type of database.
func (o ConnStringValueTypePairOutput) Type() ConnectionStringTypeOutput {
	return o.ApplyT(func(v ConnStringValueTypePair) ConnectionStringType { return v.Type }).(ConnectionStringTypeOutput)
}

// Value of pair.
func (o ConnStringValueTypePairOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePair) string { return v.Value }).(pulumi.StringOutput)
}

type ConnStringValueTypePairMapOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePair)(nil)).Elem()
}

func (o ConnStringValueTypePairMapOutput) ToConnStringValueTypePairMapOutput() ConnStringValueTypePairMapOutput {
	return o
}

func (o ConnStringValueTypePairMapOutput) ToConnStringValueTypePairMapOutputWithContext(ctx context.Context) ConnStringValueTypePairMapOutput {
	return o
}

func (o ConnStringValueTypePairMapOutput) MapIndex(k pulumi.StringInput) ConnStringValueTypePairOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnStringValueTypePair {
		return vs[0].(map[string]ConnStringValueTypePair)[vs[1].(string)]
	}).(ConnStringValueTypePairOutput)
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponse struct {
	// Type of database.
	Type string `pulumi:"type"`
	// Value of pair.
	Value string `pulumi:"value"`
}

// Database connection string value to type pair.
type ConnStringValueTypePairResponseOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutput() ConnStringValueTypePairResponseOutput {
	return o
}

func (o ConnStringValueTypePairResponseOutput) ToConnStringValueTypePairResponseOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseOutput {
	return o
}

// Type of database.
func (o ConnStringValueTypePairResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Value of pair.
func (o ConnStringValueTypePairResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnStringValueTypePairResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ConnStringValueTypePairResponseMapOutput struct{ *pulumi.OutputState }

func (ConnStringValueTypePairResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnStringValueTypePairResponse)(nil)).Elem()
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutput() ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) ToConnStringValueTypePairResponseMapOutputWithContext(ctx context.Context) ConnStringValueTypePairResponseMapOutput {
	return o
}

func (o ConnStringValueTypePairResponseMapOutput) MapIndex(k pulumi.StringInput) ConnStringValueTypePairResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnStringValueTypePairResponse {
		return vs[0].(map[string]ConnStringValueTypePairResponse)[vs[1].(string)]
	}).(ConnStringValueTypePairResponseOutput)
}

// Connection error
type ConnectionError struct {
	// Code of the status
	Code *string `pulumi:"code"`
	// Resource ETag
	Etag *string `pulumi:"etag"`
	// Resource location
	Location *string `pulumi:"location"`
	// Description of the status
	Message *string `pulumi:"message"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// ConnectionErrorInput is an input type that accepts ConnectionErrorArgs and ConnectionErrorOutput values.
// You can construct a concrete instance of `ConnectionErrorInput` via:
//
//	ConnectionErrorArgs{...}
type ConnectionErrorInput interface {
	pulumi.Input

	ToConnectionErrorOutput() ConnectionErrorOutput
	ToConnectionErrorOutputWithContext(context.Context) ConnectionErrorOutput
}

// Connection error
type ConnectionErrorArgs struct {
	// Code of the status
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Resource ETag
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Description of the status
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ConnectionErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionError)(nil)).Elem()
}

func (i ConnectionErrorArgs) ToConnectionErrorOutput() ConnectionErrorOutput {
	return i.ToConnectionErrorOutputWithContext(context.Background())
}

func (i ConnectionErrorArgs) ToConnectionErrorOutputWithContext(ctx context.Context) ConnectionErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorOutput)
}

func (i ConnectionErrorArgs) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return i.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (i ConnectionErrorArgs) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorOutput).ToConnectionErrorPtrOutputWithContext(ctx)
}

// ConnectionErrorPtrInput is an input type that accepts ConnectionErrorArgs, ConnectionErrorPtr and ConnectionErrorPtrOutput values.
// You can construct a concrete instance of `ConnectionErrorPtrInput` via:
//
//	        ConnectionErrorArgs{...}
//
//	or:
//
//	        nil
type ConnectionErrorPtrInput interface {
	pulumi.Input

	ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput
	ToConnectionErrorPtrOutputWithContext(context.Context) ConnectionErrorPtrOutput
}

type connectionErrorPtrType ConnectionErrorArgs

func ConnectionErrorPtr(v *ConnectionErrorArgs) ConnectionErrorPtrInput {
	return (*connectionErrorPtrType)(v)
}

func (*connectionErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionError)(nil)).Elem()
}

func (i *connectionErrorPtrType) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return i.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (i *connectionErrorPtrType) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionErrorPtrOutput)
}

// Connection error
type ConnectionErrorOutput struct{ *pulumi.OutputState }

func (ConnectionErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionError)(nil)).Elem()
}

func (o ConnectionErrorOutput) ToConnectionErrorOutput() ConnectionErrorOutput {
	return o
}

func (o ConnectionErrorOutput) ToConnectionErrorOutputWithContext(ctx context.Context) ConnectionErrorOutput {
	return o
}

func (o ConnectionErrorOutput) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return o.ToConnectionErrorPtrOutputWithContext(context.Background())
}

func (o ConnectionErrorOutput) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionError) *ConnectionError {
		return &v
	}).(ConnectionErrorPtrOutput)
}

// Code of the status
func (o ConnectionErrorOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionError) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionError) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ConnectionErrorPtrOutput struct{ *pulumi.OutputState }

func (ConnectionErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionError)(nil)).Elem()
}

func (o ConnectionErrorPtrOutput) ToConnectionErrorPtrOutput() ConnectionErrorPtrOutput {
	return o
}

func (o ConnectionErrorPtrOutput) ToConnectionErrorPtrOutputWithContext(ctx context.Context) ConnectionErrorPtrOutput {
	return o
}

func (o ConnectionErrorPtrOutput) Elem() ConnectionErrorOutput {
	return o.ApplyT(func(v *ConnectionError) ConnectionError {
		if v != nil {
			return *v
		}
		var ret ConnectionError
		return ret
	}).(ConnectionErrorOutput)
}

// Code of the status
func (o ConnectionErrorPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionError) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionError) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Connection error
type ConnectionErrorResponse struct {
	// Code of the status
	Code *string `pulumi:"code"`
	// Resource ETag
	Etag *string `pulumi:"etag"`
	// Resource id
	Id string `pulumi:"id"`
	// Resource location
	Location *string `pulumi:"location"`
	// Description of the status
	Message *string `pulumi:"message"`
	// Resource name
	Name string `pulumi:"name"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type string `pulumi:"type"`
}

// Connection error
type ConnectionErrorResponseOutput struct{ *pulumi.OutputState }

func (ConnectionErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionErrorResponse)(nil)).Elem()
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponseOutput() ConnectionErrorResponseOutput {
	return o
}

func (o ConnectionErrorResponseOutput) ToConnectionErrorResponseOutputWithContext(ctx context.Context) ConnectionErrorResponseOutput {
	return o
}

// Code of the status
func (o ConnectionErrorResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource id
func (o ConnectionErrorResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource location
func (o ConnectionErrorResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Resource name
func (o ConnectionErrorResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags
func (o ConnectionErrorResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type
func (o ConnectionErrorResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionErrorResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectionErrorResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionErrorResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionErrorResponse)(nil)).Elem()
}

func (o ConnectionErrorResponsePtrOutput) ToConnectionErrorResponsePtrOutput() ConnectionErrorResponsePtrOutput {
	return o
}

func (o ConnectionErrorResponsePtrOutput) ToConnectionErrorResponsePtrOutputWithContext(ctx context.Context) ConnectionErrorResponsePtrOutput {
	return o
}

func (o ConnectionErrorResponsePtrOutput) Elem() ConnectionErrorResponseOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) ConnectionErrorResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionErrorResponse
		return ret
	}).(ConnectionErrorResponseOutput)
}

// Code of the status
func (o ConnectionErrorResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Resource ETag
func (o ConnectionErrorResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource id
func (o ConnectionErrorResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location
func (o ConnectionErrorResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Description of the status
func (o ConnectionErrorResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Resource name
func (o ConnectionErrorResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource tags
func (o ConnectionErrorResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type
func (o ConnectionErrorResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionErrorResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectionGatewayDefinitionProperties struct {
	// The URI of the backend
	BackendUri *string `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation *ConnectionGatewayReference `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation []string `pulumi:"contactInformation"`
	// The gateway description
	Description *string `pulumi:"description"`
	// The gateway display name
	DisplayName *string `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName *string `pulumi:"machineName"`
	// The gateway status
	Status interface{} `pulumi:"status"`
}

// ConnectionGatewayDefinitionPropertiesInput is an input type that accepts ConnectionGatewayDefinitionPropertiesArgs and ConnectionGatewayDefinitionPropertiesOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionPropertiesInput` via:
//
//	ConnectionGatewayDefinitionPropertiesArgs{...}
type ConnectionGatewayDefinitionPropertiesInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput
	ToConnectionGatewayDefinitionPropertiesOutputWithContext(context.Context) ConnectionGatewayDefinitionPropertiesOutput
}

type ConnectionGatewayDefinitionPropertiesArgs struct {
	// The URI of the backend
	BackendUri pulumi.StringPtrInput `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation ConnectionGatewayReferencePtrInput `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation pulumi.StringArrayInput `pulumi:"contactInformation"`
	// The gateway description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The gateway display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName pulumi.StringPtrInput `pulumi:"machineName"`
	// The gateway status
	Status pulumi.Input `pulumi:"status"`
}

func (ConnectionGatewayDefinitionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput {
	return i.ToConnectionGatewayDefinitionPropertiesOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesOutput)
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayDefinitionPropertiesArgs) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesOutput).ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx)
}

// ConnectionGatewayDefinitionPropertiesPtrInput is an input type that accepts ConnectionGatewayDefinitionPropertiesArgs, ConnectionGatewayDefinitionPropertiesPtr and ConnectionGatewayDefinitionPropertiesPtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayDefinitionPropertiesPtrInput` via:
//
//	        ConnectionGatewayDefinitionPropertiesArgs{...}
//
//	or:
//
//	        nil
type ConnectionGatewayDefinitionPropertiesPtrInput interface {
	pulumi.Input

	ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput
	ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput
}

type connectionGatewayDefinitionPropertiesPtrType ConnectionGatewayDefinitionPropertiesArgs

func ConnectionGatewayDefinitionPropertiesPtr(v *ConnectionGatewayDefinitionPropertiesArgs) ConnectionGatewayDefinitionPropertiesPtrInput {
	return (*connectionGatewayDefinitionPropertiesPtrType)(v)
}

func (*connectionGatewayDefinitionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (i *connectionGatewayDefinitionPropertiesPtrType) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return i.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (i *connectionGatewayDefinitionPropertiesPtrType) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayDefinitionPropertiesPtrOutput)
}

type ConnectionGatewayDefinitionPropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesOutput() ConnectionGatewayDefinitionPropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o.ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayDefinitionPropertiesOutput) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionGatewayDefinitionProperties) *ConnectionGatewayDefinitionProperties {
		return &v
	}).(ConnectionGatewayDefinitionPropertiesPtrOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionPropertiesOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.BackendUri }).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionPropertiesOutput) ConnectionGatewayInstallation() ConnectionGatewayReferencePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *ConnectionGatewayReference {
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferencePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionPropertiesOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) []string { return v.ContactInformation }).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionPropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionPropertiesOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionPropertiesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionProperties) interface{} { return v.Status }).(pulumi.AnyOutput)
}

type ConnectionGatewayDefinitionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayDefinitionProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ToConnectionGatewayDefinitionPropertiesPtrOutput() ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ToConnectionGatewayDefinitionPropertiesPtrOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionPropertiesPtrOutput {
	return o
}

func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Elem() ConnectionGatewayDefinitionPropertiesOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) ConnectionGatewayDefinitionProperties {
		if v != nil {
			return *v
		}
		var ret ConnectionGatewayDefinitionProperties
		return ret
	}).(ConnectionGatewayDefinitionPropertiesOutput)
}

// The URI of the backend
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.BackendUri
	}).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ConnectionGatewayInstallation() ConnectionGatewayReferencePtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *ConnectionGatewayReference {
		if v == nil {
			return nil
		}
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferencePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) []string {
		if v == nil {
			return nil
		}
		return v.ContactInformation
	}).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) *string {
		if v == nil {
			return nil
		}
		return v.MachineName
	}).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionPropertiesPtrOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConnectionGatewayDefinitionProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.AnyOutput)
}

type ConnectionGatewayDefinitionResponseProperties struct {
	// The URI of the backend
	BackendUri *string `pulumi:"backendUri"`
	// The gateway installation reference
	ConnectionGatewayInstallation *ConnectionGatewayReferenceResponse `pulumi:"connectionGatewayInstallation"`
	// The gateway admin
	ContactInformation []string `pulumi:"contactInformation"`
	// The gateway description
	Description *string `pulumi:"description"`
	// The gateway display name
	DisplayName *string `pulumi:"displayName"`
	// The machine name of the gateway
	MachineName *string `pulumi:"machineName"`
	// The gateway status
	Status interface{} `pulumi:"status"`
}

type ConnectionGatewayDefinitionResponsePropertiesOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayDefinitionResponsePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayDefinitionResponseProperties)(nil)).Elem()
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesOutput() ConnectionGatewayDefinitionResponsePropertiesOutput {
	return o
}

func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ToConnectionGatewayDefinitionResponsePropertiesOutputWithContext(ctx context.Context) ConnectionGatewayDefinitionResponsePropertiesOutput {
	return o
}

// The URI of the backend
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) BackendUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.BackendUri }).(pulumi.StringPtrOutput)
}

// The gateway installation reference
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ConnectionGatewayInstallation() ConnectionGatewayReferenceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *ConnectionGatewayReferenceResponse {
		return v.ConnectionGatewayInstallation
	}).(ConnectionGatewayReferenceResponsePtrOutput)
}

// The gateway admin
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) ContactInformation() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) []string { return v.ContactInformation }).(pulumi.StringArrayOutput)
}

// The gateway description
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The gateway display name
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The machine name of the gateway
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) MachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) *string { return v.MachineName }).(pulumi.StringPtrOutput)
}

// The gateway status
func (o ConnectionGatewayDefinitionResponsePropertiesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v ConnectionGatewayDefinitionResponseProperties) interface{} { return v.Status }).(pulumi.AnyOutput)
}

// The gateway installation reference
type ConnectionGatewayReference struct {
	// Resource reference id
	Id *string `pulumi:"id"`
	// Resource reference location
	Location *string `pulumi:"location"`
	// Resource reference name
	Name *string `pulumi:"name"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// ConnectionGatewayReferenceInput is an input type that accepts ConnectionGatewayReferenceArgs and ConnectionGatewayReferenceOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferenceInput` via:
//
//	ConnectionGatewayReferenceArgs{...}
type ConnectionGatewayReferenceInput interface {
	pulumi.Input

	ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput
	ToConnectionGatewayReferenceOutputWithContext(context.Context) ConnectionGatewayReferenceOutput
}

// The gateway installation reference
type ConnectionGatewayReferenceArgs struct {
	// Resource reference id
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource reference location
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource reference name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource reference type
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionGatewayReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReference)(nil)).Elem()
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput {
	return i.ToConnectionGatewayReferenceOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferenceOutputWithContext(ctx context.Context) ConnectionGatewayReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceOutput)
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return i.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (i ConnectionGatewayReferenceArgs) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferenceOutput).ToConnectionGatewayReferencePtrOutputWithContext(ctx)
}

// ConnectionGatewayReferencePtrInput is an input type that accepts ConnectionGatewayReferenceArgs, ConnectionGatewayReferencePtr and ConnectionGatewayReferencePtrOutput values.
// You can construct a concrete instance of `ConnectionGatewayReferencePtrInput` via:
//
//	        ConnectionGatewayReferenceArgs{...}
//
//	or:
//
//	        nil
type ConnectionGatewayReferencePtrInput interface {
	pulumi.Input

	ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput
	ToConnectionGatewayReferencePtrOutputWithContext(context.Context) ConnectionGatewayReferencePtrOutput
}

type connectionGatewayReferencePtrType ConnectionGatewayReferenceArgs

func ConnectionGatewayReferencePtr(v *ConnectionGatewayReferenceArgs) ConnectionGatewayReferencePtrInput {
	return (*connectionGatewayReferencePtrType)(v)
}

func (*connectionGatewayReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReference)(nil)).Elem()
}

func (i *connectionGatewayReferencePtrType) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return i.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (i *connectionGatewayReferencePtrType) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGatewayReferencePtrOutput)
}

// The gateway installation reference
type ConnectionGatewayReferenceOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReference)(nil)).Elem()
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferenceOutput() ConnectionGatewayReferenceOutput {
	return o
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferenceOutputWithContext(ctx context.Context) ConnectionGatewayReferenceOutput {
	return o
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return o.ToConnectionGatewayReferencePtrOutputWithContext(context.Background())
}

func (o ConnectionGatewayReferenceOutput) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionGatewayReference) *ConnectionGatewayReference {
		return &v
	}).(ConnectionGatewayReferencePtrOutput)
}

// Resource reference id
func (o ConnectionGatewayReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReference) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionGatewayReferencePtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReference)(nil)).Elem()
}

func (o ConnectionGatewayReferencePtrOutput) ToConnectionGatewayReferencePtrOutput() ConnectionGatewayReferencePtrOutput {
	return o
}

func (o ConnectionGatewayReferencePtrOutput) ToConnectionGatewayReferencePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferencePtrOutput {
	return o
}

func (o ConnectionGatewayReferencePtrOutput) Elem() ConnectionGatewayReferenceOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) ConnectionGatewayReference {
		if v != nil {
			return *v
		}
		var ret ConnectionGatewayReference
		return ret
	}).(ConnectionGatewayReferenceOutput)
}

// Resource reference id
func (o ConnectionGatewayReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferencePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferencePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReference) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The gateway installation reference
type ConnectionGatewayReferenceResponse struct {
	// Resource reference id
	Id *string `pulumi:"id"`
	// Resource reference location
	Location *string `pulumi:"location"`
	// Resource reference name
	Name *string `pulumi:"name"`
	// Resource reference type
	Type *string `pulumi:"type"`
}

// The gateway installation reference
type ConnectionGatewayReferenceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponseOutput() ConnectionGatewayReferenceResponseOutput {
	return o
}

func (o ConnectionGatewayReferenceResponseOutput) ToConnectionGatewayReferenceResponseOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponseOutput {
	return o
}

// Resource reference id
func (o ConnectionGatewayReferenceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionGatewayReferenceResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionGatewayReferenceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionGatewayReferenceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGatewayReferenceResponse)(nil)).Elem()
}

func (o ConnectionGatewayReferenceResponsePtrOutput) ToConnectionGatewayReferenceResponsePtrOutput() ConnectionGatewayReferenceResponsePtrOutput {
	return o
}

func (o ConnectionGatewayReferenceResponsePtrOutput) ToConnectionGatewayReferenceResponsePtrOutputWithContext(ctx context.Context) ConnectionGatewayReferenceResponsePtrOutput {
	return o
}

func (o ConnectionGatewayReferenceResponsePtrOutput) Elem() ConnectionGatewayReferenceResponseOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) ConnectionGatewayReferenceResponse {
		if v != nil {
			return *v
		}
		var ret ConnectionGatewayReferenceResponse
		return ret
	}).(ConnectionGatewayReferenceResponseOutput)
}

// Resource reference id
func (o ConnectionGatewayReferenceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource reference location
func (o ConnectionGatewayReferenceResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource reference name
func (o ConnectionGatewayReferenceResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource reference type
func (o ConnectionGatewayReferenceResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGatewayReferenceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Connection provider parameters
type ConnectionParameter struct {
	// OAuth settings for the connection provider
	OAuthSettings *ApiOAuthSettings `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type *ConnectionParameterType `pulumi:"type"`
}

// ConnectionParameterInput is an input type that accepts ConnectionParameterArgs and ConnectionParameterOutput values.
// You can construct a concrete instance of `ConnectionParameterInput` via:
//
//	ConnectionParameterArgs{...}
type ConnectionParameterInput interface {
	pulumi.Input

	ToConnectionParameterOutput() ConnectionParameterOutput
	ToConnectionParameterOutputWithContext(context.Context) ConnectionParameterOutput
}

// Connection provider parameters
type ConnectionParameterArgs struct {
	// OAuth settings for the connection provider
	OAuthSettings ApiOAuthSettingsPtrInput `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type ConnectionParameterTypePtrInput `pulumi:"type"`
}

func (ConnectionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterArgs) ToConnectionParameterOutput() ConnectionParameterOutput {
	return i.ToConnectionParameterOutputWithContext(context.Background())
}

func (i ConnectionParameterArgs) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterOutput)
}

// ConnectionParameterMapInput is an input type that accepts ConnectionParameterMap and ConnectionParameterMapOutput values.
// You can construct a concrete instance of `ConnectionParameterMapInput` via:
//
//	ConnectionParameterMap{ "key": ConnectionParameterArgs{...} }
type ConnectionParameterMapInput interface {
	pulumi.Input

	ToConnectionParameterMapOutput() ConnectionParameterMapOutput
	ToConnectionParameterMapOutputWithContext(context.Context) ConnectionParameterMapOutput
}

type ConnectionParameterMap map[string]ConnectionParameterInput

func (ConnectionParameterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterMap) ToConnectionParameterMapOutput() ConnectionParameterMapOutput {
	return i.ToConnectionParameterMapOutputWithContext(context.Background())
}

func (i ConnectionParameterMap) ToConnectionParameterMapOutputWithContext(ctx context.Context) ConnectionParameterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterMapOutput)
}

// Connection provider parameters
type ConnectionParameterOutput struct{ *pulumi.OutputState }

func (ConnectionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterOutput) ToConnectionParameterOutput() ConnectionParameterOutput {
	return o
}

func (o ConnectionParameterOutput) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return o
}

// OAuth settings for the connection provider
func (o ConnectionParameterOutput) OAuthSettings() ApiOAuthSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionParameter) *ApiOAuthSettings { return v.OAuthSettings }).(ApiOAuthSettingsPtrOutput)
}

// Type of the parameter
func (o ConnectionParameterOutput) Type() ConnectionParameterTypePtrOutput {
	return o.ApplyT(func(v ConnectionParameter) *ConnectionParameterType { return v.Type }).(ConnectionParameterTypePtrOutput)
}

type ConnectionParameterMapOutput struct{ *pulumi.OutputState }

func (ConnectionParameterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterMapOutput) ToConnectionParameterMapOutput() ConnectionParameterMapOutput {
	return o
}

func (o ConnectionParameterMapOutput) ToConnectionParameterMapOutputWithContext(ctx context.Context) ConnectionParameterMapOutput {
	return o
}

func (o ConnectionParameterMapOutput) MapIndex(k pulumi.StringInput) ConnectionParameterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnectionParameter {
		return vs[0].(map[string]ConnectionParameter)[vs[1].(string)]
	}).(ConnectionParameterOutput)
}

// Connection provider parameters
type ConnectionParameterResponse struct {
	// OAuth settings for the connection provider
	OAuthSettings *ApiOAuthSettingsResponse `pulumi:"oAuthSettings"`
	// Type of the parameter
	Type *string `pulumi:"type"`
}

// Connection provider parameters
type ConnectionParameterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionParameterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameterResponse)(nil)).Elem()
}

func (o ConnectionParameterResponseOutput) ToConnectionParameterResponseOutput() ConnectionParameterResponseOutput {
	return o
}

func (o ConnectionParameterResponseOutput) ToConnectionParameterResponseOutputWithContext(ctx context.Context) ConnectionParameterResponseOutput {
	return o
}

// OAuth settings for the connection provider
func (o ConnectionParameterResponseOutput) OAuthSettings() ApiOAuthSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConnectionParameterResponse) *ApiOAuthSettingsResponse { return v.OAuthSettings }).(ApiOAuthSettingsResponsePtrOutput)
}

// Type of the parameter
func (o ConnectionParameterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionParameterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionParameterResponseMapOutput struct{ *pulumi.OutputState }

func (ConnectionParameterResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ConnectionParameterResponse)(nil)).Elem()
}

func (o ConnectionParameterResponseMapOutput) ToConnectionParameterResponseMapOutput() ConnectionParameterResponseMapOutput {
	return o
}

func (o ConnectionParameterResponseMapOutput) ToConnectionParameterResponseMapOutputWithContext(ctx context.Context) ConnectionParameterResponseMapOutput {
	return o
}

func (o ConnectionParameterResponseMapOutput) MapIndex(k pulumi.StringInput) ConnectionParameterResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ConnectionParameterResponse {
		return vs[0].(map[string]ConnectionParameterResponse)[vs[1].(string)]
	}).(ConnectionParameterResponseOutput)
}

// Connection status
type ConnectionStatusDefinition struct {
	// Connection error
	Error *ConnectionError `pulumi:"error"`
	// The gateway status
	Status *string `pulumi:"status"`
	// Target of the error
	Target *string `pulumi:"target"`
}

// ConnectionStatusDefinitionInput is an input type that accepts ConnectionStatusDefinitionArgs and ConnectionStatusDefinitionOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionInput` via:
//
//	ConnectionStatusDefinitionArgs{...}
type ConnectionStatusDefinitionInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput
	ToConnectionStatusDefinitionOutputWithContext(context.Context) ConnectionStatusDefinitionOutput
}

// Connection status
type ConnectionStatusDefinitionArgs struct {
	// Connection error
	Error ConnectionErrorPtrInput `pulumi:"error"`
	// The gateway status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Target of the error
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ConnectionStatusDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinition)(nil)).Elem()
}

func (i ConnectionStatusDefinitionArgs) ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput {
	return i.ToConnectionStatusDefinitionOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionArgs) ToConnectionStatusDefinitionOutputWithContext(ctx context.Context) ConnectionStatusDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionOutput)
}

// ConnectionStatusDefinitionArrayInput is an input type that accepts ConnectionStatusDefinitionArray and ConnectionStatusDefinitionArrayOutput values.
// You can construct a concrete instance of `ConnectionStatusDefinitionArrayInput` via:
//
//	ConnectionStatusDefinitionArray{ ConnectionStatusDefinitionArgs{...} }
type ConnectionStatusDefinitionArrayInput interface {
	pulumi.Input

	ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput
	ToConnectionStatusDefinitionArrayOutputWithContext(context.Context) ConnectionStatusDefinitionArrayOutput
}

type ConnectionStatusDefinitionArray []ConnectionStatusDefinitionInput

func (ConnectionStatusDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinition)(nil)).Elem()
}

func (i ConnectionStatusDefinitionArray) ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput {
	return i.ToConnectionStatusDefinitionArrayOutputWithContext(context.Background())
}

func (i ConnectionStatusDefinitionArray) ToConnectionStatusDefinitionArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionStatusDefinitionArrayOutput)
}

// Connection status
type ConnectionStatusDefinitionOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinition)(nil)).Elem()
}

func (o ConnectionStatusDefinitionOutput) ToConnectionStatusDefinitionOutput() ConnectionStatusDefinitionOutput {
	return o
}

func (o ConnectionStatusDefinitionOutput) ToConnectionStatusDefinitionOutputWithContext(ctx context.Context) ConnectionStatusDefinitionOutput {
	return o
}

// Connection error
func (o ConnectionStatusDefinitionOutput) Error() ConnectionErrorPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *ConnectionError { return v.Error }).(ConnectionErrorPtrOutput)
}

// The gateway status
func (o ConnectionStatusDefinitionOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Target of the error
func (o ConnectionStatusDefinitionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinition) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ConnectionStatusDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinition)(nil)).Elem()
}

func (o ConnectionStatusDefinitionArrayOutput) ToConnectionStatusDefinitionArrayOutput() ConnectionStatusDefinitionArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionArrayOutput) ToConnectionStatusDefinitionArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionArrayOutput) Index(i pulumi.IntInput) ConnectionStatusDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionStatusDefinition {
		return vs[0].([]ConnectionStatusDefinition)[vs[1].(int)]
	}).(ConnectionStatusDefinitionOutput)
}

// Connection status
type ConnectionStatusDefinitionResponse struct {
	// Connection error
	Error *ConnectionErrorResponse `pulumi:"error"`
	// The gateway status
	Status *string `pulumi:"status"`
	// Target of the error
	Target *string `pulumi:"target"`
}

// Connection status
type ConnectionStatusDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (o ConnectionStatusDefinitionResponseOutput) ToConnectionStatusDefinitionResponseOutput() ConnectionStatusDefinitionResponseOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseOutput) ToConnectionStatusDefinitionResponseOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseOutput {
	return o
}

// Connection error
func (o ConnectionStatusDefinitionResponseOutput) Error() ConnectionErrorResponsePtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *ConnectionErrorResponse { return v.Error }).(ConnectionErrorResponsePtrOutput)
}

// The gateway status
func (o ConnectionStatusDefinitionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Target of the error
func (o ConnectionStatusDefinitionResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionStatusDefinitionResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ConnectionStatusDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionStatusDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionStatusDefinitionResponse)(nil)).Elem()
}

func (o ConnectionStatusDefinitionResponseArrayOutput) ToConnectionStatusDefinitionResponseArrayOutput() ConnectionStatusDefinitionResponseArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseArrayOutput) ToConnectionStatusDefinitionResponseArrayOutputWithContext(ctx context.Context) ConnectionStatusDefinitionResponseArrayOutput {
	return o
}

func (o ConnectionStatusDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ConnectionStatusDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionStatusDefinitionResponse {
		return vs[0].([]ConnectionStatusDefinitionResponse)[vs[1].(int)]
	}).(ConnectionStatusDefinitionResponseOutput)
}

// A consent link
type ConsentLinkDefinitionResponse struct {
	// Display name of the parameter in the connection provider's OAuth settings
	DisplayName *string `pulumi:"displayName"`
	// URI for first party login
	FirstPartyLoginUri *string `pulumi:"firstPartyLoginUri"`
	// URI for the consent link
	Link *string `pulumi:"link"`
	// Status of the link
	Status *string `pulumi:"status"`
}

// A consent link
type ConsentLinkDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ConsentLinkDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (o ConsentLinkDefinitionResponseOutput) ToConsentLinkDefinitionResponseOutput() ConsentLinkDefinitionResponseOutput {
	return o
}

func (o ConsentLinkDefinitionResponseOutput) ToConsentLinkDefinitionResponseOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseOutput {
	return o
}

// Display name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkDefinitionResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URI for first party login
func (o ConsentLinkDefinitionResponseOutput) FirstPartyLoginUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.FirstPartyLoginUri }).(pulumi.StringPtrOutput)
}

// URI for the consent link
func (o ConsentLinkDefinitionResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Status of the link
func (o ConsentLinkDefinitionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkDefinitionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ConsentLinkDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ConsentLinkDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkDefinitionResponse)(nil)).Elem()
}

func (o ConsentLinkDefinitionResponseArrayOutput) ToConsentLinkDefinitionResponseArrayOutput() ConsentLinkDefinitionResponseArrayOutput {
	return o
}

func (o ConsentLinkDefinitionResponseArrayOutput) ToConsentLinkDefinitionResponseArrayOutputWithContext(ctx context.Context) ConsentLinkDefinitionResponseArrayOutput {
	return o
}

func (o ConsentLinkDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ConsentLinkDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConsentLinkDefinitionResponse {
		return vs[0].([]ConsentLinkDefinitionResponse)[vs[1].(int)]
	}).(ConsentLinkDefinitionResponseOutput)
}

// Consent link definition
type ConsentLinkParameterDefinition struct {
	// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
	ObjectId *string `pulumi:"objectId"`
	// Name of the parameter in the connection provider's OAuth settings
	ParameterName *string `pulumi:"parameterName"`
	// Name of the parameter in the connection provider's OAuth settings
	RedirectUrl *string `pulumi:"redirectUrl"`
	// The tenant id
	TenantId *string `pulumi:"tenantId"`
}

// ConsentLinkParameterDefinitionInput is an input type that accepts ConsentLinkParameterDefinitionArgs and ConsentLinkParameterDefinitionOutput values.
// You can construct a concrete instance of `ConsentLinkParameterDefinitionInput` via:
//
//	ConsentLinkParameterDefinitionArgs{...}
type ConsentLinkParameterDefinitionInput interface {
	pulumi.Input

	ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput
	ToConsentLinkParameterDefinitionOutputWithContext(context.Context) ConsentLinkParameterDefinitionOutput
}

// Consent link definition
type ConsentLinkParameterDefinitionArgs struct {
	// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
	ObjectId pulumi.StringPtrInput `pulumi:"objectId"`
	// Name of the parameter in the connection provider's OAuth settings
	ParameterName pulumi.StringPtrInput `pulumi:"parameterName"`
	// Name of the parameter in the connection provider's OAuth settings
	RedirectUrl pulumi.StringPtrInput `pulumi:"redirectUrl"`
	// The tenant id
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ConsentLinkParameterDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkParameterDefinition)(nil)).Elem()
}

func (i ConsentLinkParameterDefinitionArgs) ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput {
	return i.ToConsentLinkParameterDefinitionOutputWithContext(context.Background())
}

func (i ConsentLinkParameterDefinitionArgs) ToConsentLinkParameterDefinitionOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkParameterDefinitionOutput)
}

// ConsentLinkParameterDefinitionArrayInput is an input type that accepts ConsentLinkParameterDefinitionArray and ConsentLinkParameterDefinitionArrayOutput values.
// You can construct a concrete instance of `ConsentLinkParameterDefinitionArrayInput` via:
//
//	ConsentLinkParameterDefinitionArray{ ConsentLinkParameterDefinitionArgs{...} }
type ConsentLinkParameterDefinitionArrayInput interface {
	pulumi.Input

	ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput
	ToConsentLinkParameterDefinitionArrayOutputWithContext(context.Context) ConsentLinkParameterDefinitionArrayOutput
}

type ConsentLinkParameterDefinitionArray []ConsentLinkParameterDefinitionInput

func (ConsentLinkParameterDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkParameterDefinition)(nil)).Elem()
}

func (i ConsentLinkParameterDefinitionArray) ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput {
	return i.ToConsentLinkParameterDefinitionArrayOutputWithContext(context.Background())
}

func (i ConsentLinkParameterDefinitionArray) ToConsentLinkParameterDefinitionArrayOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsentLinkParameterDefinitionArrayOutput)
}

// Consent link definition
type ConsentLinkParameterDefinitionOutput struct{ *pulumi.OutputState }

func (ConsentLinkParameterDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsentLinkParameterDefinition)(nil)).Elem()
}

func (o ConsentLinkParameterDefinitionOutput) ToConsentLinkParameterDefinitionOutput() ConsentLinkParameterDefinitionOutput {
	return o
}

func (o ConsentLinkParameterDefinitionOutput) ToConsentLinkParameterDefinitionOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionOutput {
	return o
}

// AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount
func (o ConsentLinkParameterDefinitionOutput) ObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.ObjectId }).(pulumi.StringPtrOutput)
}

// Name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkParameterDefinitionOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// Name of the parameter in the connection provider's OAuth settings
func (o ConsentLinkParameterDefinitionOutput) RedirectUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.RedirectUrl }).(pulumi.StringPtrOutput)
}

// The tenant id
func (o ConsentLinkParameterDefinitionOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsentLinkParameterDefinition) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ConsentLinkParameterDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ConsentLinkParameterDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConsentLinkParameterDefinition)(nil)).Elem()
}

func (o ConsentLinkParameterDefinitionArrayOutput) ToConsentLinkParameterDefinitionArrayOutput() ConsentLinkParameterDefinitionArrayOutput {
	return o
}

func (o ConsentLinkParameterDefinitionArrayOutput) ToConsentLinkParameterDefinitionArrayOutputWithContext(ctx context.Context) ConsentLinkParameterDefinitionArrayOutput {
	return o
}

func (o ConsentLinkParameterDefinitionArrayOutput) Index(i pulumi.IntInput) ConsentLinkParameterDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConsentLinkParameterDefinition {
		return vs[0].([]ConsentLinkParameterDefinition)[vs[1].(int)]
	}).(ConsentLinkParameterDefinitionOutput)
}

// Container App container definition.
type Container struct {
	// Container start command arguments.
	Args []string `pulumi:"args"`
	// Container start command.
	Command []string `pulumi:"command"`
	// Container environment variables.
	Env []EnvironmentVar `pulumi:"env"`
	// Container image tag.
	Image *string `pulumi:"image"`
	// Custom container name.
	Name *string `pulumi:"name"`
	// Container resource requirements.
	Resources *ContainerResources `pulumi:"resources"`
}

// ContainerInput is an input type that accepts ContainerArgs and ContainerOutput values.
// You can construct a concrete instance of `ContainerInput` via:
//
//	ContainerArgs{...}
type ContainerInput interface {
	pulumi.Input

	ToContainerOutput() ContainerOutput
	ToContainerOutputWithContext(context.Context) ContainerOutput
}

// Container App container definition.
type ContainerArgs struct {
	// Container start command arguments.
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Container start command.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// Container environment variables.
	Env EnvironmentVarArrayInput `pulumi:"env"`
	// Container image tag.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Custom container name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Container resource requirements.
	Resources ContainerResourcesPtrInput `pulumi:"resources"`
}

func (ContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (i ContainerArgs) ToContainerOutput() ContainerOutput {
	return i.ToContainerOutputWithContext(context.Background())
}

func (i ContainerArgs) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerOutput)
}

// ContainerArrayInput is an input type that accepts ContainerArray and ContainerArrayOutput values.
// You can construct a concrete instance of `ContainerArrayInput` via:
//
//	ContainerArray{ ContainerArgs{...} }
type ContainerArrayInput interface {
	pulumi.Input

	ToContainerArrayOutput() ContainerArrayOutput
	ToContainerArrayOutputWithContext(context.Context) ContainerArrayOutput
}

type ContainerArray []ContainerInput

func (ContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Container)(nil)).Elem()
}

func (i ContainerArray) ToContainerArrayOutput() ContainerArrayOutput {
	return i.ToContainerArrayOutputWithContext(context.Background())
}

func (i ContainerArray) ToContainerArrayOutputWithContext(ctx context.Context) ContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerArrayOutput)
}

// Container App container definition.
type ContainerOutput struct{ *pulumi.OutputState }

func (ContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Container)(nil)).Elem()
}

func (o ContainerOutput) ToContainerOutput() ContainerOutput {
	return o
}

func (o ContainerOutput) ToContainerOutputWithContext(ctx context.Context) ContainerOutput {
	return o
}

// Container start command arguments.
func (o ContainerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Container) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Container start command.
func (o ContainerOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Container) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// Container environment variables.
func (o ContainerOutput) Env() EnvironmentVarArrayOutput {
	return o.ApplyT(func(v Container) []EnvironmentVar { return v.Env }).(EnvironmentVarArrayOutput)
}

// Container image tag.
func (o ContainerOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Container) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Custom container name.
func (o ContainerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Container) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container resource requirements.
func (o ContainerOutput) Resources() ContainerResourcesPtrOutput {
	return o.ApplyT(func(v Container) *ContainerResources { return v.Resources }).(ContainerResourcesPtrOutput)
}

type ContainerArrayOutput struct{ *pulumi.OutputState }

func (ContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Container)(nil)).Elem()
}

func (o ContainerArrayOutput) ToContainerArrayOutput() ContainerArrayOutput {
	return o
}

func (o ContainerArrayOutput) ToContainerArrayOutputWithContext(ctx context.Context) ContainerArrayOutput {
	return o
}

func (o ContainerArrayOutput) Index(i pulumi.IntInput) ContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Container {
		return vs[0].([]Container)[vs[1].(int)]
	}).(ContainerOutput)
}

// Container App Secret.
type ContainerAppSecretResponse struct {
	// Secret Name.
	Name string `pulumi:"name"`
	// Secret Value.
	Value string `pulumi:"value"`
}

// Container App Secret.
type ContainerAppSecretResponseOutput struct{ *pulumi.OutputState }

func (ContainerAppSecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerAppSecretResponse)(nil)).Elem()
}

func (o ContainerAppSecretResponseOutput) ToContainerAppSecretResponseOutput() ContainerAppSecretResponseOutput {
	return o
}

func (o ContainerAppSecretResponseOutput) ToContainerAppSecretResponseOutputWithContext(ctx context.Context) ContainerAppSecretResponseOutput {
	return o
}

// Secret Name.
func (o ContainerAppSecretResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerAppSecretResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Secret Value.
func (o ContainerAppSecretResponseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerAppSecretResponse) string { return v.Value }).(pulumi.StringOutput)
}

type ContainerAppSecretResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerAppSecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerAppSecretResponse)(nil)).Elem()
}

func (o ContainerAppSecretResponseArrayOutput) ToContainerAppSecretResponseArrayOutput() ContainerAppSecretResponseArrayOutput {
	return o
}

func (o ContainerAppSecretResponseArrayOutput) ToContainerAppSecretResponseArrayOutputWithContext(ctx context.Context) ContainerAppSecretResponseArrayOutput {
	return o
}

func (o ContainerAppSecretResponseArrayOutput) Index(i pulumi.IntInput) ContainerAppSecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerAppSecretResponse {
		return vs[0].([]ContainerAppSecretResponse)[vs[1].(int)]
	}).(ContainerAppSecretResponseOutput)
}

// Container App container resource requirements.
type ContainerResources struct {
	// Required CPU in cores, e.g. 0.5
	Cpu *float64 `pulumi:"cpu"`
	// Required memory, e.g. "250Mb"
	Memory *string `pulumi:"memory"`
}

// ContainerResourcesInput is an input type that accepts ContainerResourcesArgs and ContainerResourcesOutput values.
// You can construct a concrete instance of `ContainerResourcesInput` via:
//
//	ContainerResourcesArgs{...}
type ContainerResourcesInput interface {
	pulumi.Input

	ToContainerResourcesOutput() ContainerResourcesOutput
	ToContainerResourcesOutputWithContext(context.Context) ContainerResourcesOutput
}

// Container App container resource requirements.
type ContainerResourcesArgs struct {
	// Required CPU in cores, e.g. 0.5
	Cpu pulumi.Float64PtrInput `pulumi:"cpu"`
	// Required memory, e.g. "250Mb"
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

func (ContainerResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResources)(nil)).Elem()
}

func (i ContainerResourcesArgs) ToContainerResourcesOutput() ContainerResourcesOutput {
	return i.ToContainerResourcesOutputWithContext(context.Background())
}

func (i ContainerResourcesArgs) ToContainerResourcesOutputWithContext(ctx context.Context) ContainerResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourcesOutput)
}

func (i ContainerResourcesArgs) ToContainerResourcesPtrOutput() ContainerResourcesPtrOutput {
	return i.ToContainerResourcesPtrOutputWithContext(context.Background())
}

func (i ContainerResourcesArgs) ToContainerResourcesPtrOutputWithContext(ctx context.Context) ContainerResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourcesOutput).ToContainerResourcesPtrOutputWithContext(ctx)
}

// ContainerResourcesPtrInput is an input type that accepts ContainerResourcesArgs, ContainerResourcesPtr and ContainerResourcesPtrOutput values.
// You can construct a concrete instance of `ContainerResourcesPtrInput` via:
//
//	        ContainerResourcesArgs{...}
//
//	or:
//
//	        nil
type ContainerResourcesPtrInput interface {
	pulumi.Input

	ToContainerResourcesPtrOutput() ContainerResourcesPtrOutput
	ToContainerResourcesPtrOutputWithContext(context.Context) ContainerResourcesPtrOutput
}

type containerResourcesPtrType ContainerResourcesArgs

func ContainerResourcesPtr(v *ContainerResourcesArgs) ContainerResourcesPtrInput {
	return (*containerResourcesPtrType)(v)
}

func (*containerResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResources)(nil)).Elem()
}

func (i *containerResourcesPtrType) ToContainerResourcesPtrOutput() ContainerResourcesPtrOutput {
	return i.ToContainerResourcesPtrOutputWithContext(context.Background())
}

func (i *containerResourcesPtrType) ToContainerResourcesPtrOutputWithContext(ctx context.Context) ContainerResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResourcesPtrOutput)
}

// Container App container resource requirements.
type ContainerResourcesOutput struct{ *pulumi.OutputState }

func (ContainerResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResources)(nil)).Elem()
}

func (o ContainerResourcesOutput) ToContainerResourcesOutput() ContainerResourcesOutput {
	return o
}

func (o ContainerResourcesOutput) ToContainerResourcesOutputWithContext(ctx context.Context) ContainerResourcesOutput {
	return o
}

func (o ContainerResourcesOutput) ToContainerResourcesPtrOutput() ContainerResourcesPtrOutput {
	return o.ToContainerResourcesPtrOutputWithContext(context.Background())
}

func (o ContainerResourcesOutput) ToContainerResourcesPtrOutputWithContext(ctx context.Context) ContainerResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerResources) *ContainerResources {
		return &v
	}).(ContainerResourcesPtrOutput)
}

// Required CPU in cores, e.g. 0.5
func (o ContainerResourcesOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResources) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// Required memory, e.g. "250Mb"
func (o ContainerResourcesOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResources) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ContainerResourcesPtrOutput struct{ *pulumi.OutputState }

func (ContainerResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResources)(nil)).Elem()
}

func (o ContainerResourcesPtrOutput) ToContainerResourcesPtrOutput() ContainerResourcesPtrOutput {
	return o
}

func (o ContainerResourcesPtrOutput) ToContainerResourcesPtrOutputWithContext(ctx context.Context) ContainerResourcesPtrOutput {
	return o
}

func (o ContainerResourcesPtrOutput) Elem() ContainerResourcesOutput {
	return o.ApplyT(func(v *ContainerResources) ContainerResources {
		if v != nil {
			return *v
		}
		var ret ContainerResources
		return ret
	}).(ContainerResourcesOutput)
}

// Required CPU in cores, e.g. 0.5
func (o ContainerResourcesPtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResources) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// Required memory, e.g. "250Mb"
func (o ContainerResourcesPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerResources) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Container App container resource requirements.
type ContainerResourcesResponse struct {
	// Required CPU in cores, e.g. 0.5
	Cpu *float64 `pulumi:"cpu"`
	// Required memory, e.g. "250Mb"
	Memory *string `pulumi:"memory"`
}

// Container App container resource requirements.
type ContainerResourcesResponseOutput struct{ *pulumi.OutputState }

func (ContainerResourcesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResourcesResponse)(nil)).Elem()
}

func (o ContainerResourcesResponseOutput) ToContainerResourcesResponseOutput() ContainerResourcesResponseOutput {
	return o
}

func (o ContainerResourcesResponseOutput) ToContainerResourcesResponseOutputWithContext(ctx context.Context) ContainerResourcesResponseOutput {
	return o
}

// Required CPU in cores, e.g. 0.5
func (o ContainerResourcesResponseOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ContainerResourcesResponse) *float64 { return v.Cpu }).(pulumi.Float64PtrOutput)
}

// Required memory, e.g. "250Mb"
func (o ContainerResourcesResponseOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResourcesResponse) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ContainerResourcesResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResourcesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResourcesResponse)(nil)).Elem()
}

func (o ContainerResourcesResponsePtrOutput) ToContainerResourcesResponsePtrOutput() ContainerResourcesResponsePtrOutput {
	return o
}

func (o ContainerResourcesResponsePtrOutput) ToContainerResourcesResponsePtrOutputWithContext(ctx context.Context) ContainerResourcesResponsePtrOutput {
	return o
}

func (o ContainerResourcesResponsePtrOutput) Elem() ContainerResourcesResponseOutput {
	return o.ApplyT(func(v *ContainerResourcesResponse) ContainerResourcesResponse {
		if v != nil {
			return *v
		}
		var ret ContainerResourcesResponse
		return ret
	}).(ContainerResourcesResponseOutput)
}

// Required CPU in cores, e.g. 0.5
func (o ContainerResourcesResponsePtrOutput) Cpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerResourcesResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.Float64PtrOutput)
}

// Required memory, e.g. "250Mb"
func (o ContainerResourcesResponsePtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerResourcesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

// Container App container definition.
type ContainerResponse struct {
	// Container start command arguments.
	Args []string `pulumi:"args"`
	// Container start command.
	Command []string `pulumi:"command"`
	// Container environment variables.
	Env []EnvironmentVarResponse `pulumi:"env"`
	// Container image tag.
	Image *string `pulumi:"image"`
	// Custom container name.
	Name *string `pulumi:"name"`
	// Container resource requirements.
	Resources *ContainerResourcesResponse `pulumi:"resources"`
}

// Container App container definition.
type ContainerResponseOutput struct{ *pulumi.OutputState }

func (ContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (o ContainerResponseOutput) ToContainerResponseOutput() ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return o
}

// Container start command arguments.
func (o ContainerResponseOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerResponse) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Container start command.
func (o ContainerResponseOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerResponse) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// Container environment variables.
func (o ContainerResponseOutput) Env() EnvironmentVarResponseArrayOutput {
	return o.ApplyT(func(v ContainerResponse) []EnvironmentVarResponse { return v.Env }).(EnvironmentVarResponseArrayOutput)
}

// Container image tag.
func (o ContainerResponseOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResponse) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Custom container name.
func (o ContainerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Container resource requirements.
func (o ContainerResponseOutput) Resources() ContainerResourcesResponsePtrOutput {
	return o.ApplyT(func(v ContainerResponse) *ContainerResourcesResponse { return v.Resources }).(ContainerResourcesResponsePtrOutput)
}

type ContainerResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerResponse)(nil)).Elem()
}

func (o ContainerResponseArrayOutput) ToContainerResponseArrayOutput() ContainerResponseArrayOutput {
	return o
}

func (o ContainerResponseArrayOutput) ToContainerResponseArrayOutputWithContext(ctx context.Context) ContainerResponseArrayOutput {
	return o
}

func (o ContainerResponseArrayOutput) Index(i pulumi.IntInput) ContainerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerResponse {
		return vs[0].([]ContainerResponse)[vs[1].(int)]
	}).(ContainerResponseOutput)
}

// The configuration settings of the session cookie's expiration.
type CookieExpiration struct {
	// The convention used when determining the session cookie's expiration.
	Convention *CookieExpirationConvention `pulumi:"convention"`
	// The time after the request is made when the session cookie should expire.
	TimeToExpiration *string `pulumi:"timeToExpiration"`
}

// CookieExpirationInput is an input type that accepts CookieExpirationArgs and CookieExpirationOutput values.
// You can construct a concrete instance of `CookieExpirationInput` via:
//
//	CookieExpirationArgs{...}
type CookieExpirationInput interface {
	pulumi.Input

	ToCookieExpirationOutput() CookieExpirationOutput
	ToCookieExpirationOutputWithContext(context.Context) CookieExpirationOutput
}

// The configuration settings of the session cookie's expiration.
type CookieExpirationArgs struct {
	// The convention used when determining the session cookie's expiration.
	Convention CookieExpirationConventionPtrInput `pulumi:"convention"`
	// The time after the request is made when the session cookie should expire.
	TimeToExpiration pulumi.StringPtrInput `pulumi:"timeToExpiration"`
}

func (CookieExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpiration)(nil)).Elem()
}

func (i CookieExpirationArgs) ToCookieExpirationOutput() CookieExpirationOutput {
	return i.ToCookieExpirationOutputWithContext(context.Background())
}

func (i CookieExpirationArgs) ToCookieExpirationOutputWithContext(ctx context.Context) CookieExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookieExpirationOutput)
}

func (i CookieExpirationArgs) ToCookieExpirationPtrOutput() CookieExpirationPtrOutput {
	return i.ToCookieExpirationPtrOutputWithContext(context.Background())
}

func (i CookieExpirationArgs) ToCookieExpirationPtrOutputWithContext(ctx context.Context) CookieExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookieExpirationOutput).ToCookieExpirationPtrOutputWithContext(ctx)
}

// CookieExpirationPtrInput is an input type that accepts CookieExpirationArgs, CookieExpirationPtr and CookieExpirationPtrOutput values.
// You can construct a concrete instance of `CookieExpirationPtrInput` via:
//
//	        CookieExpirationArgs{...}
//
//	or:
//
//	        nil
type CookieExpirationPtrInput interface {
	pulumi.Input

	ToCookieExpirationPtrOutput() CookieExpirationPtrOutput
	ToCookieExpirationPtrOutputWithContext(context.Context) CookieExpirationPtrOutput
}

type cookieExpirationPtrType CookieExpirationArgs

func CookieExpirationPtr(v *CookieExpirationArgs) CookieExpirationPtrInput {
	return (*cookieExpirationPtrType)(v)
}

func (*cookieExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CookieExpiration)(nil)).Elem()
}

func (i *cookieExpirationPtrType) ToCookieExpirationPtrOutput() CookieExpirationPtrOutput {
	return i.ToCookieExpirationPtrOutputWithContext(context.Background())
}

func (i *cookieExpirationPtrType) ToCookieExpirationPtrOutputWithContext(ctx context.Context) CookieExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CookieExpirationPtrOutput)
}

// The configuration settings of the session cookie's expiration.
type CookieExpirationOutput struct{ *pulumi.OutputState }

func (CookieExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpiration)(nil)).Elem()
}

func (o CookieExpirationOutput) ToCookieExpirationOutput() CookieExpirationOutput {
	return o
}

func (o CookieExpirationOutput) ToCookieExpirationOutputWithContext(ctx context.Context) CookieExpirationOutput {
	return o
}

func (o CookieExpirationOutput) ToCookieExpirationPtrOutput() CookieExpirationPtrOutput {
	return o.ToCookieExpirationPtrOutputWithContext(context.Background())
}

func (o CookieExpirationOutput) ToCookieExpirationPtrOutputWithContext(ctx context.Context) CookieExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CookieExpiration) *CookieExpiration {
		return &v
	}).(CookieExpirationPtrOutput)
}

// The convention used when determining the session cookie's expiration.
func (o CookieExpirationOutput) Convention() CookieExpirationConventionPtrOutput {
	return o.ApplyT(func(v CookieExpiration) *CookieExpirationConvention { return v.Convention }).(CookieExpirationConventionPtrOutput)
}

// The time after the request is made when the session cookie should expire.
func (o CookieExpirationOutput) TimeToExpiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookieExpiration) *string { return v.TimeToExpiration }).(pulumi.StringPtrOutput)
}

type CookieExpirationPtrOutput struct{ *pulumi.OutputState }

func (CookieExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CookieExpiration)(nil)).Elem()
}

func (o CookieExpirationPtrOutput) ToCookieExpirationPtrOutput() CookieExpirationPtrOutput {
	return o
}

func (o CookieExpirationPtrOutput) ToCookieExpirationPtrOutputWithContext(ctx context.Context) CookieExpirationPtrOutput {
	return o
}

func (o CookieExpirationPtrOutput) Elem() CookieExpirationOutput {
	return o.ApplyT(func(v *CookieExpiration) CookieExpiration {
		if v != nil {
			return *v
		}
		var ret CookieExpiration
		return ret
	}).(CookieExpirationOutput)
}

// The convention used when determining the session cookie's expiration.
func (o CookieExpirationPtrOutput) Convention() CookieExpirationConventionPtrOutput {
	return o.ApplyT(func(v *CookieExpiration) *CookieExpirationConvention {
		if v == nil {
			return nil
		}
		return v.Convention
	}).(CookieExpirationConventionPtrOutput)
}

// The time after the request is made when the session cookie should expire.
func (o CookieExpirationPtrOutput) TimeToExpiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CookieExpiration) *string {
		if v == nil {
			return nil
		}
		return v.TimeToExpiration
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the session cookie's expiration.
type CookieExpirationResponse struct {
	// The convention used when determining the session cookie's expiration.
	Convention *string `pulumi:"convention"`
	// The time after the request is made when the session cookie should expire.
	TimeToExpiration *string `pulumi:"timeToExpiration"`
}

// The configuration settings of the session cookie's expiration.
type CookieExpirationResponseOutput struct{ *pulumi.OutputState }

func (CookieExpirationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CookieExpirationResponse)(nil)).Elem()
}

func (o CookieExpirationResponseOutput) ToCookieExpirationResponseOutput() CookieExpirationResponseOutput {
	return o
}

func (o CookieExpirationResponseOutput) ToCookieExpirationResponseOutputWithContext(ctx context.Context) CookieExpirationResponseOutput {
	return o
}

// The convention used when determining the session cookie's expiration.
func (o CookieExpirationResponseOutput) Convention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookieExpirationResponse) *string { return v.Convention }).(pulumi.StringPtrOutput)
}

// The time after the request is made when the session cookie should expire.
func (o CookieExpirationResponseOutput) TimeToExpiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CookieExpirationResponse) *string { return v.TimeToExpiration }).(pulumi.StringPtrOutput)
}

type CookieExpirationResponsePtrOutput struct{ *pulumi.OutputState }

func (CookieExpirationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CookieExpirationResponse)(nil)).Elem()
}

func (o CookieExpirationResponsePtrOutput) ToCookieExpirationResponsePtrOutput() CookieExpirationResponsePtrOutput {
	return o
}

func (o CookieExpirationResponsePtrOutput) ToCookieExpirationResponsePtrOutputWithContext(ctx context.Context) CookieExpirationResponsePtrOutput {
	return o
}

func (o CookieExpirationResponsePtrOutput) Elem() CookieExpirationResponseOutput {
	return o.ApplyT(func(v *CookieExpirationResponse) CookieExpirationResponse {
		if v != nil {
			return *v
		}
		var ret CookieExpirationResponse
		return ret
	}).(CookieExpirationResponseOutput)
}

// The convention used when determining the session cookie's expiration.
func (o CookieExpirationResponsePtrOutput) Convention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CookieExpirationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Convention
	}).(pulumi.StringPtrOutput)
}

// The time after the request is made when the session cookie should expire.
func (o CookieExpirationResponsePtrOutput) TimeToExpiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CookieExpirationResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeToExpiration
	}).(pulumi.StringPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettings struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// CorsSettingsInput is an input type that accepts CorsSettingsArgs and CorsSettingsOutput values.
// You can construct a concrete instance of `CorsSettingsInput` via:
//
//	CorsSettingsArgs{...}
type CorsSettingsInput interface {
	pulumi.Input

	ToCorsSettingsOutput() CorsSettingsOutput
	ToCorsSettingsOutputWithContext(context.Context) CorsSettingsOutput
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsArgs struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (CorsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (i CorsSettingsArgs) ToCorsSettingsOutput() CorsSettingsOutput {
	return i.ToCorsSettingsOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput)
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i CorsSettingsArgs) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsOutput).ToCorsSettingsPtrOutputWithContext(ctx)
}

// CorsSettingsPtrInput is an input type that accepts CorsSettingsArgs, CorsSettingsPtr and CorsSettingsPtrOutput values.
// You can construct a concrete instance of `CorsSettingsPtrInput` via:
//
//	        CorsSettingsArgs{...}
//
//	or:
//
//	        nil
type CorsSettingsPtrInput interface {
	pulumi.Input

	ToCorsSettingsPtrOutput() CorsSettingsPtrOutput
	ToCorsSettingsPtrOutputWithContext(context.Context) CorsSettingsPtrOutput
}

type corsSettingsPtrType CorsSettingsArgs

func CorsSettingsPtr(v *CorsSettingsArgs) CorsSettingsPtrInput {
	return (*corsSettingsPtrType)(v)
}

func (*corsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return i.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (i *corsSettingsPtrType) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CorsSettingsPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsOutput struct{ *pulumi.OutputState }

func (CorsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettings)(nil)).Elem()
}

func (o CorsSettingsOutput) ToCorsSettingsOutput() CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsOutputWithContext(ctx context.Context) CorsSettingsOutput {
	return o
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o.ToCorsSettingsPtrOutputWithContext(context.Background())
}

func (o CorsSettingsOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CorsSettings) *CorsSettings {
		return &v
	}).(CorsSettingsPtrOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettings) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettings) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsPtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettings)(nil)).Elem()
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutput() CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) ToCorsSettingsPtrOutputWithContext(ctx context.Context) CorsSettingsPtrOutput {
	return o
}

func (o CorsSettingsPtrOutput) Elem() CorsSettingsOutput {
	return o.ApplyT(func(v *CorsSettings) CorsSettings {
		if v != nil {
			return *v
		}
		var ret CorsSettings
		return ret
	}).(CorsSettingsOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponse struct {
	// Gets or sets the list of origins that should be allowed to make cross-origin
	// calls (for example: http://example.com:12345). Use "*" to allow all.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Gets or sets whether CORS requests with credentials are allowed. See
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
	// for more details.
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// Cross-Origin Resource Sharing (CORS) settings for the app.
type CorsSettingsResponseOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutput() CorsSettingsResponseOutput {
	return o
}

func (o CorsSettingsResponseOutput) ToCorsSettingsResponseOutputWithContext(ctx context.Context) CorsSettingsResponseOutput {
	return o
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponseOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CorsSettingsResponse) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponseOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CorsSettingsResponse) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type CorsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (CorsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CorsSettingsResponse)(nil)).Elem()
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutput() CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) ToCorsSettingsResponsePtrOutputWithContext(ctx context.Context) CorsSettingsResponsePtrOutput {
	return o
}

func (o CorsSettingsResponsePtrOutput) Elem() CorsSettingsResponseOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) CorsSettingsResponse {
		if v != nil {
			return *v
		}
		var ret CorsSettingsResponse
		return ret
	}).(CorsSettingsResponseOutput)
}

// Gets or sets the list of origins that should be allowed to make cross-origin
// calls (for example: http://example.com:12345). Use "*" to allow all.
func (o CorsSettingsResponsePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Gets or sets whether CORS requests with credentials are allowed. See
// https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Requests_with_credentials
// for more details.
func (o CorsSettingsResponsePtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CorsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinition struct {
	// API Definitions
	ApiDefinitions *ApiResourceDefinitions `pulumi:"apiDefinitions"`
	// The API type
	ApiType *string `pulumi:"apiType"`
	// The API backend service
	BackendService *ApiResourceBackendService `pulumi:"backendService"`
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters map[string]ConnectionParameter `pulumi:"connectionParameters"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls []string `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition *WsdlDefinition `pulumi:"wsdlDefinition"`
}

// CustomApiPropertiesDefinitionInput is an input type that accepts CustomApiPropertiesDefinitionArgs and CustomApiPropertiesDefinitionOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionInput` via:
//
//	CustomApiPropertiesDefinitionArgs{...}
type CustomApiPropertiesDefinitionInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput
	ToCustomApiPropertiesDefinitionOutputWithContext(context.Context) CustomApiPropertiesDefinitionOutput
}

// Custom API properties
type CustomApiPropertiesDefinitionArgs struct {
	// API Definitions
	ApiDefinitions ApiResourceDefinitionsPtrInput `pulumi:"apiDefinitions"`
	// The API type
	ApiType pulumi.StringPtrInput `pulumi:"apiType"`
	// The API backend service
	BackendService ApiResourceBackendServicePtrInput `pulumi:"backendService"`
	// Brand color
	BrandColor pulumi.StringPtrInput `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities pulumi.StringArrayInput `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters ConnectionParameterMapInput `pulumi:"connectionParameters"`
	// The custom API description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The icon URI
	IconUri pulumi.StringPtrInput `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls pulumi.StringArrayInput `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger pulumi.Input `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition WsdlDefinitionPtrInput `pulumi:"wsdlDefinition"`
}

func (CustomApiPropertiesDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinition)(nil)).Elem()
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput {
	return i.ToCustomApiPropertiesDefinitionOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionOutput)
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return i.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (i CustomApiPropertiesDefinitionArgs) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionOutput).ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx)
}

// CustomApiPropertiesDefinitionPtrInput is an input type that accepts CustomApiPropertiesDefinitionArgs, CustomApiPropertiesDefinitionPtr and CustomApiPropertiesDefinitionPtrOutput values.
// You can construct a concrete instance of `CustomApiPropertiesDefinitionPtrInput` via:
//
//	        CustomApiPropertiesDefinitionArgs{...}
//
//	or:
//
//	        nil
type CustomApiPropertiesDefinitionPtrInput interface {
	pulumi.Input

	ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput
	ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Context) CustomApiPropertiesDefinitionPtrOutput
}

type customApiPropertiesDefinitionPtrType CustomApiPropertiesDefinitionArgs

func CustomApiPropertiesDefinitionPtr(v *CustomApiPropertiesDefinitionArgs) CustomApiPropertiesDefinitionPtrInput {
	return (*customApiPropertiesDefinitionPtrType)(v)
}

func (*customApiPropertiesDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinition)(nil)).Elem()
}

func (i *customApiPropertiesDefinitionPtrType) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return i.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (i *customApiPropertiesDefinitionPtrType) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomApiPropertiesDefinitionPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinitionOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinition)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionOutput() CustomApiPropertiesDefinitionOutput {
	return o
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionOutput {
	return o
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return o.ToCustomApiPropertiesDefinitionPtrOutputWithContext(context.Background())
}

func (o CustomApiPropertiesDefinitionOutput) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomApiPropertiesDefinition) *CustomApiPropertiesDefinition {
		return &v
	}).(CustomApiPropertiesDefinitionPtrOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionOutput) ApiDefinitions() ApiResourceDefinitionsPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *ApiResourceDefinitions { return v.ApiDefinitions }).(ApiResourceDefinitionsPtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionOutput) BackendService() ApiResourceBackendServicePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *ApiResourceBackendService { return v.BackendService }).(ApiResourceBackendServicePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionOutput) ConnectionParameters() ConnectionParameterMapOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) map[string]ConnectionParameter { return v.ConnectionParameters }).(ConnectionParameterMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) []string { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionOutput) WsdlDefinition() WsdlDefinitionPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinition) *WsdlDefinition { return v.WsdlDefinition }).(WsdlDefinitionPtrOutput)
}

type CustomApiPropertiesDefinitionPtrOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomApiPropertiesDefinition)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionPtrOutput) ToCustomApiPropertiesDefinitionPtrOutput() CustomApiPropertiesDefinitionPtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionPtrOutput) ToCustomApiPropertiesDefinitionPtrOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionPtrOutput {
	return o
}

func (o CustomApiPropertiesDefinitionPtrOutput) Elem() CustomApiPropertiesDefinitionOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) CustomApiPropertiesDefinition {
		if v != nil {
			return *v
		}
		var ret CustomApiPropertiesDefinition
		return ret
	}).(CustomApiPropertiesDefinitionOutput)
}

// API Definitions
func (o CustomApiPropertiesDefinitionPtrOutput) ApiDefinitions() ApiResourceDefinitionsPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *ApiResourceDefinitions {
		if v == nil {
			return nil
		}
		return v.ApiDefinitions
	}).(ApiResourceDefinitionsPtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionPtrOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ApiType
	}).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionPtrOutput) BackendService() ApiResourceBackendServicePtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *ApiResourceBackendService {
		if v == nil {
			return nil
		}
		return v.BackendService
	}).(ApiResourceBackendServicePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionPtrOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BrandColor
	}).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionPtrOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionPtrOutput) ConnectionParameters() ConnectionParameterMapOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) map[string]ConnectionParameter {
		if v == nil {
			return nil
		}
		return v.ConnectionParameters
	}).(ConnectionParameterMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionPtrOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *string {
		if v == nil {
			return nil
		}
		return v.IconUri
	}).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionPtrOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) []string {
		if v == nil {
			return nil
		}
		return v.RuntimeUrls
	}).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionPtrOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) interface{} {
		if v == nil {
			return nil
		}
		return v.Swagger
	}).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionPtrOutput) WsdlDefinition() WsdlDefinitionPtrOutput {
	return o.ApplyT(func(v *CustomApiPropertiesDefinition) *WsdlDefinition {
		if v == nil {
			return nil
		}
		return v.WsdlDefinition
	}).(WsdlDefinitionPtrOutput)
}

// Custom API properties
type CustomApiPropertiesDefinitionResponse struct {
	// API Definitions
	ApiDefinitions *ApiResourceDefinitionsResponse `pulumi:"apiDefinitions"`
	// The API type
	ApiType *string `pulumi:"apiType"`
	// The API backend service
	BackendService *ApiResourceBackendServiceResponse `pulumi:"backendService"`
	// Brand color
	BrandColor *string `pulumi:"brandColor"`
	// The custom API capabilities
	Capabilities []string `pulumi:"capabilities"`
	// Connection parameters
	ConnectionParameters map[string]ConnectionParameterResponse `pulumi:"connectionParameters"`
	// The custom API description
	Description *string `pulumi:"description"`
	// The display name
	DisplayName *string `pulumi:"displayName"`
	// The icon URI
	IconUri *string `pulumi:"iconUri"`
	// Runtime URLs
	RuntimeUrls []string `pulumi:"runtimeUrls"`
	// The JSON representation of the swagger
	Swagger interface{} `pulumi:"swagger"`
	// The WSDL definition
	WsdlDefinition *WsdlDefinitionResponse `pulumi:"wsdlDefinition"`
}

// Custom API properties
type CustomApiPropertiesDefinitionResponseOutput struct{ *pulumi.OutputState }

func (CustomApiPropertiesDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomApiPropertiesDefinitionResponse)(nil)).Elem()
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponseOutput() CustomApiPropertiesDefinitionResponseOutput {
	return o
}

func (o CustomApiPropertiesDefinitionResponseOutput) ToCustomApiPropertiesDefinitionResponseOutputWithContext(ctx context.Context) CustomApiPropertiesDefinitionResponseOutput {
	return o
}

// API Definitions
func (o CustomApiPropertiesDefinitionResponseOutput) ApiDefinitions() ApiResourceDefinitionsResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *ApiResourceDefinitionsResponse { return v.ApiDefinitions }).(ApiResourceDefinitionsResponsePtrOutput)
}

// The API type
func (o CustomApiPropertiesDefinitionResponseOutput) ApiType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.ApiType }).(pulumi.StringPtrOutput)
}

// The API backend service
func (o CustomApiPropertiesDefinitionResponseOutput) BackendService() ApiResourceBackendServiceResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *ApiResourceBackendServiceResponse {
		return v.BackendService
	}).(ApiResourceBackendServiceResponsePtrOutput)
}

// Brand color
func (o CustomApiPropertiesDefinitionResponseOutput) BrandColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.BrandColor }).(pulumi.StringPtrOutput)
}

// The custom API capabilities
func (o CustomApiPropertiesDefinitionResponseOutput) Capabilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) []string { return v.Capabilities }).(pulumi.StringArrayOutput)
}

// Connection parameters
func (o CustomApiPropertiesDefinitionResponseOutput) ConnectionParameters() ConnectionParameterResponseMapOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) map[string]ConnectionParameterResponse {
		return v.ConnectionParameters
	}).(ConnectionParameterResponseMapOutput)
}

// The custom API description
func (o CustomApiPropertiesDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name
func (o CustomApiPropertiesDefinitionResponseOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The icon URI
func (o CustomApiPropertiesDefinitionResponseOutput) IconUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *string { return v.IconUri }).(pulumi.StringPtrOutput)
}

// Runtime URLs
func (o CustomApiPropertiesDefinitionResponseOutput) RuntimeUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) []string { return v.RuntimeUrls }).(pulumi.StringArrayOutput)
}

// The JSON representation of the swagger
func (o CustomApiPropertiesDefinitionResponseOutput) Swagger() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) interface{} { return v.Swagger }).(pulumi.AnyOutput)
}

// The WSDL definition
func (o CustomApiPropertiesDefinitionResponseOutput) WsdlDefinition() WsdlDefinitionResponsePtrOutput {
	return o.ApplyT(func(v CustomApiPropertiesDefinitionResponse) *WsdlDefinitionResponse { return v.WsdlDefinition }).(WsdlDefinitionResponsePtrOutput)
}

// The configuration settings of the custom Open ID Connect provider.
type CustomOpenIdConnectProvider struct {
	// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow of the custom Open ID Connect provider.
	Login *OpenIdConnectLogin `pulumi:"login"`
	// The configuration settings of the app registration for the custom Open ID Connect provider.
	Registration *OpenIdConnectRegistration `pulumi:"registration"`
}

// CustomOpenIdConnectProviderInput is an input type that accepts CustomOpenIdConnectProviderArgs and CustomOpenIdConnectProviderOutput values.
// You can construct a concrete instance of `CustomOpenIdConnectProviderInput` via:
//
//	CustomOpenIdConnectProviderArgs{...}
type CustomOpenIdConnectProviderInput interface {
	pulumi.Input

	ToCustomOpenIdConnectProviderOutput() CustomOpenIdConnectProviderOutput
	ToCustomOpenIdConnectProviderOutputWithContext(context.Context) CustomOpenIdConnectProviderOutput
}

// The configuration settings of the custom Open ID Connect provider.
type CustomOpenIdConnectProviderArgs struct {
	// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the login flow of the custom Open ID Connect provider.
	Login OpenIdConnectLoginPtrInput `pulumi:"login"`
	// The configuration settings of the app registration for the custom Open ID Connect provider.
	Registration OpenIdConnectRegistrationPtrInput `pulumi:"registration"`
}

func (CustomOpenIdConnectProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomOpenIdConnectProvider)(nil)).Elem()
}

func (i CustomOpenIdConnectProviderArgs) ToCustomOpenIdConnectProviderOutput() CustomOpenIdConnectProviderOutput {
	return i.ToCustomOpenIdConnectProviderOutputWithContext(context.Background())
}

func (i CustomOpenIdConnectProviderArgs) ToCustomOpenIdConnectProviderOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomOpenIdConnectProviderOutput)
}

// CustomOpenIdConnectProviderMapInput is an input type that accepts CustomOpenIdConnectProviderMap and CustomOpenIdConnectProviderMapOutput values.
// You can construct a concrete instance of `CustomOpenIdConnectProviderMapInput` via:
//
//	CustomOpenIdConnectProviderMap{ "key": CustomOpenIdConnectProviderArgs{...} }
type CustomOpenIdConnectProviderMapInput interface {
	pulumi.Input

	ToCustomOpenIdConnectProviderMapOutput() CustomOpenIdConnectProviderMapOutput
	ToCustomOpenIdConnectProviderMapOutputWithContext(context.Context) CustomOpenIdConnectProviderMapOutput
}

type CustomOpenIdConnectProviderMap map[string]CustomOpenIdConnectProviderInput

func (CustomOpenIdConnectProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomOpenIdConnectProvider)(nil)).Elem()
}

func (i CustomOpenIdConnectProviderMap) ToCustomOpenIdConnectProviderMapOutput() CustomOpenIdConnectProviderMapOutput {
	return i.ToCustomOpenIdConnectProviderMapOutputWithContext(context.Background())
}

func (i CustomOpenIdConnectProviderMap) ToCustomOpenIdConnectProviderMapOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomOpenIdConnectProviderMapOutput)
}

// The configuration settings of the custom Open ID Connect provider.
type CustomOpenIdConnectProviderOutput struct{ *pulumi.OutputState }

func (CustomOpenIdConnectProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomOpenIdConnectProvider)(nil)).Elem()
}

func (o CustomOpenIdConnectProviderOutput) ToCustomOpenIdConnectProviderOutput() CustomOpenIdConnectProviderOutput {
	return o
}

func (o CustomOpenIdConnectProviderOutput) ToCustomOpenIdConnectProviderOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderOutput {
	return o
}

// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
func (o CustomOpenIdConnectProviderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProvider) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
func (o CustomOpenIdConnectProviderOutput) Login() OpenIdConnectLoginPtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProvider) *OpenIdConnectLogin { return v.Login }).(OpenIdConnectLoginPtrOutput)
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
func (o CustomOpenIdConnectProviderOutput) Registration() OpenIdConnectRegistrationPtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProvider) *OpenIdConnectRegistration { return v.Registration }).(OpenIdConnectRegistrationPtrOutput)
}

type CustomOpenIdConnectProviderMapOutput struct{ *pulumi.OutputState }

func (CustomOpenIdConnectProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomOpenIdConnectProvider)(nil)).Elem()
}

func (o CustomOpenIdConnectProviderMapOutput) ToCustomOpenIdConnectProviderMapOutput() CustomOpenIdConnectProviderMapOutput {
	return o
}

func (o CustomOpenIdConnectProviderMapOutput) ToCustomOpenIdConnectProviderMapOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderMapOutput {
	return o
}

func (o CustomOpenIdConnectProviderMapOutput) MapIndex(k pulumi.StringInput) CustomOpenIdConnectProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomOpenIdConnectProvider {
		return vs[0].(map[string]CustomOpenIdConnectProvider)[vs[1].(string)]
	}).(CustomOpenIdConnectProviderOutput)
}

// The configuration settings of the custom Open ID Connect provider.
type CustomOpenIdConnectProviderResponse struct {
	// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow of the custom Open ID Connect provider.
	Login *OpenIdConnectLoginResponse `pulumi:"login"`
	// The configuration settings of the app registration for the custom Open ID Connect provider.
	Registration *OpenIdConnectRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the custom Open ID Connect provider.
type CustomOpenIdConnectProviderResponseOutput struct{ *pulumi.OutputState }

func (CustomOpenIdConnectProviderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomOpenIdConnectProviderResponse)(nil)).Elem()
}

func (o CustomOpenIdConnectProviderResponseOutput) ToCustomOpenIdConnectProviderResponseOutput() CustomOpenIdConnectProviderResponseOutput {
	return o
}

func (o CustomOpenIdConnectProviderResponseOutput) ToCustomOpenIdConnectProviderResponseOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderResponseOutput {
	return o
}

// <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
func (o CustomOpenIdConnectProviderResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProviderResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
func (o CustomOpenIdConnectProviderResponseOutput) Login() OpenIdConnectLoginResponsePtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProviderResponse) *OpenIdConnectLoginResponse { return v.Login }).(OpenIdConnectLoginResponsePtrOutput)
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
func (o CustomOpenIdConnectProviderResponseOutput) Registration() OpenIdConnectRegistrationResponsePtrOutput {
	return o.ApplyT(func(v CustomOpenIdConnectProviderResponse) *OpenIdConnectRegistrationResponse { return v.Registration }).(OpenIdConnectRegistrationResponsePtrOutput)
}

type CustomOpenIdConnectProviderResponseMapOutput struct{ *pulumi.OutputState }

func (CustomOpenIdConnectProviderResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]CustomOpenIdConnectProviderResponse)(nil)).Elem()
}

func (o CustomOpenIdConnectProviderResponseMapOutput) ToCustomOpenIdConnectProviderResponseMapOutput() CustomOpenIdConnectProviderResponseMapOutput {
	return o
}

func (o CustomOpenIdConnectProviderResponseMapOutput) ToCustomOpenIdConnectProviderResponseMapOutputWithContext(ctx context.Context) CustomOpenIdConnectProviderResponseMapOutput {
	return o
}

func (o CustomOpenIdConnectProviderResponseMapOutput) MapIndex(k pulumi.StringInput) CustomOpenIdConnectProviderResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) CustomOpenIdConnectProviderResponse {
		return vs[0].(map[string]CustomOpenIdConnectProviderResponse)[vs[1].(string)]
	}).(CustomOpenIdConnectProviderResponseOutput)
}

// Container App container Custom scaling rule.
type CustomScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata map[string]string `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type *string `pulumi:"type"`
}

// CustomScaleRuleInput is an input type that accepts CustomScaleRuleArgs and CustomScaleRuleOutput values.
// You can construct a concrete instance of `CustomScaleRuleInput` via:
//
//	CustomScaleRuleArgs{...}
type CustomScaleRuleInput interface {
	pulumi.Input

	ToCustomScaleRuleOutput() CustomScaleRuleOutput
	ToCustomScaleRuleOutputWithContext(context.Context) CustomScaleRuleOutput
}

// Container App container Custom scaling rule.
type CustomScaleRuleArgs struct {
	// Authentication secrets for the custom scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRule)(nil)).Elem()
}

func (i CustomScaleRuleArgs) ToCustomScaleRuleOutput() CustomScaleRuleOutput {
	return i.ToCustomScaleRuleOutputWithContext(context.Background())
}

func (i CustomScaleRuleArgs) ToCustomScaleRuleOutputWithContext(ctx context.Context) CustomScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRuleOutput)
}

func (i CustomScaleRuleArgs) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return i.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (i CustomScaleRuleArgs) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRuleOutput).ToCustomScaleRulePtrOutputWithContext(ctx)
}

// CustomScaleRulePtrInput is an input type that accepts CustomScaleRuleArgs, CustomScaleRulePtr and CustomScaleRulePtrOutput values.
// You can construct a concrete instance of `CustomScaleRulePtrInput` via:
//
//	        CustomScaleRuleArgs{...}
//
//	or:
//
//	        nil
type CustomScaleRulePtrInput interface {
	pulumi.Input

	ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput
	ToCustomScaleRulePtrOutputWithContext(context.Context) CustomScaleRulePtrOutput
}

type customScaleRulePtrType CustomScaleRuleArgs

func CustomScaleRulePtr(v *CustomScaleRuleArgs) CustomScaleRulePtrInput {
	return (*customScaleRulePtrType)(v)
}

func (*customScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRule)(nil)).Elem()
}

func (i *customScaleRulePtrType) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return i.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (i *customScaleRulePtrType) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomScaleRulePtrOutput)
}

// Container App container Custom scaling rule.
type CustomScaleRuleOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRule)(nil)).Elem()
}

func (o CustomScaleRuleOutput) ToCustomScaleRuleOutput() CustomScaleRuleOutput {
	return o
}

func (o CustomScaleRuleOutput) ToCustomScaleRuleOutputWithContext(ctx context.Context) CustomScaleRuleOutput {
	return o
}

func (o CustomScaleRuleOutput) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return o.ToCustomScaleRulePtrOutputWithContext(context.Background())
}

func (o CustomScaleRuleOutput) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomScaleRule) *CustomScaleRule {
		return &v
	}).(CustomScaleRulePtrOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v CustomScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomScaleRule) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomScaleRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomScaleRulePtrOutput struct{ *pulumi.OutputState }

func (CustomScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRule)(nil)).Elem()
}

func (o CustomScaleRulePtrOutput) ToCustomScaleRulePtrOutput() CustomScaleRulePtrOutput {
	return o
}

func (o CustomScaleRulePtrOutput) ToCustomScaleRulePtrOutputWithContext(ctx context.Context) CustomScaleRulePtrOutput {
	return o
}

func (o CustomScaleRulePtrOutput) Elem() CustomScaleRuleOutput {
	return o.ApplyT(func(v *CustomScaleRule) CustomScaleRule {
		if v != nil {
			return *v
		}
		var ret CustomScaleRule
		return ret
	}).(CustomScaleRuleOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *CustomScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRulePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomScaleRule) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRulePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomScaleRule) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Container App container Custom scaling rule.
type CustomScaleRuleResponse struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Metadata properties to describe custom scale rule.
	Metadata map[string]string `pulumi:"metadata"`
	// Type of the custom scale rule
	// eg: azure-servicebus, redis etc.
	Type *string `pulumi:"type"`
}

// Container App container Custom scaling rule.
type CustomScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomScaleRuleResponse)(nil)).Elem()
}

func (o CustomScaleRuleResponseOutput) ToCustomScaleRuleResponseOutput() CustomScaleRuleResponseOutput {
	return o
}

func (o CustomScaleRuleResponseOutput) ToCustomScaleRuleResponseOutputWithContext(ctx context.Context) CustomScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomScaleRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomScaleRuleResponse)(nil)).Elem()
}

func (o CustomScaleRuleResponsePtrOutput) ToCustomScaleRuleResponsePtrOutput() CustomScaleRuleResponsePtrOutput {
	return o
}

func (o CustomScaleRuleResponsePtrOutput) ToCustomScaleRuleResponsePtrOutputWithContext(ctx context.Context) CustomScaleRuleResponsePtrOutput {
	return o
}

func (o CustomScaleRuleResponsePtrOutput) Elem() CustomScaleRuleResponseOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) CustomScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret CustomScaleRuleResponse
		return ret
	}).(CustomScaleRuleResponseOutput)
}

// Authentication secrets for the custom scale rule.
func (o CustomScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe custom scale rule.
func (o CustomScaleRuleResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Type of the custom scale rule
// eg: azure-servicebus, redis etc.
func (o CustomScaleRuleResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomScaleRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Container App Dapr configuration.
type Dapr struct {
	// Dapr application identifier
	AppId *string `pulumi:"appId"`
	// Port on which the Dapr side car
	AppPort *int `pulumi:"appPort"`
	// Collection of Dapr components
	Components []DaprComponent `pulumi:"components"`
	// Boolean indicating if the Dapr side car is enabled
	Enabled *bool `pulumi:"enabled"`
}

// DaprInput is an input type that accepts DaprArgs and DaprOutput values.
// You can construct a concrete instance of `DaprInput` via:
//
//	DaprArgs{...}
type DaprInput interface {
	pulumi.Input

	ToDaprOutput() DaprOutput
	ToDaprOutputWithContext(context.Context) DaprOutput
}

// Container App Dapr configuration.
type DaprArgs struct {
	// Dapr application identifier
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Port on which the Dapr side car
	AppPort pulumi.IntPtrInput `pulumi:"appPort"`
	// Collection of Dapr components
	Components DaprComponentArrayInput `pulumi:"components"`
	// Boolean indicating if the Dapr side car is enabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DaprArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Dapr)(nil)).Elem()
}

func (i DaprArgs) ToDaprOutput() DaprOutput {
	return i.ToDaprOutputWithContext(context.Background())
}

func (i DaprArgs) ToDaprOutputWithContext(ctx context.Context) DaprOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprOutput)
}

func (i DaprArgs) ToDaprPtrOutput() DaprPtrOutput {
	return i.ToDaprPtrOutputWithContext(context.Background())
}

func (i DaprArgs) ToDaprPtrOutputWithContext(ctx context.Context) DaprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprOutput).ToDaprPtrOutputWithContext(ctx)
}

// DaprPtrInput is an input type that accepts DaprArgs, DaprPtr and DaprPtrOutput values.
// You can construct a concrete instance of `DaprPtrInput` via:
//
//	        DaprArgs{...}
//
//	or:
//
//	        nil
type DaprPtrInput interface {
	pulumi.Input

	ToDaprPtrOutput() DaprPtrOutput
	ToDaprPtrOutputWithContext(context.Context) DaprPtrOutput
}

type daprPtrType DaprArgs

func DaprPtr(v *DaprArgs) DaprPtrInput {
	return (*daprPtrType)(v)
}

func (*daprPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Dapr)(nil)).Elem()
}

func (i *daprPtrType) ToDaprPtrOutput() DaprPtrOutput {
	return i.ToDaprPtrOutputWithContext(context.Background())
}

func (i *daprPtrType) ToDaprPtrOutputWithContext(ctx context.Context) DaprPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprPtrOutput)
}

// Container App Dapr configuration.
type DaprOutput struct{ *pulumi.OutputState }

func (DaprOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Dapr)(nil)).Elem()
}

func (o DaprOutput) ToDaprOutput() DaprOutput {
	return o
}

func (o DaprOutput) ToDaprOutputWithContext(ctx context.Context) DaprOutput {
	return o
}

func (o DaprOutput) ToDaprPtrOutput() DaprPtrOutput {
	return o.ToDaprPtrOutputWithContext(context.Background())
}

func (o DaprOutput) ToDaprPtrOutputWithContext(ctx context.Context) DaprPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Dapr) *Dapr {
		return &v
	}).(DaprPtrOutput)
}

// Dapr application identifier
func (o DaprOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Dapr) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Port on which the Dapr side car
func (o DaprOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Dapr) *int { return v.AppPort }).(pulumi.IntPtrOutput)
}

// Collection of Dapr components
func (o DaprOutput) Components() DaprComponentArrayOutput {
	return o.ApplyT(func(v Dapr) []DaprComponent { return v.Components }).(DaprComponentArrayOutput)
}

// Boolean indicating if the Dapr side car is enabled
func (o DaprOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Dapr) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DaprPtrOutput struct{ *pulumi.OutputState }

func (DaprPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dapr)(nil)).Elem()
}

func (o DaprPtrOutput) ToDaprPtrOutput() DaprPtrOutput {
	return o
}

func (o DaprPtrOutput) ToDaprPtrOutputWithContext(ctx context.Context) DaprPtrOutput {
	return o
}

func (o DaprPtrOutput) Elem() DaprOutput {
	return o.ApplyT(func(v *Dapr) Dapr {
		if v != nil {
			return *v
		}
		var ret Dapr
		return ret
	}).(DaprOutput)
}

// Dapr application identifier
func (o DaprPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dapr) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Port on which the Dapr side car
func (o DaprPtrOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Dapr) *int {
		if v == nil {
			return nil
		}
		return v.AppPort
	}).(pulumi.IntPtrOutput)
}

// Collection of Dapr components
func (o DaprPtrOutput) Components() DaprComponentArrayOutput {
	return o.ApplyT(func(v *Dapr) []DaprComponent {
		if v == nil {
			return nil
		}
		return v.Components
	}).(DaprComponentArrayOutput)
}

// Boolean indicating if the Dapr side car is enabled
func (o DaprPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dapr) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Dapr component configuration
type DaprComponent struct {
	// Component metadata
	Metadata []DaprMetadata `pulumi:"metadata"`
	// Component name
	Name *string `pulumi:"name"`
	// Component type
	Type *string `pulumi:"type"`
	// Component version
	Version *string `pulumi:"version"`
}

// DaprComponentInput is an input type that accepts DaprComponentArgs and DaprComponentOutput values.
// You can construct a concrete instance of `DaprComponentInput` via:
//
//	DaprComponentArgs{...}
type DaprComponentInput interface {
	pulumi.Input

	ToDaprComponentOutput() DaprComponentOutput
	ToDaprComponentOutputWithContext(context.Context) DaprComponentOutput
}

// Dapr component configuration
type DaprComponentArgs struct {
	// Component metadata
	Metadata DaprMetadataArrayInput `pulumi:"metadata"`
	// Component name
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Component type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Component version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (DaprComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprComponent)(nil)).Elem()
}

func (i DaprComponentArgs) ToDaprComponentOutput() DaprComponentOutput {
	return i.ToDaprComponentOutputWithContext(context.Background())
}

func (i DaprComponentArgs) ToDaprComponentOutputWithContext(ctx context.Context) DaprComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprComponentOutput)
}

// DaprComponentArrayInput is an input type that accepts DaprComponentArray and DaprComponentArrayOutput values.
// You can construct a concrete instance of `DaprComponentArrayInput` via:
//
//	DaprComponentArray{ DaprComponentArgs{...} }
type DaprComponentArrayInput interface {
	pulumi.Input

	ToDaprComponentArrayOutput() DaprComponentArrayOutput
	ToDaprComponentArrayOutputWithContext(context.Context) DaprComponentArrayOutput
}

type DaprComponentArray []DaprComponentInput

func (DaprComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprComponent)(nil)).Elem()
}

func (i DaprComponentArray) ToDaprComponentArrayOutput() DaprComponentArrayOutput {
	return i.ToDaprComponentArrayOutputWithContext(context.Background())
}

func (i DaprComponentArray) ToDaprComponentArrayOutputWithContext(ctx context.Context) DaprComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprComponentArrayOutput)
}

// Dapr component configuration
type DaprComponentOutput struct{ *pulumi.OutputState }

func (DaprComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprComponent)(nil)).Elem()
}

func (o DaprComponentOutput) ToDaprComponentOutput() DaprComponentOutput {
	return o
}

func (o DaprComponentOutput) ToDaprComponentOutputWithContext(ctx context.Context) DaprComponentOutput {
	return o
}

// Component metadata
func (o DaprComponentOutput) Metadata() DaprMetadataArrayOutput {
	return o.ApplyT(func(v DaprComponent) []DaprMetadata { return v.Metadata }).(DaprMetadataArrayOutput)
}

// Component name
func (o DaprComponentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Component type
func (o DaprComponentOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponent) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Component version
func (o DaprComponentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponent) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DaprComponentArrayOutput struct{ *pulumi.OutputState }

func (DaprComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprComponent)(nil)).Elem()
}

func (o DaprComponentArrayOutput) ToDaprComponentArrayOutput() DaprComponentArrayOutput {
	return o
}

func (o DaprComponentArrayOutput) ToDaprComponentArrayOutputWithContext(ctx context.Context) DaprComponentArrayOutput {
	return o
}

func (o DaprComponentArrayOutput) Index(i pulumi.IntInput) DaprComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DaprComponent {
		return vs[0].([]DaprComponent)[vs[1].(int)]
	}).(DaprComponentOutput)
}

// Dapr component configuration
type DaprComponentResponse struct {
	// Component metadata
	Metadata []DaprMetadataResponse `pulumi:"metadata"`
	// Component name
	Name *string `pulumi:"name"`
	// Component type
	Type *string `pulumi:"type"`
	// Component version
	Version *string `pulumi:"version"`
}

// Dapr component configuration
type DaprComponentResponseOutput struct{ *pulumi.OutputState }

func (DaprComponentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprComponentResponse)(nil)).Elem()
}

func (o DaprComponentResponseOutput) ToDaprComponentResponseOutput() DaprComponentResponseOutput {
	return o
}

func (o DaprComponentResponseOutput) ToDaprComponentResponseOutputWithContext(ctx context.Context) DaprComponentResponseOutput {
	return o
}

// Component metadata
func (o DaprComponentResponseOutput) Metadata() DaprMetadataResponseArrayOutput {
	return o.ApplyT(func(v DaprComponentResponse) []DaprMetadataResponse { return v.Metadata }).(DaprMetadataResponseArrayOutput)
}

// Component name
func (o DaprComponentResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponentResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Component type
func (o DaprComponentResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponentResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Component version
func (o DaprComponentResponseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprComponentResponse) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DaprComponentResponseArrayOutput struct{ *pulumi.OutputState }

func (DaprComponentResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprComponentResponse)(nil)).Elem()
}

func (o DaprComponentResponseArrayOutput) ToDaprComponentResponseArrayOutput() DaprComponentResponseArrayOutput {
	return o
}

func (o DaprComponentResponseArrayOutput) ToDaprComponentResponseArrayOutputWithContext(ctx context.Context) DaprComponentResponseArrayOutput {
	return o
}

func (o DaprComponentResponseArrayOutput) Index(i pulumi.IntInput) DaprComponentResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DaprComponentResponse {
		return vs[0].([]DaprComponentResponse)[vs[1].(int)]
	}).(DaprComponentResponseOutput)
}

// Container App Dapr component metadata.
type DaprMetadata struct {
	// Metadata property name.
	Name *string `pulumi:"name"`
	// Name of the Container App secret from which to pull the metadata property value.
	SecretRef *string `pulumi:"secretRef"`
	// Metadata property value.
	Value *string `pulumi:"value"`
}

// DaprMetadataInput is an input type that accepts DaprMetadataArgs and DaprMetadataOutput values.
// You can construct a concrete instance of `DaprMetadataInput` via:
//
//	DaprMetadataArgs{...}
type DaprMetadataInput interface {
	pulumi.Input

	ToDaprMetadataOutput() DaprMetadataOutput
	ToDaprMetadataOutputWithContext(context.Context) DaprMetadataOutput
}

// Container App Dapr component metadata.
type DaprMetadataArgs struct {
	// Metadata property name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of the Container App secret from which to pull the metadata property value.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Metadata property value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DaprMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprMetadata)(nil)).Elem()
}

func (i DaprMetadataArgs) ToDaprMetadataOutput() DaprMetadataOutput {
	return i.ToDaprMetadataOutputWithContext(context.Background())
}

func (i DaprMetadataArgs) ToDaprMetadataOutputWithContext(ctx context.Context) DaprMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprMetadataOutput)
}

// DaprMetadataArrayInput is an input type that accepts DaprMetadataArray and DaprMetadataArrayOutput values.
// You can construct a concrete instance of `DaprMetadataArrayInput` via:
//
//	DaprMetadataArray{ DaprMetadataArgs{...} }
type DaprMetadataArrayInput interface {
	pulumi.Input

	ToDaprMetadataArrayOutput() DaprMetadataArrayOutput
	ToDaprMetadataArrayOutputWithContext(context.Context) DaprMetadataArrayOutput
}

type DaprMetadataArray []DaprMetadataInput

func (DaprMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprMetadata)(nil)).Elem()
}

func (i DaprMetadataArray) ToDaprMetadataArrayOutput() DaprMetadataArrayOutput {
	return i.ToDaprMetadataArrayOutputWithContext(context.Background())
}

func (i DaprMetadataArray) ToDaprMetadataArrayOutputWithContext(ctx context.Context) DaprMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DaprMetadataArrayOutput)
}

// Container App Dapr component metadata.
type DaprMetadataOutput struct{ *pulumi.OutputState }

func (DaprMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprMetadata)(nil)).Elem()
}

func (o DaprMetadataOutput) ToDaprMetadataOutput() DaprMetadataOutput {
	return o
}

func (o DaprMetadataOutput) ToDaprMetadataOutputWithContext(ctx context.Context) DaprMetadataOutput {
	return o
}

// Metadata property name.
func (o DaprMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the Container App secret from which to pull the metadata property value.
func (o DaprMetadataOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadata) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Metadata property value.
func (o DaprMetadataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadata) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DaprMetadataArrayOutput struct{ *pulumi.OutputState }

func (DaprMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprMetadata)(nil)).Elem()
}

func (o DaprMetadataArrayOutput) ToDaprMetadataArrayOutput() DaprMetadataArrayOutput {
	return o
}

func (o DaprMetadataArrayOutput) ToDaprMetadataArrayOutputWithContext(ctx context.Context) DaprMetadataArrayOutput {
	return o
}

func (o DaprMetadataArrayOutput) Index(i pulumi.IntInput) DaprMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DaprMetadata {
		return vs[0].([]DaprMetadata)[vs[1].(int)]
	}).(DaprMetadataOutput)
}

// Container App Dapr component metadata.
type DaprMetadataResponse struct {
	// Metadata property name.
	Name *string `pulumi:"name"`
	// Name of the Container App secret from which to pull the metadata property value.
	SecretRef *string `pulumi:"secretRef"`
	// Metadata property value.
	Value *string `pulumi:"value"`
}

// Container App Dapr component metadata.
type DaprMetadataResponseOutput struct{ *pulumi.OutputState }

func (DaprMetadataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprMetadataResponse)(nil)).Elem()
}

func (o DaprMetadataResponseOutput) ToDaprMetadataResponseOutput() DaprMetadataResponseOutput {
	return o
}

func (o DaprMetadataResponseOutput) ToDaprMetadataResponseOutputWithContext(ctx context.Context) DaprMetadataResponseOutput {
	return o
}

// Metadata property name.
func (o DaprMetadataResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadataResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the Container App secret from which to pull the metadata property value.
func (o DaprMetadataResponseOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadataResponse) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Metadata property value.
func (o DaprMetadataResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprMetadataResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DaprMetadataResponseArrayOutput struct{ *pulumi.OutputState }

func (DaprMetadataResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DaprMetadataResponse)(nil)).Elem()
}

func (o DaprMetadataResponseArrayOutput) ToDaprMetadataResponseArrayOutput() DaprMetadataResponseArrayOutput {
	return o
}

func (o DaprMetadataResponseArrayOutput) ToDaprMetadataResponseArrayOutputWithContext(ctx context.Context) DaprMetadataResponseArrayOutput {
	return o
}

func (o DaprMetadataResponseArrayOutput) Index(i pulumi.IntInput) DaprMetadataResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DaprMetadataResponse {
		return vs[0].([]DaprMetadataResponse)[vs[1].(int)]
	}).(DaprMetadataResponseOutput)
}

// Container App Dapr configuration.
type DaprResponse struct {
	// Dapr application identifier
	AppId *string `pulumi:"appId"`
	// Port on which the Dapr side car
	AppPort *int `pulumi:"appPort"`
	// Collection of Dapr components
	Components []DaprComponentResponse `pulumi:"components"`
	// Boolean indicating if the Dapr side car is enabled
	Enabled *bool `pulumi:"enabled"`
}

// Container App Dapr configuration.
type DaprResponseOutput struct{ *pulumi.OutputState }

func (DaprResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DaprResponse)(nil)).Elem()
}

func (o DaprResponseOutput) ToDaprResponseOutput() DaprResponseOutput {
	return o
}

func (o DaprResponseOutput) ToDaprResponseOutputWithContext(ctx context.Context) DaprResponseOutput {
	return o
}

// Dapr application identifier
func (o DaprResponseOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DaprResponse) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Port on which the Dapr side car
func (o DaprResponseOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DaprResponse) *int { return v.AppPort }).(pulumi.IntPtrOutput)
}

// Collection of Dapr components
func (o DaprResponseOutput) Components() DaprComponentResponseArrayOutput {
	return o.ApplyT(func(v DaprResponse) []DaprComponentResponse { return v.Components }).(DaprComponentResponseArrayOutput)
}

// Boolean indicating if the Dapr side car is enabled
func (o DaprResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DaprResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DaprResponsePtrOutput struct{ *pulumi.OutputState }

func (DaprResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DaprResponse)(nil)).Elem()
}

func (o DaprResponsePtrOutput) ToDaprResponsePtrOutput() DaprResponsePtrOutput {
	return o
}

func (o DaprResponsePtrOutput) ToDaprResponsePtrOutputWithContext(ctx context.Context) DaprResponsePtrOutput {
	return o
}

func (o DaprResponsePtrOutput) Elem() DaprResponseOutput {
	return o.ApplyT(func(v *DaprResponse) DaprResponse {
		if v != nil {
			return *v
		}
		var ret DaprResponse
		return ret
	}).(DaprResponseOutput)
}

// Dapr application identifier
func (o DaprResponsePtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DaprResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Port on which the Dapr side car
func (o DaprResponsePtrOutput) AppPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DaprResponse) *int {
		if v == nil {
			return nil
		}
		return v.AppPort
	}).(pulumi.IntPtrOutput)
}

// Collection of Dapr components
func (o DaprResponsePtrOutput) Components() DaprComponentResponseArrayOutput {
	return o.ApplyT(func(v *DaprResponse) []DaprComponentResponse {
		if v == nil {
			return nil
		}
		return v.Components
	}).(DaprComponentResponseArrayOutput)
}

// Boolean indicating if the Dapr side car is enabled
func (o DaprResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DaprResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Database backup settings.
type DatabaseBackupSetting struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// DatabaseBackupSettingInput is an input type that accepts DatabaseBackupSettingArgs and DatabaseBackupSettingOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingInput` via:
//
//	DatabaseBackupSettingArgs{...}
type DatabaseBackupSettingInput interface {
	pulumi.Input

	ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput
	ToDatabaseBackupSettingOutputWithContext(context.Context) DatabaseBackupSettingOutput
}

// Database backup settings.
type DatabaseBackupSettingArgs struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName pulumi.StringPtrInput `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType pulumi.StringInput    `pulumi:"databaseType"`
	Name         pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseBackupSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return i.ToDatabaseBackupSettingOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArgs) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingOutput)
}

// DatabaseBackupSettingArrayInput is an input type that accepts DatabaseBackupSettingArray and DatabaseBackupSettingArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupSettingArrayInput` via:
//
//	DatabaseBackupSettingArray{ DatabaseBackupSettingArgs{...} }
type DatabaseBackupSettingArrayInput interface {
	pulumi.Input

	ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput
	ToDatabaseBackupSettingArrayOutputWithContext(context.Context) DatabaseBackupSettingArrayOutput
}

type DatabaseBackupSettingArray []DatabaseBackupSettingInput

func (DatabaseBackupSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return i.ToDatabaseBackupSettingArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupSettingArray) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupSettingArrayOutput)
}

// Database backup settings.
type DatabaseBackupSettingOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutput() DatabaseBackupSettingOutput {
	return o
}

func (o DatabaseBackupSettingOutput) ToDatabaseBackupSettingOutputWithContext(ctx context.Context) DatabaseBackupSettingOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSetting) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSetting)(nil)).Elem()
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutput() DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) ToDatabaseBackupSettingArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingArrayOutput {
	return o
}

func (o DatabaseBackupSettingArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSetting {
		return vs[0].([]DatabaseBackupSetting)[vs[1].(int)]
	}).(DatabaseBackupSettingOutput)
}

// Database backup settings.
type DatabaseBackupSettingResponse struct {
	// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
	ConnectionString *string `pulumi:"connectionString"`
	// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
	// This is used during restore with overwrite connection strings options.
	ConnectionStringName *string `pulumi:"connectionStringName"`
	// Database type (e.g. SqlAzure / MySql).
	DatabaseType string  `pulumi:"databaseType"`
	Name         *string `pulumi:"name"`
}

// Database backup settings.
type DatabaseBackupSettingResponseOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutput() DatabaseBackupSettingResponseOutput {
	return o
}

func (o DatabaseBackupSettingResponseOutput) ToDatabaseBackupSettingResponseOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseOutput {
	return o
}

// Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.
func (o DatabaseBackupSettingResponseOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.
// This is used during restore with overwrite connection strings options.
func (o DatabaseBackupSettingResponseOutput) ConnectionStringName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.ConnectionStringName }).(pulumi.StringPtrOutput)
}

// Database type (e.g. SqlAzure / MySql).
func (o DatabaseBackupSettingResponseOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) string { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DatabaseBackupSettingResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupSettingResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseBackupSettingResponseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupSettingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupSettingResponse)(nil)).Elem()
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutput() DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) ToDatabaseBackupSettingResponseArrayOutputWithContext(ctx context.Context) DatabaseBackupSettingResponseArrayOutput {
	return o
}

func (o DatabaseBackupSettingResponseArrayOutput) Index(i pulumi.IntInput) DatabaseBackupSettingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupSettingResponse {
		return vs[0].([]DatabaseBackupSettingResponse)[vs[1].(int)]
	}).(DatabaseBackupSettingResponseOutput)
}

// Enabled configuration.
type EnabledConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
}

// EnabledConfigInput is an input type that accepts EnabledConfigArgs and EnabledConfigOutput values.
// You can construct a concrete instance of `EnabledConfigInput` via:
//
//	EnabledConfigArgs{...}
type EnabledConfigInput interface {
	pulumi.Input

	ToEnabledConfigOutput() EnabledConfigOutput
	ToEnabledConfigOutputWithContext(context.Context) EnabledConfigOutput
}

// Enabled configuration.
type EnabledConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EnabledConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfig)(nil)).Elem()
}

func (i EnabledConfigArgs) ToEnabledConfigOutput() EnabledConfigOutput {
	return i.ToEnabledConfigOutputWithContext(context.Background())
}

func (i EnabledConfigArgs) ToEnabledConfigOutputWithContext(ctx context.Context) EnabledConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigOutput)
}

func (i EnabledConfigArgs) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return i.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (i EnabledConfigArgs) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigOutput).ToEnabledConfigPtrOutputWithContext(ctx)
}

// EnabledConfigPtrInput is an input type that accepts EnabledConfigArgs, EnabledConfigPtr and EnabledConfigPtrOutput values.
// You can construct a concrete instance of `EnabledConfigPtrInput` via:
//
//	        EnabledConfigArgs{...}
//
//	or:
//
//	        nil
type EnabledConfigPtrInput interface {
	pulumi.Input

	ToEnabledConfigPtrOutput() EnabledConfigPtrOutput
	ToEnabledConfigPtrOutputWithContext(context.Context) EnabledConfigPtrOutput
}

type enabledConfigPtrType EnabledConfigArgs

func EnabledConfigPtr(v *EnabledConfigArgs) EnabledConfigPtrInput {
	return (*enabledConfigPtrType)(v)
}

func (*enabledConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfig)(nil)).Elem()
}

func (i *enabledConfigPtrType) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return i.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (i *enabledConfigPtrType) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnabledConfigPtrOutput)
}

// Enabled configuration.
type EnabledConfigOutput struct{ *pulumi.OutputState }

func (EnabledConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfig)(nil)).Elem()
}

func (o EnabledConfigOutput) ToEnabledConfigOutput() EnabledConfigOutput {
	return o
}

func (o EnabledConfigOutput) ToEnabledConfigOutputWithContext(ctx context.Context) EnabledConfigOutput {
	return o
}

func (o EnabledConfigOutput) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return o.ToEnabledConfigPtrOutputWithContext(context.Background())
}

func (o EnabledConfigOutput) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnabledConfig) *EnabledConfig {
		return &v
	}).(EnabledConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnabledConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EnabledConfigPtrOutput struct{ *pulumi.OutputState }

func (EnabledConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfig)(nil)).Elem()
}

func (o EnabledConfigPtrOutput) ToEnabledConfigPtrOutput() EnabledConfigPtrOutput {
	return o
}

func (o EnabledConfigPtrOutput) ToEnabledConfigPtrOutputWithContext(ctx context.Context) EnabledConfigPtrOutput {
	return o
}

func (o EnabledConfigPtrOutput) Elem() EnabledConfigOutput {
	return o.ApplyT(func(v *EnabledConfig) EnabledConfig {
		if v != nil {
			return *v
		}
		var ret EnabledConfig
		return ret
	}).(EnabledConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnabledConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enabled configuration.
type EnabledConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
}

// Enabled configuration.
type EnabledConfigResponseOutput struct{ *pulumi.OutputState }

func (EnabledConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnabledConfigResponse)(nil)).Elem()
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponseOutput() EnabledConfigResponseOutput {
	return o
}

func (o EnabledConfigResponseOutput) ToEnabledConfigResponseOutputWithContext(ctx context.Context) EnabledConfigResponseOutput {
	return o
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EnabledConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EnabledConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (EnabledConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnabledConfigResponse)(nil)).Elem()
}

func (o EnabledConfigResponsePtrOutput) ToEnabledConfigResponsePtrOutput() EnabledConfigResponsePtrOutput {
	return o
}

func (o EnabledConfigResponsePtrOutput) ToEnabledConfigResponsePtrOutputWithContext(ctx context.Context) EnabledConfigResponsePtrOutput {
	return o
}

func (o EnabledConfigResponsePtrOutput) Elem() EnabledConfigResponseOutput {
	return o.ApplyT(func(v *EnabledConfigResponse) EnabledConfigResponse {
		if v != nil {
			return *v
		}
		var ret EnabledConfigResponse
		return ret
	}).(EnabledConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o EnabledConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EnabledConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Container App container environment variable.
type EnvironmentVar struct {
	// Environment variable name.
	Name *string `pulumi:"name"`
	// Name of the Container App secret from which to pull the environment variable value.
	SecretRef *string `pulumi:"secretRef"`
	// Non-secret environment variable value.
	Value *string `pulumi:"value"`
}

// EnvironmentVarInput is an input type that accepts EnvironmentVarArgs and EnvironmentVarOutput values.
// You can construct a concrete instance of `EnvironmentVarInput` via:
//
//	EnvironmentVarArgs{...}
type EnvironmentVarInput interface {
	pulumi.Input

	ToEnvironmentVarOutput() EnvironmentVarOutput
	ToEnvironmentVarOutputWithContext(context.Context) EnvironmentVarOutput
}

// Container App container environment variable.
type EnvironmentVarArgs struct {
	// Environment variable name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Name of the Container App secret from which to pull the environment variable value.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Non-secret environment variable value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVar)(nil)).Elem()
}

func (i EnvironmentVarArgs) ToEnvironmentVarOutput() EnvironmentVarOutput {
	return i.ToEnvironmentVarOutputWithContext(context.Background())
}

func (i EnvironmentVarArgs) ToEnvironmentVarOutputWithContext(ctx context.Context) EnvironmentVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVarOutput)
}

// EnvironmentVarArrayInput is an input type that accepts EnvironmentVarArray and EnvironmentVarArrayOutput values.
// You can construct a concrete instance of `EnvironmentVarArrayInput` via:
//
//	EnvironmentVarArray{ EnvironmentVarArgs{...} }
type EnvironmentVarArrayInput interface {
	pulumi.Input

	ToEnvironmentVarArrayOutput() EnvironmentVarArrayOutput
	ToEnvironmentVarArrayOutputWithContext(context.Context) EnvironmentVarArrayOutput
}

type EnvironmentVarArray []EnvironmentVarInput

func (EnvironmentVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentVar)(nil)).Elem()
}

func (i EnvironmentVarArray) ToEnvironmentVarArrayOutput() EnvironmentVarArrayOutput {
	return i.ToEnvironmentVarArrayOutputWithContext(context.Background())
}

func (i EnvironmentVarArray) ToEnvironmentVarArrayOutputWithContext(ctx context.Context) EnvironmentVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentVarArrayOutput)
}

// Container App container environment variable.
type EnvironmentVarOutput struct{ *pulumi.OutputState }

func (EnvironmentVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVar)(nil)).Elem()
}

func (o EnvironmentVarOutput) ToEnvironmentVarOutput() EnvironmentVarOutput {
	return o
}

func (o EnvironmentVarOutput) ToEnvironmentVarOutputWithContext(ctx context.Context) EnvironmentVarOutput {
	return o
}

// Environment variable name.
func (o EnvironmentVarOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVar) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the Container App secret from which to pull the environment variable value.
func (o EnvironmentVarOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVar) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Non-secret environment variable value.
func (o EnvironmentVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVar) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentVarArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentVar)(nil)).Elem()
}

func (o EnvironmentVarArrayOutput) ToEnvironmentVarArrayOutput() EnvironmentVarArrayOutput {
	return o
}

func (o EnvironmentVarArrayOutput) ToEnvironmentVarArrayOutputWithContext(ctx context.Context) EnvironmentVarArrayOutput {
	return o
}

func (o EnvironmentVarArrayOutput) Index(i pulumi.IntInput) EnvironmentVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentVar {
		return vs[0].([]EnvironmentVar)[vs[1].(int)]
	}).(EnvironmentVarOutput)
}

// Container App container environment variable.
type EnvironmentVarResponse struct {
	// Environment variable name.
	Name *string `pulumi:"name"`
	// Name of the Container App secret from which to pull the environment variable value.
	SecretRef *string `pulumi:"secretRef"`
	// Non-secret environment variable value.
	Value *string `pulumi:"value"`
}

// Container App container environment variable.
type EnvironmentVarResponseOutput struct{ *pulumi.OutputState }

func (EnvironmentVarResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentVarResponse)(nil)).Elem()
}

func (o EnvironmentVarResponseOutput) ToEnvironmentVarResponseOutput() EnvironmentVarResponseOutput {
	return o
}

func (o EnvironmentVarResponseOutput) ToEnvironmentVarResponseOutputWithContext(ctx context.Context) EnvironmentVarResponseOutput {
	return o
}

// Environment variable name.
func (o EnvironmentVarResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVarResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Name of the Container App secret from which to pull the environment variable value.
func (o EnvironmentVarResponseOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVarResponse) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Non-secret environment variable value.
func (o EnvironmentVarResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentVarResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentVarResponseArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentVarResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentVarResponse)(nil)).Elem()
}

func (o EnvironmentVarResponseArrayOutput) ToEnvironmentVarResponseArrayOutput() EnvironmentVarResponseArrayOutput {
	return o
}

func (o EnvironmentVarResponseArrayOutput) ToEnvironmentVarResponseArrayOutputWithContext(ctx context.Context) EnvironmentVarResponseArrayOutput {
	return o
}

func (o EnvironmentVarResponseArrayOutput) Index(i pulumi.IntInput) EnvironmentVarResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentVarResponse {
		return vs[0].([]EnvironmentVarResponse)[vs[1].(int)]
	}).(EnvironmentVarResponseOutput)
}

// Body of the error response returned from the API.
type ErrorEntityResponse struct {
	// Basic error code.
	Code *string `pulumi:"code"`
	// Type of error.
	ExtendedCode *string `pulumi:"extendedCode"`
	// Inner errors.
	InnerErrors []ErrorEntityResponse `pulumi:"innerErrors"`
	// Any details of the error.
	Message *string `pulumi:"message"`
	// Message template.
	MessageTemplate *string `pulumi:"messageTemplate"`
	// Parameters for the template.
	Parameters []string `pulumi:"parameters"`
}

// Body of the error response returned from the API.
type ErrorEntityResponseOutput struct{ *pulumi.OutputState }

func (ErrorEntityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ErrorEntityResponse)(nil)).Elem()
}

func (o ErrorEntityResponseOutput) ToErrorEntityResponseOutput() ErrorEntityResponseOutput {
	return o
}

func (o ErrorEntityResponseOutput) ToErrorEntityResponseOutputWithContext(ctx context.Context) ErrorEntityResponseOutput {
	return o
}

// Basic error code.
func (o ErrorEntityResponseOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorEntityResponse) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Type of error.
func (o ErrorEntityResponseOutput) ExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorEntityResponse) *string { return v.ExtendedCode }).(pulumi.StringPtrOutput)
}

// Inner errors.
func (o ErrorEntityResponseOutput) InnerErrors() ErrorEntityResponseArrayOutput {
	return o.ApplyT(func(v ErrorEntityResponse) []ErrorEntityResponse { return v.InnerErrors }).(ErrorEntityResponseArrayOutput)
}

// Any details of the error.
func (o ErrorEntityResponseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorEntityResponse) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Message template.
func (o ErrorEntityResponseOutput) MessageTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ErrorEntityResponse) *string { return v.MessageTemplate }).(pulumi.StringPtrOutput)
}

// Parameters for the template.
func (o ErrorEntityResponseOutput) Parameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ErrorEntityResponse) []string { return v.Parameters }).(pulumi.StringArrayOutput)
}

type ErrorEntityResponsePtrOutput struct{ *pulumi.OutputState }

func (ErrorEntityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ErrorEntityResponse)(nil)).Elem()
}

func (o ErrorEntityResponsePtrOutput) ToErrorEntityResponsePtrOutput() ErrorEntityResponsePtrOutput {
	return o
}

func (o ErrorEntityResponsePtrOutput) ToErrorEntityResponsePtrOutputWithContext(ctx context.Context) ErrorEntityResponsePtrOutput {
	return o
}

func (o ErrorEntityResponsePtrOutput) Elem() ErrorEntityResponseOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) ErrorEntityResponse {
		if v != nil {
			return *v
		}
		var ret ErrorEntityResponse
		return ret
	}).(ErrorEntityResponseOutput)
}

// Basic error code.
func (o ErrorEntityResponsePtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Type of error.
func (o ErrorEntityResponsePtrOutput) ExtendedCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ExtendedCode
	}).(pulumi.StringPtrOutput)
}

// Inner errors.
func (o ErrorEntityResponsePtrOutput) InnerErrors() ErrorEntityResponseArrayOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) []ErrorEntityResponse {
		if v == nil {
			return nil
		}
		return v.InnerErrors
	}).(ErrorEntityResponseArrayOutput)
}

// Any details of the error.
func (o ErrorEntityResponsePtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Message template.
func (o ErrorEntityResponsePtrOutput) MessageTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) *string {
		if v == nil {
			return nil
		}
		return v.MessageTemplate
	}).(pulumi.StringPtrOutput)
}

// Parameters for the template.
func (o ErrorEntityResponsePtrOutput) Parameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ErrorEntityResponse) []string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringArrayOutput)
}

type ErrorEntityResponseArrayOutput struct{ *pulumi.OutputState }

func (ErrorEntityResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ErrorEntityResponse)(nil)).Elem()
}

func (o ErrorEntityResponseArrayOutput) ToErrorEntityResponseArrayOutput() ErrorEntityResponseArrayOutput {
	return o
}

func (o ErrorEntityResponseArrayOutput) ToErrorEntityResponseArrayOutputWithContext(ctx context.Context) ErrorEntityResponseArrayOutput {
	return o
}

func (o ErrorEntityResponseArrayOutput) Index(i pulumi.IntInput) ErrorEntityResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ErrorEntityResponse {
		return vs[0].([]ErrorEntityResponse)[vs[1].(int)]
	}).(ErrorEntityResponseOutput)
}

// Routing rules in production experiments.
type Experiments struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRule `pulumi:"rampUpRules"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//	ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

// Routing rules in production experiments.
type ExperimentsArgs struct {
	// List of ramp-up rules.
	RampUpRules RampUpRuleArrayInput `pulumi:"rampUpRules"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

func (i ExperimentsArgs) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput).ToExperimentsPtrOutputWithContext(ctx)
}

// ExperimentsPtrInput is an input type that accepts ExperimentsArgs, ExperimentsPtr and ExperimentsPtrOutput values.
// You can construct a concrete instance of `ExperimentsPtrInput` via:
//
//	        ExperimentsArgs{...}
//
//	or:
//
//	        nil
type ExperimentsPtrInput interface {
	pulumi.Input

	ToExperimentsPtrOutput() ExperimentsPtrOutput
	ToExperimentsPtrOutputWithContext(context.Context) ExperimentsPtrOutput
}

type experimentsPtrType ExperimentsArgs

func ExperimentsPtr(v *ExperimentsArgs) ExperimentsPtrInput {
	return (*experimentsPtrType)(v)
}

func (*experimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (i *experimentsPtrType) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return i.ToExperimentsPtrOutputWithContext(context.Background())
}

func (i *experimentsPtrType) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsPtrOutput)
}

// Routing rules in production experiments.
type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o.ToExperimentsPtrOutputWithContext(context.Background())
}

func (o ExperimentsOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Experiments) *Experiments {
		return &v
	}).(ExperimentsPtrOutput)
}

// List of ramp-up rules.
func (o ExperimentsOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v Experiments) []RampUpRule { return v.RampUpRules }).(RampUpRuleArrayOutput)
}

type ExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Experiments)(nil)).Elem()
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutput() ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) ToExperimentsPtrOutputWithContext(ctx context.Context) ExperimentsPtrOutput {
	return o
}

func (o ExperimentsPtrOutput) Elem() ExperimentsOutput {
	return o.ApplyT(func(v *Experiments) Experiments {
		if v != nil {
			return *v
		}
		var ret Experiments
		return ret
	}).(ExperimentsOutput)
}

// List of ramp-up rules.
func (o ExperimentsPtrOutput) RampUpRules() RampUpRuleArrayOutput {
	return o.ApplyT(func(v *Experiments) []RampUpRule {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleArrayOutput)
}

// Routing rules in production experiments.
type ExperimentsResponse struct {
	// List of ramp-up rules.
	RampUpRules []RampUpRuleResponse `pulumi:"rampUpRules"`
}

// Routing rules in production experiments.
type ExperimentsResponseOutput struct{ *pulumi.OutputState }

func (ExperimentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutput() ExperimentsResponseOutput {
	return o
}

func (o ExperimentsResponseOutput) ToExperimentsResponseOutputWithContext(ctx context.Context) ExperimentsResponseOutput {
	return o
}

// List of ramp-up rules.
func (o ExperimentsResponseOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v ExperimentsResponse) []RampUpRuleResponse { return v.RampUpRules }).(RampUpRuleResponseArrayOutput)
}

type ExperimentsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExperimentsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentsResponse)(nil)).Elem()
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutput() ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) ToExperimentsResponsePtrOutputWithContext(ctx context.Context) ExperimentsResponsePtrOutput {
	return o
}

func (o ExperimentsResponsePtrOutput) Elem() ExperimentsResponseOutput {
	return o.ApplyT(func(v *ExperimentsResponse) ExperimentsResponse {
		if v != nil {
			return *v
		}
		var ret ExperimentsResponse
		return ret
	}).(ExperimentsResponseOutput)
}

// List of ramp-up rules.
func (o ExperimentsResponsePtrOutput) RampUpRules() RampUpRuleResponseArrayOutput {
	return o.ApplyT(func(v *ExperimentsResponse) []RampUpRuleResponse {
		if v == nil {
			return nil
		}
		return v.RampUpRules
	}).(RampUpRuleResponseArrayOutput)
}

// The expression.
type ExpressionResponse struct {
	// The azure resource error info.
	Error *AzureResourceErrorInfoResponse `pulumi:"error"`
	// The sub expressions.
	Subexpressions []ExpressionResponse `pulumi:"subexpressions"`
	// The text.
	Text  *string     `pulumi:"text"`
	Value interface{} `pulumi:"value"`
}

// The expression.
type ExpressionResponseOutput struct{ *pulumi.OutputState }

func (ExpressionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionResponse)(nil)).Elem()
}

func (o ExpressionResponseOutput) ToExpressionResponseOutput() ExpressionResponseOutput {
	return o
}

func (o ExpressionResponseOutput) ToExpressionResponseOutputWithContext(ctx context.Context) ExpressionResponseOutput {
	return o
}

// The azure resource error info.
func (o ExpressionResponseOutput) Error() AzureResourceErrorInfoResponsePtrOutput {
	return o.ApplyT(func(v ExpressionResponse) *AzureResourceErrorInfoResponse { return v.Error }).(AzureResourceErrorInfoResponsePtrOutput)
}

// The sub expressions.
func (o ExpressionResponseOutput) Subexpressions() ExpressionResponseArrayOutput {
	return o.ApplyT(func(v ExpressionResponse) []ExpressionResponse { return v.Subexpressions }).(ExpressionResponseArrayOutput)
}

// The text.
func (o ExpressionResponseOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressionResponse) *string { return v.Text }).(pulumi.StringPtrOutput)
}

func (o ExpressionResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ExpressionResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ExpressionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressionResponse)(nil)).Elem()
}

func (o ExpressionResponseArrayOutput) ToExpressionResponseArrayOutput() ExpressionResponseArrayOutput {
	return o
}

func (o ExpressionResponseArrayOutput) ToExpressionResponseArrayOutputWithContext(ctx context.Context) ExpressionResponseArrayOutput {
	return o
}

func (o ExpressionResponseArrayOutput) Index(i pulumi.IntInput) ExpressionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressionResponse {
		return vs[0].([]ExpressionResponse)[vs[1].(int)]
	}).(ExpressionResponseOutput)
}

// The expression root.
type ExpressionRootResponse struct {
	// The azure resource error info.
	Error *AzureResourceErrorInfoResponse `pulumi:"error"`
	// The path.
	Path *string `pulumi:"path"`
	// The sub expressions.
	Subexpressions []ExpressionResponse `pulumi:"subexpressions"`
	// The text.
	Text  *string     `pulumi:"text"`
	Value interface{} `pulumi:"value"`
}

// The expression root.
type ExpressionRootResponseOutput struct{ *pulumi.OutputState }

func (ExpressionRootResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressionRootResponse)(nil)).Elem()
}

func (o ExpressionRootResponseOutput) ToExpressionRootResponseOutput() ExpressionRootResponseOutput {
	return o
}

func (o ExpressionRootResponseOutput) ToExpressionRootResponseOutputWithContext(ctx context.Context) ExpressionRootResponseOutput {
	return o
}

// The azure resource error info.
func (o ExpressionRootResponseOutput) Error() AzureResourceErrorInfoResponsePtrOutput {
	return o.ApplyT(func(v ExpressionRootResponse) *AzureResourceErrorInfoResponse { return v.Error }).(AzureResourceErrorInfoResponsePtrOutput)
}

// The path.
func (o ExpressionRootResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressionRootResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The sub expressions.
func (o ExpressionRootResponseOutput) Subexpressions() ExpressionResponseArrayOutput {
	return o.ApplyT(func(v ExpressionRootResponse) []ExpressionResponse { return v.Subexpressions }).(ExpressionResponseArrayOutput)
}

// The text.
func (o ExpressionRootResponseOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressionRootResponse) *string { return v.Text }).(pulumi.StringPtrOutput)
}

func (o ExpressionRootResponseOutput) Value() pulumi.AnyOutput {
	return o.ApplyT(func(v ExpressionRootResponse) interface{} { return v.Value }).(pulumi.AnyOutput)
}

type ExpressionRootResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressionRootResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressionRootResponse)(nil)).Elem()
}

func (o ExpressionRootResponseArrayOutput) ToExpressionRootResponseArrayOutput() ExpressionRootResponseArrayOutput {
	return o
}

func (o ExpressionRootResponseArrayOutput) ToExpressionRootResponseArrayOutputWithContext(ctx context.Context) ExpressionRootResponseArrayOutput {
	return o
}

func (o ExpressionRootResponseArrayOutput) Index(i pulumi.IntInput) ExpressionRootResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressionRootResponse {
		return vs[0].([]ExpressionRootResponse)[vs[1].(int)]
	}).(ExpressionRootResponseOutput)
}

// Extended Location.
type ExtendedLocation struct {
	// Name of extended location.
	Name *string `pulumi:"name"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//	ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// Extended Location.
type ExtendedLocationArgs struct {
	// Name of extended location.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//	        ExtendedLocationArgs{...}
//
//	or:
//
//	        nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// Extended Location.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// Name of extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation {
		if v != nil {
			return *v
		}
		var ret ExtendedLocation
		return ret
	}).(ExtendedLocationOutput)
}

// Name of extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Extended Location.
type ExtendedLocationResponse struct {
	// Name of extended location.
	Name *string `pulumi:"name"`
	// Type of extended location.
	Type string `pulumi:"type"`
}

// Extended Location.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

// Name of extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse {
		if v != nil {
			return *v
		}
		var ret ExtendedLocationResponse
		return ret
	}).(ExtendedLocationResponseOutput)
}

// Name of extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Type of extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Facebook provider.
type Facebook struct {
	// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The version of the Facebook api to be used while logging in.
	GraphApiVersion *string `pulumi:"graphApiVersion"`
	// The configuration settings of the login flow.
	Login *LoginScopes `pulumi:"login"`
	// The configuration settings of the app registration for the Facebook provider.
	Registration *AppRegistration `pulumi:"registration"`
}

// FacebookInput is an input type that accepts FacebookArgs and FacebookOutput values.
// You can construct a concrete instance of `FacebookInput` via:
//
//	FacebookArgs{...}
type FacebookInput interface {
	pulumi.Input

	ToFacebookOutput() FacebookOutput
	ToFacebookOutputWithContext(context.Context) FacebookOutput
}

// The configuration settings of the Facebook provider.
type FacebookArgs struct {
	// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The version of the Facebook api to be used while logging in.
	GraphApiVersion pulumi.StringPtrInput `pulumi:"graphApiVersion"`
	// The configuration settings of the login flow.
	Login LoginScopesPtrInput `pulumi:"login"`
	// The configuration settings of the app registration for the Facebook provider.
	Registration AppRegistrationPtrInput `pulumi:"registration"`
}

func (FacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Facebook)(nil)).Elem()
}

func (i FacebookArgs) ToFacebookOutput() FacebookOutput {
	return i.ToFacebookOutputWithContext(context.Background())
}

func (i FacebookArgs) ToFacebookOutputWithContext(ctx context.Context) FacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookOutput)
}

func (i FacebookArgs) ToFacebookPtrOutput() FacebookPtrOutput {
	return i.ToFacebookPtrOutputWithContext(context.Background())
}

func (i FacebookArgs) ToFacebookPtrOutputWithContext(ctx context.Context) FacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookOutput).ToFacebookPtrOutputWithContext(ctx)
}

// FacebookPtrInput is an input type that accepts FacebookArgs, FacebookPtr and FacebookPtrOutput values.
// You can construct a concrete instance of `FacebookPtrInput` via:
//
//	        FacebookArgs{...}
//
//	or:
//
//	        nil
type FacebookPtrInput interface {
	pulumi.Input

	ToFacebookPtrOutput() FacebookPtrOutput
	ToFacebookPtrOutputWithContext(context.Context) FacebookPtrOutput
}

type facebookPtrType FacebookArgs

func FacebookPtr(v *FacebookArgs) FacebookPtrInput {
	return (*facebookPtrType)(v)
}

func (*facebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Facebook)(nil)).Elem()
}

func (i *facebookPtrType) ToFacebookPtrOutput() FacebookPtrOutput {
	return i.ToFacebookPtrOutputWithContext(context.Background())
}

func (i *facebookPtrType) ToFacebookPtrOutputWithContext(ctx context.Context) FacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FacebookPtrOutput)
}

// The configuration settings of the Facebook provider.
type FacebookOutput struct{ *pulumi.OutputState }

func (FacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Facebook)(nil)).Elem()
}

func (o FacebookOutput) ToFacebookOutput() FacebookOutput {
	return o
}

func (o FacebookOutput) ToFacebookOutputWithContext(ctx context.Context) FacebookOutput {
	return o
}

func (o FacebookOutput) ToFacebookPtrOutput() FacebookPtrOutput {
	return o.ToFacebookPtrOutputWithContext(context.Background())
}

func (o FacebookOutput) ToFacebookPtrOutputWithContext(ctx context.Context) FacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Facebook) *Facebook {
		return &v
	}).(FacebookPtrOutput)
}

// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o FacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Facebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The version of the Facebook api to be used while logging in.
func (o FacebookOutput) GraphApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Facebook) *string { return v.GraphApiVersion }).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow.
func (o FacebookOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v Facebook) *LoginScopes { return v.Login }).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the Facebook provider.
func (o FacebookOutput) Registration() AppRegistrationPtrOutput {
	return o.ApplyT(func(v Facebook) *AppRegistration { return v.Registration }).(AppRegistrationPtrOutput)
}

type FacebookPtrOutput struct{ *pulumi.OutputState }

func (FacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Facebook)(nil)).Elem()
}

func (o FacebookPtrOutput) ToFacebookPtrOutput() FacebookPtrOutput {
	return o
}

func (o FacebookPtrOutput) ToFacebookPtrOutputWithContext(ctx context.Context) FacebookPtrOutput {
	return o
}

func (o FacebookPtrOutput) Elem() FacebookOutput {
	return o.ApplyT(func(v *Facebook) Facebook {
		if v != nil {
			return *v
		}
		var ret Facebook
		return ret
	}).(FacebookOutput)
}

// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o FacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Facebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The version of the Facebook api to be used while logging in.
func (o FacebookPtrOutput) GraphApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Facebook) *string {
		if v == nil {
			return nil
		}
		return v.GraphApiVersion
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow.
func (o FacebookPtrOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v *Facebook) *LoginScopes {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the Facebook provider.
func (o FacebookPtrOutput) Registration() AppRegistrationPtrOutput {
	return o.ApplyT(func(v *Facebook) *AppRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AppRegistrationPtrOutput)
}

// The configuration settings of the Facebook provider.
type FacebookResponse struct {
	// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The version of the Facebook api to be used while logging in.
	GraphApiVersion *string `pulumi:"graphApiVersion"`
	// The configuration settings of the login flow.
	Login *LoginScopesResponse `pulumi:"login"`
	// The configuration settings of the app registration for the Facebook provider.
	Registration *AppRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the Facebook provider.
type FacebookResponseOutput struct{ *pulumi.OutputState }

func (FacebookResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FacebookResponse)(nil)).Elem()
}

func (o FacebookResponseOutput) ToFacebookResponseOutput() FacebookResponseOutput {
	return o
}

func (o FacebookResponseOutput) ToFacebookResponseOutputWithContext(ctx context.Context) FacebookResponseOutput {
	return o
}

// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o FacebookResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FacebookResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The version of the Facebook api to be used while logging in.
func (o FacebookResponseOutput) GraphApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FacebookResponse) *string { return v.GraphApiVersion }).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow.
func (o FacebookResponseOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v FacebookResponse) *LoginScopesResponse { return v.Login }).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the Facebook provider.
func (o FacebookResponseOutput) Registration() AppRegistrationResponsePtrOutput {
	return o.ApplyT(func(v FacebookResponse) *AppRegistrationResponse { return v.Registration }).(AppRegistrationResponsePtrOutput)
}

type FacebookResponsePtrOutput struct{ *pulumi.OutputState }

func (FacebookResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FacebookResponse)(nil)).Elem()
}

func (o FacebookResponsePtrOutput) ToFacebookResponsePtrOutput() FacebookResponsePtrOutput {
	return o
}

func (o FacebookResponsePtrOutput) ToFacebookResponsePtrOutputWithContext(ctx context.Context) FacebookResponsePtrOutput {
	return o
}

func (o FacebookResponsePtrOutput) Elem() FacebookResponseOutput {
	return o.ApplyT(func(v *FacebookResponse) FacebookResponse {
		if v != nil {
			return *v
		}
		var ret FacebookResponse
		return ret
	}).(FacebookResponseOutput)
}

// <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o FacebookResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FacebookResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The version of the Facebook api to be used while logging in.
func (o FacebookResponsePtrOutput) GraphApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FacebookResponse) *string {
		if v == nil {
			return nil
		}
		return v.GraphApiVersion
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow.
func (o FacebookResponsePtrOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v *FacebookResponse) *LoginScopesResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the Facebook provider.
func (o FacebookResponsePtrOutput) Registration() AppRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *FacebookResponse) *AppRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(AppRegistrationResponsePtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfig struct {
	// Log level.
	Level *LogLevel `pulumi:"level"`
}

// Defaults sets the appropriate defaults for FileSystemApplicationLogsConfig
func (val *FileSystemApplicationLogsConfig) Defaults() *FileSystemApplicationLogsConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Level) {
		level_ := LogLevel("Off")
		tmp.Level = &level_
	}
	return &tmp
}

// FileSystemApplicationLogsConfigInput is an input type that accepts FileSystemApplicationLogsConfigArgs and FileSystemApplicationLogsConfigOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigInput` via:
//
//	FileSystemApplicationLogsConfigArgs{...}
type FileSystemApplicationLogsConfigInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput
	ToFileSystemApplicationLogsConfigOutputWithContext(context.Context) FileSystemApplicationLogsConfigOutput
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigArgs struct {
	// Log level.
	Level LogLevelPtrInput `pulumi:"level"`
}

// Defaults sets the appropriate defaults for FileSystemApplicationLogsConfigArgs
func (val *FileSystemApplicationLogsConfigArgs) Defaults() *FileSystemApplicationLogsConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Level) {
		tmp.Level = LogLevel("Off")
	}
	return &tmp
}
func (FileSystemApplicationLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput {
	return i.ToFileSystemApplicationLogsConfigOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigOutput)
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return i.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i FileSystemApplicationLogsConfigArgs) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigOutput).ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx)
}

// FileSystemApplicationLogsConfigPtrInput is an input type that accepts FileSystemApplicationLogsConfigArgs, FileSystemApplicationLogsConfigPtr and FileSystemApplicationLogsConfigPtrOutput values.
// You can construct a concrete instance of `FileSystemApplicationLogsConfigPtrInput` via:
//
//	        FileSystemApplicationLogsConfigArgs{...}
//
//	or:
//
//	        nil
type FileSystemApplicationLogsConfigPtrInput interface {
	pulumi.Input

	ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput
	ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Context) FileSystemApplicationLogsConfigPtrOutput
}

type fileSystemApplicationLogsConfigPtrType FileSystemApplicationLogsConfigArgs

func FileSystemApplicationLogsConfigPtr(v *FileSystemApplicationLogsConfigArgs) FileSystemApplicationLogsConfigPtrInput {
	return (*fileSystemApplicationLogsConfigPtrType)(v)
}

func (*fileSystemApplicationLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (i *fileSystemApplicationLogsConfigPtrType) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return i.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (i *fileSystemApplicationLogsConfigPtrType) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemApplicationLogsConfigPtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigOutput() FileSystemApplicationLogsConfigOutput {
	return o
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigOutput {
	return o
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return o.ToFileSystemApplicationLogsConfigPtrOutputWithContext(context.Background())
}

func (o FileSystemApplicationLogsConfigOutput) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileSystemApplicationLogsConfig) *FileSystemApplicationLogsConfig {
		return &v
	}).(FileSystemApplicationLogsConfigPtrOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfig) *LogLevel { return v.Level }).(LogLevelPtrOutput)
}

type FileSystemApplicationLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfig)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigPtrOutput) ToFileSystemApplicationLogsConfigPtrOutput() FileSystemApplicationLogsConfigPtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigPtrOutput) ToFileSystemApplicationLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigPtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigPtrOutput) Elem() FileSystemApplicationLogsConfigOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfig) FileSystemApplicationLogsConfig {
		if v != nil {
			return *v
		}
		var ret FileSystemApplicationLogsConfig
		return ret
	}).(FileSystemApplicationLogsConfigOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigPtrOutput) Level() LogLevelPtrOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfig) *LogLevel {
		if v == nil {
			return nil
		}
		return v.Level
	}).(LogLevelPtrOutput)
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigResponse struct {
	// Log level.
	Level *string `pulumi:"level"`
}

// Defaults sets the appropriate defaults for FileSystemApplicationLogsConfigResponse
func (val *FileSystemApplicationLogsConfigResponse) Defaults() *FileSystemApplicationLogsConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Level) {
		level_ := "Off"
		tmp.Level = &level_
	}
	return &tmp
}

// Application logs to file system configuration.
type FileSystemApplicationLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponseOutput() FileSystemApplicationLogsConfigResponseOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponseOutput) ToFileSystemApplicationLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponseOutput {
	return o
}

// Log level.
func (o FileSystemApplicationLogsConfigResponseOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemApplicationLogsConfigResponse) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type FileSystemApplicationLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemApplicationLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemApplicationLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) ToFileSystemApplicationLogsConfigResponsePtrOutput() FileSystemApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) ToFileSystemApplicationLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemApplicationLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemApplicationLogsConfigResponsePtrOutput) Elem() FileSystemApplicationLogsConfigResponseOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigResponse) FileSystemApplicationLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret FileSystemApplicationLogsConfigResponse
		return ret
	}).(FileSystemApplicationLogsConfigResponseOutput)
}

// Log level.
func (o FileSystemApplicationLogsConfigResponsePtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemApplicationLogsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfig struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb *int `pulumi:"retentionInMb"`
}

// FileSystemHttpLogsConfigInput is an input type that accepts FileSystemHttpLogsConfigArgs and FileSystemHttpLogsConfigOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigInput` via:
//
//	FileSystemHttpLogsConfigArgs{...}
type FileSystemHttpLogsConfigInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput
	ToFileSystemHttpLogsConfigOutputWithContext(context.Context) FileSystemHttpLogsConfigOutput
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigArgs struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays pulumi.IntPtrInput `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb pulumi.IntPtrInput `pulumi:"retentionInMb"`
}

func (FileSystemHttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfig)(nil)).Elem()
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput {
	return i.ToFileSystemHttpLogsConfigOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigOutput)
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return i.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i FileSystemHttpLogsConfigArgs) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigOutput).ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx)
}

// FileSystemHttpLogsConfigPtrInput is an input type that accepts FileSystemHttpLogsConfigArgs, FileSystemHttpLogsConfigPtr and FileSystemHttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `FileSystemHttpLogsConfigPtrInput` via:
//
//	        FileSystemHttpLogsConfigArgs{...}
//
//	or:
//
//	        nil
type FileSystemHttpLogsConfigPtrInput interface {
	pulumi.Input

	ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput
	ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Context) FileSystemHttpLogsConfigPtrOutput
}

type fileSystemHttpLogsConfigPtrType FileSystemHttpLogsConfigArgs

func FileSystemHttpLogsConfigPtr(v *FileSystemHttpLogsConfigArgs) FileSystemHttpLogsConfigPtrInput {
	return (*fileSystemHttpLogsConfigPtrType)(v)
}

func (*fileSystemHttpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfig)(nil)).Elem()
}

func (i *fileSystemHttpLogsConfigPtrType) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return i.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *fileSystemHttpLogsConfigPtrType) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfig)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigOutput() FileSystemHttpLogsConfigOutput {
	return o
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigOutput {
	return o
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return o.ToFileSystemHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o FileSystemHttpLogsConfigOutput) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileSystemHttpLogsConfig) *FileSystemHttpLogsConfig {
		return &v
	}).(FileSystemHttpLogsConfigPtrOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfig) *int { return v.RetentionInMb }).(pulumi.IntPtrOutput)
}

type FileSystemHttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfig)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigPtrOutput) ToFileSystemHttpLogsConfigPtrOutput() FileSystemHttpLogsConfigPtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigPtrOutput) ToFileSystemHttpLogsConfigPtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigPtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigPtrOutput) Elem() FileSystemHttpLogsConfigOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) FileSystemHttpLogsConfig {
		if v != nil {
			return *v
		}
		var ret FileSystemHttpLogsConfig
		return ret
	}).(FileSystemHttpLogsConfigOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigPtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigPtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfig) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigResponse struct {
	// True if configuration is enabled, false if it is disabled and null if configuration is not set.
	Enabled *bool `pulumi:"enabled"`
	// Retention in days.
	// Remove files older than X days.
	// 0 or lower means no retention.
	RetentionInDays *int `pulumi:"retentionInDays"`
	// Maximum size in megabytes that http log files can use.
	// When reached old log files will be removed to make space for new ones.
	// Value can range between 25 and 100.
	RetentionInMb *int `pulumi:"retentionInMb"`
}

// Http logs to file system configuration.
type FileSystemHttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponseOutput() FileSystemHttpLogsConfigResponseOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponseOutput) ToFileSystemHttpLogsConfigResponseOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponseOutput {
	return o
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigResponseOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *int { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigResponseOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemHttpLogsConfigResponse) *int { return v.RetentionInMb }).(pulumi.IntPtrOutput)
}

type FileSystemHttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemHttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemHttpLogsConfigResponse)(nil)).Elem()
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) ToFileSystemHttpLogsConfigResponsePtrOutput() FileSystemHttpLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) ToFileSystemHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) FileSystemHttpLogsConfigResponsePtrOutput {
	return o
}

func (o FileSystemHttpLogsConfigResponsePtrOutput) Elem() FileSystemHttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) FileSystemHttpLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret FileSystemHttpLogsConfigResponse
		return ret
	}).(FileSystemHttpLogsConfigResponseOutput)
}

// True if configuration is enabled, false if it is disabled and null if configuration is not set.
func (o FileSystemHttpLogsConfigResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Retention in days.
// Remove files older than X days.
// 0 or lower means no retention.
func (o FileSystemHttpLogsConfigResponsePtrOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInDays
	}).(pulumi.IntPtrOutput)
}

// Maximum size in megabytes that http log files can use.
// When reached old log files will be removed to make space for new ones.
// Value can range between 25 and 100.
func (o FileSystemHttpLogsConfigResponsePtrOutput) RetentionInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FileSystemHttpLogsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInMb
	}).(pulumi.IntPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
type FileSystemTokenStore struct {
	// The directory in which the tokens will be stored.
	Directory *string `pulumi:"directory"`
}

// FileSystemTokenStoreInput is an input type that accepts FileSystemTokenStoreArgs and FileSystemTokenStoreOutput values.
// You can construct a concrete instance of `FileSystemTokenStoreInput` via:
//
//	FileSystemTokenStoreArgs{...}
type FileSystemTokenStoreInput interface {
	pulumi.Input

	ToFileSystemTokenStoreOutput() FileSystemTokenStoreOutput
	ToFileSystemTokenStoreOutputWithContext(context.Context) FileSystemTokenStoreOutput
}

// The configuration settings of the storage of the tokens if a file system is used.
type FileSystemTokenStoreArgs struct {
	// The directory in which the tokens will be stored.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
}

func (FileSystemTokenStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemTokenStore)(nil)).Elem()
}

func (i FileSystemTokenStoreArgs) ToFileSystemTokenStoreOutput() FileSystemTokenStoreOutput {
	return i.ToFileSystemTokenStoreOutputWithContext(context.Background())
}

func (i FileSystemTokenStoreArgs) ToFileSystemTokenStoreOutputWithContext(ctx context.Context) FileSystemTokenStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemTokenStoreOutput)
}

func (i FileSystemTokenStoreArgs) ToFileSystemTokenStorePtrOutput() FileSystemTokenStorePtrOutput {
	return i.ToFileSystemTokenStorePtrOutputWithContext(context.Background())
}

func (i FileSystemTokenStoreArgs) ToFileSystemTokenStorePtrOutputWithContext(ctx context.Context) FileSystemTokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemTokenStoreOutput).ToFileSystemTokenStorePtrOutputWithContext(ctx)
}

// FileSystemTokenStorePtrInput is an input type that accepts FileSystemTokenStoreArgs, FileSystemTokenStorePtr and FileSystemTokenStorePtrOutput values.
// You can construct a concrete instance of `FileSystemTokenStorePtrInput` via:
//
//	        FileSystemTokenStoreArgs{...}
//
//	or:
//
//	        nil
type FileSystemTokenStorePtrInput interface {
	pulumi.Input

	ToFileSystemTokenStorePtrOutput() FileSystemTokenStorePtrOutput
	ToFileSystemTokenStorePtrOutputWithContext(context.Context) FileSystemTokenStorePtrOutput
}

type fileSystemTokenStorePtrType FileSystemTokenStoreArgs

func FileSystemTokenStorePtr(v *FileSystemTokenStoreArgs) FileSystemTokenStorePtrInput {
	return (*fileSystemTokenStorePtrType)(v)
}

func (*fileSystemTokenStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemTokenStore)(nil)).Elem()
}

func (i *fileSystemTokenStorePtrType) ToFileSystemTokenStorePtrOutput() FileSystemTokenStorePtrOutput {
	return i.ToFileSystemTokenStorePtrOutputWithContext(context.Background())
}

func (i *fileSystemTokenStorePtrType) ToFileSystemTokenStorePtrOutputWithContext(ctx context.Context) FileSystemTokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemTokenStorePtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
type FileSystemTokenStoreOutput struct{ *pulumi.OutputState }

func (FileSystemTokenStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemTokenStore)(nil)).Elem()
}

func (o FileSystemTokenStoreOutput) ToFileSystemTokenStoreOutput() FileSystemTokenStoreOutput {
	return o
}

func (o FileSystemTokenStoreOutput) ToFileSystemTokenStoreOutputWithContext(ctx context.Context) FileSystemTokenStoreOutput {
	return o
}

func (o FileSystemTokenStoreOutput) ToFileSystemTokenStorePtrOutput() FileSystemTokenStorePtrOutput {
	return o.ToFileSystemTokenStorePtrOutputWithContext(context.Background())
}

func (o FileSystemTokenStoreOutput) ToFileSystemTokenStorePtrOutputWithContext(ctx context.Context) FileSystemTokenStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FileSystemTokenStore) *FileSystemTokenStore {
		return &v
	}).(FileSystemTokenStorePtrOutput)
}

// The directory in which the tokens will be stored.
func (o FileSystemTokenStoreOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemTokenStore) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

type FileSystemTokenStorePtrOutput struct{ *pulumi.OutputState }

func (FileSystemTokenStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemTokenStore)(nil)).Elem()
}

func (o FileSystemTokenStorePtrOutput) ToFileSystemTokenStorePtrOutput() FileSystemTokenStorePtrOutput {
	return o
}

func (o FileSystemTokenStorePtrOutput) ToFileSystemTokenStorePtrOutputWithContext(ctx context.Context) FileSystemTokenStorePtrOutput {
	return o
}

func (o FileSystemTokenStorePtrOutput) Elem() FileSystemTokenStoreOutput {
	return o.ApplyT(func(v *FileSystemTokenStore) FileSystemTokenStore {
		if v != nil {
			return *v
		}
		var ret FileSystemTokenStore
		return ret
	}).(FileSystemTokenStoreOutput)
}

// The directory in which the tokens will be stored.
func (o FileSystemTokenStorePtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemTokenStore) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
type FileSystemTokenStoreResponse struct {
	// The directory in which the tokens will be stored.
	Directory *string `pulumi:"directory"`
}

// The configuration settings of the storage of the tokens if a file system is used.
type FileSystemTokenStoreResponseOutput struct{ *pulumi.OutputState }

func (FileSystemTokenStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemTokenStoreResponse)(nil)).Elem()
}

func (o FileSystemTokenStoreResponseOutput) ToFileSystemTokenStoreResponseOutput() FileSystemTokenStoreResponseOutput {
	return o
}

func (o FileSystemTokenStoreResponseOutput) ToFileSystemTokenStoreResponseOutputWithContext(ctx context.Context) FileSystemTokenStoreResponseOutput {
	return o
}

// The directory in which the tokens will be stored.
func (o FileSystemTokenStoreResponseOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemTokenStoreResponse) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

type FileSystemTokenStoreResponsePtrOutput struct{ *pulumi.OutputState }

func (FileSystemTokenStoreResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystemTokenStoreResponse)(nil)).Elem()
}

func (o FileSystemTokenStoreResponsePtrOutput) ToFileSystemTokenStoreResponsePtrOutput() FileSystemTokenStoreResponsePtrOutput {
	return o
}

func (o FileSystemTokenStoreResponsePtrOutput) ToFileSystemTokenStoreResponsePtrOutputWithContext(ctx context.Context) FileSystemTokenStoreResponsePtrOutput {
	return o
}

func (o FileSystemTokenStoreResponsePtrOutput) Elem() FileSystemTokenStoreResponseOutput {
	return o.ApplyT(func(v *FileSystemTokenStoreResponse) FileSystemTokenStoreResponse {
		if v != nil {
			return *v
		}
		var ret FileSystemTokenStoreResponse
		return ret
	}).(FileSystemTokenStoreResponseOutput)
}

// The directory in which the tokens will be stored.
func (o FileSystemTokenStoreResponsePtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FileSystemTokenStoreResponse) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of a forward proxy used to make the requests.
type ForwardProxy struct {
	// The convention used to determine the url of the request made.
	Convention *ForwardProxyConvention `pulumi:"convention"`
	// The name of the header containing the host of the request.
	CustomHostHeaderName *string `pulumi:"customHostHeaderName"`
	// The name of the header containing the scheme of the request.
	CustomProtoHeaderName *string `pulumi:"customProtoHeaderName"`
}

// ForwardProxyInput is an input type that accepts ForwardProxyArgs and ForwardProxyOutput values.
// You can construct a concrete instance of `ForwardProxyInput` via:
//
//	ForwardProxyArgs{...}
type ForwardProxyInput interface {
	pulumi.Input

	ToForwardProxyOutput() ForwardProxyOutput
	ToForwardProxyOutputWithContext(context.Context) ForwardProxyOutput
}

// The configuration settings of a forward proxy used to make the requests.
type ForwardProxyArgs struct {
	// The convention used to determine the url of the request made.
	Convention ForwardProxyConventionPtrInput `pulumi:"convention"`
	// The name of the header containing the host of the request.
	CustomHostHeaderName pulumi.StringPtrInput `pulumi:"customHostHeaderName"`
	// The name of the header containing the scheme of the request.
	CustomProtoHeaderName pulumi.StringPtrInput `pulumi:"customProtoHeaderName"`
}

func (ForwardProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxy)(nil)).Elem()
}

func (i ForwardProxyArgs) ToForwardProxyOutput() ForwardProxyOutput {
	return i.ToForwardProxyOutputWithContext(context.Background())
}

func (i ForwardProxyArgs) ToForwardProxyOutputWithContext(ctx context.Context) ForwardProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardProxyOutput)
}

func (i ForwardProxyArgs) ToForwardProxyPtrOutput() ForwardProxyPtrOutput {
	return i.ToForwardProxyPtrOutputWithContext(context.Background())
}

func (i ForwardProxyArgs) ToForwardProxyPtrOutputWithContext(ctx context.Context) ForwardProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardProxyOutput).ToForwardProxyPtrOutputWithContext(ctx)
}

// ForwardProxyPtrInput is an input type that accepts ForwardProxyArgs, ForwardProxyPtr and ForwardProxyPtrOutput values.
// You can construct a concrete instance of `ForwardProxyPtrInput` via:
//
//	        ForwardProxyArgs{...}
//
//	or:
//
//	        nil
type ForwardProxyPtrInput interface {
	pulumi.Input

	ToForwardProxyPtrOutput() ForwardProxyPtrOutput
	ToForwardProxyPtrOutputWithContext(context.Context) ForwardProxyPtrOutput
}

type forwardProxyPtrType ForwardProxyArgs

func ForwardProxyPtr(v *ForwardProxyArgs) ForwardProxyPtrInput {
	return (*forwardProxyPtrType)(v)
}

func (*forwardProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardProxy)(nil)).Elem()
}

func (i *forwardProxyPtrType) ToForwardProxyPtrOutput() ForwardProxyPtrOutput {
	return i.ToForwardProxyPtrOutputWithContext(context.Background())
}

func (i *forwardProxyPtrType) ToForwardProxyPtrOutputWithContext(ctx context.Context) ForwardProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardProxyPtrOutput)
}

// The configuration settings of a forward proxy used to make the requests.
type ForwardProxyOutput struct{ *pulumi.OutputState }

func (ForwardProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxy)(nil)).Elem()
}

func (o ForwardProxyOutput) ToForwardProxyOutput() ForwardProxyOutput {
	return o
}

func (o ForwardProxyOutput) ToForwardProxyOutputWithContext(ctx context.Context) ForwardProxyOutput {
	return o
}

func (o ForwardProxyOutput) ToForwardProxyPtrOutput() ForwardProxyPtrOutput {
	return o.ToForwardProxyPtrOutputWithContext(context.Background())
}

func (o ForwardProxyOutput) ToForwardProxyPtrOutputWithContext(ctx context.Context) ForwardProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardProxy) *ForwardProxy {
		return &v
	}).(ForwardProxyPtrOutput)
}

// The convention used to determine the url of the request made.
func (o ForwardProxyOutput) Convention() ForwardProxyConventionPtrOutput {
	return o.ApplyT(func(v ForwardProxy) *ForwardProxyConvention { return v.Convention }).(ForwardProxyConventionPtrOutput)
}

// The name of the header containing the host of the request.
func (o ForwardProxyOutput) CustomHostHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardProxy) *string { return v.CustomHostHeaderName }).(pulumi.StringPtrOutput)
}

// The name of the header containing the scheme of the request.
func (o ForwardProxyOutput) CustomProtoHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardProxy) *string { return v.CustomProtoHeaderName }).(pulumi.StringPtrOutput)
}

type ForwardProxyPtrOutput struct{ *pulumi.OutputState }

func (ForwardProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardProxy)(nil)).Elem()
}

func (o ForwardProxyPtrOutput) ToForwardProxyPtrOutput() ForwardProxyPtrOutput {
	return o
}

func (o ForwardProxyPtrOutput) ToForwardProxyPtrOutputWithContext(ctx context.Context) ForwardProxyPtrOutput {
	return o
}

func (o ForwardProxyPtrOutput) Elem() ForwardProxyOutput {
	return o.ApplyT(func(v *ForwardProxy) ForwardProxy {
		if v != nil {
			return *v
		}
		var ret ForwardProxy
		return ret
	}).(ForwardProxyOutput)
}

// The convention used to determine the url of the request made.
func (o ForwardProxyPtrOutput) Convention() ForwardProxyConventionPtrOutput {
	return o.ApplyT(func(v *ForwardProxy) *ForwardProxyConvention {
		if v == nil {
			return nil
		}
		return v.Convention
	}).(ForwardProxyConventionPtrOutput)
}

// The name of the header containing the host of the request.
func (o ForwardProxyPtrOutput) CustomHostHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardProxy) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostHeaderName
	}).(pulumi.StringPtrOutput)
}

// The name of the header containing the scheme of the request.
func (o ForwardProxyPtrOutput) CustomProtoHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardProxy) *string {
		if v == nil {
			return nil
		}
		return v.CustomProtoHeaderName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of a forward proxy used to make the requests.
type ForwardProxyResponse struct {
	// The convention used to determine the url of the request made.
	Convention *string `pulumi:"convention"`
	// The name of the header containing the host of the request.
	CustomHostHeaderName *string `pulumi:"customHostHeaderName"`
	// The name of the header containing the scheme of the request.
	CustomProtoHeaderName *string `pulumi:"customProtoHeaderName"`
}

// The configuration settings of a forward proxy used to make the requests.
type ForwardProxyResponseOutput struct{ *pulumi.OutputState }

func (ForwardProxyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardProxyResponse)(nil)).Elem()
}

func (o ForwardProxyResponseOutput) ToForwardProxyResponseOutput() ForwardProxyResponseOutput {
	return o
}

func (o ForwardProxyResponseOutput) ToForwardProxyResponseOutputWithContext(ctx context.Context) ForwardProxyResponseOutput {
	return o
}

// The convention used to determine the url of the request made.
func (o ForwardProxyResponseOutput) Convention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardProxyResponse) *string { return v.Convention }).(pulumi.StringPtrOutput)
}

// The name of the header containing the host of the request.
func (o ForwardProxyResponseOutput) CustomHostHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardProxyResponse) *string { return v.CustomHostHeaderName }).(pulumi.StringPtrOutput)
}

// The name of the header containing the scheme of the request.
func (o ForwardProxyResponseOutput) CustomProtoHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardProxyResponse) *string { return v.CustomProtoHeaderName }).(pulumi.StringPtrOutput)
}

type ForwardProxyResponsePtrOutput struct{ *pulumi.OutputState }

func (ForwardProxyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardProxyResponse)(nil)).Elem()
}

func (o ForwardProxyResponsePtrOutput) ToForwardProxyResponsePtrOutput() ForwardProxyResponsePtrOutput {
	return o
}

func (o ForwardProxyResponsePtrOutput) ToForwardProxyResponsePtrOutputWithContext(ctx context.Context) ForwardProxyResponsePtrOutput {
	return o
}

func (o ForwardProxyResponsePtrOutput) Elem() ForwardProxyResponseOutput {
	return o.ApplyT(func(v *ForwardProxyResponse) ForwardProxyResponse {
		if v != nil {
			return *v
		}
		var ret ForwardProxyResponse
		return ret
	}).(ForwardProxyResponseOutput)
}

// The convention used to determine the url of the request made.
func (o ForwardProxyResponsePtrOutput) Convention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardProxyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Convention
	}).(pulumi.StringPtrOutput)
}

// The name of the header containing the host of the request.
func (o ForwardProxyResponsePtrOutput) CustomHostHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardProxyResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostHeaderName
	}).(pulumi.StringPtrOutput)
}

// The name of the header containing the scheme of the request.
func (o ForwardProxyResponsePtrOutput) CustomProtoHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ForwardProxyResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomProtoHeaderName
	}).(pulumi.StringPtrOutput)
}

type FrontEndConfiguration struct {
	Kind *FrontEndServiceType `pulumi:"kind"`
}

// FrontEndConfigurationInput is an input type that accepts FrontEndConfigurationArgs and FrontEndConfigurationOutput values.
// You can construct a concrete instance of `FrontEndConfigurationInput` via:
//
//	FrontEndConfigurationArgs{...}
type FrontEndConfigurationInput interface {
	pulumi.Input

	ToFrontEndConfigurationOutput() FrontEndConfigurationOutput
	ToFrontEndConfigurationOutputWithContext(context.Context) FrontEndConfigurationOutput
}

type FrontEndConfigurationArgs struct {
	Kind FrontEndServiceTypePtrInput `pulumi:"kind"`
}

func (FrontEndConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontEndConfiguration)(nil)).Elem()
}

func (i FrontEndConfigurationArgs) ToFrontEndConfigurationOutput() FrontEndConfigurationOutput {
	return i.ToFrontEndConfigurationOutputWithContext(context.Background())
}

func (i FrontEndConfigurationArgs) ToFrontEndConfigurationOutputWithContext(ctx context.Context) FrontEndConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontEndConfigurationOutput)
}

func (i FrontEndConfigurationArgs) ToFrontEndConfigurationPtrOutput() FrontEndConfigurationPtrOutput {
	return i.ToFrontEndConfigurationPtrOutputWithContext(context.Background())
}

func (i FrontEndConfigurationArgs) ToFrontEndConfigurationPtrOutputWithContext(ctx context.Context) FrontEndConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontEndConfigurationOutput).ToFrontEndConfigurationPtrOutputWithContext(ctx)
}

// FrontEndConfigurationPtrInput is an input type that accepts FrontEndConfigurationArgs, FrontEndConfigurationPtr and FrontEndConfigurationPtrOutput values.
// You can construct a concrete instance of `FrontEndConfigurationPtrInput` via:
//
//	        FrontEndConfigurationArgs{...}
//
//	or:
//
//	        nil
type FrontEndConfigurationPtrInput interface {
	pulumi.Input

	ToFrontEndConfigurationPtrOutput() FrontEndConfigurationPtrOutput
	ToFrontEndConfigurationPtrOutputWithContext(context.Context) FrontEndConfigurationPtrOutput
}

type frontEndConfigurationPtrType FrontEndConfigurationArgs

func FrontEndConfigurationPtr(v *FrontEndConfigurationArgs) FrontEndConfigurationPtrInput {
	return (*frontEndConfigurationPtrType)(v)
}

func (*frontEndConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontEndConfiguration)(nil)).Elem()
}

func (i *frontEndConfigurationPtrType) ToFrontEndConfigurationPtrOutput() FrontEndConfigurationPtrOutput {
	return i.ToFrontEndConfigurationPtrOutputWithContext(context.Background())
}

func (i *frontEndConfigurationPtrType) ToFrontEndConfigurationPtrOutputWithContext(ctx context.Context) FrontEndConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontEndConfigurationPtrOutput)
}

type FrontEndConfigurationOutput struct{ *pulumi.OutputState }

func (FrontEndConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontEndConfiguration)(nil)).Elem()
}

func (o FrontEndConfigurationOutput) ToFrontEndConfigurationOutput() FrontEndConfigurationOutput {
	return o
}

func (o FrontEndConfigurationOutput) ToFrontEndConfigurationOutputWithContext(ctx context.Context) FrontEndConfigurationOutput {
	return o
}

func (o FrontEndConfigurationOutput) ToFrontEndConfigurationPtrOutput() FrontEndConfigurationPtrOutput {
	return o.ToFrontEndConfigurationPtrOutputWithContext(context.Background())
}

func (o FrontEndConfigurationOutput) ToFrontEndConfigurationPtrOutputWithContext(ctx context.Context) FrontEndConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrontEndConfiguration) *FrontEndConfiguration {
		return &v
	}).(FrontEndConfigurationPtrOutput)
}

func (o FrontEndConfigurationOutput) Kind() FrontEndServiceTypePtrOutput {
	return o.ApplyT(func(v FrontEndConfiguration) *FrontEndServiceType { return v.Kind }).(FrontEndServiceTypePtrOutput)
}

type FrontEndConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FrontEndConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontEndConfiguration)(nil)).Elem()
}

func (o FrontEndConfigurationPtrOutput) ToFrontEndConfigurationPtrOutput() FrontEndConfigurationPtrOutput {
	return o
}

func (o FrontEndConfigurationPtrOutput) ToFrontEndConfigurationPtrOutputWithContext(ctx context.Context) FrontEndConfigurationPtrOutput {
	return o
}

func (o FrontEndConfigurationPtrOutput) Elem() FrontEndConfigurationOutput {
	return o.ApplyT(func(v *FrontEndConfiguration) FrontEndConfiguration {
		if v != nil {
			return *v
		}
		var ret FrontEndConfiguration
		return ret
	}).(FrontEndConfigurationOutput)
}

func (o FrontEndConfigurationPtrOutput) Kind() FrontEndServiceTypePtrOutput {
	return o.ApplyT(func(v *FrontEndConfiguration) *FrontEndServiceType {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(FrontEndServiceTypePtrOutput)
}

type FrontEndConfigurationResponse struct {
	Kind *string `pulumi:"kind"`
}

type FrontEndConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontEndConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontEndConfigurationResponse)(nil)).Elem()
}

func (o FrontEndConfigurationResponseOutput) ToFrontEndConfigurationResponseOutput() FrontEndConfigurationResponseOutput {
	return o
}

func (o FrontEndConfigurationResponseOutput) ToFrontEndConfigurationResponseOutputWithContext(ctx context.Context) FrontEndConfigurationResponseOutput {
	return o
}

func (o FrontEndConfigurationResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontEndConfigurationResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

type FrontEndConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontEndConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontEndConfigurationResponse)(nil)).Elem()
}

func (o FrontEndConfigurationResponsePtrOutput) ToFrontEndConfigurationResponsePtrOutput() FrontEndConfigurationResponsePtrOutput {
	return o
}

func (o FrontEndConfigurationResponsePtrOutput) ToFrontEndConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontEndConfigurationResponsePtrOutput {
	return o
}

func (o FrontEndConfigurationResponsePtrOutput) Elem() FrontEndConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontEndConfigurationResponse) FrontEndConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret FrontEndConfigurationResponse
		return ret
	}).(FrontEndConfigurationResponseOutput)
}

func (o FrontEndConfigurationResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontEndConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the GitHub provider.
type GitHub struct {
	// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopes `pulumi:"login"`
	// The configuration settings of the app registration for the GitHub provider.
	Registration *ClientRegistration `pulumi:"registration"`
}

// GitHubInput is an input type that accepts GitHubArgs and GitHubOutput values.
// You can construct a concrete instance of `GitHubInput` via:
//
//	GitHubArgs{...}
type GitHubInput interface {
	pulumi.Input

	ToGitHubOutput() GitHubOutput
	ToGitHubOutputWithContext(context.Context) GitHubOutput
}

// The configuration settings of the GitHub provider.
type GitHubArgs struct {
	// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login LoginScopesPtrInput `pulumi:"login"`
	// The configuration settings of the app registration for the GitHub provider.
	Registration ClientRegistrationPtrInput `pulumi:"registration"`
}

func (GitHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHub)(nil)).Elem()
}

func (i GitHubArgs) ToGitHubOutput() GitHubOutput {
	return i.ToGitHubOutputWithContext(context.Background())
}

func (i GitHubArgs) ToGitHubOutputWithContext(ctx context.Context) GitHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubOutput)
}

func (i GitHubArgs) ToGitHubPtrOutput() GitHubPtrOutput {
	return i.ToGitHubPtrOutputWithContext(context.Background())
}

func (i GitHubArgs) ToGitHubPtrOutputWithContext(ctx context.Context) GitHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubOutput).ToGitHubPtrOutputWithContext(ctx)
}

// GitHubPtrInput is an input type that accepts GitHubArgs, GitHubPtr and GitHubPtrOutput values.
// You can construct a concrete instance of `GitHubPtrInput` via:
//
//	        GitHubArgs{...}
//
//	or:
//
//	        nil
type GitHubPtrInput interface {
	pulumi.Input

	ToGitHubPtrOutput() GitHubPtrOutput
	ToGitHubPtrOutputWithContext(context.Context) GitHubPtrOutput
}

type gitHubPtrType GitHubArgs

func GitHubPtr(v *GitHubArgs) GitHubPtrInput {
	return (*gitHubPtrType)(v)
}

func (*gitHubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHub)(nil)).Elem()
}

func (i *gitHubPtrType) ToGitHubPtrOutput() GitHubPtrOutput {
	return i.ToGitHubPtrOutputWithContext(context.Background())
}

func (i *gitHubPtrType) ToGitHubPtrOutputWithContext(ctx context.Context) GitHubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubPtrOutput)
}

// The configuration settings of the GitHub provider.
type GitHubOutput struct{ *pulumi.OutputState }

func (GitHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHub)(nil)).Elem()
}

func (o GitHubOutput) ToGitHubOutput() GitHubOutput {
	return o
}

func (o GitHubOutput) ToGitHubOutputWithContext(ctx context.Context) GitHubOutput {
	return o
}

func (o GitHubOutput) ToGitHubPtrOutput() GitHubPtrOutput {
	return o.ToGitHubPtrOutputWithContext(context.Background())
}

func (o GitHubOutput) ToGitHubPtrOutputWithContext(ctx context.Context) GitHubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHub) *GitHub {
		return &v
	}).(GitHubPtrOutput)
}

// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GitHubOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHub) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GitHubOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v GitHub) *LoginScopes { return v.Login }).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the GitHub provider.
func (o GitHubOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v GitHub) *ClientRegistration { return v.Registration }).(ClientRegistrationPtrOutput)
}

type GitHubPtrOutput struct{ *pulumi.OutputState }

func (GitHubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHub)(nil)).Elem()
}

func (o GitHubPtrOutput) ToGitHubPtrOutput() GitHubPtrOutput {
	return o
}

func (o GitHubPtrOutput) ToGitHubPtrOutputWithContext(ctx context.Context) GitHubPtrOutput {
	return o
}

func (o GitHubPtrOutput) Elem() GitHubOutput {
	return o.ApplyT(func(v *GitHub) GitHub {
		if v != nil {
			return *v
		}
		var ret GitHub
		return ret
	}).(GitHubOutput)
}

// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GitHubPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHub) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GitHubPtrOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v *GitHub) *LoginScopes {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the GitHub provider.
func (o GitHubPtrOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v *GitHub) *ClientRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationPtrOutput)
}

// The GitHub action code configuration.
type GitHubActionCodeConfiguration struct {
	// Runtime stack is used to determine the workflow file content for code base apps.
	RuntimeStack *string `pulumi:"runtimeStack"`
	// Runtime version is used to determine what build version to set in the workflow file.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// GitHubActionCodeConfigurationInput is an input type that accepts GitHubActionCodeConfigurationArgs and GitHubActionCodeConfigurationOutput values.
// You can construct a concrete instance of `GitHubActionCodeConfigurationInput` via:
//
//	GitHubActionCodeConfigurationArgs{...}
type GitHubActionCodeConfigurationInput interface {
	pulumi.Input

	ToGitHubActionCodeConfigurationOutput() GitHubActionCodeConfigurationOutput
	ToGitHubActionCodeConfigurationOutputWithContext(context.Context) GitHubActionCodeConfigurationOutput
}

// The GitHub action code configuration.
type GitHubActionCodeConfigurationArgs struct {
	// Runtime stack is used to determine the workflow file content for code base apps.
	RuntimeStack pulumi.StringPtrInput `pulumi:"runtimeStack"`
	// Runtime version is used to determine what build version to set in the workflow file.
	RuntimeVersion pulumi.StringPtrInput `pulumi:"runtimeVersion"`
}

func (GitHubActionCodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionCodeConfiguration)(nil)).Elem()
}

func (i GitHubActionCodeConfigurationArgs) ToGitHubActionCodeConfigurationOutput() GitHubActionCodeConfigurationOutput {
	return i.ToGitHubActionCodeConfigurationOutputWithContext(context.Background())
}

func (i GitHubActionCodeConfigurationArgs) ToGitHubActionCodeConfigurationOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionCodeConfigurationOutput)
}

func (i GitHubActionCodeConfigurationArgs) ToGitHubActionCodeConfigurationPtrOutput() GitHubActionCodeConfigurationPtrOutput {
	return i.ToGitHubActionCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i GitHubActionCodeConfigurationArgs) ToGitHubActionCodeConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionCodeConfigurationOutput).ToGitHubActionCodeConfigurationPtrOutputWithContext(ctx)
}

// GitHubActionCodeConfigurationPtrInput is an input type that accepts GitHubActionCodeConfigurationArgs, GitHubActionCodeConfigurationPtr and GitHubActionCodeConfigurationPtrOutput values.
// You can construct a concrete instance of `GitHubActionCodeConfigurationPtrInput` via:
//
//	        GitHubActionCodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type GitHubActionCodeConfigurationPtrInput interface {
	pulumi.Input

	ToGitHubActionCodeConfigurationPtrOutput() GitHubActionCodeConfigurationPtrOutput
	ToGitHubActionCodeConfigurationPtrOutputWithContext(context.Context) GitHubActionCodeConfigurationPtrOutput
}

type gitHubActionCodeConfigurationPtrType GitHubActionCodeConfigurationArgs

func GitHubActionCodeConfigurationPtr(v *GitHubActionCodeConfigurationArgs) GitHubActionCodeConfigurationPtrInput {
	return (*gitHubActionCodeConfigurationPtrType)(v)
}

func (*gitHubActionCodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionCodeConfiguration)(nil)).Elem()
}

func (i *gitHubActionCodeConfigurationPtrType) ToGitHubActionCodeConfigurationPtrOutput() GitHubActionCodeConfigurationPtrOutput {
	return i.ToGitHubActionCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *gitHubActionCodeConfigurationPtrType) ToGitHubActionCodeConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionCodeConfigurationPtrOutput)
}

// The GitHub action code configuration.
type GitHubActionCodeConfigurationOutput struct{ *pulumi.OutputState }

func (GitHubActionCodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionCodeConfiguration)(nil)).Elem()
}

func (o GitHubActionCodeConfigurationOutput) ToGitHubActionCodeConfigurationOutput() GitHubActionCodeConfigurationOutput {
	return o
}

func (o GitHubActionCodeConfigurationOutput) ToGitHubActionCodeConfigurationOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationOutput {
	return o
}

func (o GitHubActionCodeConfigurationOutput) ToGitHubActionCodeConfigurationPtrOutput() GitHubActionCodeConfigurationPtrOutput {
	return o.ToGitHubActionCodeConfigurationPtrOutputWithContext(context.Background())
}

func (o GitHubActionCodeConfigurationOutput) ToGitHubActionCodeConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubActionCodeConfiguration) *GitHubActionCodeConfiguration {
		return &v
	}).(GitHubActionCodeConfigurationPtrOutput)
}

// Runtime stack is used to determine the workflow file content for code base apps.
func (o GitHubActionCodeConfigurationOutput) RuntimeStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionCodeConfiguration) *string { return v.RuntimeStack }).(pulumi.StringPtrOutput)
}

// Runtime version is used to determine what build version to set in the workflow file.
func (o GitHubActionCodeConfigurationOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionCodeConfiguration) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

type GitHubActionCodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GitHubActionCodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionCodeConfiguration)(nil)).Elem()
}

func (o GitHubActionCodeConfigurationPtrOutput) ToGitHubActionCodeConfigurationPtrOutput() GitHubActionCodeConfigurationPtrOutput {
	return o
}

func (o GitHubActionCodeConfigurationPtrOutput) ToGitHubActionCodeConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationPtrOutput {
	return o
}

func (o GitHubActionCodeConfigurationPtrOutput) Elem() GitHubActionCodeConfigurationOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfiguration) GitHubActionCodeConfiguration {
		if v != nil {
			return *v
		}
		var ret GitHubActionCodeConfiguration
		return ret
	}).(GitHubActionCodeConfigurationOutput)
}

// Runtime stack is used to determine the workflow file content for code base apps.
func (o GitHubActionCodeConfigurationPtrOutput) RuntimeStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeStack
	}).(pulumi.StringPtrOutput)
}

// Runtime version is used to determine what build version to set in the workflow file.
func (o GitHubActionCodeConfigurationPtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The GitHub action code configuration.
type GitHubActionCodeConfigurationResponse struct {
	// Runtime stack is used to determine the workflow file content for code base apps.
	RuntimeStack *string `pulumi:"runtimeStack"`
	// Runtime version is used to determine what build version to set in the workflow file.
	RuntimeVersion *string `pulumi:"runtimeVersion"`
}

// The GitHub action code configuration.
type GitHubActionCodeConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GitHubActionCodeConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionCodeConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionCodeConfigurationResponseOutput) ToGitHubActionCodeConfigurationResponseOutput() GitHubActionCodeConfigurationResponseOutput {
	return o
}

func (o GitHubActionCodeConfigurationResponseOutput) ToGitHubActionCodeConfigurationResponseOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationResponseOutput {
	return o
}

// Runtime stack is used to determine the workflow file content for code base apps.
func (o GitHubActionCodeConfigurationResponseOutput) RuntimeStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionCodeConfigurationResponse) *string { return v.RuntimeStack }).(pulumi.StringPtrOutput)
}

// Runtime version is used to determine what build version to set in the workflow file.
func (o GitHubActionCodeConfigurationResponseOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionCodeConfigurationResponse) *string { return v.RuntimeVersion }).(pulumi.StringPtrOutput)
}

type GitHubActionCodeConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubActionCodeConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionCodeConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionCodeConfigurationResponsePtrOutput) ToGitHubActionCodeConfigurationResponsePtrOutput() GitHubActionCodeConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionCodeConfigurationResponsePtrOutput) ToGitHubActionCodeConfigurationResponsePtrOutputWithContext(ctx context.Context) GitHubActionCodeConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionCodeConfigurationResponsePtrOutput) Elem() GitHubActionCodeConfigurationResponseOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfigurationResponse) GitHubActionCodeConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GitHubActionCodeConfigurationResponse
		return ret
	}).(GitHubActionCodeConfigurationResponseOutput)
}

// Runtime stack is used to determine the workflow file content for code base apps.
func (o GitHubActionCodeConfigurationResponsePtrOutput) RuntimeStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeStack
	}).(pulumi.StringPtrOutput)
}

// Runtime version is used to determine what build version to set in the workflow file.
func (o GitHubActionCodeConfigurationResponsePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionCodeConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

// The GitHub action configuration.
type GitHubActionConfiguration struct {
	// GitHub Action code configuration.
	CodeConfiguration *GitHubActionCodeConfiguration `pulumi:"codeConfiguration"`
	// GitHub Action container configuration.
	ContainerConfiguration *GitHubActionContainerConfiguration `pulumi:"containerConfiguration"`
	// Workflow option to determine whether the workflow file should be generated and written to the repository.
	GenerateWorkflowFile *bool `pulumi:"generateWorkflowFile"`
	// This will help determine the workflow configuration to select.
	IsLinux *bool `pulumi:"isLinux"`
}

// GitHubActionConfigurationInput is an input type that accepts GitHubActionConfigurationArgs and GitHubActionConfigurationOutput values.
// You can construct a concrete instance of `GitHubActionConfigurationInput` via:
//
//	GitHubActionConfigurationArgs{...}
type GitHubActionConfigurationInput interface {
	pulumi.Input

	ToGitHubActionConfigurationOutput() GitHubActionConfigurationOutput
	ToGitHubActionConfigurationOutputWithContext(context.Context) GitHubActionConfigurationOutput
}

// The GitHub action configuration.
type GitHubActionConfigurationArgs struct {
	// GitHub Action code configuration.
	CodeConfiguration GitHubActionCodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// GitHub Action container configuration.
	ContainerConfiguration GitHubActionContainerConfigurationPtrInput `pulumi:"containerConfiguration"`
	// Workflow option to determine whether the workflow file should be generated and written to the repository.
	GenerateWorkflowFile pulumi.BoolPtrInput `pulumi:"generateWorkflowFile"`
	// This will help determine the workflow configuration to select.
	IsLinux pulumi.BoolPtrInput `pulumi:"isLinux"`
}

func (GitHubActionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionConfiguration)(nil)).Elem()
}

func (i GitHubActionConfigurationArgs) ToGitHubActionConfigurationOutput() GitHubActionConfigurationOutput {
	return i.ToGitHubActionConfigurationOutputWithContext(context.Background())
}

func (i GitHubActionConfigurationArgs) ToGitHubActionConfigurationOutputWithContext(ctx context.Context) GitHubActionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionConfigurationOutput)
}

func (i GitHubActionConfigurationArgs) ToGitHubActionConfigurationPtrOutput() GitHubActionConfigurationPtrOutput {
	return i.ToGitHubActionConfigurationPtrOutputWithContext(context.Background())
}

func (i GitHubActionConfigurationArgs) ToGitHubActionConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionConfigurationOutput).ToGitHubActionConfigurationPtrOutputWithContext(ctx)
}

// GitHubActionConfigurationPtrInput is an input type that accepts GitHubActionConfigurationArgs, GitHubActionConfigurationPtr and GitHubActionConfigurationPtrOutput values.
// You can construct a concrete instance of `GitHubActionConfigurationPtrInput` via:
//
//	        GitHubActionConfigurationArgs{...}
//
//	or:
//
//	        nil
type GitHubActionConfigurationPtrInput interface {
	pulumi.Input

	ToGitHubActionConfigurationPtrOutput() GitHubActionConfigurationPtrOutput
	ToGitHubActionConfigurationPtrOutputWithContext(context.Context) GitHubActionConfigurationPtrOutput
}

type gitHubActionConfigurationPtrType GitHubActionConfigurationArgs

func GitHubActionConfigurationPtr(v *GitHubActionConfigurationArgs) GitHubActionConfigurationPtrInput {
	return (*gitHubActionConfigurationPtrType)(v)
}

func (*gitHubActionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionConfiguration)(nil)).Elem()
}

func (i *gitHubActionConfigurationPtrType) ToGitHubActionConfigurationPtrOutput() GitHubActionConfigurationPtrOutput {
	return i.ToGitHubActionConfigurationPtrOutputWithContext(context.Background())
}

func (i *gitHubActionConfigurationPtrType) ToGitHubActionConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionConfigurationPtrOutput)
}

// The GitHub action configuration.
type GitHubActionConfigurationOutput struct{ *pulumi.OutputState }

func (GitHubActionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionConfiguration)(nil)).Elem()
}

func (o GitHubActionConfigurationOutput) ToGitHubActionConfigurationOutput() GitHubActionConfigurationOutput {
	return o
}

func (o GitHubActionConfigurationOutput) ToGitHubActionConfigurationOutputWithContext(ctx context.Context) GitHubActionConfigurationOutput {
	return o
}

func (o GitHubActionConfigurationOutput) ToGitHubActionConfigurationPtrOutput() GitHubActionConfigurationPtrOutput {
	return o.ToGitHubActionConfigurationPtrOutputWithContext(context.Background())
}

func (o GitHubActionConfigurationOutput) ToGitHubActionConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubActionConfiguration) *GitHubActionConfiguration {
		return &v
	}).(GitHubActionConfigurationPtrOutput)
}

// GitHub Action code configuration.
func (o GitHubActionConfigurationOutput) CodeConfiguration() GitHubActionCodeConfigurationPtrOutput {
	return o.ApplyT(func(v GitHubActionConfiguration) *GitHubActionCodeConfiguration { return v.CodeConfiguration }).(GitHubActionCodeConfigurationPtrOutput)
}

// GitHub Action container configuration.
func (o GitHubActionConfigurationOutput) ContainerConfiguration() GitHubActionContainerConfigurationPtrOutput {
	return o.ApplyT(func(v GitHubActionConfiguration) *GitHubActionContainerConfiguration { return v.ContainerConfiguration }).(GitHubActionContainerConfigurationPtrOutput)
}

// Workflow option to determine whether the workflow file should be generated and written to the repository.
func (o GitHubActionConfigurationOutput) GenerateWorkflowFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubActionConfiguration) *bool { return v.GenerateWorkflowFile }).(pulumi.BoolPtrOutput)
}

// This will help determine the workflow configuration to select.
func (o GitHubActionConfigurationOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubActionConfiguration) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

type GitHubActionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GitHubActionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionConfiguration)(nil)).Elem()
}

func (o GitHubActionConfigurationPtrOutput) ToGitHubActionConfigurationPtrOutput() GitHubActionConfigurationPtrOutput {
	return o
}

func (o GitHubActionConfigurationPtrOutput) ToGitHubActionConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionConfigurationPtrOutput {
	return o
}

func (o GitHubActionConfigurationPtrOutput) Elem() GitHubActionConfigurationOutput {
	return o.ApplyT(func(v *GitHubActionConfiguration) GitHubActionConfiguration {
		if v != nil {
			return *v
		}
		var ret GitHubActionConfiguration
		return ret
	}).(GitHubActionConfigurationOutput)
}

// GitHub Action code configuration.
func (o GitHubActionConfigurationPtrOutput) CodeConfiguration() GitHubActionCodeConfigurationPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfiguration) *GitHubActionCodeConfiguration {
		if v == nil {
			return nil
		}
		return v.CodeConfiguration
	}).(GitHubActionCodeConfigurationPtrOutput)
}

// GitHub Action container configuration.
func (o GitHubActionConfigurationPtrOutput) ContainerConfiguration() GitHubActionContainerConfigurationPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfiguration) *GitHubActionContainerConfiguration {
		if v == nil {
			return nil
		}
		return v.ContainerConfiguration
	}).(GitHubActionContainerConfigurationPtrOutput)
}

// Workflow option to determine whether the workflow file should be generated and written to the repository.
func (o GitHubActionConfigurationPtrOutput) GenerateWorkflowFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.GenerateWorkflowFile
	}).(pulumi.BoolPtrOutput)
}

// This will help determine the workflow configuration to select.
func (o GitHubActionConfigurationPtrOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsLinux
	}).(pulumi.BoolPtrOutput)
}

// The GitHub action configuration.
type GitHubActionConfigurationResponse struct {
	// GitHub Action code configuration.
	CodeConfiguration *GitHubActionCodeConfigurationResponse `pulumi:"codeConfiguration"`
	// GitHub Action container configuration.
	ContainerConfiguration *GitHubActionContainerConfigurationResponse `pulumi:"containerConfiguration"`
	// Workflow option to determine whether the workflow file should be generated and written to the repository.
	GenerateWorkflowFile *bool `pulumi:"generateWorkflowFile"`
	// This will help determine the workflow configuration to select.
	IsLinux *bool `pulumi:"isLinux"`
}

// The GitHub action configuration.
type GitHubActionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GitHubActionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionConfigurationResponseOutput) ToGitHubActionConfigurationResponseOutput() GitHubActionConfigurationResponseOutput {
	return o
}

func (o GitHubActionConfigurationResponseOutput) ToGitHubActionConfigurationResponseOutputWithContext(ctx context.Context) GitHubActionConfigurationResponseOutput {
	return o
}

// GitHub Action code configuration.
func (o GitHubActionConfigurationResponseOutput) CodeConfiguration() GitHubActionCodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v GitHubActionConfigurationResponse) *GitHubActionCodeConfigurationResponse {
		return v.CodeConfiguration
	}).(GitHubActionCodeConfigurationResponsePtrOutput)
}

// GitHub Action container configuration.
func (o GitHubActionConfigurationResponseOutput) ContainerConfiguration() GitHubActionContainerConfigurationResponsePtrOutput {
	return o.ApplyT(func(v GitHubActionConfigurationResponse) *GitHubActionContainerConfigurationResponse {
		return v.ContainerConfiguration
	}).(GitHubActionContainerConfigurationResponsePtrOutput)
}

// Workflow option to determine whether the workflow file should be generated and written to the repository.
func (o GitHubActionConfigurationResponseOutput) GenerateWorkflowFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubActionConfigurationResponse) *bool { return v.GenerateWorkflowFile }).(pulumi.BoolPtrOutput)
}

// This will help determine the workflow configuration to select.
func (o GitHubActionConfigurationResponseOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubActionConfigurationResponse) *bool { return v.IsLinux }).(pulumi.BoolPtrOutput)
}

type GitHubActionConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubActionConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionConfigurationResponsePtrOutput) ToGitHubActionConfigurationResponsePtrOutput() GitHubActionConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionConfigurationResponsePtrOutput) ToGitHubActionConfigurationResponsePtrOutputWithContext(ctx context.Context) GitHubActionConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionConfigurationResponsePtrOutput) Elem() GitHubActionConfigurationResponseOutput {
	return o.ApplyT(func(v *GitHubActionConfigurationResponse) GitHubActionConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GitHubActionConfigurationResponse
		return ret
	}).(GitHubActionConfigurationResponseOutput)
}

// GitHub Action code configuration.
func (o GitHubActionConfigurationResponsePtrOutput) CodeConfiguration() GitHubActionCodeConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *GitHubActionConfigurationResponse) *GitHubActionCodeConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.CodeConfiguration
	}).(GitHubActionCodeConfigurationResponsePtrOutput)
}

// GitHub Action container configuration.
func (o GitHubActionConfigurationResponsePtrOutput) ContainerConfiguration() GitHubActionContainerConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *GitHubActionConfigurationResponse) *GitHubActionContainerConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ContainerConfiguration
	}).(GitHubActionContainerConfigurationResponsePtrOutput)
}

// Workflow option to determine whether the workflow file should be generated and written to the repository.
func (o GitHubActionConfigurationResponsePtrOutput) GenerateWorkflowFile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.GenerateWorkflowFile
	}).(pulumi.BoolPtrOutput)
}

// This will help determine the workflow configuration to select.
func (o GitHubActionConfigurationResponsePtrOutput) IsLinux() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubActionConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsLinux
	}).(pulumi.BoolPtrOutput)
}

// The GitHub action container configuration.
type GitHubActionContainerConfiguration struct {
	// The image name for the build.
	ImageName *string `pulumi:"imageName"`
	// The password used to upload the image to the container registry.
	Password *string `pulumi:"password"`
	// The server URL for the container registry where the build will be hosted.
	ServerUrl *string `pulumi:"serverUrl"`
	// The username used to upload the image to the container registry.
	Username *string `pulumi:"username"`
}

// GitHubActionContainerConfigurationInput is an input type that accepts GitHubActionContainerConfigurationArgs and GitHubActionContainerConfigurationOutput values.
// You can construct a concrete instance of `GitHubActionContainerConfigurationInput` via:
//
//	GitHubActionContainerConfigurationArgs{...}
type GitHubActionContainerConfigurationInput interface {
	pulumi.Input

	ToGitHubActionContainerConfigurationOutput() GitHubActionContainerConfigurationOutput
	ToGitHubActionContainerConfigurationOutputWithContext(context.Context) GitHubActionContainerConfigurationOutput
}

// The GitHub action container configuration.
type GitHubActionContainerConfigurationArgs struct {
	// The image name for the build.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// The password used to upload the image to the container registry.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The server URL for the container registry where the build will be hosted.
	ServerUrl pulumi.StringPtrInput `pulumi:"serverUrl"`
	// The username used to upload the image to the container registry.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GitHubActionContainerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionContainerConfiguration)(nil)).Elem()
}

func (i GitHubActionContainerConfigurationArgs) ToGitHubActionContainerConfigurationOutput() GitHubActionContainerConfigurationOutput {
	return i.ToGitHubActionContainerConfigurationOutputWithContext(context.Background())
}

func (i GitHubActionContainerConfigurationArgs) ToGitHubActionContainerConfigurationOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionContainerConfigurationOutput)
}

func (i GitHubActionContainerConfigurationArgs) ToGitHubActionContainerConfigurationPtrOutput() GitHubActionContainerConfigurationPtrOutput {
	return i.ToGitHubActionContainerConfigurationPtrOutputWithContext(context.Background())
}

func (i GitHubActionContainerConfigurationArgs) ToGitHubActionContainerConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionContainerConfigurationOutput).ToGitHubActionContainerConfigurationPtrOutputWithContext(ctx)
}

// GitHubActionContainerConfigurationPtrInput is an input type that accepts GitHubActionContainerConfigurationArgs, GitHubActionContainerConfigurationPtr and GitHubActionContainerConfigurationPtrOutput values.
// You can construct a concrete instance of `GitHubActionContainerConfigurationPtrInput` via:
//
//	        GitHubActionContainerConfigurationArgs{...}
//
//	or:
//
//	        nil
type GitHubActionContainerConfigurationPtrInput interface {
	pulumi.Input

	ToGitHubActionContainerConfigurationPtrOutput() GitHubActionContainerConfigurationPtrOutput
	ToGitHubActionContainerConfigurationPtrOutputWithContext(context.Context) GitHubActionContainerConfigurationPtrOutput
}

type gitHubActionContainerConfigurationPtrType GitHubActionContainerConfigurationArgs

func GitHubActionContainerConfigurationPtr(v *GitHubActionContainerConfigurationArgs) GitHubActionContainerConfigurationPtrInput {
	return (*gitHubActionContainerConfigurationPtrType)(v)
}

func (*gitHubActionContainerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionContainerConfiguration)(nil)).Elem()
}

func (i *gitHubActionContainerConfigurationPtrType) ToGitHubActionContainerConfigurationPtrOutput() GitHubActionContainerConfigurationPtrOutput {
	return i.ToGitHubActionContainerConfigurationPtrOutputWithContext(context.Background())
}

func (i *gitHubActionContainerConfigurationPtrType) ToGitHubActionContainerConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubActionContainerConfigurationPtrOutput)
}

// The GitHub action container configuration.
type GitHubActionContainerConfigurationOutput struct{ *pulumi.OutputState }

func (GitHubActionContainerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionContainerConfiguration)(nil)).Elem()
}

func (o GitHubActionContainerConfigurationOutput) ToGitHubActionContainerConfigurationOutput() GitHubActionContainerConfigurationOutput {
	return o
}

func (o GitHubActionContainerConfigurationOutput) ToGitHubActionContainerConfigurationOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationOutput {
	return o
}

func (o GitHubActionContainerConfigurationOutput) ToGitHubActionContainerConfigurationPtrOutput() GitHubActionContainerConfigurationPtrOutput {
	return o.ToGitHubActionContainerConfigurationPtrOutputWithContext(context.Background())
}

func (o GitHubActionContainerConfigurationOutput) ToGitHubActionContainerConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitHubActionContainerConfiguration) *GitHubActionContainerConfiguration {
		return &v
	}).(GitHubActionContainerConfigurationPtrOutput)
}

// The image name for the build.
func (o GitHubActionContainerConfigurationOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfiguration) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The password used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfiguration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The server URL for the container registry where the build will be hosted.
func (o GitHubActionContainerConfigurationOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfiguration) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// The username used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfiguration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitHubActionContainerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GitHubActionContainerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionContainerConfiguration)(nil)).Elem()
}

func (o GitHubActionContainerConfigurationPtrOutput) ToGitHubActionContainerConfigurationPtrOutput() GitHubActionContainerConfigurationPtrOutput {
	return o
}

func (o GitHubActionContainerConfigurationPtrOutput) ToGitHubActionContainerConfigurationPtrOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationPtrOutput {
	return o
}

func (o GitHubActionContainerConfigurationPtrOutput) Elem() GitHubActionContainerConfigurationOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfiguration) GitHubActionContainerConfiguration {
		if v != nil {
			return *v
		}
		var ret GitHubActionContainerConfiguration
		return ret
	}).(GitHubActionContainerConfigurationOutput)
}

// The image name for the build.
func (o GitHubActionContainerConfigurationPtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The password used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The server URL for the container registry where the build will be hosted.
func (o GitHubActionContainerConfigurationPtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// The username used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The GitHub action container configuration.
type GitHubActionContainerConfigurationResponse struct {
	// The image name for the build.
	ImageName *string `pulumi:"imageName"`
	// The password used to upload the image to the container registry.
	Password *string `pulumi:"password"`
	// The server URL for the container registry where the build will be hosted.
	ServerUrl *string `pulumi:"serverUrl"`
	// The username used to upload the image to the container registry.
	Username *string `pulumi:"username"`
}

// The GitHub action container configuration.
type GitHubActionContainerConfigurationResponseOutput struct{ *pulumi.OutputState }

func (GitHubActionContainerConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubActionContainerConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionContainerConfigurationResponseOutput) ToGitHubActionContainerConfigurationResponseOutput() GitHubActionContainerConfigurationResponseOutput {
	return o
}

func (o GitHubActionContainerConfigurationResponseOutput) ToGitHubActionContainerConfigurationResponseOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationResponseOutput {
	return o
}

// The image name for the build.
func (o GitHubActionContainerConfigurationResponseOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfigurationResponse) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// The password used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfigurationResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The server URL for the container registry where the build will be hosted.
func (o GitHubActionContainerConfigurationResponseOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfigurationResponse) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// The username used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubActionContainerConfigurationResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitHubActionContainerConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubActionContainerConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubActionContainerConfigurationResponse)(nil)).Elem()
}

func (o GitHubActionContainerConfigurationResponsePtrOutput) ToGitHubActionContainerConfigurationResponsePtrOutput() GitHubActionContainerConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionContainerConfigurationResponsePtrOutput) ToGitHubActionContainerConfigurationResponsePtrOutputWithContext(ctx context.Context) GitHubActionContainerConfigurationResponsePtrOutput {
	return o
}

func (o GitHubActionContainerConfigurationResponsePtrOutput) Elem() GitHubActionContainerConfigurationResponseOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfigurationResponse) GitHubActionContainerConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret GitHubActionContainerConfigurationResponse
		return ret
	}).(GitHubActionContainerConfigurationResponseOutput)
}

// The image name for the build.
func (o GitHubActionContainerConfigurationResponsePtrOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImageName
	}).(pulumi.StringPtrOutput)
}

// The password used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationResponsePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The server URL for the container registry where the build will be hosted.
func (o GitHubActionContainerConfigurationResponsePtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// The username used to upload the image to the container registry.
func (o GitHubActionContainerConfigurationResponsePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubActionContainerConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the GitHub provider.
type GitHubResponse struct {
	// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopesResponse `pulumi:"login"`
	// The configuration settings of the app registration for the GitHub provider.
	Registration *ClientRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the GitHub provider.
type GitHubResponseOutput struct{ *pulumi.OutputState }

func (GitHubResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubResponse)(nil)).Elem()
}

func (o GitHubResponseOutput) ToGitHubResponseOutput() GitHubResponseOutput {
	return o
}

func (o GitHubResponseOutput) ToGitHubResponseOutputWithContext(ctx context.Context) GitHubResponseOutput {
	return o
}

// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GitHubResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GitHubResponseOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v GitHubResponse) *LoginScopesResponse { return v.Login }).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the GitHub provider.
func (o GitHubResponseOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v GitHubResponse) *ClientRegistrationResponse { return v.Registration }).(ClientRegistrationResponsePtrOutput)
}

type GitHubResponsePtrOutput struct{ *pulumi.OutputState }

func (GitHubResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubResponse)(nil)).Elem()
}

func (o GitHubResponsePtrOutput) ToGitHubResponsePtrOutput() GitHubResponsePtrOutput {
	return o
}

func (o GitHubResponsePtrOutput) ToGitHubResponsePtrOutputWithContext(ctx context.Context) GitHubResponsePtrOutput {
	return o
}

func (o GitHubResponsePtrOutput) Elem() GitHubResponseOutput {
	return o.ApplyT(func(v *GitHubResponse) GitHubResponse {
		if v != nil {
			return *v
		}
		var ret GitHubResponse
		return ret
	}).(GitHubResponseOutput)
}

// <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GitHubResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GitHubResponsePtrOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v *GitHubResponse) *LoginScopesResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the GitHub provider.
func (o GitHubResponsePtrOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *GitHubResponse) *ClientRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationResponsePtrOutput)
}

// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
type GlobalValidation struct {
	// The paths for which unauthenticated flow would not be redirected to the login page.
	ExcludedPaths []string `pulumi:"excludedPaths"`
	// The default authentication provider to use when multiple providers are configured.
	// This setting is only needed if multiple providers are configured and the unauthenticated client
	// action is set to "RedirectToLoginPage".
	RedirectToProvider *string `pulumi:"redirectToProvider"`
	// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
	RequireAuthentication *bool `pulumi:"requireAuthentication"`
	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction *UnauthenticatedClientActionV2 `pulumi:"unauthenticatedClientAction"`
}

// GlobalValidationInput is an input type that accepts GlobalValidationArgs and GlobalValidationOutput values.
// You can construct a concrete instance of `GlobalValidationInput` via:
//
//	GlobalValidationArgs{...}
type GlobalValidationInput interface {
	pulumi.Input

	ToGlobalValidationOutput() GlobalValidationOutput
	ToGlobalValidationOutputWithContext(context.Context) GlobalValidationOutput
}

// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
type GlobalValidationArgs struct {
	// The paths for which unauthenticated flow would not be redirected to the login page.
	ExcludedPaths pulumi.StringArrayInput `pulumi:"excludedPaths"`
	// The default authentication provider to use when multiple providers are configured.
	// This setting is only needed if multiple providers are configured and the unauthenticated client
	// action is set to "RedirectToLoginPage".
	RedirectToProvider pulumi.StringPtrInput `pulumi:"redirectToProvider"`
	// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
	RequireAuthentication pulumi.BoolPtrInput `pulumi:"requireAuthentication"`
	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction UnauthenticatedClientActionV2PtrInput `pulumi:"unauthenticatedClientAction"`
}

func (GlobalValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalValidation)(nil)).Elem()
}

func (i GlobalValidationArgs) ToGlobalValidationOutput() GlobalValidationOutput {
	return i.ToGlobalValidationOutputWithContext(context.Background())
}

func (i GlobalValidationArgs) ToGlobalValidationOutputWithContext(ctx context.Context) GlobalValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalValidationOutput)
}

func (i GlobalValidationArgs) ToGlobalValidationPtrOutput() GlobalValidationPtrOutput {
	return i.ToGlobalValidationPtrOutputWithContext(context.Background())
}

func (i GlobalValidationArgs) ToGlobalValidationPtrOutputWithContext(ctx context.Context) GlobalValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalValidationOutput).ToGlobalValidationPtrOutputWithContext(ctx)
}

// GlobalValidationPtrInput is an input type that accepts GlobalValidationArgs, GlobalValidationPtr and GlobalValidationPtrOutput values.
// You can construct a concrete instance of `GlobalValidationPtrInput` via:
//
//	        GlobalValidationArgs{...}
//
//	or:
//
//	        nil
type GlobalValidationPtrInput interface {
	pulumi.Input

	ToGlobalValidationPtrOutput() GlobalValidationPtrOutput
	ToGlobalValidationPtrOutputWithContext(context.Context) GlobalValidationPtrOutput
}

type globalValidationPtrType GlobalValidationArgs

func GlobalValidationPtr(v *GlobalValidationArgs) GlobalValidationPtrInput {
	return (*globalValidationPtrType)(v)
}

func (*globalValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalValidation)(nil)).Elem()
}

func (i *globalValidationPtrType) ToGlobalValidationPtrOutput() GlobalValidationPtrOutput {
	return i.ToGlobalValidationPtrOutputWithContext(context.Background())
}

func (i *globalValidationPtrType) ToGlobalValidationPtrOutputWithContext(ctx context.Context) GlobalValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalValidationPtrOutput)
}

// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
type GlobalValidationOutput struct{ *pulumi.OutputState }

func (GlobalValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalValidation)(nil)).Elem()
}

func (o GlobalValidationOutput) ToGlobalValidationOutput() GlobalValidationOutput {
	return o
}

func (o GlobalValidationOutput) ToGlobalValidationOutputWithContext(ctx context.Context) GlobalValidationOutput {
	return o
}

func (o GlobalValidationOutput) ToGlobalValidationPtrOutput() GlobalValidationPtrOutput {
	return o.ToGlobalValidationPtrOutputWithContext(context.Background())
}

func (o GlobalValidationOutput) ToGlobalValidationPtrOutputWithContext(ctx context.Context) GlobalValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalValidation) *GlobalValidation {
		return &v
	}).(GlobalValidationPtrOutput)
}

// The paths for which unauthenticated flow would not be redirected to the login page.
func (o GlobalValidationOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalValidation) []string { return v.ExcludedPaths }).(pulumi.StringArrayOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
func (o GlobalValidationOutput) RedirectToProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalValidation) *string { return v.RedirectToProvider }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
func (o GlobalValidationOutput) RequireAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalValidation) *bool { return v.RequireAuthentication }).(pulumi.BoolPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
func (o GlobalValidationOutput) UnauthenticatedClientAction() UnauthenticatedClientActionV2PtrOutput {
	return o.ApplyT(func(v GlobalValidation) *UnauthenticatedClientActionV2 { return v.UnauthenticatedClientAction }).(UnauthenticatedClientActionV2PtrOutput)
}

type GlobalValidationPtrOutput struct{ *pulumi.OutputState }

func (GlobalValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalValidation)(nil)).Elem()
}

func (o GlobalValidationPtrOutput) ToGlobalValidationPtrOutput() GlobalValidationPtrOutput {
	return o
}

func (o GlobalValidationPtrOutput) ToGlobalValidationPtrOutputWithContext(ctx context.Context) GlobalValidationPtrOutput {
	return o
}

func (o GlobalValidationPtrOutput) Elem() GlobalValidationOutput {
	return o.ApplyT(func(v *GlobalValidation) GlobalValidation {
		if v != nil {
			return *v
		}
		var ret GlobalValidation
		return ret
	}).(GlobalValidationOutput)
}

// The paths for which unauthenticated flow would not be redirected to the login page.
func (o GlobalValidationPtrOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalValidation) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(pulumi.StringArrayOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
func (o GlobalValidationPtrOutput) RedirectToProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalValidation) *string {
		if v == nil {
			return nil
		}
		return v.RedirectToProvider
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
func (o GlobalValidationPtrOutput) RequireAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalValidation) *bool {
		if v == nil {
			return nil
		}
		return v.RequireAuthentication
	}).(pulumi.BoolPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
func (o GlobalValidationPtrOutput) UnauthenticatedClientAction() UnauthenticatedClientActionV2PtrOutput {
	return o.ApplyT(func(v *GlobalValidation) *UnauthenticatedClientActionV2 {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(UnauthenticatedClientActionV2PtrOutput)
}

// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
type GlobalValidationResponse struct {
	// The paths for which unauthenticated flow would not be redirected to the login page.
	ExcludedPaths []string `pulumi:"excludedPaths"`
	// The default authentication provider to use when multiple providers are configured.
	// This setting is only needed if multiple providers are configured and the unauthenticated client
	// action is set to "RedirectToLoginPage".
	RedirectToProvider *string `pulumi:"redirectToProvider"`
	// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
	RequireAuthentication *bool `pulumi:"requireAuthentication"`
	// The action to take when an unauthenticated client attempts to access the app.
	UnauthenticatedClientAction *string `pulumi:"unauthenticatedClientAction"`
}

// The configuration settings that determines the validation flow of users using App Service Authentication/Authorization.
type GlobalValidationResponseOutput struct{ *pulumi.OutputState }

func (GlobalValidationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalValidationResponse)(nil)).Elem()
}

func (o GlobalValidationResponseOutput) ToGlobalValidationResponseOutput() GlobalValidationResponseOutput {
	return o
}

func (o GlobalValidationResponseOutput) ToGlobalValidationResponseOutputWithContext(ctx context.Context) GlobalValidationResponseOutput {
	return o
}

// The paths for which unauthenticated flow would not be redirected to the login page.
func (o GlobalValidationResponseOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalValidationResponse) []string { return v.ExcludedPaths }).(pulumi.StringArrayOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
func (o GlobalValidationResponseOutput) RedirectToProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalValidationResponse) *string { return v.RedirectToProvider }).(pulumi.StringPtrOutput)
}

// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
func (o GlobalValidationResponseOutput) RequireAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalValidationResponse) *bool { return v.RequireAuthentication }).(pulumi.BoolPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
func (o GlobalValidationResponseOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalValidationResponse) *string { return v.UnauthenticatedClientAction }).(pulumi.StringPtrOutput)
}

type GlobalValidationResponsePtrOutput struct{ *pulumi.OutputState }

func (GlobalValidationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalValidationResponse)(nil)).Elem()
}

func (o GlobalValidationResponsePtrOutput) ToGlobalValidationResponsePtrOutput() GlobalValidationResponsePtrOutput {
	return o
}

func (o GlobalValidationResponsePtrOutput) ToGlobalValidationResponsePtrOutputWithContext(ctx context.Context) GlobalValidationResponsePtrOutput {
	return o
}

func (o GlobalValidationResponsePtrOutput) Elem() GlobalValidationResponseOutput {
	return o.ApplyT(func(v *GlobalValidationResponse) GlobalValidationResponse {
		if v != nil {
			return *v
		}
		var ret GlobalValidationResponse
		return ret
	}).(GlobalValidationResponseOutput)
}

// The paths for which unauthenticated flow would not be redirected to the login page.
func (o GlobalValidationResponsePtrOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalValidationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(pulumi.StringArrayOutput)
}

// The default authentication provider to use when multiple providers are configured.
// This setting is only needed if multiple providers are configured and the unauthenticated client
// action is set to "RedirectToLoginPage".
func (o GlobalValidationResponsePtrOutput) RedirectToProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalValidationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RedirectToProvider
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if the authentication flow is required any request is made; otherwise, <code>false</code>.
func (o GlobalValidationResponsePtrOutput) RequireAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalValidationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireAuthentication
	}).(pulumi.BoolPtrOutput)
}

// The action to take when an unauthenticated client attempts to access the app.
func (o GlobalValidationResponsePtrOutput) UnauthenticatedClientAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalValidationResponse) *string {
		if v == nil {
			return nil
		}
		return v.UnauthenticatedClientAction
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Google provider.
type Google struct {
	// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopes `pulumi:"login"`
	// The configuration settings of the app registration for the Google provider.
	Registration *ClientRegistration `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AllowedAudiencesValidation `pulumi:"validation"`
}

// GoogleInput is an input type that accepts GoogleArgs and GoogleOutput values.
// You can construct a concrete instance of `GoogleInput` via:
//
//	GoogleArgs{...}
type GoogleInput interface {
	pulumi.Input

	ToGoogleOutput() GoogleOutput
	ToGoogleOutputWithContext(context.Context) GoogleOutput
}

// The configuration settings of the Google provider.
type GoogleArgs struct {
	// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login LoginScopesPtrInput `pulumi:"login"`
	// The configuration settings of the app registration for the Google provider.
	Registration ClientRegistrationPtrInput `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation AllowedAudiencesValidationPtrInput `pulumi:"validation"`
}

func (GoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Google)(nil)).Elem()
}

func (i GoogleArgs) ToGoogleOutput() GoogleOutput {
	return i.ToGoogleOutputWithContext(context.Background())
}

func (i GoogleArgs) ToGoogleOutputWithContext(ctx context.Context) GoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleOutput)
}

func (i GoogleArgs) ToGooglePtrOutput() GooglePtrOutput {
	return i.ToGooglePtrOutputWithContext(context.Background())
}

func (i GoogleArgs) ToGooglePtrOutputWithContext(ctx context.Context) GooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GoogleOutput).ToGooglePtrOutputWithContext(ctx)
}

// GooglePtrInput is an input type that accepts GoogleArgs, GooglePtr and GooglePtrOutput values.
// You can construct a concrete instance of `GooglePtrInput` via:
//
//	        GoogleArgs{...}
//
//	or:
//
//	        nil
type GooglePtrInput interface {
	pulumi.Input

	ToGooglePtrOutput() GooglePtrOutput
	ToGooglePtrOutputWithContext(context.Context) GooglePtrOutput
}

type googlePtrType GoogleArgs

func GooglePtr(v *GoogleArgs) GooglePtrInput {
	return (*googlePtrType)(v)
}

func (*googlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Google)(nil)).Elem()
}

func (i *googlePtrType) ToGooglePtrOutput() GooglePtrOutput {
	return i.ToGooglePtrOutputWithContext(context.Background())
}

func (i *googlePtrType) ToGooglePtrOutputWithContext(ctx context.Context) GooglePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GooglePtrOutput)
}

// The configuration settings of the Google provider.
type GoogleOutput struct{ *pulumi.OutputState }

func (GoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Google)(nil)).Elem()
}

func (o GoogleOutput) ToGoogleOutput() GoogleOutput {
	return o
}

func (o GoogleOutput) ToGoogleOutputWithContext(ctx context.Context) GoogleOutput {
	return o
}

func (o GoogleOutput) ToGooglePtrOutput() GooglePtrOutput {
	return o.ToGooglePtrOutputWithContext(context.Background())
}

func (o GoogleOutput) ToGooglePtrOutputWithContext(ctx context.Context) GooglePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Google) *Google {
		return &v
	}).(GooglePtrOutput)
}

// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GoogleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Google) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GoogleOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v Google) *LoginScopes { return v.Login }).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the Google provider.
func (o GoogleOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v Google) *ClientRegistration { return v.Registration }).(ClientRegistrationPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o GoogleOutput) Validation() AllowedAudiencesValidationPtrOutput {
	return o.ApplyT(func(v Google) *AllowedAudiencesValidation { return v.Validation }).(AllowedAudiencesValidationPtrOutput)
}

type GooglePtrOutput struct{ *pulumi.OutputState }

func (GooglePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Google)(nil)).Elem()
}

func (o GooglePtrOutput) ToGooglePtrOutput() GooglePtrOutput {
	return o
}

func (o GooglePtrOutput) ToGooglePtrOutputWithContext(ctx context.Context) GooglePtrOutput {
	return o
}

func (o GooglePtrOutput) Elem() GoogleOutput {
	return o.ApplyT(func(v *Google) Google {
		if v != nil {
			return *v
		}
		var ret Google
		return ret
	}).(GoogleOutput)
}

// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GooglePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Google) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GooglePtrOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v *Google) *LoginScopes {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the Google provider.
func (o GooglePtrOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v *Google) *ClientRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationPtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o GooglePtrOutput) Validation() AllowedAudiencesValidationPtrOutput {
	return o.ApplyT(func(v *Google) *AllowedAudiencesValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AllowedAudiencesValidationPtrOutput)
}

// The configuration settings of the Google provider.
type GoogleResponse struct {
	// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopesResponse `pulumi:"login"`
	// The configuration settings of the app registration for the Google provider.
	Registration *ClientRegistrationResponse `pulumi:"registration"`
	// The configuration settings of the Azure Active Directory token validation flow.
	Validation *AllowedAudiencesValidationResponse `pulumi:"validation"`
}

// The configuration settings of the Google provider.
type GoogleResponseOutput struct{ *pulumi.OutputState }

func (GoogleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GoogleResponse)(nil)).Elem()
}

func (o GoogleResponseOutput) ToGoogleResponseOutput() GoogleResponseOutput {
	return o
}

func (o GoogleResponseOutput) ToGoogleResponseOutputWithContext(ctx context.Context) GoogleResponseOutput {
	return o
}

// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GoogleResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GoogleResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GoogleResponseOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v GoogleResponse) *LoginScopesResponse { return v.Login }).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the Google provider.
func (o GoogleResponseOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v GoogleResponse) *ClientRegistrationResponse { return v.Registration }).(ClientRegistrationResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o GoogleResponseOutput) Validation() AllowedAudiencesValidationResponsePtrOutput {
	return o.ApplyT(func(v GoogleResponse) *AllowedAudiencesValidationResponse { return v.Validation }).(AllowedAudiencesValidationResponsePtrOutput)
}

type GoogleResponsePtrOutput struct{ *pulumi.OutputState }

func (GoogleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GoogleResponse)(nil)).Elem()
}

func (o GoogleResponsePtrOutput) ToGoogleResponsePtrOutput() GoogleResponsePtrOutput {
	return o
}

func (o GoogleResponsePtrOutput) ToGoogleResponsePtrOutputWithContext(ctx context.Context) GoogleResponsePtrOutput {
	return o
}

func (o GoogleResponsePtrOutput) Elem() GoogleResponseOutput {
	return o.ApplyT(func(v *GoogleResponse) GoogleResponse {
		if v != nil {
			return *v
		}
		var ret GoogleResponse
		return ret
	}).(GoogleResponseOutput)
}

// <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o GoogleResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GoogleResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o GoogleResponsePtrOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v *GoogleResponse) *LoginScopesResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the Google provider.
func (o GoogleResponsePtrOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *GoogleResponse) *ClientRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationResponsePtrOutput)
}

// The configuration settings of the Azure Active Directory token validation flow.
func (o GoogleResponsePtrOutput) Validation() AllowedAudiencesValidationResponsePtrOutput {
	return o.ApplyT(func(v *GoogleResponse) *AllowedAudiencesValidationResponse {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AllowedAudiencesValidationResponsePtrOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMapping struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// HandlerMappingInput is an input type that accepts HandlerMappingArgs and HandlerMappingOutput values.
// You can construct a concrete instance of `HandlerMappingInput` via:
//
//	HandlerMappingArgs{...}
type HandlerMappingInput interface {
	pulumi.Input

	ToHandlerMappingOutput() HandlerMappingOutput
	ToHandlerMappingOutputWithContext(context.Context) HandlerMappingOutput
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingArgs struct {
	// Command-line arguments to be passed to the script processor.
	Arguments pulumi.StringPtrInput `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension pulumi.StringPtrInput `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor pulumi.StringPtrInput `pulumi:"scriptProcessor"`
}

func (HandlerMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArgs) ToHandlerMappingOutput() HandlerMappingOutput {
	return i.ToHandlerMappingOutputWithContext(context.Background())
}

func (i HandlerMappingArgs) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingOutput)
}

// HandlerMappingArrayInput is an input type that accepts HandlerMappingArray and HandlerMappingArrayOutput values.
// You can construct a concrete instance of `HandlerMappingArrayInput` via:
//
//	HandlerMappingArray{ HandlerMappingArgs{...} }
type HandlerMappingArrayInput interface {
	pulumi.Input

	ToHandlerMappingArrayOutput() HandlerMappingArrayOutput
	ToHandlerMappingArrayOutputWithContext(context.Context) HandlerMappingArrayOutput
}

type HandlerMappingArray []HandlerMappingInput

func (HandlerMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return i.ToHandlerMappingArrayOutputWithContext(context.Background())
}

func (i HandlerMappingArray) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HandlerMappingArrayOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingOutput struct{ *pulumi.OutputState }

func (HandlerMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingOutput) ToHandlerMappingOutput() HandlerMappingOutput {
	return o
}

func (o HandlerMappingOutput) ToHandlerMappingOutputWithContext(ctx context.Context) HandlerMappingOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMapping) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMapping)(nil)).Elem()
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutput() HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) ToHandlerMappingArrayOutputWithContext(ctx context.Context) HandlerMappingArrayOutput {
	return o
}

func (o HandlerMappingArrayOutput) Index(i pulumi.IntInput) HandlerMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMapping {
		return vs[0].([]HandlerMapping)[vs[1].(int)]
	}).(HandlerMappingOutput)
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponse struct {
	// Command-line arguments to be passed to the script processor.
	Arguments *string `pulumi:"arguments"`
	// Requests with this extension will be handled using the specified FastCGI application.
	Extension *string `pulumi:"extension"`
	// The absolute path to the FastCGI application.
	ScriptProcessor *string `pulumi:"scriptProcessor"`
}

// The IIS handler mappings used to define which handler processes HTTP requests with certain extension.
// For example, it is used to configure php-cgi.exe process to handle all HTTP requests with *.php extension.
type HandlerMappingResponseOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutput() HandlerMappingResponseOutput {
	return o
}

func (o HandlerMappingResponseOutput) ToHandlerMappingResponseOutputWithContext(ctx context.Context) HandlerMappingResponseOutput {
	return o
}

// Command-line arguments to be passed to the script processor.
func (o HandlerMappingResponseOutput) Arguments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Arguments }).(pulumi.StringPtrOutput)
}

// Requests with this extension will be handled using the specified FastCGI application.
func (o HandlerMappingResponseOutput) Extension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.Extension }).(pulumi.StringPtrOutput)
}

// The absolute path to the FastCGI application.
func (o HandlerMappingResponseOutput) ScriptProcessor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HandlerMappingResponse) *string { return v.ScriptProcessor }).(pulumi.StringPtrOutput)
}

type HandlerMappingResponseArrayOutput struct{ *pulumi.OutputState }

func (HandlerMappingResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HandlerMappingResponse)(nil)).Elem()
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutput() HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) ToHandlerMappingResponseArrayOutputWithContext(ctx context.Context) HandlerMappingResponseArrayOutput {
	return o
}

func (o HandlerMappingResponseArrayOutput) Index(i pulumi.IntInput) HandlerMappingResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HandlerMappingResponse {
		return vs[0].([]HandlerMappingResponse)[vs[1].(int)]
	}).(HandlerMappingResponseOutput)
}

// SSL-enabled hostname.
type HostNameSslState struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *HostType `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *SslState `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// HostNameSslStateInput is an input type that accepts HostNameSslStateArgs and HostNameSslStateOutput values.
// You can construct a concrete instance of `HostNameSslStateInput` via:
//
//	HostNameSslStateArgs{...}
type HostNameSslStateInput interface {
	pulumi.Input

	ToHostNameSslStateOutput() HostNameSslStateOutput
	ToHostNameSslStateOutputWithContext(context.Context) HostNameSslStateOutput
}

// SSL-enabled hostname.
type HostNameSslStateArgs struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType HostTypePtrInput `pulumi:"hostType"`
	// Hostname.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL type.
	SslState SslStatePtrInput `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate pulumi.BoolPtrInput `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP pulumi.StringPtrInput `pulumi:"virtualIP"`
}

func (HostNameSslStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return i.ToHostNameSslStateOutputWithContext(context.Background())
}

func (i HostNameSslStateArgs) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateOutput)
}

// HostNameSslStateArrayInput is an input type that accepts HostNameSslStateArray and HostNameSslStateArrayOutput values.
// You can construct a concrete instance of `HostNameSslStateArrayInput` via:
//
//	HostNameSslStateArray{ HostNameSslStateArgs{...} }
type HostNameSslStateArrayInput interface {
	pulumi.Input

	ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput
	ToHostNameSslStateArrayOutputWithContext(context.Context) HostNameSslStateArrayOutput
}

type HostNameSslStateArray []HostNameSslStateInput

func (HostNameSslStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return i.ToHostNameSslStateArrayOutputWithContext(context.Background())
}

func (i HostNameSslStateArray) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostNameSslStateArrayOutput)
}

// SSL-enabled hostname.
type HostNameSslStateOutput struct{ *pulumi.OutputState }

func (HostNameSslStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutput() HostNameSslStateOutput {
	return o
}

func (o HostNameSslStateOutput) ToHostNameSslStateOutputWithContext(ctx context.Context) HostNameSslStateOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateOutput) HostType() HostTypePtrOutput {
	return o.ApplyT(func(v HostNameSslState) *HostType { return v.HostType }).(HostTypePtrOutput)
}

// Hostname.
func (o HostNameSslStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateOutput) SslState() SslStatePtrOutput {
	return o.ApplyT(func(v HostNameSslState) *SslState { return v.SslState }).(SslStatePtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslState) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslState)(nil)).Elem()
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutput() HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) ToHostNameSslStateArrayOutputWithContext(ctx context.Context) HostNameSslStateArrayOutput {
	return o
}

func (o HostNameSslStateArrayOutput) Index(i pulumi.IntInput) HostNameSslStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslState {
		return vs[0].([]HostNameSslState)[vs[1].(int)]
	}).(HostNameSslStateOutput)
}

// SSL-enabled hostname.
type HostNameSslStateResponse struct {
	// Indicates whether the hostname is a standard or repository hostname.
	HostType *string `pulumi:"hostType"`
	// Hostname.
	Name *string `pulumi:"name"`
	// SSL type.
	SslState *string `pulumi:"sslState"`
	// SSL certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
	// Set to <code>true</code> to update existing hostname.
	ToUpdate *bool `pulumi:"toUpdate"`
	// Virtual IP address assigned to the hostname if IP based SSL is enabled.
	VirtualIP *string `pulumi:"virtualIP"`
}

// SSL-enabled hostname.
type HostNameSslStateResponseOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutput() HostNameSslStateResponseOutput {
	return o
}

func (o HostNameSslStateResponseOutput) ToHostNameSslStateResponseOutputWithContext(ctx context.Context) HostNameSslStateResponseOutput {
	return o
}

// Indicates whether the hostname is a standard or repository hostname.
func (o HostNameSslStateResponseOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.HostType }).(pulumi.StringPtrOutput)
}

// Hostname.
func (o HostNameSslStateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL type.
func (o HostNameSslStateResponseOutput) SslState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.SslState }).(pulumi.StringPtrOutput)
}

// SSL certificate thumbprint.
func (o HostNameSslStateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

// Set to <code>true</code> to update existing hostname.
func (o HostNameSslStateResponseOutput) ToUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *bool { return v.ToUpdate }).(pulumi.BoolPtrOutput)
}

// Virtual IP address assigned to the hostname if IP based SSL is enabled.
func (o HostNameSslStateResponseOutput) VirtualIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostNameSslStateResponse) *string { return v.VirtualIP }).(pulumi.StringPtrOutput)
}

type HostNameSslStateResponseArrayOutput struct{ *pulumi.OutputState }

func (HostNameSslStateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostNameSslStateResponse)(nil)).Elem()
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutput() HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) ToHostNameSslStateResponseArrayOutputWithContext(ctx context.Context) HostNameSslStateResponseArrayOutput {
	return o
}

func (o HostNameSslStateResponseArrayOutput) Index(i pulumi.IntInput) HostNameSslStateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostNameSslStateResponse {
		return vs[0].([]HostNameSslStateResponse)[vs[1].(int)]
	}).(HostNameSslStateResponseOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfile struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
}

// HostingEnvironmentProfileInput is an input type that accepts HostingEnvironmentProfileArgs and HostingEnvironmentProfileOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfileInput` via:
//
//	HostingEnvironmentProfileArgs{...}
type HostingEnvironmentProfileInput interface {
	pulumi.Input

	ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput
	ToHostingEnvironmentProfileOutputWithContext(context.Context) HostingEnvironmentProfileOutput
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileArgs struct {
	// Resource ID of the App Service Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (HostingEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return i.ToHostingEnvironmentProfileOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput)
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i HostingEnvironmentProfileArgs) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfileOutput).ToHostingEnvironmentProfilePtrOutputWithContext(ctx)
}

// HostingEnvironmentProfilePtrInput is an input type that accepts HostingEnvironmentProfileArgs, HostingEnvironmentProfilePtr and HostingEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `HostingEnvironmentProfilePtrInput` via:
//
//	        HostingEnvironmentProfileArgs{...}
//
//	or:
//
//	        nil
type HostingEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput
	ToHostingEnvironmentProfilePtrOutputWithContext(context.Context) HostingEnvironmentProfilePtrOutput
}

type hostingEnvironmentProfilePtrType HostingEnvironmentProfileArgs

func HostingEnvironmentProfilePtr(v *HostingEnvironmentProfileArgs) HostingEnvironmentProfilePtrInput {
	return (*hostingEnvironmentProfilePtrType)(v)
}

func (*hostingEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return i.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *hostingEnvironmentProfilePtrType) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingEnvironmentProfilePtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutput() HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfileOutputWithContext(ctx context.Context) HostingEnvironmentProfileOutput {
	return o
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o.ToHostingEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o HostingEnvironmentProfileOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingEnvironmentProfile) *HostingEnvironmentProfile {
		return &v
	}).(HostingEnvironmentProfilePtrOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type HostingEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfile)(nil)).Elem()
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutput() HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) ToHostingEnvironmentProfilePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfilePtrOutput {
	return o
}

func (o HostingEnvironmentProfilePtrOutput) Elem() HostingEnvironmentProfileOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) HostingEnvironmentProfile {
		if v != nil {
			return *v
		}
		var ret HostingEnvironmentProfile
		return ret
	}).(HostingEnvironmentProfileOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponse struct {
	// Resource ID of the App Service Environment.
	Id *string `pulumi:"id"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Resource type of the App Service Environment.
	Type string `pulumi:"type"`
}

// Specification for an App Service Environment to use for this resource.
type HostingEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutput() HostingEnvironmentProfileResponseOutput {
	return o
}

func (o HostingEnvironmentProfileResponseOutput) ToHostingEnvironmentProfileResponseOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponseOutput {
	return o
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HostingEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HostingEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (HostingEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingEnvironmentProfileResponse)(nil)).Elem()
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutput() HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) ToHostingEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) HostingEnvironmentProfileResponsePtrOutput {
	return o
}

func (o HostingEnvironmentProfileResponsePtrOutput) Elem() HostingEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) HostingEnvironmentProfileResponse {
		if v != nil {
			return *v
		}
		var ret HostingEnvironmentProfileResponse
		return ret
	}).(HostingEnvironmentProfileResponseOutput)
}

// Resource ID of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the App Service Environment.
func (o HostingEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Http logs configuration.
type HttpLogsConfig struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage *AzureBlobStorageHttpLogsConfig `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem *FileSystemHttpLogsConfig `pulumi:"fileSystem"`
}

// HttpLogsConfigInput is an input type that accepts HttpLogsConfigArgs and HttpLogsConfigOutput values.
// You can construct a concrete instance of `HttpLogsConfigInput` via:
//
//	HttpLogsConfigArgs{...}
type HttpLogsConfigInput interface {
	pulumi.Input

	ToHttpLogsConfigOutput() HttpLogsConfigOutput
	ToHttpLogsConfigOutputWithContext(context.Context) HttpLogsConfigOutput
}

// Http logs configuration.
type HttpLogsConfigArgs struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage AzureBlobStorageHttpLogsConfigPtrInput `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem FileSystemHttpLogsConfigPtrInput `pulumi:"fileSystem"`
}

func (HttpLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfig)(nil)).Elem()
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigOutput() HttpLogsConfigOutput {
	return i.ToHttpLogsConfigOutputWithContext(context.Background())
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigOutputWithContext(ctx context.Context) HttpLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigOutput)
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return i.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i HttpLogsConfigArgs) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigOutput).ToHttpLogsConfigPtrOutputWithContext(ctx)
}

// HttpLogsConfigPtrInput is an input type that accepts HttpLogsConfigArgs, HttpLogsConfigPtr and HttpLogsConfigPtrOutput values.
// You can construct a concrete instance of `HttpLogsConfigPtrInput` via:
//
//	        HttpLogsConfigArgs{...}
//
//	or:
//
//	        nil
type HttpLogsConfigPtrInput interface {
	pulumi.Input

	ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput
	ToHttpLogsConfigPtrOutputWithContext(context.Context) HttpLogsConfigPtrOutput
}

type httpLogsConfigPtrType HttpLogsConfigArgs

func HttpLogsConfigPtr(v *HttpLogsConfigArgs) HttpLogsConfigPtrInput {
	return (*httpLogsConfigPtrType)(v)
}

func (*httpLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfig)(nil)).Elem()
}

func (i *httpLogsConfigPtrType) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return i.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (i *httpLogsConfigPtrType) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpLogsConfigPtrOutput)
}

// Http logs configuration.
type HttpLogsConfigOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfig)(nil)).Elem()
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigOutput() HttpLogsConfigOutput {
	return o
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigOutputWithContext(ctx context.Context) HttpLogsConfigOutput {
	return o
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return o.ToHttpLogsConfigPtrOutputWithContext(context.Background())
}

func (o HttpLogsConfigOutput) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpLogsConfig) *HttpLogsConfig {
		return &v
	}).(HttpLogsConfigPtrOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v HttpLogsConfig) *AzureBlobStorageHttpLogsConfig { return v.AzureBlobStorage }).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigOutput) FileSystem() FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v HttpLogsConfig) *FileSystemHttpLogsConfig { return v.FileSystem }).(FileSystemHttpLogsConfigPtrOutput)
}

type HttpLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfig)(nil)).Elem()
}

func (o HttpLogsConfigPtrOutput) ToHttpLogsConfigPtrOutput() HttpLogsConfigPtrOutput {
	return o
}

func (o HttpLogsConfigPtrOutput) ToHttpLogsConfigPtrOutputWithContext(ctx context.Context) HttpLogsConfigPtrOutput {
	return o
}

func (o HttpLogsConfigPtrOutput) Elem() HttpLogsConfigOutput {
	return o.ApplyT(func(v *HttpLogsConfig) HttpLogsConfig {
		if v != nil {
			return *v
		}
		var ret HttpLogsConfig
		return ret
	}).(HttpLogsConfigOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigPtrOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v *HttpLogsConfig) *AzureBlobStorageHttpLogsConfig {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageHttpLogsConfigPtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigPtrOutput) FileSystem() FileSystemHttpLogsConfigPtrOutput {
	return o.ApplyT(func(v *HttpLogsConfig) *FileSystemHttpLogsConfig {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemHttpLogsConfigPtrOutput)
}

// Http logs configuration.
type HttpLogsConfigResponse struct {
	// Http logs to azure blob storage configuration.
	AzureBlobStorage *AzureBlobStorageHttpLogsConfigResponse `pulumi:"azureBlobStorage"`
	// Http logs to file system configuration.
	FileSystem *FileSystemHttpLogsConfigResponse `pulumi:"fileSystem"`
}

// Http logs configuration.
type HttpLogsConfigResponseOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpLogsConfigResponse)(nil)).Elem()
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponseOutput() HttpLogsConfigResponseOutput {
	return o
}

func (o HttpLogsConfigResponseOutput) ToHttpLogsConfigResponseOutputWithContext(ctx context.Context) HttpLogsConfigResponseOutput {
	return o
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigResponseOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigResponse) *AzureBlobStorageHttpLogsConfigResponse { return v.AzureBlobStorage }).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigResponseOutput) FileSystem() FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v HttpLogsConfigResponse) *FileSystemHttpLogsConfigResponse { return v.FileSystem }).(FileSystemHttpLogsConfigResponsePtrOutput)
}

type HttpLogsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpLogsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpLogsConfigResponse)(nil)).Elem()
}

func (o HttpLogsConfigResponsePtrOutput) ToHttpLogsConfigResponsePtrOutput() HttpLogsConfigResponsePtrOutput {
	return o
}

func (o HttpLogsConfigResponsePtrOutput) ToHttpLogsConfigResponsePtrOutputWithContext(ctx context.Context) HttpLogsConfigResponsePtrOutput {
	return o
}

func (o HttpLogsConfigResponsePtrOutput) Elem() HttpLogsConfigResponseOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) HttpLogsConfigResponse {
		if v != nil {
			return *v
		}
		var ret HttpLogsConfigResponse
		return ret
	}).(HttpLogsConfigResponseOutput)
}

// Http logs to azure blob storage configuration.
func (o HttpLogsConfigResponsePtrOutput) AzureBlobStorage() AzureBlobStorageHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) *AzureBlobStorageHttpLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(AzureBlobStorageHttpLogsConfigResponsePtrOutput)
}

// Http logs to file system configuration.
func (o HttpLogsConfigResponsePtrOutput) FileSystem() FileSystemHttpLogsConfigResponsePtrOutput {
	return o.ApplyT(func(v *HttpLogsConfigResponse) *FileSystemHttpLogsConfigResponse {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemHttpLogsConfigResponsePtrOutput)
}

// Container App container Custom scaling rule.
type HttpScaleRule struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// HttpScaleRuleInput is an input type that accepts HttpScaleRuleArgs and HttpScaleRuleOutput values.
// You can construct a concrete instance of `HttpScaleRuleInput` via:
//
//	HttpScaleRuleArgs{...}
type HttpScaleRuleInput interface {
	pulumi.Input

	ToHttpScaleRuleOutput() HttpScaleRuleOutput
	ToHttpScaleRuleOutputWithContext(context.Context) HttpScaleRuleOutput
}

// Container App container Custom scaling rule.
type HttpScaleRuleArgs struct {
	// Authentication secrets for the custom scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
}

func (HttpScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRule)(nil)).Elem()
}

func (i HttpScaleRuleArgs) ToHttpScaleRuleOutput() HttpScaleRuleOutput {
	return i.ToHttpScaleRuleOutputWithContext(context.Background())
}

func (i HttpScaleRuleArgs) ToHttpScaleRuleOutputWithContext(ctx context.Context) HttpScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRuleOutput)
}

func (i HttpScaleRuleArgs) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return i.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (i HttpScaleRuleArgs) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRuleOutput).ToHttpScaleRulePtrOutputWithContext(ctx)
}

// HttpScaleRulePtrInput is an input type that accepts HttpScaleRuleArgs, HttpScaleRulePtr and HttpScaleRulePtrOutput values.
// You can construct a concrete instance of `HttpScaleRulePtrInput` via:
//
//	        HttpScaleRuleArgs{...}
//
//	or:
//
//	        nil
type HttpScaleRulePtrInput interface {
	pulumi.Input

	ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput
	ToHttpScaleRulePtrOutputWithContext(context.Context) HttpScaleRulePtrOutput
}

type httpScaleRulePtrType HttpScaleRuleArgs

func HttpScaleRulePtr(v *HttpScaleRuleArgs) HttpScaleRulePtrInput {
	return (*httpScaleRulePtrType)(v)
}

func (*httpScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRule)(nil)).Elem()
}

func (i *httpScaleRulePtrType) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return i.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (i *httpScaleRulePtrType) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpScaleRulePtrOutput)
}

// Container App container Custom scaling rule.
type HttpScaleRuleOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRule)(nil)).Elem()
}

func (o HttpScaleRuleOutput) ToHttpScaleRuleOutput() HttpScaleRuleOutput {
	return o
}

func (o HttpScaleRuleOutput) ToHttpScaleRuleOutputWithContext(ctx context.Context) HttpScaleRuleOutput {
	return o
}

func (o HttpScaleRuleOutput) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return o.ToHttpScaleRulePtrOutputWithContext(context.Background())
}

func (o HttpScaleRuleOutput) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpScaleRule) *HttpScaleRule {
		return &v
	}).(HttpScaleRulePtrOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v HttpScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v HttpScaleRule) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type HttpScaleRulePtrOutput struct{ *pulumi.OutputState }

func (HttpScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRule)(nil)).Elem()
}

func (o HttpScaleRulePtrOutput) ToHttpScaleRulePtrOutput() HttpScaleRulePtrOutput {
	return o
}

func (o HttpScaleRulePtrOutput) ToHttpScaleRulePtrOutputWithContext(ctx context.Context) HttpScaleRulePtrOutput {
	return o
}

func (o HttpScaleRulePtrOutput) Elem() HttpScaleRuleOutput {
	return o.ApplyT(func(v *HttpScaleRule) HttpScaleRule {
		if v != nil {
			return *v
		}
		var ret HttpScaleRule
		return ret
	}).(HttpScaleRuleOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *HttpScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRulePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HttpScaleRule) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Container App container Custom scaling rule.
type HttpScaleRuleResponse struct {
	// Authentication secrets for the custom scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Metadata properties to describe http scale rule.
	Metadata map[string]string `pulumi:"metadata"`
}

// Container App container Custom scaling rule.
type HttpScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpScaleRuleResponse)(nil)).Elem()
}

func (o HttpScaleRuleResponseOutput) ToHttpScaleRuleResponseOutput() HttpScaleRuleResponseOutput {
	return o
}

func (o HttpScaleRuleResponseOutput) ToHttpScaleRuleResponseOutputWithContext(ctx context.Context) HttpScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v HttpScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleResponseOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v HttpScaleRuleResponse) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

type HttpScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpScaleRuleResponse)(nil)).Elem()
}

func (o HttpScaleRuleResponsePtrOutput) ToHttpScaleRuleResponsePtrOutput() HttpScaleRuleResponsePtrOutput {
	return o
}

func (o HttpScaleRuleResponsePtrOutput) ToHttpScaleRuleResponsePtrOutputWithContext(ctx context.Context) HttpScaleRuleResponsePtrOutput {
	return o
}

func (o HttpScaleRuleResponsePtrOutput) Elem() HttpScaleRuleResponseOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) HttpScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret HttpScaleRuleResponse
		return ret
	}).(HttpScaleRuleResponseOutput)
}

// Authentication secrets for the custom scale rule.
func (o HttpScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Metadata properties to describe http scale rule.
func (o HttpScaleRuleResponsePtrOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HttpScaleRuleResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
type HttpSettings struct {
	// The configuration settings of a forward proxy used to make the requests.
	ForwardProxy *ForwardProxy `pulumi:"forwardProxy"`
	// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
	RequireHttps *bool `pulumi:"requireHttps"`
	// The configuration settings of the paths HTTP requests.
	Routes *HttpSettingsRoutes `pulumi:"routes"`
}

// HttpSettingsInput is an input type that accepts HttpSettingsArgs and HttpSettingsOutput values.
// You can construct a concrete instance of `HttpSettingsInput` via:
//
//	HttpSettingsArgs{...}
type HttpSettingsInput interface {
	pulumi.Input

	ToHttpSettingsOutput() HttpSettingsOutput
	ToHttpSettingsOutputWithContext(context.Context) HttpSettingsOutput
}

// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
type HttpSettingsArgs struct {
	// The configuration settings of a forward proxy used to make the requests.
	ForwardProxy ForwardProxyPtrInput `pulumi:"forwardProxy"`
	// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
	RequireHttps pulumi.BoolPtrInput `pulumi:"requireHttps"`
	// The configuration settings of the paths HTTP requests.
	Routes HttpSettingsRoutesPtrInput `pulumi:"routes"`
}

func (HttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettings)(nil)).Elem()
}

func (i HttpSettingsArgs) ToHttpSettingsOutput() HttpSettingsOutput {
	return i.ToHttpSettingsOutputWithContext(context.Background())
}

func (i HttpSettingsArgs) ToHttpSettingsOutputWithContext(ctx context.Context) HttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsOutput)
}

func (i HttpSettingsArgs) ToHttpSettingsPtrOutput() HttpSettingsPtrOutput {
	return i.ToHttpSettingsPtrOutputWithContext(context.Background())
}

func (i HttpSettingsArgs) ToHttpSettingsPtrOutputWithContext(ctx context.Context) HttpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsOutput).ToHttpSettingsPtrOutputWithContext(ctx)
}

// HttpSettingsPtrInput is an input type that accepts HttpSettingsArgs, HttpSettingsPtr and HttpSettingsPtrOutput values.
// You can construct a concrete instance of `HttpSettingsPtrInput` via:
//
//	        HttpSettingsArgs{...}
//
//	or:
//
//	        nil
type HttpSettingsPtrInput interface {
	pulumi.Input

	ToHttpSettingsPtrOutput() HttpSettingsPtrOutput
	ToHttpSettingsPtrOutputWithContext(context.Context) HttpSettingsPtrOutput
}

type httpSettingsPtrType HttpSettingsArgs

func HttpSettingsPtr(v *HttpSettingsArgs) HttpSettingsPtrInput {
	return (*httpSettingsPtrType)(v)
}

func (*httpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettings)(nil)).Elem()
}

func (i *httpSettingsPtrType) ToHttpSettingsPtrOutput() HttpSettingsPtrOutput {
	return i.ToHttpSettingsPtrOutputWithContext(context.Background())
}

func (i *httpSettingsPtrType) ToHttpSettingsPtrOutputWithContext(ctx context.Context) HttpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsPtrOutput)
}

// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
type HttpSettingsOutput struct{ *pulumi.OutputState }

func (HttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettings)(nil)).Elem()
}

func (o HttpSettingsOutput) ToHttpSettingsOutput() HttpSettingsOutput {
	return o
}

func (o HttpSettingsOutput) ToHttpSettingsOutputWithContext(ctx context.Context) HttpSettingsOutput {
	return o
}

func (o HttpSettingsOutput) ToHttpSettingsPtrOutput() HttpSettingsPtrOutput {
	return o.ToHttpSettingsPtrOutputWithContext(context.Background())
}

func (o HttpSettingsOutput) ToHttpSettingsPtrOutputWithContext(ctx context.Context) HttpSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpSettings) *HttpSettings {
		return &v
	}).(HttpSettingsPtrOutput)
}

// The configuration settings of a forward proxy used to make the requests.
func (o HttpSettingsOutput) ForwardProxy() ForwardProxyPtrOutput {
	return o.ApplyT(func(v HttpSettings) *ForwardProxy { return v.ForwardProxy }).(ForwardProxyPtrOutput)
}

// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
func (o HttpSettingsOutput) RequireHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpSettings) *bool { return v.RequireHttps }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the paths HTTP requests.
func (o HttpSettingsOutput) Routes() HttpSettingsRoutesPtrOutput {
	return o.ApplyT(func(v HttpSettings) *HttpSettingsRoutes { return v.Routes }).(HttpSettingsRoutesPtrOutput)
}

type HttpSettingsPtrOutput struct{ *pulumi.OutputState }

func (HttpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettings)(nil)).Elem()
}

func (o HttpSettingsPtrOutput) ToHttpSettingsPtrOutput() HttpSettingsPtrOutput {
	return o
}

func (o HttpSettingsPtrOutput) ToHttpSettingsPtrOutputWithContext(ctx context.Context) HttpSettingsPtrOutput {
	return o
}

func (o HttpSettingsPtrOutput) Elem() HttpSettingsOutput {
	return o.ApplyT(func(v *HttpSettings) HttpSettings {
		if v != nil {
			return *v
		}
		var ret HttpSettings
		return ret
	}).(HttpSettingsOutput)
}

// The configuration settings of a forward proxy used to make the requests.
func (o HttpSettingsPtrOutput) ForwardProxy() ForwardProxyPtrOutput {
	return o.ApplyT(func(v *HttpSettings) *ForwardProxy {
		if v == nil {
			return nil
		}
		return v.ForwardProxy
	}).(ForwardProxyPtrOutput)
}

// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
func (o HttpSettingsPtrOutput) RequireHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HttpSettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequireHttps
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the paths HTTP requests.
func (o HttpSettingsPtrOutput) Routes() HttpSettingsRoutesPtrOutput {
	return o.ApplyT(func(v *HttpSettings) *HttpSettingsRoutes {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(HttpSettingsRoutesPtrOutput)
}

// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
type HttpSettingsResponse struct {
	// The configuration settings of a forward proxy used to make the requests.
	ForwardProxy *ForwardProxyResponse `pulumi:"forwardProxy"`
	// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
	RequireHttps *bool `pulumi:"requireHttps"`
	// The configuration settings of the paths HTTP requests.
	Routes *HttpSettingsRoutesResponse `pulumi:"routes"`
}

// The configuration settings of the HTTP requests for authentication and authorization requests made against App Service Authentication/Authorization.
type HttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (HttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettingsResponse)(nil)).Elem()
}

func (o HttpSettingsResponseOutput) ToHttpSettingsResponseOutput() HttpSettingsResponseOutput {
	return o
}

func (o HttpSettingsResponseOutput) ToHttpSettingsResponseOutputWithContext(ctx context.Context) HttpSettingsResponseOutput {
	return o
}

// The configuration settings of a forward proxy used to make the requests.
func (o HttpSettingsResponseOutput) ForwardProxy() ForwardProxyResponsePtrOutput {
	return o.ApplyT(func(v HttpSettingsResponse) *ForwardProxyResponse { return v.ForwardProxy }).(ForwardProxyResponsePtrOutput)
}

// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
func (o HttpSettingsResponseOutput) RequireHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HttpSettingsResponse) *bool { return v.RequireHttps }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the paths HTTP requests.
func (o HttpSettingsResponseOutput) Routes() HttpSettingsRoutesResponsePtrOutput {
	return o.ApplyT(func(v HttpSettingsResponse) *HttpSettingsRoutesResponse { return v.Routes }).(HttpSettingsRoutesResponsePtrOutput)
}

type HttpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettingsResponse)(nil)).Elem()
}

func (o HttpSettingsResponsePtrOutput) ToHttpSettingsResponsePtrOutput() HttpSettingsResponsePtrOutput {
	return o
}

func (o HttpSettingsResponsePtrOutput) ToHttpSettingsResponsePtrOutputWithContext(ctx context.Context) HttpSettingsResponsePtrOutput {
	return o
}

func (o HttpSettingsResponsePtrOutput) Elem() HttpSettingsResponseOutput {
	return o.ApplyT(func(v *HttpSettingsResponse) HttpSettingsResponse {
		if v != nil {
			return *v
		}
		var ret HttpSettingsResponse
		return ret
	}).(HttpSettingsResponseOutput)
}

// The configuration settings of a forward proxy used to make the requests.
func (o HttpSettingsResponsePtrOutput) ForwardProxy() ForwardProxyResponsePtrOutput {
	return o.ApplyT(func(v *HttpSettingsResponse) *ForwardProxyResponse {
		if v == nil {
			return nil
		}
		return v.ForwardProxy
	}).(ForwardProxyResponsePtrOutput)
}

// <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
func (o HttpSettingsResponsePtrOutput) RequireHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HttpSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireHttps
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the paths HTTP requests.
func (o HttpSettingsResponsePtrOutput) Routes() HttpSettingsRoutesResponsePtrOutput {
	return o.ApplyT(func(v *HttpSettingsResponse) *HttpSettingsRoutesResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(HttpSettingsRoutesResponsePtrOutput)
}

// The configuration settings of the paths HTTP requests.
type HttpSettingsRoutes struct {
	// The prefix that should precede all the authentication/authorization paths.
	ApiPrefix *string `pulumi:"apiPrefix"`
}

// HttpSettingsRoutesInput is an input type that accepts HttpSettingsRoutesArgs and HttpSettingsRoutesOutput values.
// You can construct a concrete instance of `HttpSettingsRoutesInput` via:
//
//	HttpSettingsRoutesArgs{...}
type HttpSettingsRoutesInput interface {
	pulumi.Input

	ToHttpSettingsRoutesOutput() HttpSettingsRoutesOutput
	ToHttpSettingsRoutesOutputWithContext(context.Context) HttpSettingsRoutesOutput
}

// The configuration settings of the paths HTTP requests.
type HttpSettingsRoutesArgs struct {
	// The prefix that should precede all the authentication/authorization paths.
	ApiPrefix pulumi.StringPtrInput `pulumi:"apiPrefix"`
}

func (HttpSettingsRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettingsRoutes)(nil)).Elem()
}

func (i HttpSettingsRoutesArgs) ToHttpSettingsRoutesOutput() HttpSettingsRoutesOutput {
	return i.ToHttpSettingsRoutesOutputWithContext(context.Background())
}

func (i HttpSettingsRoutesArgs) ToHttpSettingsRoutesOutputWithContext(ctx context.Context) HttpSettingsRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsRoutesOutput)
}

func (i HttpSettingsRoutesArgs) ToHttpSettingsRoutesPtrOutput() HttpSettingsRoutesPtrOutput {
	return i.ToHttpSettingsRoutesPtrOutputWithContext(context.Background())
}

func (i HttpSettingsRoutesArgs) ToHttpSettingsRoutesPtrOutputWithContext(ctx context.Context) HttpSettingsRoutesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsRoutesOutput).ToHttpSettingsRoutesPtrOutputWithContext(ctx)
}

// HttpSettingsRoutesPtrInput is an input type that accepts HttpSettingsRoutesArgs, HttpSettingsRoutesPtr and HttpSettingsRoutesPtrOutput values.
// You can construct a concrete instance of `HttpSettingsRoutesPtrInput` via:
//
//	        HttpSettingsRoutesArgs{...}
//
//	or:
//
//	        nil
type HttpSettingsRoutesPtrInput interface {
	pulumi.Input

	ToHttpSettingsRoutesPtrOutput() HttpSettingsRoutesPtrOutput
	ToHttpSettingsRoutesPtrOutputWithContext(context.Context) HttpSettingsRoutesPtrOutput
}

type httpSettingsRoutesPtrType HttpSettingsRoutesArgs

func HttpSettingsRoutesPtr(v *HttpSettingsRoutesArgs) HttpSettingsRoutesPtrInput {
	return (*httpSettingsRoutesPtrType)(v)
}

func (*httpSettingsRoutesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettingsRoutes)(nil)).Elem()
}

func (i *httpSettingsRoutesPtrType) ToHttpSettingsRoutesPtrOutput() HttpSettingsRoutesPtrOutput {
	return i.ToHttpSettingsRoutesPtrOutputWithContext(context.Background())
}

func (i *httpSettingsRoutesPtrType) ToHttpSettingsRoutesPtrOutputWithContext(ctx context.Context) HttpSettingsRoutesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSettingsRoutesPtrOutput)
}

// The configuration settings of the paths HTTP requests.
type HttpSettingsRoutesOutput struct{ *pulumi.OutputState }

func (HttpSettingsRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettingsRoutes)(nil)).Elem()
}

func (o HttpSettingsRoutesOutput) ToHttpSettingsRoutesOutput() HttpSettingsRoutesOutput {
	return o
}

func (o HttpSettingsRoutesOutput) ToHttpSettingsRoutesOutputWithContext(ctx context.Context) HttpSettingsRoutesOutput {
	return o
}

func (o HttpSettingsRoutesOutput) ToHttpSettingsRoutesPtrOutput() HttpSettingsRoutesPtrOutput {
	return o.ToHttpSettingsRoutesPtrOutputWithContext(context.Background())
}

func (o HttpSettingsRoutesOutput) ToHttpSettingsRoutesPtrOutputWithContext(ctx context.Context) HttpSettingsRoutesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HttpSettingsRoutes) *HttpSettingsRoutes {
		return &v
	}).(HttpSettingsRoutesPtrOutput)
}

// The prefix that should precede all the authentication/authorization paths.
func (o HttpSettingsRoutesOutput) ApiPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSettingsRoutes) *string { return v.ApiPrefix }).(pulumi.StringPtrOutput)
}

type HttpSettingsRoutesPtrOutput struct{ *pulumi.OutputState }

func (HttpSettingsRoutesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettingsRoutes)(nil)).Elem()
}

func (o HttpSettingsRoutesPtrOutput) ToHttpSettingsRoutesPtrOutput() HttpSettingsRoutesPtrOutput {
	return o
}

func (o HttpSettingsRoutesPtrOutput) ToHttpSettingsRoutesPtrOutputWithContext(ctx context.Context) HttpSettingsRoutesPtrOutput {
	return o
}

func (o HttpSettingsRoutesPtrOutput) Elem() HttpSettingsRoutesOutput {
	return o.ApplyT(func(v *HttpSettingsRoutes) HttpSettingsRoutes {
		if v != nil {
			return *v
		}
		var ret HttpSettingsRoutes
		return ret
	}).(HttpSettingsRoutesOutput)
}

// The prefix that should precede all the authentication/authorization paths.
func (o HttpSettingsRoutesPtrOutput) ApiPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpSettingsRoutes) *string {
		if v == nil {
			return nil
		}
		return v.ApiPrefix
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the paths HTTP requests.
type HttpSettingsRoutesResponse struct {
	// The prefix that should precede all the authentication/authorization paths.
	ApiPrefix *string `pulumi:"apiPrefix"`
}

// The configuration settings of the paths HTTP requests.
type HttpSettingsRoutesResponseOutput struct{ *pulumi.OutputState }

func (HttpSettingsRoutesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSettingsRoutesResponse)(nil)).Elem()
}

func (o HttpSettingsRoutesResponseOutput) ToHttpSettingsRoutesResponseOutput() HttpSettingsRoutesResponseOutput {
	return o
}

func (o HttpSettingsRoutesResponseOutput) ToHttpSettingsRoutesResponseOutputWithContext(ctx context.Context) HttpSettingsRoutesResponseOutput {
	return o
}

// The prefix that should precede all the authentication/authorization paths.
func (o HttpSettingsRoutesResponseOutput) ApiPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSettingsRoutesResponse) *string { return v.ApiPrefix }).(pulumi.StringPtrOutput)
}

type HttpSettingsRoutesResponsePtrOutput struct{ *pulumi.OutputState }

func (HttpSettingsRoutesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpSettingsRoutesResponse)(nil)).Elem()
}

func (o HttpSettingsRoutesResponsePtrOutput) ToHttpSettingsRoutesResponsePtrOutput() HttpSettingsRoutesResponsePtrOutput {
	return o
}

func (o HttpSettingsRoutesResponsePtrOutput) ToHttpSettingsRoutesResponsePtrOutputWithContext(ctx context.Context) HttpSettingsRoutesResponsePtrOutput {
	return o
}

func (o HttpSettingsRoutesResponsePtrOutput) Elem() HttpSettingsRoutesResponseOutput {
	return o.ApplyT(func(v *HttpSettingsRoutesResponse) HttpSettingsRoutesResponse {
		if v != nil {
			return *v
		}
		var ret HttpSettingsRoutesResponse
		return ret
	}).(HttpSettingsRoutesResponseOutput)
}

// The prefix that should precede all the authentication/authorization paths.
func (o HttpSettingsRoutesResponsePtrOutput) ApiPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HttpSettingsRoutesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiPrefix
	}).(pulumi.StringPtrOutput)
}

// A domain specific resource identifier.
type IdentifierResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
	// String representation of the identity.
	Value *string `pulumi:"value"`
}

// A domain specific resource identifier.
type IdentifierResponseOutput struct{ *pulumi.OutputState }

func (IdentifierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutput() IdentifierResponseOutput {
	return o
}

func (o IdentifierResponseOutput) ToIdentifierResponseOutputWithContext(ctx context.Context) IdentifierResponseOutput {
	return o
}

// Resource Id.
func (o IdentifierResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o IdentifierResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o IdentifierResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o IdentifierResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentifierResponse) string { return v.Type }).(pulumi.StringOutput)
}

// String representation of the identity.
func (o IdentifierResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentifierResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IdentifierResponseArrayOutput struct{ *pulumi.OutputState }

func (IdentifierResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentifierResponse)(nil)).Elem()
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutput() IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) ToIdentifierResponseArrayOutputWithContext(ctx context.Context) IdentifierResponseArrayOutput {
	return o
}

func (o IdentifierResponseArrayOutput) Index(i pulumi.IntInput) IdentifierResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentifierResponse {
		return vs[0].([]IdentifierResponse)[vs[1].(int)]
	}).(IdentifierResponseOutput)
}

// The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
type IdentityProviders struct {
	// The configuration settings of the Apple provider.
	Apple *Apple `pulumi:"apple"`
	// The configuration settings of the Azure Active directory provider.
	AzureActiveDirectory *AzureActiveDirectory `pulumi:"azureActiveDirectory"`
	// The configuration settings of the Azure Static Web Apps provider.
	AzureStaticWebApps *AzureStaticWebApps `pulumi:"azureStaticWebApps"`
	// The map of the name of the alias of each custom Open ID Connect provider to the
	// configuration settings of the custom Open ID Connect provider.
	CustomOpenIdConnectProviders map[string]CustomOpenIdConnectProvider `pulumi:"customOpenIdConnectProviders"`
	// The configuration settings of the Facebook provider.
	Facebook *Facebook `pulumi:"facebook"`
	// The configuration settings of the GitHub provider.
	GitHub *GitHub `pulumi:"gitHub"`
	// The configuration settings of the Google provider.
	Google *Google `pulumi:"google"`
	// The configuration settings of the legacy Microsoft Account provider.
	LegacyMicrosoftAccount *LegacyMicrosoftAccount `pulumi:"legacyMicrosoftAccount"`
	// The configuration settings of the Twitter provider.
	Twitter *Twitter `pulumi:"twitter"`
}

// IdentityProvidersInput is an input type that accepts IdentityProvidersArgs and IdentityProvidersOutput values.
// You can construct a concrete instance of `IdentityProvidersInput` via:
//
//	IdentityProvidersArgs{...}
type IdentityProvidersInput interface {
	pulumi.Input

	ToIdentityProvidersOutput() IdentityProvidersOutput
	ToIdentityProvidersOutputWithContext(context.Context) IdentityProvidersOutput
}

// The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
type IdentityProvidersArgs struct {
	// The configuration settings of the Apple provider.
	Apple ApplePtrInput `pulumi:"apple"`
	// The configuration settings of the Azure Active directory provider.
	AzureActiveDirectory AzureActiveDirectoryPtrInput `pulumi:"azureActiveDirectory"`
	// The configuration settings of the Azure Static Web Apps provider.
	AzureStaticWebApps AzureStaticWebAppsPtrInput `pulumi:"azureStaticWebApps"`
	// The map of the name of the alias of each custom Open ID Connect provider to the
	// configuration settings of the custom Open ID Connect provider.
	CustomOpenIdConnectProviders CustomOpenIdConnectProviderMapInput `pulumi:"customOpenIdConnectProviders"`
	// The configuration settings of the Facebook provider.
	Facebook FacebookPtrInput `pulumi:"facebook"`
	// The configuration settings of the GitHub provider.
	GitHub GitHubPtrInput `pulumi:"gitHub"`
	// The configuration settings of the Google provider.
	Google GooglePtrInput `pulumi:"google"`
	// The configuration settings of the legacy Microsoft Account provider.
	LegacyMicrosoftAccount LegacyMicrosoftAccountPtrInput `pulumi:"legacyMicrosoftAccount"`
	// The configuration settings of the Twitter provider.
	Twitter TwitterPtrInput `pulumi:"twitter"`
}

func (IdentityProvidersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviders)(nil)).Elem()
}

func (i IdentityProvidersArgs) ToIdentityProvidersOutput() IdentityProvidersOutput {
	return i.ToIdentityProvidersOutputWithContext(context.Background())
}

func (i IdentityProvidersArgs) ToIdentityProvidersOutputWithContext(ctx context.Context) IdentityProvidersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProvidersOutput)
}

func (i IdentityProvidersArgs) ToIdentityProvidersPtrOutput() IdentityProvidersPtrOutput {
	return i.ToIdentityProvidersPtrOutputWithContext(context.Background())
}

func (i IdentityProvidersArgs) ToIdentityProvidersPtrOutputWithContext(ctx context.Context) IdentityProvidersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProvidersOutput).ToIdentityProvidersPtrOutputWithContext(ctx)
}

// IdentityProvidersPtrInput is an input type that accepts IdentityProvidersArgs, IdentityProvidersPtr and IdentityProvidersPtrOutput values.
// You can construct a concrete instance of `IdentityProvidersPtrInput` via:
//
//	        IdentityProvidersArgs{...}
//
//	or:
//
//	        nil
type IdentityProvidersPtrInput interface {
	pulumi.Input

	ToIdentityProvidersPtrOutput() IdentityProvidersPtrOutput
	ToIdentityProvidersPtrOutputWithContext(context.Context) IdentityProvidersPtrOutput
}

type identityProvidersPtrType IdentityProvidersArgs

func IdentityProvidersPtr(v *IdentityProvidersArgs) IdentityProvidersPtrInput {
	return (*identityProvidersPtrType)(v)
}

func (*identityProvidersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviders)(nil)).Elem()
}

func (i *identityProvidersPtrType) ToIdentityProvidersPtrOutput() IdentityProvidersPtrOutput {
	return i.ToIdentityProvidersPtrOutputWithContext(context.Background())
}

func (i *identityProvidersPtrType) ToIdentityProvidersPtrOutputWithContext(ctx context.Context) IdentityProvidersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProvidersPtrOutput)
}

// The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
type IdentityProvidersOutput struct{ *pulumi.OutputState }

func (IdentityProvidersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProviders)(nil)).Elem()
}

func (o IdentityProvidersOutput) ToIdentityProvidersOutput() IdentityProvidersOutput {
	return o
}

func (o IdentityProvidersOutput) ToIdentityProvidersOutputWithContext(ctx context.Context) IdentityProvidersOutput {
	return o
}

func (o IdentityProvidersOutput) ToIdentityProvidersPtrOutput() IdentityProvidersPtrOutput {
	return o.ToIdentityProvidersPtrOutputWithContext(context.Background())
}

func (o IdentityProvidersOutput) ToIdentityProvidersPtrOutputWithContext(ctx context.Context) IdentityProvidersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityProviders) *IdentityProviders {
		return &v
	}).(IdentityProvidersPtrOutput)
}

// The configuration settings of the Apple provider.
func (o IdentityProvidersOutput) Apple() ApplePtrOutput {
	return o.ApplyT(func(v IdentityProviders) *Apple { return v.Apple }).(ApplePtrOutput)
}

// The configuration settings of the Azure Active directory provider.
func (o IdentityProvidersOutput) AzureActiveDirectory() AzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *AzureActiveDirectory { return v.AzureActiveDirectory }).(AzureActiveDirectoryPtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
func (o IdentityProvidersOutput) AzureStaticWebApps() AzureStaticWebAppsPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *AzureStaticWebApps { return v.AzureStaticWebApps }).(AzureStaticWebAppsPtrOutput)
}

// The map of the name of the alias of each custom Open ID Connect provider to the
// configuration settings of the custom Open ID Connect provider.
func (o IdentityProvidersOutput) CustomOpenIdConnectProviders() CustomOpenIdConnectProviderMapOutput {
	return o.ApplyT(func(v IdentityProviders) map[string]CustomOpenIdConnectProvider {
		return v.CustomOpenIdConnectProviders
	}).(CustomOpenIdConnectProviderMapOutput)
}

// The configuration settings of the Facebook provider.
func (o IdentityProvidersOutput) Facebook() FacebookPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *Facebook { return v.Facebook }).(FacebookPtrOutput)
}

// The configuration settings of the GitHub provider.
func (o IdentityProvidersOutput) GitHub() GitHubPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *GitHub { return v.GitHub }).(GitHubPtrOutput)
}

// The configuration settings of the Google provider.
func (o IdentityProvidersOutput) Google() GooglePtrOutput {
	return o.ApplyT(func(v IdentityProviders) *Google { return v.Google }).(GooglePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
func (o IdentityProvidersOutput) LegacyMicrosoftAccount() LegacyMicrosoftAccountPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *LegacyMicrosoftAccount { return v.LegacyMicrosoftAccount }).(LegacyMicrosoftAccountPtrOutput)
}

// The configuration settings of the Twitter provider.
func (o IdentityProvidersOutput) Twitter() TwitterPtrOutput {
	return o.ApplyT(func(v IdentityProviders) *Twitter { return v.Twitter }).(TwitterPtrOutput)
}

type IdentityProvidersPtrOutput struct{ *pulumi.OutputState }

func (IdentityProvidersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProviders)(nil)).Elem()
}

func (o IdentityProvidersPtrOutput) ToIdentityProvidersPtrOutput() IdentityProvidersPtrOutput {
	return o
}

func (o IdentityProvidersPtrOutput) ToIdentityProvidersPtrOutputWithContext(ctx context.Context) IdentityProvidersPtrOutput {
	return o
}

func (o IdentityProvidersPtrOutput) Elem() IdentityProvidersOutput {
	return o.ApplyT(func(v *IdentityProviders) IdentityProviders {
		if v != nil {
			return *v
		}
		var ret IdentityProviders
		return ret
	}).(IdentityProvidersOutput)
}

// The configuration settings of the Apple provider.
func (o IdentityProvidersPtrOutput) Apple() ApplePtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *Apple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(ApplePtrOutput)
}

// The configuration settings of the Azure Active directory provider.
func (o IdentityProvidersPtrOutput) AzureActiveDirectory() AzureActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *AzureActiveDirectory {
		if v == nil {
			return nil
		}
		return v.AzureActiveDirectory
	}).(AzureActiveDirectoryPtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
func (o IdentityProvidersPtrOutput) AzureStaticWebApps() AzureStaticWebAppsPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *AzureStaticWebApps {
		if v == nil {
			return nil
		}
		return v.AzureStaticWebApps
	}).(AzureStaticWebAppsPtrOutput)
}

// The map of the name of the alias of each custom Open ID Connect provider to the
// configuration settings of the custom Open ID Connect provider.
func (o IdentityProvidersPtrOutput) CustomOpenIdConnectProviders() CustomOpenIdConnectProviderMapOutput {
	return o.ApplyT(func(v *IdentityProviders) map[string]CustomOpenIdConnectProvider {
		if v == nil {
			return nil
		}
		return v.CustomOpenIdConnectProviders
	}).(CustomOpenIdConnectProviderMapOutput)
}

// The configuration settings of the Facebook provider.
func (o IdentityProvidersPtrOutput) Facebook() FacebookPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *Facebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(FacebookPtrOutput)
}

// The configuration settings of the GitHub provider.
func (o IdentityProvidersPtrOutput) GitHub() GitHubPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *GitHub {
		if v == nil {
			return nil
		}
		return v.GitHub
	}).(GitHubPtrOutput)
}

// The configuration settings of the Google provider.
func (o IdentityProvidersPtrOutput) Google() GooglePtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *Google {
		if v == nil {
			return nil
		}
		return v.Google
	}).(GooglePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
func (o IdentityProvidersPtrOutput) LegacyMicrosoftAccount() LegacyMicrosoftAccountPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *LegacyMicrosoftAccount {
		if v == nil {
			return nil
		}
		return v.LegacyMicrosoftAccount
	}).(LegacyMicrosoftAccountPtrOutput)
}

// The configuration settings of the Twitter provider.
func (o IdentityProvidersPtrOutput) Twitter() TwitterPtrOutput {
	return o.ApplyT(func(v *IdentityProviders) *Twitter {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(TwitterPtrOutput)
}

// The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
type IdentityProvidersResponse struct {
	// The configuration settings of the Apple provider.
	Apple *AppleResponse `pulumi:"apple"`
	// The configuration settings of the Azure Active directory provider.
	AzureActiveDirectory *AzureActiveDirectoryResponse `pulumi:"azureActiveDirectory"`
	// The configuration settings of the Azure Static Web Apps provider.
	AzureStaticWebApps *AzureStaticWebAppsResponse `pulumi:"azureStaticWebApps"`
	// The map of the name of the alias of each custom Open ID Connect provider to the
	// configuration settings of the custom Open ID Connect provider.
	CustomOpenIdConnectProviders map[string]CustomOpenIdConnectProviderResponse `pulumi:"customOpenIdConnectProviders"`
	// The configuration settings of the Facebook provider.
	Facebook *FacebookResponse `pulumi:"facebook"`
	// The configuration settings of the GitHub provider.
	GitHub *GitHubResponse `pulumi:"gitHub"`
	// The configuration settings of the Google provider.
	Google *GoogleResponse `pulumi:"google"`
	// The configuration settings of the legacy Microsoft Account provider.
	LegacyMicrosoftAccount *LegacyMicrosoftAccountResponse `pulumi:"legacyMicrosoftAccount"`
	// The configuration settings of the Twitter provider.
	Twitter *TwitterResponse `pulumi:"twitter"`
}

// The configuration settings of each of the identity providers used to configure App Service Authentication/Authorization.
type IdentityProvidersResponseOutput struct{ *pulumi.OutputState }

func (IdentityProvidersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityProvidersResponse)(nil)).Elem()
}

func (o IdentityProvidersResponseOutput) ToIdentityProvidersResponseOutput() IdentityProvidersResponseOutput {
	return o
}

func (o IdentityProvidersResponseOutput) ToIdentityProvidersResponseOutputWithContext(ctx context.Context) IdentityProvidersResponseOutput {
	return o
}

// The configuration settings of the Apple provider.
func (o IdentityProvidersResponseOutput) Apple() AppleResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *AppleResponse { return v.Apple }).(AppleResponsePtrOutput)
}

// The configuration settings of the Azure Active directory provider.
func (o IdentityProvidersResponseOutput) AzureActiveDirectory() AzureActiveDirectoryResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *AzureActiveDirectoryResponse { return v.AzureActiveDirectory }).(AzureActiveDirectoryResponsePtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
func (o IdentityProvidersResponseOutput) AzureStaticWebApps() AzureStaticWebAppsResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *AzureStaticWebAppsResponse { return v.AzureStaticWebApps }).(AzureStaticWebAppsResponsePtrOutput)
}

// The map of the name of the alias of each custom Open ID Connect provider to the
// configuration settings of the custom Open ID Connect provider.
func (o IdentityProvidersResponseOutput) CustomOpenIdConnectProviders() CustomOpenIdConnectProviderResponseMapOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) map[string]CustomOpenIdConnectProviderResponse {
		return v.CustomOpenIdConnectProviders
	}).(CustomOpenIdConnectProviderResponseMapOutput)
}

// The configuration settings of the Facebook provider.
func (o IdentityProvidersResponseOutput) Facebook() FacebookResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *FacebookResponse { return v.Facebook }).(FacebookResponsePtrOutput)
}

// The configuration settings of the GitHub provider.
func (o IdentityProvidersResponseOutput) GitHub() GitHubResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *GitHubResponse { return v.GitHub }).(GitHubResponsePtrOutput)
}

// The configuration settings of the Google provider.
func (o IdentityProvidersResponseOutput) Google() GoogleResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *GoogleResponse { return v.Google }).(GoogleResponsePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
func (o IdentityProvidersResponseOutput) LegacyMicrosoftAccount() LegacyMicrosoftAccountResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *LegacyMicrosoftAccountResponse { return v.LegacyMicrosoftAccount }).(LegacyMicrosoftAccountResponsePtrOutput)
}

// The configuration settings of the Twitter provider.
func (o IdentityProvidersResponseOutput) Twitter() TwitterResponsePtrOutput {
	return o.ApplyT(func(v IdentityProvidersResponse) *TwitterResponse { return v.Twitter }).(TwitterResponsePtrOutput)
}

type IdentityProvidersResponsePtrOutput struct{ *pulumi.OutputState }

func (IdentityProvidersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProvidersResponse)(nil)).Elem()
}

func (o IdentityProvidersResponsePtrOutput) ToIdentityProvidersResponsePtrOutput() IdentityProvidersResponsePtrOutput {
	return o
}

func (o IdentityProvidersResponsePtrOutput) ToIdentityProvidersResponsePtrOutputWithContext(ctx context.Context) IdentityProvidersResponsePtrOutput {
	return o
}

func (o IdentityProvidersResponsePtrOutput) Elem() IdentityProvidersResponseOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) IdentityProvidersResponse {
		if v != nil {
			return *v
		}
		var ret IdentityProvidersResponse
		return ret
	}).(IdentityProvidersResponseOutput)
}

// The configuration settings of the Apple provider.
func (o IdentityProvidersResponsePtrOutput) Apple() AppleResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *AppleResponse {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(AppleResponsePtrOutput)
}

// The configuration settings of the Azure Active directory provider.
func (o IdentityProvidersResponsePtrOutput) AzureActiveDirectory() AzureActiveDirectoryResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *AzureActiveDirectoryResponse {
		if v == nil {
			return nil
		}
		return v.AzureActiveDirectory
	}).(AzureActiveDirectoryResponsePtrOutput)
}

// The configuration settings of the Azure Static Web Apps provider.
func (o IdentityProvidersResponsePtrOutput) AzureStaticWebApps() AzureStaticWebAppsResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *AzureStaticWebAppsResponse {
		if v == nil {
			return nil
		}
		return v.AzureStaticWebApps
	}).(AzureStaticWebAppsResponsePtrOutput)
}

// The map of the name of the alias of each custom Open ID Connect provider to the
// configuration settings of the custom Open ID Connect provider.
func (o IdentityProvidersResponsePtrOutput) CustomOpenIdConnectProviders() CustomOpenIdConnectProviderResponseMapOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) map[string]CustomOpenIdConnectProviderResponse {
		if v == nil {
			return nil
		}
		return v.CustomOpenIdConnectProviders
	}).(CustomOpenIdConnectProviderResponseMapOutput)
}

// The configuration settings of the Facebook provider.
func (o IdentityProvidersResponsePtrOutput) Facebook() FacebookResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *FacebookResponse {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(FacebookResponsePtrOutput)
}

// The configuration settings of the GitHub provider.
func (o IdentityProvidersResponsePtrOutput) GitHub() GitHubResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *GitHubResponse {
		if v == nil {
			return nil
		}
		return v.GitHub
	}).(GitHubResponsePtrOutput)
}

// The configuration settings of the Google provider.
func (o IdentityProvidersResponsePtrOutput) Google() GoogleResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *GoogleResponse {
		if v == nil {
			return nil
		}
		return v.Google
	}).(GoogleResponsePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
func (o IdentityProvidersResponsePtrOutput) LegacyMicrosoftAccount() LegacyMicrosoftAccountResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *LegacyMicrosoftAccountResponse {
		if v == nil {
			return nil
		}
		return v.LegacyMicrosoftAccount
	}).(LegacyMicrosoftAccountResponsePtrOutput)
}

// The configuration settings of the Twitter provider.
func (o IdentityProvidersResponsePtrOutput) Twitter() TwitterResponsePtrOutput {
	return o.ApplyT(func(v *IdentityProvidersResponse) *TwitterResponse {
		if v == nil {
			return nil
		}
		return v.Twitter
	}).(TwitterResponsePtrOutput)
}

// Container App Ingress configuration.
type Ingress struct {
	// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// Bool indicating if app exposes an external http endpoint
	External *bool `pulumi:"external"`
	// Target Port in containers for traffic from ingress
	TargetPort *int            `pulumi:"targetPort"`
	Traffic    []TrafficWeight `pulumi:"traffic"`
	// Ingress transport protocol
	Transport *string `pulumi:"transport"`
}

// Defaults sets the appropriate defaults for Ingress
func (val *Ingress) Defaults() *Ingress {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.External) {
		external_ := false
		tmp.External = &external_
	}
	return &tmp
}

// IngressInput is an input type that accepts IngressArgs and IngressOutput values.
// You can construct a concrete instance of `IngressInput` via:
//
//	IngressArgs{...}
type IngressInput interface {
	pulumi.Input

	ToIngressOutput() IngressOutput
	ToIngressOutputWithContext(context.Context) IngressOutput
}

// Container App Ingress configuration.
type IngressArgs struct {
	// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// Bool indicating if app exposes an external http endpoint
	External pulumi.BoolPtrInput `pulumi:"external"`
	// Target Port in containers for traffic from ingress
	TargetPort pulumi.IntPtrInput      `pulumi:"targetPort"`
	Traffic    TrafficWeightArrayInput `pulumi:"traffic"`
	// Ingress transport protocol
	Transport pulumi.StringPtrInput `pulumi:"transport"`
}

// Defaults sets the appropriate defaults for IngressArgs
func (val *IngressArgs) Defaults() *IngressArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.External) {
		tmp.External = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (IngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ingress)(nil)).Elem()
}

func (i IngressArgs) ToIngressOutput() IngressOutput {
	return i.ToIngressOutputWithContext(context.Background())
}

func (i IngressArgs) ToIngressOutputWithContext(ctx context.Context) IngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressOutput)
}

func (i IngressArgs) ToIngressPtrOutput() IngressPtrOutput {
	return i.ToIngressPtrOutputWithContext(context.Background())
}

func (i IngressArgs) ToIngressPtrOutputWithContext(ctx context.Context) IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressOutput).ToIngressPtrOutputWithContext(ctx)
}

// IngressPtrInput is an input type that accepts IngressArgs, IngressPtr and IngressPtrOutput values.
// You can construct a concrete instance of `IngressPtrInput` via:
//
//	        IngressArgs{...}
//
//	or:
//
//	        nil
type IngressPtrInput interface {
	pulumi.Input

	ToIngressPtrOutput() IngressPtrOutput
	ToIngressPtrOutputWithContext(context.Context) IngressPtrOutput
}

type ingressPtrType IngressArgs

func IngressPtr(v *IngressArgs) IngressPtrInput {
	return (*ingressPtrType)(v)
}

func (*ingressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ingress)(nil)).Elem()
}

func (i *ingressPtrType) ToIngressPtrOutput() IngressPtrOutput {
	return i.ToIngressPtrOutputWithContext(context.Background())
}

func (i *ingressPtrType) ToIngressPtrOutputWithContext(ctx context.Context) IngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressPtrOutput)
}

// Container App Ingress configuration.
type IngressOutput struct{ *pulumi.OutputState }

func (IngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ingress)(nil)).Elem()
}

func (o IngressOutput) ToIngressOutput() IngressOutput {
	return o
}

func (o IngressOutput) ToIngressOutputWithContext(ctx context.Context) IngressOutput {
	return o
}

func (o IngressOutput) ToIngressPtrOutput() IngressPtrOutput {
	return o.ToIngressPtrOutputWithContext(context.Background())
}

func (o IngressOutput) ToIngressPtrOutputWithContext(ctx context.Context) IngressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ingress) *Ingress {
		return &v
	}).(IngressPtrOutput)
}

// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
func (o IngressOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Ingress) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// Bool indicating if app exposes an external http endpoint
func (o IngressOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Ingress) *bool { return v.External }).(pulumi.BoolPtrOutput)
}

// Target Port in containers for traffic from ingress
func (o IngressOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Ingress) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

func (o IngressOutput) Traffic() TrafficWeightArrayOutput {
	return o.ApplyT(func(v Ingress) []TrafficWeight { return v.Traffic }).(TrafficWeightArrayOutput)
}

// Ingress transport protocol
func (o IngressOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ingress) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type IngressPtrOutput struct{ *pulumi.OutputState }

func (IngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ingress)(nil)).Elem()
}

func (o IngressPtrOutput) ToIngressPtrOutput() IngressPtrOutput {
	return o
}

func (o IngressPtrOutput) ToIngressPtrOutputWithContext(ctx context.Context) IngressPtrOutput {
	return o
}

func (o IngressPtrOutput) Elem() IngressOutput {
	return o.ApplyT(func(v *Ingress) Ingress {
		if v != nil {
			return *v
		}
		var ret Ingress
		return ret
	}).(IngressOutput)
}

// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
func (o IngressPtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Ingress) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// Bool indicating if app exposes an external http endpoint
func (o IngressPtrOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Ingress) *bool {
		if v == nil {
			return nil
		}
		return v.External
	}).(pulumi.BoolPtrOutput)
}

// Target Port in containers for traffic from ingress
func (o IngressPtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Ingress) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

func (o IngressPtrOutput) Traffic() TrafficWeightArrayOutput {
	return o.ApplyT(func(v *Ingress) []TrafficWeight {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(TrafficWeightArrayOutput)
}

// Ingress transport protocol
func (o IngressPtrOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ingress) *string {
		if v == nil {
			return nil
		}
		return v.Transport
	}).(pulumi.StringPtrOutput)
}

// Container App Ingress configuration.
type IngressResponse struct {
	// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// Bool indicating if app exposes an external http endpoint
	External *bool `pulumi:"external"`
	// Hostname.
	Fqdn string `pulumi:"fqdn"`
	// Target Port in containers for traffic from ingress
	TargetPort *int                    `pulumi:"targetPort"`
	Traffic    []TrafficWeightResponse `pulumi:"traffic"`
	// Ingress transport protocol
	Transport *string `pulumi:"transport"`
}

// Defaults sets the appropriate defaults for IngressResponse
func (val *IngressResponse) Defaults() *IngressResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.External) {
		external_ := false
		tmp.External = &external_
	}
	return &tmp
}

// Container App Ingress configuration.
type IngressResponseOutput struct{ *pulumi.OutputState }

func (IngressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressResponse)(nil)).Elem()
}

func (o IngressResponseOutput) ToIngressResponseOutput() IngressResponseOutput {
	return o
}

func (o IngressResponseOutput) ToIngressResponseOutputWithContext(ctx context.Context) IngressResponseOutput {
	return o
}

// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
func (o IngressResponseOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngressResponse) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// Bool indicating if app exposes an external http endpoint
func (o IngressResponseOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngressResponse) *bool { return v.External }).(pulumi.BoolPtrOutput)
}

// Hostname.
func (o IngressResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v IngressResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// Target Port in containers for traffic from ingress
func (o IngressResponseOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IngressResponse) *int { return v.TargetPort }).(pulumi.IntPtrOutput)
}

func (o IngressResponseOutput) Traffic() TrafficWeightResponseArrayOutput {
	return o.ApplyT(func(v IngressResponse) []TrafficWeightResponse { return v.Traffic }).(TrafficWeightResponseArrayOutput)
}

// Ingress transport protocol
func (o IngressResponseOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngressResponse) *string { return v.Transport }).(pulumi.StringPtrOutput)
}

type IngressResponsePtrOutput struct{ *pulumi.OutputState }

func (IngressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressResponse)(nil)).Elem()
}

func (o IngressResponsePtrOutput) ToIngressResponsePtrOutput() IngressResponsePtrOutput {
	return o
}

func (o IngressResponsePtrOutput) ToIngressResponsePtrOutputWithContext(ctx context.Context) IngressResponsePtrOutput {
	return o
}

func (o IngressResponsePtrOutput) Elem() IngressResponseOutput {
	return o.ApplyT(func(v *IngressResponse) IngressResponse {
		if v != nil {
			return *v
		}
		var ret IngressResponse
		return ret
	}).(IngressResponseOutput)
}

// Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
func (o IngressResponsePtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IngressResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// Bool indicating if app exposes an external http endpoint
func (o IngressResponsePtrOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IngressResponse) *bool {
		if v == nil {
			return nil
		}
		return v.External
	}).(pulumi.BoolPtrOutput)
}

// Hostname.
func (o IngressResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Target Port in containers for traffic from ingress
func (o IngressResponsePtrOutput) TargetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IngressResponse) *int {
		if v == nil {
			return nil
		}
		return v.TargetPort
	}).(pulumi.IntPtrOutput)
}

func (o IngressResponsePtrOutput) Traffic() TrafficWeightResponseArrayOutput {
	return o.ApplyT(func(v *IngressResponse) []TrafficWeightResponse {
		if v == nil {
			return nil
		}
		return v.Traffic
	}).(TrafficWeightResponseArrayOutput)
}

// Ingress transport protocol
func (o IngressResponsePtrOutput) Transport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IngressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Transport
	}).(pulumi.StringPtrOutput)
}

// IP security restriction on an app.
type IpSecurityRestriction struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IpSecurityRestrictionInput is an input type that accepts IpSecurityRestrictionArgs and IpSecurityRestrictionOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionInput` via:
//
//	IpSecurityRestrictionArgs{...}
type IpSecurityRestrictionInput interface {
	pulumi.Input

	ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput
	ToIpSecurityRestrictionOutputWithContext(context.Context) IpSecurityRestrictionOutput
}

// IP security restriction on an app.
type IpSecurityRestrictionArgs struct {
	// Allow or Deny access for this IP range.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// IP restriction rule description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers pulumi.StringArrayMapInput `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask pulumi.StringPtrInput `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag pulumi.IntPtrInput `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId pulumi.StringPtrInput `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag pulumi.IntPtrInput `pulumi:"vnetTrafficTag"`
}

func (IpSecurityRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return i.ToIpSecurityRestrictionOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArgs) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionOutput)
}

// IpSecurityRestrictionArrayInput is an input type that accepts IpSecurityRestrictionArray and IpSecurityRestrictionArrayOutput values.
// You can construct a concrete instance of `IpSecurityRestrictionArrayInput` via:
//
//	IpSecurityRestrictionArray{ IpSecurityRestrictionArgs{...} }
type IpSecurityRestrictionArrayInput interface {
	pulumi.Input

	ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput
	ToIpSecurityRestrictionArrayOutputWithContext(context.Context) IpSecurityRestrictionArrayOutput
}

type IpSecurityRestrictionArray []IpSecurityRestrictionInput

func (IpSecurityRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return i.ToIpSecurityRestrictionArrayOutputWithContext(context.Background())
}

func (i IpSecurityRestrictionArray) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSecurityRestrictionArrayOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutput() IpSecurityRestrictionOutput {
	return o
}

func (o IpSecurityRestrictionOutput) ToIpSecurityRestrictionOutputWithContext(ctx context.Context) IpSecurityRestrictionOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
//   - If the property is null or empty (default), all hosts(or lack of) are allowed.
//   - A value is compared using ordinal-ignore-case (excluding port number).
//   - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//     but not the root domain contoso.com or multi-level foo.bar.contoso.com
//   - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestriction) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestriction) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestriction)(nil)).Elem()
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutput() IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) ToIpSecurityRestrictionArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionArrayOutput {
	return o
}

func (o IpSecurityRestrictionArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestriction {
		return vs[0].([]IpSecurityRestriction)[vs[1].(int)]
	}).(IpSecurityRestrictionOutput)
}

// IP security restriction on an app.
type IpSecurityRestrictionResponse struct {
	// Allow or Deny access for this IP range.
	Action *string `pulumi:"action"`
	// IP restriction rule description.
	Description *string `pulumi:"description"`
	// IP restriction rule headers.
	// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), all hosts(or lack of) are allowed.
	// - A value is compared using ordinal-ignore-case (excluding port number).
	// - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
	//    but not the root domain contoso.com or multi-level foo.bar.contoso.com
	// - Unicode host names are allowed but are converted to Punycode for matching.
	//
	// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
	// The matching logic is ..
	// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
	// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
	//
	// X-Azure-FDID and X-FD-HealthProbe.
	// The matching logic is exact match.
	Headers map[string][]string `pulumi:"headers"`
	// IP address the security restriction is valid for.
	// It can be in form of pure ipv4 address (required SubnetMask property) or
	// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
	// SubnetMask property must not be specified.
	IpAddress *string `pulumi:"ipAddress"`
	// IP restriction rule name.
	Name *string `pulumi:"name"`
	// Priority of IP restriction rule.
	Priority *int `pulumi:"priority"`
	// Subnet mask for the range of IP addresses the restriction is valid for.
	SubnetMask *string `pulumi:"subnetMask"`
	// (internal) Subnet traffic tag
	SubnetTrafficTag *int `pulumi:"subnetTrafficTag"`
	// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
	Tag *string `pulumi:"tag"`
	// Virtual network resource id
	VnetSubnetResourceId *string `pulumi:"vnetSubnetResourceId"`
	// (internal) Vnet traffic tag
	VnetTrafficTag *int `pulumi:"vnetTrafficTag"`
}

// IP security restriction on an app.
type IpSecurityRestrictionResponseOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutput() IpSecurityRestrictionResponseOutput {
	return o
}

func (o IpSecurityRestrictionResponseOutput) ToIpSecurityRestrictionResponseOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseOutput {
	return o
}

// Allow or Deny access for this IP range.
func (o IpSecurityRestrictionResponseOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// IP restriction rule description.
func (o IpSecurityRestrictionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// IP restriction rule headers.
// X-Forwarded-Host (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host#Examples).
// The matching logic is ..
//   - If the property is null or empty (default), all hosts(or lack of) are allowed.
//   - A value is compared using ordinal-ignore-case (excluding port number).
//   - Subdomain wildcards are permitted but don't match the root domain. For example, *.contoso.com matches the subdomain foo.contoso.com
//     but not the root domain contoso.com or multi-level foo.bar.contoso.com
//   - Unicode host names are allowed but are converted to Punycode for matching.
//
// X-Forwarded-For (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For#Examples).
// The matching logic is ..
// - If the property is null or empty (default), any forwarded-for chains (or lack of) are allowed.
// - If any address (excluding port number) in the chain (comma separated) matches the CIDR defined by the property.
//
// X-Azure-FDID and X-FD-HealthProbe.
// The matching logic is exact match.
func (o IpSecurityRestrictionResponseOutput) Headers() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) map[string][]string { return v.Headers }).(pulumi.StringArrayMapOutput)
}

// IP address the security restriction is valid for.
// It can be in form of pure ipv4 address (required SubnetMask property) or
// CIDR notation such as ipv4/mask (leading bit match). For CIDR,
// SubnetMask property must not be specified.
func (o IpSecurityRestrictionResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IP restriction rule name.
func (o IpSecurityRestrictionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of IP restriction rule.
func (o IpSecurityRestrictionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Subnet mask for the range of IP addresses the restriction is valid for.
func (o IpSecurityRestrictionResponseOutput) SubnetMask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.SubnetMask }).(pulumi.StringPtrOutput)
}

// (internal) Subnet traffic tag
func (o IpSecurityRestrictionResponseOutput) SubnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.SubnetTrafficTag }).(pulumi.IntPtrOutput)
}

// Defines what this IP filter will be used for. This is to support IP filtering on proxies.
func (o IpSecurityRestrictionResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Virtual network resource id
func (o IpSecurityRestrictionResponseOutput) VnetSubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *string { return v.VnetSubnetResourceId }).(pulumi.StringPtrOutput)
}

// (internal) Vnet traffic tag
func (o IpSecurityRestrictionResponseOutput) VnetTrafficTag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpSecurityRestrictionResponse) *int { return v.VnetTrafficTag }).(pulumi.IntPtrOutput)
}

type IpSecurityRestrictionResponseArrayOutput struct{ *pulumi.OutputState }

func (IpSecurityRestrictionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSecurityRestrictionResponse)(nil)).Elem()
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutput() IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) ToIpSecurityRestrictionResponseArrayOutputWithContext(ctx context.Context) IpSecurityRestrictionResponseArrayOutput {
	return o
}

func (o IpSecurityRestrictionResponseArrayOutput) Index(i pulumi.IntInput) IpSecurityRestrictionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpSecurityRestrictionResponse {
		return vs[0].([]IpSecurityRestrictionResponse)[vs[1].(int)]
	}).(IpSecurityRestrictionResponseOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
type JwtClaimChecks struct {
	// The list of the allowed client applications.
	AllowedClientApplications []string `pulumi:"allowedClientApplications"`
	// The list of the allowed groups.
	AllowedGroups []string `pulumi:"allowedGroups"`
}

// JwtClaimChecksInput is an input type that accepts JwtClaimChecksArgs and JwtClaimChecksOutput values.
// You can construct a concrete instance of `JwtClaimChecksInput` via:
//
//	JwtClaimChecksArgs{...}
type JwtClaimChecksInput interface {
	pulumi.Input

	ToJwtClaimChecksOutput() JwtClaimChecksOutput
	ToJwtClaimChecksOutputWithContext(context.Context) JwtClaimChecksOutput
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
type JwtClaimChecksArgs struct {
	// The list of the allowed client applications.
	AllowedClientApplications pulumi.StringArrayInput `pulumi:"allowedClientApplications"`
	// The list of the allowed groups.
	AllowedGroups pulumi.StringArrayInput `pulumi:"allowedGroups"`
}

func (JwtClaimChecksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtClaimChecks)(nil)).Elem()
}

func (i JwtClaimChecksArgs) ToJwtClaimChecksOutput() JwtClaimChecksOutput {
	return i.ToJwtClaimChecksOutputWithContext(context.Background())
}

func (i JwtClaimChecksArgs) ToJwtClaimChecksOutputWithContext(ctx context.Context) JwtClaimChecksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtClaimChecksOutput)
}

func (i JwtClaimChecksArgs) ToJwtClaimChecksPtrOutput() JwtClaimChecksPtrOutput {
	return i.ToJwtClaimChecksPtrOutputWithContext(context.Background())
}

func (i JwtClaimChecksArgs) ToJwtClaimChecksPtrOutputWithContext(ctx context.Context) JwtClaimChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtClaimChecksOutput).ToJwtClaimChecksPtrOutputWithContext(ctx)
}

// JwtClaimChecksPtrInput is an input type that accepts JwtClaimChecksArgs, JwtClaimChecksPtr and JwtClaimChecksPtrOutput values.
// You can construct a concrete instance of `JwtClaimChecksPtrInput` via:
//
//	        JwtClaimChecksArgs{...}
//
//	or:
//
//	        nil
type JwtClaimChecksPtrInput interface {
	pulumi.Input

	ToJwtClaimChecksPtrOutput() JwtClaimChecksPtrOutput
	ToJwtClaimChecksPtrOutputWithContext(context.Context) JwtClaimChecksPtrOutput
}

type jwtClaimChecksPtrType JwtClaimChecksArgs

func JwtClaimChecksPtr(v *JwtClaimChecksArgs) JwtClaimChecksPtrInput {
	return (*jwtClaimChecksPtrType)(v)
}

func (*jwtClaimChecksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtClaimChecks)(nil)).Elem()
}

func (i *jwtClaimChecksPtrType) ToJwtClaimChecksPtrOutput() JwtClaimChecksPtrOutput {
	return i.ToJwtClaimChecksPtrOutputWithContext(context.Background())
}

func (i *jwtClaimChecksPtrType) ToJwtClaimChecksPtrOutputWithContext(ctx context.Context) JwtClaimChecksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JwtClaimChecksPtrOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
type JwtClaimChecksOutput struct{ *pulumi.OutputState }

func (JwtClaimChecksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtClaimChecks)(nil)).Elem()
}

func (o JwtClaimChecksOutput) ToJwtClaimChecksOutput() JwtClaimChecksOutput {
	return o
}

func (o JwtClaimChecksOutput) ToJwtClaimChecksOutputWithContext(ctx context.Context) JwtClaimChecksOutput {
	return o
}

func (o JwtClaimChecksOutput) ToJwtClaimChecksPtrOutput() JwtClaimChecksPtrOutput {
	return o.ToJwtClaimChecksPtrOutputWithContext(context.Background())
}

func (o JwtClaimChecksOutput) ToJwtClaimChecksPtrOutputWithContext(ctx context.Context) JwtClaimChecksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JwtClaimChecks) *JwtClaimChecks {
		return &v
	}).(JwtClaimChecksPtrOutput)
}

// The list of the allowed client applications.
func (o JwtClaimChecksOutput) AllowedClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtClaimChecks) []string { return v.AllowedClientApplications }).(pulumi.StringArrayOutput)
}

// The list of the allowed groups.
func (o JwtClaimChecksOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtClaimChecks) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

type JwtClaimChecksPtrOutput struct{ *pulumi.OutputState }

func (JwtClaimChecksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtClaimChecks)(nil)).Elem()
}

func (o JwtClaimChecksPtrOutput) ToJwtClaimChecksPtrOutput() JwtClaimChecksPtrOutput {
	return o
}

func (o JwtClaimChecksPtrOutput) ToJwtClaimChecksPtrOutputWithContext(ctx context.Context) JwtClaimChecksPtrOutput {
	return o
}

func (o JwtClaimChecksPtrOutput) Elem() JwtClaimChecksOutput {
	return o.ApplyT(func(v *JwtClaimChecks) JwtClaimChecks {
		if v != nil {
			return *v
		}
		var ret JwtClaimChecks
		return ret
	}).(JwtClaimChecksOutput)
}

// The list of the allowed client applications.
func (o JwtClaimChecksPtrOutput) AllowedClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtClaimChecks) []string {
		if v == nil {
			return nil
		}
		return v.AllowedClientApplications
	}).(pulumi.StringArrayOutput)
}

// The list of the allowed groups.
func (o JwtClaimChecksPtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtClaimChecks) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
type JwtClaimChecksResponse struct {
	// The list of the allowed client applications.
	AllowedClientApplications []string `pulumi:"allowedClientApplications"`
	// The list of the allowed groups.
	AllowedGroups []string `pulumi:"allowedGroups"`
}

// The configuration settings of the checks that should be made while validating the JWT Claims.
type JwtClaimChecksResponseOutput struct{ *pulumi.OutputState }

func (JwtClaimChecksResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JwtClaimChecksResponse)(nil)).Elem()
}

func (o JwtClaimChecksResponseOutput) ToJwtClaimChecksResponseOutput() JwtClaimChecksResponseOutput {
	return o
}

func (o JwtClaimChecksResponseOutput) ToJwtClaimChecksResponseOutputWithContext(ctx context.Context) JwtClaimChecksResponseOutput {
	return o
}

// The list of the allowed client applications.
func (o JwtClaimChecksResponseOutput) AllowedClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtClaimChecksResponse) []string { return v.AllowedClientApplications }).(pulumi.StringArrayOutput)
}

// The list of the allowed groups.
func (o JwtClaimChecksResponseOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JwtClaimChecksResponse) []string { return v.AllowedGroups }).(pulumi.StringArrayOutput)
}

type JwtClaimChecksResponsePtrOutput struct{ *pulumi.OutputState }

func (JwtClaimChecksResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JwtClaimChecksResponse)(nil)).Elem()
}

func (o JwtClaimChecksResponsePtrOutput) ToJwtClaimChecksResponsePtrOutput() JwtClaimChecksResponsePtrOutput {
	return o
}

func (o JwtClaimChecksResponsePtrOutput) ToJwtClaimChecksResponsePtrOutputWithContext(ctx context.Context) JwtClaimChecksResponsePtrOutput {
	return o
}

func (o JwtClaimChecksResponsePtrOutput) Elem() JwtClaimChecksResponseOutput {
	return o.ApplyT(func(v *JwtClaimChecksResponse) JwtClaimChecksResponse {
		if v != nil {
			return *v
		}
		var ret JwtClaimChecksResponse
		return ret
	}).(JwtClaimChecksResponseOutput)
}

// The list of the allowed client applications.
func (o JwtClaimChecksResponsePtrOutput) AllowedClientApplications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtClaimChecksResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedClientApplications
	}).(pulumi.StringArrayOutput)
}

// The list of the allowed groups.
func (o JwtClaimChecksResponsePtrOutput) AllowedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JwtClaimChecksResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedGroups
	}).(pulumi.StringArrayOutput)
}

// Specification for a Kubernetes Environment to use for this resource.
type KubeEnvironmentProfile struct {
	// Resource ID of the Kubernetes Environment.
	Id *string `pulumi:"id"`
}

// KubeEnvironmentProfileInput is an input type that accepts KubeEnvironmentProfileArgs and KubeEnvironmentProfileOutput values.
// You can construct a concrete instance of `KubeEnvironmentProfileInput` via:
//
//	KubeEnvironmentProfileArgs{...}
type KubeEnvironmentProfileInput interface {
	pulumi.Input

	ToKubeEnvironmentProfileOutput() KubeEnvironmentProfileOutput
	ToKubeEnvironmentProfileOutputWithContext(context.Context) KubeEnvironmentProfileOutput
}

// Specification for a Kubernetes Environment to use for this resource.
type KubeEnvironmentProfileArgs struct {
	// Resource ID of the Kubernetes Environment.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (KubeEnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeEnvironmentProfile)(nil)).Elem()
}

func (i KubeEnvironmentProfileArgs) ToKubeEnvironmentProfileOutput() KubeEnvironmentProfileOutput {
	return i.ToKubeEnvironmentProfileOutputWithContext(context.Background())
}

func (i KubeEnvironmentProfileArgs) ToKubeEnvironmentProfileOutputWithContext(ctx context.Context) KubeEnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeEnvironmentProfileOutput)
}

func (i KubeEnvironmentProfileArgs) ToKubeEnvironmentProfilePtrOutput() KubeEnvironmentProfilePtrOutput {
	return i.ToKubeEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i KubeEnvironmentProfileArgs) ToKubeEnvironmentProfilePtrOutputWithContext(ctx context.Context) KubeEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeEnvironmentProfileOutput).ToKubeEnvironmentProfilePtrOutputWithContext(ctx)
}

// KubeEnvironmentProfilePtrInput is an input type that accepts KubeEnvironmentProfileArgs, KubeEnvironmentProfilePtr and KubeEnvironmentProfilePtrOutput values.
// You can construct a concrete instance of `KubeEnvironmentProfilePtrInput` via:
//
//	        KubeEnvironmentProfileArgs{...}
//
//	or:
//
//	        nil
type KubeEnvironmentProfilePtrInput interface {
	pulumi.Input

	ToKubeEnvironmentProfilePtrOutput() KubeEnvironmentProfilePtrOutput
	ToKubeEnvironmentProfilePtrOutputWithContext(context.Context) KubeEnvironmentProfilePtrOutput
}

type kubeEnvironmentProfilePtrType KubeEnvironmentProfileArgs

func KubeEnvironmentProfilePtr(v *KubeEnvironmentProfileArgs) KubeEnvironmentProfilePtrInput {
	return (*kubeEnvironmentProfilePtrType)(v)
}

func (*kubeEnvironmentProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeEnvironmentProfile)(nil)).Elem()
}

func (i *kubeEnvironmentProfilePtrType) ToKubeEnvironmentProfilePtrOutput() KubeEnvironmentProfilePtrOutput {
	return i.ToKubeEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (i *kubeEnvironmentProfilePtrType) ToKubeEnvironmentProfilePtrOutputWithContext(ctx context.Context) KubeEnvironmentProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeEnvironmentProfilePtrOutput)
}

// Specification for a Kubernetes Environment to use for this resource.
type KubeEnvironmentProfileOutput struct{ *pulumi.OutputState }

func (KubeEnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeEnvironmentProfile)(nil)).Elem()
}

func (o KubeEnvironmentProfileOutput) ToKubeEnvironmentProfileOutput() KubeEnvironmentProfileOutput {
	return o
}

func (o KubeEnvironmentProfileOutput) ToKubeEnvironmentProfileOutputWithContext(ctx context.Context) KubeEnvironmentProfileOutput {
	return o
}

func (o KubeEnvironmentProfileOutput) ToKubeEnvironmentProfilePtrOutput() KubeEnvironmentProfilePtrOutput {
	return o.ToKubeEnvironmentProfilePtrOutputWithContext(context.Background())
}

func (o KubeEnvironmentProfileOutput) ToKubeEnvironmentProfilePtrOutputWithContext(ctx context.Context) KubeEnvironmentProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubeEnvironmentProfile) *KubeEnvironmentProfile {
		return &v
	}).(KubeEnvironmentProfilePtrOutput)
}

// Resource ID of the Kubernetes Environment.
func (o KubeEnvironmentProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeEnvironmentProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type KubeEnvironmentProfilePtrOutput struct{ *pulumi.OutputState }

func (KubeEnvironmentProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeEnvironmentProfile)(nil)).Elem()
}

func (o KubeEnvironmentProfilePtrOutput) ToKubeEnvironmentProfilePtrOutput() KubeEnvironmentProfilePtrOutput {
	return o
}

func (o KubeEnvironmentProfilePtrOutput) ToKubeEnvironmentProfilePtrOutputWithContext(ctx context.Context) KubeEnvironmentProfilePtrOutput {
	return o
}

func (o KubeEnvironmentProfilePtrOutput) Elem() KubeEnvironmentProfileOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfile) KubeEnvironmentProfile {
		if v != nil {
			return *v
		}
		var ret KubeEnvironmentProfile
		return ret
	}).(KubeEnvironmentProfileOutput)
}

// Resource ID of the Kubernetes Environment.
func (o KubeEnvironmentProfilePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfile) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specification for a Kubernetes Environment to use for this resource.
type KubeEnvironmentProfileResponse struct {
	// Resource ID of the Kubernetes Environment.
	Id *string `pulumi:"id"`
	// Name of the Kubernetes Environment.
	Name string `pulumi:"name"`
	// Resource type of the Kubernetes Environment.
	Type string `pulumi:"type"`
}

// Specification for a Kubernetes Environment to use for this resource.
type KubeEnvironmentProfileResponseOutput struct{ *pulumi.OutputState }

func (KubeEnvironmentProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubeEnvironmentProfileResponse)(nil)).Elem()
}

func (o KubeEnvironmentProfileResponseOutput) ToKubeEnvironmentProfileResponseOutput() KubeEnvironmentProfileResponseOutput {
	return o
}

func (o KubeEnvironmentProfileResponseOutput) ToKubeEnvironmentProfileResponseOutputWithContext(ctx context.Context) KubeEnvironmentProfileResponseOutput {
	return o
}

// Resource ID of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubeEnvironmentProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubeEnvironmentProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KubeEnvironmentProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type KubeEnvironmentProfileResponsePtrOutput struct{ *pulumi.OutputState }

func (KubeEnvironmentProfileResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeEnvironmentProfileResponse)(nil)).Elem()
}

func (o KubeEnvironmentProfileResponsePtrOutput) ToKubeEnvironmentProfileResponsePtrOutput() KubeEnvironmentProfileResponsePtrOutput {
	return o
}

func (o KubeEnvironmentProfileResponsePtrOutput) ToKubeEnvironmentProfileResponsePtrOutputWithContext(ctx context.Context) KubeEnvironmentProfileResponsePtrOutput {
	return o
}

func (o KubeEnvironmentProfileResponsePtrOutput) Elem() KubeEnvironmentProfileResponseOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfileResponse) KubeEnvironmentProfileResponse {
		if v != nil {
			return *v
		}
		var ret KubeEnvironmentProfileResponse
		return ret
	}).(KubeEnvironmentProfileResponseOutput)
}

// Resource ID of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Resource type of the Kubernetes Environment.
func (o KubeEnvironmentProfileResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubeEnvironmentProfileResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccount struct {
	// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopes `pulumi:"login"`
	// The configuration settings of the app registration for the legacy Microsoft Account provider.
	Registration *ClientRegistration `pulumi:"registration"`
	// The configuration settings of the legacy Microsoft Account provider token validation flow.
	Validation *AllowedAudiencesValidation `pulumi:"validation"`
}

// LegacyMicrosoftAccountInput is an input type that accepts LegacyMicrosoftAccountArgs and LegacyMicrosoftAccountOutput values.
// You can construct a concrete instance of `LegacyMicrosoftAccountInput` via:
//
//	LegacyMicrosoftAccountArgs{...}
type LegacyMicrosoftAccountInput interface {
	pulumi.Input

	ToLegacyMicrosoftAccountOutput() LegacyMicrosoftAccountOutput
	ToLegacyMicrosoftAccountOutputWithContext(context.Context) LegacyMicrosoftAccountOutput
}

// The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccountArgs struct {
	// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login LoginScopesPtrInput `pulumi:"login"`
	// The configuration settings of the app registration for the legacy Microsoft Account provider.
	Registration ClientRegistrationPtrInput `pulumi:"registration"`
	// The configuration settings of the legacy Microsoft Account provider token validation flow.
	Validation AllowedAudiencesValidationPtrInput `pulumi:"validation"`
}

func (LegacyMicrosoftAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyMicrosoftAccount)(nil)).Elem()
}

func (i LegacyMicrosoftAccountArgs) ToLegacyMicrosoftAccountOutput() LegacyMicrosoftAccountOutput {
	return i.ToLegacyMicrosoftAccountOutputWithContext(context.Background())
}

func (i LegacyMicrosoftAccountArgs) ToLegacyMicrosoftAccountOutputWithContext(ctx context.Context) LegacyMicrosoftAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegacyMicrosoftAccountOutput)
}

func (i LegacyMicrosoftAccountArgs) ToLegacyMicrosoftAccountPtrOutput() LegacyMicrosoftAccountPtrOutput {
	return i.ToLegacyMicrosoftAccountPtrOutputWithContext(context.Background())
}

func (i LegacyMicrosoftAccountArgs) ToLegacyMicrosoftAccountPtrOutputWithContext(ctx context.Context) LegacyMicrosoftAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegacyMicrosoftAccountOutput).ToLegacyMicrosoftAccountPtrOutputWithContext(ctx)
}

// LegacyMicrosoftAccountPtrInput is an input type that accepts LegacyMicrosoftAccountArgs, LegacyMicrosoftAccountPtr and LegacyMicrosoftAccountPtrOutput values.
// You can construct a concrete instance of `LegacyMicrosoftAccountPtrInput` via:
//
//	        LegacyMicrosoftAccountArgs{...}
//
//	or:
//
//	        nil
type LegacyMicrosoftAccountPtrInput interface {
	pulumi.Input

	ToLegacyMicrosoftAccountPtrOutput() LegacyMicrosoftAccountPtrOutput
	ToLegacyMicrosoftAccountPtrOutputWithContext(context.Context) LegacyMicrosoftAccountPtrOutput
}

type legacyMicrosoftAccountPtrType LegacyMicrosoftAccountArgs

func LegacyMicrosoftAccountPtr(v *LegacyMicrosoftAccountArgs) LegacyMicrosoftAccountPtrInput {
	return (*legacyMicrosoftAccountPtrType)(v)
}

func (*legacyMicrosoftAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LegacyMicrosoftAccount)(nil)).Elem()
}

func (i *legacyMicrosoftAccountPtrType) ToLegacyMicrosoftAccountPtrOutput() LegacyMicrosoftAccountPtrOutput {
	return i.ToLegacyMicrosoftAccountPtrOutputWithContext(context.Background())
}

func (i *legacyMicrosoftAccountPtrType) ToLegacyMicrosoftAccountPtrOutputWithContext(ctx context.Context) LegacyMicrosoftAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LegacyMicrosoftAccountPtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccountOutput struct{ *pulumi.OutputState }

func (LegacyMicrosoftAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyMicrosoftAccount)(nil)).Elem()
}

func (o LegacyMicrosoftAccountOutput) ToLegacyMicrosoftAccountOutput() LegacyMicrosoftAccountOutput {
	return o
}

func (o LegacyMicrosoftAccountOutput) ToLegacyMicrosoftAccountOutputWithContext(ctx context.Context) LegacyMicrosoftAccountOutput {
	return o
}

func (o LegacyMicrosoftAccountOutput) ToLegacyMicrosoftAccountPtrOutput() LegacyMicrosoftAccountPtrOutput {
	return o.ToLegacyMicrosoftAccountPtrOutputWithContext(context.Background())
}

func (o LegacyMicrosoftAccountOutput) ToLegacyMicrosoftAccountPtrOutputWithContext(ctx context.Context) LegacyMicrosoftAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LegacyMicrosoftAccount) *LegacyMicrosoftAccount {
		return &v
	}).(LegacyMicrosoftAccountPtrOutput)
}

// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o LegacyMicrosoftAccountOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccount) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o LegacyMicrosoftAccountOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccount) *LoginScopes { return v.Login }).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the legacy Microsoft Account provider.
func (o LegacyMicrosoftAccountOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccount) *ClientRegistration { return v.Registration }).(ClientRegistrationPtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider token validation flow.
func (o LegacyMicrosoftAccountOutput) Validation() AllowedAudiencesValidationPtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccount) *AllowedAudiencesValidation { return v.Validation }).(AllowedAudiencesValidationPtrOutput)
}

type LegacyMicrosoftAccountPtrOutput struct{ *pulumi.OutputState }

func (LegacyMicrosoftAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LegacyMicrosoftAccount)(nil)).Elem()
}

func (o LegacyMicrosoftAccountPtrOutput) ToLegacyMicrosoftAccountPtrOutput() LegacyMicrosoftAccountPtrOutput {
	return o
}

func (o LegacyMicrosoftAccountPtrOutput) ToLegacyMicrosoftAccountPtrOutputWithContext(ctx context.Context) LegacyMicrosoftAccountPtrOutput {
	return o
}

func (o LegacyMicrosoftAccountPtrOutput) Elem() LegacyMicrosoftAccountOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccount) LegacyMicrosoftAccount {
		if v != nil {
			return *v
		}
		var ret LegacyMicrosoftAccount
		return ret
	}).(LegacyMicrosoftAccountOutput)
}

// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o LegacyMicrosoftAccountPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccount) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o LegacyMicrosoftAccountPtrOutput) Login() LoginScopesPtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccount) *LoginScopes {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesPtrOutput)
}

// The configuration settings of the app registration for the legacy Microsoft Account provider.
func (o LegacyMicrosoftAccountPtrOutput) Registration() ClientRegistrationPtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccount) *ClientRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationPtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider token validation flow.
func (o LegacyMicrosoftAccountPtrOutput) Validation() AllowedAudiencesValidationPtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccount) *AllowedAudiencesValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AllowedAudiencesValidationPtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccountResponse struct {
	// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the login flow.
	Login *LoginScopesResponse `pulumi:"login"`
	// The configuration settings of the app registration for the legacy Microsoft Account provider.
	Registration *ClientRegistrationResponse `pulumi:"registration"`
	// The configuration settings of the legacy Microsoft Account provider token validation flow.
	Validation *AllowedAudiencesValidationResponse `pulumi:"validation"`
}

// The configuration settings of the legacy Microsoft Account provider.
type LegacyMicrosoftAccountResponseOutput struct{ *pulumi.OutputState }

func (LegacyMicrosoftAccountResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LegacyMicrosoftAccountResponse)(nil)).Elem()
}

func (o LegacyMicrosoftAccountResponseOutput) ToLegacyMicrosoftAccountResponseOutput() LegacyMicrosoftAccountResponseOutput {
	return o
}

func (o LegacyMicrosoftAccountResponseOutput) ToLegacyMicrosoftAccountResponseOutputWithContext(ctx context.Context) LegacyMicrosoftAccountResponseOutput {
	return o
}

// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o LegacyMicrosoftAccountResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccountResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o LegacyMicrosoftAccountResponseOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccountResponse) *LoginScopesResponse { return v.Login }).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the legacy Microsoft Account provider.
func (o LegacyMicrosoftAccountResponseOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccountResponse) *ClientRegistrationResponse { return v.Registration }).(ClientRegistrationResponsePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider token validation flow.
func (o LegacyMicrosoftAccountResponseOutput) Validation() AllowedAudiencesValidationResponsePtrOutput {
	return o.ApplyT(func(v LegacyMicrosoftAccountResponse) *AllowedAudiencesValidationResponse { return v.Validation }).(AllowedAudiencesValidationResponsePtrOutput)
}

type LegacyMicrosoftAccountResponsePtrOutput struct{ *pulumi.OutputState }

func (LegacyMicrosoftAccountResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LegacyMicrosoftAccountResponse)(nil)).Elem()
}

func (o LegacyMicrosoftAccountResponsePtrOutput) ToLegacyMicrosoftAccountResponsePtrOutput() LegacyMicrosoftAccountResponsePtrOutput {
	return o
}

func (o LegacyMicrosoftAccountResponsePtrOutput) ToLegacyMicrosoftAccountResponsePtrOutputWithContext(ctx context.Context) LegacyMicrosoftAccountResponsePtrOutput {
	return o
}

func (o LegacyMicrosoftAccountResponsePtrOutput) Elem() LegacyMicrosoftAccountResponseOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccountResponse) LegacyMicrosoftAccountResponse {
		if v != nil {
			return *v
		}
		var ret LegacyMicrosoftAccountResponse
		return ret
	}).(LegacyMicrosoftAccountResponseOutput)
}

// <code>false</code> if the legacy Microsoft Account provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o LegacyMicrosoftAccountResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccountResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the login flow.
func (o LegacyMicrosoftAccountResponsePtrOutput) Login() LoginScopesResponsePtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccountResponse) *LoginScopesResponse {
		if v == nil {
			return nil
		}
		return v.Login
	}).(LoginScopesResponsePtrOutput)
}

// The configuration settings of the app registration for the legacy Microsoft Account provider.
func (o LegacyMicrosoftAccountResponsePtrOutput) Registration() ClientRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccountResponse) *ClientRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(ClientRegistrationResponsePtrOutput)
}

// The configuration settings of the legacy Microsoft Account provider token validation flow.
func (o LegacyMicrosoftAccountResponsePtrOutput) Validation() AllowedAudiencesValidationResponsePtrOutput {
	return o.ApplyT(func(v *LegacyMicrosoftAccountResponse) *AllowedAudiencesValidationResponse {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(AllowedAudiencesValidationResponsePtrOutput)
}

type LogAnalyticsConfiguration struct {
	CustomerId *string `pulumi:"customerId"`
	SharedKey  *string `pulumi:"sharedKey"`
}

// LogAnalyticsConfigurationInput is an input type that accepts LogAnalyticsConfigurationArgs and LogAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `LogAnalyticsConfigurationInput` via:
//
//	LogAnalyticsConfigurationArgs{...}
type LogAnalyticsConfigurationInput interface {
	pulumi.Input

	ToLogAnalyticsConfigurationOutput() LogAnalyticsConfigurationOutput
	ToLogAnalyticsConfigurationOutputWithContext(context.Context) LogAnalyticsConfigurationOutput
}

type LogAnalyticsConfigurationArgs struct {
	CustomerId pulumi.StringPtrInput `pulumi:"customerId"`
	SharedKey  pulumi.StringPtrInput `pulumi:"sharedKey"`
}

func (LogAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsConfiguration)(nil)).Elem()
}

func (i LogAnalyticsConfigurationArgs) ToLogAnalyticsConfigurationOutput() LogAnalyticsConfigurationOutput {
	return i.ToLogAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i LogAnalyticsConfigurationArgs) ToLogAnalyticsConfigurationOutputWithContext(ctx context.Context) LogAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsConfigurationOutput)
}

func (i LogAnalyticsConfigurationArgs) ToLogAnalyticsConfigurationPtrOutput() LogAnalyticsConfigurationPtrOutput {
	return i.ToLogAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i LogAnalyticsConfigurationArgs) ToLogAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) LogAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsConfigurationOutput).ToLogAnalyticsConfigurationPtrOutputWithContext(ctx)
}

// LogAnalyticsConfigurationPtrInput is an input type that accepts LogAnalyticsConfigurationArgs, LogAnalyticsConfigurationPtr and LogAnalyticsConfigurationPtrOutput values.
// You can construct a concrete instance of `LogAnalyticsConfigurationPtrInput` via:
//
//	        LogAnalyticsConfigurationArgs{...}
//
//	or:
//
//	        nil
type LogAnalyticsConfigurationPtrInput interface {
	pulumi.Input

	ToLogAnalyticsConfigurationPtrOutput() LogAnalyticsConfigurationPtrOutput
	ToLogAnalyticsConfigurationPtrOutputWithContext(context.Context) LogAnalyticsConfigurationPtrOutput
}

type logAnalyticsConfigurationPtrType LogAnalyticsConfigurationArgs

func LogAnalyticsConfigurationPtr(v *LogAnalyticsConfigurationArgs) LogAnalyticsConfigurationPtrInput {
	return (*logAnalyticsConfigurationPtrType)(v)
}

func (*logAnalyticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsConfiguration)(nil)).Elem()
}

func (i *logAnalyticsConfigurationPtrType) ToLogAnalyticsConfigurationPtrOutput() LogAnalyticsConfigurationPtrOutput {
	return i.ToLogAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *logAnalyticsConfigurationPtrType) ToLogAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) LogAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogAnalyticsConfigurationPtrOutput)
}

type LogAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (LogAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsConfiguration)(nil)).Elem()
}

func (o LogAnalyticsConfigurationOutput) ToLogAnalyticsConfigurationOutput() LogAnalyticsConfigurationOutput {
	return o
}

func (o LogAnalyticsConfigurationOutput) ToLogAnalyticsConfigurationOutputWithContext(ctx context.Context) LogAnalyticsConfigurationOutput {
	return o
}

func (o LogAnalyticsConfigurationOutput) ToLogAnalyticsConfigurationPtrOutput() LogAnalyticsConfigurationPtrOutput {
	return o.ToLogAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (o LogAnalyticsConfigurationOutput) ToLogAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) LogAnalyticsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogAnalyticsConfiguration) *LogAnalyticsConfiguration {
		return &v
	}).(LogAnalyticsConfigurationPtrOutput)
}

func (o LogAnalyticsConfigurationOutput) CustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsConfiguration) *string { return v.CustomerId }).(pulumi.StringPtrOutput)
}

func (o LogAnalyticsConfigurationOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsConfiguration) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

type LogAnalyticsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsConfiguration)(nil)).Elem()
}

func (o LogAnalyticsConfigurationPtrOutput) ToLogAnalyticsConfigurationPtrOutput() LogAnalyticsConfigurationPtrOutput {
	return o
}

func (o LogAnalyticsConfigurationPtrOutput) ToLogAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) LogAnalyticsConfigurationPtrOutput {
	return o
}

func (o LogAnalyticsConfigurationPtrOutput) Elem() LogAnalyticsConfigurationOutput {
	return o.ApplyT(func(v *LogAnalyticsConfiguration) LogAnalyticsConfiguration {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsConfiguration
		return ret
	}).(LogAnalyticsConfigurationOutput)
}

func (o LogAnalyticsConfigurationPtrOutput) CustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomerId
	}).(pulumi.StringPtrOutput)
}

func (o LogAnalyticsConfigurationPtrOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SharedKey
	}).(pulumi.StringPtrOutput)
}

type LogAnalyticsConfigurationResponse struct {
	CustomerId *string `pulumi:"customerId"`
}

type LogAnalyticsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (LogAnalyticsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogAnalyticsConfigurationResponse)(nil)).Elem()
}

func (o LogAnalyticsConfigurationResponseOutput) ToLogAnalyticsConfigurationResponseOutput() LogAnalyticsConfigurationResponseOutput {
	return o
}

func (o LogAnalyticsConfigurationResponseOutput) ToLogAnalyticsConfigurationResponseOutputWithContext(ctx context.Context) LogAnalyticsConfigurationResponseOutput {
	return o
}

func (o LogAnalyticsConfigurationResponseOutput) CustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogAnalyticsConfigurationResponse) *string { return v.CustomerId }).(pulumi.StringPtrOutput)
}

type LogAnalyticsConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (LogAnalyticsConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogAnalyticsConfigurationResponse)(nil)).Elem()
}

func (o LogAnalyticsConfigurationResponsePtrOutput) ToLogAnalyticsConfigurationResponsePtrOutput() LogAnalyticsConfigurationResponsePtrOutput {
	return o
}

func (o LogAnalyticsConfigurationResponsePtrOutput) ToLogAnalyticsConfigurationResponsePtrOutputWithContext(ctx context.Context) LogAnalyticsConfigurationResponsePtrOutput {
	return o
}

func (o LogAnalyticsConfigurationResponsePtrOutput) Elem() LogAnalyticsConfigurationResponseOutput {
	return o.ApplyT(func(v *LogAnalyticsConfigurationResponse) LogAnalyticsConfigurationResponse {
		if v != nil {
			return *v
		}
		var ret LogAnalyticsConfigurationResponse
		return ret
	}).(LogAnalyticsConfigurationResponseOutput)
}

func (o LogAnalyticsConfigurationResponsePtrOutput) CustomerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogAnalyticsConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomerId
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow of users using App Service Authentication/Authorization.
type Login struct {
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
	// This is an advanced setting typically only needed by Windows Store application backends.
	// Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The configuration settings of the session cookie's expiration.
	CookieExpiration *CookieExpiration `pulumi:"cookieExpiration"`
	// The configuration settings of the nonce used in the login flow.
	Nonce *Nonce `pulumi:"nonce"`
	// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
	PreserveUrlFragmentsForLogins *bool `pulumi:"preserveUrlFragmentsForLogins"`
	// The routes that specify the endpoints used for login and logout requests.
	Routes *LoginRoutes `pulumi:"routes"`
	// The configuration settings of the token store.
	TokenStore *TokenStore `pulumi:"tokenStore"`
}

// LoginInput is an input type that accepts LoginArgs and LoginOutput values.
// You can construct a concrete instance of `LoginInput` via:
//
//	LoginArgs{...}
type LoginInput interface {
	pulumi.Input

	ToLoginOutput() LoginOutput
	ToLoginOutputWithContext(context.Context) LoginOutput
}

// The configuration settings of the login flow of users using App Service Authentication/Authorization.
type LoginArgs struct {
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
	// This is an advanced setting typically only needed by Windows Store application backends.
	// Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls pulumi.StringArrayInput `pulumi:"allowedExternalRedirectUrls"`
	// The configuration settings of the session cookie's expiration.
	CookieExpiration CookieExpirationPtrInput `pulumi:"cookieExpiration"`
	// The configuration settings of the nonce used in the login flow.
	Nonce NoncePtrInput `pulumi:"nonce"`
	// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
	PreserveUrlFragmentsForLogins pulumi.BoolPtrInput `pulumi:"preserveUrlFragmentsForLogins"`
	// The routes that specify the endpoints used for login and logout requests.
	Routes LoginRoutesPtrInput `pulumi:"routes"`
	// The configuration settings of the token store.
	TokenStore TokenStorePtrInput `pulumi:"tokenStore"`
}

func (LoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Login)(nil)).Elem()
}

func (i LoginArgs) ToLoginOutput() LoginOutput {
	return i.ToLoginOutputWithContext(context.Background())
}

func (i LoginArgs) ToLoginOutputWithContext(ctx context.Context) LoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginOutput)
}

func (i LoginArgs) ToLoginPtrOutput() LoginPtrOutput {
	return i.ToLoginPtrOutputWithContext(context.Background())
}

func (i LoginArgs) ToLoginPtrOutputWithContext(ctx context.Context) LoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginOutput).ToLoginPtrOutputWithContext(ctx)
}

// LoginPtrInput is an input type that accepts LoginArgs, LoginPtr and LoginPtrOutput values.
// You can construct a concrete instance of `LoginPtrInput` via:
//
//	        LoginArgs{...}
//
//	or:
//
//	        nil
type LoginPtrInput interface {
	pulumi.Input

	ToLoginPtrOutput() LoginPtrOutput
	ToLoginPtrOutputWithContext(context.Context) LoginPtrOutput
}

type loginPtrType LoginArgs

func LoginPtr(v *LoginArgs) LoginPtrInput {
	return (*loginPtrType)(v)
}

func (*loginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Login)(nil)).Elem()
}

func (i *loginPtrType) ToLoginPtrOutput() LoginPtrOutput {
	return i.ToLoginPtrOutputWithContext(context.Background())
}

func (i *loginPtrType) ToLoginPtrOutputWithContext(ctx context.Context) LoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginPtrOutput)
}

// The configuration settings of the login flow of users using App Service Authentication/Authorization.
type LoginOutput struct{ *pulumi.OutputState }

func (LoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Login)(nil)).Elem()
}

func (o LoginOutput) ToLoginOutput() LoginOutput {
	return o
}

func (o LoginOutput) ToLoginOutputWithContext(ctx context.Context) LoginOutput {
	return o
}

func (o LoginOutput) ToLoginPtrOutput() LoginPtrOutput {
	return o.ToLoginPtrOutputWithContext(context.Background())
}

func (o LoginOutput) ToLoginPtrOutputWithContext(ctx context.Context) LoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Login) *Login {
		return &v
	}).(LoginPtrOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
// This is an advanced setting typically only needed by Windows Store application backends.
// Note that URLs within the current domain are always implicitly allowed.
func (o LoginOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Login) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The configuration settings of the session cookie's expiration.
func (o LoginOutput) CookieExpiration() CookieExpirationPtrOutput {
	return o.ApplyT(func(v Login) *CookieExpiration { return v.CookieExpiration }).(CookieExpirationPtrOutput)
}

// The configuration settings of the nonce used in the login flow.
func (o LoginOutput) Nonce() NoncePtrOutput {
	return o.ApplyT(func(v Login) *Nonce { return v.Nonce }).(NoncePtrOutput)
}

// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
func (o LoginOutput) PreserveUrlFragmentsForLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Login) *bool { return v.PreserveUrlFragmentsForLogins }).(pulumi.BoolPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
func (o LoginOutput) Routes() LoginRoutesPtrOutput {
	return o.ApplyT(func(v Login) *LoginRoutes { return v.Routes }).(LoginRoutesPtrOutput)
}

// The configuration settings of the token store.
func (o LoginOutput) TokenStore() TokenStorePtrOutput {
	return o.ApplyT(func(v Login) *TokenStore { return v.TokenStore }).(TokenStorePtrOutput)
}

type LoginPtrOutput struct{ *pulumi.OutputState }

func (LoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Login)(nil)).Elem()
}

func (o LoginPtrOutput) ToLoginPtrOutput() LoginPtrOutput {
	return o
}

func (o LoginPtrOutput) ToLoginPtrOutputWithContext(ctx context.Context) LoginPtrOutput {
	return o
}

func (o LoginPtrOutput) Elem() LoginOutput {
	return o.ApplyT(func(v *Login) Login {
		if v != nil {
			return *v
		}
		var ret Login
		return ret
	}).(LoginOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
// This is an advanced setting typically only needed by Windows Store application backends.
// Note that URLs within the current domain are always implicitly allowed.
func (o LoginPtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Login) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the session cookie's expiration.
func (o LoginPtrOutput) CookieExpiration() CookieExpirationPtrOutput {
	return o.ApplyT(func(v *Login) *CookieExpiration {
		if v == nil {
			return nil
		}
		return v.CookieExpiration
	}).(CookieExpirationPtrOutput)
}

// The configuration settings of the nonce used in the login flow.
func (o LoginPtrOutput) Nonce() NoncePtrOutput {
	return o.ApplyT(func(v *Login) *Nonce {
		if v == nil {
			return nil
		}
		return v.Nonce
	}).(NoncePtrOutput)
}

// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
func (o LoginPtrOutput) PreserveUrlFragmentsForLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Login) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveUrlFragmentsForLogins
	}).(pulumi.BoolPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
func (o LoginPtrOutput) Routes() LoginRoutesPtrOutput {
	return o.ApplyT(func(v *Login) *LoginRoutes {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(LoginRoutesPtrOutput)
}

// The configuration settings of the token store.
func (o LoginPtrOutput) TokenStore() TokenStorePtrOutput {
	return o.ApplyT(func(v *Login) *TokenStore {
		if v == nil {
			return nil
		}
		return v.TokenStore
	}).(TokenStorePtrOutput)
}

// The configuration settings of the login flow of users using App Service Authentication/Authorization.
type LoginResponse struct {
	// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
	// This is an advanced setting typically only needed by Windows Store application backends.
	// Note that URLs within the current domain are always implicitly allowed.
	AllowedExternalRedirectUrls []string `pulumi:"allowedExternalRedirectUrls"`
	// The configuration settings of the session cookie's expiration.
	CookieExpiration *CookieExpirationResponse `pulumi:"cookieExpiration"`
	// The configuration settings of the nonce used in the login flow.
	Nonce *NonceResponse `pulumi:"nonce"`
	// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
	PreserveUrlFragmentsForLogins *bool `pulumi:"preserveUrlFragmentsForLogins"`
	// The routes that specify the endpoints used for login and logout requests.
	Routes *LoginRoutesResponse `pulumi:"routes"`
	// The configuration settings of the token store.
	TokenStore *TokenStoreResponse `pulumi:"tokenStore"`
}

// The configuration settings of the login flow of users using App Service Authentication/Authorization.
type LoginResponseOutput struct{ *pulumi.OutputState }

func (LoginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginResponse)(nil)).Elem()
}

func (o LoginResponseOutput) ToLoginResponseOutput() LoginResponseOutput {
	return o
}

func (o LoginResponseOutput) ToLoginResponseOutputWithContext(ctx context.Context) LoginResponseOutput {
	return o
}

// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
// This is an advanced setting typically only needed by Windows Store application backends.
// Note that URLs within the current domain are always implicitly allowed.
func (o LoginResponseOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoginResponse) []string { return v.AllowedExternalRedirectUrls }).(pulumi.StringArrayOutput)
}

// The configuration settings of the session cookie's expiration.
func (o LoginResponseOutput) CookieExpiration() CookieExpirationResponsePtrOutput {
	return o.ApplyT(func(v LoginResponse) *CookieExpirationResponse { return v.CookieExpiration }).(CookieExpirationResponsePtrOutput)
}

// The configuration settings of the nonce used in the login flow.
func (o LoginResponseOutput) Nonce() NonceResponsePtrOutput {
	return o.ApplyT(func(v LoginResponse) *NonceResponse { return v.Nonce }).(NonceResponsePtrOutput)
}

// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
func (o LoginResponseOutput) PreserveUrlFragmentsForLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoginResponse) *bool { return v.PreserveUrlFragmentsForLogins }).(pulumi.BoolPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
func (o LoginResponseOutput) Routes() LoginRoutesResponsePtrOutput {
	return o.ApplyT(func(v LoginResponse) *LoginRoutesResponse { return v.Routes }).(LoginRoutesResponsePtrOutput)
}

// The configuration settings of the token store.
func (o LoginResponseOutput) TokenStore() TokenStoreResponsePtrOutput {
	return o.ApplyT(func(v LoginResponse) *TokenStoreResponse { return v.TokenStore }).(TokenStoreResponsePtrOutput)
}

type LoginResponsePtrOutput struct{ *pulumi.OutputState }

func (LoginResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginResponse)(nil)).Elem()
}

func (o LoginResponsePtrOutput) ToLoginResponsePtrOutput() LoginResponsePtrOutput {
	return o
}

func (o LoginResponsePtrOutput) ToLoginResponsePtrOutputWithContext(ctx context.Context) LoginResponsePtrOutput {
	return o
}

func (o LoginResponsePtrOutput) Elem() LoginResponseOutput {
	return o.ApplyT(func(v *LoginResponse) LoginResponse {
		if v != nil {
			return *v
		}
		var ret LoginResponse
		return ret
	}).(LoginResponseOutput)
}

// External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
// This is an advanced setting typically only needed by Windows Store application backends.
// Note that URLs within the current domain are always implicitly allowed.
func (o LoginResponsePtrOutput) AllowedExternalRedirectUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoginResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllowedExternalRedirectUrls
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the session cookie's expiration.
func (o LoginResponsePtrOutput) CookieExpiration() CookieExpirationResponsePtrOutput {
	return o.ApplyT(func(v *LoginResponse) *CookieExpirationResponse {
		if v == nil {
			return nil
		}
		return v.CookieExpiration
	}).(CookieExpirationResponsePtrOutput)
}

// The configuration settings of the nonce used in the login flow.
func (o LoginResponsePtrOutput) Nonce() NonceResponsePtrOutput {
	return o.ApplyT(func(v *LoginResponse) *NonceResponse {
		if v == nil {
			return nil
		}
		return v.Nonce
	}).(NonceResponsePtrOutput)
}

// <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
func (o LoginResponsePtrOutput) PreserveUrlFragmentsForLogins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoginResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveUrlFragmentsForLogins
	}).(pulumi.BoolPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
func (o LoginResponsePtrOutput) Routes() LoginRoutesResponsePtrOutput {
	return o.ApplyT(func(v *LoginResponse) *LoginRoutesResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(LoginRoutesResponsePtrOutput)
}

// The configuration settings of the token store.
func (o LoginResponsePtrOutput) TokenStore() TokenStoreResponsePtrOutput {
	return o.ApplyT(func(v *LoginResponse) *TokenStoreResponse {
		if v == nil {
			return nil
		}
		return v.TokenStore
	}).(TokenStoreResponsePtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
type LoginRoutes struct {
	// The endpoint at which a logout request should be made.
	LogoutEndpoint *string `pulumi:"logoutEndpoint"`
}

// LoginRoutesInput is an input type that accepts LoginRoutesArgs and LoginRoutesOutput values.
// You can construct a concrete instance of `LoginRoutesInput` via:
//
//	LoginRoutesArgs{...}
type LoginRoutesInput interface {
	pulumi.Input

	ToLoginRoutesOutput() LoginRoutesOutput
	ToLoginRoutesOutputWithContext(context.Context) LoginRoutesOutput
}

// The routes that specify the endpoints used for login and logout requests.
type LoginRoutesArgs struct {
	// The endpoint at which a logout request should be made.
	LogoutEndpoint pulumi.StringPtrInput `pulumi:"logoutEndpoint"`
}

func (LoginRoutesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginRoutes)(nil)).Elem()
}

func (i LoginRoutesArgs) ToLoginRoutesOutput() LoginRoutesOutput {
	return i.ToLoginRoutesOutputWithContext(context.Background())
}

func (i LoginRoutesArgs) ToLoginRoutesOutputWithContext(ctx context.Context) LoginRoutesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginRoutesOutput)
}

func (i LoginRoutesArgs) ToLoginRoutesPtrOutput() LoginRoutesPtrOutput {
	return i.ToLoginRoutesPtrOutputWithContext(context.Background())
}

func (i LoginRoutesArgs) ToLoginRoutesPtrOutputWithContext(ctx context.Context) LoginRoutesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginRoutesOutput).ToLoginRoutesPtrOutputWithContext(ctx)
}

// LoginRoutesPtrInput is an input type that accepts LoginRoutesArgs, LoginRoutesPtr and LoginRoutesPtrOutput values.
// You can construct a concrete instance of `LoginRoutesPtrInput` via:
//
//	        LoginRoutesArgs{...}
//
//	or:
//
//	        nil
type LoginRoutesPtrInput interface {
	pulumi.Input

	ToLoginRoutesPtrOutput() LoginRoutesPtrOutput
	ToLoginRoutesPtrOutputWithContext(context.Context) LoginRoutesPtrOutput
}

type loginRoutesPtrType LoginRoutesArgs

func LoginRoutesPtr(v *LoginRoutesArgs) LoginRoutesPtrInput {
	return (*loginRoutesPtrType)(v)
}

func (*loginRoutesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginRoutes)(nil)).Elem()
}

func (i *loginRoutesPtrType) ToLoginRoutesPtrOutput() LoginRoutesPtrOutput {
	return i.ToLoginRoutesPtrOutputWithContext(context.Background())
}

func (i *loginRoutesPtrType) ToLoginRoutesPtrOutputWithContext(ctx context.Context) LoginRoutesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginRoutesPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
type LoginRoutesOutput struct{ *pulumi.OutputState }

func (LoginRoutesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginRoutes)(nil)).Elem()
}

func (o LoginRoutesOutput) ToLoginRoutesOutput() LoginRoutesOutput {
	return o
}

func (o LoginRoutesOutput) ToLoginRoutesOutputWithContext(ctx context.Context) LoginRoutesOutput {
	return o
}

func (o LoginRoutesOutput) ToLoginRoutesPtrOutput() LoginRoutesPtrOutput {
	return o.ToLoginRoutesPtrOutputWithContext(context.Background())
}

func (o LoginRoutesOutput) ToLoginRoutesPtrOutputWithContext(ctx context.Context) LoginRoutesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoginRoutes) *LoginRoutes {
		return &v
	}).(LoginRoutesPtrOutput)
}

// The endpoint at which a logout request should be made.
func (o LoginRoutesOutput) LogoutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoginRoutes) *string { return v.LogoutEndpoint }).(pulumi.StringPtrOutput)
}

type LoginRoutesPtrOutput struct{ *pulumi.OutputState }

func (LoginRoutesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginRoutes)(nil)).Elem()
}

func (o LoginRoutesPtrOutput) ToLoginRoutesPtrOutput() LoginRoutesPtrOutput {
	return o
}

func (o LoginRoutesPtrOutput) ToLoginRoutesPtrOutputWithContext(ctx context.Context) LoginRoutesPtrOutput {
	return o
}

func (o LoginRoutesPtrOutput) Elem() LoginRoutesOutput {
	return o.ApplyT(func(v *LoginRoutes) LoginRoutes {
		if v != nil {
			return *v
		}
		var ret LoginRoutes
		return ret
	}).(LoginRoutesOutput)
}

// The endpoint at which a logout request should be made.
func (o LoginRoutesPtrOutput) LogoutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoginRoutes) *string {
		if v == nil {
			return nil
		}
		return v.LogoutEndpoint
	}).(pulumi.StringPtrOutput)
}

// The routes that specify the endpoints used for login and logout requests.
type LoginRoutesResponse struct {
	// The endpoint at which a logout request should be made.
	LogoutEndpoint *string `pulumi:"logoutEndpoint"`
}

// The routes that specify the endpoints used for login and logout requests.
type LoginRoutesResponseOutput struct{ *pulumi.OutputState }

func (LoginRoutesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginRoutesResponse)(nil)).Elem()
}

func (o LoginRoutesResponseOutput) ToLoginRoutesResponseOutput() LoginRoutesResponseOutput {
	return o
}

func (o LoginRoutesResponseOutput) ToLoginRoutesResponseOutputWithContext(ctx context.Context) LoginRoutesResponseOutput {
	return o
}

// The endpoint at which a logout request should be made.
func (o LoginRoutesResponseOutput) LogoutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoginRoutesResponse) *string { return v.LogoutEndpoint }).(pulumi.StringPtrOutput)
}

type LoginRoutesResponsePtrOutput struct{ *pulumi.OutputState }

func (LoginRoutesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginRoutesResponse)(nil)).Elem()
}

func (o LoginRoutesResponsePtrOutput) ToLoginRoutesResponsePtrOutput() LoginRoutesResponsePtrOutput {
	return o
}

func (o LoginRoutesResponsePtrOutput) ToLoginRoutesResponsePtrOutputWithContext(ctx context.Context) LoginRoutesResponsePtrOutput {
	return o
}

func (o LoginRoutesResponsePtrOutput) Elem() LoginRoutesResponseOutput {
	return o.ApplyT(func(v *LoginRoutesResponse) LoginRoutesResponse {
		if v != nil {
			return *v
		}
		var ret LoginRoutesResponse
		return ret
	}).(LoginRoutesResponseOutput)
}

// The endpoint at which a logout request should be made.
func (o LoginRoutesResponsePtrOutput) LogoutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoginRoutesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LogoutEndpoint
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopes struct {
	// A list of the scopes that should be requested while authenticating.
	Scopes []string `pulumi:"scopes"`
}

// LoginScopesInput is an input type that accepts LoginScopesArgs and LoginScopesOutput values.
// You can construct a concrete instance of `LoginScopesInput` via:
//
//	LoginScopesArgs{...}
type LoginScopesInput interface {
	pulumi.Input

	ToLoginScopesOutput() LoginScopesOutput
	ToLoginScopesOutputWithContext(context.Context) LoginScopesOutput
}

// The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopesArgs struct {
	// A list of the scopes that should be requested while authenticating.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (LoginScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginScopes)(nil)).Elem()
}

func (i LoginScopesArgs) ToLoginScopesOutput() LoginScopesOutput {
	return i.ToLoginScopesOutputWithContext(context.Background())
}

func (i LoginScopesArgs) ToLoginScopesOutputWithContext(ctx context.Context) LoginScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginScopesOutput)
}

func (i LoginScopesArgs) ToLoginScopesPtrOutput() LoginScopesPtrOutput {
	return i.ToLoginScopesPtrOutputWithContext(context.Background())
}

func (i LoginScopesArgs) ToLoginScopesPtrOutputWithContext(ctx context.Context) LoginScopesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginScopesOutput).ToLoginScopesPtrOutputWithContext(ctx)
}

// LoginScopesPtrInput is an input type that accepts LoginScopesArgs, LoginScopesPtr and LoginScopesPtrOutput values.
// You can construct a concrete instance of `LoginScopesPtrInput` via:
//
//	        LoginScopesArgs{...}
//
//	or:
//
//	        nil
type LoginScopesPtrInput interface {
	pulumi.Input

	ToLoginScopesPtrOutput() LoginScopesPtrOutput
	ToLoginScopesPtrOutputWithContext(context.Context) LoginScopesPtrOutput
}

type loginScopesPtrType LoginScopesArgs

func LoginScopesPtr(v *LoginScopesArgs) LoginScopesPtrInput {
	return (*loginScopesPtrType)(v)
}

func (*loginScopesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginScopes)(nil)).Elem()
}

func (i *loginScopesPtrType) ToLoginScopesPtrOutput() LoginScopesPtrOutput {
	return i.ToLoginScopesPtrOutputWithContext(context.Background())
}

func (i *loginScopesPtrType) ToLoginScopesPtrOutputWithContext(ctx context.Context) LoginScopesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoginScopesPtrOutput)
}

// The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopesOutput struct{ *pulumi.OutputState }

func (LoginScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginScopes)(nil)).Elem()
}

func (o LoginScopesOutput) ToLoginScopesOutput() LoginScopesOutput {
	return o
}

func (o LoginScopesOutput) ToLoginScopesOutputWithContext(ctx context.Context) LoginScopesOutput {
	return o
}

func (o LoginScopesOutput) ToLoginScopesPtrOutput() LoginScopesPtrOutput {
	return o.ToLoginScopesPtrOutputWithContext(context.Background())
}

func (o LoginScopesOutput) ToLoginScopesPtrOutputWithContext(ctx context.Context) LoginScopesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoginScopes) *LoginScopes {
		return &v
	}).(LoginScopesPtrOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o LoginScopesOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoginScopes) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type LoginScopesPtrOutput struct{ *pulumi.OutputState }

func (LoginScopesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginScopes)(nil)).Elem()
}

func (o LoginScopesPtrOutput) ToLoginScopesPtrOutput() LoginScopesPtrOutput {
	return o
}

func (o LoginScopesPtrOutput) ToLoginScopesPtrOutputWithContext(ctx context.Context) LoginScopesPtrOutput {
	return o
}

func (o LoginScopesPtrOutput) Elem() LoginScopesOutput {
	return o.ApplyT(func(v *LoginScopes) LoginScopes {
		if v != nil {
			return *v
		}
		var ret LoginScopes
		return ret
	}).(LoginScopesOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o LoginScopesPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoginScopes) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopesResponse struct {
	// A list of the scopes that should be requested while authenticating.
	Scopes []string `pulumi:"scopes"`
}

// The configuration settings of the login flow, including the scopes that should be requested.
type LoginScopesResponseOutput struct{ *pulumi.OutputState }

func (LoginScopesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoginScopesResponse)(nil)).Elem()
}

func (o LoginScopesResponseOutput) ToLoginScopesResponseOutput() LoginScopesResponseOutput {
	return o
}

func (o LoginScopesResponseOutput) ToLoginScopesResponseOutputWithContext(ctx context.Context) LoginScopesResponseOutput {
	return o
}

// A list of the scopes that should be requested while authenticating.
func (o LoginScopesResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoginScopesResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type LoginScopesResponsePtrOutput struct{ *pulumi.OutputState }

func (LoginScopesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoginScopesResponse)(nil)).Elem()
}

func (o LoginScopesResponsePtrOutput) ToLoginScopesResponsePtrOutput() LoginScopesResponsePtrOutput {
	return o
}

func (o LoginScopesResponsePtrOutput) ToLoginScopesResponsePtrOutputWithContext(ctx context.Context) LoginScopesResponsePtrOutput {
	return o
}

func (o LoginScopesResponsePtrOutput) Elem() LoginScopesResponseOutput {
	return o.ApplyT(func(v *LoginScopesResponse) LoginScopesResponse {
		if v != nil {
			return *v
		}
		var ret LoginScopesResponse
		return ret
	}).(LoginScopesResponseOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o LoginScopesResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoginScopesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Managed service identity.
type ManagedServiceIdentity struct {
	// Type of managed service identity.
	Type *ManagedServiceIdentityType `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]interface{} `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//	ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Managed service identity.
type ManagedServiceIdentityArgs struct {
	// Type of managed service identity.
	Type ManagedServiceIdentityTypePtrInput `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities pulumi.MapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//	        ManagedServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Managed service identity.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityOutput) Type() ManagedServiceIdentityTypePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentityType { return v.Type }).(ManagedServiceIdentityTypePtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) map[string]interface{} { return v.UserAssignedIdentities }).(pulumi.MapOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentity
		return ret
	}).(ManagedServiceIdentityOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityPtrOutput) Type() ManagedServiceIdentityTypePtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *ManagedServiceIdentityType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ManagedServiceIdentityTypePtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityPtrOutput) UserAssignedIdentities() pulumi.MapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(pulumi.MapOutput)
}

// Managed service identity.
type ManagedServiceIdentityResponse struct {
	// Principal Id of managed service identity.
	PrincipalId string `pulumi:"principalId"`
	// Tenant of managed service identity.
	TenantId string `pulumi:"tenantId"`
	// Type of managed service identity.
	Type *string `pulumi:"type"`
	// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// Managed service identity.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse {
		if v != nil {
			return *v
		}
		var ret ManagedServiceIdentityResponse
		return ret
	}).(ManagedServiceIdentityResponseOutput)
}

// Principal Id of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Tenant of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Type of managed service identity.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user assigned identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// Client Id of user assigned identity
	ClientId string `pulumi:"clientId"`
	// Principal Id of user assigned identity
	PrincipalId string `pulumi:"principalId"`
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// Client Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// Principal Id of user assigned identity
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Name value pair.
type NameValuePair struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// NameValuePairInput is an input type that accepts NameValuePairArgs and NameValuePairOutput values.
// You can construct a concrete instance of `NameValuePairInput` via:
//
//	NameValuePairArgs{...}
type NameValuePairInput interface {
	pulumi.Input

	ToNameValuePairOutput() NameValuePairOutput
	ToNameValuePairOutputWithContext(context.Context) NameValuePairOutput
}

// Name value pair.
type NameValuePairArgs struct {
	// Pair name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Pair value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NameValuePairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (i NameValuePairArgs) ToNameValuePairOutput() NameValuePairOutput {
	return i.ToNameValuePairOutputWithContext(context.Background())
}

func (i NameValuePairArgs) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairOutput)
}

// NameValuePairArrayInput is an input type that accepts NameValuePairArray and NameValuePairArrayOutput values.
// You can construct a concrete instance of `NameValuePairArrayInput` via:
//
//	NameValuePairArray{ NameValuePairArgs{...} }
type NameValuePairArrayInput interface {
	pulumi.Input

	ToNameValuePairArrayOutput() NameValuePairArrayOutput
	ToNameValuePairArrayOutputWithContext(context.Context) NameValuePairArrayOutput
}

type NameValuePairArray []NameValuePairInput

func (NameValuePairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (i NameValuePairArray) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return i.ToNameValuePairArrayOutputWithContext(context.Background())
}

func (i NameValuePairArray) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameValuePairArrayOutput)
}

// Name value pair.
type NameValuePairOutput struct{ *pulumi.OutputState }

func (NameValuePairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePair)(nil)).Elem()
}

func (o NameValuePairOutput) ToNameValuePairOutput() NameValuePairOutput {
	return o
}

func (o NameValuePairOutput) ToNameValuePairOutputWithContext(ctx context.Context) NameValuePairOutput {
	return o
}

// Pair name.
func (o NameValuePairOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePair) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePair)(nil)).Elem()
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutput() NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) ToNameValuePairArrayOutputWithContext(ctx context.Context) NameValuePairArrayOutput {
	return o
}

func (o NameValuePairArrayOutput) Index(i pulumi.IntInput) NameValuePairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePair {
		return vs[0].([]NameValuePair)[vs[1].(int)]
	}).(NameValuePairOutput)
}

// Name value pair.
type NameValuePairResponse struct {
	// Pair name.
	Name *string `pulumi:"name"`
	// Pair value.
	Value *string `pulumi:"value"`
}

// Name value pair.
type NameValuePairResponseOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutput() NameValuePairResponseOutput {
	return o
}

func (o NameValuePairResponseOutput) ToNameValuePairResponseOutputWithContext(ctx context.Context) NameValuePairResponseOutput {
	return o
}

// Pair name.
func (o NameValuePairResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Pair value.
func (o NameValuePairResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NameValuePairResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NameValuePairResponseArrayOutput struct{ *pulumi.OutputState }

func (NameValuePairResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NameValuePairResponse)(nil)).Elem()
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutput() NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) ToNameValuePairResponseArrayOutputWithContext(ctx context.Context) NameValuePairResponseArrayOutput {
	return o
}

func (o NameValuePairResponseArrayOutput) Index(i pulumi.IntInput) NameValuePairResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NameValuePairResponse {
		return vs[0].([]NameValuePairResponse)[vs[1].(int)]
	}).(NameValuePairResponseOutput)
}

// The configuration settings of the nonce used in the login flow.
type Nonce struct {
	// The time after the request is made when the nonce should expire.
	NonceExpirationInterval *string `pulumi:"nonceExpirationInterval"`
	// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
	ValidateNonce *bool `pulumi:"validateNonce"`
}

// NonceInput is an input type that accepts NonceArgs and NonceOutput values.
// You can construct a concrete instance of `NonceInput` via:
//
//	NonceArgs{...}
type NonceInput interface {
	pulumi.Input

	ToNonceOutput() NonceOutput
	ToNonceOutputWithContext(context.Context) NonceOutput
}

// The configuration settings of the nonce used in the login flow.
type NonceArgs struct {
	// The time after the request is made when the nonce should expire.
	NonceExpirationInterval pulumi.StringPtrInput `pulumi:"nonceExpirationInterval"`
	// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
	ValidateNonce pulumi.BoolPtrInput `pulumi:"validateNonce"`
}

func (NonceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Nonce)(nil)).Elem()
}

func (i NonceArgs) ToNonceOutput() NonceOutput {
	return i.ToNonceOutputWithContext(context.Background())
}

func (i NonceArgs) ToNonceOutputWithContext(ctx context.Context) NonceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonceOutput)
}

func (i NonceArgs) ToNoncePtrOutput() NoncePtrOutput {
	return i.ToNoncePtrOutputWithContext(context.Background())
}

func (i NonceArgs) ToNoncePtrOutputWithContext(ctx context.Context) NoncePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NonceOutput).ToNoncePtrOutputWithContext(ctx)
}

// NoncePtrInput is an input type that accepts NonceArgs, NoncePtr and NoncePtrOutput values.
// You can construct a concrete instance of `NoncePtrInput` via:
//
//	        NonceArgs{...}
//
//	or:
//
//	        nil
type NoncePtrInput interface {
	pulumi.Input

	ToNoncePtrOutput() NoncePtrOutput
	ToNoncePtrOutputWithContext(context.Context) NoncePtrOutput
}

type noncePtrType NonceArgs

func NoncePtr(v *NonceArgs) NoncePtrInput {
	return (*noncePtrType)(v)
}

func (*noncePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Nonce)(nil)).Elem()
}

func (i *noncePtrType) ToNoncePtrOutput() NoncePtrOutput {
	return i.ToNoncePtrOutputWithContext(context.Background())
}

func (i *noncePtrType) ToNoncePtrOutputWithContext(ctx context.Context) NoncePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NoncePtrOutput)
}

// The configuration settings of the nonce used in the login flow.
type NonceOutput struct{ *pulumi.OutputState }

func (NonceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Nonce)(nil)).Elem()
}

func (o NonceOutput) ToNonceOutput() NonceOutput {
	return o
}

func (o NonceOutput) ToNonceOutputWithContext(ctx context.Context) NonceOutput {
	return o
}

func (o NonceOutput) ToNoncePtrOutput() NoncePtrOutput {
	return o.ToNoncePtrOutputWithContext(context.Background())
}

func (o NonceOutput) ToNoncePtrOutputWithContext(ctx context.Context) NoncePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Nonce) *Nonce {
		return &v
	}).(NoncePtrOutput)
}

// The time after the request is made when the nonce should expire.
func (o NonceOutput) NonceExpirationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Nonce) *string { return v.NonceExpirationInterval }).(pulumi.StringPtrOutput)
}

// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
func (o NonceOutput) ValidateNonce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Nonce) *bool { return v.ValidateNonce }).(pulumi.BoolPtrOutput)
}

type NoncePtrOutput struct{ *pulumi.OutputState }

func (NoncePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Nonce)(nil)).Elem()
}

func (o NoncePtrOutput) ToNoncePtrOutput() NoncePtrOutput {
	return o
}

func (o NoncePtrOutput) ToNoncePtrOutputWithContext(ctx context.Context) NoncePtrOutput {
	return o
}

func (o NoncePtrOutput) Elem() NonceOutput {
	return o.ApplyT(func(v *Nonce) Nonce {
		if v != nil {
			return *v
		}
		var ret Nonce
		return ret
	}).(NonceOutput)
}

// The time after the request is made when the nonce should expire.
func (o NoncePtrOutput) NonceExpirationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Nonce) *string {
		if v == nil {
			return nil
		}
		return v.NonceExpirationInterval
	}).(pulumi.StringPtrOutput)
}

// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
func (o NoncePtrOutput) ValidateNonce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Nonce) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateNonce
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the nonce used in the login flow.
type NonceResponse struct {
	// The time after the request is made when the nonce should expire.
	NonceExpirationInterval *string `pulumi:"nonceExpirationInterval"`
	// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
	ValidateNonce *bool `pulumi:"validateNonce"`
}

// The configuration settings of the nonce used in the login flow.
type NonceResponseOutput struct{ *pulumi.OutputState }

func (NonceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NonceResponse)(nil)).Elem()
}

func (o NonceResponseOutput) ToNonceResponseOutput() NonceResponseOutput {
	return o
}

func (o NonceResponseOutput) ToNonceResponseOutputWithContext(ctx context.Context) NonceResponseOutput {
	return o
}

// The time after the request is made when the nonce should expire.
func (o NonceResponseOutput) NonceExpirationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NonceResponse) *string { return v.NonceExpirationInterval }).(pulumi.StringPtrOutput)
}

// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
func (o NonceResponseOutput) ValidateNonce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NonceResponse) *bool { return v.ValidateNonce }).(pulumi.BoolPtrOutput)
}

type NonceResponsePtrOutput struct{ *pulumi.OutputState }

func (NonceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NonceResponse)(nil)).Elem()
}

func (o NonceResponsePtrOutput) ToNonceResponsePtrOutput() NonceResponsePtrOutput {
	return o
}

func (o NonceResponsePtrOutput) ToNonceResponsePtrOutputWithContext(ctx context.Context) NonceResponsePtrOutput {
	return o
}

func (o NonceResponsePtrOutput) Elem() NonceResponseOutput {
	return o.ApplyT(func(v *NonceResponse) NonceResponse {
		if v != nil {
			return *v
		}
		var ret NonceResponse
		return ret
	}).(NonceResponseOutput)
}

// The time after the request is made when the nonce should expire.
func (o NonceResponsePtrOutput) NonceExpirationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NonceResponse) *string {
		if v == nil {
			return nil
		}
		return v.NonceExpirationInterval
	}).(pulumi.StringPtrOutput)
}

// <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
func (o NonceResponsePtrOutput) ValidateNonce() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NonceResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateNonce
	}).(pulumi.BoolPtrOutput)
}

// The authentication client credentials of the custom Open ID Connect provider.
type OpenIdConnectClientCredential struct {
	// The app setting that contains the client secret for the custom Open ID Connect provider.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
	// The method that should be used to authenticate the user.
	Method *ClientCredentialMethod `pulumi:"method"`
}

// OpenIdConnectClientCredentialInput is an input type that accepts OpenIdConnectClientCredentialArgs and OpenIdConnectClientCredentialOutput values.
// You can construct a concrete instance of `OpenIdConnectClientCredentialInput` via:
//
//	OpenIdConnectClientCredentialArgs{...}
type OpenIdConnectClientCredentialInput interface {
	pulumi.Input

	ToOpenIdConnectClientCredentialOutput() OpenIdConnectClientCredentialOutput
	ToOpenIdConnectClientCredentialOutputWithContext(context.Context) OpenIdConnectClientCredentialOutput
}

// The authentication client credentials of the custom Open ID Connect provider.
type OpenIdConnectClientCredentialArgs struct {
	// The app setting that contains the client secret for the custom Open ID Connect provider.
	ClientSecretSettingName pulumi.StringPtrInput `pulumi:"clientSecretSettingName"`
	// The method that should be used to authenticate the user.
	Method ClientCredentialMethodPtrInput `pulumi:"method"`
}

func (OpenIdConnectClientCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectClientCredential)(nil)).Elem()
}

func (i OpenIdConnectClientCredentialArgs) ToOpenIdConnectClientCredentialOutput() OpenIdConnectClientCredentialOutput {
	return i.ToOpenIdConnectClientCredentialOutputWithContext(context.Background())
}

func (i OpenIdConnectClientCredentialArgs) ToOpenIdConnectClientCredentialOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectClientCredentialOutput)
}

func (i OpenIdConnectClientCredentialArgs) ToOpenIdConnectClientCredentialPtrOutput() OpenIdConnectClientCredentialPtrOutput {
	return i.ToOpenIdConnectClientCredentialPtrOutputWithContext(context.Background())
}

func (i OpenIdConnectClientCredentialArgs) ToOpenIdConnectClientCredentialPtrOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectClientCredentialOutput).ToOpenIdConnectClientCredentialPtrOutputWithContext(ctx)
}

// OpenIdConnectClientCredentialPtrInput is an input type that accepts OpenIdConnectClientCredentialArgs, OpenIdConnectClientCredentialPtr and OpenIdConnectClientCredentialPtrOutput values.
// You can construct a concrete instance of `OpenIdConnectClientCredentialPtrInput` via:
//
//	        OpenIdConnectClientCredentialArgs{...}
//
//	or:
//
//	        nil
type OpenIdConnectClientCredentialPtrInput interface {
	pulumi.Input

	ToOpenIdConnectClientCredentialPtrOutput() OpenIdConnectClientCredentialPtrOutput
	ToOpenIdConnectClientCredentialPtrOutputWithContext(context.Context) OpenIdConnectClientCredentialPtrOutput
}

type openIdConnectClientCredentialPtrType OpenIdConnectClientCredentialArgs

func OpenIdConnectClientCredentialPtr(v *OpenIdConnectClientCredentialArgs) OpenIdConnectClientCredentialPtrInput {
	return (*openIdConnectClientCredentialPtrType)(v)
}

func (*openIdConnectClientCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectClientCredential)(nil)).Elem()
}

func (i *openIdConnectClientCredentialPtrType) ToOpenIdConnectClientCredentialPtrOutput() OpenIdConnectClientCredentialPtrOutput {
	return i.ToOpenIdConnectClientCredentialPtrOutputWithContext(context.Background())
}

func (i *openIdConnectClientCredentialPtrType) ToOpenIdConnectClientCredentialPtrOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectClientCredentialPtrOutput)
}

// The authentication client credentials of the custom Open ID Connect provider.
type OpenIdConnectClientCredentialOutput struct{ *pulumi.OutputState }

func (OpenIdConnectClientCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectClientCredential)(nil)).Elem()
}

func (o OpenIdConnectClientCredentialOutput) ToOpenIdConnectClientCredentialOutput() OpenIdConnectClientCredentialOutput {
	return o
}

func (o OpenIdConnectClientCredentialOutput) ToOpenIdConnectClientCredentialOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialOutput {
	return o
}

func (o OpenIdConnectClientCredentialOutput) ToOpenIdConnectClientCredentialPtrOutput() OpenIdConnectClientCredentialPtrOutput {
	return o.ToOpenIdConnectClientCredentialPtrOutputWithContext(context.Background())
}

func (o OpenIdConnectClientCredentialOutput) ToOpenIdConnectClientCredentialPtrOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIdConnectClientCredential) *OpenIdConnectClientCredential {
		return &v
	}).(OpenIdConnectClientCredentialPtrOutput)
}

// The app setting that contains the client secret for the custom Open ID Connect provider.
func (o OpenIdConnectClientCredentialOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectClientCredential) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

// The method that should be used to authenticate the user.
func (o OpenIdConnectClientCredentialOutput) Method() ClientCredentialMethodPtrOutput {
	return o.ApplyT(func(v OpenIdConnectClientCredential) *ClientCredentialMethod { return v.Method }).(ClientCredentialMethodPtrOutput)
}

type OpenIdConnectClientCredentialPtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectClientCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectClientCredential)(nil)).Elem()
}

func (o OpenIdConnectClientCredentialPtrOutput) ToOpenIdConnectClientCredentialPtrOutput() OpenIdConnectClientCredentialPtrOutput {
	return o
}

func (o OpenIdConnectClientCredentialPtrOutput) ToOpenIdConnectClientCredentialPtrOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialPtrOutput {
	return o
}

func (o OpenIdConnectClientCredentialPtrOutput) Elem() OpenIdConnectClientCredentialOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredential) OpenIdConnectClientCredential {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectClientCredential
		return ret
	}).(OpenIdConnectClientCredentialOutput)
}

// The app setting that contains the client secret for the custom Open ID Connect provider.
func (o OpenIdConnectClientCredentialPtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredential) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The method that should be used to authenticate the user.
func (o OpenIdConnectClientCredentialPtrOutput) Method() ClientCredentialMethodPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredential) *ClientCredentialMethod {
		if v == nil {
			return nil
		}
		return v.Method
	}).(ClientCredentialMethodPtrOutput)
}

// The authentication client credentials of the custom Open ID Connect provider.
type OpenIdConnectClientCredentialResponse struct {
	// The app setting that contains the client secret for the custom Open ID Connect provider.
	ClientSecretSettingName *string `pulumi:"clientSecretSettingName"`
	// The method that should be used to authenticate the user.
	Method *string `pulumi:"method"`
}

// The authentication client credentials of the custom Open ID Connect provider.
type OpenIdConnectClientCredentialResponseOutput struct{ *pulumi.OutputState }

func (OpenIdConnectClientCredentialResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectClientCredentialResponse)(nil)).Elem()
}

func (o OpenIdConnectClientCredentialResponseOutput) ToOpenIdConnectClientCredentialResponseOutput() OpenIdConnectClientCredentialResponseOutput {
	return o
}

func (o OpenIdConnectClientCredentialResponseOutput) ToOpenIdConnectClientCredentialResponseOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialResponseOutput {
	return o
}

// The app setting that contains the client secret for the custom Open ID Connect provider.
func (o OpenIdConnectClientCredentialResponseOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectClientCredentialResponse) *string { return v.ClientSecretSettingName }).(pulumi.StringPtrOutput)
}

// The method that should be used to authenticate the user.
func (o OpenIdConnectClientCredentialResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectClientCredentialResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

type OpenIdConnectClientCredentialResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectClientCredentialResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectClientCredentialResponse)(nil)).Elem()
}

func (o OpenIdConnectClientCredentialResponsePtrOutput) ToOpenIdConnectClientCredentialResponsePtrOutput() OpenIdConnectClientCredentialResponsePtrOutput {
	return o
}

func (o OpenIdConnectClientCredentialResponsePtrOutput) ToOpenIdConnectClientCredentialResponsePtrOutputWithContext(ctx context.Context) OpenIdConnectClientCredentialResponsePtrOutput {
	return o
}

func (o OpenIdConnectClientCredentialResponsePtrOutput) Elem() OpenIdConnectClientCredentialResponseOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredentialResponse) OpenIdConnectClientCredentialResponse {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectClientCredentialResponse
		return ret
	}).(OpenIdConnectClientCredentialResponseOutput)
}

// The app setting that contains the client secret for the custom Open ID Connect provider.
func (o OpenIdConnectClientCredentialResponsePtrOutput) ClientSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The method that should be used to authenticate the user.
func (o OpenIdConnectClientCredentialResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectClientCredentialResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIdConnectConfig struct {
	// The endpoint to be used to make an authorization request.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The endpoint that provides the keys necessary to validate the token.
	CertificationUri *string `pulumi:"certificationUri"`
	// The endpoint that issues the token.
	Issuer *string `pulumi:"issuer"`
	// The endpoint to be used to request a token.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The endpoint that contains all the configuration endpoints for the provider.
	WellKnownOpenIdConfiguration *string `pulumi:"wellKnownOpenIdConfiguration"`
}

// OpenIdConnectConfigInput is an input type that accepts OpenIdConnectConfigArgs and OpenIdConnectConfigOutput values.
// You can construct a concrete instance of `OpenIdConnectConfigInput` via:
//
//	OpenIdConnectConfigArgs{...}
type OpenIdConnectConfigInput interface {
	pulumi.Input

	ToOpenIdConnectConfigOutput() OpenIdConnectConfigOutput
	ToOpenIdConnectConfigOutputWithContext(context.Context) OpenIdConnectConfigOutput
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIdConnectConfigArgs struct {
	// The endpoint to be used to make an authorization request.
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// The endpoint that provides the keys necessary to validate the token.
	CertificationUri pulumi.StringPtrInput `pulumi:"certificationUri"`
	// The endpoint that issues the token.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// The endpoint to be used to request a token.
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
	// The endpoint that contains all the configuration endpoints for the provider.
	WellKnownOpenIdConfiguration pulumi.StringPtrInput `pulumi:"wellKnownOpenIdConfiguration"`
}

func (OpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectConfig)(nil)).Elem()
}

func (i OpenIdConnectConfigArgs) ToOpenIdConnectConfigOutput() OpenIdConnectConfigOutput {
	return i.ToOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i OpenIdConnectConfigArgs) ToOpenIdConnectConfigOutputWithContext(ctx context.Context) OpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectConfigOutput)
}

func (i OpenIdConnectConfigArgs) ToOpenIdConnectConfigPtrOutput() OpenIdConnectConfigPtrOutput {
	return i.ToOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i OpenIdConnectConfigArgs) ToOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) OpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectConfigOutput).ToOpenIdConnectConfigPtrOutputWithContext(ctx)
}

// OpenIdConnectConfigPtrInput is an input type that accepts OpenIdConnectConfigArgs, OpenIdConnectConfigPtr and OpenIdConnectConfigPtrOutput values.
// You can construct a concrete instance of `OpenIdConnectConfigPtrInput` via:
//
//	        OpenIdConnectConfigArgs{...}
//
//	or:
//
//	        nil
type OpenIdConnectConfigPtrInput interface {
	pulumi.Input

	ToOpenIdConnectConfigPtrOutput() OpenIdConnectConfigPtrOutput
	ToOpenIdConnectConfigPtrOutputWithContext(context.Context) OpenIdConnectConfigPtrOutput
}

type openIdConnectConfigPtrType OpenIdConnectConfigArgs

func OpenIdConnectConfigPtr(v *OpenIdConnectConfigArgs) OpenIdConnectConfigPtrInput {
	return (*openIdConnectConfigPtrType)(v)
}

func (*openIdConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectConfig)(nil)).Elem()
}

func (i *openIdConnectConfigPtrType) ToOpenIdConnectConfigPtrOutput() OpenIdConnectConfigPtrOutput {
	return i.ToOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i *openIdConnectConfigPtrType) ToOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) OpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectConfigPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (OpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectConfig)(nil)).Elem()
}

func (o OpenIdConnectConfigOutput) ToOpenIdConnectConfigOutput() OpenIdConnectConfigOutput {
	return o
}

func (o OpenIdConnectConfigOutput) ToOpenIdConnectConfigOutputWithContext(ctx context.Context) OpenIdConnectConfigOutput {
	return o
}

func (o OpenIdConnectConfigOutput) ToOpenIdConnectConfigPtrOutput() OpenIdConnectConfigPtrOutput {
	return o.ToOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (o OpenIdConnectConfigOutput) ToOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) OpenIdConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIdConnectConfig) *OpenIdConnectConfig {
		return &v
	}).(OpenIdConnectConfigPtrOutput)
}

// The endpoint to be used to make an authorization request.
func (o OpenIdConnectConfigOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfig) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The endpoint that provides the keys necessary to validate the token.
func (o OpenIdConnectConfigOutput) CertificationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfig) *string { return v.CertificationUri }).(pulumi.StringPtrOutput)
}

// The endpoint that issues the token.
func (o OpenIdConnectConfigOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfig) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// The endpoint to be used to request a token.
func (o OpenIdConnectConfigOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfig) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// The endpoint that contains all the configuration endpoints for the provider.
func (o OpenIdConnectConfigOutput) WellKnownOpenIdConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfig) *string { return v.WellKnownOpenIdConfiguration }).(pulumi.StringPtrOutput)
}

type OpenIdConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectConfig)(nil)).Elem()
}

func (o OpenIdConnectConfigPtrOutput) ToOpenIdConnectConfigPtrOutput() OpenIdConnectConfigPtrOutput {
	return o
}

func (o OpenIdConnectConfigPtrOutput) ToOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) OpenIdConnectConfigPtrOutput {
	return o
}

func (o OpenIdConnectConfigPtrOutput) Elem() OpenIdConnectConfigOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) OpenIdConnectConfig {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectConfig
		return ret
	}).(OpenIdConnectConfigOutput)
}

// The endpoint to be used to make an authorization request.
func (o OpenIdConnectConfigPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// The endpoint that provides the keys necessary to validate the token.
func (o OpenIdConnectConfigPtrOutput) CertificationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.CertificationUri
	}).(pulumi.StringPtrOutput)
}

// The endpoint that issues the token.
func (o OpenIdConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// The endpoint to be used to request a token.
func (o OpenIdConnectConfigPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// The endpoint that contains all the configuration endpoints for the provider.
func (o OpenIdConnectConfigPtrOutput) WellKnownOpenIdConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.WellKnownOpenIdConfiguration
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIdConnectConfigResponse struct {
	// The endpoint to be used to make an authorization request.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// The endpoint that provides the keys necessary to validate the token.
	CertificationUri *string `pulumi:"certificationUri"`
	// The endpoint that issues the token.
	Issuer *string `pulumi:"issuer"`
	// The endpoint to be used to request a token.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// The endpoint that contains all the configuration endpoints for the provider.
	WellKnownOpenIdConfiguration *string `pulumi:"wellKnownOpenIdConfiguration"`
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
type OpenIdConnectConfigResponseOutput struct{ *pulumi.OutputState }

func (OpenIdConnectConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectConfigResponse)(nil)).Elem()
}

func (o OpenIdConnectConfigResponseOutput) ToOpenIdConnectConfigResponseOutput() OpenIdConnectConfigResponseOutput {
	return o
}

func (o OpenIdConnectConfigResponseOutput) ToOpenIdConnectConfigResponseOutputWithContext(ctx context.Context) OpenIdConnectConfigResponseOutput {
	return o
}

// The endpoint to be used to make an authorization request.
func (o OpenIdConnectConfigResponseOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfigResponse) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// The endpoint that provides the keys necessary to validate the token.
func (o OpenIdConnectConfigResponseOutput) CertificationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfigResponse) *string { return v.CertificationUri }).(pulumi.StringPtrOutput)
}

// The endpoint that issues the token.
func (o OpenIdConnectConfigResponseOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfigResponse) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// The endpoint to be used to request a token.
func (o OpenIdConnectConfigResponseOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfigResponse) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// The endpoint that contains all the configuration endpoints for the provider.
func (o OpenIdConnectConfigResponseOutput) WellKnownOpenIdConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectConfigResponse) *string { return v.WellKnownOpenIdConfiguration }).(pulumi.StringPtrOutput)
}

type OpenIdConnectConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectConfigResponse)(nil)).Elem()
}

func (o OpenIdConnectConfigResponsePtrOutput) ToOpenIdConnectConfigResponsePtrOutput() OpenIdConnectConfigResponsePtrOutput {
	return o
}

func (o OpenIdConnectConfigResponsePtrOutput) ToOpenIdConnectConfigResponsePtrOutputWithContext(ctx context.Context) OpenIdConnectConfigResponsePtrOutput {
	return o
}

func (o OpenIdConnectConfigResponsePtrOutput) Elem() OpenIdConnectConfigResponseOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) OpenIdConnectConfigResponse {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectConfigResponse
		return ret
	}).(OpenIdConnectConfigResponseOutput)
}

// The endpoint to be used to make an authorization request.
func (o OpenIdConnectConfigResponsePtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// The endpoint that provides the keys necessary to validate the token.
func (o OpenIdConnectConfigResponsePtrOutput) CertificationUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CertificationUri
	}).(pulumi.StringPtrOutput)
}

// The endpoint that issues the token.
func (o OpenIdConnectConfigResponsePtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// The endpoint to be used to request a token.
func (o OpenIdConnectConfigResponsePtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// The endpoint that contains all the configuration endpoints for the provider.
func (o OpenIdConnectConfigResponsePtrOutput) WellKnownOpenIdConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WellKnownOpenIdConfiguration
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIdConnectLogin struct {
	// The name of the claim that contains the users name.
	NameClaimType *string `pulumi:"nameClaimType"`
	// A list of the scopes that should be requested while authenticating.
	Scopes []string `pulumi:"scopes"`
}

// OpenIdConnectLoginInput is an input type that accepts OpenIdConnectLoginArgs and OpenIdConnectLoginOutput values.
// You can construct a concrete instance of `OpenIdConnectLoginInput` via:
//
//	OpenIdConnectLoginArgs{...}
type OpenIdConnectLoginInput interface {
	pulumi.Input

	ToOpenIdConnectLoginOutput() OpenIdConnectLoginOutput
	ToOpenIdConnectLoginOutputWithContext(context.Context) OpenIdConnectLoginOutput
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIdConnectLoginArgs struct {
	// The name of the claim that contains the users name.
	NameClaimType pulumi.StringPtrInput `pulumi:"nameClaimType"`
	// A list of the scopes that should be requested while authenticating.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (OpenIdConnectLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectLogin)(nil)).Elem()
}

func (i OpenIdConnectLoginArgs) ToOpenIdConnectLoginOutput() OpenIdConnectLoginOutput {
	return i.ToOpenIdConnectLoginOutputWithContext(context.Background())
}

func (i OpenIdConnectLoginArgs) ToOpenIdConnectLoginOutputWithContext(ctx context.Context) OpenIdConnectLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectLoginOutput)
}

func (i OpenIdConnectLoginArgs) ToOpenIdConnectLoginPtrOutput() OpenIdConnectLoginPtrOutput {
	return i.ToOpenIdConnectLoginPtrOutputWithContext(context.Background())
}

func (i OpenIdConnectLoginArgs) ToOpenIdConnectLoginPtrOutputWithContext(ctx context.Context) OpenIdConnectLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectLoginOutput).ToOpenIdConnectLoginPtrOutputWithContext(ctx)
}

// OpenIdConnectLoginPtrInput is an input type that accepts OpenIdConnectLoginArgs, OpenIdConnectLoginPtr and OpenIdConnectLoginPtrOutput values.
// You can construct a concrete instance of `OpenIdConnectLoginPtrInput` via:
//
//	        OpenIdConnectLoginArgs{...}
//
//	or:
//
//	        nil
type OpenIdConnectLoginPtrInput interface {
	pulumi.Input

	ToOpenIdConnectLoginPtrOutput() OpenIdConnectLoginPtrOutput
	ToOpenIdConnectLoginPtrOutputWithContext(context.Context) OpenIdConnectLoginPtrOutput
}

type openIdConnectLoginPtrType OpenIdConnectLoginArgs

func OpenIdConnectLoginPtr(v *OpenIdConnectLoginArgs) OpenIdConnectLoginPtrInput {
	return (*openIdConnectLoginPtrType)(v)
}

func (*openIdConnectLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectLogin)(nil)).Elem()
}

func (i *openIdConnectLoginPtrType) ToOpenIdConnectLoginPtrOutput() OpenIdConnectLoginPtrOutput {
	return i.ToOpenIdConnectLoginPtrOutputWithContext(context.Background())
}

func (i *openIdConnectLoginPtrType) ToOpenIdConnectLoginPtrOutputWithContext(ctx context.Context) OpenIdConnectLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectLoginPtrOutput)
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIdConnectLoginOutput struct{ *pulumi.OutputState }

func (OpenIdConnectLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectLogin)(nil)).Elem()
}

func (o OpenIdConnectLoginOutput) ToOpenIdConnectLoginOutput() OpenIdConnectLoginOutput {
	return o
}

func (o OpenIdConnectLoginOutput) ToOpenIdConnectLoginOutputWithContext(ctx context.Context) OpenIdConnectLoginOutput {
	return o
}

func (o OpenIdConnectLoginOutput) ToOpenIdConnectLoginPtrOutput() OpenIdConnectLoginPtrOutput {
	return o.ToOpenIdConnectLoginPtrOutputWithContext(context.Background())
}

func (o OpenIdConnectLoginOutput) ToOpenIdConnectLoginPtrOutputWithContext(ctx context.Context) OpenIdConnectLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIdConnectLogin) *OpenIdConnectLogin {
		return &v
	}).(OpenIdConnectLoginPtrOutput)
}

// The name of the claim that contains the users name.
func (o OpenIdConnectLoginOutput) NameClaimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectLogin) *string { return v.NameClaimType }).(pulumi.StringPtrOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o OpenIdConnectLoginOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdConnectLogin) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type OpenIdConnectLoginPtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectLogin)(nil)).Elem()
}

func (o OpenIdConnectLoginPtrOutput) ToOpenIdConnectLoginPtrOutput() OpenIdConnectLoginPtrOutput {
	return o
}

func (o OpenIdConnectLoginPtrOutput) ToOpenIdConnectLoginPtrOutputWithContext(ctx context.Context) OpenIdConnectLoginPtrOutput {
	return o
}

func (o OpenIdConnectLoginPtrOutput) Elem() OpenIdConnectLoginOutput {
	return o.ApplyT(func(v *OpenIdConnectLogin) OpenIdConnectLogin {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectLogin
		return ret
	}).(OpenIdConnectLoginOutput)
}

// The name of the claim that contains the users name.
func (o OpenIdConnectLoginPtrOutput) NameClaimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectLogin) *string {
		if v == nil {
			return nil
		}
		return v.NameClaimType
	}).(pulumi.StringPtrOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o OpenIdConnectLoginPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdConnectLogin) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIdConnectLoginResponse struct {
	// The name of the claim that contains the users name.
	NameClaimType *string `pulumi:"nameClaimType"`
	// A list of the scopes that should be requested while authenticating.
	Scopes []string `pulumi:"scopes"`
}

// The configuration settings of the login flow of the custom Open ID Connect provider.
type OpenIdConnectLoginResponseOutput struct{ *pulumi.OutputState }

func (OpenIdConnectLoginResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectLoginResponse)(nil)).Elem()
}

func (o OpenIdConnectLoginResponseOutput) ToOpenIdConnectLoginResponseOutput() OpenIdConnectLoginResponseOutput {
	return o
}

func (o OpenIdConnectLoginResponseOutput) ToOpenIdConnectLoginResponseOutputWithContext(ctx context.Context) OpenIdConnectLoginResponseOutput {
	return o
}

// The name of the claim that contains the users name.
func (o OpenIdConnectLoginResponseOutput) NameClaimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectLoginResponse) *string { return v.NameClaimType }).(pulumi.StringPtrOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o OpenIdConnectLoginResponseOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenIdConnectLoginResponse) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type OpenIdConnectLoginResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectLoginResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectLoginResponse)(nil)).Elem()
}

func (o OpenIdConnectLoginResponsePtrOutput) ToOpenIdConnectLoginResponsePtrOutput() OpenIdConnectLoginResponsePtrOutput {
	return o
}

func (o OpenIdConnectLoginResponsePtrOutput) ToOpenIdConnectLoginResponsePtrOutputWithContext(ctx context.Context) OpenIdConnectLoginResponsePtrOutput {
	return o
}

func (o OpenIdConnectLoginResponsePtrOutput) Elem() OpenIdConnectLoginResponseOutput {
	return o.ApplyT(func(v *OpenIdConnectLoginResponse) OpenIdConnectLoginResponse {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectLoginResponse
		return ret
	}).(OpenIdConnectLoginResponseOutput)
}

// The name of the claim that contains the users name.
func (o OpenIdConnectLoginResponsePtrOutput) NameClaimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectLoginResponse) *string {
		if v == nil {
			return nil
		}
		return v.NameClaimType
	}).(pulumi.StringPtrOutput)
}

// A list of the scopes that should be requested while authenticating.
func (o OpenIdConnectLoginResponsePtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenIdConnectLoginResponse) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIdConnectRegistration struct {
	// The authentication credentials of the custom Open ID Connect provider.
	ClientCredential *OpenIdConnectClientCredential `pulumi:"clientCredential"`
	// The client id of the custom Open ID Connect provider.
	ClientId *string `pulumi:"clientId"`
	// The configuration settings of the endpoints used for the custom Open ID Connect provider.
	OpenIdConnectConfiguration *OpenIdConnectConfig `pulumi:"openIdConnectConfiguration"`
}

// OpenIdConnectRegistrationInput is an input type that accepts OpenIdConnectRegistrationArgs and OpenIdConnectRegistrationOutput values.
// You can construct a concrete instance of `OpenIdConnectRegistrationInput` via:
//
//	OpenIdConnectRegistrationArgs{...}
type OpenIdConnectRegistrationInput interface {
	pulumi.Input

	ToOpenIdConnectRegistrationOutput() OpenIdConnectRegistrationOutput
	ToOpenIdConnectRegistrationOutputWithContext(context.Context) OpenIdConnectRegistrationOutput
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIdConnectRegistrationArgs struct {
	// The authentication credentials of the custom Open ID Connect provider.
	ClientCredential OpenIdConnectClientCredentialPtrInput `pulumi:"clientCredential"`
	// The client id of the custom Open ID Connect provider.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The configuration settings of the endpoints used for the custom Open ID Connect provider.
	OpenIdConnectConfiguration OpenIdConnectConfigPtrInput `pulumi:"openIdConnectConfiguration"`
}

func (OpenIdConnectRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectRegistration)(nil)).Elem()
}

func (i OpenIdConnectRegistrationArgs) ToOpenIdConnectRegistrationOutput() OpenIdConnectRegistrationOutput {
	return i.ToOpenIdConnectRegistrationOutputWithContext(context.Background())
}

func (i OpenIdConnectRegistrationArgs) ToOpenIdConnectRegistrationOutputWithContext(ctx context.Context) OpenIdConnectRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectRegistrationOutput)
}

func (i OpenIdConnectRegistrationArgs) ToOpenIdConnectRegistrationPtrOutput() OpenIdConnectRegistrationPtrOutput {
	return i.ToOpenIdConnectRegistrationPtrOutputWithContext(context.Background())
}

func (i OpenIdConnectRegistrationArgs) ToOpenIdConnectRegistrationPtrOutputWithContext(ctx context.Context) OpenIdConnectRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectRegistrationOutput).ToOpenIdConnectRegistrationPtrOutputWithContext(ctx)
}

// OpenIdConnectRegistrationPtrInput is an input type that accepts OpenIdConnectRegistrationArgs, OpenIdConnectRegistrationPtr and OpenIdConnectRegistrationPtrOutput values.
// You can construct a concrete instance of `OpenIdConnectRegistrationPtrInput` via:
//
//	        OpenIdConnectRegistrationArgs{...}
//
//	or:
//
//	        nil
type OpenIdConnectRegistrationPtrInput interface {
	pulumi.Input

	ToOpenIdConnectRegistrationPtrOutput() OpenIdConnectRegistrationPtrOutput
	ToOpenIdConnectRegistrationPtrOutputWithContext(context.Context) OpenIdConnectRegistrationPtrOutput
}

type openIdConnectRegistrationPtrType OpenIdConnectRegistrationArgs

func OpenIdConnectRegistrationPtr(v *OpenIdConnectRegistrationArgs) OpenIdConnectRegistrationPtrInput {
	return (*openIdConnectRegistrationPtrType)(v)
}

func (*openIdConnectRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectRegistration)(nil)).Elem()
}

func (i *openIdConnectRegistrationPtrType) ToOpenIdConnectRegistrationPtrOutput() OpenIdConnectRegistrationPtrOutput {
	return i.ToOpenIdConnectRegistrationPtrOutputWithContext(context.Background())
}

func (i *openIdConnectRegistrationPtrType) ToOpenIdConnectRegistrationPtrOutputWithContext(ctx context.Context) OpenIdConnectRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenIdConnectRegistrationPtrOutput)
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIdConnectRegistrationOutput struct{ *pulumi.OutputState }

func (OpenIdConnectRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectRegistration)(nil)).Elem()
}

func (o OpenIdConnectRegistrationOutput) ToOpenIdConnectRegistrationOutput() OpenIdConnectRegistrationOutput {
	return o
}

func (o OpenIdConnectRegistrationOutput) ToOpenIdConnectRegistrationOutputWithContext(ctx context.Context) OpenIdConnectRegistrationOutput {
	return o
}

func (o OpenIdConnectRegistrationOutput) ToOpenIdConnectRegistrationPtrOutput() OpenIdConnectRegistrationPtrOutput {
	return o.ToOpenIdConnectRegistrationPtrOutputWithContext(context.Background())
}

func (o OpenIdConnectRegistrationOutput) ToOpenIdConnectRegistrationPtrOutputWithContext(ctx context.Context) OpenIdConnectRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenIdConnectRegistration) *OpenIdConnectRegistration {
		return &v
	}).(OpenIdConnectRegistrationPtrOutput)
}

// The authentication credentials of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationOutput) ClientCredential() OpenIdConnectClientCredentialPtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistration) *OpenIdConnectClientCredential { return v.ClientCredential }).(OpenIdConnectClientCredentialPtrOutput)
}

// The client id of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistration) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationOutput) OpenIdConnectConfiguration() OpenIdConnectConfigPtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistration) *OpenIdConnectConfig { return v.OpenIdConnectConfiguration }).(OpenIdConnectConfigPtrOutput)
}

type OpenIdConnectRegistrationPtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectRegistration)(nil)).Elem()
}

func (o OpenIdConnectRegistrationPtrOutput) ToOpenIdConnectRegistrationPtrOutput() OpenIdConnectRegistrationPtrOutput {
	return o
}

func (o OpenIdConnectRegistrationPtrOutput) ToOpenIdConnectRegistrationPtrOutputWithContext(ctx context.Context) OpenIdConnectRegistrationPtrOutput {
	return o
}

func (o OpenIdConnectRegistrationPtrOutput) Elem() OpenIdConnectRegistrationOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistration) OpenIdConnectRegistration {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectRegistration
		return ret
	}).(OpenIdConnectRegistrationOutput)
}

// The authentication credentials of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationPtrOutput) ClientCredential() OpenIdConnectClientCredentialPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistration) *OpenIdConnectClientCredential {
		if v == nil {
			return nil
		}
		return v.ClientCredential
	}).(OpenIdConnectClientCredentialPtrOutput)
}

// The client id of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationPtrOutput) OpenIdConnectConfiguration() OpenIdConnectConfigPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistration) *OpenIdConnectConfig {
		if v == nil {
			return nil
		}
		return v.OpenIdConnectConfiguration
	}).(OpenIdConnectConfigPtrOutput)
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIdConnectRegistrationResponse struct {
	// The authentication credentials of the custom Open ID Connect provider.
	ClientCredential *OpenIdConnectClientCredentialResponse `pulumi:"clientCredential"`
	// The client id of the custom Open ID Connect provider.
	ClientId *string `pulumi:"clientId"`
	// The configuration settings of the endpoints used for the custom Open ID Connect provider.
	OpenIdConnectConfiguration *OpenIdConnectConfigResponse `pulumi:"openIdConnectConfiguration"`
}

// The configuration settings of the app registration for the custom Open ID Connect provider.
type OpenIdConnectRegistrationResponseOutput struct{ *pulumi.OutputState }

func (OpenIdConnectRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenIdConnectRegistrationResponse)(nil)).Elem()
}

func (o OpenIdConnectRegistrationResponseOutput) ToOpenIdConnectRegistrationResponseOutput() OpenIdConnectRegistrationResponseOutput {
	return o
}

func (o OpenIdConnectRegistrationResponseOutput) ToOpenIdConnectRegistrationResponseOutputWithContext(ctx context.Context) OpenIdConnectRegistrationResponseOutput {
	return o
}

// The authentication credentials of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponseOutput) ClientCredential() OpenIdConnectClientCredentialResponsePtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistrationResponse) *OpenIdConnectClientCredentialResponse {
		return v.ClientCredential
	}).(OpenIdConnectClientCredentialResponsePtrOutput)
}

// The client id of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponseOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistrationResponse) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponseOutput) OpenIdConnectConfiguration() OpenIdConnectConfigResponsePtrOutput {
	return o.ApplyT(func(v OpenIdConnectRegistrationResponse) *OpenIdConnectConfigResponse {
		return v.OpenIdConnectConfiguration
	}).(OpenIdConnectConfigResponsePtrOutput)
}

type OpenIdConnectRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (OpenIdConnectRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenIdConnectRegistrationResponse)(nil)).Elem()
}

func (o OpenIdConnectRegistrationResponsePtrOutput) ToOpenIdConnectRegistrationResponsePtrOutput() OpenIdConnectRegistrationResponsePtrOutput {
	return o
}

func (o OpenIdConnectRegistrationResponsePtrOutput) ToOpenIdConnectRegistrationResponsePtrOutputWithContext(ctx context.Context) OpenIdConnectRegistrationResponsePtrOutput {
	return o
}

func (o OpenIdConnectRegistrationResponsePtrOutput) Elem() OpenIdConnectRegistrationResponseOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistrationResponse) OpenIdConnectRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret OpenIdConnectRegistrationResponse
		return ret
	}).(OpenIdConnectRegistrationResponseOutput)
}

// The authentication credentials of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponsePtrOutput) ClientCredential() OpenIdConnectClientCredentialResponsePtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistrationResponse) *OpenIdConnectClientCredentialResponse {
		if v == nil {
			return nil
		}
		return v.ClientCredential
	}).(OpenIdConnectClientCredentialResponsePtrOutput)
}

// The client id of the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponsePtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the endpoints used for the custom Open ID Connect provider.
func (o OpenIdConnectRegistrationResponsePtrOutput) OpenIdConnectConfiguration() OpenIdConnectConfigResponsePtrOutput {
	return o.ApplyT(func(v *OpenIdConnectRegistrationResponse) *OpenIdConnectConfigResponse {
		if v == nil {
			return nil
		}
		return v.OpenIdConnectConfiguration
	}).(OpenIdConnectConfigResponsePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionState struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// PrivateLinkConnectionStateInput is an input type that accepts PrivateLinkConnectionStateArgs and PrivateLinkConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStateInput` via:
//
//	PrivateLinkConnectionStateArgs{...}
type PrivateLinkConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput
	ToPrivateLinkConnectionStateOutputWithContext(context.Context) PrivateLinkConnectionStateOutput
}

// The state of a private link connection
type PrivateLinkConnectionStateArgs struct {
	// ActionsRequired for a private link connection
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Status of a private link connection
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return i.ToPrivateLinkConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput)
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkConnectionStateArgs) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStateOutput).ToPrivateLinkConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkConnectionStatePtrInput is an input type that accepts PrivateLinkConnectionStateArgs, PrivateLinkConnectionStatePtr and PrivateLinkConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkConnectionStatePtrInput` via:
//
//	        PrivateLinkConnectionStateArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput
	ToPrivateLinkConnectionStatePtrOutputWithContext(context.Context) PrivateLinkConnectionStatePtrOutput
}

type privateLinkConnectionStatePtrType PrivateLinkConnectionStateArgs

func PrivateLinkConnectionStatePtr(v *PrivateLinkConnectionStateArgs) PrivateLinkConnectionStatePtrInput {
	return (*privateLinkConnectionStatePtrType)(v)
}

func (*privateLinkConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return i.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkConnectionStatePtrType) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkConnectionStatePtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutput() PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStateOutputWithContext(ctx context.Context) PrivateLinkConnectionStateOutput {
	return o
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o.ToPrivateLinkConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkConnectionStateOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkConnectionState) *PrivateLinkConnectionState {
		return &v
	}).(PrivateLinkConnectionStatePtrOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionState)(nil)).Elem()
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutput() PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) ToPrivateLinkConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkConnectionStatePtrOutput) Elem() PrivateLinkConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) PrivateLinkConnectionState {
		if v != nil {
			return *v
		}
		var ret PrivateLinkConnectionState
		return ret
	}).(PrivateLinkConnectionStateOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The state of a private link connection
type PrivateLinkConnectionStateResponse struct {
	// ActionsRequired for a private link connection
	ActionsRequired *string `pulumi:"actionsRequired"`
	// Description of a private link connection
	Description *string `pulumi:"description"`
	// Status of a private link connection
	Status *string `pulumi:"status"`
}

// The state of a private link connection
type PrivateLinkConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutput() PrivateLinkConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkConnectionStateResponseOutput) ToPrivateLinkConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponseOutput {
	return o
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutput() PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) ToPrivateLinkConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkConnectionStateResponsePtrOutput) Elem() PrivateLinkConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) PrivateLinkConnectionStateResponse {
		if v != nil {
			return *v
		}
		var ret PrivateLinkConnectionStateResponse
		return ret
	}).(PrivateLinkConnectionStateResponseOutput)
}

// ActionsRequired for a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// Description of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Status of a private link connection
func (o PrivateLinkConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettings struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
}

// PushSettingsInput is an input type that accepts PushSettingsArgs and PushSettingsOutput values.
// You can construct a concrete instance of `PushSettingsInput` via:
//
//	PushSettingsArgs{...}
type PushSettingsInput interface {
	pulumi.Input

	ToPushSettingsOutput() PushSettingsOutput
	ToPushSettingsOutputWithContext(context.Context) PushSettingsOutput
}

// Push settings for the App.
type PushSettingsArgs struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson pulumi.StringPtrInput `pulumi:"dynamicTagsJson"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled pulumi.BoolInput `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson pulumi.StringPtrInput `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth pulumi.StringPtrInput `pulumi:"tagsRequiringAuth"`
}

func (PushSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (i PushSettingsArgs) ToPushSettingsOutput() PushSettingsOutput {
	return i.ToPushSettingsOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput)
}

func (i PushSettingsArgs) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i PushSettingsArgs) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsOutput).ToPushSettingsPtrOutputWithContext(ctx)
}

// PushSettingsPtrInput is an input type that accepts PushSettingsArgs, PushSettingsPtr and PushSettingsPtrOutput values.
// You can construct a concrete instance of `PushSettingsPtrInput` via:
//
//	        PushSettingsArgs{...}
//
//	or:
//
//	        nil
type PushSettingsPtrInput interface {
	pulumi.Input

	ToPushSettingsPtrOutput() PushSettingsPtrOutput
	ToPushSettingsPtrOutputWithContext(context.Context) PushSettingsPtrOutput
}

type pushSettingsPtrType PushSettingsArgs

func PushSettingsPtr(v *PushSettingsArgs) PushSettingsPtrInput {
	return (*pushSettingsPtrType)(v)
}

func (*pushSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return i.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (i *pushSettingsPtrType) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSettingsPtrOutput)
}

// Push settings for the App.
type PushSettingsOutput struct{ *pulumi.OutputState }

func (PushSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettings)(nil)).Elem()
}

func (o PushSettingsOutput) ToPushSettingsOutput() PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsOutputWithContext(ctx context.Context) PushSettingsOutput {
	return o
}

func (o PushSettingsOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o.ToPushSettingsPtrOutputWithContext(context.Background())
}

func (o PushSettingsOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSettings) *PushSettings {
		return &v
	}).(PushSettingsPtrOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettings) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettings) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

type PushSettingsPtrOutput struct{ *pulumi.OutputState }

func (PushSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettings)(nil)).Elem()
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutput() PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) ToPushSettingsPtrOutputWithContext(ctx context.Context) PushSettingsPtrOutput {
	return o
}

func (o PushSettingsPtrOutput) Elem() PushSettingsOutput {
	return o.ApplyT(func(v *PushSettings) PushSettings {
		if v != nil {
			return *v
		}
		var ret PushSettings
		return ret
	}).(PushSettingsOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsPtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsPtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsPtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsPtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettings) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Push settings for the App.
type PushSettingsResponse struct {
	// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
	DynamicTagsJson *string `pulumi:"dynamicTagsJson"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Gets or sets a flag indicating whether the Push endpoint is enabled.
	IsPushEnabled bool `pulumi:"isPushEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
	TagWhitelistJson *string `pulumi:"tagWhitelistJson"`
	// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
	// Tags can consist of alphanumeric characters and the following:
	// '_', '@', '#', '.', ':', '-'.
	// Validation should be performed at the PushRequestHandler.
	TagsRequiringAuth *string `pulumi:"tagsRequiringAuth"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Push settings for the App.
type PushSettingsResponseOutput struct{ *pulumi.OutputState }

func (PushSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutput() PushSettingsResponseOutput {
	return o
}

func (o PushSettingsResponseOutput) ToPushSettingsResponseOutputWithContext(ctx context.Context) PushSettingsResponseOutput {
	return o
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponseOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.DynamicTagsJson }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponseOutput) IsPushEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PushSettingsResponse) bool { return v.IsPushEnabled }).(pulumi.BoolOutput)
}

// Kind of resource.
func (o PushSettingsResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponseOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagWhitelistJson }).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponseOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSettingsResponse) *string { return v.TagsRequiringAuth }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PushSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PushSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSettingsResponse)(nil)).Elem()
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutput() PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) ToPushSettingsResponsePtrOutputWithContext(ctx context.Context) PushSettingsResponsePtrOutput {
	return o
}

func (o PushSettingsResponsePtrOutput) Elem() PushSettingsResponseOutput {
	return o.ApplyT(func(v *PushSettingsResponse) PushSettingsResponse {
		if v != nil {
			return *v
		}
		var ret PushSettingsResponse
		return ret
	}).(PushSettingsResponseOutput)
}

// Gets or sets a JSON string containing a list of dynamic tags that will be evaluated from user claims in the push registration endpoint.
func (o PushSettingsResponsePtrOutput) DynamicTagsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicTagsJson
	}).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o PushSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a flag indicating whether the Push endpoint is enabled.
func (o PushSettingsResponsePtrOutput) IsPushEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.IsPushEnabled
	}).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o PushSettingsResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o PushSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that are whitelisted for use by the push registration endpoint.
func (o PushSettingsResponsePtrOutput) TagWhitelistJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagWhitelistJson
	}).(pulumi.StringPtrOutput)
}

// Gets or sets a JSON string containing a list of tags that require user authentication to be used in the push registration endpoint.
// Tags can consist of alphanumeric characters and the following:
// '_', '@', '#', '.', ':', '-'.
// Validation should be performed at the PushRequestHandler.
func (o PushSettingsResponsePtrOutput) TagsRequiringAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TagsRequiringAuth
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o PushSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Container App container Azure Queue based scaling rule.
type QueueScaleRule struct {
	// Authentication secrets for the queue scale rule.
	Auth []ScaleRuleAuth `pulumi:"auth"`
	// Queue length.
	QueueLength *int `pulumi:"queueLength"`
	// Queue name.
	QueueName *string `pulumi:"queueName"`
}

// QueueScaleRuleInput is an input type that accepts QueueScaleRuleArgs and QueueScaleRuleOutput values.
// You can construct a concrete instance of `QueueScaleRuleInput` via:
//
//	QueueScaleRuleArgs{...}
type QueueScaleRuleInput interface {
	pulumi.Input

	ToQueueScaleRuleOutput() QueueScaleRuleOutput
	ToQueueScaleRuleOutputWithContext(context.Context) QueueScaleRuleOutput
}

// Container App container Azure Queue based scaling rule.
type QueueScaleRuleArgs struct {
	// Authentication secrets for the queue scale rule.
	Auth ScaleRuleAuthArrayInput `pulumi:"auth"`
	// Queue length.
	QueueLength pulumi.IntPtrInput `pulumi:"queueLength"`
	// Queue name.
	QueueName pulumi.StringPtrInput `pulumi:"queueName"`
}

func (QueueScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRule)(nil)).Elem()
}

func (i QueueScaleRuleArgs) ToQueueScaleRuleOutput() QueueScaleRuleOutput {
	return i.ToQueueScaleRuleOutputWithContext(context.Background())
}

func (i QueueScaleRuleArgs) ToQueueScaleRuleOutputWithContext(ctx context.Context) QueueScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRuleOutput)
}

func (i QueueScaleRuleArgs) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return i.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (i QueueScaleRuleArgs) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRuleOutput).ToQueueScaleRulePtrOutputWithContext(ctx)
}

// QueueScaleRulePtrInput is an input type that accepts QueueScaleRuleArgs, QueueScaleRulePtr and QueueScaleRulePtrOutput values.
// You can construct a concrete instance of `QueueScaleRulePtrInput` via:
//
//	        QueueScaleRuleArgs{...}
//
//	or:
//
//	        nil
type QueueScaleRulePtrInput interface {
	pulumi.Input

	ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput
	ToQueueScaleRulePtrOutputWithContext(context.Context) QueueScaleRulePtrOutput
}

type queueScaleRulePtrType QueueScaleRuleArgs

func QueueScaleRulePtr(v *QueueScaleRuleArgs) QueueScaleRulePtrInput {
	return (*queueScaleRulePtrType)(v)
}

func (*queueScaleRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRule)(nil)).Elem()
}

func (i *queueScaleRulePtrType) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return i.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (i *queueScaleRulePtrType) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueScaleRulePtrOutput)
}

// Container App container Azure Queue based scaling rule.
type QueueScaleRuleOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRule)(nil)).Elem()
}

func (o QueueScaleRuleOutput) ToQueueScaleRuleOutput() QueueScaleRuleOutput {
	return o
}

func (o QueueScaleRuleOutput) ToQueueScaleRuleOutputWithContext(ctx context.Context) QueueScaleRuleOutput {
	return o
}

func (o QueueScaleRuleOutput) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return o.ToQueueScaleRulePtrOutputWithContext(context.Background())
}

func (o QueueScaleRuleOutput) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueScaleRule) *QueueScaleRule {
		return &v
	}).(QueueScaleRulePtrOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v QueueScaleRule) []ScaleRuleAuth { return v.Auth }).(ScaleRuleAuthArrayOutput)
}

// Queue length.
func (o QueueScaleRuleOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueScaleRule) *int { return v.QueueLength }).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueScaleRule) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type QueueScaleRulePtrOutput struct{ *pulumi.OutputState }

func (QueueScaleRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRule)(nil)).Elem()
}

func (o QueueScaleRulePtrOutput) ToQueueScaleRulePtrOutput() QueueScaleRulePtrOutput {
	return o
}

func (o QueueScaleRulePtrOutput) ToQueueScaleRulePtrOutputWithContext(ctx context.Context) QueueScaleRulePtrOutput {
	return o
}

func (o QueueScaleRulePtrOutput) Elem() QueueScaleRuleOutput {
	return o.ApplyT(func(v *QueueScaleRule) QueueScaleRule {
		if v != nil {
			return *v
		}
		var ret QueueScaleRule
		return ret
	}).(QueueScaleRuleOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRulePtrOutput) Auth() ScaleRuleAuthArrayOutput {
	return o.ApplyT(func(v *QueueScaleRule) []ScaleRuleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthArrayOutput)
}

// Queue length.
func (o QueueScaleRulePtrOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueScaleRule) *int {
		if v == nil {
			return nil
		}
		return v.QueueLength
	}).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRulePtrOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueScaleRule) *string {
		if v == nil {
			return nil
		}
		return v.QueueName
	}).(pulumi.StringPtrOutput)
}

// Container App container Azure Queue based scaling rule.
type QueueScaleRuleResponse struct {
	// Authentication secrets for the queue scale rule.
	Auth []ScaleRuleAuthResponse `pulumi:"auth"`
	// Queue length.
	QueueLength *int `pulumi:"queueLength"`
	// Queue name.
	QueueName *string `pulumi:"queueName"`
}

// Container App container Azure Queue based scaling rule.
type QueueScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueScaleRuleResponse)(nil)).Elem()
}

func (o QueueScaleRuleResponseOutput) ToQueueScaleRuleResponseOutput() QueueScaleRuleResponseOutput {
	return o
}

func (o QueueScaleRuleResponseOutput) ToQueueScaleRuleResponseOutputWithContext(ctx context.Context) QueueScaleRuleResponseOutput {
	return o
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleResponseOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) []ScaleRuleAuthResponse { return v.Auth }).(ScaleRuleAuthResponseArrayOutput)
}

// Queue length.
func (o QueueScaleRuleResponseOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) *int { return v.QueueLength }).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleResponseOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QueueScaleRuleResponse) *string { return v.QueueName }).(pulumi.StringPtrOutput)
}

type QueueScaleRuleResponsePtrOutput struct{ *pulumi.OutputState }

func (QueueScaleRuleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueScaleRuleResponse)(nil)).Elem()
}

func (o QueueScaleRuleResponsePtrOutput) ToQueueScaleRuleResponsePtrOutput() QueueScaleRuleResponsePtrOutput {
	return o
}

func (o QueueScaleRuleResponsePtrOutput) ToQueueScaleRuleResponsePtrOutputWithContext(ctx context.Context) QueueScaleRuleResponsePtrOutput {
	return o
}

func (o QueueScaleRuleResponsePtrOutput) Elem() QueueScaleRuleResponseOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) QueueScaleRuleResponse {
		if v != nil {
			return *v
		}
		var ret QueueScaleRuleResponse
		return ret
	}).(QueueScaleRuleResponseOutput)
}

// Authentication secrets for the queue scale rule.
func (o QueueScaleRuleResponsePtrOutput) Auth() ScaleRuleAuthResponseArrayOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) []ScaleRuleAuthResponse {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ScaleRuleAuthResponseArrayOutput)
}

// Queue length.
func (o QueueScaleRuleResponsePtrOutput) QueueLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) *int {
		if v == nil {
			return nil
		}
		return v.QueueLength
	}).(pulumi.IntPtrOutput)
}

// Queue name.
func (o QueueScaleRuleResponsePtrOutput) QueueName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueScaleRuleResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueueName
	}).(pulumi.StringPtrOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRule struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// RampUpRuleInput is an input type that accepts RampUpRuleArgs and RampUpRuleOutput values.
// You can construct a concrete instance of `RampUpRuleInput` via:
//
//	RampUpRuleArgs{...}
type RampUpRuleInput interface {
	pulumi.Input

	ToRampUpRuleOutput() RampUpRuleOutput
	ToRampUpRuleOutputWithContext(context.Context) RampUpRuleOutput
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleArgs struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName pulumi.StringPtrInput `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl pulumi.StringPtrInput `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes pulumi.IntPtrInput `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep pulumi.Float64PtrInput `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage pulumi.Float64PtrInput `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage pulumi.Float64PtrInput `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage pulumi.Float64PtrInput `pulumi:"reroutePercentage"`
}

func (RampUpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArgs) ToRampUpRuleOutput() RampUpRuleOutput {
	return i.ToRampUpRuleOutputWithContext(context.Background())
}

func (i RampUpRuleArgs) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleOutput)
}

// RampUpRuleArrayInput is an input type that accepts RampUpRuleArray and RampUpRuleArrayOutput values.
// You can construct a concrete instance of `RampUpRuleArrayInput` via:
//
//	RampUpRuleArray{ RampUpRuleArgs{...} }
type RampUpRuleArrayInput interface {
	pulumi.Input

	ToRampUpRuleArrayOutput() RampUpRuleArrayOutput
	ToRampUpRuleArrayOutputWithContext(context.Context) RampUpRuleArrayOutput
}

type RampUpRuleArray []RampUpRuleInput

func (RampUpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return i.ToRampUpRuleArrayOutputWithContext(context.Background())
}

func (i RampUpRuleArray) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RampUpRuleArrayOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleOutput struct{ *pulumi.OutputState }

func (RampUpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRule)(nil)).Elem()
}

func (o RampUpRuleOutput) ToRampUpRuleOutput() RampUpRuleOutput {
	return o
}

func (o RampUpRuleOutput) ToRampUpRuleOutputWithContext(ctx context.Context) RampUpRuleOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRule) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRule) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRule)(nil)).Elem()
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutput() RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) ToRampUpRuleArrayOutputWithContext(ctx context.Context) RampUpRuleArrayOutput {
	return o
}

func (o RampUpRuleArrayOutput) Index(i pulumi.IntInput) RampUpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRule {
		return vs[0].([]RampUpRule)[vs[1].(int)]
	}).(RampUpRuleOutput)
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponse struct {
	// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
	ActionHostName *string `pulumi:"actionHostName"`
	// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
	// https://www.siteextensions.net/packages/TiPCallback/
	ChangeDecisionCallbackUrl *string `pulumi:"changeDecisionCallbackUrl"`
	// Specifies interval in minutes to reevaluate ReroutePercentage.
	ChangeIntervalInMinutes *int `pulumi:"changeIntervalInMinutes"`
	// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
	// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
	// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
	ChangeStep *float64 `pulumi:"changeStep"`
	// Specifies upper boundary below which ReroutePercentage will stay.
	MaxReroutePercentage *float64 `pulumi:"maxReroutePercentage"`
	// Specifies lower boundary above which ReroutePercentage will stay.
	MinReroutePercentage *float64 `pulumi:"minReroutePercentage"`
	// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
	Name *string `pulumi:"name"`
	// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
	ReroutePercentage *float64 `pulumi:"reroutePercentage"`
}

// Routing rules for ramp up testing. This rule allows to redirect static traffic % to a slot or to gradually change routing % based on performance.
type RampUpRuleResponseOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutput() RampUpRuleResponseOutput {
	return o
}

func (o RampUpRuleResponseOutput) ToRampUpRuleResponseOutputWithContext(ctx context.Context) RampUpRuleResponseOutput {
	return o
}

// Hostname of a slot to which the traffic will be redirected if decided to. E.g. myapp-stage.azurewebsites.net.
func (o RampUpRuleResponseOutput) ActionHostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ActionHostName }).(pulumi.StringPtrOutput)
}

// Custom decision algorithm can be provided in TiPCallback site extension which URL can be specified. See TiPCallback site extension for the scaffold and contracts.
// https://www.siteextensions.net/packages/TiPCallback/
func (o RampUpRuleResponseOutput) ChangeDecisionCallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.ChangeDecisionCallbackUrl }).(pulumi.StringPtrOutput)
}

// Specifies interval in minutes to reevaluate ReroutePercentage.
func (o RampUpRuleResponseOutput) ChangeIntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *int { return v.ChangeIntervalInMinutes }).(pulumi.IntPtrOutput)
}

// In auto ramp up scenario this is the step to add/remove from <code>ReroutePercentage</code> until it reaches \n<code>MinReroutePercentage</code> or
// <code>MaxReroutePercentage</code>. Site metrics are checked every N minutes specified in <code>ChangeIntervalInMinutes</code>.\nCustom decision algorithm
// can be provided in TiPCallback site extension which URL can be specified in <code>ChangeDecisionCallbackUrl</code>.
func (o RampUpRuleResponseOutput) ChangeStep() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ChangeStep }).(pulumi.Float64PtrOutput)
}

// Specifies upper boundary below which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MaxReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MaxReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Specifies lower boundary above which ReroutePercentage will stay.
func (o RampUpRuleResponseOutput) MinReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.MinReroutePercentage }).(pulumi.Float64PtrOutput)
}

// Name of the routing rule. The recommended name would be to point to the slot which will receive the traffic in the experiment.
func (o RampUpRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Percentage of the traffic which will be redirected to <code>ActionHostName</code>.
func (o RampUpRuleResponseOutput) ReroutePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RampUpRuleResponse) *float64 { return v.ReroutePercentage }).(pulumi.Float64PtrOutput)
}

type RampUpRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RampUpRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RampUpRuleResponse)(nil)).Elem()
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutput() RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) ToRampUpRuleResponseArrayOutputWithContext(ctx context.Context) RampUpRuleResponseArrayOutput {
	return o
}

func (o RampUpRuleResponseArrayOutput) Index(i pulumi.IntInput) RampUpRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RampUpRuleResponse {
		return vs[0].([]RampUpRuleResponse)[vs[1].(int)]
	}).(RampUpRuleResponseOutput)
}

// Container App Private Registry
type RegistryCredentials struct {
	// The name of the Secret that contains the registry login password
	PasswordSecretRef *string `pulumi:"passwordSecretRef"`
	// Container Registry Server
	Server *string `pulumi:"server"`
	// Container Registry Username
	Username *string `pulumi:"username"`
}

// RegistryCredentialsInput is an input type that accepts RegistryCredentialsArgs and RegistryCredentialsOutput values.
// You can construct a concrete instance of `RegistryCredentialsInput` via:
//
//	RegistryCredentialsArgs{...}
type RegistryCredentialsInput interface {
	pulumi.Input

	ToRegistryCredentialsOutput() RegistryCredentialsOutput
	ToRegistryCredentialsOutputWithContext(context.Context) RegistryCredentialsOutput
}

// Container App Private Registry
type RegistryCredentialsArgs struct {
	// The name of the Secret that contains the registry login password
	PasswordSecretRef pulumi.StringPtrInput `pulumi:"passwordSecretRef"`
	// Container Registry Server
	Server pulumi.StringPtrInput `pulumi:"server"`
	// Container Registry Username
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (RegistryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredentials)(nil)).Elem()
}

func (i RegistryCredentialsArgs) ToRegistryCredentialsOutput() RegistryCredentialsOutput {
	return i.ToRegistryCredentialsOutputWithContext(context.Background())
}

func (i RegistryCredentialsArgs) ToRegistryCredentialsOutputWithContext(ctx context.Context) RegistryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialsOutput)
}

// RegistryCredentialsArrayInput is an input type that accepts RegistryCredentialsArray and RegistryCredentialsArrayOutput values.
// You can construct a concrete instance of `RegistryCredentialsArrayInput` via:
//
//	RegistryCredentialsArray{ RegistryCredentialsArgs{...} }
type RegistryCredentialsArrayInput interface {
	pulumi.Input

	ToRegistryCredentialsArrayOutput() RegistryCredentialsArrayOutput
	ToRegistryCredentialsArrayOutputWithContext(context.Context) RegistryCredentialsArrayOutput
}

type RegistryCredentialsArray []RegistryCredentialsInput

func (RegistryCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryCredentials)(nil)).Elem()
}

func (i RegistryCredentialsArray) ToRegistryCredentialsArrayOutput() RegistryCredentialsArrayOutput {
	return i.ToRegistryCredentialsArrayOutputWithContext(context.Background())
}

func (i RegistryCredentialsArray) ToRegistryCredentialsArrayOutputWithContext(ctx context.Context) RegistryCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryCredentialsArrayOutput)
}

// Container App Private Registry
type RegistryCredentialsOutput struct{ *pulumi.OutputState }

func (RegistryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredentials)(nil)).Elem()
}

func (o RegistryCredentialsOutput) ToRegistryCredentialsOutput() RegistryCredentialsOutput {
	return o
}

func (o RegistryCredentialsOutput) ToRegistryCredentialsOutputWithContext(ctx context.Context) RegistryCredentialsOutput {
	return o
}

// The name of the Secret that contains the registry login password
func (o RegistryCredentialsOutput) PasswordSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentials) *string { return v.PasswordSecretRef }).(pulumi.StringPtrOutput)
}

// Container Registry Server
func (o RegistryCredentialsOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentials) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Container Registry Username
func (o RegistryCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RegistryCredentialsArrayOutput struct{ *pulumi.OutputState }

func (RegistryCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryCredentials)(nil)).Elem()
}

func (o RegistryCredentialsArrayOutput) ToRegistryCredentialsArrayOutput() RegistryCredentialsArrayOutput {
	return o
}

func (o RegistryCredentialsArrayOutput) ToRegistryCredentialsArrayOutputWithContext(ctx context.Context) RegistryCredentialsArrayOutput {
	return o
}

func (o RegistryCredentialsArrayOutput) Index(i pulumi.IntInput) RegistryCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryCredentials {
		return vs[0].([]RegistryCredentials)[vs[1].(int)]
	}).(RegistryCredentialsOutput)
}

// Container App Private Registry
type RegistryCredentialsResponse struct {
	// The name of the Secret that contains the registry login password
	PasswordSecretRef *string `pulumi:"passwordSecretRef"`
	// Container Registry Server
	Server *string `pulumi:"server"`
	// Container Registry Username
	Username *string `pulumi:"username"`
}

// Container App Private Registry
type RegistryCredentialsResponseOutput struct{ *pulumi.OutputState }

func (RegistryCredentialsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryCredentialsResponse)(nil)).Elem()
}

func (o RegistryCredentialsResponseOutput) ToRegistryCredentialsResponseOutput() RegistryCredentialsResponseOutput {
	return o
}

func (o RegistryCredentialsResponseOutput) ToRegistryCredentialsResponseOutputWithContext(ctx context.Context) RegistryCredentialsResponseOutput {
	return o
}

// The name of the Secret that contains the registry login password
func (o RegistryCredentialsResponseOutput) PasswordSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentialsResponse) *string { return v.PasswordSecretRef }).(pulumi.StringPtrOutput)
}

// Container Registry Server
func (o RegistryCredentialsResponseOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentialsResponse) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// Container Registry Username
func (o RegistryCredentialsResponseOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryCredentialsResponse) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RegistryCredentialsResponseArrayOutput struct{ *pulumi.OutputState }

func (RegistryCredentialsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryCredentialsResponse)(nil)).Elem()
}

func (o RegistryCredentialsResponseArrayOutput) ToRegistryCredentialsResponseArrayOutput() RegistryCredentialsResponseArrayOutput {
	return o
}

func (o RegistryCredentialsResponseArrayOutput) ToRegistryCredentialsResponseArrayOutputWithContext(ctx context.Context) RegistryCredentialsResponseArrayOutput {
	return o
}

func (o RegistryCredentialsResponseArrayOutput) Index(i pulumi.IntInput) RegistryCredentialsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryCredentialsResponse {
		return vs[0].([]RegistryCredentialsResponse)[vs[1].(int)]
	}).(RegistryCredentialsResponseOutput)
}

// A remote private endpoint connection
type RemotePrivateEndpointConnectionResponse struct {
	// Resource Id.
	Id string `pulumi:"id"`
	// Private IPAddresses mapped to the remote private endpoint
	IpAddresses []string `pulumi:"ipAddresses"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// PrivateEndpoint of a remote private endpoint connection
	PrivateEndpoint *ArmIdWrapperResponse `pulumi:"privateEndpoint"`
	// The state of a private link connection
	PrivateLinkServiceConnectionState *PrivateLinkConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	ProvisioningState                 string                              `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// A remote private endpoint connection
type RemotePrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (RemotePrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemotePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o RemotePrivateEndpointConnectionResponseOutput) ToRemotePrivateEndpointConnectionResponseOutput() RemotePrivateEndpointConnectionResponseOutput {
	return o
}

func (o RemotePrivateEndpointConnectionResponseOutput) ToRemotePrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) RemotePrivateEndpointConnectionResponseOutput {
	return o
}

// Resource Id.
func (o RemotePrivateEndpointConnectionResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Private IPAddresses mapped to the remote private endpoint
func (o RemotePrivateEndpointConnectionResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// Kind of resource.
func (o RemotePrivateEndpointConnectionResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o RemotePrivateEndpointConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// PrivateEndpoint of a remote private endpoint connection
func (o RemotePrivateEndpointConnectionResponseOutput) PrivateEndpoint() ArmIdWrapperResponsePtrOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) *ArmIdWrapperResponse { return v.PrivateEndpoint }).(ArmIdWrapperResponsePtrOutput)
}

// The state of a private link connection
func (o RemotePrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) *PrivateLinkConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

func (o RemotePrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o RemotePrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RemotePrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RemotePrivateEndpointConnectionResponsePtrOutput struct{ *pulumi.OutputState }

func (RemotePrivateEndpointConnectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemotePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o RemotePrivateEndpointConnectionResponsePtrOutput) ToRemotePrivateEndpointConnectionResponsePtrOutput() RemotePrivateEndpointConnectionResponsePtrOutput {
	return o
}

func (o RemotePrivateEndpointConnectionResponsePtrOutput) ToRemotePrivateEndpointConnectionResponsePtrOutputWithContext(ctx context.Context) RemotePrivateEndpointConnectionResponsePtrOutput {
	return o
}

func (o RemotePrivateEndpointConnectionResponsePtrOutput) Elem() RemotePrivateEndpointConnectionResponseOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) RemotePrivateEndpointConnectionResponse {
		if v != nil {
			return *v
		}
		var ret RemotePrivateEndpointConnectionResponse
		return ret
	}).(RemotePrivateEndpointConnectionResponseOutput)
}

// Resource Id.
func (o RemotePrivateEndpointConnectionResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Private IPAddresses mapped to the remote private endpoint
func (o RemotePrivateEndpointConnectionResponsePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Kind of resource.
func (o RemotePrivateEndpointConnectionResponsePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o RemotePrivateEndpointConnectionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// PrivateEndpoint of a remote private endpoint connection
func (o RemotePrivateEndpointConnectionResponsePtrOutput) PrivateEndpoint() ArmIdWrapperResponsePtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *ArmIdWrapperResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoint
	}).(ArmIdWrapperResponsePtrOutput)
}

// The state of a private link connection
func (o RemotePrivateEndpointConnectionResponsePtrOutput) PrivateLinkServiceConnectionState() PrivateLinkConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *PrivateLinkConnectionStateResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkConnectionStateResponsePtrOutput)
}

func (o RemotePrivateEndpointConnectionResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Resource type.
func (o RemotePrivateEndpointConnectionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemotePrivateEndpointConnectionResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// RequestsBasedTriggerInput is an input type that accepts RequestsBasedTriggerArgs and RequestsBasedTriggerOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerInput` via:
//
//	RequestsBasedTriggerArgs{...}
type RequestsBasedTriggerInput interface {
	pulumi.Input

	ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput
	ToRequestsBasedTriggerOutputWithContext(context.Context) RequestsBasedTriggerOutput
}

// Trigger based on total requests.
type RequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (RequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return i.ToRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput)
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i RequestsBasedTriggerArgs) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerOutput).ToRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// RequestsBasedTriggerPtrInput is an input type that accepts RequestsBasedTriggerArgs, RequestsBasedTriggerPtr and RequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `RequestsBasedTriggerPtrInput` via:
//
//	        RequestsBasedTriggerArgs{...}
//
//	or:
//
//	        nil
type RequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput
	ToRequestsBasedTriggerPtrOutputWithContext(context.Context) RequestsBasedTriggerPtrOutput
}

type requestsBasedTriggerPtrType RequestsBasedTriggerArgs

func RequestsBasedTriggerPtr(v *RequestsBasedTriggerArgs) RequestsBasedTriggerPtrInput {
	return (*requestsBasedTriggerPtrType)(v)
}

func (*requestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return i.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *requestsBasedTriggerPtrType) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestsBasedTriggerPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutput() RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerOutputWithContext(ctx context.Context) RequestsBasedTriggerOutput {
	return o
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o.ToRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o RequestsBasedTriggerOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestsBasedTrigger) *RequestsBasedTrigger {
		return &v
	}).(RequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o RequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTrigger)(nil)).Elem()
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutput() RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) ToRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) RequestsBasedTriggerPtrOutput {
	return o
}

func (o RequestsBasedTriggerPtrOutput) Elem() RequestsBasedTriggerOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) RequestsBasedTrigger {
		if v != nil {
			return *v
		}
		var ret RequestsBasedTrigger
		return ret
	}).(RequestsBasedTriggerOutput)
}

// Request Count.
func (o RequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Trigger based on total requests.
type RequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// Trigger based on total requests.
type RequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutput() RequestsBasedTriggerResponseOutput {
	return o
}

func (o RequestsBasedTriggerResponseOutput) ToRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) RequestsBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o RequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type RequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (RequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestsBasedTriggerResponse)(nil)).Elem()
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutput() RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) ToRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) RequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o RequestsBasedTriggerResponsePtrOutput) Elem() RequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) RequestsBasedTriggerResponse {
		if v != nil {
			return *v
		}
		var ret RequestsBasedTriggerResponse
		return ret
	}).(RequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o RequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Time interval.
func (o RequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Message envelope that contains the common Azure resource manager properties and the resource provider specific content.
type ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse struct {
	// Azure-AsyncOperation Error info.
	Error *ErrorEntityResponse `pulumi:"error"`
	// Resource Id. Typically ID is populated only for responses to GET requests. Caller is responsible for passing in this
	// value for GET requests only.
	// For example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}
	Id *string `pulumi:"id"`
	// MSI resource
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Geographical region resource belongs to e.g. SouthCentralUS, SouthEastAsia.
	Location *string `pulumi:"location"`
	// Name of resource.
	Name *string `pulumi:"name"`
	// Azure resource manager plan.
	Plan *ArmPlanResponse `pulumi:"plan"`
	// Resource specific properties.
	Properties *RemotePrivateEndpointConnectionResponse `pulumi:"properties"`
	// SKU description of the resource.
	Sku *SkuDescriptionResponse `pulumi:"sku"`
	// Azure-AsyncOperation Status info.
	Status *string `pulumi:"status"`
	// Tags associated with resource.
	Tags map[string]string `pulumi:"tags"`
	// Type of resource e.g "Microsoft.Web/sites".
	Type *string `pulumi:"type"`
	// Logical Availability Zones the service is hosted in
	Zones []string `pulumi:"zones"`
}

// Message envelope that contains the common Azure resource manager properties and the resource provider specific content.
type ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) ToResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput() ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput {
	return o
}

func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) ToResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput {
	return o
}

// Azure-AsyncOperation Error info.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Error() ErrorEntityResponsePtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *ErrorEntityResponse {
		return v.Error
	}).(ErrorEntityResponsePtrOutput)
}

// Resource Id. Typically ID is populated only for responses to GET requests. Caller is responsible for passing in this
// value for GET requests only.
// For example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupId}/providers/Microsoft.Web/sites/{sitename}
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// MSI resource
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *ManagedServiceIdentityResponse {
		return v.Identity
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// Geographical region resource belongs to e.g. SouthCentralUS, SouthEastAsia.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of resource.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Azure resource manager plan.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Plan() ArmPlanResponsePtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *ArmPlanResponse { return v.Plan }).(ArmPlanResponsePtrOutput)
}

// Resource specific properties.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Properties() RemotePrivateEndpointConnectionResponsePtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *RemotePrivateEndpointConnectionResponse {
		return v.Properties
	}).(RemotePrivateEndpointConnectionResponsePtrOutput)
}

// SKU description of the resource.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Sku() SkuDescriptionResponsePtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *SkuDescriptionResponse {
		return v.Sku
	}).(SkuDescriptionResponsePtrOutput)
}

// Azure-AsyncOperation Status info.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tags associated with resource.
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) map[string]string {
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Type of resource e.g "Microsoft.Web/sites".
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Logical Availability Zones the service is hosted in
func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput) ToResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput() ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput) ToResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse {
		return vs[0].([]ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput)
}

// Container App scaling configurations.
type Scale struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas *int `pulumi:"minReplicas"`
	// Scaling rules.
	Rules []ScaleRule `pulumi:"rules"`
}

// ScaleInput is an input type that accepts ScaleArgs and ScaleOutput values.
// You can construct a concrete instance of `ScaleInput` via:
//
//	ScaleArgs{...}
type ScaleInput interface {
	pulumi.Input

	ToScaleOutput() ScaleOutput
	ToScaleOutputWithContext(context.Context) ScaleOutput
}

// Container App scaling configurations.
type ScaleArgs struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas pulumi.IntPtrInput `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas pulumi.IntPtrInput `pulumi:"minReplicas"`
	// Scaling rules.
	Rules ScaleRuleArrayInput `pulumi:"rules"`
}

func (ScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Scale)(nil)).Elem()
}

func (i ScaleArgs) ToScaleOutput() ScaleOutput {
	return i.ToScaleOutputWithContext(context.Background())
}

func (i ScaleArgs) ToScaleOutputWithContext(ctx context.Context) ScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutput)
}

func (i ScaleArgs) ToScalePtrOutput() ScalePtrOutput {
	return i.ToScalePtrOutputWithContext(context.Background())
}

func (i ScaleArgs) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutput).ToScalePtrOutputWithContext(ctx)
}

// ScalePtrInput is an input type that accepts ScaleArgs, ScalePtr and ScalePtrOutput values.
// You can construct a concrete instance of `ScalePtrInput` via:
//
//	        ScaleArgs{...}
//
//	or:
//
//	        nil
type ScalePtrInput interface {
	pulumi.Input

	ToScalePtrOutput() ScalePtrOutput
	ToScalePtrOutputWithContext(context.Context) ScalePtrOutput
}

type scalePtrType ScaleArgs

func ScalePtr(v *ScaleArgs) ScalePtrInput {
	return (*scalePtrType)(v)
}

func (*scalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Scale)(nil)).Elem()
}

func (i *scalePtrType) ToScalePtrOutput() ScalePtrOutput {
	return i.ToScalePtrOutputWithContext(context.Background())
}

func (i *scalePtrType) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalePtrOutput)
}

// Container App scaling configurations.
type ScaleOutput struct{ *pulumi.OutputState }

func (ScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Scale)(nil)).Elem()
}

func (o ScaleOutput) ToScaleOutput() ScaleOutput {
	return o
}

func (o ScaleOutput) ToScaleOutputWithContext(ctx context.Context) ScaleOutput {
	return o
}

func (o ScaleOutput) ToScalePtrOutput() ScalePtrOutput {
	return o.ToScalePtrOutputWithContext(context.Background())
}

func (o ScaleOutput) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Scale) *Scale {
		return &v
	}).(ScalePtrOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Scale) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Scale) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleOutput) Rules() ScaleRuleArrayOutput {
	return o.ApplyT(func(v Scale) []ScaleRule { return v.Rules }).(ScaleRuleArrayOutput)
}

type ScalePtrOutput struct{ *pulumi.OutputState }

func (ScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Scale)(nil)).Elem()
}

func (o ScalePtrOutput) ToScalePtrOutput() ScalePtrOutput {
	return o
}

func (o ScalePtrOutput) ToScalePtrOutputWithContext(ctx context.Context) ScalePtrOutput {
	return o
}

func (o ScalePtrOutput) Elem() ScaleOutput {
	return o.ApplyT(func(v *Scale) Scale {
		if v != nil {
			return *v
		}
		var ret Scale
		return ret
	}).(ScaleOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScalePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Scale) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScalePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Scale) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScalePtrOutput) Rules() ScaleRuleArrayOutput {
	return o.ApplyT(func(v *Scale) []ScaleRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ScaleRuleArrayOutput)
}

// Container App scaling configurations.
type ScaleResponse struct {
	// Optional. Maximum number of container replicas. Defaults to 10 if not set.
	MaxReplicas *int `pulumi:"maxReplicas"`
	// Optional. Minimum number of container replicas.
	MinReplicas *int `pulumi:"minReplicas"`
	// Scaling rules.
	Rules []ScaleRuleResponse `pulumi:"rules"`
}

// Container App scaling configurations.
type ScaleResponseOutput struct{ *pulumi.OutputState }

func (ScaleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleResponse)(nil)).Elem()
}

func (o ScaleResponseOutput) ToScaleResponseOutput() ScaleResponseOutput {
	return o
}

func (o ScaleResponseOutput) ToScaleResponseOutputWithContext(ctx context.Context) ScaleResponseOutput {
	return o
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleResponseOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleResponse) *int { return v.MaxReplicas }).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleResponseOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScaleResponse) *int { return v.MinReplicas }).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleResponseOutput) Rules() ScaleRuleResponseArrayOutput {
	return o.ApplyT(func(v ScaleResponse) []ScaleRuleResponse { return v.Rules }).(ScaleRuleResponseArrayOutput)
}

type ScaleResponsePtrOutput struct{ *pulumi.OutputState }

func (ScaleResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleResponse)(nil)).Elem()
}

func (o ScaleResponsePtrOutput) ToScaleResponsePtrOutput() ScaleResponsePtrOutput {
	return o
}

func (o ScaleResponsePtrOutput) ToScaleResponsePtrOutputWithContext(ctx context.Context) ScaleResponsePtrOutput {
	return o
}

func (o ScaleResponsePtrOutput) Elem() ScaleResponseOutput {
	return o.ApplyT(func(v *ScaleResponse) ScaleResponse {
		if v != nil {
			return *v
		}
		var ret ScaleResponse
		return ret
	}).(ScaleResponseOutput)
}

// Optional. Maximum number of container replicas. Defaults to 10 if not set.
func (o ScaleResponsePtrOutput) MaxReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxReplicas
	}).(pulumi.IntPtrOutput)
}

// Optional. Minimum number of container replicas.
func (o ScaleResponsePtrOutput) MinReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScaleResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinReplicas
	}).(pulumi.IntPtrOutput)
}

// Scaling rules.
func (o ScaleResponsePtrOutput) Rules() ScaleRuleResponseArrayOutput {
	return o.ApplyT(func(v *ScaleResponse) []ScaleRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ScaleRuleResponseArrayOutput)
}

// Container App container scaling rule.
type ScaleRule struct {
	// Azure Queue based scaling.
	AzureQueue *QueueScaleRule `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom *CustomScaleRule `pulumi:"custom"`
	// HTTP requests based scaling.
	Http *HttpScaleRule `pulumi:"http"`
	// Scale Rule Name
	Name *string `pulumi:"name"`
}

// ScaleRuleInput is an input type that accepts ScaleRuleArgs and ScaleRuleOutput values.
// You can construct a concrete instance of `ScaleRuleInput` via:
//
//	ScaleRuleArgs{...}
type ScaleRuleInput interface {
	pulumi.Input

	ToScaleRuleOutput() ScaleRuleOutput
	ToScaleRuleOutputWithContext(context.Context) ScaleRuleOutput
}

// Container App container scaling rule.
type ScaleRuleArgs struct {
	// Azure Queue based scaling.
	AzureQueue QueueScaleRulePtrInput `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom CustomScaleRulePtrInput `pulumi:"custom"`
	// HTTP requests based scaling.
	Http HttpScaleRulePtrInput `pulumi:"http"`
	// Scale Rule Name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ScaleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRule)(nil)).Elem()
}

func (i ScaleRuleArgs) ToScaleRuleOutput() ScaleRuleOutput {
	return i.ToScaleRuleOutputWithContext(context.Background())
}

func (i ScaleRuleArgs) ToScaleRuleOutputWithContext(ctx context.Context) ScaleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleOutput)
}

// ScaleRuleArrayInput is an input type that accepts ScaleRuleArray and ScaleRuleArrayOutput values.
// You can construct a concrete instance of `ScaleRuleArrayInput` via:
//
//	ScaleRuleArray{ ScaleRuleArgs{...} }
type ScaleRuleArrayInput interface {
	pulumi.Input

	ToScaleRuleArrayOutput() ScaleRuleArrayOutput
	ToScaleRuleArrayOutputWithContext(context.Context) ScaleRuleArrayOutput
}

type ScaleRuleArray []ScaleRuleInput

func (ScaleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRule)(nil)).Elem()
}

func (i ScaleRuleArray) ToScaleRuleArrayOutput() ScaleRuleArrayOutput {
	return i.ToScaleRuleArrayOutputWithContext(context.Background())
}

func (i ScaleRuleArray) ToScaleRuleArrayOutputWithContext(ctx context.Context) ScaleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleArrayOutput)
}

// Container App container scaling rule.
type ScaleRuleOutput struct{ *pulumi.OutputState }

func (ScaleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRule)(nil)).Elem()
}

func (o ScaleRuleOutput) ToScaleRuleOutput() ScaleRuleOutput {
	return o
}

func (o ScaleRuleOutput) ToScaleRuleOutputWithContext(ctx context.Context) ScaleRuleOutput {
	return o
}

// Azure Queue based scaling.
func (o ScaleRuleOutput) AzureQueue() QueueScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *QueueScaleRule { return v.AzureQueue }).(QueueScaleRulePtrOutput)
}

// Custom scale rule.
func (o ScaleRuleOutput) Custom() CustomScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *CustomScaleRule { return v.Custom }).(CustomScaleRulePtrOutput)
}

// HTTP requests based scaling.
func (o ScaleRuleOutput) Http() HttpScaleRulePtrOutput {
	return o.ApplyT(func(v ScaleRule) *HttpScaleRule { return v.Http }).(HttpScaleRulePtrOutput)
}

// Scale Rule Name
func (o ScaleRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScaleRuleArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRule)(nil)).Elem()
}

func (o ScaleRuleArrayOutput) ToScaleRuleArrayOutput() ScaleRuleArrayOutput {
	return o
}

func (o ScaleRuleArrayOutput) ToScaleRuleArrayOutputWithContext(ctx context.Context) ScaleRuleArrayOutput {
	return o
}

func (o ScaleRuleArrayOutput) Index(i pulumi.IntInput) ScaleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRule {
		return vs[0].([]ScaleRule)[vs[1].(int)]
	}).(ScaleRuleOutput)
}

// Auth Secrets for Container App Scale Rule
type ScaleRuleAuth struct {
	// Name of the Container App secret from which to pull the auth params.
	SecretRef *string `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter *string `pulumi:"triggerParameter"`
}

// ScaleRuleAuthInput is an input type that accepts ScaleRuleAuthArgs and ScaleRuleAuthOutput values.
// You can construct a concrete instance of `ScaleRuleAuthInput` via:
//
//	ScaleRuleAuthArgs{...}
type ScaleRuleAuthInput interface {
	pulumi.Input

	ToScaleRuleAuthOutput() ScaleRuleAuthOutput
	ToScaleRuleAuthOutputWithContext(context.Context) ScaleRuleAuthOutput
}

// Auth Secrets for Container App Scale Rule
type ScaleRuleAuthArgs struct {
	// Name of the Container App secret from which to pull the auth params.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter pulumi.StringPtrInput `pulumi:"triggerParameter"`
}

func (ScaleRuleAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuth)(nil)).Elem()
}

func (i ScaleRuleAuthArgs) ToScaleRuleAuthOutput() ScaleRuleAuthOutput {
	return i.ToScaleRuleAuthOutputWithContext(context.Background())
}

func (i ScaleRuleAuthArgs) ToScaleRuleAuthOutputWithContext(ctx context.Context) ScaleRuleAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAuthOutput)
}

// ScaleRuleAuthArrayInput is an input type that accepts ScaleRuleAuthArray and ScaleRuleAuthArrayOutput values.
// You can construct a concrete instance of `ScaleRuleAuthArrayInput` via:
//
//	ScaleRuleAuthArray{ ScaleRuleAuthArgs{...} }
type ScaleRuleAuthArrayInput interface {
	pulumi.Input

	ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput
	ToScaleRuleAuthArrayOutputWithContext(context.Context) ScaleRuleAuthArrayOutput
}

type ScaleRuleAuthArray []ScaleRuleAuthInput

func (ScaleRuleAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuth)(nil)).Elem()
}

func (i ScaleRuleAuthArray) ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput {
	return i.ToScaleRuleAuthArrayOutputWithContext(context.Background())
}

func (i ScaleRuleAuthArray) ToScaleRuleAuthArrayOutputWithContext(ctx context.Context) ScaleRuleAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleRuleAuthArrayOutput)
}

// Auth Secrets for Container App Scale Rule
type ScaleRuleAuthOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuth)(nil)).Elem()
}

func (o ScaleRuleAuthOutput) ToScaleRuleAuthOutput() ScaleRuleAuthOutput {
	return o
}

func (o ScaleRuleAuthOutput) ToScaleRuleAuthOutputWithContext(ctx context.Context) ScaleRuleAuthOutput {
	return o
}

// Name of the Container App secret from which to pull the auth params.
func (o ScaleRuleAuthOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuth) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Trigger Parameter that uses the secret
func (o ScaleRuleAuthOutput) TriggerParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuth) *string { return v.TriggerParameter }).(pulumi.StringPtrOutput)
}

type ScaleRuleAuthArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuth)(nil)).Elem()
}

func (o ScaleRuleAuthArrayOutput) ToScaleRuleAuthArrayOutput() ScaleRuleAuthArrayOutput {
	return o
}

func (o ScaleRuleAuthArrayOutput) ToScaleRuleAuthArrayOutputWithContext(ctx context.Context) ScaleRuleAuthArrayOutput {
	return o
}

func (o ScaleRuleAuthArrayOutput) Index(i pulumi.IntInput) ScaleRuleAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAuth {
		return vs[0].([]ScaleRuleAuth)[vs[1].(int)]
	}).(ScaleRuleAuthOutput)
}

// Auth Secrets for Container App Scale Rule
type ScaleRuleAuthResponse struct {
	// Name of the Container App secret from which to pull the auth params.
	SecretRef *string `pulumi:"secretRef"`
	// Trigger Parameter that uses the secret
	TriggerParameter *string `pulumi:"triggerParameter"`
}

// Auth Secrets for Container App Scale Rule
type ScaleRuleAuthResponseOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleAuthResponse)(nil)).Elem()
}

func (o ScaleRuleAuthResponseOutput) ToScaleRuleAuthResponseOutput() ScaleRuleAuthResponseOutput {
	return o
}

func (o ScaleRuleAuthResponseOutput) ToScaleRuleAuthResponseOutputWithContext(ctx context.Context) ScaleRuleAuthResponseOutput {
	return o
}

// Name of the Container App secret from which to pull the auth params.
func (o ScaleRuleAuthResponseOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuthResponse) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Trigger Parameter that uses the secret
func (o ScaleRuleAuthResponseOutput) TriggerParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleAuthResponse) *string { return v.TriggerParameter }).(pulumi.StringPtrOutput)
}

type ScaleRuleAuthResponseArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleAuthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleAuthResponse)(nil)).Elem()
}

func (o ScaleRuleAuthResponseArrayOutput) ToScaleRuleAuthResponseArrayOutput() ScaleRuleAuthResponseArrayOutput {
	return o
}

func (o ScaleRuleAuthResponseArrayOutput) ToScaleRuleAuthResponseArrayOutputWithContext(ctx context.Context) ScaleRuleAuthResponseArrayOutput {
	return o
}

func (o ScaleRuleAuthResponseArrayOutput) Index(i pulumi.IntInput) ScaleRuleAuthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleAuthResponse {
		return vs[0].([]ScaleRuleAuthResponse)[vs[1].(int)]
	}).(ScaleRuleAuthResponseOutput)
}

// Container App container scaling rule.
type ScaleRuleResponse struct {
	// Azure Queue based scaling.
	AzureQueue *QueueScaleRuleResponse `pulumi:"azureQueue"`
	// Custom scale rule.
	Custom *CustomScaleRuleResponse `pulumi:"custom"`
	// HTTP requests based scaling.
	Http *HttpScaleRuleResponse `pulumi:"http"`
	// Scale Rule Name
	Name *string `pulumi:"name"`
}

// Container App container scaling rule.
type ScaleRuleResponseOutput struct{ *pulumi.OutputState }

func (ScaleRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScaleRuleResponse)(nil)).Elem()
}

func (o ScaleRuleResponseOutput) ToScaleRuleResponseOutput() ScaleRuleResponseOutput {
	return o
}

func (o ScaleRuleResponseOutput) ToScaleRuleResponseOutputWithContext(ctx context.Context) ScaleRuleResponseOutput {
	return o
}

// Azure Queue based scaling.
func (o ScaleRuleResponseOutput) AzureQueue() QueueScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *QueueScaleRuleResponse { return v.AzureQueue }).(QueueScaleRuleResponsePtrOutput)
}

// Custom scale rule.
func (o ScaleRuleResponseOutput) Custom() CustomScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *CustomScaleRuleResponse { return v.Custom }).(CustomScaleRuleResponsePtrOutput)
}

// HTTP requests based scaling.
func (o ScaleRuleResponseOutput) Http() HttpScaleRuleResponsePtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *HttpScaleRuleResponse { return v.Http }).(HttpScaleRuleResponsePtrOutput)
}

// Scale Rule Name
func (o ScaleRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScaleRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ScaleRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ScaleRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScaleRuleResponse)(nil)).Elem()
}

func (o ScaleRuleResponseArrayOutput) ToScaleRuleResponseArrayOutput() ScaleRuleResponseArrayOutput {
	return o
}

func (o ScaleRuleResponseArrayOutput) ToScaleRuleResponseArrayOutputWithContext(ctx context.Context) ScaleRuleResponseArrayOutput {
	return o
}

func (o ScaleRuleResponseArrayOutput) Index(i pulumi.IntInput) ScaleRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScaleRuleResponse {
		return vs[0].([]ScaleRuleResponse)[vs[1].(int)]
	}).(ScaleRuleResponseOutput)
}

// Container App Secret.
type Secret struct {
	// Secret Name.
	Name *string `pulumi:"name"`
	// Secret Value.
	Value *string `pulumi:"value"`
}

// SecretInput is an input type that accepts SecretArgs and SecretOutput values.
// You can construct a concrete instance of `SecretInput` via:
//
//	SecretArgs{...}
type SecretInput interface {
	pulumi.Input

	ToSecretOutput() SecretOutput
	ToSecretOutputWithContext(context.Context) SecretOutput
}

// Container App Secret.
type SecretArgs struct {
	// Secret Name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Secret Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (i SecretArgs) ToSecretOutput() SecretOutput {
	return i.ToSecretOutputWithContext(context.Background())
}

func (i SecretArgs) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretOutput)
}

// SecretArrayInput is an input type that accepts SecretArray and SecretArrayOutput values.
// You can construct a concrete instance of `SecretArrayInput` via:
//
//	SecretArray{ SecretArgs{...} }
type SecretArrayInput interface {
	pulumi.Input

	ToSecretArrayOutput() SecretArrayOutput
	ToSecretArrayOutputWithContext(context.Context) SecretArrayOutput
}

type SecretArray []SecretInput

func (SecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (i SecretArray) ToSecretArrayOutput() SecretArrayOutput {
	return i.ToSecretArrayOutputWithContext(context.Background())
}

func (i SecretArray) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretArrayOutput)
}

// Container App Secret.
type SecretOutput struct{ *pulumi.OutputState }

func (SecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Secret)(nil)).Elem()
}

func (o SecretOutput) ToSecretOutput() SecretOutput {
	return o
}

func (o SecretOutput) ToSecretOutputWithContext(ctx context.Context) SecretOutput {
	return o
}

// Secret Name.
func (o SecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Secret Value.
func (o SecretOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Secret) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretArrayOutput struct{ *pulumi.OutputState }

func (SecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Secret)(nil)).Elem()
}

func (o SecretArrayOutput) ToSecretArrayOutput() SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) ToSecretArrayOutputWithContext(ctx context.Context) SecretArrayOutput {
	return o
}

func (o SecretArrayOutput) Index(i pulumi.IntInput) SecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Secret {
		return vs[0].([]Secret)[vs[1].(int)]
	}).(SecretOutput)
}

// Container App Secret.
type SecretResponse struct {
	// Secret Name.
	Name *string `pulumi:"name"`
}

// Container App Secret.
type SecretResponseOutput struct{ *pulumi.OutputState }

func (SecretResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretResponse)(nil)).Elem()
}

func (o SecretResponseOutput) ToSecretResponseOutput() SecretResponseOutput {
	return o
}

func (o SecretResponseOutput) ToSecretResponseOutputWithContext(ctx context.Context) SecretResponseOutput {
	return o
}

// Secret Name.
func (o SecretResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SecretResponseArrayOutput struct{ *pulumi.OutputState }

func (SecretResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretResponse)(nil)).Elem()
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutput() SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) ToSecretResponseArrayOutputWithContext(ctx context.Context) SecretResponseArrayOutput {
	return o
}

func (o SecretResponseArrayOutput) Index(i pulumi.IntInput) SecretResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretResponse {
		return vs[0].([]SecretResponse)[vs[1].(int)]
	}).(SecretResponseOutput)
}

// Configuration of an App Service app.
type SiteConfig struct {
	// Flag to use Managed Identity Creds for ACR pull
	AcrUseManagedIdentityCreds *bool `pulumi:"acrUseManagedIdentityCreds"`
	// If using user managed identity, the user managed identity ClientId
	AcrUserManagedIdentityID *string `pulumi:"acrUserManagedIdentityID"`
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfig `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// List of Azure Storage Accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValue `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *Experiments `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Maximum number of workers that a site can scale out to.
	// This setting only applies to the Consumption and Elastic Premium Plans
	FunctionAppScaleLimit *int `pulumi:"functionAppScaleLimit"`
	// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
	// the ScaleController will not monitor event sources directly, but will instead call to the
	// runtime to get scale status.
	FunctionsRuntimeScaleMonitoringEnabled *bool `pulumi:"functionsRuntimeScaleMonitoringEnabled"`
	// Handler mappings.
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Identity to use for Key Vault Reference authentication.
	KeyVaultReferenceIdentity *string `pulumi:"keyVaultReferenceIdentity"`
	// Site limits.
	Limits *SiteLimits `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *SiteLoadBalancing `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode *ManagedPipelineMode `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Number of minimum instance count for a site
	// This setting only applies to the Elastic Plans
	MinimumElasticInstanceCount *int `pulumi:"minimumElasticInstanceCount"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Property to allow or block all public traffic.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettings `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestriction `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
	WebsiteTimeZone *string `pulumi:"websiteTimeZone"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// Defaults sets the appropriate defaults for SiteConfig
func (val *SiteConfig) Defaults() *SiteConfig {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Http20Enabled) {
		http20Enabled_ := true
		tmp.Http20Enabled = &http20Enabled_
	}
	if isZero(tmp.LocalMySqlEnabled) {
		localMySqlEnabled_ := false
		tmp.LocalMySqlEnabled = &localMySqlEnabled_
	}
	if isZero(tmp.NetFrameworkVersion) {
		netFrameworkVersion_ := "v4.6"
		tmp.NetFrameworkVersion = &netFrameworkVersion_
	}
	return &tmp
}

// SiteConfigInput is an input type that accepts SiteConfigArgs and SiteConfigOutput values.
// You can construct a concrete instance of `SiteConfigInput` via:
//
//	SiteConfigArgs{...}
type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(context.Context) SiteConfigOutput
}

// Configuration of an App Service app.
type SiteConfigArgs struct {
	// Flag to use Managed Identity Creds for ACR pull
	AcrUseManagedIdentityCreds pulumi.BoolPtrInput `pulumi:"acrUseManagedIdentityCreds"`
	// If using user managed identity, the user managed identity ClientId
	AcrUserManagedIdentityID pulumi.StringPtrInput `pulumi:"acrUserManagedIdentityID"`
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoPtrInput `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig ApiManagementConfigPtrInput `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairArrayInput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesPtrInput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// List of Azure Storage Accounts.
	AzureStorageAccounts AzureStorageInfoValueMapInput `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings ConnStringInfoArrayInput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrInput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsPtrInput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Maximum number of workers that a site can scale out to.
	// This setting only applies to the Consumption and Elastic Premium Plans
	FunctionAppScaleLimit pulumi.IntPtrInput `pulumi:"functionAppScaleLimit"`
	// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
	// the ScaleController will not monitor event sources directly, but will instead call to the
	// runtime to get scale status.
	FunctionsRuntimeScaleMonitoringEnabled pulumi.BoolPtrInput `pulumi:"functionsRuntimeScaleMonitoringEnabled"`
	// Handler mappings.
	HandlerMappings HandlerMappingArrayInput `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrInput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrInput `pulumi:"javaVersion"`
	// Identity to use for Key Vault Reference authentication.
	KeyVaultReferenceIdentity pulumi.StringPtrInput `pulumi:"keyVaultReferenceIdentity"`
	// Site limits.
	Limits SiteLimitsPtrInput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing SiteLoadBalancingPtrInput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode ManagedPipelineModePtrInput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// Number of minimum instance count for a site
	// This setting only applies to the Elastic Plans
	MinimumElasticInstanceCount pulumi.IntPtrInput `pulumi:"minimumElasticInstanceCount"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion pulumi.StringPtrInput `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Property to allow or block all public traffic.
	PublicNetworkAccess pulumi.StringPtrInput `pulumi:"publicNetworkAccess"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsPtrInput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrInput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionArrayInput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrInput `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationArrayInput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount pulumi.IntPtrInput `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput `pulumi:"webSocketsEnabled"`
	// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
	WebsiteTimeZone pulumi.StringPtrInput `pulumi:"websiteTimeZone"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput `pulumi:"xManagedServiceIdentityId"`
}

// Defaults sets the appropriate defaults for SiteConfigArgs
func (val *SiteConfigArgs) Defaults() *SiteConfigArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Http20Enabled) {
		tmp.Http20Enabled = pulumi.BoolPtr(true)
	}
	if isZero(tmp.LocalMySqlEnabled) {
		tmp.LocalMySqlEnabled = pulumi.BoolPtr(false)
	}
	if isZero(tmp.NetFrameworkVersion) {
		tmp.NetFrameworkVersion = pulumi.StringPtr("v4.6")
	}
	return &tmp
}
func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (i SiteConfigArgs) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

func (i SiteConfigArgs) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i SiteConfigArgs) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput).ToSiteConfigPtrOutputWithContext(ctx)
}

// SiteConfigPtrInput is an input type that accepts SiteConfigArgs, SiteConfigPtr and SiteConfigPtrOutput values.
// You can construct a concrete instance of `SiteConfigPtrInput` via:
//
//	        SiteConfigArgs{...}
//
//	or:
//
//	        nil
type SiteConfigPtrInput interface {
	pulumi.Input

	ToSiteConfigPtrOutput() SiteConfigPtrOutput
	ToSiteConfigPtrOutputWithContext(context.Context) SiteConfigPtrOutput
}

type siteConfigPtrType SiteConfigArgs

func SiteConfigPtr(v *SiteConfigArgs) SiteConfigPtrInput {
	return (*siteConfigPtrType)(v)
}

func (*siteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return i.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (i *siteConfigPtrType) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigOutput struct{ *pulumi.OutputState }

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil)).Elem()
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o.ToSiteConfigPtrOutputWithContext(context.Background())
}

func (o SiteConfigOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteConfig) *SiteConfig {
		return &v
	}).(SiteConfigPtrOutput)
}

// Flag to use Managed Identity Creds for ACR pull
func (o SiteConfigOutput) AcrUseManagedIdentityCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AcrUseManagedIdentityCreds }).(pulumi.BoolPtrOutput)
}

// If using user managed identity, the user managed identity ClientId
func (o SiteConfigOutput) AcrUserManagedIdentityID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AcrUserManagedIdentityID }).(pulumi.StringPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiDefinitionInfo { return v.ApiDefinition }).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v SiteConfig) *ApiManagementConfig { return v.ApiManagementConfig }).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v SiteConfig) []NameValuePair { return v.AppSettings }).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v SiteConfig) *AutoHealRules { return v.AutoHealRules }).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// List of Azure Storage Accounts.
func (o SiteConfigOutput) AzureStorageAccounts() AzureStorageInfoValueMapOutput {
	return o.ApplyT(func(v SiteConfig) map[string]AzureStorageInfoValue { return v.AzureStorageAccounts }).(AzureStorageInfoValueMapOutput)
}

// Connection strings.
func (o SiteConfigOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v SiteConfig) []ConnStringInfo { return v.ConnectionStrings }).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *CorsSettings { return v.Cors }).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfig) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *Experiments { return v.Experiments }).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Maximum number of workers that a site can scale out to.
// This setting only applies to the Consumption and Elastic Premium Plans
func (o SiteConfigOutput) FunctionAppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.FunctionAppScaleLimit }).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
// the ScaleController will not monitor event sources directly, but will instead call to the
// runtime to get scale status.
func (o SiteConfigOutput) FunctionsRuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.FunctionsRuntimeScaleMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// Handler mappings.
func (o SiteConfigOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v SiteConfig) []HandlerMapping { return v.HandlerMappings }).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.IpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Identity to use for Key Vault Reference authentication.
func (o SiteConfigOutput) KeyVaultReferenceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.KeyVaultReferenceIdentity }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteLimits { return v.Limits }).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigOutput) LoadBalancing() SiteLoadBalancingPtrOutput {
	return o.ApplyT(func(v SiteConfig) *SiteLoadBalancing { return v.LoadBalancing }).(SiteLoadBalancingPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigOutput) ManagedPipelineMode() ManagedPipelineModePtrOutput {
	return o.ApplyT(func(v SiteConfig) *ManagedPipelineMode { return v.ManagedPipelineMode }).(ManagedPipelineModePtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// Number of minimum instance count for a site
// This setting only applies to the Elastic Plans
func (o SiteConfigOutput) MinimumElasticInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.MinimumElasticInstanceCount }).(pulumi.IntPtrOutput)
}

// .NET Framework version.
func (o SiteConfigOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Property to allow or block all public traffic.
func (o SiteConfigOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v SiteConfig) *PushSettings { return v.Push }).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v SiteConfig) []IpSecurityRestriction { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v SiteConfig) []VirtualApplication { return v.VirtualApplications }).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfig) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
func (o SiteConfigOutput) WebsiteTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.WebsiteTimeZone }).(pulumi.StringPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfig) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfig) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigPtrOutput struct{ *pulumi.OutputState }

func (SiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfig)(nil)).Elem()
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutput() SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) ToSiteConfigPtrOutputWithContext(ctx context.Context) SiteConfigPtrOutput {
	return o
}

func (o SiteConfigPtrOutput) Elem() SiteConfigOutput {
	return o.ApplyT(func(v *SiteConfig) SiteConfig {
		if v != nil {
			return *v
		}
		var ret SiteConfig
		return ret
	}).(SiteConfigOutput)
}

// Flag to use Managed Identity Creds for ACR pull
func (o SiteConfigPtrOutput) AcrUseManagedIdentityCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AcrUseManagedIdentityCreds
	}).(pulumi.BoolPtrOutput)
}

// If using user managed identity, the user managed identity ClientId
func (o SiteConfigPtrOutput) AcrUserManagedIdentityID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AcrUserManagedIdentityID
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigPtrOutput) ApiDefinition() ApiDefinitionInfoPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiDefinitionInfo {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoPtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigPtrOutput) ApiManagementConfig() ApiManagementConfigPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ApiManagementConfig {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigPtrOutput)
}

// App command line to launch.
func (o SiteConfigPtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigPtrOutput) AppSettings() NameValuePairArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []NameValuePair {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigPtrOutput) AutoHealRules() AutoHealRulesPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *AutoHealRules {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesPtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// List of Azure Storage Accounts.
func (o SiteConfigPtrOutput) AzureStorageAccounts() AzureStorageInfoValueMapOutput {
	return o.ApplyT(func(v *SiteConfig) map[string]AzureStorageInfoValue {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccounts
	}).(AzureStorageInfoValueMapOutput)
}

// Connection strings.
func (o SiteConfigPtrOutput) ConnectionStrings() ConnStringInfoArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []ConnStringInfo {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigPtrOutput) Cors() CorsSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *CorsSettings {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsPtrOutput)
}

// Default documents.
func (o SiteConfigPtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigPtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigPtrOutput) Experiments() ExperimentsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *Experiments {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsPtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Maximum number of workers that a site can scale out to.
// This setting only applies to the Consumption and Elastic Premium Plans
func (o SiteConfigPtrOutput) FunctionAppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.FunctionAppScaleLimit
	}).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
// the ScaleController will not monitor event sources directly, but will instead call to the
// runtime to get scale status.
func (o SiteConfigPtrOutput) FunctionsRuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.FunctionsRuntimeScaleMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// Handler mappings.
func (o SiteConfigPtrOutput) HandlerMappings() HandlerMappingArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []HandlerMapping {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingArrayOutput)
}

// Health check path
func (o SiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigPtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigPtrOutput) IpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// Java container.
func (o SiteConfigPtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigPtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigPtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Identity to use for Key Vault Reference authentication.
func (o SiteConfigPtrOutput) KeyVaultReferenceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultReferenceIdentity
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigPtrOutput) Limits() SiteLimitsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteLimits {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsPtrOutput)
}

// Linux App Framework and version
func (o SiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigPtrOutput) LoadBalancing() SiteLoadBalancingPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *SiteLoadBalancing {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(SiteLoadBalancingPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigPtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigPtrOutput) ManagedPipelineMode() ManagedPipelineModePtrOutput {
	return o.ApplyT(func(v *SiteConfig) *ManagedPipelineMode {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(ManagedPipelineModePtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigPtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// Number of minimum instance count for a site
// This setting only applies to the Elastic Plans
func (o SiteConfigPtrOutput) MinimumElasticInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.MinimumElasticInstanceCount
	}).(pulumi.IntPtrOutput)
}

// .NET Framework version.
func (o SiteConfigPtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigPtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigPtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigPtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigPtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Property to allow or block all public traffic.
func (o SiteConfigPtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigPtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigPtrOutput) Push() PushSettingsPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *PushSettings {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsPtrOutput)
}

// Version of Python.
func (o SiteConfigPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigPtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigPtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []IpSecurityRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigPtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigPtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigPtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigPtrOutput) VirtualApplications() VirtualApplicationArrayOutput {
	return o.ApplyT(func(v *SiteConfig) []VirtualApplication {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationArrayOutput)
}

// Virtual Network name.
func (o SiteConfigPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigPtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigPtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigPtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
func (o SiteConfigPtrOutput) WebsiteTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteTimeZone
	}).(pulumi.StringPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigPtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigPtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Configuration of an App Service app.
type SiteConfigResponse struct {
	// Flag to use Managed Identity Creds for ACR pull
	AcrUseManagedIdentityCreds *bool `pulumi:"acrUseManagedIdentityCreds"`
	// If using user managed identity, the user managed identity ClientId
	AcrUserManagedIdentityID *string `pulumi:"acrUserManagedIdentityID"`
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// Azure API management settings linked to the app.
	ApiManagementConfig *ApiManagementConfigResponse `pulumi:"apiManagementConfig"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// List of Azure Storage Accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValueResponse `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Maximum number of workers that a site can scale out to.
	// This setting only applies to the Consumption and Elastic Premium Plans
	FunctionAppScaleLimit *int `pulumi:"functionAppScaleLimit"`
	// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
	// the ScaleController will not monitor event sources directly, but will instead call to the
	// runtime to get scale status.
	FunctionsRuntimeScaleMonitoringEnabled *bool `pulumi:"functionsRuntimeScaleMonitoringEnabled"`
	// Handler mappings.
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// Health check path
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Identity to use for Key Vault Reference authentication.
	KeyVaultReferenceIdentity *string `pulumi:"keyVaultReferenceIdentity"`
	// Site limits.
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Number of minimum instance count for a site
	// This setting only applies to the Elastic Plans
	MinimumElasticInstanceCount *int `pulumi:"minimumElasticInstanceCount"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Version of PowerShell.
	PowerShellVersion *string `pulumi:"powerShellVersion"`
	// Number of preWarmed instances.
	// This setting only applies to the Consumption and Elastic Plans
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Property to allow or block all public traffic.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
	VnetPrivatePortsCount *int `pulumi:"vnetPrivatePortsCount"`
	// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
	WebsiteTimeZone *string `pulumi:"websiteTimeZone"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// Defaults sets the appropriate defaults for SiteConfigResponse
func (val *SiteConfigResponse) Defaults() *SiteConfigResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.Http20Enabled) {
		http20Enabled_ := true
		tmp.Http20Enabled = &http20Enabled_
	}
	if isZero(tmp.LocalMySqlEnabled) {
		localMySqlEnabled_ := false
		tmp.LocalMySqlEnabled = &localMySqlEnabled_
	}
	if isZero(tmp.NetFrameworkVersion) {
		netFrameworkVersion_ := "v4.6"
		tmp.NetFrameworkVersion = &netFrameworkVersion_
	}
	return &tmp
}

// Configuration of an App Service app.
type SiteConfigResponseOutput struct{ *pulumi.OutputState }

func (SiteConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutput() SiteConfigResponseOutput {
	return o
}

func (o SiteConfigResponseOutput) ToSiteConfigResponseOutputWithContext(ctx context.Context) SiteConfigResponseOutput {
	return o
}

// Flag to use Managed Identity Creds for ACR pull
func (o SiteConfigResponseOutput) AcrUseManagedIdentityCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AcrUseManagedIdentityCreds }).(pulumi.BoolPtrOutput)
}

// If using user managed identity, the user managed identity ClientId
func (o SiteConfigResponseOutput) AcrUserManagedIdentityID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AcrUserManagedIdentityID }).(pulumi.StringPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponseOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiDefinitionInfoResponse { return v.ApiDefinition }).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponseOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ApiManagementConfigResponse { return v.ApiManagementConfig }).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponseOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AppCommandLine }).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponseOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []NameValuePairResponse { return v.AppSettings }).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.AutoHealEnabled }).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponseOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *AutoHealRulesResponse { return v.AutoHealRules }).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponseOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// List of Azure Storage Accounts.
func (o SiteConfigResponseOutput) AzureStorageAccounts() AzureStorageInfoValueResponseMapOutput {
	return o.ApplyT(func(v SiteConfigResponse) map[string]AzureStorageInfoValueResponse { return v.AzureStorageAccounts }).(AzureStorageInfoValueResponseMapOutput)
}

// Connection strings.
func (o SiteConfigResponseOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []ConnStringInfoResponse { return v.ConnectionStrings }).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponseOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *CorsSettingsResponse { return v.Cors }).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponseOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []string { return v.DefaultDocuments }).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.DetailedErrorLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponseOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.DocumentRoot }).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponseOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *ExperimentsResponse { return v.Experiments }).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponseOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Maximum number of workers that a site can scale out to.
// This setting only applies to the Consumption and Elastic Premium Plans
func (o SiteConfigResponseOutput) FunctionAppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.FunctionAppScaleLimit }).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
// the ScaleController will not monitor event sources directly, but will instead call to the
// runtime to get scale status.
func (o SiteConfigResponseOutput) FunctionsRuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.FunctionsRuntimeScaleMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponseOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []HandlerMappingResponse { return v.HandlerMappings }).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponseOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponseOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Http20Enabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.HttpLoggingEnabled }).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponseOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.IpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponseOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainer }).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponseOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaContainerVersion }).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponseOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.JavaVersion }).(pulumi.StringPtrOutput)
}

// Identity to use for Key Vault Reference authentication.
func (o SiteConfigResponseOutput) KeyVaultReferenceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.KeyVaultReferenceIdentity }).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponseOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *SiteLimitsResponse { return v.Limits }).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponseOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponseOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.LoadBalancing }).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.LocalMySqlEnabled }).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponseOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.LogsDirectorySizeLimit }).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponseOutput) MachineKey() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v SiteConfigResponse) SiteMachineKeyResponse { return v.MachineKey }).(SiteMachineKeyResponseOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponseOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ManagedPipelineMode }).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponseOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.ManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponseOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// Number of minimum instance count for a site
// This setting only applies to the Elastic Plans
func (o SiteConfigResponseOutput) MinimumElasticInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.MinimumElasticInstanceCount }).(pulumi.IntPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponseOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponseOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.NodeVersion }).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponseOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.NumberOfWorkers }).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponseOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PhpVersion }).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponseOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PowerShellVersion }).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponseOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Property to allow or block all public traffic.
func (o SiteConfigResponseOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponseOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PublishingUsername }).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponseOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *PushSettingsResponse { return v.Push }).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponseOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RemoteDebuggingEnabled }).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponseOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RemoteDebuggingVersion }).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.RequestTracingEnabled }).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponseOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.RequestTracingExpirationTime }).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []IpSecurityRestrictionResponse { return v.ScmIpSecurityRestrictions }).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponseOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.ScmIpSecurityRestrictionsUseMain }).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponseOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponseOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponseOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.TracingOptions }).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponseOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v SiteConfigResponse) []VirtualApplicationResponse { return v.VirtualApplications }).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponseOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponseOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.VnetPrivatePortsCount }).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponseOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponseOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *bool { return v.WebSocketsEnabled }).(pulumi.BoolPtrOutput)
}

// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
func (o SiteConfigResponseOutput) WebsiteTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.WebsiteTimeZone }).(pulumi.StringPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponseOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *string { return v.WindowsFxVersion }).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponseOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteConfigResponse) *int { return v.XManagedServiceIdentityId }).(pulumi.IntPtrOutput)
}

type SiteConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteConfigResponse)(nil)).Elem()
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutput() SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) ToSiteConfigResponsePtrOutputWithContext(ctx context.Context) SiteConfigResponsePtrOutput {
	return o
}

func (o SiteConfigResponsePtrOutput) Elem() SiteConfigResponseOutput {
	return o.ApplyT(func(v *SiteConfigResponse) SiteConfigResponse {
		if v != nil {
			return *v
		}
		var ret SiteConfigResponse
		return ret
	}).(SiteConfigResponseOutput)
}

// Flag to use Managed Identity Creds for ACR pull
func (o SiteConfigResponsePtrOutput) AcrUseManagedIdentityCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AcrUseManagedIdentityCreds
	}).(pulumi.BoolPtrOutput)
}

// If using user managed identity, the user managed identity ClientId
func (o SiteConfigResponsePtrOutput) AcrUserManagedIdentityID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AcrUserManagedIdentityID
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// Information about the formal API definition for the app.
func (o SiteConfigResponsePtrOutput) ApiDefinition() ApiDefinitionInfoResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiDefinitionInfoResponse {
		if v == nil {
			return nil
		}
		return v.ApiDefinition
	}).(ApiDefinitionInfoResponsePtrOutput)
}

// Azure API management settings linked to the app.
func (o SiteConfigResponsePtrOutput) ApiManagementConfig() ApiManagementConfigResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ApiManagementConfigResponse {
		if v == nil {
			return nil
		}
		return v.ApiManagementConfig
	}).(ApiManagementConfigResponsePtrOutput)
}

// App command line to launch.
func (o SiteConfigResponsePtrOutput) AppCommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppCommandLine
	}).(pulumi.StringPtrOutput)
}

// Application settings.
func (o SiteConfigResponsePtrOutput) AppSettings() NameValuePairResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []NameValuePairResponse {
		if v == nil {
			return nil
		}
		return v.AppSettings
	}).(NameValuePairResponseArrayOutput)
}

// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) AutoHealEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AutoHealEnabled
	}).(pulumi.BoolPtrOutput)
}

// Auto Heal rules.
func (o SiteConfigResponsePtrOutput) AutoHealRules() AutoHealRulesResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *AutoHealRulesResponse {
		if v == nil {
			return nil
		}
		return v.AutoHealRules
	}).(AutoHealRulesResponsePtrOutput)
}

// Auto-swap slot name.
func (o SiteConfigResponsePtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// List of Azure Storage Accounts.
func (o SiteConfigResponsePtrOutput) AzureStorageAccounts() AzureStorageInfoValueResponseMapOutput {
	return o.ApplyT(func(v *SiteConfigResponse) map[string]AzureStorageInfoValueResponse {
		if v == nil {
			return nil
		}
		return v.AzureStorageAccounts
	}).(AzureStorageInfoValueResponseMapOutput)
}

// Connection strings.
func (o SiteConfigResponsePtrOutput) ConnectionStrings() ConnStringInfoResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []ConnStringInfoResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionStrings
	}).(ConnStringInfoResponseArrayOutput)
}

// Cross-Origin Resource Sharing (CORS) settings.
func (o SiteConfigResponsePtrOutput) Cors() CorsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *CorsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(CorsSettingsResponsePtrOutput)
}

// Default documents.
func (o SiteConfigResponsePtrOutput) DefaultDocuments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.DefaultDocuments
	}).(pulumi.StringArrayOutput)
}

// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) DetailedErrorLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedErrorLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Document root.
func (o SiteConfigResponsePtrOutput) DocumentRoot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.DocumentRoot
	}).(pulumi.StringPtrOutput)
}

// This is work around for polymorphic types.
func (o SiteConfigResponsePtrOutput) Experiments() ExperimentsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *ExperimentsResponse {
		if v == nil {
			return nil
		}
		return v.Experiments
	}).(ExperimentsResponsePtrOutput)
}

// State of FTP / FTPS service
func (o SiteConfigResponsePtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Maximum number of workers that a site can scale out to.
// This setting only applies to the Consumption and Elastic Premium Plans
func (o SiteConfigResponsePtrOutput) FunctionAppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.FunctionAppScaleLimit
	}).(pulumi.IntPtrOutput)
}

// Gets or sets a value indicating whether functions runtime scale monitoring is enabled. When enabled,
// the ScaleController will not monitor event sources directly, but will instead call to the
// runtime to get scale status.
func (o SiteConfigResponsePtrOutput) FunctionsRuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.FunctionsRuntimeScaleMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// Handler mappings.
func (o SiteConfigResponsePtrOutput) HandlerMappings() HandlerMappingResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []HandlerMappingResponse {
		if v == nil {
			return nil
		}
		return v.HandlerMappings
	}).(HandlerMappingResponseArrayOutput)
}

// Health check path
func (o SiteConfigResponsePtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Http20Enabled: configures a web site to allow clients to connect over http2.0
func (o SiteConfigResponsePtrOutput) Http20Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Http20Enabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) HttpLoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.HttpLoggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// IP security restrictions for main.
func (o SiteConfigResponsePtrOutput) IpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.IpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// Java container.
func (o SiteConfigResponsePtrOutput) JavaContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainer
	}).(pulumi.StringPtrOutput)
}

// Java container version.
func (o SiteConfigResponsePtrOutput) JavaContainerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaContainerVersion
	}).(pulumi.StringPtrOutput)
}

// Java version.
func (o SiteConfigResponsePtrOutput) JavaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.JavaVersion
	}).(pulumi.StringPtrOutput)
}

// Identity to use for Key Vault Reference authentication.
func (o SiteConfigResponsePtrOutput) KeyVaultReferenceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultReferenceIdentity
	}).(pulumi.StringPtrOutput)
}

// Site limits.
func (o SiteConfigResponsePtrOutput) Limits() SiteLimitsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteLimitsResponse {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(SiteLimitsResponsePtrOutput)
}

// Linux App Framework and version
func (o SiteConfigResponsePtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// Site load balancing.
func (o SiteConfigResponsePtrOutput) LoadBalancing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancing
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) LocalMySqlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.LocalMySqlEnabled
	}).(pulumi.BoolPtrOutput)
}

// HTTP logs directory size limit.
func (o SiteConfigResponsePtrOutput) LogsDirectorySizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LogsDirectorySizeLimit
	}).(pulumi.IntPtrOutput)
}

// Site MachineKey.
func (o SiteConfigResponsePtrOutput) MachineKey() SiteMachineKeyResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *SiteMachineKeyResponse {
		if v == nil {
			return nil
		}
		return &v.MachineKey
	}).(SiteMachineKeyResponsePtrOutput)
}

// Managed pipeline mode.
func (o SiteConfigResponsePtrOutput) ManagedPipelineMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ManagedPipelineMode
	}).(pulumi.StringPtrOutput)
}

// Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) ManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// MinTlsVersion: configures the minimum version of TLS required for SSL requests
func (o SiteConfigResponsePtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// Number of minimum instance count for a site
// This setting only applies to the Elastic Plans
func (o SiteConfigResponsePtrOutput) MinimumElasticInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinimumElasticInstanceCount
	}).(pulumi.IntPtrOutput)
}

// .NET Framework version.
func (o SiteConfigResponsePtrOutput) NetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// Version of Node.js.
func (o SiteConfigResponsePtrOutput) NodeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.NodeVersion
	}).(pulumi.StringPtrOutput)
}

// Number of workers.
func (o SiteConfigResponsePtrOutput) NumberOfWorkers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfWorkers
	}).(pulumi.IntPtrOutput)
}

// Version of PHP.
func (o SiteConfigResponsePtrOutput) PhpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PhpVersion
	}).(pulumi.StringPtrOutput)
}

// Version of PowerShell.
func (o SiteConfigResponsePtrOutput) PowerShellVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PowerShellVersion
	}).(pulumi.StringPtrOutput)
}

// Number of preWarmed instances.
// This setting only applies to the Consumption and Elastic Plans
func (o SiteConfigResponsePtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Property to allow or block all public traffic.
func (o SiteConfigResponsePtrOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetworkAccess
	}).(pulumi.StringPtrOutput)
}

// Publishing user name.
func (o SiteConfigResponsePtrOutput) PublishingUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublishingUsername
	}).(pulumi.StringPtrOutput)
}

// Push endpoint settings.
func (o SiteConfigResponsePtrOutput) Push() PushSettingsResponsePtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *PushSettingsResponse {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PushSettingsResponsePtrOutput)
}

// Version of Python.
func (o SiteConfigResponsePtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Remote debugging version.
func (o SiteConfigResponsePtrOutput) RemoteDebuggingVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RemoteDebuggingVersion
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) RequestTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestTracingEnabled
	}).(pulumi.BoolPtrOutput)
}

// Request tracing expiration time.
func (o SiteConfigResponsePtrOutput) RequestTracingExpirationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RequestTracingExpirationTime
	}).(pulumi.StringPtrOutput)
}

// IP security restrictions for scm.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictions() IpSecurityRestrictionResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []IpSecurityRestrictionResponse {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictions
	}).(IpSecurityRestrictionResponseArrayOutput)
}

// IP security restrictions for scm to use main.
func (o SiteConfigResponsePtrOutput) ScmIpSecurityRestrictionsUseMain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ScmIpSecurityRestrictionsUseMain
	}).(pulumi.BoolPtrOutput)
}

// ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
func (o SiteConfigResponsePtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// SCM type.
func (o SiteConfigResponsePtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Tracing options.
func (o SiteConfigResponsePtrOutput) TracingOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.TracingOptions
	}).(pulumi.StringPtrOutput)
}

// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Virtual applications.
func (o SiteConfigResponsePtrOutput) VirtualApplications() VirtualApplicationResponseArrayOutput {
	return o.ApplyT(func(v *SiteConfigResponse) []VirtualApplicationResponse {
		if v == nil {
			return nil
		}
		return v.VirtualApplications
	}).(VirtualApplicationResponseArrayOutput)
}

// Virtual Network name.
func (o SiteConfigResponsePtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// The number of private ports assigned to this app. These will be assigned dynamically on runtime.
func (o SiteConfigResponsePtrOutput) VnetPrivatePortsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.VnetPrivatePortsCount
	}).(pulumi.IntPtrOutput)
}

// Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o SiteConfigResponsePtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
func (o SiteConfigResponsePtrOutput) WebSocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *bool {
		if v == nil {
			return nil
		}
		return v.WebSocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Sets the time zone a site uses for generating timestamps. Compatible with Linux and Windows App Service. Setting the WEBSITE_TIME_ZONE app setting takes precedence over this config. For Linux, expects tz database values https://www.iana.org/time-zones (for a quick reference see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For Windows, expects one of the time zones listed under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones
func (o SiteConfigResponsePtrOutput) WebsiteTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WebsiteTimeZone
	}).(pulumi.StringPtrOutput)
}

// Xenon App Framework and version
func (o SiteConfigResponsePtrOutput) WindowsFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.WindowsFxVersion
	}).(pulumi.StringPtrOutput)
}

// Explicit Managed Service Identity Id
func (o SiteConfigResponsePtrOutput) XManagedServiceIdentityId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.XManagedServiceIdentityId
	}).(pulumi.IntPtrOutput)
}

// Metric limits set on an app.
type SiteLimits struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *float64 `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *float64 `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// SiteLimitsInput is an input type that accepts SiteLimitsArgs and SiteLimitsOutput values.
// You can construct a concrete instance of `SiteLimitsInput` via:
//
//	SiteLimitsArgs{...}
type SiteLimitsInput interface {
	pulumi.Input

	ToSiteLimitsOutput() SiteLimitsOutput
	ToSiteLimitsOutputWithContext(context.Context) SiteLimitsOutput
}

// Metric limits set on an app.
type SiteLimitsArgs struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb pulumi.Float64PtrInput `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb pulumi.Float64PtrInput `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu pulumi.Float64PtrInput `pulumi:"maxPercentageCpu"`
}

func (SiteLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (i SiteLimitsArgs) ToSiteLimitsOutput() SiteLimitsOutput {
	return i.ToSiteLimitsOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput)
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i SiteLimitsArgs) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsOutput).ToSiteLimitsPtrOutputWithContext(ctx)
}

// SiteLimitsPtrInput is an input type that accepts SiteLimitsArgs, SiteLimitsPtr and SiteLimitsPtrOutput values.
// You can construct a concrete instance of `SiteLimitsPtrInput` via:
//
//	        SiteLimitsArgs{...}
//
//	or:
//
//	        nil
type SiteLimitsPtrInput interface {
	pulumi.Input

	ToSiteLimitsPtrOutput() SiteLimitsPtrOutput
	ToSiteLimitsPtrOutputWithContext(context.Context) SiteLimitsPtrOutput
}

type siteLimitsPtrType SiteLimitsArgs

func SiteLimitsPtr(v *SiteLimitsArgs) SiteLimitsPtrInput {
	return (*siteLimitsPtrType)(v)
}

func (*siteLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return i.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (i *siteLimitsPtrType) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLimitsPtrOutput)
}

// Metric limits set on an app.
type SiteLimitsOutput struct{ *pulumi.OutputState }

func (SiteLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimits)(nil)).Elem()
}

func (o SiteLimitsOutput) ToSiteLimitsOutput() SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsOutputWithContext(ctx context.Context) SiteLimitsOutput {
	return o
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o.ToSiteLimitsPtrOutputWithContext(context.Background())
}

func (o SiteLimitsOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteLimits) *SiteLimits {
		return &v
	}).(SiteLimitsPtrOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxDiskSizeInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxMemoryInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimits) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsPtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimits)(nil)).Elem()
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutput() SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) ToSiteLimitsPtrOutputWithContext(ctx context.Context) SiteLimitsPtrOutput {
	return o
}

func (o SiteLimitsPtrOutput) Elem() SiteLimitsOutput {
	return o.ApplyT(func(v *SiteLimits) SiteLimits {
		if v != nil {
			return *v
		}
		var ret SiteLimits
		return ret
	}).(SiteLimitsOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsPtrOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsPtrOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsPtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// Metric limits set on an app.
type SiteLimitsResponse struct {
	// Maximum allowed disk size usage in MB.
	MaxDiskSizeInMb *float64 `pulumi:"maxDiskSizeInMb"`
	// Maximum allowed memory usage in MB.
	MaxMemoryInMb *float64 `pulumi:"maxMemoryInMb"`
	// Maximum allowed CPU usage percentage.
	MaxPercentageCpu *float64 `pulumi:"maxPercentageCpu"`
}

// Metric limits set on an app.
type SiteLimitsResponseOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutput() SiteLimitsResponseOutput {
	return o
}

func (o SiteLimitsResponseOutput) ToSiteLimitsResponseOutputWithContext(ctx context.Context) SiteLimitsResponseOutput {
	return o
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponseOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxDiskSizeInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponseOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxMemoryInMb }).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponseOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteLimitsResponse) *float64 { return v.MaxPercentageCpu }).(pulumi.Float64PtrOutput)
}

type SiteLimitsResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteLimitsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLimitsResponse)(nil)).Elem()
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutput() SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) ToSiteLimitsResponsePtrOutputWithContext(ctx context.Context) SiteLimitsResponsePtrOutput {
	return o
}

func (o SiteLimitsResponsePtrOutput) Elem() SiteLimitsResponseOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) SiteLimitsResponse {
		if v != nil {
			return *v
		}
		var ret SiteLimitsResponse
		return ret
	}).(SiteLimitsResponseOutput)
}

// Maximum allowed disk size usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxDiskSizeInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxDiskSizeInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed memory usage in MB.
func (o SiteLimitsResponsePtrOutput) MaxMemoryInMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemoryInMb
	}).(pulumi.Float64PtrOutput)
}

// Maximum allowed CPU usage percentage.
func (o SiteLimitsResponsePtrOutput) MaxPercentageCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SiteLimitsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPercentageCpu
	}).(pulumi.Float64PtrOutput)
}

// MachineKey of an app.
type SiteMachineKeyResponse struct {
	// Algorithm used for decryption.
	Decryption *string `pulumi:"decryption"`
	// Decryption key.
	DecryptionKey *string `pulumi:"decryptionKey"`
	// MachineKey validation.
	Validation *string `pulumi:"validation"`
	// Validation key.
	ValidationKey *string `pulumi:"validationKey"`
}

// MachineKey of an app.
type SiteMachineKeyResponseOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutput() SiteMachineKeyResponseOutput {
	return o
}

func (o SiteMachineKeyResponseOutput) ToSiteMachineKeyResponseOutputWithContext(ctx context.Context) SiteMachineKeyResponseOutput {
	return o
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponseOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Decryption }).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponseOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.DecryptionKey }).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponseOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.Validation }).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponseOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteMachineKeyResponse) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

type SiteMachineKeyResponsePtrOutput struct{ *pulumi.OutputState }

func (SiteMachineKeyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteMachineKeyResponse)(nil)).Elem()
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutput() SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) ToSiteMachineKeyResponsePtrOutputWithContext(ctx context.Context) SiteMachineKeyResponsePtrOutput {
	return o
}

func (o SiteMachineKeyResponsePtrOutput) Elem() SiteMachineKeyResponseOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) SiteMachineKeyResponse {
		if v != nil {
			return *v
		}
		var ret SiteMachineKeyResponse
		return ret
	}).(SiteMachineKeyResponseOutput)
}

// Algorithm used for decryption.
func (o SiteMachineKeyResponsePtrOutput) Decryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Decryption
	}).(pulumi.StringPtrOutput)
}

// Decryption key.
func (o SiteMachineKeyResponsePtrOutput) DecryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.DecryptionKey
	}).(pulumi.StringPtrOutput)
}

// MachineKey validation.
func (o SiteMachineKeyResponsePtrOutput) Validation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(pulumi.StringPtrOutput)
}

// Validation key.
func (o SiteMachineKeyResponsePtrOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteMachineKeyResponse) *string {
		if v == nil {
			return nil
		}
		return v.ValidationKey
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacity struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of Elastic workers for this App Service plan SKU.
	ElasticMaximum *int `pulumi:"elasticMaximum"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// SkuCapacityInput is an input type that accepts SkuCapacityArgs and SkuCapacityOutput values.
// You can construct a concrete instance of `SkuCapacityInput` via:
//
//	SkuCapacityArgs{...}
type SkuCapacityInput interface {
	pulumi.Input

	ToSkuCapacityOutput() SkuCapacityOutput
	ToSkuCapacityOutputWithContext(context.Context) SkuCapacityOutput
}

// Description of the App Service plan scale options.
type SkuCapacityArgs struct {
	// Default number of workers for this App Service plan SKU.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// Maximum number of Elastic workers for this App Service plan SKU.
	ElasticMaximum pulumi.IntPtrInput `pulumi:"elasticMaximum"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType pulumi.StringPtrInput `pulumi:"scaleType"`
}

func (SkuCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (i SkuCapacityArgs) ToSkuCapacityOutput() SkuCapacityOutput {
	return i.ToSkuCapacityOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput)
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i SkuCapacityArgs) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityOutput).ToSkuCapacityPtrOutputWithContext(ctx)
}

// SkuCapacityPtrInput is an input type that accepts SkuCapacityArgs, SkuCapacityPtr and SkuCapacityPtrOutput values.
// You can construct a concrete instance of `SkuCapacityPtrInput` via:
//
//	        SkuCapacityArgs{...}
//
//	or:
//
//	        nil
type SkuCapacityPtrInput interface {
	pulumi.Input

	ToSkuCapacityPtrOutput() SkuCapacityPtrOutput
	ToSkuCapacityPtrOutputWithContext(context.Context) SkuCapacityPtrOutput
}

type skuCapacityPtrType SkuCapacityArgs

func SkuCapacityPtr(v *SkuCapacityArgs) SkuCapacityPtrInput {
	return (*skuCapacityPtrType)(v)
}

func (*skuCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return i.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (i *skuCapacityPtrType) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuCapacityPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityOutput struct{ *pulumi.OutputState }

func (SkuCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityOutput) ToSkuCapacityOutput() SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityOutputWithContext(ctx context.Context) SkuCapacityOutput {
	return o
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o.ToSkuCapacityPtrOutputWithContext(context.Background())
}

func (o SkuCapacityOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuCapacity) *SkuCapacity {
		return &v
	}).(SkuCapacityPtrOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of Elastic workers for this App Service plan SKU.
func (o SkuCapacityOutput) ElasticMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.ElasticMaximum }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacity) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityPtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacity)(nil)).Elem()
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutput() SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) ToSkuCapacityPtrOutputWithContext(ctx context.Context) SkuCapacityPtrOutput {
	return o
}

func (o SkuCapacityPtrOutput) Elem() SkuCapacityOutput {
	return o.ApplyT(func(v *SkuCapacity) SkuCapacity {
		if v != nil {
			return *v
		}
		var ret SkuCapacity
		return ret
	}).(SkuCapacityOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of Elastic workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) ElasticMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.ElasticMaximum
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityPtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityPtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacity) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of the App Service plan scale options.
type SkuCapacityResponse struct {
	// Default number of workers for this App Service plan SKU.
	Default *int `pulumi:"default"`
	// Maximum number of Elastic workers for this App Service plan SKU.
	ElasticMaximum *int `pulumi:"elasticMaximum"`
	// Maximum number of workers for this App Service plan SKU.
	Maximum *int `pulumi:"maximum"`
	// Minimum number of workers for this App Service plan SKU.
	Minimum *int `pulumi:"minimum"`
	// Available scale configurations for an App Service plan.
	ScaleType *string `pulumi:"scaleType"`
}

// Description of the App Service plan scale options.
type SkuCapacityResponseOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutput() SkuCapacityResponseOutput {
	return o
}

func (o SkuCapacityResponseOutput) ToSkuCapacityResponseOutputWithContext(ctx context.Context) SkuCapacityResponseOutput {
	return o
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// Maximum number of Elastic workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) ElasticMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.ElasticMaximum }).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponseOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponseOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuCapacityResponse) *string { return v.ScaleType }).(pulumi.StringPtrOutput)
}

type SkuCapacityResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuCapacityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuCapacityResponse)(nil)).Elem()
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutput() SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) ToSkuCapacityResponsePtrOutputWithContext(ctx context.Context) SkuCapacityResponsePtrOutput {
	return o
}

func (o SkuCapacityResponsePtrOutput) Elem() SkuCapacityResponseOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) SkuCapacityResponse {
		if v != nil {
			return *v
		}
		var ret SkuCapacityResponse
		return ret
	}).(SkuCapacityResponseOutput)
}

// Default number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// Maximum number of Elastic workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) ElasticMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.ElasticMaximum
	}).(pulumi.IntPtrOutput)
}

// Maximum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Minimum number of workers for this App Service plan SKU.
func (o SkuCapacityResponsePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

// Available scale configurations for an App Service plan.
func (o SkuCapacityResponsePtrOutput) ScaleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuCapacityResponse) *string {
		if v == nil {
			return nil
		}
		return v.ScaleType
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescription struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []Capability `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacity `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// SkuDescriptionInput is an input type that accepts SkuDescriptionArgs and SkuDescriptionOutput values.
// You can construct a concrete instance of `SkuDescriptionInput` via:
//
//	SkuDescriptionArgs{...}
type SkuDescriptionInput interface {
	pulumi.Input

	ToSkuDescriptionOutput() SkuDescriptionOutput
	ToSkuDescriptionOutputWithContext(context.Context) SkuDescriptionOutput
}

// Description of a SKU for a scalable resource.
type SkuDescriptionArgs struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities CapabilityArrayInput `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// Locations of the SKU.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity SkuCapacityPtrInput `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (SkuDescriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return i.ToSkuDescriptionOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput)
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i SkuDescriptionArgs) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionOutput).ToSkuDescriptionPtrOutputWithContext(ctx)
}

// SkuDescriptionPtrInput is an input type that accepts SkuDescriptionArgs, SkuDescriptionPtr and SkuDescriptionPtrOutput values.
// You can construct a concrete instance of `SkuDescriptionPtrInput` via:
//
//	        SkuDescriptionArgs{...}
//
//	or:
//
//	        nil
type SkuDescriptionPtrInput interface {
	pulumi.Input

	ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput
	ToSkuDescriptionPtrOutputWithContext(context.Context) SkuDescriptionPtrOutput
}

type skuDescriptionPtrType SkuDescriptionArgs

func SkuDescriptionPtr(v *SkuDescriptionArgs) SkuDescriptionPtrInput {
	return (*skuDescriptionPtrType)(v)
}

func (*skuDescriptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return i.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (i *skuDescriptionPtrType) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SkuDescriptionPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionOutput struct{ *pulumi.OutputState }

func (SkuDescriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutput() SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionOutputWithContext(ctx context.Context) SkuDescriptionOutput {
	return o
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o.ToSkuDescriptionPtrOutputWithContext(context.Background())
}

func (o SkuDescriptionOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SkuDescription) *SkuDescription {
		return &v
	}).(SkuDescriptionPtrOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v SkuDescription) []Capability { return v.Capabilities }).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescription) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescription) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v SkuDescription) *SkuCapacity { return v.SkuCapacity }).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescription) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionPtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescription)(nil)).Elem()
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutput() SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) ToSkuDescriptionPtrOutputWithContext(ctx context.Context) SkuDescriptionPtrOutput {
	return o
}

func (o SkuDescriptionPtrOutput) Elem() SkuDescriptionOutput {
	return o.ApplyT(func(v *SkuDescription) SkuDescription {
		if v != nil {
			return *v
		}
		var ret SkuDescription
		return ret
	}).(SkuDescriptionOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionPtrOutput) Capabilities() CapabilityArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []Capability {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescription) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionPtrOutput) SkuCapacity() SkuCapacityPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *SkuCapacity {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityPtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescription) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponse struct {
	// Capabilities of the SKU, e.g., is traffic manager enabled?
	Capabilities []CapabilityResponse `pulumi:"capabilities"`
	// Current number of instances assigned to the resource.
	Capacity *int `pulumi:"capacity"`
	// Family code of the resource SKU.
	Family *string `pulumi:"family"`
	// Locations of the SKU.
	Locations []string `pulumi:"locations"`
	// Name of the resource SKU.
	Name *string `pulumi:"name"`
	// Size specifier of the resource SKU.
	Size *string `pulumi:"size"`
	// Min, max, and default scale values of the SKU.
	SkuCapacity *SkuCapacityResponse `pulumi:"skuCapacity"`
	// Service tier of the resource SKU.
	Tier *string `pulumi:"tier"`
}

// Description of a SKU for a scalable resource.
type SkuDescriptionResponseOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutput() SkuDescriptionResponseOutput {
	return o
}

func (o SkuDescriptionResponseOutput) ToSkuDescriptionResponseOutputWithContext(ctx context.Context) SkuDescriptionResponseOutput {
	return o
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponseOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []CapabilityResponse { return v.Capabilities }).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponseOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponseOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *SkuCapacityResponse { return v.SkuCapacity }).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SkuDescriptionResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type SkuDescriptionResponsePtrOutput struct{ *pulumi.OutputState }

func (SkuDescriptionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SkuDescriptionResponse)(nil)).Elem()
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutput() SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) ToSkuDescriptionResponsePtrOutputWithContext(ctx context.Context) SkuDescriptionResponsePtrOutput {
	return o
}

func (o SkuDescriptionResponsePtrOutput) Elem() SkuDescriptionResponseOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) SkuDescriptionResponse {
		if v != nil {
			return *v
		}
		var ret SkuDescriptionResponse
		return ret
	}).(SkuDescriptionResponseOutput)
}

// Capabilities of the SKU, e.g., is traffic manager enabled?
func (o SkuDescriptionResponsePtrOutput) Capabilities() CapabilityResponseArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []CapabilityResponse {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(CapabilityResponseArrayOutput)
}

// Current number of instances assigned to the resource.
func (o SkuDescriptionResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Family code of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// Locations of the SKU.
func (o SkuDescriptionResponsePtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// Name of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Size specifier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Min, max, and default scale values of the SKU.
func (o SkuDescriptionResponsePtrOutput) SkuCapacity() SkuCapacityResponsePtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *SkuCapacityResponse {
		if v == nil {
			return nil
		}
		return v.SkuCapacity
	}).(SkuCapacityResponsePtrOutput)
}

// Service tier of the resource SKU.
func (o SkuDescriptionResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SkuDescriptionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponse struct {
	// The destination slot of the last swap operation.
	DestinationSlotName string `pulumi:"destinationSlotName"`
	// The source slot of the last swap operation.
	SourceSlotName string `pulumi:"sourceSlotName"`
	// The time the last successful slot swap completed.
	TimestampUtc string `pulumi:"timestampUtc"`
}

// The status of the last successful slot swap operation.
type SlotSwapStatusResponseOutput struct{ *pulumi.OutputState }

func (SlotSwapStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotSwapStatusResponse)(nil)).Elem()
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutput() SlotSwapStatusResponseOutput {
	return o
}

func (o SlotSwapStatusResponseOutput) ToSlotSwapStatusResponseOutputWithContext(ctx context.Context) SlotSwapStatusResponseOutput {
	return o
}

// The destination slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) DestinationSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.DestinationSlotName }).(pulumi.StringOutput)
}

// The source slot of the last swap operation.
func (o SlotSwapStatusResponseOutput) SourceSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.SourceSlotName }).(pulumi.StringOutput)
}

// The time the last successful slot swap completed.
func (o SlotSwapStatusResponseOutput) TimestampUtc() pulumi.StringOutput {
	return o.ApplyT(func(v SlotSwapStatusResponse) string { return v.TimestampUtc }).(pulumi.StringOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Request Path.
	Path *string `pulumi:"path"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// SlowRequestsBasedTriggerInput is an input type that accepts SlowRequestsBasedTriggerArgs and SlowRequestsBasedTriggerOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerInput` via:
//
//	SlowRequestsBasedTriggerArgs{...}
type SlowRequestsBasedTriggerInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput
	ToSlowRequestsBasedTriggerOutputWithContext(context.Context) SlowRequestsBasedTriggerOutput
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Request Path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken pulumi.StringPtrInput `pulumi:"timeTaken"`
}

func (SlowRequestsBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return i.ToSlowRequestsBasedTriggerOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput)
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArgs) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerOutput).ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx)
}

// SlowRequestsBasedTriggerPtrInput is an input type that accepts SlowRequestsBasedTriggerArgs, SlowRequestsBasedTriggerPtr and SlowRequestsBasedTriggerPtrOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerPtrInput` via:
//
//	        SlowRequestsBasedTriggerArgs{...}
//
//	or:
//
//	        nil
type SlowRequestsBasedTriggerPtrInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput
	ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Context) SlowRequestsBasedTriggerPtrOutput
}

type slowRequestsBasedTriggerPtrType SlowRequestsBasedTriggerArgs

func SlowRequestsBasedTriggerPtr(v *SlowRequestsBasedTriggerArgs) SlowRequestsBasedTriggerPtrInput {
	return (*slowRequestsBasedTriggerPtrType)(v)
}

func (*slowRequestsBasedTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return i.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (i *slowRequestsBasedTriggerPtrType) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerPtrOutput)
}

// SlowRequestsBasedTriggerArrayInput is an input type that accepts SlowRequestsBasedTriggerArray and SlowRequestsBasedTriggerArrayOutput values.
// You can construct a concrete instance of `SlowRequestsBasedTriggerArrayInput` via:
//
//	SlowRequestsBasedTriggerArray{ SlowRequestsBasedTriggerArgs{...} }
type SlowRequestsBasedTriggerArrayInput interface {
	pulumi.Input

	ToSlowRequestsBasedTriggerArrayOutput() SlowRequestsBasedTriggerArrayOutput
	ToSlowRequestsBasedTriggerArrayOutputWithContext(context.Context) SlowRequestsBasedTriggerArrayOutput
}

type SlowRequestsBasedTriggerArray []SlowRequestsBasedTriggerInput

func (SlowRequestsBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlowRequestsBasedTrigger)(nil)).Elem()
}

func (i SlowRequestsBasedTriggerArray) ToSlowRequestsBasedTriggerArrayOutput() SlowRequestsBasedTriggerArrayOutput {
	return i.ToSlowRequestsBasedTriggerArrayOutputWithContext(context.Background())
}

func (i SlowRequestsBasedTriggerArray) ToSlowRequestsBasedTriggerArrayOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlowRequestsBasedTriggerArrayOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutput() SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerOutput {
	return o
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o.ToSlowRequestsBasedTriggerPtrOutputWithContext(context.Background())
}

func (o SlowRequestsBasedTriggerOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SlowRequestsBasedTrigger) *SlowRequestsBasedTrigger {
		return &v
	}).(SlowRequestsBasedTriggerPtrOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Request Path.
func (o SlowRequestsBasedTriggerOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTrigger) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerPtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutput() SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) ToSlowRequestsBasedTriggerPtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerPtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerPtrOutput) Elem() SlowRequestsBasedTriggerOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) SlowRequestsBasedTrigger {
		if v != nil {
			return *v
		}
		var ret SlowRequestsBasedTrigger
		return ret
	}).(SlowRequestsBasedTriggerOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Request Path.
func (o SlowRequestsBasedTriggerPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerPtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerPtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTrigger) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlowRequestsBasedTrigger)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerArrayOutput) ToSlowRequestsBasedTriggerArrayOutput() SlowRequestsBasedTriggerArrayOutput {
	return o
}

func (o SlowRequestsBasedTriggerArrayOutput) ToSlowRequestsBasedTriggerArrayOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerArrayOutput {
	return o
}

func (o SlowRequestsBasedTriggerArrayOutput) Index(i pulumi.IntInput) SlowRequestsBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlowRequestsBasedTrigger {
		return vs[0].([]SlowRequestsBasedTrigger)[vs[1].(int)]
	}).(SlowRequestsBasedTriggerOutput)
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Request Path.
	Path *string `pulumi:"path"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Time taken.
	TimeTaken *string `pulumi:"timeTaken"`
}

// Trigger based on request execution time.
type SlowRequestsBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutput() SlowRequestsBasedTriggerResponseOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseOutput) ToSlowRequestsBasedTriggerResponseOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o SlowRequestsBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Request Path.
func (o SlowRequestsBasedTriggerResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponseOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlowRequestsBasedTriggerResponse) *string { return v.TimeTaken }).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponsePtrOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutput() SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) ToSlowRequestsBasedTriggerResponsePtrOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponsePtrOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponsePtrOutput) Elem() SlowRequestsBasedTriggerResponseOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) SlowRequestsBasedTriggerResponse {
		if v != nil {
			return *v
		}
		var ret SlowRequestsBasedTriggerResponse
		return ret
	}).(SlowRequestsBasedTriggerResponseOutput)
}

// Request Count.
func (o SlowRequestsBasedTriggerResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Request Path.
func (o SlowRequestsBasedTriggerResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Time interval.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeInterval
	}).(pulumi.StringPtrOutput)
}

// Time taken.
func (o SlowRequestsBasedTriggerResponsePtrOutput) TimeTaken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlowRequestsBasedTriggerResponse) *string {
		if v == nil {
			return nil
		}
		return v.TimeTaken
	}).(pulumi.StringPtrOutput)
}

type SlowRequestsBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (SlowRequestsBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlowRequestsBasedTriggerResponse)(nil)).Elem()
}

func (o SlowRequestsBasedTriggerResponseArrayOutput) ToSlowRequestsBasedTriggerResponseArrayOutput() SlowRequestsBasedTriggerResponseArrayOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseArrayOutput) ToSlowRequestsBasedTriggerResponseArrayOutputWithContext(ctx context.Context) SlowRequestsBasedTriggerResponseArrayOutput {
	return o
}

func (o SlowRequestsBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) SlowRequestsBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlowRequestsBasedTriggerResponse {
		return vs[0].([]SlowRequestsBasedTriggerResponse)[vs[1].(int)]
	}).(SlowRequestsBasedTriggerResponseOutput)
}

// Build properties for the static site.
type StaticSiteBuildProperties struct {
	// A custom command to run during deployment of the Azure Functions API application.
	ApiBuildCommand *string `pulumi:"apiBuildCommand"`
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// A custom command to run during deployment of the static content application.
	AppBuildCommand *string `pulumi:"appBuildCommand"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
	// Github Action secret name override.
	GithubActionSecretNameOverride *string `pulumi:"githubActionSecretNameOverride"`
	// The output path of the app after building.
	OutputLocation *string `pulumi:"outputLocation"`
	// Skip Github Action workflow generation.
	SkipGithubActionWorkflowGeneration *bool `pulumi:"skipGithubActionWorkflowGeneration"`
}

// StaticSiteBuildPropertiesInput is an input type that accepts StaticSiteBuildPropertiesArgs and StaticSiteBuildPropertiesOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesInput` via:
//
//	StaticSiteBuildPropertiesArgs{...}
type StaticSiteBuildPropertiesInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput
	ToStaticSiteBuildPropertiesOutputWithContext(context.Context) StaticSiteBuildPropertiesOutput
}

// Build properties for the static site.
type StaticSiteBuildPropertiesArgs struct {
	// A custom command to run during deployment of the Azure Functions API application.
	ApiBuildCommand pulumi.StringPtrInput `pulumi:"apiBuildCommand"`
	// The path to the api code within the repository.
	ApiLocation pulumi.StringPtrInput `pulumi:"apiLocation"`
	// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
	AppArtifactLocation pulumi.StringPtrInput `pulumi:"appArtifactLocation"`
	// A custom command to run during deployment of the static content application.
	AppBuildCommand pulumi.StringPtrInput `pulumi:"appBuildCommand"`
	// The path to the app code within the repository.
	AppLocation pulumi.StringPtrInput `pulumi:"appLocation"`
	// Github Action secret name override.
	GithubActionSecretNameOverride pulumi.StringPtrInput `pulumi:"githubActionSecretNameOverride"`
	// The output path of the app after building.
	OutputLocation pulumi.StringPtrInput `pulumi:"outputLocation"`
	// Skip Github Action workflow generation.
	SkipGithubActionWorkflowGeneration pulumi.BoolPtrInput `pulumi:"skipGithubActionWorkflowGeneration"`
}

func (StaticSiteBuildPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return i.ToStaticSiteBuildPropertiesOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput)
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i StaticSiteBuildPropertiesArgs) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesOutput).ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx)
}

// StaticSiteBuildPropertiesPtrInput is an input type that accepts StaticSiteBuildPropertiesArgs, StaticSiteBuildPropertiesPtr and StaticSiteBuildPropertiesPtrOutput values.
// You can construct a concrete instance of `StaticSiteBuildPropertiesPtrInput` via:
//
//	        StaticSiteBuildPropertiesArgs{...}
//
//	or:
//
//	        nil
type StaticSiteBuildPropertiesPtrInput interface {
	pulumi.Input

	ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput
	ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Context) StaticSiteBuildPropertiesPtrOutput
}

type staticSiteBuildPropertiesPtrType StaticSiteBuildPropertiesArgs

func StaticSiteBuildPropertiesPtr(v *StaticSiteBuildPropertiesArgs) StaticSiteBuildPropertiesPtrInput {
	return (*staticSiteBuildPropertiesPtrType)(v)
}

func (*staticSiteBuildPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return i.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (i *staticSiteBuildPropertiesPtrType) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteBuildPropertiesPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutput() StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesOutput {
	return o
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o.ToStaticSiteBuildPropertiesPtrOutputWithContext(context.Background())
}

func (o StaticSiteBuildPropertiesOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticSiteBuildProperties) *StaticSiteBuildProperties {
		return &v
	}).(StaticSiteBuildPropertiesPtrOutput)
}

// A custom command to run during deployment of the Azure Functions API application.
func (o StaticSiteBuildPropertiesOutput) ApiBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.ApiBuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
func (o StaticSiteBuildPropertiesOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// A custom command to run during deployment of the static content application.
func (o StaticSiteBuildPropertiesOutput) AppBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppBuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

// Github Action secret name override.
func (o StaticSiteBuildPropertiesOutput) GithubActionSecretNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.GithubActionSecretNameOverride }).(pulumi.StringPtrOutput)
}

// The output path of the app after building.
func (o StaticSiteBuildPropertiesOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *string { return v.OutputLocation }).(pulumi.StringPtrOutput)
}

// Skip Github Action workflow generation.
func (o StaticSiteBuildPropertiesOutput) SkipGithubActionWorkflowGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildProperties) *bool { return v.SkipGithubActionWorkflowGeneration }).(pulumi.BoolPtrOutput)
}

type StaticSiteBuildPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildProperties)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutput() StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) ToStaticSiteBuildPropertiesPtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesPtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesPtrOutput) Elem() StaticSiteBuildPropertiesOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) StaticSiteBuildProperties {
		if v != nil {
			return *v
		}
		var ret StaticSiteBuildProperties
		return ret
	}).(StaticSiteBuildPropertiesOutput)
}

// A custom command to run during deployment of the Azure Functions API application.
func (o StaticSiteBuildPropertiesPtrOutput) ApiBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiBuildCommand
	}).(pulumi.StringPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
func (o StaticSiteBuildPropertiesPtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// A custom command to run during deployment of the static content application.
func (o StaticSiteBuildPropertiesPtrOutput) AppBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppBuildCommand
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesPtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Github Action secret name override.
func (o StaticSiteBuildPropertiesPtrOutput) GithubActionSecretNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.GithubActionSecretNameOverride
	}).(pulumi.StringPtrOutput)
}

// The output path of the app after building.
func (o StaticSiteBuildPropertiesPtrOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *string {
		if v == nil {
			return nil
		}
		return v.OutputLocation
	}).(pulumi.StringPtrOutput)
}

// Skip Github Action workflow generation.
func (o StaticSiteBuildPropertiesPtrOutput) SkipGithubActionWorkflowGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildProperties) *bool {
		if v == nil {
			return nil
		}
		return v.SkipGithubActionWorkflowGeneration
	}).(pulumi.BoolPtrOutput)
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponse struct {
	// A custom command to run during deployment of the Azure Functions API application.
	ApiBuildCommand *string `pulumi:"apiBuildCommand"`
	// The path to the api code within the repository.
	ApiLocation *string `pulumi:"apiLocation"`
	// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
	AppArtifactLocation *string `pulumi:"appArtifactLocation"`
	// A custom command to run during deployment of the static content application.
	AppBuildCommand *string `pulumi:"appBuildCommand"`
	// The path to the app code within the repository.
	AppLocation *string `pulumi:"appLocation"`
	// Github Action secret name override.
	GithubActionSecretNameOverride *string `pulumi:"githubActionSecretNameOverride"`
	// The output path of the app after building.
	OutputLocation *string `pulumi:"outputLocation"`
	// Skip Github Action workflow generation.
	SkipGithubActionWorkflowGeneration *bool `pulumi:"skipGithubActionWorkflowGeneration"`
}

// Build properties for the static site.
type StaticSiteBuildPropertiesResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutput() StaticSiteBuildPropertiesResponseOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponseOutput) ToStaticSiteBuildPropertiesResponseOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponseOutput {
	return o
}

// A custom command to run during deployment of the Azure Functions API application.
func (o StaticSiteBuildPropertiesResponseOutput) ApiBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.ApiBuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.ApiLocation }).(pulumi.StringPtrOutput)
}

// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
func (o StaticSiteBuildPropertiesResponseOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppArtifactLocation }).(pulumi.StringPtrOutput)
}

// A custom command to run during deployment of the static content application.
func (o StaticSiteBuildPropertiesResponseOutput) AppBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppBuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponseOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.AppLocation }).(pulumi.StringPtrOutput)
}

// Github Action secret name override.
func (o StaticSiteBuildPropertiesResponseOutput) GithubActionSecretNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.GithubActionSecretNameOverride }).(pulumi.StringPtrOutput)
}

// The output path of the app after building.
func (o StaticSiteBuildPropertiesResponseOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *string { return v.OutputLocation }).(pulumi.StringPtrOutput)
}

// Skip Github Action workflow generation.
func (o StaticSiteBuildPropertiesResponseOutput) SkipGithubActionWorkflowGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticSiteBuildPropertiesResponse) *bool { return v.SkipGithubActionWorkflowGeneration }).(pulumi.BoolPtrOutput)
}

type StaticSiteBuildPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticSiteBuildPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteBuildPropertiesResponse)(nil)).Elem()
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutput() StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) ToStaticSiteBuildPropertiesResponsePtrOutputWithContext(ctx context.Context) StaticSiteBuildPropertiesResponsePtrOutput {
	return o
}

func (o StaticSiteBuildPropertiesResponsePtrOutput) Elem() StaticSiteBuildPropertiesResponseOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) StaticSiteBuildPropertiesResponse {
		if v != nil {
			return *v
		}
		var ret StaticSiteBuildPropertiesResponse
		return ret
	}).(StaticSiteBuildPropertiesResponseOutput)
}

// A custom command to run during deployment of the Azure Functions API application.
func (o StaticSiteBuildPropertiesResponsePtrOutput) ApiBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiBuildCommand
	}).(pulumi.StringPtrOutput)
}

// The path to the api code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) ApiLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiLocation
	}).(pulumi.StringPtrOutput)
}

// Deprecated: The path of the app artifacts after building (deprecated in favor of OutputLocation)
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppArtifactLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppArtifactLocation
	}).(pulumi.StringPtrOutput)
}

// A custom command to run during deployment of the static content application.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppBuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppBuildCommand
	}).(pulumi.StringPtrOutput)
}

// The path to the app code within the repository.
func (o StaticSiteBuildPropertiesResponsePtrOutput) AppLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.AppLocation
	}).(pulumi.StringPtrOutput)
}

// Github Action secret name override.
func (o StaticSiteBuildPropertiesResponsePtrOutput) GithubActionSecretNameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.GithubActionSecretNameOverride
	}).(pulumi.StringPtrOutput)
}

// The output path of the app after building.
func (o StaticSiteBuildPropertiesResponsePtrOutput) OutputLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.OutputLocation
	}).(pulumi.StringPtrOutput)
}

// Skip Github Action workflow generation.
func (o StaticSiteBuildPropertiesResponsePtrOutput) SkipGithubActionWorkflowGeneration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticSiteBuildPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.SkipGithubActionWorkflowGeneration
	}).(pulumi.BoolPtrOutput)
}

// Template Options for the static site.
type StaticSiteTemplateOptions struct {
	// Description of the newly generated repository.
	Description *string `pulumi:"description"`
	// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
	IsPrivate *bool `pulumi:"isPrivate"`
	// Owner of the newly generated repository.
	Owner *string `pulumi:"owner"`
	// Name of the newly generated repository.
	RepositoryName *string `pulumi:"repositoryName"`
	// URL of the template repository. The newly generated repository will be based on this one.
	TemplateRepositoryUrl *string `pulumi:"templateRepositoryUrl"`
}

// StaticSiteTemplateOptionsInput is an input type that accepts StaticSiteTemplateOptionsArgs and StaticSiteTemplateOptionsOutput values.
// You can construct a concrete instance of `StaticSiteTemplateOptionsInput` via:
//
//	StaticSiteTemplateOptionsArgs{...}
type StaticSiteTemplateOptionsInput interface {
	pulumi.Input

	ToStaticSiteTemplateOptionsOutput() StaticSiteTemplateOptionsOutput
	ToStaticSiteTemplateOptionsOutputWithContext(context.Context) StaticSiteTemplateOptionsOutput
}

// Template Options for the static site.
type StaticSiteTemplateOptionsArgs struct {
	// Description of the newly generated repository.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
	IsPrivate pulumi.BoolPtrInput `pulumi:"isPrivate"`
	// Owner of the newly generated repository.
	Owner pulumi.StringPtrInput `pulumi:"owner"`
	// Name of the newly generated repository.
	RepositoryName pulumi.StringPtrInput `pulumi:"repositoryName"`
	// URL of the template repository. The newly generated repository will be based on this one.
	TemplateRepositoryUrl pulumi.StringPtrInput `pulumi:"templateRepositoryUrl"`
}

func (StaticSiteTemplateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteTemplateOptions)(nil)).Elem()
}

func (i StaticSiteTemplateOptionsArgs) ToStaticSiteTemplateOptionsOutput() StaticSiteTemplateOptionsOutput {
	return i.ToStaticSiteTemplateOptionsOutputWithContext(context.Background())
}

func (i StaticSiteTemplateOptionsArgs) ToStaticSiteTemplateOptionsOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteTemplateOptionsOutput)
}

func (i StaticSiteTemplateOptionsArgs) ToStaticSiteTemplateOptionsPtrOutput() StaticSiteTemplateOptionsPtrOutput {
	return i.ToStaticSiteTemplateOptionsPtrOutputWithContext(context.Background())
}

func (i StaticSiteTemplateOptionsArgs) ToStaticSiteTemplateOptionsPtrOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteTemplateOptionsOutput).ToStaticSiteTemplateOptionsPtrOutputWithContext(ctx)
}

// StaticSiteTemplateOptionsPtrInput is an input type that accepts StaticSiteTemplateOptionsArgs, StaticSiteTemplateOptionsPtr and StaticSiteTemplateOptionsPtrOutput values.
// You can construct a concrete instance of `StaticSiteTemplateOptionsPtrInput` via:
//
//	        StaticSiteTemplateOptionsArgs{...}
//
//	or:
//
//	        nil
type StaticSiteTemplateOptionsPtrInput interface {
	pulumi.Input

	ToStaticSiteTemplateOptionsPtrOutput() StaticSiteTemplateOptionsPtrOutput
	ToStaticSiteTemplateOptionsPtrOutputWithContext(context.Context) StaticSiteTemplateOptionsPtrOutput
}

type staticSiteTemplateOptionsPtrType StaticSiteTemplateOptionsArgs

func StaticSiteTemplateOptionsPtr(v *StaticSiteTemplateOptionsArgs) StaticSiteTemplateOptionsPtrInput {
	return (*staticSiteTemplateOptionsPtrType)(v)
}

func (*staticSiteTemplateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteTemplateOptions)(nil)).Elem()
}

func (i *staticSiteTemplateOptionsPtrType) ToStaticSiteTemplateOptionsPtrOutput() StaticSiteTemplateOptionsPtrOutput {
	return i.ToStaticSiteTemplateOptionsPtrOutputWithContext(context.Background())
}

func (i *staticSiteTemplateOptionsPtrType) ToStaticSiteTemplateOptionsPtrOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticSiteTemplateOptionsPtrOutput)
}

// Template Options for the static site.
type StaticSiteTemplateOptionsOutput struct{ *pulumi.OutputState }

func (StaticSiteTemplateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteTemplateOptions)(nil)).Elem()
}

func (o StaticSiteTemplateOptionsOutput) ToStaticSiteTemplateOptionsOutput() StaticSiteTemplateOptionsOutput {
	return o
}

func (o StaticSiteTemplateOptionsOutput) ToStaticSiteTemplateOptionsOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsOutput {
	return o
}

func (o StaticSiteTemplateOptionsOutput) ToStaticSiteTemplateOptionsPtrOutput() StaticSiteTemplateOptionsPtrOutput {
	return o.ToStaticSiteTemplateOptionsPtrOutputWithContext(context.Background())
}

func (o StaticSiteTemplateOptionsOutput) ToStaticSiteTemplateOptionsPtrOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StaticSiteTemplateOptions) *StaticSiteTemplateOptions {
		return &v
	}).(StaticSiteTemplateOptionsPtrOutput)
}

// Description of the newly generated repository.
func (o StaticSiteTemplateOptionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptions) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
func (o StaticSiteTemplateOptionsOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptions) *bool { return v.IsPrivate }).(pulumi.BoolPtrOutput)
}

// Owner of the newly generated repository.
func (o StaticSiteTemplateOptionsOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptions) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// Name of the newly generated repository.
func (o StaticSiteTemplateOptionsOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptions) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// URL of the template repository. The newly generated repository will be based on this one.
func (o StaticSiteTemplateOptionsOutput) TemplateRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptions) *string { return v.TemplateRepositoryUrl }).(pulumi.StringPtrOutput)
}

type StaticSiteTemplateOptionsPtrOutput struct{ *pulumi.OutputState }

func (StaticSiteTemplateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteTemplateOptions)(nil)).Elem()
}

func (o StaticSiteTemplateOptionsPtrOutput) ToStaticSiteTemplateOptionsPtrOutput() StaticSiteTemplateOptionsPtrOutput {
	return o
}

func (o StaticSiteTemplateOptionsPtrOutput) ToStaticSiteTemplateOptionsPtrOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsPtrOutput {
	return o
}

func (o StaticSiteTemplateOptionsPtrOutput) Elem() StaticSiteTemplateOptionsOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) StaticSiteTemplateOptions {
		if v != nil {
			return *v
		}
		var ret StaticSiteTemplateOptions
		return ret
	}).(StaticSiteTemplateOptionsOutput)
}

// Description of the newly generated repository.
func (o StaticSiteTemplateOptionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
func (o StaticSiteTemplateOptionsPtrOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) *bool {
		if v == nil {
			return nil
		}
		return v.IsPrivate
	}).(pulumi.BoolPtrOutput)
}

// Owner of the newly generated repository.
func (o StaticSiteTemplateOptionsPtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) *string {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(pulumi.StringPtrOutput)
}

// Name of the newly generated repository.
func (o StaticSiteTemplateOptionsPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// URL of the template repository. The newly generated repository will be based on this one.
func (o StaticSiteTemplateOptionsPtrOutput) TemplateRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptions) *string {
		if v == nil {
			return nil
		}
		return v.TemplateRepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// Template Options for the static site.
type StaticSiteTemplateOptionsResponse struct {
	// Description of the newly generated repository.
	Description *string `pulumi:"description"`
	// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
	IsPrivate *bool `pulumi:"isPrivate"`
	// Owner of the newly generated repository.
	Owner *string `pulumi:"owner"`
	// Name of the newly generated repository.
	RepositoryName *string `pulumi:"repositoryName"`
	// URL of the template repository. The newly generated repository will be based on this one.
	TemplateRepositoryUrl *string `pulumi:"templateRepositoryUrl"`
}

// Template Options for the static site.
type StaticSiteTemplateOptionsResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteTemplateOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteTemplateOptionsResponse)(nil)).Elem()
}

func (o StaticSiteTemplateOptionsResponseOutput) ToStaticSiteTemplateOptionsResponseOutput() StaticSiteTemplateOptionsResponseOutput {
	return o
}

func (o StaticSiteTemplateOptionsResponseOutput) ToStaticSiteTemplateOptionsResponseOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsResponseOutput {
	return o
}

// Description of the newly generated repository.
func (o StaticSiteTemplateOptionsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptionsResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
func (o StaticSiteTemplateOptionsResponseOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptionsResponse) *bool { return v.IsPrivate }).(pulumi.BoolPtrOutput)
}

// Owner of the newly generated repository.
func (o StaticSiteTemplateOptionsResponseOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptionsResponse) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

// Name of the newly generated repository.
func (o StaticSiteTemplateOptionsResponseOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptionsResponse) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// URL of the template repository. The newly generated repository will be based on this one.
func (o StaticSiteTemplateOptionsResponseOutput) TemplateRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteTemplateOptionsResponse) *string { return v.TemplateRepositoryUrl }).(pulumi.StringPtrOutput)
}

type StaticSiteTemplateOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (StaticSiteTemplateOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StaticSiteTemplateOptionsResponse)(nil)).Elem()
}

func (o StaticSiteTemplateOptionsResponsePtrOutput) ToStaticSiteTemplateOptionsResponsePtrOutput() StaticSiteTemplateOptionsResponsePtrOutput {
	return o
}

func (o StaticSiteTemplateOptionsResponsePtrOutput) ToStaticSiteTemplateOptionsResponsePtrOutputWithContext(ctx context.Context) StaticSiteTemplateOptionsResponsePtrOutput {
	return o
}

func (o StaticSiteTemplateOptionsResponsePtrOutput) Elem() StaticSiteTemplateOptionsResponseOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) StaticSiteTemplateOptionsResponse {
		if v != nil {
			return *v
		}
		var ret StaticSiteTemplateOptionsResponse
		return ret
	}).(StaticSiteTemplateOptionsResponseOutput)
}

// Description of the newly generated repository.
func (o StaticSiteTemplateOptionsResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Whether or not the newly generated repository is a private repository. Defaults to false (i.e. public).
func (o StaticSiteTemplateOptionsResponsePtrOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.IsPrivate
	}).(pulumi.BoolPtrOutput)
}

// Owner of the newly generated repository.
func (o StaticSiteTemplateOptionsResponsePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(pulumi.StringPtrOutput)
}

// Name of the newly generated repository.
func (o StaticSiteTemplateOptionsResponsePtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// URL of the template repository. The newly generated repository will be based on this one.
func (o StaticSiteTemplateOptionsResponsePtrOutput) TemplateRepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StaticSiteTemplateOptionsResponse) *string {
		if v == nil {
			return nil
		}
		return v.TemplateRepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceResponse struct {
	// The display name for the static site user.
	DisplayName string `pulumi:"displayName"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The identity provider for the static site user.
	Provider string `pulumi:"provider"`
	// The roles for the static site user, in free-form string format
	Roles *string `pulumi:"roles"`
	// Resource type.
	Type string `pulumi:"type"`
	// The user id for the static site user.
	UserId string `pulumi:"userId"`
}

// Static Site User ARM resource.
type StaticSiteUserARMResourceResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceResponseOutput) ToStaticSiteUserARMResourceResponseOutput() StaticSiteUserARMResourceResponseOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseOutput) ToStaticSiteUserARMResourceResponseOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseOutput {
	return o
}

// The display name for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Resource Id.
func (o StaticSiteUserARMResourceResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o StaticSiteUserARMResourceResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o StaticSiteUserARMResourceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The identity provider for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Provider }).(pulumi.StringOutput)
}

// The roles for the static site user, in free-form string format
func (o StaticSiteUserARMResourceResponseOutput) Roles() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) *string { return v.Roles }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o StaticSiteUserARMResourceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The user id for the static site user.
func (o StaticSiteUserARMResourceResponseOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserARMResourceResponse) string { return v.UserId }).(pulumi.StringOutput)
}

type StaticSiteUserARMResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteUserARMResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserARMResourceResponse)(nil)).Elem()
}

func (o StaticSiteUserARMResourceResponseArrayOutput) ToStaticSiteUserARMResourceResponseArrayOutput() StaticSiteUserARMResourceResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseArrayOutput) ToStaticSiteUserARMResourceResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserARMResourceResponseArrayOutput {
	return o
}

func (o StaticSiteUserARMResourceResponseArrayOutput) Index(i pulumi.IntInput) StaticSiteUserARMResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSiteUserARMResourceResponse {
		return vs[0].([]StaticSiteUserARMResourceResponse)[vs[1].(int)]
	}).(StaticSiteUserARMResourceResponseOutput)
}

// A static site user provided function.
type StaticSiteUserProvidedFunctionAppResponse struct {
	// The date and time on which the function app was registered with the static site.
	CreatedOn string `pulumi:"createdOn"`
	// The region of the function app registered with the static site
	FunctionAppRegion *string `pulumi:"functionAppRegion"`
	// The resource id of the function app registered with the static site
	FunctionAppResourceId *string `pulumi:"functionAppResourceId"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Resource type.
	Type string `pulumi:"type"`
}

// A static site user provided function.
type StaticSiteUserProvidedFunctionAppResponseOutput struct{ *pulumi.OutputState }

func (StaticSiteUserProvidedFunctionAppResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticSiteUserProvidedFunctionAppResponse)(nil)).Elem()
}

func (o StaticSiteUserProvidedFunctionAppResponseOutput) ToStaticSiteUserProvidedFunctionAppResponseOutput() StaticSiteUserProvidedFunctionAppResponseOutput {
	return o
}

func (o StaticSiteUserProvidedFunctionAppResponseOutput) ToStaticSiteUserProvidedFunctionAppResponseOutputWithContext(ctx context.Context) StaticSiteUserProvidedFunctionAppResponseOutput {
	return o
}

// The date and time on which the function app was registered with the static site.
func (o StaticSiteUserProvidedFunctionAppResponseOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// The region of the function app registered with the static site
func (o StaticSiteUserProvidedFunctionAppResponseOutput) FunctionAppRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) *string { return v.FunctionAppRegion }).(pulumi.StringPtrOutput)
}

// The resource id of the function app registered with the static site
func (o StaticSiteUserProvidedFunctionAppResponseOutput) FunctionAppResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) *string { return v.FunctionAppResourceId }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o StaticSiteUserProvidedFunctionAppResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o StaticSiteUserProvidedFunctionAppResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o StaticSiteUserProvidedFunctionAppResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource type.
func (o StaticSiteUserProvidedFunctionAppResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StaticSiteUserProvidedFunctionAppResponse) string { return v.Type }).(pulumi.StringOutput)
}

type StaticSiteUserProvidedFunctionAppResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticSiteUserProvidedFunctionAppResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticSiteUserProvidedFunctionAppResponse)(nil)).Elem()
}

func (o StaticSiteUserProvidedFunctionAppResponseArrayOutput) ToStaticSiteUserProvidedFunctionAppResponseArrayOutput() StaticSiteUserProvidedFunctionAppResponseArrayOutput {
	return o
}

func (o StaticSiteUserProvidedFunctionAppResponseArrayOutput) ToStaticSiteUserProvidedFunctionAppResponseArrayOutputWithContext(ctx context.Context) StaticSiteUserProvidedFunctionAppResponseArrayOutput {
	return o
}

func (o StaticSiteUserProvidedFunctionAppResponseArrayOutput) Index(i pulumi.IntInput) StaticSiteUserProvidedFunctionAppResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticSiteUserProvidedFunctionAppResponse {
		return vs[0].([]StaticSiteUserProvidedFunctionAppResponse)[vs[1].(int)]
	}).(StaticSiteUserProvidedFunctionAppResponseOutput)
}

// Trigger based on status code.
type StatusCodesBasedTrigger struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Request Path
	Path *string `pulumi:"path"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// StatusCodesBasedTriggerInput is an input type that accepts StatusCodesBasedTriggerArgs and StatusCodesBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerInput` via:
//
//	StatusCodesBasedTriggerArgs{...}
type StatusCodesBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput
	ToStatusCodesBasedTriggerOutputWithContext(context.Context) StatusCodesBasedTriggerOutput
}

// Trigger based on status code.
type StatusCodesBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Request Path
	Path pulumi.StringPtrInput `pulumi:"path"`
	// HTTP status code.
	Status pulumi.IntPtrInput `pulumi:"status"`
	// Request Sub Status.
	SubStatus pulumi.IntPtrInput `pulumi:"subStatus"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status pulumi.IntPtrInput `pulumi:"win32Status"`
}

func (StatusCodesBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return i.ToStatusCodesBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArgs) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerOutput)
}

// StatusCodesBasedTriggerArrayInput is an input type that accepts StatusCodesBasedTriggerArray and StatusCodesBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesBasedTriggerArrayInput` via:
//
//	StatusCodesBasedTriggerArray{ StatusCodesBasedTriggerArgs{...} }
type StatusCodesBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput
	ToStatusCodesBasedTriggerArrayOutputWithContext(context.Context) StatusCodesBasedTriggerArrayOutput
}

type StatusCodesBasedTriggerArray []StatusCodesBasedTriggerInput

func (StatusCodesBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return i.ToStatusCodesBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesBasedTriggerArray) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesBasedTriggerArrayOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutput() StatusCodesBasedTriggerOutput {
	return o
}

func (o StatusCodesBasedTriggerOutput) ToStatusCodesBasedTriggerOutputWithContext(ctx context.Context) StatusCodesBasedTriggerOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Request Path
func (o StatusCodesBasedTriggerOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTrigger) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTrigger)(nil)).Elem()
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutput() StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) ToStatusCodesBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTrigger {
		return vs[0].([]StatusCodesBasedTrigger)[vs[1].(int)]
	}).(StatusCodesBasedTriggerOutput)
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponse struct {
	// Request Count.
	Count *int `pulumi:"count"`
	// Request Path
	Path *string `pulumi:"path"`
	// HTTP status code.
	Status *int `pulumi:"status"`
	// Request Sub Status.
	SubStatus *int `pulumi:"subStatus"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
	// Win32 error code.
	Win32Status *int `pulumi:"win32Status"`
}

// Trigger based on status code.
type StatusCodesBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutput() StatusCodesBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseOutput) ToStatusCodesBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Request Path
func (o StatusCodesBasedTriggerResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// HTTP status code.
func (o StatusCodesBasedTriggerResponseOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Status }).(pulumi.IntPtrOutput)
}

// Request Sub Status.
func (o StatusCodesBasedTriggerResponseOutput) SubStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.SubStatus }).(pulumi.IntPtrOutput)
}

// Time interval.
func (o StatusCodesBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

// Win32 error code.
func (o StatusCodesBasedTriggerResponseOutput) Win32Status() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesBasedTriggerResponse) *int { return v.Win32Status }).(pulumi.IntPtrOutput)
}

type StatusCodesBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutput() StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) ToStatusCodesBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesBasedTriggerResponse {
		return vs[0].([]StatusCodesBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesBasedTriggerResponseOutput)
}

// Trigger based on range of status codes.
type StatusCodesRangeBasedTrigger struct {
	// Request Count.
	Count *int    `pulumi:"count"`
	Path  *string `pulumi:"path"`
	// HTTP status code.
	StatusCodes *string `pulumi:"statusCodes"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// StatusCodesRangeBasedTriggerInput is an input type that accepts StatusCodesRangeBasedTriggerArgs and StatusCodesRangeBasedTriggerOutput values.
// You can construct a concrete instance of `StatusCodesRangeBasedTriggerInput` via:
//
//	StatusCodesRangeBasedTriggerArgs{...}
type StatusCodesRangeBasedTriggerInput interface {
	pulumi.Input

	ToStatusCodesRangeBasedTriggerOutput() StatusCodesRangeBasedTriggerOutput
	ToStatusCodesRangeBasedTriggerOutputWithContext(context.Context) StatusCodesRangeBasedTriggerOutput
}

// Trigger based on range of status codes.
type StatusCodesRangeBasedTriggerArgs struct {
	// Request Count.
	Count pulumi.IntPtrInput    `pulumi:"count"`
	Path  pulumi.StringPtrInput `pulumi:"path"`
	// HTTP status code.
	StatusCodes pulumi.StringPtrInput `pulumi:"statusCodes"`
	// Time interval.
	TimeInterval pulumi.StringPtrInput `pulumi:"timeInterval"`
}

func (StatusCodesRangeBasedTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesRangeBasedTrigger)(nil)).Elem()
}

func (i StatusCodesRangeBasedTriggerArgs) ToStatusCodesRangeBasedTriggerOutput() StatusCodesRangeBasedTriggerOutput {
	return i.ToStatusCodesRangeBasedTriggerOutputWithContext(context.Background())
}

func (i StatusCodesRangeBasedTriggerArgs) ToStatusCodesRangeBasedTriggerOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesRangeBasedTriggerOutput)
}

// StatusCodesRangeBasedTriggerArrayInput is an input type that accepts StatusCodesRangeBasedTriggerArray and StatusCodesRangeBasedTriggerArrayOutput values.
// You can construct a concrete instance of `StatusCodesRangeBasedTriggerArrayInput` via:
//
//	StatusCodesRangeBasedTriggerArray{ StatusCodesRangeBasedTriggerArgs{...} }
type StatusCodesRangeBasedTriggerArrayInput interface {
	pulumi.Input

	ToStatusCodesRangeBasedTriggerArrayOutput() StatusCodesRangeBasedTriggerArrayOutput
	ToStatusCodesRangeBasedTriggerArrayOutputWithContext(context.Context) StatusCodesRangeBasedTriggerArrayOutput
}

type StatusCodesRangeBasedTriggerArray []StatusCodesRangeBasedTriggerInput

func (StatusCodesRangeBasedTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesRangeBasedTrigger)(nil)).Elem()
}

func (i StatusCodesRangeBasedTriggerArray) ToStatusCodesRangeBasedTriggerArrayOutput() StatusCodesRangeBasedTriggerArrayOutput {
	return i.ToStatusCodesRangeBasedTriggerArrayOutputWithContext(context.Background())
}

func (i StatusCodesRangeBasedTriggerArray) ToStatusCodesRangeBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusCodesRangeBasedTriggerArrayOutput)
}

// Trigger based on range of status codes.
type StatusCodesRangeBasedTriggerOutput struct{ *pulumi.OutputState }

func (StatusCodesRangeBasedTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesRangeBasedTrigger)(nil)).Elem()
}

func (o StatusCodesRangeBasedTriggerOutput) ToStatusCodesRangeBasedTriggerOutput() StatusCodesRangeBasedTriggerOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerOutput) ToStatusCodesRangeBasedTriggerOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerOutput {
	return o
}

// Request Count.
func (o StatusCodesRangeBasedTriggerOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTrigger) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o StatusCodesRangeBasedTriggerOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTrigger) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// HTTP status code.
func (o StatusCodesRangeBasedTriggerOutput) StatusCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTrigger) *string { return v.StatusCodes }).(pulumi.StringPtrOutput)
}

// Time interval.
func (o StatusCodesRangeBasedTriggerOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTrigger) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type StatusCodesRangeBasedTriggerArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesRangeBasedTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesRangeBasedTrigger)(nil)).Elem()
}

func (o StatusCodesRangeBasedTriggerArrayOutput) ToStatusCodesRangeBasedTriggerArrayOutput() StatusCodesRangeBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerArrayOutput) ToStatusCodesRangeBasedTriggerArrayOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerArrayOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerArrayOutput) Index(i pulumi.IntInput) StatusCodesRangeBasedTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesRangeBasedTrigger {
		return vs[0].([]StatusCodesRangeBasedTrigger)[vs[1].(int)]
	}).(StatusCodesRangeBasedTriggerOutput)
}

// Trigger based on range of status codes.
type StatusCodesRangeBasedTriggerResponse struct {
	// Request Count.
	Count *int    `pulumi:"count"`
	Path  *string `pulumi:"path"`
	// HTTP status code.
	StatusCodes *string `pulumi:"statusCodes"`
	// Time interval.
	TimeInterval *string `pulumi:"timeInterval"`
}

// Trigger based on range of status codes.
type StatusCodesRangeBasedTriggerResponseOutput struct{ *pulumi.OutputState }

func (StatusCodesRangeBasedTriggerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusCodesRangeBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesRangeBasedTriggerResponseOutput) ToStatusCodesRangeBasedTriggerResponseOutput() StatusCodesRangeBasedTriggerResponseOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerResponseOutput) ToStatusCodesRangeBasedTriggerResponseOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerResponseOutput {
	return o
}

// Request Count.
func (o StatusCodesRangeBasedTriggerResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTriggerResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o StatusCodesRangeBasedTriggerResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTriggerResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// HTTP status code.
func (o StatusCodesRangeBasedTriggerResponseOutput) StatusCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTriggerResponse) *string { return v.StatusCodes }).(pulumi.StringPtrOutput)
}

// Time interval.
func (o StatusCodesRangeBasedTriggerResponseOutput) TimeInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusCodesRangeBasedTriggerResponse) *string { return v.TimeInterval }).(pulumi.StringPtrOutput)
}

type StatusCodesRangeBasedTriggerResponseArrayOutput struct{ *pulumi.OutputState }

func (StatusCodesRangeBasedTriggerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatusCodesRangeBasedTriggerResponse)(nil)).Elem()
}

func (o StatusCodesRangeBasedTriggerResponseArrayOutput) ToStatusCodesRangeBasedTriggerResponseArrayOutput() StatusCodesRangeBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerResponseArrayOutput) ToStatusCodesRangeBasedTriggerResponseArrayOutputWithContext(ctx context.Context) StatusCodesRangeBasedTriggerResponseArrayOutput {
	return o
}

func (o StatusCodesRangeBasedTriggerResponseArrayOutput) Index(i pulumi.IntInput) StatusCodesRangeBasedTriggerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatusCodesRangeBasedTriggerResponse {
		return vs[0].([]StatusCodesRangeBasedTriggerResponse)[vs[1].(int)]
	}).(StatusCodesRangeBasedTriggerResponseOutput)
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponse struct {
	// The timestamp of resource creation (UTC).
	CreatedAt *string `pulumi:"createdAt"`
	// The identity that created the resource.
	CreatedBy *string `pulumi:"createdBy"`
	// The type of identity that created the resource.
	CreatedByType *string `pulumi:"createdByType"`
	// The timestamp of resource last modification (UTC)
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The identity that last modified the resource.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The type of identity that last modified the resource.
	LastModifiedByType *string `pulumi:"lastModifiedByType"`
}

// Metadata pertaining to creation and last modification of the resource.
type SystemDataResponseOutput struct{ *pulumi.OutputState }

func (SystemDataResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SystemDataResponse)(nil)).Elem()
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutput() SystemDataResponseOutput {
	return o
}

func (o SystemDataResponseOutput) ToSystemDataResponseOutputWithContext(ctx context.Context) SystemDataResponseOutput {
	return o
}

// The timestamp of resource creation (UTC).
func (o SystemDataResponseOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The identity that created the resource.
func (o SystemDataResponseOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that created the resource.
func (o SystemDataResponseOutput) CreatedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.CreatedByType }).(pulumi.StringPtrOutput)
}

// The timestamp of resource last modification (UTC)
func (o SystemDataResponseOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The type of identity that last modified the resource.
func (o SystemDataResponseOutput) LastModifiedByType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SystemDataResponse) *string { return v.LastModifiedByType }).(pulumi.StringPtrOutput)
}

// Container App versioned application definition.
// Defines the desired state of an immutable revision.
// Any changes to this section Will result in a new revision being created
type Template struct {
	// List of container definitions for the Container App.
	Containers []Container `pulumi:"containers"`
	// Dapr configuration for the Container App.
	Dapr *Dapr `pulumi:"dapr"`
	// User friendly suffix that is appended to the revision name
	RevisionSuffix *string `pulumi:"revisionSuffix"`
	// Scaling properties for the Container App.
	Scale *Scale `pulumi:"scale"`
}

// TemplateInput is an input type that accepts TemplateArgs and TemplateOutput values.
// You can construct a concrete instance of `TemplateInput` via:
//
//	TemplateArgs{...}
type TemplateInput interface {
	pulumi.Input

	ToTemplateOutput() TemplateOutput
	ToTemplateOutputWithContext(context.Context) TemplateOutput
}

// Container App versioned application definition.
// Defines the desired state of an immutable revision.
// Any changes to this section Will result in a new revision being created
type TemplateArgs struct {
	// List of container definitions for the Container App.
	Containers ContainerArrayInput `pulumi:"containers"`
	// Dapr configuration for the Container App.
	Dapr DaprPtrInput `pulumi:"dapr"`
	// User friendly suffix that is appended to the revision name
	RevisionSuffix pulumi.StringPtrInput `pulumi:"revisionSuffix"`
	// Scaling properties for the Container App.
	Scale ScalePtrInput `pulumi:"scale"`
}

func (TemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Template)(nil)).Elem()
}

func (i TemplateArgs) ToTemplateOutput() TemplateOutput {
	return i.ToTemplateOutputWithContext(context.Background())
}

func (i TemplateArgs) ToTemplateOutputWithContext(ctx context.Context) TemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateOutput)
}

func (i TemplateArgs) ToTemplatePtrOutput() TemplatePtrOutput {
	return i.ToTemplatePtrOutputWithContext(context.Background())
}

func (i TemplateArgs) ToTemplatePtrOutputWithContext(ctx context.Context) TemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateOutput).ToTemplatePtrOutputWithContext(ctx)
}

// TemplatePtrInput is an input type that accepts TemplateArgs, TemplatePtr and TemplatePtrOutput values.
// You can construct a concrete instance of `TemplatePtrInput` via:
//
//	        TemplateArgs{...}
//
//	or:
//
//	        nil
type TemplatePtrInput interface {
	pulumi.Input

	ToTemplatePtrOutput() TemplatePtrOutput
	ToTemplatePtrOutputWithContext(context.Context) TemplatePtrOutput
}

type templatePtrType TemplateArgs

func TemplatePtr(v *TemplateArgs) TemplatePtrInput {
	return (*templatePtrType)(v)
}

func (*templatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Template)(nil)).Elem()
}

func (i *templatePtrType) ToTemplatePtrOutput() TemplatePtrOutput {
	return i.ToTemplatePtrOutputWithContext(context.Background())
}

func (i *templatePtrType) ToTemplatePtrOutputWithContext(ctx context.Context) TemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplatePtrOutput)
}

// Container App versioned application definition.
// Defines the desired state of an immutable revision.
// Any changes to this section Will result in a new revision being created
type TemplateOutput struct{ *pulumi.OutputState }

func (TemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Template)(nil)).Elem()
}

func (o TemplateOutput) ToTemplateOutput() TemplateOutput {
	return o
}

func (o TemplateOutput) ToTemplateOutputWithContext(ctx context.Context) TemplateOutput {
	return o
}

func (o TemplateOutput) ToTemplatePtrOutput() TemplatePtrOutput {
	return o.ToTemplatePtrOutputWithContext(context.Background())
}

func (o TemplateOutput) ToTemplatePtrOutputWithContext(ctx context.Context) TemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Template) *Template {
		return &v
	}).(TemplatePtrOutput)
}

// List of container definitions for the Container App.
func (o TemplateOutput) Containers() ContainerArrayOutput {
	return o.ApplyT(func(v Template) []Container { return v.Containers }).(ContainerArrayOutput)
}

// Dapr configuration for the Container App.
func (o TemplateOutput) Dapr() DaprPtrOutput {
	return o.ApplyT(func(v Template) *Dapr { return v.Dapr }).(DaprPtrOutput)
}

// User friendly suffix that is appended to the revision name
func (o TemplateOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Template) *string { return v.RevisionSuffix }).(pulumi.StringPtrOutput)
}

// Scaling properties for the Container App.
func (o TemplateOutput) Scale() ScalePtrOutput {
	return o.ApplyT(func(v Template) *Scale { return v.Scale }).(ScalePtrOutput)
}

type TemplatePtrOutput struct{ *pulumi.OutputState }

func (TemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Template)(nil)).Elem()
}

func (o TemplatePtrOutput) ToTemplatePtrOutput() TemplatePtrOutput {
	return o
}

func (o TemplatePtrOutput) ToTemplatePtrOutputWithContext(ctx context.Context) TemplatePtrOutput {
	return o
}

func (o TemplatePtrOutput) Elem() TemplateOutput {
	return o.ApplyT(func(v *Template) Template {
		if v != nil {
			return *v
		}
		var ret Template
		return ret
	}).(TemplateOutput)
}

// List of container definitions for the Container App.
func (o TemplatePtrOutput) Containers() ContainerArrayOutput {
	return o.ApplyT(func(v *Template) []Container {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ContainerArrayOutput)
}

// Dapr configuration for the Container App.
func (o TemplatePtrOutput) Dapr() DaprPtrOutput {
	return o.ApplyT(func(v *Template) *Dapr {
		if v == nil {
			return nil
		}
		return v.Dapr
	}).(DaprPtrOutput)
}

// User friendly suffix that is appended to the revision name
func (o TemplatePtrOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Template) *string {
		if v == nil {
			return nil
		}
		return v.RevisionSuffix
	}).(pulumi.StringPtrOutput)
}

// Scaling properties for the Container App.
func (o TemplatePtrOutput) Scale() ScalePtrOutput {
	return o.ApplyT(func(v *Template) *Scale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(ScalePtrOutput)
}

// Container App versioned application definition.
// Defines the desired state of an immutable revision.
// Any changes to this section Will result in a new revision being created
type TemplateResponse struct {
	// List of container definitions for the Container App.
	Containers []ContainerResponse `pulumi:"containers"`
	// Dapr configuration for the Container App.
	Dapr *DaprResponse `pulumi:"dapr"`
	// User friendly suffix that is appended to the revision name
	RevisionSuffix *string `pulumi:"revisionSuffix"`
	// Scaling properties for the Container App.
	Scale *ScaleResponse `pulumi:"scale"`
}

// Container App versioned application definition.
// Defines the desired state of an immutable revision.
// Any changes to this section Will result in a new revision being created
type TemplateResponseOutput struct{ *pulumi.OutputState }

func (TemplateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateResponse)(nil)).Elem()
}

func (o TemplateResponseOutput) ToTemplateResponseOutput() TemplateResponseOutput {
	return o
}

func (o TemplateResponseOutput) ToTemplateResponseOutputWithContext(ctx context.Context) TemplateResponseOutput {
	return o
}

// List of container definitions for the Container App.
func (o TemplateResponseOutput) Containers() ContainerResponseArrayOutput {
	return o.ApplyT(func(v TemplateResponse) []ContainerResponse { return v.Containers }).(ContainerResponseArrayOutput)
}

// Dapr configuration for the Container App.
func (o TemplateResponseOutput) Dapr() DaprResponsePtrOutput {
	return o.ApplyT(func(v TemplateResponse) *DaprResponse { return v.Dapr }).(DaprResponsePtrOutput)
}

// User friendly suffix that is appended to the revision name
func (o TemplateResponseOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateResponse) *string { return v.RevisionSuffix }).(pulumi.StringPtrOutput)
}

// Scaling properties for the Container App.
func (o TemplateResponseOutput) Scale() ScaleResponsePtrOutput {
	return o.ApplyT(func(v TemplateResponse) *ScaleResponse { return v.Scale }).(ScaleResponsePtrOutput)
}

type TemplateResponsePtrOutput struct{ *pulumi.OutputState }

func (TemplateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateResponse)(nil)).Elem()
}

func (o TemplateResponsePtrOutput) ToTemplateResponsePtrOutput() TemplateResponsePtrOutput {
	return o
}

func (o TemplateResponsePtrOutput) ToTemplateResponsePtrOutputWithContext(ctx context.Context) TemplateResponsePtrOutput {
	return o
}

func (o TemplateResponsePtrOutput) Elem() TemplateResponseOutput {
	return o.ApplyT(func(v *TemplateResponse) TemplateResponse {
		if v != nil {
			return *v
		}
		var ret TemplateResponse
		return ret
	}).(TemplateResponseOutput)
}

// List of container definitions for the Container App.
func (o TemplateResponsePtrOutput) Containers() ContainerResponseArrayOutput {
	return o.ApplyT(func(v *TemplateResponse) []ContainerResponse {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ContainerResponseArrayOutput)
}

// Dapr configuration for the Container App.
func (o TemplateResponsePtrOutput) Dapr() DaprResponsePtrOutput {
	return o.ApplyT(func(v *TemplateResponse) *DaprResponse {
		if v == nil {
			return nil
		}
		return v.Dapr
	}).(DaprResponsePtrOutput)
}

// User friendly suffix that is appended to the revision name
func (o TemplateResponsePtrOutput) RevisionSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateResponse) *string {
		if v == nil {
			return nil
		}
		return v.RevisionSuffix
	}).(pulumi.StringPtrOutput)
}

// Scaling properties for the Container App.
func (o TemplateResponsePtrOutput) Scale() ScaleResponsePtrOutput {
	return o.ApplyT(func(v *TemplateResponse) *ScaleResponse {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(ScaleResponsePtrOutput)
}

// The configuration settings of the token store.
type TokenStore struct {
	// The configuration settings of the storage of the tokens if blob storage is used.
	AzureBlobStorage *BlobStorageTokenStore `pulumi:"azureBlobStorage"`
	// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
	//  The default is <code>false</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the storage of the tokens if a file system is used.
	FileSystem *FileSystemTokenStore `pulumi:"fileSystem"`
	// The number of hours after session token expiration that a session token can be used to
	// call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
}

// TokenStoreInput is an input type that accepts TokenStoreArgs and TokenStoreOutput values.
// You can construct a concrete instance of `TokenStoreInput` via:
//
//	TokenStoreArgs{...}
type TokenStoreInput interface {
	pulumi.Input

	ToTokenStoreOutput() TokenStoreOutput
	ToTokenStoreOutputWithContext(context.Context) TokenStoreOutput
}

// The configuration settings of the token store.
type TokenStoreArgs struct {
	// The configuration settings of the storage of the tokens if blob storage is used.
	AzureBlobStorage BlobStorageTokenStorePtrInput `pulumi:"azureBlobStorage"`
	// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
	//  The default is <code>false</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the storage of the tokens if a file system is used.
	FileSystem FileSystemTokenStorePtrInput `pulumi:"fileSystem"`
	// The number of hours after session token expiration that a session token can be used to
	// call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours pulumi.Float64PtrInput `pulumi:"tokenRefreshExtensionHours"`
}

func (TokenStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenStore)(nil)).Elem()
}

func (i TokenStoreArgs) ToTokenStoreOutput() TokenStoreOutput {
	return i.ToTokenStoreOutputWithContext(context.Background())
}

func (i TokenStoreArgs) ToTokenStoreOutputWithContext(ctx context.Context) TokenStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenStoreOutput)
}

func (i TokenStoreArgs) ToTokenStorePtrOutput() TokenStorePtrOutput {
	return i.ToTokenStorePtrOutputWithContext(context.Background())
}

func (i TokenStoreArgs) ToTokenStorePtrOutputWithContext(ctx context.Context) TokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenStoreOutput).ToTokenStorePtrOutputWithContext(ctx)
}

// TokenStorePtrInput is an input type that accepts TokenStoreArgs, TokenStorePtr and TokenStorePtrOutput values.
// You can construct a concrete instance of `TokenStorePtrInput` via:
//
//	        TokenStoreArgs{...}
//
//	or:
//
//	        nil
type TokenStorePtrInput interface {
	pulumi.Input

	ToTokenStorePtrOutput() TokenStorePtrOutput
	ToTokenStorePtrOutputWithContext(context.Context) TokenStorePtrOutput
}

type tokenStorePtrType TokenStoreArgs

func TokenStorePtr(v *TokenStoreArgs) TokenStorePtrInput {
	return (*tokenStorePtrType)(v)
}

func (*tokenStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenStore)(nil)).Elem()
}

func (i *tokenStorePtrType) ToTokenStorePtrOutput() TokenStorePtrOutput {
	return i.ToTokenStorePtrOutputWithContext(context.Background())
}

func (i *tokenStorePtrType) ToTokenStorePtrOutputWithContext(ctx context.Context) TokenStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenStorePtrOutput)
}

// The configuration settings of the token store.
type TokenStoreOutput struct{ *pulumi.OutputState }

func (TokenStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenStore)(nil)).Elem()
}

func (o TokenStoreOutput) ToTokenStoreOutput() TokenStoreOutput {
	return o
}

func (o TokenStoreOutput) ToTokenStoreOutputWithContext(ctx context.Context) TokenStoreOutput {
	return o
}

func (o TokenStoreOutput) ToTokenStorePtrOutput() TokenStorePtrOutput {
	return o.ToTokenStorePtrOutputWithContext(context.Background())
}

func (o TokenStoreOutput) ToTokenStorePtrOutputWithContext(ctx context.Context) TokenStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TokenStore) *TokenStore {
		return &v
	}).(TokenStorePtrOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
func (o TokenStoreOutput) AzureBlobStorage() BlobStorageTokenStorePtrOutput {
	return o.ApplyT(func(v TokenStore) *BlobStorageTokenStore { return v.AzureBlobStorage }).(BlobStorageTokenStorePtrOutput)
}

// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
//
//	The default is <code>false</code>.
func (o TokenStoreOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TokenStore) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
func (o TokenStoreOutput) FileSystem() FileSystemTokenStorePtrOutput {
	return o.ApplyT(func(v TokenStore) *FileSystemTokenStore { return v.FileSystem }).(FileSystemTokenStorePtrOutput)
}

// The number of hours after session token expiration that a session token can be used to
// call the token refresh API. The default is 72 hours.
func (o TokenStoreOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TokenStore) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

type TokenStorePtrOutput struct{ *pulumi.OutputState }

func (TokenStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenStore)(nil)).Elem()
}

func (o TokenStorePtrOutput) ToTokenStorePtrOutput() TokenStorePtrOutput {
	return o
}

func (o TokenStorePtrOutput) ToTokenStorePtrOutputWithContext(ctx context.Context) TokenStorePtrOutput {
	return o
}

func (o TokenStorePtrOutput) Elem() TokenStoreOutput {
	return o.ApplyT(func(v *TokenStore) TokenStore {
		if v != nil {
			return *v
		}
		var ret TokenStore
		return ret
	}).(TokenStoreOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
func (o TokenStorePtrOutput) AzureBlobStorage() BlobStorageTokenStorePtrOutput {
	return o.ApplyT(func(v *TokenStore) *BlobStorageTokenStore {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(BlobStorageTokenStorePtrOutput)
}

// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
//
//	The default is <code>false</code>.
func (o TokenStorePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TokenStore) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
func (o TokenStorePtrOutput) FileSystem() FileSystemTokenStorePtrOutput {
	return o.ApplyT(func(v *TokenStore) *FileSystemTokenStore {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemTokenStorePtrOutput)
}

// The number of hours after session token expiration that a session token can be used to
// call the token refresh API. The default is 72 hours.
func (o TokenStorePtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TokenStore) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// The configuration settings of the token store.
type TokenStoreResponse struct {
	// The configuration settings of the storage of the tokens if blob storage is used.
	AzureBlobStorage *BlobStorageTokenStoreResponse `pulumi:"azureBlobStorage"`
	// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
	//  The default is <code>false</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the storage of the tokens if a file system is used.
	FileSystem *FileSystemTokenStoreResponse `pulumi:"fileSystem"`
	// The number of hours after session token expiration that a session token can be used to
	// call the token refresh API. The default is 72 hours.
	TokenRefreshExtensionHours *float64 `pulumi:"tokenRefreshExtensionHours"`
}

// The configuration settings of the token store.
type TokenStoreResponseOutput struct{ *pulumi.OutputState }

func (TokenStoreResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenStoreResponse)(nil)).Elem()
}

func (o TokenStoreResponseOutput) ToTokenStoreResponseOutput() TokenStoreResponseOutput {
	return o
}

func (o TokenStoreResponseOutput) ToTokenStoreResponseOutputWithContext(ctx context.Context) TokenStoreResponseOutput {
	return o
}

// The configuration settings of the storage of the tokens if blob storage is used.
func (o TokenStoreResponseOutput) AzureBlobStorage() BlobStorageTokenStoreResponsePtrOutput {
	return o.ApplyT(func(v TokenStoreResponse) *BlobStorageTokenStoreResponse { return v.AzureBlobStorage }).(BlobStorageTokenStoreResponsePtrOutput)
}

// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
//
//	The default is <code>false</code>.
func (o TokenStoreResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TokenStoreResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
func (o TokenStoreResponseOutput) FileSystem() FileSystemTokenStoreResponsePtrOutput {
	return o.ApplyT(func(v TokenStoreResponse) *FileSystemTokenStoreResponse { return v.FileSystem }).(FileSystemTokenStoreResponsePtrOutput)
}

// The number of hours after session token expiration that a session token can be used to
// call the token refresh API. The default is 72 hours.
func (o TokenStoreResponseOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TokenStoreResponse) *float64 { return v.TokenRefreshExtensionHours }).(pulumi.Float64PtrOutput)
}

type TokenStoreResponsePtrOutput struct{ *pulumi.OutputState }

func (TokenStoreResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TokenStoreResponse)(nil)).Elem()
}

func (o TokenStoreResponsePtrOutput) ToTokenStoreResponsePtrOutput() TokenStoreResponsePtrOutput {
	return o
}

func (o TokenStoreResponsePtrOutput) ToTokenStoreResponsePtrOutputWithContext(ctx context.Context) TokenStoreResponsePtrOutput {
	return o
}

func (o TokenStoreResponsePtrOutput) Elem() TokenStoreResponseOutput {
	return o.ApplyT(func(v *TokenStoreResponse) TokenStoreResponse {
		if v != nil {
			return *v
		}
		var ret TokenStoreResponse
		return ret
	}).(TokenStoreResponseOutput)
}

// The configuration settings of the storage of the tokens if blob storage is used.
func (o TokenStoreResponsePtrOutput) AzureBlobStorage() BlobStorageTokenStoreResponsePtrOutput {
	return o.ApplyT(func(v *TokenStoreResponse) *BlobStorageTokenStoreResponse {
		if v == nil {
			return nil
		}
		return v.AzureBlobStorage
	}).(BlobStorageTokenStoreResponsePtrOutput)
}

// <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
//
//	The default is <code>false</code>.
func (o TokenStoreResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TokenStoreResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the storage of the tokens if a file system is used.
func (o TokenStoreResponsePtrOutput) FileSystem() FileSystemTokenStoreResponsePtrOutput {
	return o.ApplyT(func(v *TokenStoreResponse) *FileSystemTokenStoreResponse {
		if v == nil {
			return nil
		}
		return v.FileSystem
	}).(FileSystemTokenStoreResponsePtrOutput)
}

// The number of hours after session token expiration that a session token can be used to
// call the token refresh API. The default is 72 hours.
func (o TokenStoreResponsePtrOutput) TokenRefreshExtensionHours() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TokenStoreResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.TokenRefreshExtensionHours
	}).(pulumi.Float64PtrOutput)
}

// Traffic weight assigned to a revision
type TrafficWeight struct {
	// Indicates that the traffic weight belongs to a latest stable revision
	LatestRevision *bool `pulumi:"latestRevision"`
	// Name of a revision
	RevisionName *string `pulumi:"revisionName"`
	// Traffic weight assigned to a revision
	Weight *int `pulumi:"weight"`
}

// Defaults sets the appropriate defaults for TrafficWeight
func (val *TrafficWeight) Defaults() *TrafficWeight {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.LatestRevision) {
		latestRevision_ := false
		tmp.LatestRevision = &latestRevision_
	}
	return &tmp
}

// TrafficWeightInput is an input type that accepts TrafficWeightArgs and TrafficWeightOutput values.
// You can construct a concrete instance of `TrafficWeightInput` via:
//
//	TrafficWeightArgs{...}
type TrafficWeightInput interface {
	pulumi.Input

	ToTrafficWeightOutput() TrafficWeightOutput
	ToTrafficWeightOutputWithContext(context.Context) TrafficWeightOutput
}

// Traffic weight assigned to a revision
type TrafficWeightArgs struct {
	// Indicates that the traffic weight belongs to a latest stable revision
	LatestRevision pulumi.BoolPtrInput `pulumi:"latestRevision"`
	// Name of a revision
	RevisionName pulumi.StringPtrInput `pulumi:"revisionName"`
	// Traffic weight assigned to a revision
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

// Defaults sets the appropriate defaults for TrafficWeightArgs
func (val *TrafficWeightArgs) Defaults() *TrafficWeightArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.LatestRevision) {
		tmp.LatestRevision = pulumi.BoolPtr(false)
	}
	return &tmp
}
func (TrafficWeightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficWeight)(nil)).Elem()
}

func (i TrafficWeightArgs) ToTrafficWeightOutput() TrafficWeightOutput {
	return i.ToTrafficWeightOutputWithContext(context.Background())
}

func (i TrafficWeightArgs) ToTrafficWeightOutputWithContext(ctx context.Context) TrafficWeightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficWeightOutput)
}

// TrafficWeightArrayInput is an input type that accepts TrafficWeightArray and TrafficWeightArrayOutput values.
// You can construct a concrete instance of `TrafficWeightArrayInput` via:
//
//	TrafficWeightArray{ TrafficWeightArgs{...} }
type TrafficWeightArrayInput interface {
	pulumi.Input

	ToTrafficWeightArrayOutput() TrafficWeightArrayOutput
	ToTrafficWeightArrayOutputWithContext(context.Context) TrafficWeightArrayOutput
}

type TrafficWeightArray []TrafficWeightInput

func (TrafficWeightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficWeight)(nil)).Elem()
}

func (i TrafficWeightArray) ToTrafficWeightArrayOutput() TrafficWeightArrayOutput {
	return i.ToTrafficWeightArrayOutputWithContext(context.Background())
}

func (i TrafficWeightArray) ToTrafficWeightArrayOutputWithContext(ctx context.Context) TrafficWeightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficWeightArrayOutput)
}

// Traffic weight assigned to a revision
type TrafficWeightOutput struct{ *pulumi.OutputState }

func (TrafficWeightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficWeight)(nil)).Elem()
}

func (o TrafficWeightOutput) ToTrafficWeightOutput() TrafficWeightOutput {
	return o
}

func (o TrafficWeightOutput) ToTrafficWeightOutputWithContext(ctx context.Context) TrafficWeightOutput {
	return o
}

// Indicates that the traffic weight belongs to a latest stable revision
func (o TrafficWeightOutput) LatestRevision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficWeight) *bool { return v.LatestRevision }).(pulumi.BoolPtrOutput)
}

// Name of a revision
func (o TrafficWeightOutput) RevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficWeight) *string { return v.RevisionName }).(pulumi.StringPtrOutput)
}

// Traffic weight assigned to a revision
func (o TrafficWeightOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficWeight) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type TrafficWeightArrayOutput struct{ *pulumi.OutputState }

func (TrafficWeightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficWeight)(nil)).Elem()
}

func (o TrafficWeightArrayOutput) ToTrafficWeightArrayOutput() TrafficWeightArrayOutput {
	return o
}

func (o TrafficWeightArrayOutput) ToTrafficWeightArrayOutputWithContext(ctx context.Context) TrafficWeightArrayOutput {
	return o
}

func (o TrafficWeightArrayOutput) Index(i pulumi.IntInput) TrafficWeightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficWeight {
		return vs[0].([]TrafficWeight)[vs[1].(int)]
	}).(TrafficWeightOutput)
}

// Traffic weight assigned to a revision
type TrafficWeightResponse struct {
	// Indicates that the traffic weight belongs to a latest stable revision
	LatestRevision *bool `pulumi:"latestRevision"`
	// Name of a revision
	RevisionName *string `pulumi:"revisionName"`
	// Traffic weight assigned to a revision
	Weight *int `pulumi:"weight"`
}

// Defaults sets the appropriate defaults for TrafficWeightResponse
func (val *TrafficWeightResponse) Defaults() *TrafficWeightResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	if isZero(tmp.LatestRevision) {
		latestRevision_ := false
		tmp.LatestRevision = &latestRevision_
	}
	return &tmp
}

// Traffic weight assigned to a revision
type TrafficWeightResponseOutput struct{ *pulumi.OutputState }

func (TrafficWeightResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficWeightResponse)(nil)).Elem()
}

func (o TrafficWeightResponseOutput) ToTrafficWeightResponseOutput() TrafficWeightResponseOutput {
	return o
}

func (o TrafficWeightResponseOutput) ToTrafficWeightResponseOutputWithContext(ctx context.Context) TrafficWeightResponseOutput {
	return o
}

// Indicates that the traffic weight belongs to a latest stable revision
func (o TrafficWeightResponseOutput) LatestRevision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficWeightResponse) *bool { return v.LatestRevision }).(pulumi.BoolPtrOutput)
}

// Name of a revision
func (o TrafficWeightResponseOutput) RevisionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficWeightResponse) *string { return v.RevisionName }).(pulumi.StringPtrOutput)
}

// Traffic weight assigned to a revision
func (o TrafficWeightResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficWeightResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type TrafficWeightResponseArrayOutput struct{ *pulumi.OutputState }

func (TrafficWeightResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficWeightResponse)(nil)).Elem()
}

func (o TrafficWeightResponseArrayOutput) ToTrafficWeightResponseArrayOutput() TrafficWeightResponseArrayOutput {
	return o
}

func (o TrafficWeightResponseArrayOutput) ToTrafficWeightResponseArrayOutputWithContext(ctx context.Context) TrafficWeightResponseArrayOutput {
	return o
}

func (o TrafficWeightResponseArrayOutput) Index(i pulumi.IntInput) TrafficWeightResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficWeightResponse {
		return vs[0].([]TrafficWeightResponse)[vs[1].(int)]
	}).(TrafficWeightResponseOutput)
}

// The configuration settings of the Twitter provider.
type Twitter struct {
	// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the app registration for the Twitter provider.
	Registration *TwitterRegistration `pulumi:"registration"`
}

// TwitterInput is an input type that accepts TwitterArgs and TwitterOutput values.
// You can construct a concrete instance of `TwitterInput` via:
//
//	TwitterArgs{...}
type TwitterInput interface {
	pulumi.Input

	ToTwitterOutput() TwitterOutput
	ToTwitterOutputWithContext(context.Context) TwitterOutput
}

// The configuration settings of the Twitter provider.
type TwitterArgs struct {
	// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The configuration settings of the app registration for the Twitter provider.
	Registration TwitterRegistrationPtrInput `pulumi:"registration"`
}

func (TwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Twitter)(nil)).Elem()
}

func (i TwitterArgs) ToTwitterOutput() TwitterOutput {
	return i.ToTwitterOutputWithContext(context.Background())
}

func (i TwitterArgs) ToTwitterOutputWithContext(ctx context.Context) TwitterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterOutput)
}

func (i TwitterArgs) ToTwitterPtrOutput() TwitterPtrOutput {
	return i.ToTwitterPtrOutputWithContext(context.Background())
}

func (i TwitterArgs) ToTwitterPtrOutputWithContext(ctx context.Context) TwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterOutput).ToTwitterPtrOutputWithContext(ctx)
}

// TwitterPtrInput is an input type that accepts TwitterArgs, TwitterPtr and TwitterPtrOutput values.
// You can construct a concrete instance of `TwitterPtrInput` via:
//
//	        TwitterArgs{...}
//
//	or:
//
//	        nil
type TwitterPtrInput interface {
	pulumi.Input

	ToTwitterPtrOutput() TwitterPtrOutput
	ToTwitterPtrOutputWithContext(context.Context) TwitterPtrOutput
}

type twitterPtrType TwitterArgs

func TwitterPtr(v *TwitterArgs) TwitterPtrInput {
	return (*twitterPtrType)(v)
}

func (*twitterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Twitter)(nil)).Elem()
}

func (i *twitterPtrType) ToTwitterPtrOutput() TwitterPtrOutput {
	return i.ToTwitterPtrOutputWithContext(context.Background())
}

func (i *twitterPtrType) ToTwitterPtrOutputWithContext(ctx context.Context) TwitterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterPtrOutput)
}

// The configuration settings of the Twitter provider.
type TwitterOutput struct{ *pulumi.OutputState }

func (TwitterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Twitter)(nil)).Elem()
}

func (o TwitterOutput) ToTwitterOutput() TwitterOutput {
	return o
}

func (o TwitterOutput) ToTwitterOutputWithContext(ctx context.Context) TwitterOutput {
	return o
}

func (o TwitterOutput) ToTwitterPtrOutput() TwitterPtrOutput {
	return o.ToTwitterPtrOutputWithContext(context.Background())
}

func (o TwitterOutput) ToTwitterPtrOutputWithContext(ctx context.Context) TwitterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Twitter) *Twitter {
		return &v
	}).(TwitterPtrOutput)
}

// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o TwitterOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Twitter) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
func (o TwitterOutput) Registration() TwitterRegistrationPtrOutput {
	return o.ApplyT(func(v Twitter) *TwitterRegistration { return v.Registration }).(TwitterRegistrationPtrOutput)
}

type TwitterPtrOutput struct{ *pulumi.OutputState }

func (TwitterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Twitter)(nil)).Elem()
}

func (o TwitterPtrOutput) ToTwitterPtrOutput() TwitterPtrOutput {
	return o
}

func (o TwitterPtrOutput) ToTwitterPtrOutputWithContext(ctx context.Context) TwitterPtrOutput {
	return o
}

func (o TwitterPtrOutput) Elem() TwitterOutput {
	return o.ApplyT(func(v *Twitter) Twitter {
		if v != nil {
			return *v
		}
		var ret Twitter
		return ret
	}).(TwitterOutput)
}

// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o TwitterPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Twitter) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
func (o TwitterPtrOutput) Registration() TwitterRegistrationPtrOutput {
	return o.ApplyT(func(v *Twitter) *TwitterRegistration {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(TwitterRegistrationPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
type TwitterRegistration struct {
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	ConsumerKey *string `pulumi:"consumerKey"`
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
	// application used for sign-in.
	ConsumerSecretSettingName *string `pulumi:"consumerSecretSettingName"`
}

// TwitterRegistrationInput is an input type that accepts TwitterRegistrationArgs and TwitterRegistrationOutput values.
// You can construct a concrete instance of `TwitterRegistrationInput` via:
//
//	TwitterRegistrationArgs{...}
type TwitterRegistrationInput interface {
	pulumi.Input

	ToTwitterRegistrationOutput() TwitterRegistrationOutput
	ToTwitterRegistrationOutputWithContext(context.Context) TwitterRegistrationOutput
}

// The configuration settings of the app registration for the Twitter provider.
type TwitterRegistrationArgs struct {
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	ConsumerKey pulumi.StringPtrInput `pulumi:"consumerKey"`
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
	// application used for sign-in.
	ConsumerSecretSettingName pulumi.StringPtrInput `pulumi:"consumerSecretSettingName"`
}

func (TwitterRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwitterRegistration)(nil)).Elem()
}

func (i TwitterRegistrationArgs) ToTwitterRegistrationOutput() TwitterRegistrationOutput {
	return i.ToTwitterRegistrationOutputWithContext(context.Background())
}

func (i TwitterRegistrationArgs) ToTwitterRegistrationOutputWithContext(ctx context.Context) TwitterRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterRegistrationOutput)
}

func (i TwitterRegistrationArgs) ToTwitterRegistrationPtrOutput() TwitterRegistrationPtrOutput {
	return i.ToTwitterRegistrationPtrOutputWithContext(context.Background())
}

func (i TwitterRegistrationArgs) ToTwitterRegistrationPtrOutputWithContext(ctx context.Context) TwitterRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterRegistrationOutput).ToTwitterRegistrationPtrOutputWithContext(ctx)
}

// TwitterRegistrationPtrInput is an input type that accepts TwitterRegistrationArgs, TwitterRegistrationPtr and TwitterRegistrationPtrOutput values.
// You can construct a concrete instance of `TwitterRegistrationPtrInput` via:
//
//	        TwitterRegistrationArgs{...}
//
//	or:
//
//	        nil
type TwitterRegistrationPtrInput interface {
	pulumi.Input

	ToTwitterRegistrationPtrOutput() TwitterRegistrationPtrOutput
	ToTwitterRegistrationPtrOutputWithContext(context.Context) TwitterRegistrationPtrOutput
}

type twitterRegistrationPtrType TwitterRegistrationArgs

func TwitterRegistrationPtr(v *TwitterRegistrationArgs) TwitterRegistrationPtrInput {
	return (*twitterRegistrationPtrType)(v)
}

func (*twitterRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwitterRegistration)(nil)).Elem()
}

func (i *twitterRegistrationPtrType) ToTwitterRegistrationPtrOutput() TwitterRegistrationPtrOutput {
	return i.ToTwitterRegistrationPtrOutputWithContext(context.Background())
}

func (i *twitterRegistrationPtrType) ToTwitterRegistrationPtrOutputWithContext(ctx context.Context) TwitterRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwitterRegistrationPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
type TwitterRegistrationOutput struct{ *pulumi.OutputState }

func (TwitterRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwitterRegistration)(nil)).Elem()
}

func (o TwitterRegistrationOutput) ToTwitterRegistrationOutput() TwitterRegistrationOutput {
	return o
}

func (o TwitterRegistrationOutput) ToTwitterRegistrationOutputWithContext(ctx context.Context) TwitterRegistrationOutput {
	return o
}

func (o TwitterRegistrationOutput) ToTwitterRegistrationPtrOutput() TwitterRegistrationPtrOutput {
	return o.ToTwitterRegistrationPtrOutputWithContext(context.Background())
}

func (o TwitterRegistrationOutput) ToTwitterRegistrationPtrOutputWithContext(ctx context.Context) TwitterRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwitterRegistration) *TwitterRegistration {
		return &v
	}).(TwitterRegistrationPtrOutput)
}

// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o TwitterRegistrationOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwitterRegistration) *string { return v.ConsumerKey }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
// application used for sign-in.
func (o TwitterRegistrationOutput) ConsumerSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwitterRegistration) *string { return v.ConsumerSecretSettingName }).(pulumi.StringPtrOutput)
}

type TwitterRegistrationPtrOutput struct{ *pulumi.OutputState }

func (TwitterRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwitterRegistration)(nil)).Elem()
}

func (o TwitterRegistrationPtrOutput) ToTwitterRegistrationPtrOutput() TwitterRegistrationPtrOutput {
	return o
}

func (o TwitterRegistrationPtrOutput) ToTwitterRegistrationPtrOutputWithContext(ctx context.Context) TwitterRegistrationPtrOutput {
	return o
}

func (o TwitterRegistrationPtrOutput) Elem() TwitterRegistrationOutput {
	return o.ApplyT(func(v *TwitterRegistration) TwitterRegistration {
		if v != nil {
			return *v
		}
		var ret TwitterRegistration
		return ret
	}).(TwitterRegistrationOutput)
}

// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o TwitterRegistrationPtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwitterRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
// application used for sign-in.
func (o TwitterRegistrationPtrOutput) ConsumerSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwitterRegistration) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
type TwitterRegistrationResponse struct {
	// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
	// This setting is required for enabling Twitter Sign-In.
	// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
	ConsumerKey *string `pulumi:"consumerKey"`
	// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
	// application used for sign-in.
	ConsumerSecretSettingName *string `pulumi:"consumerSecretSettingName"`
}

// The configuration settings of the app registration for the Twitter provider.
type TwitterRegistrationResponseOutput struct{ *pulumi.OutputState }

func (TwitterRegistrationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwitterRegistrationResponse)(nil)).Elem()
}

func (o TwitterRegistrationResponseOutput) ToTwitterRegistrationResponseOutput() TwitterRegistrationResponseOutput {
	return o
}

func (o TwitterRegistrationResponseOutput) ToTwitterRegistrationResponseOutputWithContext(ctx context.Context) TwitterRegistrationResponseOutput {
	return o
}

// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o TwitterRegistrationResponseOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwitterRegistrationResponse) *string { return v.ConsumerKey }).(pulumi.StringPtrOutput)
}

// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
// application used for sign-in.
func (o TwitterRegistrationResponseOutput) ConsumerSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwitterRegistrationResponse) *string { return v.ConsumerSecretSettingName }).(pulumi.StringPtrOutput)
}

type TwitterRegistrationResponsePtrOutput struct{ *pulumi.OutputState }

func (TwitterRegistrationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwitterRegistrationResponse)(nil)).Elem()
}

func (o TwitterRegistrationResponsePtrOutput) ToTwitterRegistrationResponsePtrOutput() TwitterRegistrationResponsePtrOutput {
	return o
}

func (o TwitterRegistrationResponsePtrOutput) ToTwitterRegistrationResponsePtrOutputWithContext(ctx context.Context) TwitterRegistrationResponsePtrOutput {
	return o
}

func (o TwitterRegistrationResponsePtrOutput) Elem() TwitterRegistrationResponseOutput {
	return o.ApplyT(func(v *TwitterRegistrationResponse) TwitterRegistrationResponse {
		if v != nil {
			return *v
		}
		var ret TwitterRegistrationResponse
		return ret
	}).(TwitterRegistrationResponseOutput)
}

// The OAuth 1.0a consumer key of the Twitter application used for sign-in.
// This setting is required for enabling Twitter Sign-In.
// Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
func (o TwitterRegistrationResponsePtrOutput) ConsumerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwitterRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerKey
	}).(pulumi.StringPtrOutput)
}

// The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
// application used for sign-in.
func (o TwitterRegistrationResponsePtrOutput) ConsumerSecretSettingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwitterRegistrationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ConsumerSecretSettingName
	}).(pulumi.StringPtrOutput)
}

// The configuration settings of the Twitter provider.
type TwitterResponse struct {
	// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
	Enabled *bool `pulumi:"enabled"`
	// The configuration settings of the app registration for the Twitter provider.
	Registration *TwitterRegistrationResponse `pulumi:"registration"`
}

// The configuration settings of the Twitter provider.
type TwitterResponseOutput struct{ *pulumi.OutputState }

func (TwitterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwitterResponse)(nil)).Elem()
}

func (o TwitterResponseOutput) ToTwitterResponseOutput() TwitterResponseOutput {
	return o
}

func (o TwitterResponseOutput) ToTwitterResponseOutputWithContext(ctx context.Context) TwitterResponseOutput {
	return o
}

// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o TwitterResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TwitterResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
func (o TwitterResponseOutput) Registration() TwitterRegistrationResponsePtrOutput {
	return o.ApplyT(func(v TwitterResponse) *TwitterRegistrationResponse { return v.Registration }).(TwitterRegistrationResponsePtrOutput)
}

type TwitterResponsePtrOutput struct{ *pulumi.OutputState }

func (TwitterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwitterResponse)(nil)).Elem()
}

func (o TwitterResponsePtrOutput) ToTwitterResponsePtrOutput() TwitterResponsePtrOutput {
	return o
}

func (o TwitterResponsePtrOutput) ToTwitterResponsePtrOutputWithContext(ctx context.Context) TwitterResponsePtrOutput {
	return o
}

func (o TwitterResponsePtrOutput) Elem() TwitterResponseOutput {
	return o.ApplyT(func(v *TwitterResponse) TwitterResponse {
		if v != nil {
			return *v
		}
		var ret TwitterResponse
		return ret
	}).(TwitterResponseOutput)
}

// <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
func (o TwitterResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TwitterResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The configuration settings of the app registration for the Twitter provider.
func (o TwitterResponsePtrOutput) Registration() TwitterRegistrationResponsePtrOutput {
	return o.ApplyT(func(v *TwitterResponse) *TwitterRegistrationResponse {
		if v == nil {
			return nil
		}
		return v.Registration
	}).(TwitterRegistrationResponsePtrOutput)
}

// Virtual application in an app.
type VirtualApplication struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectory `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualApplicationInput is an input type that accepts VirtualApplicationArgs and VirtualApplicationOutput values.
// You can construct a concrete instance of `VirtualApplicationInput` via:
//
//	VirtualApplicationArgs{...}
type VirtualApplicationInput interface {
	pulumi.Input

	ToVirtualApplicationOutput() VirtualApplicationOutput
	ToVirtualApplicationOutputWithContext(context.Context) VirtualApplicationOutput
}

// Virtual application in an app.
type VirtualApplicationArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled pulumi.BoolPtrInput `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories VirtualDirectoryArrayInput `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return i.ToVirtualApplicationOutputWithContext(context.Background())
}

func (i VirtualApplicationArgs) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationOutput)
}

// VirtualApplicationArrayInput is an input type that accepts VirtualApplicationArray and VirtualApplicationArrayOutput values.
// You can construct a concrete instance of `VirtualApplicationArrayInput` via:
//
//	VirtualApplicationArray{ VirtualApplicationArgs{...} }
type VirtualApplicationArrayInput interface {
	pulumi.Input

	ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput
	ToVirtualApplicationArrayOutputWithContext(context.Context) VirtualApplicationArrayOutput
}

type VirtualApplicationArray []VirtualApplicationInput

func (VirtualApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return i.ToVirtualApplicationArrayOutputWithContext(context.Background())
}

func (i VirtualApplicationArray) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplicationArrayOutput)
}

// Virtual application in an app.
type VirtualApplicationOutput struct{ *pulumi.OutputState }

func (VirtualApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutput() VirtualApplicationOutput {
	return o
}

func (o VirtualApplicationOutput) ToVirtualApplicationOutputWithContext(ctx context.Context) VirtualApplicationOutput {
	return o
}

// Physical path.
func (o VirtualApplicationOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationOutput) VirtualDirectories() VirtualDirectoryArrayOutput {
	return o.ApplyT(func(v VirtualApplication) []VirtualDirectory { return v.VirtualDirectories }).(VirtualDirectoryArrayOutput)
}

// Virtual path.
func (o VirtualApplicationOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplication) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplication)(nil)).Elem()
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutput() VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) ToVirtualApplicationArrayOutputWithContext(ctx context.Context) VirtualApplicationArrayOutput {
	return o
}

func (o VirtualApplicationArrayOutput) Index(i pulumi.IntInput) VirtualApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplication {
		return vs[0].([]VirtualApplication)[vs[1].(int)]
	}).(VirtualApplicationOutput)
}

// Virtual application in an app.
type VirtualApplicationResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
	PreloadEnabled *bool `pulumi:"preloadEnabled"`
	// Virtual directories for virtual application.
	VirtualDirectories []VirtualDirectoryResponse `pulumi:"virtualDirectories"`
	// Virtual path.
	VirtualPath *string `pulumi:"virtualPath"`
}

// Virtual application in an app.
type VirtualApplicationResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutput() VirtualApplicationResponseOutput {
	return o
}

func (o VirtualApplicationResponseOutput) ToVirtualApplicationResponseOutputWithContext(ctx context.Context) VirtualApplicationResponseOutput {
	return o
}

// Physical path.
func (o VirtualApplicationResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// <code>true</code> if preloading is enabled; otherwise, <code>false</code>.
func (o VirtualApplicationResponseOutput) PreloadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *bool { return v.PreloadEnabled }).(pulumi.BoolPtrOutput)
}

// Virtual directories for virtual application.
func (o VirtualApplicationResponseOutput) VirtualDirectories() VirtualDirectoryResponseArrayOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) []VirtualDirectoryResponse { return v.VirtualDirectories }).(VirtualDirectoryResponseArrayOutput)
}

// Virtual path.
func (o VirtualApplicationResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplicationResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualApplicationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplicationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplicationResponse)(nil)).Elem()
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutput() VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) ToVirtualApplicationResponseArrayOutputWithContext(ctx context.Context) VirtualApplicationResponseArrayOutput {
	return o
}

func (o VirtualApplicationResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplicationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplicationResponse {
		return vs[0].([]VirtualApplicationResponse)[vs[1].(int)]
	}).(VirtualApplicationResponseOutput)
}

// Directory for virtual application.
type VirtualDirectory struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// VirtualDirectoryInput is an input type that accepts VirtualDirectoryArgs and VirtualDirectoryOutput values.
// You can construct a concrete instance of `VirtualDirectoryInput` via:
//
//	VirtualDirectoryArgs{...}
type VirtualDirectoryInput interface {
	pulumi.Input

	ToVirtualDirectoryOutput() VirtualDirectoryOutput
	ToVirtualDirectoryOutputWithContext(context.Context) VirtualDirectoryOutput
}

// Directory for virtual application.
type VirtualDirectoryArgs struct {
	// Physical path.
	PhysicalPath pulumi.StringPtrInput `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath pulumi.StringPtrInput `pulumi:"virtualPath"`
}

func (VirtualDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return i.ToVirtualDirectoryOutputWithContext(context.Background())
}

func (i VirtualDirectoryArgs) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryOutput)
}

// VirtualDirectoryArrayInput is an input type that accepts VirtualDirectoryArray and VirtualDirectoryArrayOutput values.
// You can construct a concrete instance of `VirtualDirectoryArrayInput` via:
//
//	VirtualDirectoryArray{ VirtualDirectoryArgs{...} }
type VirtualDirectoryArrayInput interface {
	pulumi.Input

	ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput
	ToVirtualDirectoryArrayOutputWithContext(context.Context) VirtualDirectoryArrayOutput
}

type VirtualDirectoryArray []VirtualDirectoryInput

func (VirtualDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return i.ToVirtualDirectoryArrayOutputWithContext(context.Background())
}

func (i VirtualDirectoryArray) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualDirectoryArrayOutput)
}

// Directory for virtual application.
type VirtualDirectoryOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutput() VirtualDirectoryOutput {
	return o
}

func (o VirtualDirectoryOutput) ToVirtualDirectoryOutputWithContext(ctx context.Context) VirtualDirectoryOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectory) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectory)(nil)).Elem()
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutput() VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) ToVirtualDirectoryArrayOutputWithContext(ctx context.Context) VirtualDirectoryArrayOutput {
	return o
}

func (o VirtualDirectoryArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectory {
		return vs[0].([]VirtualDirectory)[vs[1].(int)]
	}).(VirtualDirectoryOutput)
}

// Directory for virtual application.
type VirtualDirectoryResponse struct {
	// Physical path.
	PhysicalPath *string `pulumi:"physicalPath"`
	// Path to virtual application.
	VirtualPath *string `pulumi:"virtualPath"`
}

// Directory for virtual application.
type VirtualDirectoryResponseOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutput() VirtualDirectoryResponseOutput {
	return o
}

func (o VirtualDirectoryResponseOutput) ToVirtualDirectoryResponseOutputWithContext(ctx context.Context) VirtualDirectoryResponseOutput {
	return o
}

// Physical path.
func (o VirtualDirectoryResponseOutput) PhysicalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.PhysicalPath }).(pulumi.StringPtrOutput)
}

// Path to virtual application.
func (o VirtualDirectoryResponseOutput) VirtualPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualDirectoryResponse) *string { return v.VirtualPath }).(pulumi.StringPtrOutput)
}

type VirtualDirectoryResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualDirectoryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualDirectoryResponse)(nil)).Elem()
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutput() VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) ToVirtualDirectoryResponseArrayOutputWithContext(ctx context.Context) VirtualDirectoryResponseArrayOutput {
	return o
}

func (o VirtualDirectoryResponseArrayOutput) Index(i pulumi.IntInput) VirtualDirectoryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualDirectoryResponse {
		return vs[0].([]VirtualDirectoryResponse)[vs[1].(int)]
	}).(VirtualDirectoryResponseOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfile struct {
	// Resource id of the Virtual Network.
	Id string `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
}

// VirtualNetworkProfileInput is an input type that accepts VirtualNetworkProfileArgs and VirtualNetworkProfileOutput values.
// You can construct a concrete instance of `VirtualNetworkProfileInput` via:
//
//	VirtualNetworkProfileArgs{...}
type VirtualNetworkProfileInput interface {
	pulumi.Input

	ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput
	ToVirtualNetworkProfileOutputWithContext(context.Context) VirtualNetworkProfileOutput
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileArgs struct {
	// Resource id of the Virtual Network.
	Id pulumi.StringInput `pulumi:"id"`
	// Subnet within the Virtual Network.
	Subnet pulumi.StringPtrInput `pulumi:"subnet"`
}

func (VirtualNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return i.ToVirtualNetworkProfileOutputWithContext(context.Background())
}

func (i VirtualNetworkProfileArgs) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkProfileOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfile)(nil)).Elem()
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutput() VirtualNetworkProfileOutput {
	return o
}

func (o VirtualNetworkProfileOutput) ToVirtualNetworkProfileOutputWithContext(ctx context.Context) VirtualNetworkProfileOutput {
	return o
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) string { return v.Id }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfile) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponse struct {
	// Resource id of the Virtual Network.
	Id string `pulumi:"id"`
	// Name of the Virtual Network (read-only).
	Name string `pulumi:"name"`
	// Subnet within the Virtual Network.
	Subnet *string `pulumi:"subnet"`
	// Resource type of the Virtual Network (read-only).
	Type string `pulumi:"type"`
}

// Specification for using a Virtual Network.
type VirtualNetworkProfileResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkProfileResponse)(nil)).Elem()
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutput() VirtualNetworkProfileResponseOutput {
	return o
}

func (o VirtualNetworkProfileResponseOutput) ToVirtualNetworkProfileResponseOutputWithContext(ctx context.Context) VirtualNetworkProfileResponseOutput {
	return o
}

// Resource id of the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Subnet within the Virtual Network.
func (o VirtualNetworkProfileResponseOutput) Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) *string { return v.Subnet }).(pulumi.StringPtrOutput)
}

// Resource type of the Virtual Network (read-only).
func (o VirtualNetworkProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponse struct {
	// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
	EndAddress *string `pulumi:"endAddress"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The type of route this is:
	// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
	// INHERITED - Routes inherited from the real Virtual Network routes
	// STATIC - Static route set on the app only
	//
	// These values will be used for syncing an app's routes with those from a Virtual Network.
	RouteType *string `pulumi:"routeType"`
	// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
	StartAddress *string `pulumi:"startAddress"`
	// Resource type.
	Type string `pulumi:"type"`
}

// Virtual Network route contract used to pass routing information for a Virtual Network.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

// The ending address for this route. If the start address is specified in CIDR notation, this must be omitted.
func (o VnetRouteResponseOutput) EndAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.EndAddress }).(pulumi.StringPtrOutput)
}

// Resource Id.
func (o VnetRouteResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o VnetRouteResponseOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o VnetRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of route this is:
// DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918
// INHERITED - Routes inherited from the real Virtual Network routes
// STATIC - Static route set on the app only
//
// These values will be used for syncing an app's routes with those from a Virtual Network.
func (o VnetRouteResponseOutput) RouteType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.RouteType }).(pulumi.StringPtrOutput)
}

// The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified.
func (o VnetRouteResponseOutput) StartAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *string { return v.StartAddress }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o VnetRouteResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VnetRouteResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VnetRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutput() VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) ToVnetRouteResponseArrayOutputWithContext(ctx context.Context) VnetRouteResponseArrayOutput {
	return o
}

func (o VnetRouteResponseArrayOutput) Index(i pulumi.IntInput) VnetRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VnetRouteResponse {
		return vs[0].([]VnetRouteResponse)[vs[1].(int)]
	}).(VnetRouteResponseOutput)
}

// Gets the workflow trigger callback URL query parameters.
type WorkflowTriggerListCallbackUrlQueriesResponse struct {
	// The api version.
	ApiVersion *string `pulumi:"apiVersion"`
	// The SAS timestamp.
	Se *string `pulumi:"se"`
	// The SAS signature.
	Sig *string `pulumi:"sig"`
	// The SAS permissions.
	Sp *string `pulumi:"sp"`
	// The SAS version.
	Sv *string `pulumi:"sv"`
}

// Gets the workflow trigger callback URL query parameters.
type WorkflowTriggerListCallbackUrlQueriesResponseOutput struct{ *pulumi.OutputState }

func (WorkflowTriggerListCallbackUrlQueriesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowTriggerListCallbackUrlQueriesResponse)(nil)).Elem()
}

func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) ToWorkflowTriggerListCallbackUrlQueriesResponseOutput() WorkflowTriggerListCallbackUrlQueriesResponseOutput {
	return o
}

func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) ToWorkflowTriggerListCallbackUrlQueriesResponseOutputWithContext(ctx context.Context) WorkflowTriggerListCallbackUrlQueriesResponseOutput {
	return o
}

// The api version.
func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerListCallbackUrlQueriesResponse) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// The SAS timestamp.
func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) Se() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerListCallbackUrlQueriesResponse) *string { return v.Se }).(pulumi.StringPtrOutput)
}

// The SAS signature.
func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) Sig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerListCallbackUrlQueriesResponse) *string { return v.Sig }).(pulumi.StringPtrOutput)
}

// The SAS permissions.
func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) Sp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerListCallbackUrlQueriesResponse) *string { return v.Sp }).(pulumi.StringPtrOutput)
}

// The SAS version.
func (o WorkflowTriggerListCallbackUrlQueriesResponseOutput) Sv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowTriggerListCallbackUrlQueriesResponse) *string { return v.Sv }).(pulumi.StringPtrOutput)
}

type WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput struct{ *pulumi.OutputState }

func (WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowTriggerListCallbackUrlQueriesResponse)(nil)).Elem()
}

func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) ToWorkflowTriggerListCallbackUrlQueriesResponsePtrOutput() WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput {
	return o
}

func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) ToWorkflowTriggerListCallbackUrlQueriesResponsePtrOutputWithContext(ctx context.Context) WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput {
	return o
}

func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) Elem() WorkflowTriggerListCallbackUrlQueriesResponseOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) WorkflowTriggerListCallbackUrlQueriesResponse {
		if v != nil {
			return *v
		}
		var ret WorkflowTriggerListCallbackUrlQueriesResponse
		return ret
	}).(WorkflowTriggerListCallbackUrlQueriesResponseOutput)
}

// The api version.
func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// The SAS timestamp.
func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) Se() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Se
	}).(pulumi.StringPtrOutput)
}

// The SAS signature.
func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) Sig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sig
	}).(pulumi.StringPtrOutput)
}

// The SAS permissions.
func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) Sp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sp
	}).(pulumi.StringPtrOutput)
}

// The SAS version.
func (o WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput) Sv() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowTriggerListCallbackUrlQueriesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Sv
	}).(pulumi.StringPtrOutput)
}

// The WSDL definition
type WsdlDefinition struct {
	// The WSDL content
	Content *string `pulumi:"content"`
	// The WSDL import method
	ImportMethod *string `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service *WsdlService `pulumi:"service"`
	// The WSDL URL
	Url *string `pulumi:"url"`
}

// WsdlDefinitionInput is an input type that accepts WsdlDefinitionArgs and WsdlDefinitionOutput values.
// You can construct a concrete instance of `WsdlDefinitionInput` via:
//
//	WsdlDefinitionArgs{...}
type WsdlDefinitionInput interface {
	pulumi.Input

	ToWsdlDefinitionOutput() WsdlDefinitionOutput
	ToWsdlDefinitionOutputWithContext(context.Context) WsdlDefinitionOutput
}

// The WSDL definition
type WsdlDefinitionArgs struct {
	// The WSDL content
	Content pulumi.StringPtrInput `pulumi:"content"`
	// The WSDL import method
	ImportMethod pulumi.StringPtrInput `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service WsdlServicePtrInput `pulumi:"service"`
	// The WSDL URL
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WsdlDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinition)(nil)).Elem()
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionOutput() WsdlDefinitionOutput {
	return i.ToWsdlDefinitionOutputWithContext(context.Background())
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionOutputWithContext(ctx context.Context) WsdlDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionOutput)
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return i.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (i WsdlDefinitionArgs) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionOutput).ToWsdlDefinitionPtrOutputWithContext(ctx)
}

// WsdlDefinitionPtrInput is an input type that accepts WsdlDefinitionArgs, WsdlDefinitionPtr and WsdlDefinitionPtrOutput values.
// You can construct a concrete instance of `WsdlDefinitionPtrInput` via:
//
//	        WsdlDefinitionArgs{...}
//
//	or:
//
//	        nil
type WsdlDefinitionPtrInput interface {
	pulumi.Input

	ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput
	ToWsdlDefinitionPtrOutputWithContext(context.Context) WsdlDefinitionPtrOutput
}

type wsdlDefinitionPtrType WsdlDefinitionArgs

func WsdlDefinitionPtr(v *WsdlDefinitionArgs) WsdlDefinitionPtrInput {
	return (*wsdlDefinitionPtrType)(v)
}

func (*wsdlDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinition)(nil)).Elem()
}

func (i *wsdlDefinitionPtrType) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return i.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (i *wsdlDefinitionPtrType) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlDefinitionPtrOutput)
}

// The WSDL definition
type WsdlDefinitionOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinition)(nil)).Elem()
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionOutput() WsdlDefinitionOutput {
	return o
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionOutputWithContext(ctx context.Context) WsdlDefinitionOutput {
	return o
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return o.ToWsdlDefinitionPtrOutputWithContext(context.Background())
}

func (o WsdlDefinitionOutput) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WsdlDefinition) *WsdlDefinition {
		return &v
	}).(WsdlDefinitionPtrOutput)
}

// The WSDL content
func (o WsdlDefinitionOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.ImportMethod }).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionOutput) Service() WsdlServicePtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *WsdlService { return v.Service }).(WsdlServicePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WsdlDefinitionPtrOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinition)(nil)).Elem()
}

func (o WsdlDefinitionPtrOutput) ToWsdlDefinitionPtrOutput() WsdlDefinitionPtrOutput {
	return o
}

func (o WsdlDefinitionPtrOutput) ToWsdlDefinitionPtrOutputWithContext(ctx context.Context) WsdlDefinitionPtrOutput {
	return o
}

func (o WsdlDefinitionPtrOutput) Elem() WsdlDefinitionOutput {
	return o.ApplyT(func(v *WsdlDefinition) WsdlDefinition {
		if v != nil {
			return *v
		}
		var ret WsdlDefinition
		return ret
	}).(WsdlDefinitionOutput)
}

// The WSDL content
func (o WsdlDefinitionPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionPtrOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ImportMethod
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionPtrOutput) Service() WsdlServicePtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *WsdlService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(WsdlServicePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The WSDL definition
type WsdlDefinitionResponse struct {
	// The WSDL content
	Content *string `pulumi:"content"`
	// The WSDL import method
	ImportMethod *string `pulumi:"importMethod"`
	// The service with name and endpoint names
	Service *WsdlServiceResponse `pulumi:"service"`
	// The WSDL URL
	Url *string `pulumi:"url"`
}

// The WSDL definition
type WsdlDefinitionResponseOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlDefinitionResponse)(nil)).Elem()
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponseOutput() WsdlDefinitionResponseOutput {
	return o
}

func (o WsdlDefinitionResponseOutput) ToWsdlDefinitionResponseOutputWithContext(ctx context.Context) WsdlDefinitionResponseOutput {
	return o
}

// The WSDL content
func (o WsdlDefinitionResponseOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionResponseOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.ImportMethod }).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionResponseOutput) Service() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *WsdlServiceResponse { return v.Service }).(WsdlServiceResponsePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionResponseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WsdlDefinitionResponse) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WsdlDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (WsdlDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlDefinitionResponse)(nil)).Elem()
}

func (o WsdlDefinitionResponsePtrOutput) ToWsdlDefinitionResponsePtrOutput() WsdlDefinitionResponsePtrOutput {
	return o
}

func (o WsdlDefinitionResponsePtrOutput) ToWsdlDefinitionResponsePtrOutputWithContext(ctx context.Context) WsdlDefinitionResponsePtrOutput {
	return o
}

func (o WsdlDefinitionResponsePtrOutput) Elem() WsdlDefinitionResponseOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) WsdlDefinitionResponse {
		if v != nil {
			return *v
		}
		var ret WsdlDefinitionResponse
		return ret
	}).(WsdlDefinitionResponseOutput)
}

// The WSDL content
func (o WsdlDefinitionResponsePtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// The WSDL import method
func (o WsdlDefinitionResponsePtrOutput) ImportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.ImportMethod
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
func (o WsdlDefinitionResponsePtrOutput) Service() WsdlServiceResponsePtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *WsdlServiceResponse {
		if v == nil {
			return nil
		}
		return v.Service
	}).(WsdlServiceResponsePtrOutput)
}

// The WSDL URL
func (o WsdlDefinitionResponsePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlDefinitionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
type WsdlService struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames []string `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName string `pulumi:"qualifiedName"`
}

// WsdlServiceInput is an input type that accepts WsdlServiceArgs and WsdlServiceOutput values.
// You can construct a concrete instance of `WsdlServiceInput` via:
//
//	WsdlServiceArgs{...}
type WsdlServiceInput interface {
	pulumi.Input

	ToWsdlServiceOutput() WsdlServiceOutput
	ToWsdlServiceOutputWithContext(context.Context) WsdlServiceOutput
}

// The service with name and endpoint names
type WsdlServiceArgs struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames pulumi.StringArrayInput `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName pulumi.StringInput `pulumi:"qualifiedName"`
}

func (WsdlServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlService)(nil)).Elem()
}

func (i WsdlServiceArgs) ToWsdlServiceOutput() WsdlServiceOutput {
	return i.ToWsdlServiceOutputWithContext(context.Background())
}

func (i WsdlServiceArgs) ToWsdlServiceOutputWithContext(ctx context.Context) WsdlServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceOutput)
}

func (i WsdlServiceArgs) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return i.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (i WsdlServiceArgs) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServiceOutput).ToWsdlServicePtrOutputWithContext(ctx)
}

// WsdlServicePtrInput is an input type that accepts WsdlServiceArgs, WsdlServicePtr and WsdlServicePtrOutput values.
// You can construct a concrete instance of `WsdlServicePtrInput` via:
//
//	        WsdlServiceArgs{...}
//
//	or:
//
//	        nil
type WsdlServicePtrInput interface {
	pulumi.Input

	ToWsdlServicePtrOutput() WsdlServicePtrOutput
	ToWsdlServicePtrOutputWithContext(context.Context) WsdlServicePtrOutput
}

type wsdlServicePtrType WsdlServiceArgs

func WsdlServicePtr(v *WsdlServiceArgs) WsdlServicePtrInput {
	return (*wsdlServicePtrType)(v)
}

func (*wsdlServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlService)(nil)).Elem()
}

func (i *wsdlServicePtrType) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return i.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (i *wsdlServicePtrType) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WsdlServicePtrOutput)
}

// The service with name and endpoint names
type WsdlServiceOutput struct{ *pulumi.OutputState }

func (WsdlServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlService)(nil)).Elem()
}

func (o WsdlServiceOutput) ToWsdlServiceOutput() WsdlServiceOutput {
	return o
}

func (o WsdlServiceOutput) ToWsdlServiceOutputWithContext(ctx context.Context) WsdlServiceOutput {
	return o
}

func (o WsdlServiceOutput) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return o.ToWsdlServicePtrOutputWithContext(context.Background())
}

func (o WsdlServiceOutput) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WsdlService) *WsdlService {
		return &v
	}).(WsdlServicePtrOutput)
}

// List of the endpoints' qualified names
func (o WsdlServiceOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WsdlService) []string { return v.EndpointQualifiedNames }).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v WsdlService) string { return v.QualifiedName }).(pulumi.StringOutput)
}

type WsdlServicePtrOutput struct{ *pulumi.OutputState }

func (WsdlServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlService)(nil)).Elem()
}

func (o WsdlServicePtrOutput) ToWsdlServicePtrOutput() WsdlServicePtrOutput {
	return o
}

func (o WsdlServicePtrOutput) ToWsdlServicePtrOutputWithContext(ctx context.Context) WsdlServicePtrOutput {
	return o
}

func (o WsdlServicePtrOutput) Elem() WsdlServiceOutput {
	return o.ApplyT(func(v *WsdlService) WsdlService {
		if v != nil {
			return *v
		}
		var ret WsdlService
		return ret
	}).(WsdlServiceOutput)
}

// List of the endpoints' qualified names
func (o WsdlServicePtrOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WsdlService) []string {
		if v == nil {
			return nil
		}
		return v.EndpointQualifiedNames
	}).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServicePtrOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlService) *string {
		if v == nil {
			return nil
		}
		return &v.QualifiedName
	}).(pulumi.StringPtrOutput)
}

// The service with name and endpoint names
type WsdlServiceResponse struct {
	// List of the endpoints' qualified names
	EndpointQualifiedNames []string `pulumi:"endpointQualifiedNames"`
	// The service's qualified name
	QualifiedName string `pulumi:"qualifiedName"`
}

// The service with name and endpoint names
type WsdlServiceResponseOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutput() WsdlServiceResponseOutput {
	return o
}

func (o WsdlServiceResponseOutput) ToWsdlServiceResponseOutputWithContext(ctx context.Context) WsdlServiceResponseOutput {
	return o
}

// List of the endpoints' qualified names
func (o WsdlServiceResponseOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WsdlServiceResponse) []string { return v.EndpointQualifiedNames }).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceResponseOutput) QualifiedName() pulumi.StringOutput {
	return o.ApplyT(func(v WsdlServiceResponse) string { return v.QualifiedName }).(pulumi.StringOutput)
}

type WsdlServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutput() WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) ToWsdlServiceResponsePtrOutputWithContext(ctx context.Context) WsdlServiceResponsePtrOutput {
	return o
}

func (o WsdlServiceResponsePtrOutput) Elem() WsdlServiceResponseOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) WsdlServiceResponse {
		if v != nil {
			return *v
		}
		var ret WsdlServiceResponse
		return ret
	}).(WsdlServiceResponseOutput)
}

// List of the endpoints' qualified names
func (o WsdlServiceResponsePtrOutput) EndpointQualifiedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) []string {
		if v == nil {
			return nil
		}
		return v.EndpointQualifiedNames
	}).(pulumi.StringArrayOutput)
}

// The service's qualified name
func (o WsdlServiceResponsePtrOutput) QualifiedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WsdlServiceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.QualifiedName
	}).(pulumi.StringPtrOutput)
}

type WsdlServiceResponseArrayOutput struct{ *pulumi.OutputState }

func (WsdlServiceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WsdlServiceResponse)(nil)).Elem()
}

func (o WsdlServiceResponseArrayOutput) ToWsdlServiceResponseArrayOutput() WsdlServiceResponseArrayOutput {
	return o
}

func (o WsdlServiceResponseArrayOutput) ToWsdlServiceResponseArrayOutputWithContext(ctx context.Context) WsdlServiceResponseArrayOutput {
	return o
}

func (o WsdlServiceResponseArrayOutput) Index(i pulumi.IntInput) WsdlServiceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WsdlServiceResponse {
		return vs[0].([]WsdlServiceResponse)[vs[1].(int)]
	}).(WsdlServiceResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AllowedAudiencesValidationOutput{})
	pulumi.RegisterOutputType(AllowedAudiencesValidationPtrOutput{})
	pulumi.RegisterOutputType(AllowedAudiencesValidationResponseOutput{})
	pulumi.RegisterOutputType(AllowedAudiencesValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ApiConnectionDefinitionResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkArrayOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkResponseOutput{})
	pulumi.RegisterOutputType(ApiConnectionTestLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoPtrOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponseOutput{})
	pulumi.RegisterOutputType(ApiDefinitionInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponseOutput{})
	pulumi.RegisterOutputType(ApiManagementConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsPtrOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterMapOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterResponseOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsParameterResponseMapOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApiOAuthSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiReferenceOutput{})
	pulumi.RegisterOutputType(ApiReferencePtrOutput{})
	pulumi.RegisterOutputType(ApiReferenceResponseOutput{})
	pulumi.RegisterOutputType(ApiReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServicePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceBackendServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsPtrOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponseOutput{})
	pulumi.RegisterOutputType(ApiResourceDefinitionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AppLogsConfigurationOutput{})
	pulumi.RegisterOutputType(AppLogsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AppLogsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AppLogsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AppRegistrationOutput{})
	pulumi.RegisterOutputType(AppRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AppRegistrationResponseOutput{})
	pulumi.RegisterOutputType(AppRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(AppleOutput{})
	pulumi.RegisterOutputType(ApplePtrOutput{})
	pulumi.RegisterOutputType(AppleRegistrationOutput{})
	pulumi.RegisterOutputType(AppleRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AppleRegistrationResponseOutput{})
	pulumi.RegisterOutputType(AppleRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(AppleResponseOutput{})
	pulumi.RegisterOutputType(AppleResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(ApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ArcConfigurationOutput{})
	pulumi.RegisterOutputType(ArcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ArcConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ArcConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponseOutput{})
	pulumi.RegisterOutputType(ArmIdWrapperResponsePtrOutput{})
	pulumi.RegisterOutputType(ArmPlanResponseOutput{})
	pulumi.RegisterOutputType(ArmPlanResponsePtrOutput{})
	pulumi.RegisterOutputType(AuthPlatformOutput{})
	pulumi.RegisterOutputType(AuthPlatformPtrOutput{})
	pulumi.RegisterOutputType(AuthPlatformResponseOutput{})
	pulumi.RegisterOutputType(AuthPlatformResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsOutput{})
	pulumi.RegisterOutputType(AutoHealActionsPtrOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponseOutput{})
	pulumi.RegisterOutputType(AutoHealActionsResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionPtrOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponseOutput{})
	pulumi.RegisterOutputType(AutoHealCustomActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesOutput{})
	pulumi.RegisterOutputType(AutoHealRulesPtrOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponseOutput{})
	pulumi.RegisterOutputType(AutoHealRulesResponsePtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersPtrOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponseOutput{})
	pulumi.RegisterOutputType(AutoHealTriggersResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryLoginOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryLoginPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryLoginResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryLoginResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryRegistrationOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryRegistrationResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryValidationOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryValidationPtrOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryValidationResponseOutput{})
	pulumi.RegisterOutputType(AzureActiveDirectoryValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureBlobStorageHttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponseOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureResourceErrorInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsPtrOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsRegistrationOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsRegistrationResponseOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsResponseOutput{})
	pulumi.RegisterOutputType(AzureStaticWebAppsResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueMapOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseOutput{})
	pulumi.RegisterOutputType(AzureStorageInfoValueResponseMapOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(AzureTableStorageApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(BackupItemResponseOutput{})
	pulumi.RegisterOutputType(BackupItemResponseArrayOutput{})
	pulumi.RegisterOutputType(BackupScheduleOutput{})
	pulumi.RegisterOutputType(BackupSchedulePtrOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponseOutput{})
	pulumi.RegisterOutputType(BackupScheduleResponsePtrOutput{})
	pulumi.RegisterOutputType(BlobStorageTokenStoreOutput{})
	pulumi.RegisterOutputType(BlobStorageTokenStorePtrOutput{})
	pulumi.RegisterOutputType(BlobStorageTokenStoreResponseOutput{})
	pulumi.RegisterOutputType(BlobStorageTokenStoreResponsePtrOutput{})
	pulumi.RegisterOutputType(CapabilityOutput{})
	pulumi.RegisterOutputType(CapabilityArrayOutput{})
	pulumi.RegisterOutputType(CapabilityResponseOutput{})
	pulumi.RegisterOutputType(CapabilityResponseArrayOutput{})
	pulumi.RegisterOutputType(ClientRegistrationOutput{})
	pulumi.RegisterOutputType(ClientRegistrationPtrOutput{})
	pulumi.RegisterOutputType(ClientRegistrationResponseOutput{})
	pulumi.RegisterOutputType(ClientRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(CloningInfoOutput{})
	pulumi.RegisterOutputType(CloningInfoPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnStringInfoOutput{})
	pulumi.RegisterOutputType(ConnStringInfoArrayOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseOutput{})
	pulumi.RegisterOutputType(ConnStringInfoResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairMapOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseOutput{})
	pulumi.RegisterOutputType(ConnStringValueTypePairResponseMapOutput{})
	pulumi.RegisterOutputType(ConnectionErrorOutput{})
	pulumi.RegisterOutputType(ConnectionErrorPtrOutput{})
	pulumi.RegisterOutputType(ConnectionErrorResponseOutput{})
	pulumi.RegisterOutputType(ConnectionErrorResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionPropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayDefinitionResponsePropertiesOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferencePtrOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionGatewayReferenceResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionParameterOutput{})
	pulumi.RegisterOutputType(ConnectionParameterMapOutput{})
	pulumi.RegisterOutputType(ConnectionParameterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionParameterResponseMapOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ConnectionStatusDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ConsentLinkDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ConsentLinkDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ConsentLinkParameterDefinitionOutput{})
	pulumi.RegisterOutputType(ConsentLinkParameterDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ContainerOutput{})
	pulumi.RegisterOutputType(ContainerArrayOutput{})
	pulumi.RegisterOutputType(ContainerAppSecretResponseOutput{})
	pulumi.RegisterOutputType(ContainerAppSecretResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerResourcesOutput{})
	pulumi.RegisterOutputType(ContainerResourcesPtrOutput{})
	pulumi.RegisterOutputType(ContainerResourcesResponseOutput{})
	pulumi.RegisterOutputType(ContainerResourcesResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerResponseOutput{})
	pulumi.RegisterOutputType(ContainerResponseArrayOutput{})
	pulumi.RegisterOutputType(CookieExpirationOutput{})
	pulumi.RegisterOutputType(CookieExpirationPtrOutput{})
	pulumi.RegisterOutputType(CookieExpirationResponseOutput{})
	pulumi.RegisterOutputType(CookieExpirationResponsePtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsOutput{})
	pulumi.RegisterOutputType(CorsSettingsPtrOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponseOutput{})
	pulumi.RegisterOutputType(CorsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionPtrOutput{})
	pulumi.RegisterOutputType(CustomApiPropertiesDefinitionResponseOutput{})
	pulumi.RegisterOutputType(CustomOpenIdConnectProviderOutput{})
	pulumi.RegisterOutputType(CustomOpenIdConnectProviderMapOutput{})
	pulumi.RegisterOutputType(CustomOpenIdConnectProviderResponseOutput{})
	pulumi.RegisterOutputType(CustomOpenIdConnectProviderResponseMapOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleOutput{})
	pulumi.RegisterOutputType(CustomScaleRulePtrOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(DaprOutput{})
	pulumi.RegisterOutputType(DaprPtrOutput{})
	pulumi.RegisterOutputType(DaprComponentOutput{})
	pulumi.RegisterOutputType(DaprComponentArrayOutput{})
	pulumi.RegisterOutputType(DaprComponentResponseOutput{})
	pulumi.RegisterOutputType(DaprComponentResponseArrayOutput{})
	pulumi.RegisterOutputType(DaprMetadataOutput{})
	pulumi.RegisterOutputType(DaprMetadataArrayOutput{})
	pulumi.RegisterOutputType(DaprMetadataResponseOutput{})
	pulumi.RegisterOutputType(DaprMetadataResponseArrayOutput{})
	pulumi.RegisterOutputType(DaprResponseOutput{})
	pulumi.RegisterOutputType(DaprResponsePtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseOutput{})
	pulumi.RegisterOutputType(DatabaseBackupSettingResponseArrayOutput{})
	pulumi.RegisterOutputType(EnabledConfigOutput{})
	pulumi.RegisterOutputType(EnabledConfigPtrOutput{})
	pulumi.RegisterOutputType(EnabledConfigResponseOutput{})
	pulumi.RegisterOutputType(EnabledConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(EnvironmentVarOutput{})
	pulumi.RegisterOutputType(EnvironmentVarArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentVarResponseOutput{})
	pulumi.RegisterOutputType(EnvironmentVarResponseArrayOutput{})
	pulumi.RegisterOutputType(ErrorEntityResponseOutput{})
	pulumi.RegisterOutputType(ErrorEntityResponsePtrOutput{})
	pulumi.RegisterOutputType(ErrorEntityResponseArrayOutput{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(ExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ExperimentsResponseOutput{})
	pulumi.RegisterOutputType(ExperimentsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressionResponseOutput{})
	pulumi.RegisterOutputType(ExpressionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressionRootResponseOutput{})
	pulumi.RegisterOutputType(ExpressionRootResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FacebookOutput{})
	pulumi.RegisterOutputType(FacebookPtrOutput{})
	pulumi.RegisterOutputType(FacebookResponseOutput{})
	pulumi.RegisterOutputType(FacebookResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(FileSystemApplicationLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(FileSystemHttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(FileSystemTokenStoreOutput{})
	pulumi.RegisterOutputType(FileSystemTokenStorePtrOutput{})
	pulumi.RegisterOutputType(FileSystemTokenStoreResponseOutput{})
	pulumi.RegisterOutputType(FileSystemTokenStoreResponsePtrOutput{})
	pulumi.RegisterOutputType(ForwardProxyOutput{})
	pulumi.RegisterOutputType(ForwardProxyPtrOutput{})
	pulumi.RegisterOutputType(ForwardProxyResponseOutput{})
	pulumi.RegisterOutputType(ForwardProxyResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontEndConfigurationOutput{})
	pulumi.RegisterOutputType(FrontEndConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FrontEndConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontEndConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubOutput{})
	pulumi.RegisterOutputType(GitHubPtrOutput{})
	pulumi.RegisterOutputType(GitHubActionCodeConfigurationOutput{})
	pulumi.RegisterOutputType(GitHubActionCodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GitHubActionCodeConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GitHubActionCodeConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubActionConfigurationOutput{})
	pulumi.RegisterOutputType(GitHubActionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GitHubActionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GitHubActionConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubActionContainerConfigurationOutput{})
	pulumi.RegisterOutputType(GitHubActionContainerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GitHubActionContainerConfigurationResponseOutput{})
	pulumi.RegisterOutputType(GitHubActionContainerConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(GitHubResponseOutput{})
	pulumi.RegisterOutputType(GitHubResponsePtrOutput{})
	pulumi.RegisterOutputType(GlobalValidationOutput{})
	pulumi.RegisterOutputType(GlobalValidationPtrOutput{})
	pulumi.RegisterOutputType(GlobalValidationResponseOutput{})
	pulumi.RegisterOutputType(GlobalValidationResponsePtrOutput{})
	pulumi.RegisterOutputType(GoogleOutput{})
	pulumi.RegisterOutputType(GooglePtrOutput{})
	pulumi.RegisterOutputType(GoogleResponseOutput{})
	pulumi.RegisterOutputType(GoogleResponsePtrOutput{})
	pulumi.RegisterOutputType(HandlerMappingOutput{})
	pulumi.RegisterOutputType(HandlerMappingArrayOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseOutput{})
	pulumi.RegisterOutputType(HandlerMappingResponseArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateOutput{})
	pulumi.RegisterOutputType(HostNameSslStateArrayOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseOutput{})
	pulumi.RegisterOutputType(HostNameSslStateResponseArrayOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(HostingEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigResponseOutput{})
	pulumi.RegisterOutputType(HttpLogsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleOutput{})
	pulumi.RegisterOutputType(HttpScaleRulePtrOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(HttpScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpSettingsOutput{})
	pulumi.RegisterOutputType(HttpSettingsPtrOutput{})
	pulumi.RegisterOutputType(HttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(HttpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(HttpSettingsRoutesOutput{})
	pulumi.RegisterOutputType(HttpSettingsRoutesPtrOutput{})
	pulumi.RegisterOutputType(HttpSettingsRoutesResponseOutput{})
	pulumi.RegisterOutputType(HttpSettingsRoutesResponsePtrOutput{})
	pulumi.RegisterOutputType(IdentifierResponseOutput{})
	pulumi.RegisterOutputType(IdentifierResponseArrayOutput{})
	pulumi.RegisterOutputType(IdentityProvidersOutput{})
	pulumi.RegisterOutputType(IdentityProvidersPtrOutput{})
	pulumi.RegisterOutputType(IdentityProvidersResponseOutput{})
	pulumi.RegisterOutputType(IdentityProvidersResponsePtrOutput{})
	pulumi.RegisterOutputType(IngressOutput{})
	pulumi.RegisterOutputType(IngressPtrOutput{})
	pulumi.RegisterOutputType(IngressResponseOutput{})
	pulumi.RegisterOutputType(IngressResponsePtrOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionArrayOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseOutput{})
	pulumi.RegisterOutputType(IpSecurityRestrictionResponseArrayOutput{})
	pulumi.RegisterOutputType(JwtClaimChecksOutput{})
	pulumi.RegisterOutputType(JwtClaimChecksPtrOutput{})
	pulumi.RegisterOutputType(JwtClaimChecksResponseOutput{})
	pulumi.RegisterOutputType(JwtClaimChecksResponsePtrOutput{})
	pulumi.RegisterOutputType(KubeEnvironmentProfileOutput{})
	pulumi.RegisterOutputType(KubeEnvironmentProfilePtrOutput{})
	pulumi.RegisterOutputType(KubeEnvironmentProfileResponseOutput{})
	pulumi.RegisterOutputType(KubeEnvironmentProfileResponsePtrOutput{})
	pulumi.RegisterOutputType(LegacyMicrosoftAccountOutput{})
	pulumi.RegisterOutputType(LegacyMicrosoftAccountPtrOutput{})
	pulumi.RegisterOutputType(LegacyMicrosoftAccountResponseOutput{})
	pulumi.RegisterOutputType(LegacyMicrosoftAccountResponsePtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(LogAnalyticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LogAnalyticsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(LogAnalyticsConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(LoginOutput{})
	pulumi.RegisterOutputType(LoginPtrOutput{})
	pulumi.RegisterOutputType(LoginResponseOutput{})
	pulumi.RegisterOutputType(LoginResponsePtrOutput{})
	pulumi.RegisterOutputType(LoginRoutesOutput{})
	pulumi.RegisterOutputType(LoginRoutesPtrOutput{})
	pulumi.RegisterOutputType(LoginRoutesResponseOutput{})
	pulumi.RegisterOutputType(LoginRoutesResponsePtrOutput{})
	pulumi.RegisterOutputType(LoginScopesOutput{})
	pulumi.RegisterOutputType(LoginScopesPtrOutput{})
	pulumi.RegisterOutputType(LoginScopesResponseOutput{})
	pulumi.RegisterOutputType(LoginScopesResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(NameValuePairOutput{})
	pulumi.RegisterOutputType(NameValuePairArrayOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseOutput{})
	pulumi.RegisterOutputType(NameValuePairResponseArrayOutput{})
	pulumi.RegisterOutputType(NonceOutput{})
	pulumi.RegisterOutputType(NoncePtrOutput{})
	pulumi.RegisterOutputType(NonceResponseOutput{})
	pulumi.RegisterOutputType(NonceResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectClientCredentialOutput{})
	pulumi.RegisterOutputType(OpenIdConnectClientCredentialPtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectClientCredentialResponseOutput{})
	pulumi.RegisterOutputType(OpenIdConnectClientCredentialResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(OpenIdConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectConfigResponseOutput{})
	pulumi.RegisterOutputType(OpenIdConnectConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectLoginOutput{})
	pulumi.RegisterOutputType(OpenIdConnectLoginPtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectLoginResponseOutput{})
	pulumi.RegisterOutputType(OpenIdConnectLoginResponsePtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectRegistrationOutput{})
	pulumi.RegisterOutputType(OpenIdConnectRegistrationPtrOutput{})
	pulumi.RegisterOutputType(OpenIdConnectRegistrationResponseOutput{})
	pulumi.RegisterOutputType(OpenIdConnectRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PushSettingsOutput{})
	pulumi.RegisterOutputType(PushSettingsPtrOutput{})
	pulumi.RegisterOutputType(PushSettingsResponseOutput{})
	pulumi.RegisterOutputType(PushSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleOutput{})
	pulumi.RegisterOutputType(QueueScaleRulePtrOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(QueueScaleRuleResponsePtrOutput{})
	pulumi.RegisterOutputType(RampUpRuleOutput{})
	pulumi.RegisterOutputType(RampUpRuleArrayOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseOutput{})
	pulumi.RegisterOutputType(RampUpRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RegistryCredentialsOutput{})
	pulumi.RegisterOutputType(RegistryCredentialsArrayOutput{})
	pulumi.RegisterOutputType(RegistryCredentialsResponseOutput{})
	pulumi.RegisterOutputType(RegistryCredentialsResponseArrayOutput{})
	pulumi.RegisterOutputType(RemotePrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(RemotePrivateEndpointConnectionResponsePtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(RequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(ResponseMessageEnvelopeRemotePrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ScaleOutput{})
	pulumi.RegisterOutputType(ScalePtrOutput{})
	pulumi.RegisterOutputType(ScaleResponseOutput{})
	pulumi.RegisterOutputType(ScaleResponsePtrOutput{})
	pulumi.RegisterOutputType(ScaleRuleOutput{})
	pulumi.RegisterOutputType(ScaleRuleArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthResponseOutput{})
	pulumi.RegisterOutputType(ScaleRuleAuthResponseArrayOutput{})
	pulumi.RegisterOutputType(ScaleRuleResponseOutput{})
	pulumi.RegisterOutputType(ScaleRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecretOutput{})
	pulumi.RegisterOutputType(SecretArrayOutput{})
	pulumi.RegisterOutputType(SecretResponseOutput{})
	pulumi.RegisterOutputType(SecretResponseArrayOutput{})
	pulumi.RegisterOutputType(SiteConfigOutput{})
	pulumi.RegisterOutputType(SiteConfigPtrOutput{})
	pulumi.RegisterOutputType(SiteConfigResponseOutput{})
	pulumi.RegisterOutputType(SiteConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsOutput{})
	pulumi.RegisterOutputType(SiteLimitsPtrOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponseOutput{})
	pulumi.RegisterOutputType(SiteLimitsResponsePtrOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponseOutput{})
	pulumi.RegisterOutputType(SiteMachineKeyResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityOutput{})
	pulumi.RegisterOutputType(SkuCapacityPtrOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponseOutput{})
	pulumi.RegisterOutputType(SkuCapacityResponsePtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionOutput{})
	pulumi.RegisterOutputType(SkuDescriptionPtrOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponseOutput{})
	pulumi.RegisterOutputType(SkuDescriptionResponsePtrOutput{})
	pulumi.RegisterOutputType(SlotSwapStatusResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerPtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponsePtrOutput{})
	pulumi.RegisterOutputType(SlowRequestsBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteBuildPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteTemplateOptionsOutput{})
	pulumi.RegisterOutputType(StaticSiteTemplateOptionsPtrOutput{})
	pulumi.RegisterOutputType(StaticSiteTemplateOptionsResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteTemplateOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteUserARMResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticSiteUserProvidedFunctionAppResponseOutput{})
	pulumi.RegisterOutputType(StaticSiteUserProvidedFunctionAppResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesRangeBasedTriggerOutput{})
	pulumi.RegisterOutputType(StatusCodesRangeBasedTriggerArrayOutput{})
	pulumi.RegisterOutputType(StatusCodesRangeBasedTriggerResponseOutput{})
	pulumi.RegisterOutputType(StatusCodesRangeBasedTriggerResponseArrayOutput{})
	pulumi.RegisterOutputType(SystemDataResponseOutput{})
	pulumi.RegisterOutputType(TemplateOutput{})
	pulumi.RegisterOutputType(TemplatePtrOutput{})
	pulumi.RegisterOutputType(TemplateResponseOutput{})
	pulumi.RegisterOutputType(TemplateResponsePtrOutput{})
	pulumi.RegisterOutputType(TokenStoreOutput{})
	pulumi.RegisterOutputType(TokenStorePtrOutput{})
	pulumi.RegisterOutputType(TokenStoreResponseOutput{})
	pulumi.RegisterOutputType(TokenStoreResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficWeightOutput{})
	pulumi.RegisterOutputType(TrafficWeightArrayOutput{})
	pulumi.RegisterOutputType(TrafficWeightResponseOutput{})
	pulumi.RegisterOutputType(TrafficWeightResponseArrayOutput{})
	pulumi.RegisterOutputType(TwitterOutput{})
	pulumi.RegisterOutputType(TwitterPtrOutput{})
	pulumi.RegisterOutputType(TwitterRegistrationOutput{})
	pulumi.RegisterOutputType(TwitterRegistrationPtrOutput{})
	pulumi.RegisterOutputType(TwitterRegistrationResponseOutput{})
	pulumi.RegisterOutputType(TwitterRegistrationResponsePtrOutput{})
	pulumi.RegisterOutputType(TwitterResponseOutput{})
	pulumi.RegisterOutputType(TwitterResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualApplicationOutput{})
	pulumi.RegisterOutputType(VirtualApplicationArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplicationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryArrayOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseOutput{})
	pulumi.RegisterOutputType(VirtualDirectoryResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileOutput{})
	pulumi.RegisterOutputType(VirtualNetworkProfileResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerListCallbackUrlQueriesResponseOutput{})
	pulumi.RegisterOutputType(WorkflowTriggerListCallbackUrlQueriesResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionPtrOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionResponseOutput{})
	pulumi.RegisterOutputType(WsdlDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceOutput{})
	pulumi.RegisterOutputType(WsdlServicePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponseOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(WsdlServiceResponseArrayOutput{})
}
