// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package web

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Static Site Linked Backend ARM resource.
// API Version: 2022-03-01.
func LookupStaticSiteLinkedBackendForBuild(ctx *pulumi.Context, args *LookupStaticSiteLinkedBackendForBuildArgs, opts ...pulumi.InvokeOption) (*LookupStaticSiteLinkedBackendForBuildResult, error) {
	var rv LookupStaticSiteLinkedBackendForBuildResult
	err := ctx.Invoke("azure-native:web:getStaticSiteLinkedBackendForBuild", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupStaticSiteLinkedBackendForBuildArgs struct {
	// The stage site identifier
	EnvironmentName string `pulumi:"environmentName"`
	// Name of the linked backend that should be retrieved
	LinkedBackendName string `pulumi:"linkedBackendName"`
	// Name of the static site
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Static Site Linked Backend ARM resource.
type LookupStaticSiteLinkedBackendForBuildResult struct {
	// The resource id of the backend linked to the static site
	BackendResourceId *string `pulumi:"backendResourceId"`
	// The date and time on which the backend was linked to the static site.
	CreatedOn string `pulumi:"createdOn"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Name.
	Name string `pulumi:"name"`
	// The provisioning state of the linking process.
	ProvisioningState string `pulumi:"provisioningState"`
	// The region of the backend linked to the static site
	Region *string `pulumi:"region"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupStaticSiteLinkedBackendForBuildOutput(ctx *pulumi.Context, args LookupStaticSiteLinkedBackendForBuildOutputArgs, opts ...pulumi.InvokeOption) LookupStaticSiteLinkedBackendForBuildResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStaticSiteLinkedBackendForBuildResult, error) {
			args := v.(LookupStaticSiteLinkedBackendForBuildArgs)
			r, err := LookupStaticSiteLinkedBackendForBuild(ctx, &args, opts...)
			var s LookupStaticSiteLinkedBackendForBuildResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStaticSiteLinkedBackendForBuildResultOutput)
}

type LookupStaticSiteLinkedBackendForBuildOutputArgs struct {
	// The stage site identifier
	EnvironmentName pulumi.StringInput `pulumi:"environmentName"`
	// Name of the linked backend that should be retrieved
	LinkedBackendName pulumi.StringInput `pulumi:"linkedBackendName"`
	// Name of the static site
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupStaticSiteLinkedBackendForBuildOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticSiteLinkedBackendForBuildArgs)(nil)).Elem()
}

// Static Site Linked Backend ARM resource.
type LookupStaticSiteLinkedBackendForBuildResultOutput struct{ *pulumi.OutputState }

func (LookupStaticSiteLinkedBackendForBuildResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStaticSiteLinkedBackendForBuildResult)(nil)).Elem()
}

func (o LookupStaticSiteLinkedBackendForBuildResultOutput) ToLookupStaticSiteLinkedBackendForBuildResultOutput() LookupStaticSiteLinkedBackendForBuildResultOutput {
	return o
}

func (o LookupStaticSiteLinkedBackendForBuildResultOutput) ToLookupStaticSiteLinkedBackendForBuildResultOutputWithContext(ctx context.Context) LookupStaticSiteLinkedBackendForBuildResultOutput {
	return o
}

// The resource id of the backend linked to the static site
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) BackendResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) *string { return v.BackendResourceId }).(pulumi.StringPtrOutput)
}

// The date and time on which the backend was linked to the static site.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Resource Id.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of resource.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the linking process.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The region of the backend linked to the static site
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o LookupStaticSiteLinkedBackendForBuildResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStaticSiteLinkedBackendForBuildResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStaticSiteLinkedBackendForBuildResultOutput{})
}
