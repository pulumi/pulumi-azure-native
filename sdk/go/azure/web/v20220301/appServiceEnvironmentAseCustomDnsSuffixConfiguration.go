// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Full view of the custom domain suffix configuration for ASEv3.
type AppServiceEnvironmentAseCustomDnsSuffixConfiguration struct {
	pulumi.CustomResourceState

	// The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
	CertificateUrl pulumi.StringPtrOutput `pulumi:"certificateUrl"`
	// The default custom domain suffix to use for all sites deployed on the ASE.
	DnsSuffix pulumi.StringPtrOutput `pulumi:"dnsSuffix"`
	// The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
	KeyVaultReferenceIdentity pulumi.StringPtrOutput `pulumi:"keyVaultReferenceIdentity"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Resource Name.
	Name                pulumi.StringOutput `pulumi:"name"`
	ProvisioningDetails pulumi.StringOutput `pulumi:"provisioningDetails"`
	ProvisioningState   pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAppServiceEnvironmentAseCustomDnsSuffixConfiguration registers a new resource with the given unique name, arguments, and options.
func NewAppServiceEnvironmentAseCustomDnsSuffixConfiguration(ctx *pulumi.Context,
	name string, args *AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs, opts ...pulumi.ResourceOption) (*AppServiceEnvironmentAseCustomDnsSuffixConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-native:web:AppServiceEnvironmentAseCustomDnsSuffixConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource AppServiceEnvironmentAseCustomDnsSuffixConfiguration
	err := ctx.RegisterResource("azure-native:web/v20220301:AppServiceEnvironmentAseCustomDnsSuffixConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppServiceEnvironmentAseCustomDnsSuffixConfiguration gets an existing AppServiceEnvironmentAseCustomDnsSuffixConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppServiceEnvironmentAseCustomDnsSuffixConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppServiceEnvironmentAseCustomDnsSuffixConfigurationState, opts ...pulumi.ResourceOption) (*AppServiceEnvironmentAseCustomDnsSuffixConfiguration, error) {
	var resource AppServiceEnvironmentAseCustomDnsSuffixConfiguration
	err := ctx.ReadResource("azure-native:web/v20220301:AppServiceEnvironmentAseCustomDnsSuffixConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppServiceEnvironmentAseCustomDnsSuffixConfiguration resources.
type appServiceEnvironmentAseCustomDnsSuffixConfigurationState struct {
}

type AppServiceEnvironmentAseCustomDnsSuffixConfigurationState struct {
}

func (AppServiceEnvironmentAseCustomDnsSuffixConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentAseCustomDnsSuffixConfigurationState)(nil)).Elem()
}

type appServiceEnvironmentAseCustomDnsSuffixConfigurationArgs struct {
	// The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
	CertificateUrl *string `pulumi:"certificateUrl"`
	// The default custom domain suffix to use for all sites deployed on the ASE.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
	KeyVaultReferenceIdentity *string `pulumi:"keyVaultReferenceIdentity"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Name of the App Service Environment.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a AppServiceEnvironmentAseCustomDnsSuffixConfiguration resource.
type AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs struct {
	// The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
	CertificateUrl pulumi.StringPtrInput
	// The default custom domain suffix to use for all sites deployed on the ASE.
	DnsSuffix pulumi.StringPtrInput
	// The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
	KeyVaultReferenceIdentity pulumi.StringPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Name of the App Service Environment.
	Name pulumi.StringInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
}

func (AppServiceEnvironmentAseCustomDnsSuffixConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appServiceEnvironmentAseCustomDnsSuffixConfigurationArgs)(nil)).Elem()
}

type AppServiceEnvironmentAseCustomDnsSuffixConfigurationInput interface {
	pulumi.Input

	ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput() AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput
	ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutputWithContext(ctx context.Context) AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput
}

func (*AppServiceEnvironmentAseCustomDnsSuffixConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentAseCustomDnsSuffixConfiguration)(nil)).Elem()
}

func (i *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput() AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput {
	return i.ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutputWithContext(context.Background())
}

func (i *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutputWithContext(ctx context.Context) AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput)
}

type AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput struct{ *pulumi.OutputState }

func (AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceEnvironmentAseCustomDnsSuffixConfiguration)(nil)).Elem()
}

func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput() AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput {
	return o
}

func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) ToAppServiceEnvironmentAseCustomDnsSuffixConfigurationOutputWithContext(ctx context.Context) AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput {
	return o
}

// The URL referencing the Azure Key Vault certificate secret that should be used as the default SSL/TLS certificate for sites with the custom domain suffix.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) CertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringPtrOutput {
		return v.CertificateUrl
	}).(pulumi.StringPtrOutput)
}

// The default custom domain suffix to use for all sites deployed on the ASE.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) DnsSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringPtrOutput {
		return v.DnsSuffix
	}).(pulumi.StringPtrOutput)
}

// The user-assigned identity to use for resolving the key vault certificate reference. If not specified, the system-assigned ASE identity will be used if available.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) KeyVaultReferenceIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringPtrOutput {
		return v.KeyVaultReferenceIdentity
	}).(pulumi.StringPtrOutput)
}

// Kind of resource.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Name.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) ProvisioningDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringOutput {
		return v.ProvisioningDetails
	}).(pulumi.StringOutput)
}

func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringOutput {
		return v.ProvisioningState
	}).(pulumi.StringOutput)
}

// Resource type.
func (o AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppServiceEnvironmentAseCustomDnsSuffixConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AppServiceEnvironmentAseCustomDnsSuffixConfigurationOutput{})
}
