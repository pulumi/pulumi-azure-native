// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20220301

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Kubernetes cluster specialized for web workloads by Azure App Service
func LookupKubeEnvironment(ctx *pulumi.Context, args *LookupKubeEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupKubeEnvironmentResult, error) {
	var rv LookupKubeEnvironmentResult
	err := ctx.Invoke("azure-native:web/v20220301:getKubeEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKubeEnvironmentArgs struct {
	// Name of the Kubernetes Environment.
	Name string `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A Kubernetes cluster specialized for web workloads by Azure App Service
type LookupKubeEnvironmentResult struct {
	AksResourceID *string `pulumi:"aksResourceID"`
	// Cluster configuration which enables the log daemon to export
	// app logs to a destination. Currently only "log-analytics" is
	// supported
	AppLogsConfiguration *AppLogsConfigurationResponse `pulumi:"appLogsConfiguration"`
	// Cluster configuration which determines the ARC cluster
	// components types. Eg: Choosing between BuildService kind,
	// FrontEnd Service ArtifactsStorageType etc.
	ArcConfiguration *ArcConfigurationResponse `pulumi:"arcConfiguration"`
	// Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration
	ContainerAppsConfiguration *ContainerAppsConfigurationResponse `pulumi:"containerAppsConfiguration"`
	// Default Domain Name for the cluster
	DefaultDomain string `pulumi:"defaultDomain"`
	// Any errors that occurred during deployment or deployment validation
	DeploymentErrors string `pulumi:"deploymentErrors"`
	// Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed
	EnvironmentType *string `pulumi:"environmentType"`
	// Extended Location.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource Id.
	Id string `pulumi:"id"`
	// Only visible within Vnet/Subnet
	InternalLoadBalancerEnabled *bool `pulumi:"internalLoadBalancerEnabled"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Resource Location.
	Location string `pulumi:"location"`
	// Resource Name.
	Name string `pulumi:"name"`
	// Provisioning state of the Kubernetes Environment.
	ProvisioningState string `pulumi:"provisioningState"`
	// Static IP of the KubeEnvironment
	StaticIp *string `pulumi:"staticIp"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

func LookupKubeEnvironmentOutput(ctx *pulumi.Context, args LookupKubeEnvironmentOutputArgs, opts ...pulumi.InvokeOption) LookupKubeEnvironmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKubeEnvironmentResult, error) {
			args := v.(LookupKubeEnvironmentArgs)
			r, err := LookupKubeEnvironment(ctx, &args, opts...)
			var s LookupKubeEnvironmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKubeEnvironmentResultOutput)
}

type LookupKubeEnvironmentOutputArgs struct {
	// Name of the Kubernetes Environment.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupKubeEnvironmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubeEnvironmentArgs)(nil)).Elem()
}

// A Kubernetes cluster specialized for web workloads by Azure App Service
type LookupKubeEnvironmentResultOutput struct{ *pulumi.OutputState }

func (LookupKubeEnvironmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubeEnvironmentResult)(nil)).Elem()
}

func (o LookupKubeEnvironmentResultOutput) ToLookupKubeEnvironmentResultOutput() LookupKubeEnvironmentResultOutput {
	return o
}

func (o LookupKubeEnvironmentResultOutput) ToLookupKubeEnvironmentResultOutputWithContext(ctx context.Context) LookupKubeEnvironmentResultOutput {
	return o
}

func (o LookupKubeEnvironmentResultOutput) AksResourceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *string { return v.AksResourceID }).(pulumi.StringPtrOutput)
}

// Cluster configuration which enables the log daemon to export
// app logs to a destination. Currently only "log-analytics" is
// supported
func (o LookupKubeEnvironmentResultOutput) AppLogsConfiguration() AppLogsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *AppLogsConfigurationResponse { return v.AppLogsConfiguration }).(AppLogsConfigurationResponsePtrOutput)
}

// Cluster configuration which determines the ARC cluster
// components types. Eg: Choosing between BuildService kind,
// FrontEnd Service ArtifactsStorageType etc.
func (o LookupKubeEnvironmentResultOutput) ArcConfiguration() ArcConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *ArcConfigurationResponse { return v.ArcConfiguration }).(ArcConfigurationResponsePtrOutput)
}

// Cluster configuration for Container Apps Environments to configure Dapr Instrumentation Key and VNET Configuration
func (o LookupKubeEnvironmentResultOutput) ContainerAppsConfiguration() ContainerAppsConfigurationResponsePtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *ContainerAppsConfigurationResponse {
		return v.ContainerAppsConfiguration
	}).(ContainerAppsConfigurationResponsePtrOutput)
}

// Default Domain Name for the cluster
func (o LookupKubeEnvironmentResultOutput) DefaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.DefaultDomain }).(pulumi.StringOutput)
}

// Any errors that occurred during deployment or deployment validation
func (o LookupKubeEnvironmentResultOutput) DeploymentErrors() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.DeploymentErrors }).(pulumi.StringOutput)
}

// Type of Kubernetes Environment. Only supported for Container App Environments with value as Managed
func (o LookupKubeEnvironmentResultOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

// Extended Location.
func (o LookupKubeEnvironmentResultOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource Id.
func (o LookupKubeEnvironmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Only visible within Vnet/Subnet
func (o LookupKubeEnvironmentResultOutput) InternalLoadBalancerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *bool { return v.InternalLoadBalancerEnabled }).(pulumi.BoolPtrOutput)
}

// Kind of resource.
func (o LookupKubeEnvironmentResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Resource Location.
func (o LookupKubeEnvironmentResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.Location }).(pulumi.StringOutput)
}

// Resource Name.
func (o LookupKubeEnvironmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// Provisioning state of the Kubernetes Environment.
func (o LookupKubeEnvironmentResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Static IP of the KubeEnvironment
func (o LookupKubeEnvironmentResultOutput) StaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) *string { return v.StaticIp }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LookupKubeEnvironmentResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LookupKubeEnvironmentResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubeEnvironmentResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubeEnvironmentResultOutput{})
}
